cscope 15 /Volumes/Ubuntu/home/tusbea/mydata/openwrt/build_dir/target-mips_34kc_uClibc-0.9.33.2/linux-ar71xx_generic/compat-wireless-2014-05-22/drivers/net/wireless/ath/ath9k               0001681220
	@ahb.c

19 
	~<löux/∆80211.h
>

20 
	~<löux/∂©f‹m_devi˚.h
>

21 
	~<löux/©h9k_∂©f‹m.h
>

22 
	~<löux/moduÀ.h
>

23 
	~"©h9k.h
"

25 c⁄° 
∂©f‹m_devi˚_id
 
	g©h9k_∂©f‹m_id_èbÀ
[] = {

27 .
«me
 = "ath9k",

28 .
	gdrivî_d©a
 = 
AR5416_AR9100_DEVID
,

31 .
	g«me
 = "ar933x_wmac",

32 .
	gdrivî_d©a
 = 
AR9300_DEVID_AR9330
,

35 .
	g«me
 = "ar934x_wmac",

36 .
	gdrivî_d©a
 = 
AR9300_DEVID_AR9340
,

39 .
	g«me
 = "qca955x_wmac",

40 .
	gdrivî_d©a
 = 
AR9300_DEVID_QCA955X
,

43 .
	g«me
 = "qca953x_wmac",

44 .
	gdrivî_d©a
 = 
AR9300_DEVID_AR953X
,

50 
	$©h_ahb_ªad_ˇchesize
(
©h_comm⁄
 *
comm⁄
, *
csz
)

52 *
csz
 = 
L1_CACHE_BYTES
 >> 2;

53 
	}
}

55 
boﬁ
 
	$©h_ahb_ì¥om_ªad
(
©h_comm⁄
 *
comm⁄
, 
u32
 
off
, 
u16
 *
d©a
)

57 
©h_so·c
 *
sc
 = (©h_so·¯*)
comm⁄
->
¥iv
;

58 
∂©f‹m_devi˚
 *
pdev
 = 
	`to_∂©f‹m_devi˚
(
sc
->
dev
);

59 
©h9k_∂©f‹m_d©a
 *
pd©a
;

61 
pd©a
 = 
	`dev_gë_∂©d©a
(&
pdev
->
dev
);

62 i‡(
off
 >(
	`ARRAY_SIZE
(
pd©a
->
ì¥om_d©a
))) {

63 
	`©h_îr
(
comm⁄
,

65 
__func__
, 
off
);

66  
Ál£
;

69 *
d©a
 = 
pd©a
->
ì¥om_d©a
[
off
];

70  
åue
;

71 
	}
}

73 
©h_bus_›s
 
	g©h_ahb_bus_›s
 = {

74 .
©h_bus_ty≥
 = 
ATH_AHB
,

75 .
	gªad_ˇchesize
 = 
©h_ahb_ªad_ˇchesize
,

76 .
	gì¥om_ªad
 = 
©h_ahb_ì¥om_ªad
,

79 
	$©h_ahb_¥obe
(
∂©f‹m_devi˚
 *
pdev
)

81 
__iomem
 *
mem
;

82 
©h_so·c
 *
sc
;

83 
õì80211_hw
 *
hw
;

84 
ªsour˚
 *
ªs
;

85 c⁄° 
∂©f‹m_devi˚_id
 *
id
 = 
	`∂©f‹m_gë_devi˚_id
(
pdev
);

86 
úq
;

87 
ªt
 = 0;

88 
©h_hw
 *
ah
;

89 
hw_«me
[64];

91 i‡(!
	`dev_gë_∂©d©a
(&
pdev
->
dev
)) {

92 
	`dev_îr
(&
pdev
->
dev
, "noÖlatform data specified\n");

93  -
EINVAL
;

96 
ªs
 = 
	`∂©f‹m_gë_ªsour˚
(
pdev
, 
IORESOURCE_MEM
, 0);

97 i‡(
ªs
 =
NULL
) {

98 
	`dev_îr
(&
pdev
->
dev
, "no memoryÑesource found\n");

99  -
ENXIO
;

102 
mem
 = 
	`devm_i‹em≠_noˇche
(&
pdev
->
dev
, 
ªs
->
°¨t
, 
	`ªsour˚_size
(res));

103 i‡(
mem
 =
NULL
) {

104 
	`dev_îr
(&
pdev
->
dev
, "ioremap failed\n");

105  -
ENOMEM
;

108 
ªs
 = 
	`∂©f‹m_gë_ªsour˚
(
pdev
, 
IORESOURCE_IRQ
, 0);

109 i‡(
ªs
 =
NULL
) {

110 
	`dev_îr
(&
pdev
->
dev
, "no IRQÑesource found\n");

111  -
ENXIO
;

114 
úq
 = 
ªs
->
°¨t
;

116 
hw
 = 
	`õì80211_Æloc_hw
((
©h_so·c
), &
©h9k_›s
);

117 i‡(
hw
 =
NULL
) {

118 
	`dev_îr
(&
pdev
->
dev
, "no memory for ieee80211_hw\n");

119  -
ENOMEM
;

122 
	`SET_IEEE80211_DEV
(
hw
, &
pdev
->
dev
);

123 
	`∂©f‹m_£t_drvd©a
(
pdev
, 
hw
);

125 
sc
 = 
hw
->
¥iv
;

126 
sc
->
hw
 = hw;

127 
sc
->
dev
 = &
pdev
->dev;

128 
sc
->
mem
 = mem;

129 
sc
->
úq
 = irq;

131 
ªt
 = 
	`ªque°_úq
(
úq
, 
©h_i§
, 
IRQF_SHARED
, "©h9k", 
sc
);

132 i‡(
ªt
) {

133 
	`dev_îr
(&
pdev
->
dev
, "request_irq failed\n");

134 
îr_‰ì_hw
;

137 
ªt
 = 
	`©h9k_öô_devi˚
(
id
->
drivî_d©a
, 
sc
, &
©h_ahb_bus_›s
);

138 i‡(
ªt
) {

139 
	`dev_îr
(&
pdev
->
dev
, "failedÅo initialize device\n");

140 
îr_úq
;

143 
ah
 = 
sc
->
sc_ah
;

144 
	`©h9k_hw_«me
(
ah
, 
hw_«me
, (hw_name));

145 
	`wùhy_öfo
(
hw
->
wùhy
, "%s mem=0x%lx, irq=%d\n",

146 
hw_«me
, ()
mem
, 
úq
);

150 
îr_úq
:

151 
	`‰ì_úq
(
úq
, 
sc
);

152 
îr_‰ì_hw
:

153 
	`õì80211_‰ì_hw
(
hw
);

154  
ªt
;

155 
	}
}

157 
	$©h_ahb_ªmove
(
∂©f‹m_devi˚
 *
pdev
)

159 
õì80211_hw
 *
hw
 = 
	`∂©f‹m_gë_drvd©a
(
pdev
);

161 i‡(
hw
) {

162 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

164 
	`©h9k_deöô_devi˚
(
sc
);

165 
	`‰ì_úq
(
sc
->
úq
, sc);

166 
	`õì80211_‰ì_hw
(
sc
->
hw
);

170 
	}
}

172 
∂©f‹m_drivî
 
	g©h_ahb_drivî
 = {

173 .
¥obe
 = 
©h_ahb_¥obe
,

174 .
	gªmove
 = 
©h_ahb_ªmove
,

175 .
	gdrivî
 = {

176 .
«me
 = "ath9k",

177 .
	gow√r
 = 
THIS_MODULE
,

179 .
	gid_èbÀ
 = 
©h9k_∂©f‹m_id_èbÀ
,

182 
MODULE_DEVICE_TABLE
(
∂©f‹m
, 
©h9k_∂©f‹m_id_èbÀ
);

184 
	$©h_ahb_öô
()

186  
	`∂©f‹m_drivî_ªgi°î
(&
©h_ahb_drivî
);

187 
	}
}

189 
	$©h_ahb_exô
()

191 
	`∂©f‹m_drivî_uƒegi°î
(&
©h_ahb_drivî
);

192 
	}
}

	@ani.c

17 
	~<löux/kî√l.h
>

18 
	~<löux/exp‹t.h
>

19 
	~"hw.h
"

20 
	~"hw-›s.h
"

22 
	s™i_ofdm_Àvñ_íåy
 {

23 
	m•ur_immunôy_Àvñ
;

24 
	mfú_°ï_Àvñ
;

25 
	mofdm_wók_sig«l_⁄
;

39 c⁄° 
™i_ofdm_Àvñ_íåy
 
	gofdm_Àvñ_èbÀ
[] = {

52 
	#ATH9K_ANI_OFDM_NUM_LEVEL
 \

53 
	`ARRAY_SIZE
(
ofdm_Àvñ_èbÀ
)

	)

54 
	#ATH9K_ANI_OFDM_MAX_LEVEL
 \

55 (
ATH9K_ANI_OFDM_NUM_LEVEL
-1)

	)

56 
	#ATH9K_ANI_OFDM_DEF_LEVEL
 \

57 3

	)

80 
	s™i_cck_Àvñ_íåy
 {

81 
	mfú_°ï_Àvñ
;

82 
	mmrc_cck_⁄
;

85 c⁄° 
™i_cck_Àvñ_íåy
 
	gcck_Àvñ_èbÀ
[] = {

98 
	#ATH9K_ANI_CCK_NUM_LEVEL
 \

99 
	`ARRAY_SIZE
(
cck_Àvñ_èbÀ
)

	)

100 
	#ATH9K_ANI_CCK_MAX_LEVEL
 \

101 (
ATH9K_ANI_CCK_NUM_LEVEL
-1)

	)

102 
	#ATH9K_ANI_CCK_MAX_LEVEL_LOW_RSSI
 \

103 (
ATH9K_ANI_CCK_NUM_LEVEL
-3)

	)

104 
	#ATH9K_ANI_CCK_DEF_LEVEL
 \

105 2

	)

107 
	$©h9k_hw_upd©e_mib°©s
(
©h_hw
 *
ah
,

108 
©h9k_mib_°©s
 *
°©s
)

110 
°©s
->
ackrcv_bad
 +
	`REG_READ
(
ah
, 
AR_ACK_FAIL
);

111 
°©s
->
πs_bad
 +
	`REG_READ
(
ah
, 
AR_RTS_FAIL
);

112 
°©s
->
fcs_bad
 +
	`REG_READ
(
ah
, 
AR_FCS_FAIL
);

113 
°©s
->
πs_good
 +
	`REG_READ
(
ah
, 
AR_RTS_OK
);

114 
°©s
->
bóc⁄s
 +
	`REG_READ
(
ah
, 
AR_BEACON_CNT
);

115 
	}
}

117 
	$©h9k_™i_ª°¨t
(
©h_hw
 *
ah
)

119 
¨5416AniSèã
 *
™iSèã
;

121 i‡(!
ah
->
curch™
)

124 
™iSèã
 = &
ah
->
™i
;

125 
™iSèã
->
li°íTime
 = 0;

127 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

129 
	`REG_WRITE
(
ah
, 
AR_PHY_ERR_1
, 0);

130 
	`REG_WRITE
(
ah
, 
AR_PHY_ERR_2
, 0);

131 
	`REG_WRITE
(
ah
, 
AR_PHY_ERR_MASK_1
, 
AR_PHY_ERR_OFDM_TIMING
);

132 
	`REG_WRITE
(
ah
, 
AR_PHY_ERR_MASK_2
, 
AR_PHY_ERR_CCK_TIMING
);

134 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

136 
	`©h9k_hw_upd©e_mib°©s
(
ah
, &ah->
ah_mibSèts
);

138 
™iSèã
->
ofdmPhyEºCou¡
 = 0;

139 
™iSèã
->
cckPhyEºCou¡
 = 0;

140 
	}
}

143 
	$©h9k_hw_£t_ofdm_nû
(
©h_hw
 *
ah
, 
u8
 
immunôyLevñ
,

144 
boﬁ
 
sˇn
)

146 
¨5416AniSèã
 *
™iSèã
 = &
ah
->
™i
;

147 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

148 c⁄° 
™i_ofdm_Àvñ_íåy
 *
íåy_ofdm
;

149 c⁄° 
™i_cck_Àvñ_íåy
 *
íåy_cck
;

150 
boﬁ
 
wók_sig
;

152 
	`©h_dbg
(
comm⁄
, 
ANI
, "**** ofdmlevel %d=>%d,Ñssi=%d[lo=%d hi=%d]\n",

153 
™iSèã
->
ofdmNoi£ImmunôyLevñ
,

154 
immunôyLevñ
, 
	`BEACON_RSSI
(
ah
),

155 
ATH9K_ANI_RSSI_THR_LOW
,

156 
ATH9K_ANI_RSSI_THR_HIGH
);

158 i‡(
	`AR_SREV_9100
(
ah
Ë&& 
immunôyLevñ
 < 
ATH9K_ANI_OFDM_DEF_LEVEL
)

159 
immunôyLevñ
 = 
ATH9K_ANI_OFDM_DEF_LEVEL
;

161 i‡(!
sˇn
)

162 
™iSèã
->
ofdmNoi£ImmunôyLevñ
 = 
immunôyLevñ
;

164 
íåy_ofdm
 = &
ofdm_Àvñ_èbÀ
[
™iSèã
->
ofdmNoi£ImmunôyLevñ
];

165 
íåy_cck
 = &
cck_Àvñ_èbÀ
[
™iSèã
->
cckNoi£ImmunôyLevñ
];

167 i‡(
™iSèã
->
•urImmunôyLevñ
 !
íåy_ofdm
->
•ur_immunôy_Àvñ
)

168 
	`©h9k_hw_™i_c⁄åﬁ
(
ah
,

169 
ATH9K_ANI_SPUR_IMMUNITY_LEVEL
,

170 
íåy_ofdm
->
•ur_immunôy_Àvñ
);

172 i‡(
™iSèã
->
fú°ïLevñ
 !
íåy_ofdm
->
fú_°ï_Àvñ
 &&

173 
íåy_ofdm
->
fú_°ï_Àvñ
 >
íåy_cck
->fir_step_level)

174 
	`©h9k_hw_™i_c⁄åﬁ
(
ah
,

175 
ATH9K_ANI_FIRSTEP_LEVEL
,

176 
íåy_ofdm
->
fú_°ï_Àvñ
);

178 
wók_sig
 = 
íåy_ofdm
->
ofdm_wók_sig«l_⁄
;

179 i‡(
ah
->
›mode
 =
NL80211_IFTYPE_STATION
 &&

180 
	`BEACON_RSSI
(
ah
Ë<
ATH9K_ANI_RSSI_THR_HIGH
)

181 
wók_sig
 = 
åue
;

187 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
) &&

188 
ah
->
›mode
 !
NL80211_IFTYPE_STATION
)

189 
wók_sig
 = 
åue
;

192 i‡(!
	`AR_SREV_9300_20_OR_LATER
(
ah
) &&

193 
™iSèã
->
ofdmNoi£ImmunôyLevñ
 >= 8)

194 
wók_sig
 = 
Ál£
;

196 i‡(
™iSèã
->
ofdmWókSigDëe˘
 !
wók_sig
)

197 
	`©h9k_hw_™i_c⁄åﬁ
(
ah
, 
ATH9K_ANI_OFDM_WEAK_SIGNAL_DETECTION
,

198 
wók_sig
);

200 i‡(!
	`AR_SREV_9300_20_OR_LATER
(
ah
))

203 i‡(
™iSèã
->
ofdmNoi£ImmunôyLevñ
 >
ATH9K_ANI_OFDM_DEF_LEVEL
) {

204 
ah
->
c⁄fig
.
ofdm_åig_high
 = 
ATH9K_ANI_OFDM_TRIG_HIGH
;

205 
ah
->
c⁄fig
.
ofdm_åig_low
 = 
ATH9K_ANI_OFDM_TRIG_LOW_ABOVE_INI
;

207 
ah
->
c⁄fig
.
ofdm_åig_high
 = 
ATH9K_ANI_OFDM_TRIG_HIGH_BELOW_INI
;

208 
ah
->
c⁄fig
.
ofdm_åig_low
 = 
ATH9K_ANI_OFDM_TRIG_LOW
;

210 
	}
}

212 
	$©h9k_hw_™i_ofdm_îr_åiggî
(
©h_hw
 *
ah
)

214 
¨5416AniSèã
 *
™iSèã
;

216 i‡(!
ah
->
curch™
)

219 
™iSèã
 = &
ah
->
™i
;

221 i‡(
™iSèã
->
ofdmNoi£ImmunôyLevñ
 < 
ATH9K_ANI_OFDM_MAX_LEVEL
)

222 
	`©h9k_hw_£t_ofdm_nû
(
ah
, 
™iSèã
->
ofdmNoi£ImmunôyLevñ
 + 1, 
Ál£
);

223 
	}
}

228 
	$©h9k_hw_£t_cck_nû
(
©h_hw
 *
ah
, 
u_öt8_t
 
immunôyLevñ
,

229 
boﬁ
 
sˇn
)

231 
¨5416AniSèã
 *
™iSèã
 = &
ah
->
™i
;

232 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

233 c⁄° 
™i_ofdm_Àvñ_íåy
 *
íåy_ofdm
;

234 c⁄° 
™i_cck_Àvñ_íåy
 *
íåy_cck
;

236 
	`©h_dbg
(
comm⁄
, 
ANI
, "**** ccklevel %d=>%d,Ñssi=%d[lo=%d hi=%d]\n",

237 
™iSèã
->
cckNoi£ImmunôyLevñ
, 
immunôyLevñ
,

238 
	`BEACON_RSSI
(
ah
), 
ATH9K_ANI_RSSI_THR_LOW
,

239 
ATH9K_ANI_RSSI_THR_HIGH
);

241 i‡(
	`AR_SREV_9100
(
ah
Ë&& 
immunôyLevñ
 < 
ATH9K_ANI_CCK_DEF_LEVEL
)

242 
immunôyLevñ
 = 
ATH9K_ANI_CCK_DEF_LEVEL
;

244 i‡(
ah
->
›mode
 =
NL80211_IFTYPE_STATION
 &&

245 
	`BEACON_RSSI
(
ah
Ë<
ATH9K_ANI_RSSI_THR_LOW
 &&

246 
immunôyLevñ
 > 
ATH9K_ANI_CCK_MAX_LEVEL_LOW_RSSI
)

247 
immunôyLevñ
 = 
ATH9K_ANI_CCK_MAX_LEVEL_LOW_RSSI
;

249 i‡(!
sˇn
)

250 
™iSèã
->
cckNoi£ImmunôyLevñ
 = 
immunôyLevñ
;

252 
íåy_ofdm
 = &
ofdm_Àvñ_èbÀ
[
™iSèã
->
ofdmNoi£ImmunôyLevñ
];

253 
íåy_cck
 = &
cck_Àvñ_èbÀ
[
™iSèã
->
cckNoi£ImmunôyLevñ
];

255 i‡(
™iSèã
->
fú°ïLevñ
 !
íåy_cck
->
fú_°ï_Àvñ
 &&

256 
íåy_cck
->
fú_°ï_Àvñ
 >
íåy_ofdm
->fir_step_level)

257 
	`©h9k_hw_™i_c⁄åﬁ
(
ah
,

258 
ATH9K_ANI_FIRSTEP_LEVEL
,

259 
íåy_cck
->
fú_°ï_Àvñ
);

262 i‡(!
	`AR_SREV_9300_20_OR_LATER
(
ah
Ë|| 
	`AR_SREV_9485
◊hË|| 
	`AR_SREV_9565
(ah))

265 i‡(
™iSèã
->
mrcCCK
 !
íåy_cck
->
mrc_cck_⁄
)

266 
	`©h9k_hw_™i_c⁄åﬁ
(
ah
,

267 
ATH9K_ANI_MRC_CCK
,

268 
íåy_cck
->
mrc_cck_⁄
);

269 
	}
}

271 
	$©h9k_hw_™i_cck_îr_åiggî
(
©h_hw
 *
ah
)

273 
¨5416AniSèã
 *
™iSèã
;

275 i‡(!
ah
->
curch™
)

278 
™iSèã
 = &
ah
->
™i
;

280 i‡(
™iSèã
->
cckNoi£ImmunôyLevñ
 < 
ATH9K_ANI_CCK_MAX_LEVEL
)

281 
	`©h9k_hw_£t_cck_nû
(
ah
, 
™iSèã
->
cckNoi£ImmunôyLevñ
 + 1,

282 
Ál£
);

283 
	}
}

289 
	$©h9k_hw_™i_lowî_immunôy
(
©h_hw
 *
ah
)

291 
¨5416AniSèã
 *
™iSèã
;

293 
™iSèã
 = &
ah
->
™i
;

296 i‡(
™iSèã
->
ofdmNoi£ImmunôyLevñ
 > 0 &&

297 (
™iSèã
->
ofdmsTu∫
 ||ániSèã->
cckNoi£ImmunôyLevñ
 == 0)) {

298 
	`©h9k_hw_£t_ofdm_nû
(
ah
, 
™iSèã
->
ofdmNoi£ImmunôyLevñ
 - 1,

299 
Ál£
);

304 i‡(
™iSèã
->
cckNoi£ImmunôyLevñ
 > 0)

305 
	`©h9k_hw_£t_cck_nû
(
ah
, 
™iSèã
->
cckNoi£ImmunôyLevñ
 - 1,

306 
Ál£
);

307 
	}
}

314 
	$©h9k_™i_ª£t
(
©h_hw
 *
ah
, 
boﬁ
 
is_sˇ¬ög
)

316 
¨5416AniSèã
 *
™iSèã
 = &
ah
->
™i
;

317 
©h9k_ch™√l
 *
ch™
 = 
ah
->
curch™
;

318 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

319 
ofdm_nû
, 
cck_nû
;

321 i‡(!
ah
->
curch™
)

324 
	`BUG_ON
(
™iSèã
 =
NULL
);

325 
ah
->
°©s
.
a°_™i_ª£t
++;

327 
ofdm_nû
 = 
	`max_t
(, 
ATH9K_ANI_OFDM_DEF_LEVEL
,

328 
™iSèã
->
ofdmNoi£ImmunôyLevñ
);

329 
cck_nû
 = 
	`max_t
(, 
ATH9K_ANI_CCK_DEF_LEVEL
,

330 
™iSèã
->
cckNoi£ImmunôyLevñ
);

332 i‡(
is_sˇ¬ög
 ||

333 (
ah
->
›mode
 !
NL80211_IFTYPE_STATION
 &&

334 
ah
->
›mode
 !
NL80211_IFTYPE_ADHOC
)) {

341 i‡(
™iSèã
->
ofdmNoi£ImmunôyLevñ
 !=

342 
ATH9K_ANI_OFDM_DEF_LEVEL
 ||

343 
™iSèã
->
cckNoi£ImmunôyLevñ
 !=

344 
ATH9K_ANI_CCK_DEF_LEVEL
) {

345 
	`©h_dbg
(
comm⁄
, 
ANI
,

347 
ah
->
›mode
,

348 
ch™
->
ch™√l
,

349 
is_sˇ¬ög
,

350 
™iSèã
->
ofdmNoi£ImmunôyLevñ
,

351 
™iSèã
->
cckNoi£ImmunôyLevñ
);

353 
ofdm_nû
 = 
ATH9K_ANI_OFDM_DEF_LEVEL
;

354 
cck_nû
 = 
ATH9K_ANI_CCK_DEF_LEVEL
;

360 
	`©h_dbg
(
comm⁄
, 
ANI
,

362 
ah
->
›mode
,

363 
ch™
->
ch™√l
,

364 
is_sˇ¬ög
,

365 
™iSèã
->
ofdmNoi£ImmunôyLevñ
,

366 
™iSèã
->
cckNoi£ImmunôyLevñ
);

368 
	`©h9k_hw_£t_ofdm_nû
(
ah
, 
ofdm_nû
, 
is_sˇ¬ög
);

369 
	`©h9k_hw_£t_cck_nû
(
ah
, 
cck_nû
, 
is_sˇ¬ög
);

371 
	`©h9k_™i_ª°¨t
(
ah
);

372 
	}
}

374 
boﬁ
 
	$©h9k_hw_™i_ªad_cou¡îs
(
©h_hw
 *
ah
)

376 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

377 
¨5416AniSèã
 *
™iSèã
 = &
ah
->
™i
;

378 
u32
 
phyC¡1
, 
phyC¡2
;

379 
öt32_t
 
li°íTime
;

381 
	`©h_hw_cy˛e_cou¡îs_upd©e
(
comm⁄
);

382 
li°íTime
 = 
	`©h_hw_gë_li°í_time
(
comm⁄
);

384 i‡(
li°íTime
 <= 0) {

385 
ah
->
°©s
.
a°_™i_ eg_‹_lzîo
++;

386 
	`©h9k_™i_ª°¨t
(
ah
);

387  
Ál£
;

390 
™iSèã
->
li°íTime
 +=ÜistenTime;

392 
	`©h9k_hw_upd©e_mib°©s
(
ah
, &ah->
ah_mibSèts
);

394 
phyC¡1
 = 
	`REG_READ
(
ah
, 
AR_PHY_ERR_1
);

395 
phyC¡2
 = 
	`REG_READ
(
ah
, 
AR_PHY_ERR_2
);

397 
ah
->
°©s
.
a°_™i_ofdmîrs
 +
phyC¡1
 - 
™iSèã
->
ofdmPhyEºCou¡
;

398 
™iSèã
->
ofdmPhyEºCou¡
 = 
phyC¡1
;

400 
ah
->
°©s
.
a°_™i_cckîrs
 +
phyC¡2
 - 
™iSèã
->
cckPhyEºCou¡
;

401 
™iSèã
->
cckPhyEºCou¡
 = 
phyC¡2
;

403  
åue
;

404 
	}
}

406 
	$©h9k_hw_™i_m⁄ô‹
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
)

408 
¨5416AniSèã
 *
™iSèã
;

409 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

410 
u32
 
ofdmPhyEºR©e
, 
cckPhyEºR©e
;

412 i‡(!
ah
->
curch™
)

415 
™iSèã
 = &
ah
->
™i
;

416 i‡(!
	`©h9k_hw_™i_ªad_cou¡îs
(
ah
))

419 
ofdmPhyEºR©e
 = 
™iSèã
->
ofdmPhyEºCou¡
 * 1000 /

420 
™iSèã
->
li°íTime
;

421 
cckPhyEºR©e
 = 
™iSèã
->
cckPhyEºCou¡
 * 1000 /

422 
™iSèã
->
li°íTime
;

424 
	`©h_dbg
(
comm⁄
, 
ANI
,

426 
™iSèã
->
li°íTime
,

427 
™iSèã
->
ofdmNoi£ImmunôyLevñ
,

428 
ofdmPhyEºR©e
, 
™iSèã
->
cckNoi£ImmunôyLevñ
,

429 
cckPhyEºR©e
, 
™iSèã
->
ofdmsTu∫
);

431 i‡(
™iSèã
->
li°íTime
 > 
ah
->
™ùîiod
) {

432 i‡(
cckPhyEºR©e
 < 
ah
->
c⁄fig
.
cck_åig_low
 &&

433 
ofdmPhyEºR©e
 < 
ah
->
c⁄fig
.
ofdm_åig_low
) {

434 
	`©h9k_hw_™i_lowî_immunôy
(
ah
);

435 
™iSèã
->
ofdmsTu∫
 = !aniState->ofdmsTurn;

436 } i‡(
ofdmPhyEºR©e
 > 
ah
->
c⁄fig
.
ofdm_åig_high
) {

437 
	`©h9k_hw_™i_ofdm_îr_åiggî
(
ah
);

438 
™iSèã
->
ofdmsTu∫
 = 
Ál£
;

439 } i‡(
cckPhyEºR©e
 > 
ah
->
c⁄fig
.
cck_åig_high
) {

440 
	`©h9k_hw_™i_cck_îr_åiggî
(
ah
);

441 
™iSèã
->
ofdmsTu∫
 = 
åue
;

443 
	`©h9k_™i_ª°¨t
(
ah
);

445 
	}
}

446 
EXPORT_SYMBOL
(
©h9k_hw_™i_m⁄ô‹
);

448 
	$©h9k_íabÀ_mib_cou¡îs
(
©h_hw
 *
ah
)

450 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

452 
	`©h_dbg
(
comm⁄
, 
ANI
, "Enable MIB counters\n");

454 
	`©h9k_hw_upd©e_mib°©s
(
ah
, &ah->
ah_mibSèts
);

456 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

458 
	`REG_WRITE
(
ah
, 
AR_FILT_OFDM
, 0);

459 
	`REG_WRITE
(
ah
, 
AR_FILT_CCK
, 0);

460 
	`REG_WRITE
(
ah
, 
AR_MIBC
,

461 ~(
AR_MIBC_COW
 | 
AR_MIBC_FMC
 | 
AR_MIBC_CMC
 | 
AR_MIBC_MCS
)

463 
	`REG_WRITE
(
ah
, 
AR_PHY_ERR_MASK_1
, 
AR_PHY_ERR_OFDM_TIMING
);

464 
	`REG_WRITE
(
ah
, 
AR_PHY_ERR_MASK_2
, 
AR_PHY_ERR_CCK_TIMING
);

466 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

467 
	}
}

470 
	$©h9k_hw_dißbÀ_mib_cou¡îs
(
©h_hw
 *
ah
)

472 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

474 
	`©h_dbg
(
comm⁄
, 
ANI
, "Disable MIB counters\n");

476 
	`REG_WRITE
(
ah
, 
AR_MIBC
, 
AR_MIBC_FMC
);

477 
	`©h9k_hw_upd©e_mib°©s
(
ah
, &ah->
ah_mibSèts
);

478 
	`REG_WRITE
(
ah
, 
AR_MIBC
, 
AR_MIBC_CMC
);

479 
	`REG_WRITE
(
ah
, 
AR_FILT_OFDM
, 0);

480 
	`REG_WRITE
(
ah
, 
AR_FILT_CCK
, 0);

481 
	}
}

482 
EXPORT_SYMBOL
(
©h9k_hw_dißbÀ_mib_cou¡îs
);

484 
	$©h9k_hw_™i_öô
(
©h_hw
 *
ah
)

486 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

487 
¨5416AniSèã
 *
™i
 = &
ah
->ani;

489 
	`©h_dbg
(
comm⁄
, 
ANI
, "Initialize ANI\n");

491 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
)) {

492 
ah
->
c⁄fig
.
ofdm_åig_high
 = 
ATH9K_ANI_OFDM_TRIG_HIGH
;

493 
ah
->
c⁄fig
.
ofdm_åig_low
 = 
ATH9K_ANI_OFDM_TRIG_LOW
;

494 
ah
->
c⁄fig
.
cck_åig_high
 = 
ATH9K_ANI_CCK_TRIG_HIGH
;

495 
ah
->
c⁄fig
.
cck_åig_low
 = 
ATH9K_ANI_CCK_TRIG_LOW
;

497 
ah
->
c⁄fig
.
ofdm_åig_high
 = 
ATH9K_ANI_OFDM_TRIG_HIGH_OLD
;

498 
ah
->
c⁄fig
.
ofdm_åig_low
 = 
ATH9K_ANI_OFDM_TRIG_LOW_OLD
;

499 
ah
->
c⁄fig
.
cck_åig_high
 = 
ATH9K_ANI_CCK_TRIG_HIGH_OLD
;

500 
ah
->
c⁄fig
.
cck_åig_low
 = 
ATH9K_ANI_CCK_TRIG_LOW_OLD
;

503 
™i
->
•urImmunôyLevñ
 = 
ATH9K_ANI_SPUR_IMMUNE_LVL
;

504 
™i
->
fú°ïLevñ
 = 
ATH9K_ANI_FIRSTEP_LVL
;

505 
™i
->
mrcCCK
 = 
	`AR_SREV_9300_20_OR_LATER
(
ah
Ë? 
åue
 : 
Ál£
;

506 
™i
->
ofdmsTu∫
 = 
åue
;

507 
™i
->
ofdmWókSigDëe˘
 = 
åue
;

508 
™i
->
cckNoi£ImmunôyLevñ
 = 
ATH9K_ANI_CCK_DEF_LEVEL
;

509 
™i
->
ofdmNoi£ImmunôyLevñ
 = 
ATH9K_ANI_OFDM_DEF_LEVEL
;

515 
ah
->
™ùîiod
 = 
ATH9K_ANI_PERIOD
;

516 
ah
->
c⁄fig
.
™i_pﬁl_öãrvÆ
 = 
ATH9K_ANI_POLLINTERVAL
;

518 
	`©h9k_™i_ª°¨t
(
ah
);

519 
	`©h9k_íabÀ_mib_cou¡îs
(
ah
);

520 
	}
}

	@ani.h

17 #i‚de‡
ANI_H


18 
	#ANI_H


	)

20 
	#BEACON_RSSI
(
ahp
Ë◊hp->
°©s
.
avgbrssi
)

	)

23 
	#ATH9K_ANI_OFDM_TRIG_HIGH
 3500

	)

24 
	#ATH9K_ANI_OFDM_TRIG_HIGH_BELOW_INI
 1000

	)

25 
	#ATH9K_ANI_OFDM_TRIG_HIGH_OLD
 500

	)

27 
	#ATH9K_ANI_OFDM_TRIG_LOW
 400

	)

28 
	#ATH9K_ANI_OFDM_TRIG_LOW_ABOVE_INI
 900

	)

29 
	#ATH9K_ANI_OFDM_TRIG_LOW_OLD
 200

	)

31 
	#ATH9K_ANI_CCK_TRIG_HIGH
 600

	)

32 
	#ATH9K_ANI_CCK_TRIG_HIGH_OLD
 200

	)

33 
	#ATH9K_ANI_CCK_TRIG_LOW
 300

	)

34 
	#ATH9K_ANI_CCK_TRIG_LOW_OLD
 100

	)

36 
	#ATH9K_ANI_SPUR_IMMUNE_LVL
 3

	)

37 
	#ATH9K_ANI_FIRSTEP_LVL
 2

	)

39 
	#ATH9K_ANI_RSSI_THR_HIGH
 40

	)

40 
	#ATH9K_ANI_RSSI_THR_LOW
 7

	)

42 
	#ATH9K_ANI_PERIOD
 300

	)

45 
	#ATH9K_ANI_POLLINTERVAL
 300

	)

47 
	#ATH9K_SIG_FIRSTEP_SETTING_MIN
 0

	)

48 
	#ATH9K_SIG_FIRSTEP_SETTING_MAX
 20

	)

49 
	#ATH9K_SIG_SPUR_IMM_SETTING_MIN
 0

	)

50 
	#ATH9K_SIG_SPUR_IMM_SETTING_MAX
 22

	)

54 
	e©h9k_™i_cmd
 {

55 
	mATH9K_ANI_OFDM_WEAK_SIGNAL_DETECTION
 = 0x1,

56 
	mATH9K_ANI_FIRSTEP_LEVEL
 = 0x2,

57 
	mATH9K_ANI_SPUR_IMMUNITY_LEVEL
 = 0x4,

58 
	mATH9K_ANI_MRC_CCK
 = 0x8,

59 
	mATH9K_ANI_ALL
 = 0xfff

62 
	s©h9k_mib_°©s
 {

63 
u32
 
	mackrcv_bad
;

64 
u32
 
	mπs_bad
;

65 
u32
 
	mπs_good
;

66 
u32
 
	mfcs_bad
;

67 
u32
 
	mbóc⁄s
;

71 
	s©h9k_™i_deÁu…
 {

72 
u16
 
	mm1ThªshLow
;

73 
u16
 
	mm2ThªshLow
;

74 
u16
 
	mm1Thªsh
;

75 
u16
 
	mm2Thªsh
;

76 
u16
 
	mm2Cou¡Thr
;

77 
u16
 
	mm2Cou¡ThrLow
;

78 
u16
 
	mm1ThªshLowExt
;

79 
u16
 
	mm2ThªshLowExt
;

80 
u16
 
	mm1ThªshExt
;

81 
u16
 
	mm2ThªshExt
;

82 
u16
 
	mfú°ï
;

83 
u16
 
	mfú°ïLow
;

84 
u16
 
	mcy˝wrThr1
;

85 
u16
 
	mcy˝wrThr1Ext
;

88 
	s¨5416AniSèã
 {

89 
u8
 
	mnoi£ImmunôyLevñ
;

90 
u8
 
	mofdmNoi£ImmunôyLevñ
;

91 
u8
 
	mcckNoi£ImmunôyLevñ
;

92 
boﬁ
 
	mofdmsTu∫
;

93 
u8
 
	mmrcCCK
;

94 
u8
 
	m•urImmunôyLevñ
;

95 
u8
 
	mfú°ïLevñ
;

96 
boﬁ
 
	mofdmWókSigDëe˘
;

97 
u32
 
	mli°íTime
;

98 
u32
 
	mofdmPhyEºCou¡
;

99 
u32
 
	mcckPhyEºCou¡
;

100 
©h9k_™i_deÁu…
 
	möiDef
;

103 
	s¨5416Sèts
 {

104 
u32
 
	ma°_™i_•urup
;

105 
u32
 
	ma°_™i_•urdown
;

106 
u32
 
	ma°_™i_ofdm⁄
;

107 
u32
 
	ma°_™i_ofdmoff
;

108 
u32
 
	ma°_™i_cckhigh
;

109 
u32
 
	ma°_™i_ccklow
;

110 
u32
 
	ma°_™i_°ïup
;

111 
u32
 
	ma°_™i_°ïdown
;

112 
u32
 
	ma°_™i_ofdmîrs
;

113 
u32
 
	ma°_™i_cckîrs
;

114 
u32
 
	ma°_™i_ª£t
;

115 
u32
 
	ma°_™i_ eg_‹_lzîo
;

116 
u32
 
	mavgbrssi
;

117 
©h9k_mib_°©s
 
	ma°_mib°©s
;

119 
	#ah_mibSèts
 
°©s
.
a°_mib°©s


	)

121 
©h9k_íabÀ_mib_cou¡îs
(
©h_hw
 *
ah
);

122 
©h9k_hw_dißbÀ_mib_cou¡îs
(
©h_hw
 *
ah
);

123 
©h9k_hw_™i_öô
(
©h_hw
 *
ah
);

	@antenna.c

17 
	~"©h9k.h
"

71 
ölöe
 
boﬁ
 
	$©h_is_Æt_™t_øtio_bëãr
(
©h_™t_comb
 *
™tcomb
,

72 
Æt_øtio
, 
maxdñè
,

73 
mödñè
, 
maö_rssi_avg
,

74 
Æt_rssi_avg
, 
pkt_cou¡
)

76 i‡(
pkt_cou¡
 <= 50)

77  
Ál£
;

79 i‡(
Æt_rssi_avg
 > 
maö_rssi_avg
 + 
mödñè
)

80  
åue
;

82 i‡(
Æt_øtio
 >
™tcomb
->
™t_øtio2
 &&

83 
Æt_rssi_avg
 >
™tcomb
->
low_rssi_thªsh
 &&

84 (
Æt_rssi_avg
 > 
maö_rssi_avg
 + 
maxdñè
))

85  
åue
;

87  
Ál£
;

88 
	}
}

90 
ölöe
 
boﬁ
 
	$©h_™t_div_comb_Æt_check
(
©h_hw_™tcomb_c⁄f
 *
c⁄f
,

91 
©h_™t_comb
 *
™tcomb
,

92 
Æt_øtio
, 
Æt_rssi_avg
,

93 
maö_rssi_avg
)

95 
boﬁ
 
ªsu…
, 
£t1
, 
£t2
;

97 
ªsu…
 = 
£t1
 = 
£t2
 = 
Ál£
;

99 i‡(
c⁄f
->
maö_ a_c⁄f
 =
ATH_ANT_DIV_COMB_LNA2
 &&

100 
c⁄f
->
Æt_ a_c⁄f
 =
ATH_ANT_DIV_COMB_LNA1
)

101 
£t1
 = 
åue
;

103 i‡(
c⁄f
->
maö_ a_c⁄f
 =
ATH_ANT_DIV_COMB_LNA1
 &&

104 
c⁄f
->
Æt_ a_c⁄f
 =
ATH_ANT_DIV_COMB_LNA2
)

105 
£t2
 = 
åue
;

107 
c⁄f
->
div_group
) {

109 i‡(
Æt_øtio
 > 
ATH_ANT_DIV_COMB_ALT_ANT_RATIO
)

110 
ªsu…
 = 
åue
;

114 i‡(
Æt_rssi_avg
 < 4 ||á…_rssi_avg < 
™tcomb
->
low_rssi_thªsh
)

117 i‡((
£t1
 && (
Æt_rssi_avg
 >(
maö_rssi_avg
 - 5))) ||

118 (
£t2
 && (
Æt_rssi_avg
 >(
maö_rssi_avg
 - 2))) ||

119 (
Æt_øtio
 > 
™tcomb
->
™t_øtio
))

120 
ªsu…
 = 
åue
;

124 i‡(
Æt_rssi_avg
 < 4 ||á…_rssi_avg < 
™tcomb
->
low_rssi_thªsh
)

127 i‡((
£t1
 && (
Æt_rssi_avg
 >(
maö_rssi_avg
 - 3))) ||

128 (
£t2
 && (
Æt_rssi_avg
 >(
maö_rssi_avg
 + 3))) ||

129 (
Æt_øtio
 > 
™tcomb
->
™t_øtio
))

130 
ªsu…
 = 
åue
;

135  
ªsu…
;

136 
	}
}

138 
	$©h_ ac⁄f_Æt_good_sˇn
(
©h_™t_comb
 *
™tcomb
,

139 
©h_hw_™tcomb_c⁄f
 
™t_c⁄f
,

140 
maö_rssi_avg
)

142 
™tcomb
->
quick_sˇn_˙t
 = 0;

144 i‡(
™t_c⁄f
.
maö_ a_c⁄f
 =
ATH_ANT_DIV_COMB_LNA2
)

145 
™tcomb
->
rssi_ a2
 = 
maö_rssi_avg
;

146 i‡(
™t_c⁄f
.
maö_ a_c⁄f
 =
ATH_ANT_DIV_COMB_LNA1
)

147 
™tcomb
->
rssi_ a1
 = 
maö_rssi_avg
;

149 (
™t_c⁄f
.
maö_ a_c⁄f
 << 4Ë|á¡_c⁄f.
Æt_ a_c⁄f
) {

151 
™tcomb
->
maö_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1_MINUS_LNA2
;

152 
™tcomb
->
fú°_quick_sˇn_c⁄f
 =

153 
ATH_ANT_DIV_COMB_LNA1_PLUS_LNA2
;

154 
™tcomb
->
£c⁄d_quick_sˇn_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1
;

157 
™tcomb
->
maö_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1_MINUS_LNA2
;

158 
™tcomb
->
fú°_quick_sˇn_c⁄f
 =

159 
ATH_ANT_DIV_COMB_LNA1_PLUS_LNA2
;

160 
™tcomb
->
£c⁄d_quick_sˇn_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA2
;

163 
™tcomb
->
maö_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA2
;

164 
™tcomb
->
fú°_quick_sˇn_c⁄f
 =

165 
ATH_ANT_DIV_COMB_LNA1_MINUS_LNA2
;

166 
™tcomb
->
£c⁄d_quick_sˇn_c⁄f
 =

167 
ATH_ANT_DIV_COMB_LNA1_PLUS_LNA2
;

170 
™tcomb
->
maö_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1
;

171 
™tcomb
->
fú°_quick_sˇn_c⁄f
 =

172 
ATH_ANT_DIV_COMB_LNA1_MINUS_LNA2
;

173 
™tcomb
->
£c⁄d_quick_sˇn_c⁄f
 =

174 
ATH_ANT_DIV_COMB_LNA1_PLUS_LNA2
;

177 
™tcomb
->
maö_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1_PLUS_LNA2
;

178 
™tcomb
->
fú°_quick_sˇn_c⁄f
 =

179 
ATH_ANT_DIV_COMB_LNA1_MINUS_LNA2
;

180 
™tcomb
->
£c⁄d_quick_sˇn_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1
;

183 
™tcomb
->
maö_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1_PLUS_LNA2
;

184 
™tcomb
->
fú°_quick_sˇn_c⁄f
 =

185 
ATH_ANT_DIV_COMB_LNA1_MINUS_LNA2
;

186 
™tcomb
->
£c⁄d_quick_sˇn_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA2
;

191 
	}
}

193 
	$©h_™t_£t_Æt_øtio
(
©h_™t_comb
 *
™tcomb
,

194 
©h_hw_™tcomb_c⁄f
 *
c⁄f
)

197 i‡(
™tcomb
->
fú°_øtio
 &&á¡comb->
£c⁄d_øtio
) {

198 i‡(
™tcomb
->
rssi_£c⁄d
 >á¡comb->
rssi_thúd
) {

200 i‡((
™tcomb
->
fú°_quick_sˇn_c⁄f
 =
ATH_ANT_DIV_COMB_LNA1
) ||

201 (
™tcomb
->
fú°_quick_sˇn_c⁄f
 =
ATH_ANT_DIV_COMB_LNA2
))

203 i‡(
c⁄f
->
maö_ a_c⁄f
 =
ATH_ANT_DIV_COMB_LNA2
)

204 
c⁄f
->
Æt_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1
;

206 
c⁄f
->
Æt_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA2
;

209 
c⁄f
->
Æt_ a_c⁄f
 =

210 
™tcomb
->
fú°_quick_sˇn_c⁄f
;

211 } i‡((
™tcomb
->
£c⁄d_quick_sˇn_c⁄f
 =
ATH_ANT_DIV_COMB_LNA1
) ||

212 (
™tcomb
->
£c⁄d_quick_sˇn_c⁄f
 =
ATH_ANT_DIV_COMB_LNA2
)) {

214 i‡(
c⁄f
->
maö_ a_c⁄f
 =
ATH_ANT_DIV_COMB_LNA2
)

215 
c⁄f
->
Æt_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1
;

217 
c⁄f
->
Æt_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA2
;

220 
c⁄f
->
Æt_ a_c⁄f
 = 
™tcomb
->
£c⁄d_quick_sˇn_c⁄f
;

222 } i‡(
™tcomb
->
fú°_øtio
) {

224 i‡((
™tcomb
->
fú°_quick_sˇn_c⁄f
 =
ATH_ANT_DIV_COMB_LNA1
) ||

225 (
™tcomb
->
fú°_quick_sˇn_c⁄f
 =
ATH_ANT_DIV_COMB_LNA2
))

227 i‡(
c⁄f
->
maö_ a_c⁄f
 =
ATH_ANT_DIV_COMB_LNA2
)

228 
c⁄f
->
Æt_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1
;

230 
c⁄f
->
Æt_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA2
;

233 
c⁄f
->
Æt_ a_c⁄f
 = 
™tcomb
->
fú°_quick_sˇn_c⁄f
;

234 } i‡(
™tcomb
->
£c⁄d_øtio
) {

236 i‡((
™tcomb
->
£c⁄d_quick_sˇn_c⁄f
 =
ATH_ANT_DIV_COMB_LNA1
) ||

237 (
™tcomb
->
£c⁄d_quick_sˇn_c⁄f
 =
ATH_ANT_DIV_COMB_LNA2
))

239 i‡(
c⁄f
->
maö_ a_c⁄f
 =
ATH_ANT_DIV_COMB_LNA2
)

240 
c⁄f
->
Æt_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1
;

242 
c⁄f
->
Æt_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA2
;

245 
c⁄f
->
Æt_ a_c⁄f
 = 
™tcomb
->
£c⁄d_quick_sˇn_c⁄f
;

248 i‡((
™tcomb
->
maö_c⁄f
 =
ATH_ANT_DIV_COMB_LNA1
) ||

249 (
™tcomb
->
maö_c⁄f
 =
ATH_ANT_DIV_COMB_LNA2
))

251 i‡(
c⁄f
->
maö_ a_c⁄f
 =
ATH_ANT_DIV_COMB_LNA2
)

252 
c⁄f
->
Æt_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1
;

254 
c⁄f
->
Æt_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA2
;

257 
c⁄f
->
Æt_ a_c⁄f
 = 
™tcomb
->
maö_c⁄f
;

259 
	}
}

261 
	$©h_£À˘_™t_div_‰om_quick_sˇn
(
©h_™t_comb
 *
™tcomb
,

262 
©h_hw_™tcomb_c⁄f
 *
div_™t_c⁄f
,

263 
maö_rssi_avg
, 
Æt_rssi_avg
,

264 
Æt_øtio
)

267 
™tcomb
->
quick_sˇn_˙t
) {

270 
div_™t_c⁄f
->
maö_ a_c⁄f
 = 
™tcomb
->
maö_c⁄f
;

271 
div_™t_c⁄f
->
Æt_ a_c⁄f
 = 
™tcomb
->
fú°_quick_sˇn_c⁄f
;

275 
div_™t_c⁄f
->
maö_ a_c⁄f
 = 
™tcomb
->
maö_c⁄f
;

276 
div_™t_c⁄f
->
Æt_ a_c⁄f
 = 
™tcomb
->
£c⁄d_quick_sˇn_c⁄f
;

277 
™tcomb
->
rssi_fú°
 = 
maö_rssi_avg
;

278 
™tcomb
->
rssi_£c⁄d
 = 
Æt_rssi_avg
;

280 i‡(
™tcomb
->
maö_c⁄f
 =
ATH_ANT_DIV_COMB_LNA1
) {

282 i‡(
	`©h_is_Æt_™t_øtio_bëãr
(
™tcomb
, 
Æt_øtio
,

283 
ATH_ANT_DIV_COMB_LNA1_DELTA_HI
,

284 
ATH_ANT_DIV_COMB_LNA1_DELTA_LOW
,

285 
maö_rssi_avg
, 
Æt_rssi_avg
,

286 
™tcomb
->
tŸÆ_pkt_cou¡
))

287 
™tcomb
->
fú°_øtio
 = 
åue
;

289 
™tcomb
->
fú°_øtio
 = 
Ál£
;

290 } i‡(
™tcomb
->
maö_c⁄f
 =
ATH_ANT_DIV_COMB_LNA2
) {

291 i‡(
	`©h_is_Æt_™t_øtio_bëãr
(
™tcomb
, 
Æt_øtio
,

292 
ATH_ANT_DIV_COMB_LNA1_DELTA_MID
,

293 
ATH_ANT_DIV_COMB_LNA1_DELTA_LOW
,

294 
maö_rssi_avg
, 
Æt_rssi_avg
,

295 
™tcomb
->
tŸÆ_pkt_cou¡
))

296 
™tcomb
->
fú°_øtio
 = 
åue
;

298 
™tcomb
->
fú°_øtio
 = 
Ál£
;

300 i‡(
	`©h_is_Æt_™t_øtio_bëãr
(
™tcomb
, 
Æt_øtio
,

301 
ATH_ANT_DIV_COMB_LNA1_DELTA_HI
,

303 
maö_rssi_avg
, 
Æt_rssi_avg
,

304 
™tcomb
->
tŸÆ_pkt_cou¡
))

305 
™tcomb
->
fú°_øtio
 = 
åue
;

307 
™tcomb
->
fú°_øtio
 = 
Ál£
;

311 
™tcomb
->
Æt_good
 = 
Ál£
;

312 
™tcomb
->
sˇn_nŸ_°¨t
 = 
Ál£
;

313 
™tcomb
->
sˇn
 = 
Ál£
;

314 
™tcomb
->
rssi_fú°
 = 
maö_rssi_avg
;

315 
™tcomb
->
rssi_thúd
 = 
Æt_rssi_avg
;

317 
™tcomb
->
£c⁄d_quick_sˇn_c⁄f
) {

318 
ATH_ANT_DIV_COMB_LNA1
:

319 
™tcomb
->
rssi_ a1
 = 
Æt_rssi_avg
;

321 
ATH_ANT_DIV_COMB_LNA2
:

322 
™tcomb
->
rssi_ a2
 = 
Æt_rssi_avg
;

324 
ATH_ANT_DIV_COMB_LNA1_PLUS_LNA2
:

325 i‡(
™tcomb
->
maö_c⁄f
 =
ATH_ANT_DIV_COMB_LNA2
)

326 
™tcomb
->
rssi_ a2
 = 
maö_rssi_avg
;

327 i‡(
™tcomb
->
maö_c⁄f
 =
ATH_ANT_DIV_COMB_LNA1
)

328 
™tcomb
->
rssi_ a1
 = 
maö_rssi_avg
;

334 i‡(
™tcomb
->
rssi_ a2
 >á¡comb->
rssi_ a1
 +

335 
div_™t_c⁄f
->
 a1_ a2_swôch_dñè
)

336 
div_™t_c⁄f
->
maö_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA2
;

338 
div_™t_c⁄f
->
maö_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1
;

340 i‡(
™tcomb
->
maö_c⁄f
 =
ATH_ANT_DIV_COMB_LNA1
) {

341 i‡(
	`©h_is_Æt_™t_øtio_bëãr
(
™tcomb
, 
Æt_øtio
,

342 
ATH_ANT_DIV_COMB_LNA1_DELTA_HI
,

343 
ATH_ANT_DIV_COMB_LNA1_DELTA_LOW
,

344 
maö_rssi_avg
, 
Æt_rssi_avg
,

345 
™tcomb
->
tŸÆ_pkt_cou¡
))

346 
™tcomb
->
£c⁄d_øtio
 = 
åue
;

348 
™tcomb
->
£c⁄d_øtio
 = 
Ál£
;

349 } i‡(
™tcomb
->
maö_c⁄f
 =
ATH_ANT_DIV_COMB_LNA2
) {

350 i‡(
	`©h_is_Æt_™t_øtio_bëãr
(
™tcomb
, 
Æt_øtio
,

351 
ATH_ANT_DIV_COMB_LNA1_DELTA_MID
,

352 
ATH_ANT_DIV_COMB_LNA1_DELTA_LOW
,

353 
maö_rssi_avg
, 
Æt_rssi_avg
,

354 
™tcomb
->
tŸÆ_pkt_cou¡
))

355 
™tcomb
->
£c⁄d_øtio
 = 
åue
;

357 
™tcomb
->
£c⁄d_øtio
 = 
Ál£
;

359 i‡(
	`©h_is_Æt_™t_øtio_bëãr
(
™tcomb
, 
Æt_øtio
,

360 
ATH_ANT_DIV_COMB_LNA1_DELTA_HI
,

362 
maö_rssi_avg
, 
Æt_rssi_avg
,

363 
™tcomb
->
tŸÆ_pkt_cou¡
))

364 
™tcomb
->
£c⁄d_øtio
 = 
åue
;

366 
™tcomb
->
£c⁄d_øtio
 = 
Ál£
;

369 
	`©h_™t_£t_Æt_øtio
(
™tcomb
, 
div_™t_c⁄f
);

375 
	}
}

377 
	$©h_™t_div_c⁄f_Á°_divbüs
(
©h_hw_™tcomb_c⁄f
 *
™t_c⁄f
,

378 
©h_™t_comb
 *
™tcomb
,

379 
Æt_øtio
)

381 
™t_c⁄f
->
maö_gaötb
 = 0;

382 
™t_c⁄f
->
Æt_gaötb
 = 0;

384 i‡(
™t_c⁄f
->
div_group
 == 0) {

386 (
™t_c⁄f
->
maö_ a_c⁄f
 << 4) |

387 
™t_c⁄f
->
Æt_ a_c⁄f
) {

389 
™t_c⁄f
->
Á°_div_büs
 = 0x3b;

392 
™t_c⁄f
->
Á°_div_büs
 = 0x3d;

395 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

398 
™t_c⁄f
->
Á°_div_büs
 = 0x7;

401 
™t_c⁄f
->
Á°_div_büs
 = 0x2;

404 
™t_c⁄f
->
Á°_div_büs
 = 0x7;

407 
™t_c⁄f
->
Á°_div_büs
 = 0x6;

410 
™t_c⁄f
->
Á°_div_büs
 = 0x0;

413 
™t_c⁄f
->
Á°_div_büs
 = 0x6;

416 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

419 
™t_c⁄f
->
Á°_div_büs
 = 0x3b;

422 
™t_c⁄f
->
Á°_div_büs
 = 0x3d;

427 } i‡(
™t_c⁄f
->
div_group
 == 1) {

429 (
™t_c⁄f
->
maö_ a_c⁄f
 << 4) |

430 
™t_c⁄f
->
Æt_ a_c⁄f
) {

432 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

435 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

438 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

441 i‡(!(
™tcomb
->
sˇn
) &&

442 (
Æt_øtio
 > 
ATH_ANT_DIV_COMB_ALT_ANT_RATIO
))

443 
™t_c⁄f
->
Á°_div_büs
 = 0x3f;

445 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

448 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

451 i‡(!(
™tcomb
->
sˇn
) &&

452 (
Æt_øtio
 > 
ATH_ANT_DIV_COMB_ALT_ANT_RATIO
))

453 
™t_c⁄f
->
Á°_div_büs
 = 0x3f;

455 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

458 i‡(!(
™tcomb
->
sˇn
) &&

459 (
Æt_øtio
 > 
ATH_ANT_DIV_COMB_ALT_ANT_RATIO
))

460 
™t_c⁄f
->
Á°_div_büs
 = 0x3f;

462 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

465 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

468 i‡(!(
™tcomb
->
sˇn
) &&

469 (
Æt_øtio
 > 
ATH_ANT_DIV_COMB_ALT_ANT_RATIO
))

470 
™t_c⁄f
->
Á°_div_büs
 = 0x3f;

472 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

475 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

478 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

481 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

486 } i‡(
™t_c⁄f
->
div_group
 == 2) {

488 (
™t_c⁄f
->
maö_ a_c⁄f
 << 4) |

489 
™t_c⁄f
->
Æt_ a_c⁄f
) {

491 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

494 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

497 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

500 i‡(!
™tcomb
->
sˇn
 && (
Æt_øtio
 >á¡comb->
™t_øtio
))

501 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

503 
™t_c⁄f
->
Á°_div_büs
 = 0x2;

506 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

509 i‡(!
™tcomb
->
sˇn
 && (
Æt_øtio
 >á¡comb->
™t_øtio
))

510 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

512 
™t_c⁄f
->
Á°_div_büs
 = 0x2;

515 i‡(!
™tcomb
->
sˇn
 && (
Æt_øtio
 >á¡comb->
™t_øtio
))

516 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

518 
™t_c⁄f
->
Á°_div_büs
 = 0x2;

521 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

524 i‡(!
™tcomb
->
sˇn
 && (
Æt_øtio
 >á¡comb->
™t_øtio
))

525 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

527 
™t_c⁄f
->
Á°_div_büs
 = 0x2;

530 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

533 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

536 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

542 i‡(
™tcomb
->
Á°_div_büs
)

543 
™t_c⁄f
->
Á°_div_büs
 = 
™tcomb
->fast_div_bias;

544 } i‡(
™t_c⁄f
->
div_group
 == 3) {

545 (
™t_c⁄f
->
maö_ a_c⁄f
 << 4) |

546 
™t_c⁄f
->
Æt_ a_c⁄f
) {

548 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

551 
™t_c⁄f
->
Á°_div_büs
 = 0x39;

554 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

557 
™t_c⁄f
->
Á°_div_büs
 = 0x2;

560 
™t_c⁄f
->
Á°_div_büs
 = 0x3f;

563 
™t_c⁄f
->
Á°_div_büs
 = 0x2;

566 
™t_c⁄f
->
Á°_div_büs
 = 0x3;

569 
™t_c⁄f
->
Á°_div_büs
 = 0x3;

572 
™t_c⁄f
->
Á°_div_büs
 = 0x3;

575 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

578 
™t_c⁄f
->
Á°_div_büs
 = 0x6;

581 
™t_c⁄f
->
Á°_div_büs
 = 0x1;

587 
	}
}

589 
	$©h_™t_åy_sˇn
(
©h_™t_comb
 *
™tcomb
,

590 
©h_hw_™tcomb_c⁄f
 *
c⁄f
,

591 
cuº_Æt_£t
, 
Æt_rssi_avg
,

592 
maö_rssi_avg
)

594 
cuº_Æt_£t
) {

595 
ATH_ANT_DIV_COMB_LNA2
:

596 
™tcomb
->
rssi_ a2
 = 
Æt_rssi_avg
;

597 
™tcomb
->
rssi_ a1
 = 
maö_rssi_avg
;

598 
™tcomb
->
sˇn
 = 
åue
;

600 
c⁄f
->
maö_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1
;

601 
c⁄f
->
Æt_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1_PLUS_LNA2
;

603 
ATH_ANT_DIV_COMB_LNA1
:

604 
™tcomb
->
rssi_ a1
 = 
Æt_rssi_avg
;

605 
™tcomb
->
rssi_ a2
 = 
maö_rssi_avg
;

606 
™tcomb
->
sˇn
 = 
åue
;

608 
c⁄f
->
maö_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA2
;

609 
c⁄f
->
Æt_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1_PLUS_LNA2
;

611 
ATH_ANT_DIV_COMB_LNA1_PLUS_LNA2
:

612 
™tcomb
->
rssi_add
 = 
Æt_rssi_avg
;

613 
™tcomb
->
sˇn
 = 
åue
;

615 
c⁄f
->
Æt_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1_MINUS_LNA2
;

617 
ATH_ANT_DIV_COMB_LNA1_MINUS_LNA2
:

618 
™tcomb
->
rssi_sub
 = 
Æt_rssi_avg
;

619 
™tcomb
->
sˇn
 = 
Ál£
;

620 i‡(
™tcomb
->
rssi_ a2
 >

621 (
™tcomb
->
rssi_ a1
 + 
c⁄f
->
 a1_ a2_swôch_dñè
)) {

623 i‡((
™tcomb
->
rssi_add
 >á¡comb->
rssi_ a1
) &&

624 (
™tcomb
->
rssi_add
 >á¡comb->
rssi_sub
)) {

626 
c⁄f
->
maö_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA2
;

627 
c⁄f
->
Æt_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1_PLUS_LNA2
;

628 } i‡(
™tcomb
->
rssi_sub
 >

629 
™tcomb
->
rssi_ a1
) {

631 
c⁄f
->
maö_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA2
;

632 
c⁄f
->
Æt_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1_MINUS_LNA2
;

635 
c⁄f
->
maö_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA2
;

636 
c⁄f
->
Æt_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1
;

640 i‡((
™tcomb
->
rssi_add
 >á¡comb->
rssi_ a2
) &&

641 (
™tcomb
->
rssi_add
 >á¡comb->
rssi_sub
)) {

643 
c⁄f
->
maö_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1
;

644 
c⁄f
->
Æt_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1_PLUS_LNA2
;

645 } i‡(
™tcomb
->
rssi_sub
 >

646 
™tcomb
->
rssi_ a1
) {

648 
c⁄f
->
maö_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1
;

649 
c⁄f
->
Æt_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1_MINUS_LNA2
;

652 
c⁄f
->
maö_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1
;

653 
c⁄f
->
Æt_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA2
;

660 
	}
}

662 
boﬁ
 
	$©h_™t_åy_swôch
(
©h_hw_™tcomb_c⁄f
 *
div_™t_c⁄f
,

663 
©h_™t_comb
 *
™tcomb
,

664 
Æt_øtio
, 
Æt_rssi_avg
,

665 
maö_rssi_avg
, 
cuº_maö_£t
,

666 
cuº_Æt_£t
)

668 
boﬁ
 
ªt
 = 
Ál£
;

670 i‡(
	`©h_™t_div_comb_Æt_check
(
div_™t_c⁄f
, 
™tcomb
, 
Æt_øtio
,

671 
Æt_rssi_avg
, 
maö_rssi_avg
)) {

672 i‡(
cuº_Æt_£t
 =
ATH_ANT_DIV_COMB_LNA2
) {

676 
div_™t_c⁄f
->
maö_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA2
;

677 
div_™t_c⁄f
->
Æt_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1
;

678 } i‡(
cuº_Æt_£t
 =
ATH_ANT_DIV_COMB_LNA1
) {

679 
div_™t_c⁄f
->
maö_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1
;

680 
div_™t_c⁄f
->
Æt_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA2
;

683 
ªt
 = 
åue
;

684 } i‡((
cuº_Æt_£t
 !
ATH_ANT_DIV_COMB_LNA1
) &&

685 (
cuº_Æt_£t
 !
ATH_ANT_DIV_COMB_LNA2
)) {

689 i‡(
cuº_maö_£t
 =
ATH_ANT_DIV_COMB_LNA2
)

690 
div_™t_c⁄f
->
Æt_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA1
;

691 i‡(
cuº_maö_£t
 =
ATH_ANT_DIV_COMB_LNA1
)

692 
div_™t_c⁄f
->
Æt_ a_c⁄f
 = 
ATH_ANT_DIV_COMB_LNA2
;

694 
ªt
 = 
åue
;

697  
ªt
;

698 
	}
}

700 
boﬁ
 
	$©h_™t_sh‹t_sˇn_check
(
©h_™t_comb
 *
™tcomb
)

702 
Æt_øtio
;

704 i‡(!
™tcomb
->
sˇn
 || !™tcomb->
Æt_good
)

705  
Ál£
;

707 i‡(
	`time_a·î
(
jiffõs
, 
™tcomb
->
sˇn_°¨t_time
 +

708 
	`m£cs_to_jiffõs
(
ATH_ANT_DIV_COMB_SHORT_SCAN_INTR
)))

709  
åue
;

711 i‡(
™tcomb
->
tŸÆ_pkt_cou¡
 =
ATH_ANT_DIV_COMB_SHORT_SCAN_PKTCOUNT
) {

712 
Æt_øtio
 = ((
™tcomb
->
Æt_ªcv_˙t
 * 100) /

713 
™tcomb
->
tŸÆ_pkt_cou¡
);

714 i‡(
Æt_øtio
 < 
™tcomb
->
™t_øtio
)

715  
åue
;

718  
Ál£
;

719 
	}
}

721 
	$©h_™t_comb_sˇn
(
©h_so·c
 *
sc
, 
©h_rx_°©us
 *
rs
)

723 
©h_hw_™tcomb_c⁄f
 
div_™t_c⁄f
;

724 
©h_™t_comb
 *
™tcomb
 = &
sc
->
™t_comb
;

725 
Æt_øtio
 = 0, 
Æt_rssi_avg
 = 0, 
maö_rssi_avg
 = 0, 
cuº_Æt_£t
;

726 
cuº_maö_£t
;

727 
maö_rssi
 = 
rs
->
rs_rssi_˘l
[0];

728 
Æt_rssi
 = 
rs
->
rs_rssi_˘l
[1];

729 
rx_™t_c⁄f
, 
maö_™t_c⁄f
;

730 
boﬁ
 
sh‹t_sˇn
 = 
Ál£
, 
ªt
;

732 
rx_™t_c⁄f
 = (
rs
->
rs_rssi_˘l
[2] >> 
ATH_ANT_RX_CURRENT_SHIFT
) &

733 
ATH_ANT_RX_MASK
;

734 
maö_™t_c⁄f
 = (
rs
->
rs_rssi_˘l
[2] >> 
ATH_ANT_RX_MAIN_SHIFT
) &

735 
ATH_ANT_RX_MASK
;

737 i‡(
Æt_rssi
 >
™tcomb
->
low_rssi_thªsh
) {

738 
™tcomb
->
™t_øtio
 = 
ATH_ANT_DIV_COMB_ALT_ANT_RATIO
;

739 
™tcomb
->
™t_øtio2
 = 
ATH_ANT_DIV_COMB_ALT_ANT_RATIO2
;

741 
™tcomb
->
™t_øtio
 = 
ATH_ANT_DIV_COMB_ALT_ANT_RATIO_LOW_RSSI
;

742 
™tcomb
->
™t_øtio2
 = 
ATH_ANT_DIV_COMB_ALT_ANT_RATIO2_LOW_RSSI
;

746 i‡(
maö_rssi
 > 0 && 
Æt_rssi
 > 0) {

747 
™tcomb
->
tŸÆ_pkt_cou¡
++;

748 
™tcomb
->
maö_tŸÆ_rssi
 +
maö_rssi
;

749 
™tcomb
->
Æt_tŸÆ_rssi
 +
Æt_rssi
;

751 i‡(
maö_™t_c⁄f
 =
rx_™t_c⁄f
)

752 
™tcomb
->
maö_ªcv_˙t
++;

754 
™tcomb
->
Æt_ªcv_˙t
++;

757 i‡(
maö_™t_c⁄f
 =
rx_™t_c⁄f
) {

758 
	`ANT_STAT_INC
(
ANT_MAIN
, 
ªcv_˙t
);

759 
	`ANT_LNA_INC
(
ANT_MAIN
, 
rx_™t_c⁄f
);

761 
	`ANT_STAT_INC
(
ANT_ALT
, 
ªcv_˙t
);

762 
	`ANT_LNA_INC
(
ANT_ALT
, 
rx_™t_c⁄f
);

766 
sh‹t_sˇn
 = 
	`©h_™t_sh‹t_sˇn_check
(
™tcomb
);

768 i‡(((
™tcomb
->
tŸÆ_pkt_cou¡
 < 
ATH_ANT_DIV_COMB_MAX_PKTCOUNT
) ||

769 
rs
->
rs_m‹óggr
Ë&& !
sh‹t_sˇn
)

772 i‡(
™tcomb
->
tŸÆ_pkt_cou¡
) {

773 
Æt_øtio
 = ((
™tcomb
->
Æt_ªcv_˙t
 * 100) /

774 
™tcomb
->
tŸÆ_pkt_cou¡
);

775 
maö_rssi_avg
 = (
™tcomb
->
maö_tŸÆ_rssi
 /

776 
™tcomb
->
tŸÆ_pkt_cou¡
);

777 
Æt_rssi_avg
 = (
™tcomb
->
Æt_tŸÆ_rssi
 /

778 
™tcomb
->
tŸÆ_pkt_cou¡
);

781 
	`©h9k_hw_™tdiv_comb_c⁄f_gë
(
sc
->
sc_ah
, &
div_™t_c⁄f
);

782 
cuº_Æt_£t
 = 
div_™t_c⁄f
.
Æt_ a_c⁄f
;

783 
cuº_maö_£t
 = 
div_™t_c⁄f
.
maö_ a_c⁄f
;

784 
™tcomb
->
cou¡
++;

786 i‡(
™tcomb
->
cou¡
 =
ATH_ANT_DIV_COMB_MAX_COUNT
) {

787 i‡(
Æt_øtio
 > 
™tcomb
->
™t_øtio
) {

788 
	`©h_ ac⁄f_Æt_good_sˇn
(
™tcomb
, 
div_™t_c⁄f
,

789 
maö_rssi_avg
);

790 
™tcomb
->
Æt_good
 = 
åue
;

792 
™tcomb
->
Æt_good
 = 
Ál£
;

795 
™tcomb
->
cou¡
 = 0;

796 
™tcomb
->
sˇn
 = 
åue
;

797 
™tcomb
->
sˇn_nŸ_°¨t
 = 
åue
;

800 i‡(!
™tcomb
->
sˇn
) {

801 
ªt
 = 
	`©h_™t_åy_swôch
(&
div_™t_c⁄f
, 
™tcomb
, 
Æt_øtio
,

802 
Æt_rssi_avg
, 
maö_rssi_avg
,

803 
cuº_maö_£t
, 
cuº_Æt_£t
);

804 i‡(
ªt
)

805 
div_comb_d⁄e
;

808 i‡(!
™tcomb
->
sˇn
 &&

809 (
Æt_rssi_avg
 < (
maö_rssi_avg
 + 
div_™t_c⁄f
.
 a1_ a2_dñè
)))

810 
div_comb_d⁄e
;

812 i‡(!
™tcomb
->
sˇn_nŸ_°¨t
) {

813 
	`©h_™t_åy_sˇn
(
™tcomb
, &
div_™t_c⁄f
, 
cuº_Æt_£t
,

814 
Æt_rssi_avg
, 
maö_rssi_avg
);

816 i‡(!
™tcomb
->
Æt_good
) {

817 
™tcomb
->
sˇn_nŸ_°¨t
 = 
Ál£
;

819 i‡(
cuº_maö_£t
 =
ATH_ANT_DIV_COMB_LNA2
) {

820 
div_™t_c⁄f
.
maö_ a_c⁄f
 =

821 
ATH_ANT_DIV_COMB_LNA2
;

822 
div_™t_c⁄f
.
Æt_ a_c⁄f
 =

823 
ATH_ANT_DIV_COMB_LNA1
;

824 } i‡(
cuº_maö_£t
 =
ATH_ANT_DIV_COMB_LNA1
) {

825 
div_™t_c⁄f
.
maö_ a_c⁄f
 =

826 
ATH_ANT_DIV_COMB_LNA1
;

827 
div_™t_c⁄f
.
Æt_ a_c⁄f
 =

828 
ATH_ANT_DIV_COMB_LNA2
;

830 
div_comb_d⁄e
;

832 
	`©h_£À˘_™t_div_‰om_quick_sˇn
(
™tcomb
, &
div_™t_c⁄f
,

833 
maö_rssi_avg
, 
Æt_rssi_avg
,

834 
Æt_øtio
);

835 
™tcomb
->
quick_sˇn_˙t
++;

838 
div_comb_d⁄e
:

839 
	`©h_™t_div_c⁄f_Á°_divbüs
(&
div_™t_c⁄f
, 
™tcomb
, 
Æt_øtio
);

840 
	`©h9k_hw_™tdiv_comb_c⁄f_£t
(
sc
->
sc_ah
, &
div_™t_c⁄f
);

841 
	`©h9k_debug_°©_™t
(
sc
, &
div_™t_c⁄f
, 
maö_rssi_avg
, 
Æt_rssi_avg
);

843 
™tcomb
->
sˇn_°¨t_time
 = 
jiffõs
;

844 
™tcomb
->
tŸÆ_pkt_cou¡
 = 0;

845 
™tcomb
->
maö_tŸÆ_rssi
 = 0;

846 
™tcomb
->
Æt_tŸÆ_rssi
 = 0;

847 
™tcomb
->
maö_ªcv_˙t
 = 0;

848 
™tcomb
->
Æt_ªcv_˙t
 = 0;

849 
	}
}

	@ar5008_initvals.h

17 c⁄° 
u32
 
	g¨5416Modes
[][5] = {

84 c⁄° 
u32
 
	g¨5416Comm⁄
[][2] = {

462 c⁄° 
u32
 
	g¨5416B™k0
[][2] = {

468 c⁄° 
u32
 
	g¨5416BB_RfGaö
[][3] = {

536 c⁄° 
u32
 
	g¨5416B™k1
[][2] = {

542 c⁄° 
u32
 
	g¨5416B™k2
[][2] = {

548 c⁄° 
u32
 
	g¨5416B™k3
[][3] = {

553 c⁄° 
u32
 
	g¨5416B™k6
[][3] = {

590 c⁄° 
u32
 
	g¨5416B™k6TPC
[][3] = {

627 c⁄° 
u32
 
	g¨5416B™k7
[][2] = {

634 c⁄° 
u32
 
	g¨5416Addac
[][2] = {

	@ar5008_phy.c

17 
	~"hw.h
"

18 
	~"hw-›s.h
"

19 
	~"../ªgd.h
"

20 
	~"¨9002_phy.h
"

21 
	~"¨5008_öôvÆs.h
"

25 c⁄° 
	gfú°ï_èbÀ
[] =

32 c⁄° 
	gm1ThªshLow_off
 = 127;

33 c⁄° 
	gm2ThªshLow_off
 = 127;

34 c⁄° 
	gm1Thªsh_off
 = 127;

35 c⁄° 
	gm2Thªsh_off
 = 127;

36 c⁄° 
	gm2Cou¡Thr_off
 = 31;

37 c⁄° 
	gm2Cou¡ThrLow_off
 = 63;

38 c⁄° 
	gm1ThªshLowExt_off
 = 127;

39 c⁄° 
	gm2ThªshLowExt_off
 = 127;

40 c⁄° 
	gm1ThªshExt_off
 = 127;

41 c⁄° 
	gm2ThªshExt_off
 = 127;

43 c⁄° 
¨5416IniAºay
 
	gb™k0
 = 
STATIC_INI_ARRAY
(
¨5416B™k0
);

44 c⁄° 
¨5416IniAºay
 
	gb™k1
 = 
STATIC_INI_ARRAY
(
¨5416B™k1
);

45 c⁄° 
¨5416IniAºay
 
	gb™k2
 = 
STATIC_INI_ARRAY
(
¨5416B™k2
);

46 c⁄° 
¨5416IniAºay
 
	gb™k3
 = 
STATIC_INI_ARRAY
(
¨5416B™k3
);

47 c⁄° 
¨5416IniAºay
 
	gb™k7
 = 
STATIC_INI_ARRAY
(
¨5416B™k7
);

49 
	$¨5008_wrôe_b™k6
(
©h_hw
 *
ah
, *
wrôe˙t
)

51 
¨5416IniAºay
 *
¨øy
 = &
ah
->
öiB™k6
;

52 
u32
 *
d©a
 = 
ah
->
™ÆogB™k6D©a
;

53 
r
;

55 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

57 
r
 = 0;Ñ < 
¨øy
->
ü_rows
;Ñ++) {

58 
	`REG_WRITE
(
ah
, 
	`INI_RA
(
¨øy
, 
r
, 0), 
d©a
[r]);

59 
	`DO_DELAY
(*
wrôe˙t
);

62 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

63 
	}
}

76 
	$¨5008_hw_phy_modify_rx_buf„r
(
u32
 *
rfBuf
, u32 
ªg32
,

77 
u32
 
numBôs
, u32 
fú°Bô
,

78 
u32
 
cﬁumn
)

80 
u32
 
tmp32
, 
mask
, 
¨øyE¡ry
, 
œ°Bô
;

81 
öt32_t
 
bôPosôi⁄
, 
bôsLe·
;

83 
tmp32
 = 
	`©h9k_hw_ªvî£_bôs
(
ªg32
, 
numBôs
);

84 
¨øyE¡ry
 = (
fú°Bô
 - 1) / 8;

85 
bôPosôi⁄
 = (
fú°Bô
 - 1) % 8;

86 
bôsLe·
 = 
numBôs
;

87 
bôsLe·
 > 0) {

88 
œ°Bô
 = (
bôPosôi⁄
 + 
bôsLe·
 > 8) ?

89 8 : 
bôPosôi⁄
 + 
bôsLe·
;

90 
mask
 = (((1 << 
œ°Bô
Ë- 1Ë^ ((1 << 
bôPosôi⁄
) - 1)) <<

91 (
cﬁumn
 * 8);

92 
rfBuf
[
¨øyE¡ry
] &~
mask
;

93 
rfBuf
[
¨øyE¡ry
] |((
tmp32
 << 
bôPosôi⁄
) <<

94 (
cﬁumn
 * 8)Ë& 
mask
;

95 
bôsLe·
 -8 - 
bôPosôi⁄
;

96 
tmp32
 =Åmp32 >> (8 - 
bôPosôi⁄
);

97 
bôPosôi⁄
 = 0;

98 
¨øyE¡ry
++;

100 
	}
}

129 
	$¨5008_hw_f‹˚_büs
(
©h_hw
 *
ah
, 
u16
 
sy¡h_‰eq
)

131 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

132 
u32
 
tmp_ªg
;

133 
ªg_wrôes
 = 0;

134 
u32
 
√w_büs
 = 0;

136 i‡(!
	`AR_SREV_5416
(
ah
Ë|| 
sy¡h_‰eq
 >= 3000)

139 
	`BUG_ON
(
	`AR_SREV_9280_20_OR_LATER
(
ah
));

141 i‡(
sy¡h_‰eq
 < 2412)

142 
√w_büs
 = 0;

143 i‡(
sy¡h_‰eq
 < 2422)

144 
√w_büs
 = 1;

146 
√w_büs
 = 2;

149 
tmp_ªg
 = 
	`©h9k_hw_ªvî£_bôs
(
√w_büs
, 3);

151 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "ForceÑf_pwd_icsyndivÅo %1d on %4d\n",

152 
√w_büs
, 
sy¡h_‰eq
);

155 
	`¨5008_hw_phy_modify_rx_buf„r
(
ah
->
™ÆogB™k6D©a
, 
tmp_ªg
, 3, 181, 3);

158 
	`¨5008_wrôe_b™k6
(
ah
, &
ªg_wrôes
);

159 
	}
}

170 
	$¨5008_hw_£t_ch™√l
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
)

172 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

173 
u32
 
ch™√lSñ
 = 0;

174 
u32
 
bModeSy¡h
 = 0;

175 
u32
 
aModeRefSñ
 = 0;

176 
u32
 
ªg32
 = 0;

177 
u16
 
‰eq
;

178 
ch™_˚¡îs
 
˚¡îs
;

180 
	`©h9k_hw_gë_ch™√l_˚¡îs
(
ah
, 
ch™
, &
˚¡îs
);

181 
‰eq
 = 
˚¡îs
.
sy¡h_˚¡î
;

183 i‡(
‰eq
 < 4800) {

184 
u32
 
tx˘l
;

186 i‡(((
‰eq
 - 2192) % 5) == 0) {

187 
ch™√lSñ
 = ((
‰eq
 - 672) * 2 - 3040) / 10;

188 
bModeSy¡h
 = 0;

189 } i‡(((
‰eq
 - 2224) % 5) == 0) {

190 
ch™√lSñ
 = ((
‰eq
 - 704) * 2 - 3040) / 10;

191 
bModeSy¡h
 = 1;

193 
	`©h_îr
(
comm⁄
, "InvÆid ch™√»%u MHz\n", 
‰eq
);

194  -
EINVAL
;

197 
ch™√lSñ
 = (channelSel << 2) & 0xff;

198 
ch™√lSñ
 = 
	`©h9k_hw_ªvî£_bôs
(channelSel, 8);

200 
tx˘l
 = 
	`REG_READ
(
ah
, 
AR_PHY_CCK_TX_CTRL
);

201 i‡(
‰eq
 == 2484) {

203 
	`REG_WRITE
(
ah
, 
AR_PHY_CCK_TX_CTRL
,

204 
tx˘l
 | 
AR_PHY_CCK_TX_CTRL_JAPAN
);

206 
	`REG_WRITE
(
ah
, 
AR_PHY_CCK_TX_CTRL
,

207 
tx˘l
 & ~
AR_PHY_CCK_TX_CTRL_JAPAN
);

210 } i‡((
‰eq
 % 20) == 0 && freq >= 5120) {

211 
ch™√lSñ
 =

212 
	`©h9k_hw_ªvî£_bôs
(((
‰eq
 - 4800) / 20 << 2), 8);

213 
aModeRefSñ
 = 
	`©h9k_hw_ªvî£_bôs
(1, 2);

214 } i‡((
‰eq
 % 10) == 0) {

215 
ch™√lSñ
 =

216 
	`©h9k_hw_ªvî£_bôs
(((
‰eq
 - 4800) / 10 << 1), 8);

217 i‡(
	`AR_SREV_9100
(
ah
Ë|| 
	`AR_SREV_9160_10_OR_LATER
(ah))

218 
aModeRefSñ
 = 
	`©h9k_hw_ªvî£_bôs
(2, 2);

220 
aModeRefSñ
 = 
	`©h9k_hw_ªvî£_bôs
(1, 2);

221 } i‡((
‰eq
 % 5) == 0) {

222 
ch™√lSñ
 = 
	`©h9k_hw_ªvî£_bôs
((
‰eq
 - 4800) / 5, 8);

223 
aModeRefSñ
 = 
	`©h9k_hw_ªvî£_bôs
(1, 2);

225 
	`©h_îr
(
comm⁄
, "InvÆid ch™√»%u MHz\n", 
‰eq
);

226  -
EINVAL
;

229 
	`¨5008_hw_f‹˚_büs
(
ah
, 
‰eq
);

231 
ªg32
 =

232 (
ch™√lSñ
 << 8Ë| (
aModeRefSñ
 << 2Ë| (
bModeSy¡h
 << 1) |

235 
	`REG_WRITE
(
ah
, 
	`AR_PHY
(0x37), 
ªg32
);

237 
ah
->
curch™
 = 
ch™
;

240 
	}
}

250 
	$¨5008_hw_•ur_môig©e
(
©h_hw
 *
ah
,

251 
©h9k_ch™√l
 *
ch™
)

253 
bb_•ur
 = 
AR_NO_SPUR
;

254 
bö
, 
cur_bö
;

255 
•ur_‰eq_sd
;

256 
•ur_dñè_pha£
;

257 
díomö©‹
;

258 
uµî
, 
lowî
, 
cur_vô_mask
;

259 
tmp
, 
√w
;

260 
i
;

261 
pûŸ_mask_ªg
[4] = {

262 
AR_PHY_TIMING7
, 
AR_PHY_TIMING8
,

263 
AR_PHY_PILOT_MASK_01_30
, 
AR_PHY_PILOT_MASK_31_60


265 
ch™_mask_ªg
[4] = {

266 
AR_PHY_TIMING9
, 
AR_PHY_TIMING10
,

267 
AR_PHY_CHANNEL_MASK_01_30
, 
AR_PHY_CHANNEL_MASK_31_60


269 
öc
[4] = { 0, 100, 0, 0 };

271 
öt8_t
 
mask_m
[123];

272 
öt8_t
 
mask_p
[123];

273 
öt8_t
 
mask_amt
;

274 
tmp_mask
;

275 
cur_bb_•ur
;

276 
boﬁ
 
is2GHz
 = 
	`IS_CHAN_2GHZ
(
ch™
);

278 
	`mem£t
(&
mask_m
, 0, (
öt8_t
) * 123);

279 
	`mem£t
(&
mask_p
, 0, (
öt8_t
) * 123);

281 
i
 = 0; i < 
AR_EEPROM_MODAL_SPURS
; i++) {

282 
cur_bb_•ur
 = 
ah
->
ìp_›s
->
	`gë_•ur_ch™√l
◊h, 
i
, 
is2GHz
);

283 i‡(
AR_NO_SPUR
 =
cur_bb_•ur
)

285 
cur_bb_•ur
 = cur_bb_•u∏- (
ch™
->
ch™√l
 * 10);

286 i‡((
cur_bb_•ur
 > -95) && (cur_bb_spur < 95)) {

287 
bb_•ur
 = 
cur_bb_•ur
;

292 i‡(
AR_NO_SPUR
 =
bb_•ur
)

295 
bö
 = 
bb_•ur
 * 32;

297 
tmp
 = 
	`REG_READ
(
ah
, 
	`AR_PHY_TIMING_CTRL4
(0));

298 
√w
 = 
tmp
 | (
AR_PHY_TIMING_CTRL4_ENABLE_SPUR_RSSI
 |

299 
AR_PHY_TIMING_CTRL4_ENABLE_SPUR_FILTER
 |

300 
AR_PHY_TIMING_CTRL4_ENABLE_CHAN_MASK
 |

301 
AR_PHY_TIMING_CTRL4_ENABLE_PILOT_MASK
);

303 
	`REG_WRITE
(
ah
, 
	`AR_PHY_TIMING_CTRL4
(0), 
√w
);

305 
√w
 = (
AR_PHY_SPUR_REG_MASK_RATE_CNTL
 |

306 
AR_PHY_SPUR_REG_ENABLE_MASK_PPM
 |

307 
AR_PHY_SPUR_REG_MASK_RATE_SELECT
 |

308 
AR_PHY_SPUR_REG_ENABLE_VIT_SPUR_RSSI
 |

309 
	`SM
(
SPUR_RSSI_THRESH
, 
AR_PHY_SPUR_REG_SPUR_RSSI_THRESH
));

310 
	`REG_WRITE
(
ah
, 
AR_PHY_SPUR_REG
, 
√w
);

312 
•ur_dñè_pha£
 = ((
bb_•ur
 * 524288) / 100) &

313 
AR_PHY_TIMING11_SPUR_DELTA_PHASE
;

315 
díomö©‹
 = 
	`IS_CHAN_2GHZ
(
ch™
) ? 440 : 400;

316 
•ur_‰eq_sd
 = ((
bb_•ur
 * 2048Ë/ 
díomö©‹
) & 0x3ff;

318 
√w
 = (
AR_PHY_TIMING11_USE_SPUR_IN_AGC
 |

319 
	`SM
(
•ur_‰eq_sd
, 
AR_PHY_TIMING11_SPUR_FREQ_SD
) |

320 
	`SM
(
•ur_dñè_pha£
, 
AR_PHY_TIMING11_SPUR_DELTA_PHASE
));

321 
	`REG_WRITE
(
ah
, 
AR_PHY_TIMING11
, 
√w
);

323 
cur_bö
 = -6000;

324 
uµî
 = 
bö
 + 100;

325 
lowî
 = 
bö
 - 100;

327 
i
 = 0; i < 4; i++) {

328 
pûŸ_mask
 = 0;

329 
ch™_mask
 = 0;

330 
bp
 = 0;

331 
bp
 = 0; bp < 30; bp++) {

332 i‡((
cur_bö
 > 
lowî
Ë&& (cur_bö < 
uµî
)) {

333 
pûŸ_mask
 =ÖûŸ_mask | 0x1 << 
bp
;

334 
ch™_mask
 = ch™_mask | 0x1 << 
bp
;

336 
cur_bö
 += 100;

338 
cur_bö
 +
öc
[
i
];

339 
	`REG_WRITE
(
ah
, 
pûŸ_mask_ªg
[
i
], 
pûŸ_mask
);

340 
	`REG_WRITE
(
ah
, 
ch™_mask_ªg
[
i
], 
ch™_mask
);

343 
cur_vô_mask
 = 6100;

344 
uµî
 = 
bö
 + 120;

345 
lowî
 = 
bö
 - 120;

347 
i
 = 0; i < 123; i++) {

348 i‡((
cur_vô_mask
 > 
lowî
Ë&& (cur_vô_mask < 
uµî
)) {

351 vﬁ©ûê
tmp_v
 = 
	`abs
(
cur_vô_mask
 - 
bö
);

353 i‡(
tmp_v
 < 75)

354 
mask_amt
 = 1;

356 
mask_amt
 = 0;

357 i‡(
cur_vô_mask
 < 0)

358 
mask_m
[
	`abs
(
cur_vô_mask
 / 100)] = 
mask_amt
;

360 
mask_p
[
cur_vô_mask
 / 100] = 
mask_amt
;

362 
cur_vô_mask
 -= 100;

365 
tmp_mask
 = (
mask_m
[46] << 30) | (mask_m[47] << 28)

366 | (
mask_m
[48] << 26) | (mask_m[49] << 24)

367 | (
mask_m
[50] << 22) | (mask_m[51] << 20)

368 | (
mask_m
[52] << 18) | (mask_m[53] << 16)

369 | (
mask_m
[54] << 14) | (mask_m[55] << 12)

370 | (
mask_m
[56] << 10) | (mask_m[57] << 8)

371 | (
mask_m
[58] << 6) | (mask_m[59] << 4)

372 | (
mask_m
[60] << 2) | (mask_m[61] << 0);

373 
	`REG_WRITE
(
ah
, 
AR_PHY_BIN_MASK_1
, 
tmp_mask
);

374 
	`REG_WRITE
(
ah
, 
AR_PHY_VIT_MASK2_M_46_61
, 
tmp_mask
);

376 
tmp_mask
 = (
mask_m
[31] << 28)

377 | (
mask_m
[32] << 26) | (mask_m[33] << 24)

378 | (
mask_m
[34] << 22) | (mask_m[35] << 20)

379 | (
mask_m
[36] << 18) | (mask_m[37] << 16)

380 | (
mask_m
[48] << 14) | (mask_m[39] << 12)

381 | (
mask_m
[40] << 10) | (mask_m[41] << 8)

382 | (
mask_m
[42] << 6) | (mask_m[43] << 4)

383 | (
mask_m
[44] << 2) | (mask_m[45] << 0);

384 
	`REG_WRITE
(
ah
, 
AR_PHY_BIN_MASK_2
, 
tmp_mask
);

385 
	`REG_WRITE
(
ah
, 
AR_PHY_MASK2_M_31_45
, 
tmp_mask
);

387 
tmp_mask
 = (
mask_m
[16] << 30) | (mask_m[16] << 28)

388 | (
mask_m
[18] << 26) | (mask_m[18] << 24)

389 | (
mask_m
[20] << 22) | (mask_m[20] << 20)

390 | (
mask_m
[22] << 18) | (mask_m[22] << 16)

391 | (
mask_m
[24] << 14) | (mask_m[24] << 12)

392 | (
mask_m
[25] << 10) | (mask_m[26] << 8)

393 | (
mask_m
[27] << 6) | (mask_m[28] << 4)

394 | (
mask_m
[29] << 2) | (mask_m[30] << 0);

395 
	`REG_WRITE
(
ah
, 
AR_PHY_BIN_MASK_3
, 
tmp_mask
);

396 
	`REG_WRITE
(
ah
, 
AR_PHY_MASK2_M_16_30
, 
tmp_mask
);

398 
tmp_mask
 = (
mask_m
[0] << 30) | (mask_m[1] << 28)

399 | (
mask_m
[2] << 26) | (mask_m[3] << 24)

400 | (
mask_m
[4] << 22) | (mask_m[5] << 20)

401 | (
mask_m
[6] << 18) | (mask_m[7] << 16)

402 | (
mask_m
[8] << 14) | (mask_m[9] << 12)

403 | (
mask_m
[10] << 10) | (mask_m[11] << 8)

404 | (
mask_m
[12] << 6) | (mask_m[13] << 4)

405 | (
mask_m
[14] << 2) | (mask_m[15] << 0);

406 
	`REG_WRITE
(
ah
, 
AR_PHY_MASK_CTL
, 
tmp_mask
);

407 
	`REG_WRITE
(
ah
, 
AR_PHY_MASK2_M_00_15
, 
tmp_mask
);

409 
tmp_mask
 = (
mask_p
[15] << 28)

410 | (
mask_p
[14] << 26) | (mask_p[13] << 24)

411 | (
mask_p
[12] << 22) | (mask_p[11] << 20)

412 | (
mask_p
[10] << 18) | (mask_p[9] << 16)

413 | (
mask_p
[8] << 14) | (mask_p[7] << 12)

414 | (
mask_p
[6] << 10) | (mask_p[5] << 8)

415 | (
mask_p
[4] << 6) | (mask_p[3] << 4)

416 | (
mask_p
[2] << 2) | (mask_p[1] << 0);

417 
	`REG_WRITE
(
ah
, 
AR_PHY_BIN_MASK2_1
, 
tmp_mask
);

418 
	`REG_WRITE
(
ah
, 
AR_PHY_MASK2_P_15_01
, 
tmp_mask
);

420 
tmp_mask
 = (
mask_p
[30] << 28)

421 | (
mask_p
[29] << 26) | (mask_p[28] << 24)

422 | (
mask_p
[27] << 22) | (mask_p[26] << 20)

423 | (
mask_p
[25] << 18) | (mask_p[24] << 16)

424 | (
mask_p
[23] << 14) | (mask_p[22] << 12)

425 | (
mask_p
[21] << 10) | (mask_p[20] << 8)

426 | (
mask_p
[19] << 6) | (mask_p[18] << 4)

427 | (
mask_p
[17] << 2) | (mask_p[16] << 0);

428 
	`REG_WRITE
(
ah
, 
AR_PHY_BIN_MASK2_2
, 
tmp_mask
);

429 
	`REG_WRITE
(
ah
, 
AR_PHY_MASK2_P_30_16
, 
tmp_mask
);

431 
tmp_mask
 = (
mask_p
[45] << 28)

432 | (
mask_p
[44] << 26) | (mask_p[43] << 24)

433 | (
mask_p
[42] << 22) | (mask_p[41] << 20)

434 | (
mask_p
[40] << 18) | (mask_p[39] << 16)

435 | (
mask_p
[38] << 14) | (mask_p[37] << 12)

436 | (
mask_p
[36] << 10) | (mask_p[35] << 8)

437 | (
mask_p
[34] << 6) | (mask_p[33] << 4)

438 | (
mask_p
[32] << 2) | (mask_p[31] << 0);

439 
	`REG_WRITE
(
ah
, 
AR_PHY_BIN_MASK2_3
, 
tmp_mask
);

440 
	`REG_WRITE
(
ah
, 
AR_PHY_MASK2_P_45_31
, 
tmp_mask
);

442 
tmp_mask
 = (
mask_p
[61] << 30) | (mask_p[60] << 28)

443 | (
mask_p
[59] << 26) | (mask_p[58] << 24)

444 | (
mask_p
[57] << 22) | (mask_p[56] << 20)

445 | (
mask_p
[55] << 18) | (mask_p[54] << 16)

446 | (
mask_p
[53] << 14) | (mask_p[52] << 12)

447 | (
mask_p
[51] << 10) | (mask_p[50] << 8)

448 | (
mask_p
[49] << 6) | (mask_p[48] << 4)

449 | (
mask_p
[47] << 2) | (mask_p[46] << 0);

450 
	`REG_WRITE
(
ah
, 
AR_PHY_BIN_MASK2_4
, 
tmp_mask
);

451 
	`REG_WRITE
(
ah
, 
AR_PHY_MASK2_P_61_45
, 
tmp_mask
);

452 
	}
}

460 
	$¨5008_hw_rf_Æloc_ext_b™ks
(
©h_hw
 *
ah
)

462 
size
 = 
ah
->
öiB™k6
.
ü_rows
 * (
u32
);

464 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
))

467 
ah
->
™ÆogB™k6D©a
 = 
	`devm_kzÆloc
◊h->
dev
, 
size
, 
GFP_KERNEL
);

468 i‡(!
ah
->
™ÆogB™k6D©a
)

469  -
ENOMEM
;

472 
	}
}

487 
boﬁ
 
	$¨5008_hw_£t_rf_ªgs
(
©h_hw
 *
ah
,

488 
©h9k_ch™√l
 *
ch™
,

489 
u16
 
modesIndex
)

491 
u32
 
ìpMö‹Rev
;

492 
u32
 
ob5GHz
 = 0, 
db5GHz
 = 0;

493 
u32
 
ob2GHz
 = 0, 
db2GHz
 = 0;

494 
ªgWrôes
 = 0;

495 
i
;

502 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
))

503  
åue
;

506 
ìpMö‹Rev
 = 
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_MINOR_REV
);

508 
i
 = 0; i < 
ah
->
öiB™k6
.
ü_rows
; i++)

509 
ah
->
™ÆogB™k6D©a
[
i
] = 
	`INI_RA
(&ah->
öiB™k6
, i, 
modesIndex
);

512 i‡(
ìpMö‹Rev
 >= 2) {

513 i‡(
	`IS_CHAN_2GHZ
(
ch™
)) {

514 
ob2GHz
 = 
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_OB_2
);

515 
db2GHz
 = 
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_DB_2
);

516 
	`¨5008_hw_phy_modify_rx_buf„r
(
ah
->
™ÆogB™k6D©a
,

517 
ob2GHz
, 3, 197, 0);

518 
	`¨5008_hw_phy_modify_rx_buf„r
(
ah
->
™ÆogB™k6D©a
,

519 
db2GHz
, 3, 194, 0);

521 
ob5GHz
 = 
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_OB_5
);

522 
db5GHz
 = 
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_DB_5
);

523 
	`¨5008_hw_phy_modify_rx_buf„r
(
ah
->
™ÆogB™k6D©a
,

524 
ob5GHz
, 3, 203, 0);

525 
	`¨5008_hw_phy_modify_rx_buf„r
(
ah
->
™ÆogB™k6D©a
,

526 
db5GHz
, 3, 200, 0);

531 
	`REG_WRITE_ARRAY
(&
b™k0
, 1, 
ªgWrôes
);

532 
	`REG_WRITE_ARRAY
(&
b™k1
, 1, 
ªgWrôes
);

533 
	`REG_WRITE_ARRAY
(&
b™k2
, 1, 
ªgWrôes
);

534 
	`REG_WRITE_ARRAY
(&
b™k3
, 
modesIndex
, 
ªgWrôes
);

535 
	`¨5008_wrôe_b™k6
(
ah
, &
ªgWrôes
);

536 
	`REG_WRITE_ARRAY
(&
b™k7
, 1, 
ªgWrôes
);

538  
åue
;

539 
	}
}

541 
	$¨5008_hw_öô_bb
(
©h_hw
 *
ah
,

542 
©h9k_ch™√l
 *
ch™
)

544 
u32
 
sy¡hDñay
;

546 
sy¡hDñay
 = 
	`REG_READ
(
ah
, 
AR_PHY_RX_DELAY
Ë& 
AR_PHY_RX_DELAY_DELAY
;

548 
	`REG_WRITE
(
ah
, 
AR_PHY_ACTIVE
, 
AR_PHY_ACTIVE_EN
);

550 
	`©h9k_hw_sy¡h_dñay
(
ah
, 
ch™
, 
sy¡hDñay
);

551 
	}
}

553 
	$¨5008_hw_öô_chaö_masks
(
©h_hw
 *
ah
)

555 
rx_chaömask
, 
tx_chaömask
;

557 
rx_chaömask
 = 
ah
->
rxchaömask
;

558 
tx_chaömask
 = 
ah
->
txchaömask
;

561 
rx_chaömask
) {

563 
	`REG_SET_BIT
(
ah
, 
AR_PHY_ANALOG_SWAP
,

564 
AR_PHY_SWAP_ALT_CHAIN
);

566 i‡(
ah
->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_REVISION_5416_10
) {

567 
	`REG_WRITE
(
ah
, 
AR_PHY_RX_CHAINMASK
, 0x7);

568 
	`REG_WRITE
(
ah
, 
AR_PHY_CAL_CHAINMASK
, 0x7);

574 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

575 
	`REG_WRITE
(
ah
, 
AR_PHY_RX_CHAINMASK
, 
rx_chaömask
);

576 
	`REG_WRITE
(
ah
, 
AR_PHY_CAL_CHAINMASK
, 
rx_chaömask
);

579 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

583 
	`REG_WRITE
(
ah
, 
AR_SELFGEN_MASK
, 
tx_chaömask
);

585 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

587 i‡(
tx_chaömask
 == 0x5) {

588 
	`REG_SET_BIT
(
ah
, 
AR_PHY_ANALOG_SWAP
,

589 
AR_PHY_SWAP_ALT_CHAIN
);

591 i‡(
	`AR_SREV_9100
(
ah
))

592 
	`REG_WRITE
(
ah
, 
AR_PHY_ANALOG_SWAP
,

593 
	`REG_READ
(
ah
, 
AR_PHY_ANALOG_SWAP
) | 0x00000001);

594 
	}
}

596 
	$¨5008_hw_ovîride_öi
(
©h_hw
 *
ah
,

597 
©h9k_ch™√l
 *
ch™
)

599 
u32
 
vÆ
;

606 
	`REG_SET_BIT
(
ah
, 
AR_DIAG_SW
, (
AR_DIAG_RX_DIS
 | 
AR_DIAG_RX_ABORT
));

608 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
)) {

616 
vÆ
 = 
	`REG_READ
(
ah
, 
AR_PCU_MISC_MODE2
) &

617 (~
AR_ADHOC_MCAST_KEYID_ENABLE
);

619 i‡(!
	`AR_SREV_9271
(
ah
))

620 
vÆ
 &~
AR_PCU_MISC_MODE2_HWWAR1
;

622 i‡(
	`AR_SREV_9287_11_OR_LATER
(
ah
))

623 
vÆ
 = vÆ & (~
AR_PCU_MISC_MODE2_HWWAR2
);

625 
vÆ
 |
AR_PCU_MISC_MODE2_CFP_IGNORE
;

627 
	`REG_WRITE
(
ah
, 
AR_PCU_MISC_MODE2
, 
vÆ
);

630 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
))

636 
	`REG_WRITE
(
ah
, 0x9800 + (651 << 2), 0x11);

642 i‡(
	`AR_SREV_9100
(
ah
Ë|| 
	`AR_SREV_9160
(ah)) {

643 
vÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_HEAVY_CLIP_FACTOR_RIFS
);

644 
vÆ
 &~
AR_PHY_RIFS_INIT_DELAY
;

645 
	`REG_WRITE
(
ah
, 
AR_PHY_HEAVY_CLIP_FACTOR_RIFS
, 
vÆ
);

647 
	}
}

649 
	$¨5008_hw_£t_ch™√l_ªgs
(
©h_hw
 *
ah
,

650 
©h9k_ch™√l
 *
ch™
)

652 
u32
 
phymode
;

653 
u32
 
íabÀDacFifo
 = 0;

655 i‡(
	`AR_SREV_9285_12_OR_LATER
(
ah
))

656 
íabÀDacFifo
 = (
	`REG_READ
(
ah
, 
AR_PHY_TURBO
) &

657 
AR_PHY_FC_ENABLE_DAC_FIFO
);

659 
phymode
 = 
AR_PHY_FC_HT_EN
 | 
AR_PHY_FC_SHORT_GI_40


660 | 
AR_PHY_FC_SINGLE_HT_LTF1
 | 
AR_PHY_FC_WALSH
 | 
íabÀDacFifo
;

662 i‡(
	`IS_CHAN_HT40
(
ch™
)) {

663 
phymode
 |
AR_PHY_FC_DYN2040_EN
;

665 i‡(
	`IS_CHAN_HT40PLUS
(
ch™
))

666 
phymode
 |
AR_PHY_FC_DYN2040_PRI_CH
;

669 
	`REG_WRITE
(
ah
, 
AR_PHY_TURBO
, 
phymode
);

671 
	`©h9k_hw_£t11nmac2040
(
ah
, 
ch™
);

673 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

675 
	`REG_WRITE
(
ah
, 
AR_GTXTO
, 25 << 
AR_GTXTO_TIMEOUT_LIMIT_S
);

676 
	`REG_WRITE
(
ah
, 
AR_CST
, 0xF << 
AR_CST_TIMEOUT_LIMIT_S
);

678 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

679 
	}
}

682 
	$¨5008_hw_¥o˚ss_öi
(
©h_hw
 *
ah
,

683 
©h9k_ch™√l
 *
ch™
)

685 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

686 
i
, 
ªgWrôes
 = 0;

687 
u32
 
modesIndex
, 
‰eqIndex
;

689 i‡(
	`IS_CHAN_5GHZ
(
ch™
)) {

690 
‰eqIndex
 = 1;

691 
modesIndex
 = 
	`IS_CHAN_HT40
(
ch™
) ? 2 : 1;

693 
‰eqIndex
 = 2;

694 
modesIndex
 = 
	`IS_CHAN_HT40
(
ch™
) ? 3 : 4;

701 
	`REG_WRITE
(
ah
, 
	`AR_PHY
(0), 0x00000007);

704 
	`REG_WRITE
(
ah
, 
AR_PHY_ADC_SERIAL_CTL
, 
AR_PHY_SEL_EXTERNAL_RADIO
);

705 i‡(
ah
->
ìp_›s
->
£t_addac
)

706 
ah
->
ìp_›s
->
	`£t_addac
◊h, 
ch™
);

708 
	`REG_WRITE_ARRAY
(&
ah
->
öiAddac
, 1, 
ªgWrôes
);

709 
	`REG_WRITE
(
ah
, 
AR_PHY_ADC_SERIAL_CTL
, 
AR_PHY_SEL_INTERNAL_ADDAC
);

711 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

713 
i
 = 0; i < 
ah
->
öiModes
.
ü_rows
; i++) {

714 
u32
 
ªg
 = 
	`INI_RA
(&
ah
->
öiModes
, 
i
, 0);

715 
u32
 
vÆ
 = 
	`INI_RA
(&
ah
->
öiModes
, 
i
, 
modesIndex
);

717 i‡(
ªg
 =
AR_AN_TOP2
 && 
ah
->
√ed_™_t›2_fixup
)

718 
vÆ
 &~
AR_AN_TOP2_PWDCLKIND
;

720 
	`REG_WRITE
(
ah
, 
ªg
, 
vÆ
);

722 i‡(
ªg
 >= 0x7800 &&Ñeg < 0x78a0

723 && 
ah
->
c⁄fig
.
™Æog_shi·ªg


724 && (
comm⁄
->
bus_›s
->
©h_bus_ty≥
 !
ATH_USB
)) {

725 
	`udñay
(100);

728 
	`DO_DELAY
(
ªgWrôes
);

731 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

733 i‡(
	`AR_SREV_9280
(
ah
Ë|| 
	`AR_SREV_9287_11_OR_LATER
(ah))

734 
	`REG_WRITE_ARRAY
(&
ah
->
öiModesRxGaö
, 
modesIndex
, 
ªgWrôes
);

736 i‡(
	`AR_SREV_9280
(
ah
Ë|| 
	`AR_SREV_9285_12_OR_LATER
(ah) ||

737 
	`AR_SREV_9287_11_OR_LATER
(
ah
))

738 
	`REG_WRITE_ARRAY
(&
ah
->
öiModesTxGaö
, 
modesIndex
, 
ªgWrôes
);

740 i‡(
	`AR_SREV_9271_10
(
ah
)) {

741 
	`REG_SET_BIT
(
ah
, 
AR_PHY_SPECTRAL_SCAN
, 
AR_PHY_SPECTRAL_SCAN_ENA
);

742 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_RF_CTL3
, 
AR_PHY_TX_END_TO_ADC_ON
, 0xa);

745 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

748 
i
 = 0; i < 
ah
->
öiComm⁄
.
ü_rows
; i++) {

749 
u32
 
ªg
 = 
	`INI_RA
(&
ah
->
öiComm⁄
, 
i
, 0);

750 
u32
 
vÆ
 = 
	`INI_RA
(&
ah
->
öiComm⁄
, 
i
, 1);

752 
	`REG_WRITE
(
ah
, 
ªg
, 
vÆ
);

754 i‡(
ªg
 >= 0x7800 &&Ñeg < 0x78a0

755 && 
ah
->
c⁄fig
.
™Æog_shi·ªg


756 && (
comm⁄
->
bus_›s
->
©h_bus_ty≥
 !
ATH_USB
)) {

757 
	`udñay
(100);

760 
	`DO_DELAY
(
ªgWrôes
);

763 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

765 
	`REG_WRITE_ARRAY
(&
ah
->
öiBB_RfGaö
, 
‰eqIndex
, 
ªgWrôes
);

767 i‡(
	`IS_CHAN_A_FAST_CLOCK
(
ah
, 
ch™
))

768 
	`REG_WRITE_ARRAY
(&
ah
->
öiModesFa°Clock
, 
modesIndex
,

769 
ªgWrôes
);

771 
	`¨5008_hw_ovîride_öi
(
ah
, 
ch™
);

772 
	`¨5008_hw_£t_ch™√l_ªgs
(
ah
, 
ch™
);

773 
	`¨5008_hw_öô_chaö_masks
(
ah
);

774 
	`©h9k_ﬁc_öô
(
ah
);

775 
	`©h9k_hw_≠∂y_txpowî
(
ah
, 
ch™
, 
Ál£
);

778 i‡(!
	`©h9k_hw_£t_rf_ªgs
(
ah
, 
ch™
, 
‰eqIndex
)) {

779 
	`©h_îr
(
	`©h9k_hw_comm⁄
(
ah
), "ar5416SetRfRegs failed\n");

780  -
EIO
;

784 
	}
}

786 
	$¨5008_hw_£t_rfmode
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
)

788 
u32
 
rfMode
 = 0;

790 i‡(
ch™
 =
NULL
)

793 i‡(
	`IS_CHAN_2GHZ
(
ch™
))

794 
rfMode
 |
AR_PHY_MODE_DYNAMIC
;

796 
rfMode
 |
AR_PHY_MODE_OFDM
;

798 i‡(!
	`AR_SREV_9280_20_OR_LATER
(
ah
))

799 
rfMode
 |(
	`IS_CHAN_5GHZ
(
ch™
)) ?

800 
AR_PHY_MODE_RF5GHZ
 : 
AR_PHY_MODE_RF2GHZ
;

802 i‡(
	`IS_CHAN_A_FAST_CLOCK
(
ah
, 
ch™
))

803 
rfMode
 |(
AR_PHY_MODE_DYNAMIC
 | 
AR_PHY_MODE_DYN_CCK_DISABLE
);

805 
	`REG_WRITE
(
ah
, 
AR_PHY_MODE
, 
rfMode
);

806 
	}
}

808 
	$¨5008_hw_m¨k_phy_öa˘ive
(
©h_hw
 *
ah
)

810 
	`REG_WRITE
(
ah
, 
AR_PHY_ACTIVE
, 
AR_PHY_ACTIVE_DIS
);

811 
	}
}

813 
	$¨5008_hw_£t_dñè_¶›e
(
©h_hw
 *
ah
,

814 
©h9k_ch™√l
 *
ch™
)

816 
u32
 
c€f_sˇÀd
, 
ds_c€f_exp
, 
ds_c€f_m™
;

817 
u32
 
˛ockMhzSˇÀd
 = 0x64000000;

818 
ch™_˚¡îs
 
˚¡îs
;

820 i‡(
	`IS_CHAN_HALF_RATE
(
ch™
))

821 
˛ockMhzSˇÀd
 = clockMhzScaled >> 1;

822 i‡(
	`IS_CHAN_QUARTER_RATE
(
ch™
))

823 
˛ockMhzSˇÀd
 = clockMhzScaled >> 2;

825 
	`©h9k_hw_gë_ch™√l_˚¡îs
(
ah
, 
ch™
, &
˚¡îs
);

826 
c€f_sˇÀd
 = 
˛ockMhzSˇÀd
 / 
˚¡îs
.
sy¡h_˚¡î
;

828 
	`©h9k_hw_gë_dñè_¶›e_vÆs
(
ah
, 
c€f_sˇÀd
, &
ds_c€f_m™
,

829 &
ds_c€f_exp
);

831 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TIMING3
,

832 
AR_PHY_TIMING3_DSC_MAN
, 
ds_c€f_m™
);

833 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TIMING3
,

834 
AR_PHY_TIMING3_DSC_EXP
, 
ds_c€f_exp
);

836 
c€f_sˇÀd
 = (9 * coef_scaled) / 10;

838 
	`©h9k_hw_gë_dñè_¶›e_vÆs
(
ah
, 
c€f_sˇÀd
, &
ds_c€f_m™
,

839 &
ds_c€f_exp
);

841 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_HALFGI
,

842 
AR_PHY_HALFGI_DSC_MAN
, 
ds_c€f_m™
);

843 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_HALFGI
,

844 
AR_PHY_HALFGI_DSC_EXP
, 
ds_c€f_exp
);

845 
	}
}

847 
boﬁ
 
	$¨5008_hw_rfbus_ªq
(
©h_hw
 *
ah
)

849 
	`REG_WRITE
(
ah
, 
AR_PHY_RFBUS_REQ
, 
AR_PHY_RFBUS_REQ_EN
);

850  
	`©h9k_hw_waô
(
ah
, 
AR_PHY_RFBUS_GRANT
, 
AR_PHY_RFBUS_GRANT_EN
,

851 
AR_PHY_RFBUS_GRANT_EN
, 
AH_WAIT_TIMEOUT
);

852 
	}
}

854 
	$¨5008_hw_rfbus_d⁄e
(
©h_hw
 *
ah
)

856 
u32
 
sy¡hDñay
 = 
	`REG_READ
(
ah
, 
AR_PHY_RX_DELAY
Ë& 
AR_PHY_RX_DELAY_DELAY
;

858 
	`©h9k_hw_sy¡h_dñay
(
ah
,áh->
curch™
, 
sy¡hDñay
);

860 
	`REG_WRITE
(
ah
, 
AR_PHY_RFBUS_REQ
, 0);

861 
	}
}

863 
	$¨5008_ª°‹e_chaömask
(
©h_hw
 *
ah
)

865 
rx_chaömask
 = 
ah
->
rxchaömask
;

867 i‡((
rx_chaömask
 == 0x5) || (rx_chainmask == 0x3)) {

868 
	`REG_WRITE
(
ah
, 
AR_PHY_RX_CHAINMASK
, 
rx_chaömask
);

869 
	`REG_WRITE
(
ah
, 
AR_PHY_CAL_CHAINMASK
, 
rx_chaömask
);

871 
	}
}

873 
u32
 
	$¨9160_hw_compuã_∂l_c⁄åﬁ
(
©h_hw
 *
ah
,

874 
©h9k_ch™√l
 *
ch™
)

876 
u32
 
∂l
;

878 
∂l
 = 
	`SM
(0x5, 
AR_RTC_9160_PLL_REFDIV
);

880 i‡(
ch™
 && 
	`IS_CHAN_HALF_RATE
(chan))

881 
∂l
 |
	`SM
(0x1, 
AR_RTC_9160_PLL_CLKSEL
);

882 i‡(
ch™
 && 
	`IS_CHAN_QUARTER_RATE
(chan))

883 
∂l
 |
	`SM
(0x2, 
AR_RTC_9160_PLL_CLKSEL
);

885 i‡(
ch™
 && 
	`IS_CHAN_5GHZ
(chan))

886 
∂l
 |
	`SM
(0x50, 
AR_RTC_9160_PLL_DIV
);

888 
∂l
 |
	`SM
(0x58, 
AR_RTC_9160_PLL_DIV
);

890  
∂l
;

891 
	}
}

893 
u32
 
	$¨5008_hw_compuã_∂l_c⁄åﬁ
(
©h_hw
 *
ah
,

894 
©h9k_ch™√l
 *
ch™
)

896 
u32
 
∂l
;

898 
∂l
 = 
AR_RTC_PLL_REFDIV_5
 | 
AR_RTC_PLL_DIV2
;

900 i‡(
ch™
 && 
	`IS_CHAN_HALF_RATE
(chan))

901 
∂l
 |
	`SM
(0x1, 
AR_RTC_PLL_CLKSEL
);

902 i‡(
ch™
 && 
	`IS_CHAN_QUARTER_RATE
(chan))

903 
∂l
 |
	`SM
(0x2, 
AR_RTC_PLL_CLKSEL
);

905 i‡(
ch™
 && 
	`IS_CHAN_5GHZ
(chan))

906 
∂l
 |
	`SM
(0xa, 
AR_RTC_PLL_DIV
);

908 
∂l
 |
	`SM
(0xb, 
AR_RTC_PLL_DIV
);

910  
∂l
;

911 
	}
}

913 
boﬁ
 
	$¨5008_hw_™i_c⁄åﬁ_√w
(
©h_hw
 *
ah
,

914 
©h9k_™i_cmd
 
cmd
,

915 
∑øm
)

917 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

918 
©h9k_ch™√l
 *
ch™
 = 
ah
->
curch™
;

919 
¨5416AniSèã
 *
™iSèã
 = &
ah
->
™i
;

920 
s32
 
vÆue
;

922 
cmd
 & 
ah
->
™i_fun˘i⁄
) {

923 
ATH9K_ANI_OFDM_WEAK_SIGNAL_DETECTION
:{

931 
u32
 
⁄
 = 
∑øm
 ? 1 : 0;

933 i‡(
⁄
)

934 
	`REG_SET_BIT
(
ah
, 
AR_PHY_SFCORR_LOW
,

935 
AR_PHY_SFCORR_LOW_USE_SELF_CORR_LOW
);

937 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_SFCORR_LOW
,

938 
AR_PHY_SFCORR_LOW_USE_SELF_CORR_LOW
);

940 i‡(
⁄
 !
™iSèã
->
ofdmWókSigDëe˘
) {

941 
	`©h_dbg
(
comm⁄
, 
ANI
,

943 
ch™
->
ch™√l
,

944 
™iSèã
->
ofdmWókSigDëe˘
 ?

946 
⁄
 ? "on" : "off");

947 i‡(
⁄
)

948 
ah
->
°©s
.
a°_™i_ofdm⁄
++;

950 
ah
->
°©s
.
a°_™i_ofdmoff
++;

951 
™iSèã
->
ofdmWókSigDëe˘
 = 
⁄
;

955 
ATH9K_ANI_FIRSTEP_LEVEL
:{

956 
u32
 
Àvñ
 = 
∑øm
;

958 
vÆue
 = 
Àvñ
 * 2;

959 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_FIND_SIG
,

960 
AR_PHY_FIND_SIG_FIRSTEP
, 
vÆue
);

961 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_FIND_SIG_LOW
,

962 
AR_PHY_FIND_SIG_FIRSTEP_LOW
, 
vÆue
);

964 i‡(
Àvñ
 !
™iSèã
->
fú°ïLevñ
) {

965 
	`©h_dbg
(
comm⁄
, 
ANI
,

967 
ch™
->
ch™√l
,

968 
™iSèã
->
fú°ïLevñ
,

969 
Àvñ
,

970 
ATH9K_ANI_FIRSTEP_LVL
,

971 
vÆue
,

972 
™iSèã
->
öiDef
.
fú°ï
);

973 
	`©h_dbg
(
comm⁄
, 
ANI
,

975 
ch™
->
ch™√l
,

976 
™iSèã
->
fú°ïLevñ
,

977 
Àvñ
,

978 
ATH9K_ANI_FIRSTEP_LVL
,

979 
vÆue
,

980 
™iSèã
->
öiDef
.
fú°ïLow
);

981 i‡(
Àvñ
 > 
™iSèã
->
fú°ïLevñ
)

982 
ah
->
°©s
.
a°_™i_°ïup
++;

983 i‡(
Àvñ
 < 
™iSèã
->
fú°ïLevñ
)

984 
ah
->
°©s
.
a°_™i_°ïdown
++;

985 
™iSèã
->
fú°ïLevñ
 = 
Àvñ
;

989 
ATH9K_ANI_SPUR_IMMUNITY_LEVEL
:{

990 
u32
 
Àvñ
 = 
∑øm
;

992 
vÆue
 = (
Àvñ
 + 1) * 2;

993 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TIMING5
,

994 
AR_PHY_TIMING5_CYCPWR_THR1
, 
vÆue
);

996 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_EXT_CCA
,

997 
AR_PHY_EXT_TIMING5_CYCPWR_THR1
, 
vÆue
 - 1);

999 i‡(
Àvñ
 !
™iSèã
->
•urImmunôyLevñ
) {

1000 
	`©h_dbg
(
comm⁄
, 
ANI
,

1002 
ch™
->
ch™√l
,

1003 
™iSèã
->
•urImmunôyLevñ
,

1004 
Àvñ
,

1005 
ATH9K_ANI_SPUR_IMMUNE_LVL
,

1006 
vÆue
,

1007 
™iSèã
->
öiDef
.
cy˝wrThr1
);

1008 
	`©h_dbg
(
comm⁄
, 
ANI
,

1010 
ch™
->
ch™√l
,

1011 
™iSèã
->
•urImmunôyLevñ
,

1012 
Àvñ
,

1013 
ATH9K_ANI_SPUR_IMMUNE_LVL
,

1014 
vÆue
,

1015 
™iSèã
->
öiDef
.
cy˝wrThr1Ext
);

1016 i‡(
Àvñ
 > 
™iSèã
->
•urImmunôyLevñ
)

1017 
ah
->
°©s
.
a°_™i_•urup
++;

1018 i‡(
Àvñ
 < 
™iSèã
->
•urImmunôyLevñ
)

1019 
ah
->
°©s
.
a°_™i_•urdown
++;

1020 
™iSèã
->
•urImmunôyLevñ
 = 
Àvñ
;

1024 
ATH9K_ANI_MRC_CCK
:

1029 
	`WARN_ON
(1);

1032 
	`©h_dbg
(
comm⁄
, 
ANI
, "övÆid cmd %u\n", 
cmd
);

1033  
Ál£
;

1036 
	`©h_dbg
(
comm⁄
, 
ANI
,

1038 
™iSèã
->
•urImmunôyLevñ
,

1039 
™iSèã
->
ofdmWókSigDëe˘
 ? "on" : "off",

1040 
™iSèã
->
fú°ïLevñ
,

1041 
™iSèã
->
mrcCCK
 ? "on" : "off",

1042 
™iSèã
->
li°íTime
,

1043 
™iSèã
->
ofdmPhyEºCou¡
,

1044 
™iSèã
->
cckPhyEºCou¡
);

1045  
åue
;

1046 
	}
}

1048 
	$¨5008_hw_do_gënf
(
©h_hw
 *
ah
,

1049 
öt16_t
 
nÁºay
[
NUM_NF_READINGS
])

1051 
öt16_t
 
nf
;

1053 
nf
 = 
	`MS
(
	`REG_READ
(
ah
, 
AR_PHY_CCA
), 
AR_PHY_MINCCA_PWR
);

1054 
nÁºay
[0] = 
	`sign_exãnd32
(
nf
, 8);

1056 
nf
 = 
	`MS
(
	`REG_READ
(
ah
, 
AR_PHY_CH1_CCA
), 
AR_PHY_CH1_MINCCA_PWR
);

1057 
nÁºay
[1] = 
	`sign_exãnd32
(
nf
, 8);

1059 
nf
 = 
	`MS
(
	`REG_READ
(
ah
, 
AR_PHY_CH2_CCA
), 
AR_PHY_CH2_MINCCA_PWR
);

1060 
nÁºay
[2] = 
	`sign_exãnd32
(
nf
, 8);

1062 i‡(!
	`IS_CHAN_HT40
(
ah
->
curch™
))

1065 
nf
 = 
	`MS
(
	`REG_READ
(
ah
, 
AR_PHY_EXT_CCA
), 
AR_PHY_EXT_MINCCA_PWR
);

1066 
nÁºay
[3] = 
	`sign_exãnd32
(
nf
, 8);

1068 
nf
 = 
	`MS
(
	`REG_READ
(
ah
, 
AR_PHY_CH1_EXT_CCA
), 
AR_PHY_CH1_EXT_MINCCA_PWR
);

1069 
nÁºay
[4] = 
	`sign_exãnd32
(
nf
, 8);

1071 
nf
 = 
	`MS
(
	`REG_READ
(
ah
, 
AR_PHY_CH2_EXT_CCA
), 
AR_PHY_CH2_EXT_MINCCA_PWR
);

1072 
nÁºay
[5] = 
	`sign_exãnd32
(
nf
, 8);

1073 
	}
}

1080 
	$¨5008_hw_™i_ˇche_öi_ªgs
(
©h_hw
 *
ah
)

1082 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1083 
©h9k_ch™√l
 *
ch™
 = 
ah
->
curch™
;

1084 
¨5416AniSèã
 *
™iSèã
 = &
ah
->
™i
;

1085 
©h9k_™i_deÁu…
 *
öiDef
;

1086 
u32
 
vÆ
;

1088 
öiDef
 = &
™iSèã
->iniDef;

1090 
	`©h_dbg
(
comm⁄
, 
ANI
, "ver %d.%d opmode %u chan %d Mhz\n",

1091 
ah
->
hw_vîsi⁄
.
macVîsi⁄
,

1092 
ah
->
hw_vîsi⁄
.
macRev
,

1093 
ah
->
›mode
,

1094 
ch™
->
ch™√l
);

1096 
vÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_SFCORR
);

1097 
öiDef
->
m1Thªsh
 = 
	`MS
(
vÆ
, 
AR_PHY_SFCORR_M1_THRESH
);

1098 
öiDef
->
m2Thªsh
 = 
	`MS
(
vÆ
, 
AR_PHY_SFCORR_M2_THRESH
);

1099 
öiDef
->
m2Cou¡Thr
 = 
	`MS
(
vÆ
, 
AR_PHY_SFCORR_M2COUNT_THR
);

1101 
vÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_SFCORR_LOW
);

1102 
öiDef
->
m1ThªshLow
 = 
	`MS
(
vÆ
, 
AR_PHY_SFCORR_LOW_M1_THRESH_LOW
);

1103 
öiDef
->
m2ThªshLow
 = 
	`MS
(
vÆ
, 
AR_PHY_SFCORR_LOW_M2_THRESH_LOW
);

1104 
öiDef
->
m2Cou¡ThrLow
 = 
	`MS
(
vÆ
, 
AR_PHY_SFCORR_LOW_M2COUNT_THR_LOW
);

1106 
vÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_SFCORR_EXT
);

1107 
öiDef
->
m1ThªshExt
 = 
	`MS
(
vÆ
, 
AR_PHY_SFCORR_EXT_M1_THRESH
);

1108 
öiDef
->
m2ThªshExt
 = 
	`MS
(
vÆ
, 
AR_PHY_SFCORR_EXT_M2_THRESH
);

1109 
öiDef
->
m1ThªshLowExt
 = 
	`MS
(
vÆ
, 
AR_PHY_SFCORR_EXT_M1_THRESH_LOW
);

1110 
öiDef
->
m2ThªshLowExt
 = 
	`MS
(
vÆ
, 
AR_PHY_SFCORR_EXT_M2_THRESH_LOW
);

1111 
öiDef
->
fú°ï
 = 
	`REG_READ_FIELD
(
ah
,

1112 
AR_PHY_FIND_SIG
,

1113 
AR_PHY_FIND_SIG_FIRSTEP
);

1114 
öiDef
->
fú°ïLow
 = 
	`REG_READ_FIELD
(
ah
,

1115 
AR_PHY_FIND_SIG_LOW
,

1116 
AR_PHY_FIND_SIG_FIRSTEP_LOW
);

1117 
öiDef
->
cy˝wrThr1
 = 
	`REG_READ_FIELD
(
ah
,

1118 
AR_PHY_TIMING5
,

1119 
AR_PHY_TIMING5_CYCPWR_THR1
);

1120 
öiDef
->
cy˝wrThr1Ext
 = 
	`REG_READ_FIELD
(
ah
,

1121 
AR_PHY_EXT_CCA
,

1122 
AR_PHY_EXT_TIMING5_CYCPWR_THR1
);

1125 
™iSèã
->
•urImmunôyLevñ
 = 
ATH9K_ANI_SPUR_IMMUNE_LVL
;

1126 
™iSèã
->
fú°ïLevñ
 = 
ATH9K_ANI_FIRSTEP_LVL
;

1127 
™iSèã
->
ofdmWókSigDëe˘
 = 
åue
;

1128 
™iSèã
->
mrcCCK
 = 
Ál£
;

1129 
	}
}

1131 
	$¨5008_hw_£t_nf_limôs
(
©h_hw
 *
ah
)

1133 
ah
->
nf_2g
.
max
 = 
AR_PHY_CCA_MAX_GOOD_VAL_5416_2GHZ
;

1134 
ah
->
nf_2g
.
mö
 = 
AR_PHY_CCA_MIN_GOOD_VAL_5416_2GHZ
;

1135 
ah
->
nf_2g
.
nomöÆ
 = 
AR_PHY_CCA_NOM_VAL_5416_2GHZ
;

1136 
ah
->
nf_5g
.
max
 = 
AR_PHY_CCA_MAX_GOOD_VAL_5416_5GHZ
;

1137 
ah
->
nf_5g
.
mö
 = 
AR_PHY_CCA_MIN_GOOD_VAL_5416_5GHZ
;

1138 
ah
->
nf_5g
.
nomöÆ
 = 
AR_PHY_CCA_NOM_VAL_5416_5GHZ
;

1139 
	}
}

1141 
	$¨5008_hw_£t_ød¨_∑øms
(
©h_hw
 *
ah
,

1142 
©h_hw_ød¨_c⁄f
 *
c⁄f
)

1144 
u32
 
ød¨_0
 = 0, 
ød¨_1
 = 0;

1146 i‡(!
c⁄f
) {

1147 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_RADAR_0
, 
AR_PHY_RADAR_0_ENA
);

1151 
ød¨_0
 |
AR_PHY_RADAR_0_ENA
 | 
AR_PHY_RADAR_0_FFT_ENA
;

1152 
ød¨_0
 |
	`SM
(
c⁄f
->
fú_powî
, 
AR_PHY_RADAR_0_FIRPWR
);

1153 
ød¨_0
 |
	`SM
(
c⁄f
->
ød¨_rssi
, 
AR_PHY_RADAR_0_RRSSI
);

1154 
ød¨_0
 |
	`SM
(
c⁄f
->
pul£_height
, 
AR_PHY_RADAR_0_HEIGHT
);

1155 
ød¨_0
 |
	`SM
(
c⁄f
->
pul£_rssi
, 
AR_PHY_RADAR_0_PRSSI
);

1156 
ød¨_0
 |
	`SM
(
c⁄f
->
pul£_öb™d
, 
AR_PHY_RADAR_0_INBAND
);

1158 
ød¨_1
 |
AR_PHY_RADAR_1_MAX_RRSSI
;

1159 
ød¨_1
 |
AR_PHY_RADAR_1_BLOCK_CHECK
;

1160 
ød¨_1
 |
	`SM
(
c⁄f
->
pul£_maxÀn
, 
AR_PHY_RADAR_1_MAXLEN
);

1161 
ød¨_1
 |
	`SM
(
c⁄f
->
pul£_öb™d_°ï
, 
AR_PHY_RADAR_1_RELSTEP_THRESH
);

1162 
ød¨_1
 |
	`SM
(
c⁄f
->
ød¨_öb™d
, 
AR_PHY_RADAR_1_RELPWR_THRESH
);

1164 
	`REG_WRITE
(
ah
, 
AR_PHY_RADAR_0
, 
ød¨_0
);

1165 
	`REG_WRITE
(
ah
, 
AR_PHY_RADAR_1
, 
ød¨_1
);

1166 i‡(
c⁄f
->
ext_ch™√l
)

1167 
	`REG_SET_BIT
(
ah
, 
AR_PHY_RADAR_EXT
, 
AR_PHY_RADAR_EXT_ENA
);

1169 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_RADAR_EXT
, 
AR_PHY_RADAR_EXT_ENA
);

1170 
	}
}

1172 
	$¨5008_hw_£t_ød¨_c⁄f
(
©h_hw
 *
ah
)

1174 
©h_hw_ød¨_c⁄f
 *
c⁄f
 = &
ah
->
ød¨_c⁄f
;

1176 
c⁄f
->
fú_powî
 = -33;

1177 
c⁄f
->
ød¨_rssi
 = 20;

1178 
c⁄f
->
pul£_height
 = 10;

1179 
c⁄f
->
pul£_rssi
 = 24;

1180 
c⁄f
->
pul£_öb™d
 = 15;

1181 
c⁄f
->
pul£_maxÀn
 = 255;

1182 
c⁄f
->
pul£_öb™d_°ï
 = 12;

1183 
c⁄f
->
ød¨_öb™d
 = 8;

1184 
	}
}

1186 
	$¨5008_hw_gë_adc_íå›y
(
©h_hw
 *
ah
, 
u8
 *
buf
, 
size_t
 
Àn
)

1188 
i
, 
j
;

1190 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TEST
, 
AR_PHY_TEST_BBB_OBS_SEL
, 1);

1191 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_TEST
, 
AR_PHY_TEST_RX_OBS_SEL_BIT5
);

1192 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TEST2
, 
AR_PHY_TEST2_RX_OBS_SEL
, 0);

1194 
	`mem£t
(
buf
, 0, 
Àn
);

1195 
i
 = 0; i < 
Àn
; i++) {

1196 
j
 = 0; j < 4; j++) {

1197 
u32
 
ªgvÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_TST_ADC
);

1199 
buf
[
i
] <<= 2;

1200 
buf
[
i
] |(
ªgvÆ
 & 1Ë| (‘egvÆ & 
	`BIT
(9)) >> 8);

1201 
	`udñay
(1);

1204 
	}
}

1206 
	$¨5008_hw_©èch_phy_›s
(
©h_hw
 *
ah
)

1208 
©h_hw_¥iv©e_›s
 *
¥iv_›s
 = 
	`©h9k_hw_¥iv©e_›s
(
ah
);

1209 
©h_hw_›s
 *
›s
 = 
	`©h9k_hw_›s
(
ah
);

1210 c⁄° 
u32
 
¨5416_cˇ_ªgs
[6] = {

1211 
AR_PHY_CCA
,

1212 
AR_PHY_CH1_CCA
,

1213 
AR_PHY_CH2_CCA
,

1214 
AR_PHY_EXT_CCA
,

1215 
AR_PHY_CH1_EXT_CCA
,

1216 
AR_PHY_CH2_EXT_CCA


1218 
ªt
;

1220 
ªt
 = 
	`¨5008_hw_rf_Æloc_ext_b™ks
(
ah
);

1221 i‡(
ªt
)

1222  
ªt
;

1224 
›s
->
gë_adc_íå›y
 = 
¨5008_hw_gë_adc_íå›y
;

1226 
¥iv_›s
->
rf_£t_‰eq
 = 
¨5008_hw_£t_ch™√l
;

1227 
¥iv_›s
->
•ur_môig©e_‰eq
 = 
¨5008_hw_•ur_môig©e
;

1229 
¥iv_›s
->
£t_rf_ªgs
 = 
¨5008_hw_£t_rf_ªgs
;

1230 
¥iv_›s
->
£t_ch™√l_ªgs
 = 
¨5008_hw_£t_ch™√l_ªgs
;

1231 
¥iv_›s
->
öô_bb
 = 
¨5008_hw_öô_bb
;

1232 
¥iv_›s
->
¥o˚ss_öi
 = 
¨5008_hw_¥o˚ss_öi
;

1233 
¥iv_›s
->
£t_rfmode
 = 
¨5008_hw_£t_rfmode
;

1234 
¥iv_›s
->
m¨k_phy_öa˘ive
 = 
¨5008_hw_m¨k_phy_öa˘ive
;

1235 
¥iv_›s
->
£t_dñè_¶›e
 = 
¨5008_hw_£t_dñè_¶›e
;

1236 
¥iv_›s
->
rfbus_ªq
 = 
¨5008_hw_rfbus_ªq
;

1237 
¥iv_›s
->
rfbus_d⁄e
 = 
¨5008_hw_rfbus_d⁄e
;

1238 
¥iv_›s
->
ª°‹e_chaömask
 = 
¨5008_ª°‹e_chaömask
;

1239 
¥iv_›s
->
do_gënf
 = 
¨5008_hw_do_gënf
;

1240 
¥iv_›s
->
£t_ød¨_∑øms
 = 
¨5008_hw_£t_ød¨_∑øms
;

1242 
¥iv_›s
->
™i_c⁄åﬁ
 = 
¨5008_hw_™i_c⁄åﬁ_√w
;

1243 
¥iv_›s
->
™i_ˇche_öi_ªgs
 = 
¨5008_hw_™i_ˇche_öi_ªgs
;

1245 i‡(
	`AR_SREV_9100
(
ah
Ë|| 
	`AR_SREV_9160_10_OR_LATER
(ah))

1246 
¥iv_›s
->
compuã_∂l_c⁄åﬁ
 = 
¨9160_hw_compuã_∂l_c⁄åﬁ
;

1248 
¥iv_›s
->
compuã_∂l_c⁄åﬁ
 = 
¨5008_hw_compuã_∂l_c⁄åﬁ
;

1250 
	`¨5008_hw_£t_nf_limôs
(
ah
);

1251 
	`¨5008_hw_£t_ød¨_c⁄f
(
ah
);

1252 
	`mem˝y
(
ah
->
nf_ªgs
, 
¨5416_cˇ_ªgs
, (ah->nf_regs));

1254 
	}
}

	@ar9001_initvals.h

17 c⁄° 
u32
 
	g¨5416Modes_9100
[][5] = {

87 c⁄° 
u32
 
	g¨5416Comm⁄_9100
[][2] = {

462 c⁄° 
u32
 
	g¨5416B™k6_9100
[][3] = {

499 c⁄° 
u32
 
	g¨5416B™k6TPC_9100
[][3] = {

536 c⁄° 
u32
 
	g¨5416Addac_9100
[][2] = {

572 c⁄° 
u32
 
	g¨5416Modes_9160
[][5] = {

640 c⁄° 
u32
 
	g¨5416Comm⁄_9160
[][2] = {

1018 c⁄° 
u32
 
	g¨5416Addac_9160
[][2] = {

1054 c⁄° 
u32
 
	g¨5416Addac_9160_1_1
[][2] = {

	@ar9002_calib.c

17 
	~"hw.h
"

18 
	~"hw-›s.h
"

19 
	~"¨9002_phy.h
"

21 
	#AR9285_CLCAL_REDO_THRESH
 1

	)

23 
	e¨9002_ˇl_ty≥s
 {

24 
	mADC_GAIN_CAL
 = 
BIT
(0),

25 
	mADC_DC_CAL
 = 
BIT
(1),

26 
	mIQ_MISMATCH_CAL
 = 
BIT
(2),

29 
boﬁ
 
	$¨9002_hw_is_ˇl_suµ‹ãd
(
©h_hw
 *
ah
,

30 
©h9k_ch™√l
 *
ch™
,

31 
¨9002_ˇl_ty≥s
 
ˇl_ty≥
)

33 
boﬁ
 
suµ‹ãd
 = 
Ál£
;

34 
ah
->
suµ_ˇls
 & 
ˇl_ty≥
) {

35 
IQ_MISMATCH_CAL
:

36 
suµ‹ãd
 = 
åue
;

38 
ADC_GAIN_CAL
:

39 
ADC_DC_CAL
:

41 i‡(!((
	`IS_CHAN_2GHZ
(
ch™
Ë|| 
	`IS_CHAN_A_FAST_CLOCK
(
ah
, chan)) &&

42 
	`IS_CHAN_HT20
(
ch™
)))

43 
suµ‹ãd
 = 
åue
;

46  
suµ‹ãd
;

47 
	}
}

49 
	$¨9002_hw_£tup_ˇlibøti⁄
(
©h_hw
 *
ah
,

50 
©h9k_ˇl_li°
 *
cuºCÆ
)

52 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

54 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_TIMING_CTRL4
(0),

55 
AR_PHY_TIMING_CTRL4_IQCAL_LOG_COUNT_MAX
,

56 
cuºCÆ
->
ˇlD©a
->
ˇlCou¡Max
);

58 
cuºCÆ
->
ˇlD©a
->
ˇlTy≥
) {

59 
IQ_MISMATCH_CAL
:

60 
	`REG_WRITE
(
ah
, 
AR_PHY_CALMODE
, 
AR_PHY_CALMODE_IQ
);

61 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

64 
ADC_GAIN_CAL
:

65 
	`REG_WRITE
(
ah
, 
AR_PHY_CALMODE
, 
AR_PHY_CALMODE_ADC_GAIN
);

66 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "starting ADC Gain Calibration\n");

68 
ADC_DC_CAL
:

69 
	`REG_WRITE
(
ah
, 
AR_PHY_CALMODE
, 
AR_PHY_CALMODE_ADC_DC_PER
);

70 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "starting ADC DC Calibration\n");

74 
	`REG_SET_BIT
(
ah
, 
	`AR_PHY_TIMING_CTRL4
(0),

75 
AR_PHY_TIMING_CTRL4_DO_CAL
);

76 
	}
}

78 
boﬁ
 
	$¨9002_hw_≥r_ˇlibøti⁄
(
©h_hw
 *
ah
,

79 
©h9k_ch™√l
 *
ich™
,

80 
u8
 
rxchaömask
,

81 
©h9k_ˇl_li°
 *
cuºCÆ
)

83 
©h9k_hw_ˇl_d©a
 *
ˇld©a
 = 
ah
->caldata;

84 
boﬁ
 
isˇld⁄e
 = 
Ál£
;

86 i‡(
cuºCÆ
->
ˇlSèã
 =
CAL_RUNNING
) {

87 i‡(!(
	`REG_READ
(
ah
, 
	`AR_PHY_TIMING_CTRL4
(0)) &

88 
AR_PHY_TIMING_CTRL4_DO_CAL
)) {

90 
cuºCÆ
->
ˇlD©a
->
	`ˇlCﬁÀ˘
(
ah
);

91 
ah
->
ˇl_ßm∂es
++;

93 i‡(
ah
->
ˇl_ßm∂es
 >=

94 
cuºCÆ
->
ˇlD©a
->
ˇlNumSam∂es
) {

95 
i
, 
numChaös
 = 0;

96 
i
 = 0; i < 
AR5416_MAX_CHAINS
; i++) {

97 i‡(
rxchaömask
 & (1 << 
i
))

98 
numChaös
++;

101 
cuºCÆ
->
ˇlD©a
->
	`ˇlPo°Proc
(
ah
, 
numChaös
);

102 
ˇld©a
->
CÆVÆid
 |
cuºCÆ
->
ˇlD©a
->
ˇlTy≥
;

103 
cuºCÆ
->
ˇlSèã
 = 
CAL_DONE
;

104 
isˇld⁄e
 = 
åue
;

106 
	`¨9002_hw_£tup_ˇlibøti⁄
(
ah
, 
cuºCÆ
);

109 } i‡(!(
ˇld©a
->
CÆVÆid
 & 
cuºCÆ
->
ˇlD©a
->
ˇlTy≥
)) {

110 
	`©h9k_hw_ª£t_ˇlibøti⁄
(
ah
, 
cuºCÆ
);

113  
isˇld⁄e
;

114 
	}
}

116 
	$¨9002_hw_iqˇl_cﬁÀ˘
(
©h_hw
 *
ah
)

118 
i
;

120 
i
 = 0; i < 
AR5416_MAX_CHAINS
; i++) {

121 
ah
->
tŸÆPowîMósI
[
i
] +=

122 
	`REG_READ
(
ah
, 
	`AR_PHY_CAL_MEAS_0
(
i
));

123 
ah
->
tŸÆPowîMósQ
[
i
] +=

124 
	`REG_READ
(
ah
, 
	`AR_PHY_CAL_MEAS_1
(
i
));

125 
ah
->
tŸÆIqC‹rMós
[
i
] +=

126 (
öt32_t
Ë
	`REG_READ
(
ah
, 
	`AR_PHY_CAL_MEAS_2
(
i
));

127 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
CALIBRATE
,

129 
ah
->
ˇl_ßm∂es
, 
i
,áh->
tŸÆPowîMósI
[i],

130 
ah
->
tŸÆPowîMósQ
[
i
],

131 
ah
->
tŸÆIqC‹rMós
[
i
]);

133 
	}
}

135 
	$¨9002_hw_adc_gaöˇl_cﬁÀ˘
(
©h_hw
 *
ah
)

137 
i
;

139 
i
 = 0; i < 
AR5416_MAX_CHAINS
; i++) {

140 
ah
->
tŸÆAdcIOddPha£
[
i
] +=

141 
	`REG_READ
(
ah
, 
	`AR_PHY_CAL_MEAS_0
(
i
));

142 
ah
->
tŸÆAdcIEvíPha£
[
i
] +=

143 
	`REG_READ
(
ah
, 
	`AR_PHY_CAL_MEAS_1
(
i
));

144 
ah
->
tŸÆAdcQOddPha£
[
i
] +=

145 
	`REG_READ
(
ah
, 
	`AR_PHY_CAL_MEAS_2
(
i
));

146 
ah
->
tŸÆAdcQEvíPha£
[
i
] +=

147 
	`REG_READ
(
ah
, 
	`AR_PHY_CAL_MEAS_3
(
i
));

149 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
CALIBRATE
,

151 
ah
->
ˇl_ßm∂es
, 
i
,

152 
ah
->
tŸÆAdcIOddPha£
[
i
],

153 
ah
->
tŸÆAdcIEvíPha£
[
i
],

154 
ah
->
tŸÆAdcQOddPha£
[
i
],

155 
ah
->
tŸÆAdcQEvíPha£
[
i
]);

157 
	}
}

159 
	$¨9002_hw_adc_dcˇl_cﬁÀ˘
(
©h_hw
 *
ah
)

161 
i
;

163 
i
 = 0; i < 
AR5416_MAX_CHAINS
; i++) {

164 
ah
->
tŸÆAdcDcOff£tIOddPha£
[
i
] +=

165 (
öt32_t
Ë
	`REG_READ
(
ah
, 
	`AR_PHY_CAL_MEAS_0
(
i
));

166 
ah
->
tŸÆAdcDcOff£tIEvíPha£
[
i
] +=

167 (
öt32_t
Ë
	`REG_READ
(
ah
, 
	`AR_PHY_CAL_MEAS_1
(
i
));

168 
ah
->
tŸÆAdcDcOff£tQOddPha£
[
i
] +=

169 (
öt32_t
Ë
	`REG_READ
(
ah
, 
	`AR_PHY_CAL_MEAS_2
(
i
));

170 
ah
->
tŸÆAdcDcOff£tQEvíPha£
[
i
] +=

171 (
öt32_t
Ë
	`REG_READ
(
ah
, 
	`AR_PHY_CAL_MEAS_3
(
i
));

173 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
CALIBRATE
,

175 
ah
->
ˇl_ßm∂es
, 
i
,

176 
ah
->
tŸÆAdcDcOff£tIOddPha£
[
i
],

177 
ah
->
tŸÆAdcDcOff£tIEvíPha£
[
i
],

178 
ah
->
tŸÆAdcDcOff£tQOddPha£
[
i
],

179 
ah
->
tŸÆAdcDcOff£tQEvíPha£
[
i
]);

181 
	}
}

183 
	$¨9002_hw_iqˇlibøã
(
©h_hw
 *
ah
, 
u8
 
numChaös
)

185 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

186 
u32
 
powîMósQ
, 
powîMósI
, 
iqC‹rMós
;

187 
u32
 
qCoffDíom
, 
iCoffDíom
;

188 
öt32_t
 
qCoff
, 
iCoff
;

189 
iqC‹rNeg
, 
i
;

191 
i
 = 0; i < 
numChaös
; i++) {

192 
powîMósI
 = 
ah
->
tŸÆPowîMósI
[
i
];

193 
powîMósQ
 = 
ah
->
tŸÆPowîMósQ
[
i
];

194 
iqC‹rMós
 = 
ah
->
tŸÆIqC‹rMós
[
i
];

196 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

198 
i
);

200 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

202 
i
, 
ah
->
tŸÆIqC‹rMós
[i]);

204 
iqC‹rNeg
 = 0;

206 i‡(
iqC‹rMós
 > 0x80000000) {

207 
iqC‹rMós
 = (0xffffffff - iqCorrMeas) + 1;

208 
iqC‹rNeg
 = 1;

211 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "Chn %dÖwr_meas_i = 0x%08x\n",

212 
i
, 
powîMósI
);

213 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "Chn %dÖwr_meas_q = 0x%08x\n",

214 
i
, 
powîMósQ
);

215 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "iqC‹rNeg i†0x%08x\n", 
iqC‹rNeg
);

217 
iCoffDíom
 = (
powîMósI
 / 2 + 
powîMósQ
 / 2) / 128;

218 
qCoffDíom
 = 
powîMósQ
 / 64;

220 i‡((
powîMósQ
 !0Ë&& (
iCoffDíom
 != 0) &&

221 (
qCoffDíom
 != 0)) {

222 
iCoff
 = 
iqC‹rMós
 / 
iCoffDíom
;

223 
qCoff
 = 
powîMósI
 / 
qCoffDíom
 - 64;

224 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "Chn %d iCoff = 0x%08x\n",

225 
i
, 
iCoff
);

226 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "Chn %d qCoff = 0x%08x\n",

227 
i
, 
qCoff
);

229 
iCoff
 = iCoff & 0x3f;

230 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

231 "New: Ch¿%d iCof‡0x%08x\n", 
i
, 
iCoff
);

232 i‡(
iqC‹rNeg
 == 0x0)

233 
iCoff
 = 0x40 - iCoff;

235 i‡(
qCoff
 > 15)

236 
qCoff
 = 15;

237 i‡(
qCoff
 <= -16)

238 
qCoff
 = -16;

240 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

242 
i
, 
iCoff
, 
qCoff
);

244 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_TIMING_CTRL4
(
i
),

245 
AR_PHY_TIMING_CTRL4_IQCORR_Q_I_COFF
,

246 
iCoff
);

247 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_TIMING_CTRL4
(
i
),

248 
AR_PHY_TIMING_CTRL4_IQCORR_Q_Q_COFF
,

249 
qCoff
);

250 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

252 
i
);

256 
	`REG_SET_BIT
(
ah
, 
	`AR_PHY_TIMING_CTRL4
(0),

257 
AR_PHY_TIMING_CTRL4_IQCORR_ENABLE
);

258 
	}
}

260 
	$¨9002_hw_adc_gaöˇl_ˇlibøã
(
©h_hw
 *
ah
, 
u8
 
numChaös
)

262 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

263 
u32
 
iOddMósOff£t
, 
iEvíMósOff£t
, 
qOddMósOff£t
, 
qEvíMósOff£t
;

264 
u32
 
qGaöMism©ch
, 
iGaöMism©ch
, 
vÆ
, 
i
;

266 
i
 = 0; i < 
numChaös
; i++) {

267 
iOddMósOff£t
 = 
ah
->
tŸÆAdcIOddPha£
[
i
];

268 
iEvíMósOff£t
 = 
ah
->
tŸÆAdcIEvíPha£
[
i
];

269 
qOddMósOff£t
 = 
ah
->
tŸÆAdcQOddPha£
[
i
];

270 
qEvíMósOff£t
 = 
ah
->
tŸÆAdcQEvíPha£
[
i
];

272 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

273 "Sèπög ADC Gaö CÆ f‹ Chaö %d\n", 
i
);

275 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "Chn %dÖwr_meas_odd_i = 0x%08x\n",

276 
i
, 
iOddMósOff£t
);

277 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "Chn %dÖwr_meas_even_i = 0x%08x\n",

278 
i
, 
iEvíMósOff£t
);

279 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "Chn %dÖwr_meas_odd_q = 0x%08x\n",

280 
i
, 
qOddMósOff£t
);

281 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "Chn %dÖwr_meas_even_q = 0x%08x\n",

282 
i
, 
qEvíMósOff£t
);

284 i‡(
iOddMósOff£t
 !0 && 
qEvíMósOff£t
 != 0) {

285 
iGaöMism©ch
 =

286 ((
iEvíMósOff£t
 * 32) /

287 
iOddMósOff£t
) & 0x3f;

288 
qGaöMism©ch
 =

289 ((
qOddMósOff£t
 * 32) /

290 
qEvíMósOff£t
) & 0x3f;

292 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

294 
i
, 
iGaöMism©ch
);

295 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

297 
i
, 
qGaöMism©ch
);

299 
vÆ
 = 
	`REG_READ
(
ah
, 
	`AR_PHY_NEW_ADC_DC_GAIN_CORR
(
i
));

300 
vÆ
 &= 0xfffff000;

301 
vÆ
 |(
qGaöMism©ch
Ë| (
iGaöMism©ch
 << 6);

302 
	`REG_WRITE
(
ah
, 
	`AR_PHY_NEW_ADC_DC_GAIN_CORR
(
i
), 
vÆ
);

304 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

305 "ADC Gaö CÆ d⁄êf‹ Chaö %d\n", 
i
);

309 
	`REG_WRITE
(
ah
, 
	`AR_PHY_NEW_ADC_DC_GAIN_CORR
(0),

310 
	`REG_READ
(
ah
, 
	`AR_PHY_NEW_ADC_DC_GAIN_CORR
(0)) |

311 
AR_PHY_NEW_ADC_GAIN_CORR_ENABLE
);

312 
	}
}

314 
	$¨9002_hw_adc_dcˇl_ˇlibøã
(
©h_hw
 *
ah
, 
u8
 
numChaös
)

316 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

317 
u32
 
iOddMósOff£t
, 
iEvíMósOff£t
, 
vÆ
, 
i
;

318 
öt32_t
 
qOddMósOff£t
, 
qEvíMósOff£t
, 
qDcMism©ch
, 
iDcMism©ch
;

319 c⁄° 
©h9k_≥rˇl_d©a
 *
ˇlD©a
 =

320 
ah
->
ˇl_li°_cuº
->
ˇlD©a
;

321 
u32
 
numSam∂es
 =

322 (1 << (
ˇlD©a
->
ˇlCou¡Max
 + 5)Ë* cÆD©a->
ˇlNumSam∂es
;

324 
i
 = 0; i < 
numChaös
; i++) {

325 
iOddMósOff£t
 = 
ah
->
tŸÆAdcDcOff£tIOddPha£
[
i
];

326 
iEvíMósOff£t
 = 
ah
->
tŸÆAdcDcOff£tIEvíPha£
[
i
];

327 
qOddMósOff£t
 = 
ah
->
tŸÆAdcDcOff£tQOddPha£
[
i
];

328 
qEvíMósOff£t
 = 
ah
->
tŸÆAdcDcOff£tQEvíPha£
[
i
];

330 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

331 "Sèπög ADC DC Off£àCÆ f‹ Chaö %d\n", 
i
);

333 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "Chn %dÖwr_meas_odd_i = %d\n",

334 
i
, 
iOddMósOff£t
);

335 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "Chn %dÖwr_meas_even_i = %d\n",

336 
i
, 
iEvíMósOff£t
);

337 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "Chn %dÖwr_meas_odd_q = %d\n",

338 
i
, 
qOddMósOff£t
);

339 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "Chn %dÖwr_meas_even_q = %d\n",

340 
i
, 
qEvíMósOff£t
);

342 
iDcMism©ch
 = (((
iEvíMósOff£t
 - 
iOddMósOff£t
) * 2) /

343 
numSam∂es
) & 0x1ff;

344 
qDcMism©ch
 = (((
qOddMósOff£t
 - 
qEvíMósOff£t
) * 2) /

345 
numSam∂es
) & 0x1ff;

347 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

349 
i
, 
iDcMism©ch
);

350 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

352 
i
, 
qDcMism©ch
);

354 
vÆ
 = 
	`REG_READ
(
ah
, 
	`AR_PHY_NEW_ADC_DC_GAIN_CORR
(
i
));

355 
vÆ
 &= 0xc0000fff;

356 
vÆ
 |(
qDcMism©ch
 << 12Ë| (
iDcMism©ch
 << 21);

357 
	`REG_WRITE
(
ah
, 
	`AR_PHY_NEW_ADC_DC_GAIN_CORR
(
i
), 
vÆ
);

359 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

360 "ADC DC Off£àCÆ d⁄êf‹ Chaö %d\n", 
i
);

363 
	`REG_WRITE
(
ah
, 
	`AR_PHY_NEW_ADC_DC_GAIN_CORR
(0),

364 
	`REG_READ
(
ah
, 
	`AR_PHY_NEW_ADC_DC_GAIN_CORR
(0)) |

365 
AR_PHY_NEW_ADC_DC_OFFSET_CORR_ENABLE
);

366 
	}
}

368 
	$¨9287_hw_ﬁc_ãmp_com≥nßti⁄
(
©h_hw
 *
ah
)

370 
u32
 
rdd©a
;

371 
öt32_t
 
dñè
, 
cuºPDADC
, 
¶›e
;

373 
rdd©a
 = 
	`REG_READ
(
ah
, 
AR_PHY_TX_PWRCTRL4
);

374 
cuºPDADC
 = 
	`MS
(
rdd©a
, 
AR_PHY_TX_PWRCTRL_PD_AVG_OUT
);

376 i‡(
ah
->
öôPDADC
 =0 || 
cuºPDADC
 == 0) {

384 
¶›e
 = 
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_TEMPSENSE_SLOPE
);

386 i‡(
¶›e
 == 0) {

387 
dñè
 = 0;

389 
dñè
 = ((
cuºPDADC
 - 
ah
->
öôPDADC
)*4Ë/ 
¶›e
;

391 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_CH0_TX_PWRCTRL11
,

392 
AR_PHY_TX_PWRCTRL_OLPC_TEMP_COMP
, 
dñè
);

393 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_CH1_TX_PWRCTRL11
,

394 
AR_PHY_TX_PWRCTRL_OLPC_TEMP_COMP
, 
dñè
);

396 
	}
}

398 
	$¨9280_hw_ﬁc_ãmp_com≥nßti⁄
(
©h_hw
 *
ah
)

400 
u32
 
rdd©a
, 
i
;

401 
dñè
, 
cuºPDADC
, 
ªgvÆ
;

403 
rdd©a
 = 
	`REG_READ
(
ah
, 
AR_PHY_TX_PWRCTRL4
);

404 
cuºPDADC
 = 
	`MS
(
rdd©a
, 
AR_PHY_TX_PWRCTRL_PD_AVG_OUT
);

406 i‡(
ah
->
öôPDADC
 =0 || 
cuºPDADC
 == 0)

409 i‡(
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_DAC_HPWR_5G
))

410 
dñè
 = (
cuºPDADC
 - 
ah
->
öôPDADC
 + 4) / 8;

412 
dñè
 = (
cuºPDADC
 - 
ah
->
öôPDADC
 + 5) / 10;

414 i‡(
dñè
 !
ah
->
PDADCdñè
) {

415 
ah
->
PDADCdñè
 = 
dñè
;

416 
i
 = 1; i < 
AR9280_TX_GAIN_TABLE_SIZE
; i++) {

417 
ªgvÆ
 = 
ah
->
‹igöÆGaö
[
i
] - 
dñè
;

418 i‡(
ªgvÆ
 < 0)

419 
ªgvÆ
 = 0;

421 
	`REG_RMW_FIELD
(
ah
,

422 
AR_PHY_TX_GAIN_TBL1
 + 
i
 * 4,

423 
AR_PHY_TX_GAIN
, 
ªgvÆ
);

426 
	}
}

428 
	$¨9271_hw_∑_ˇl
(
©h_hw
 *
ah
, 
boﬁ
 
is_ª£t
)

430 
u32
 
ªgVÆ
;

431 
i
;

432 
u32
 
ªgLi°
[][2] = {

443 
i
 = 0; i < 
	`ARRAY_SIZE
(
ªgLi°
); i++)

444 
ªgLi°
[
i
][1] = 
	`REG_READ
(
ah
,ÑegList[i][0]);

446 
ªgVÆ
 = 
	`REG_READ
(
ah
, 0x7834);

447 
ªgVÆ
 &= (~(0x1));

448 
	`REG_WRITE
(
ah
, 0x7834, 
ªgVÆ
);

449 
ªgVÆ
 = 
	`REG_READ
(
ah
, 0x9808);

450 
ªgVÆ
 |= (0x1 << 27);

451 
	`REG_WRITE
(
ah
, 0x9808, 
ªgVÆ
);

454 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_TOP3
, 
AR9285_AN_TOP3_PWDDAC
, 1);

456 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RXTXBB1
, 
AR9285_AN_RXTXBB1_PDRXTXBB1
, 1);

458 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RXTXBB1
, 
AR9285_AN_RXTXBB1_PDV2I
, 1);

460 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RXTXBB1
, 
AR9285_AN_RXTXBB1_PDDACIF
, 1);

462 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RF2G2
, 
AR9285_AN_RF2G2_OFFCAL
, 0);

464 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RF2G7
, 
AR9285_AN_RF2G7_PWDDB
, 0);

466 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RF2G1
, 
AR9285_AN_RF2G1_ENPACAL
, 0);

468 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RF2G1
, 
AR9285_AN_RF2G1_PDPADRV1
, 0);

470 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RF2G1
, 
AR9285_AN_RF2G1_PDPADRV2
, 0);

472 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RF2G1
, 
AR9285_AN_RF2G1_PDPAOUT
, 0);

474 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RF2G8
, 
AR9285_AN_RF2G8_PADRVGN2TAB0
, 7);

479 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RF2G7
, 
AR9285_AN_RF2G7_PADRVGN2TAB0
, 0);

481 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RF2G3
, 
AR9271_AN_RF2G3_CCOMP
, 0xfff);

487 
	`REG_WRITE
(
ah
, 
AR9285_AN_TOP2
, 0xca0358a0);

488 
	`udñay
(30);

489 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RF2G6
, 
AR9271_AN_RF2G6_OFFS
, 0);

492 
i
 = 6; i > 0; i--) {

493 
ªgVÆ
 = 
	`REG_READ
(
ah
, 0x7834);

494 
ªgVÆ
 |(1 << (20 + 
i
));

495 
	`REG_WRITE
(
ah
, 0x7834, 
ªgVÆ
);

496 
	`udñay
(1);

498 
ªgVÆ
 &(~(0x1 << (20 + 
i
)));

499 
ªgVÆ
 |(
	`MS
(
	`REG_READ
(
ah
, 0x7840), 
AR9285_AN_RXTXBB1_SPARE9
)

500 << (20 + 
i
));

501 
	`REG_WRITE
(
ah
, 0x7834, 
ªgVÆ
);

504 
ªgVÆ
 = (regVal >> 20) & 0x7f;

507 i‡((!
is_ª£t
Ë&& (
ah
->
∑ˇl_öfo
.
¥ev_off£t
 =
ªgVÆ
)) {

508 i‡(
ah
->
∑ˇl_öfo
.
max_skùcou¡
 < 
MAX_PACAL_SKIPCOUNT
)

509 
ah
->
∑ˇl_öfo
.
max_skùcou¡
 =

510 2 * 
ah
->
∑ˇl_öfo
.
max_skùcou¡
;

511 
ah
->
∑ˇl_öfo
.
skùcou¡
 =áh->∑ˇl_öfo.
max_skùcou¡
;

513 
ah
->
∑ˇl_öfo
.
max_skùcou¡
 = 1;

514 
ah
->
∑ˇl_öfo
.
skùcou¡
 = 0;

515 
ah
->
∑ˇl_öfo
.
¥ev_off£t
 = 
ªgVÆ
;

518 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

520 
ªgVÆ
 = 
	`REG_READ
(
ah
, 0x7834);

521 
ªgVÆ
 |= 0x1;

522 
	`REG_WRITE
(
ah
, 0x7834, 
ªgVÆ
);

523 
ªgVÆ
 = 
	`REG_READ
(
ah
, 0x9808);

524 
ªgVÆ
 &= (~(0x1 << 27));

525 
	`REG_WRITE
(
ah
, 0x9808, 
ªgVÆ
);

527 
i
 = 0; i < 
	`ARRAY_SIZE
(
ªgLi°
); i++)

528 
	`REG_WRITE
(
ah
, 
ªgLi°
[
i
][0],ÑegList[i][1]);

530 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

531 
	}
}

533 
ölöe
 
	$¨9285_hw_∑_ˇl
(
©h_hw
 *
ah
, 
boﬁ
 
is_ª£t
)

535 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

536 
u32
 
ªgVÆ
;

537 
i
, 
off£t
, 
offs_6_1
, 
offs_0
;

538 
u32
 
ccomp_‹g
, 
ªg_fõld
;

539 
u32
 
ªgLi°
[][2] = {

549 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "Running PA Calibration\n");

552 i‡(
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_TXGAIN_TYPE
) ==

553 
AR5416_EEP_TXGAIN_HIGH_POWER
)

556 
i
 = 0; i < 
	`ARRAY_SIZE
(
ªgLi°
); i++)

557 
ªgLi°
[
i
][1] = 
	`REG_READ
(
ah
,ÑegList[i][0]);

559 
ªgVÆ
 = 
	`REG_READ
(
ah
, 0x7834);

560 
ªgVÆ
 &= (~(0x1));

561 
	`REG_WRITE
(
ah
, 0x7834, 
ªgVÆ
);

562 
ªgVÆ
 = 
	`REG_READ
(
ah
, 0x9808);

563 
ªgVÆ
 |= (0x1 << 27);

564 
	`REG_WRITE
(
ah
, 0x9808, 
ªgVÆ
);

566 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_TOP3
, 
AR9285_AN_TOP3_PWDDAC
, 1);

567 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RXTXBB1
, 
AR9285_AN_RXTXBB1_PDRXTXBB1
, 1);

568 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RXTXBB1
, 
AR9285_AN_RXTXBB1_PDV2I
, 1);

569 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RXTXBB1
, 
AR9285_AN_RXTXBB1_PDDACIF
, 1);

570 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RF2G2
, 
AR9285_AN_RF2G2_OFFCAL
, 0);

571 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RF2G7
, 
AR9285_AN_RF2G7_PWDDB
, 0);

572 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RF2G1
, 
AR9285_AN_RF2G1_ENPACAL
, 0);

573 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RF2G1
, 
AR9285_AN_RF2G1_PDPADRV1
, 0);

574 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RF2G1
, 
AR9285_AN_RF2G1_PDPADRV2
, 0);

575 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RF2G1
, 
AR9285_AN_RF2G1_PDPAOUT
, 0);

576 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RF2G8
, 
AR9285_AN_RF2G8_PADRVGN2TAB0
, 7);

577 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RF2G7
, 
AR9285_AN_RF2G7_PADRVGN2TAB0
, 0);

578 
ccomp_‹g
 = 
	`MS
(
	`REG_READ
(
ah
, 
AR9285_AN_RF2G6
), 
AR9285_AN_RF2G6_CCOMP
);

579 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RF2G6
, 
AR9285_AN_RF2G6_CCOMP
, 0xf);

581 
	`REG_WRITE
(
ah
, 
AR9285_AN_TOP2
, 0xca0358a0);

582 
	`udñay
(30);

583 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RF2G6
, 
AR9285_AN_RF2G6_OFFS
, 0);

584 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RF2G3
, 
AR9285_AN_RF2G3_PDVCCOMP
, 0);

586 
i
 = 6; i > 0; i--) {

587 
ªgVÆ
 = 
	`REG_READ
(
ah
, 0x7834);

588 
ªgVÆ
 |(1 << (19 + 
i
));

589 
	`REG_WRITE
(
ah
, 0x7834, 
ªgVÆ
);

590 
	`udñay
(1);

591 
ªgVÆ
 = 
	`REG_READ
(
ah
, 0x7834);

592 
ªgVÆ
 &(~(0x1 << (19 + 
i
)));

593 
ªg_fõld
 = 
	`MS
(
	`REG_READ
(
ah
, 0x7840), 
AR9285_AN_RXTXBB1_SPARE9
);

594 
ªgVÆ
 |(
ªg_fõld
 << (19 + 
i
));

595 
	`REG_WRITE
(
ah
, 0x7834, 
ªgVÆ
);

598 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RF2G3
, 
AR9285_AN_RF2G3_PDVCCOMP
, 1);

599 
	`udñay
(1);

600 
ªg_fõld
 = 
	`MS
(
	`REG_READ
(
ah
, 
AR9285_AN_RF2G9
), 
AR9285_AN_RXTXBB1_SPARE9
);

601 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RF2G3
, 
AR9285_AN_RF2G3_PDVCCOMP
, 
ªg_fõld
);

602 
offs_6_1
 = 
	`MS
(
	`REG_READ
(
ah
, 
AR9285_AN_RF2G6
), 
AR9285_AN_RF2G6_OFFS
);

603 
offs_0
 = 
	`MS
(
	`REG_READ
(
ah
, 
AR9285_AN_RF2G3
), 
AR9285_AN_RF2G3_PDVCCOMP
);

605 
off£t
 = (
offs_6_1
<<1Ë| 
offs_0
;

606 
off£t
 = offset - 0;

607 
offs_6_1
 = 
off£t
>>1;

608 
offs_0
 = 
off£t
 & 1;

610 i‡((!
is_ª£t
Ë&& (
ah
->
∑ˇl_öfo
.
¥ev_off£t
 =
off£t
)) {

611 i‡(
ah
->
∑ˇl_öfo
.
max_skùcou¡
 < 
MAX_PACAL_SKIPCOUNT
)

612 
ah
->
∑ˇl_öfo
.
max_skùcou¡
 =

613 2 * 
ah
->
∑ˇl_öfo
.
max_skùcou¡
;

614 
ah
->
∑ˇl_öfo
.
skùcou¡
 =áh->∑ˇl_öfo.
max_skùcou¡
;

616 
ah
->
∑ˇl_öfo
.
max_skùcou¡
 = 1;

617 
ah
->
∑ˇl_öfo
.
skùcou¡
 = 0;

618 
ah
->
∑ˇl_öfo
.
¥ev_off£t
 = 
off£t
;

621 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RF2G6
, 
AR9285_AN_RF2G6_OFFS
, 
offs_6_1
);

622 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RF2G3
, 
AR9285_AN_RF2G3_PDVCCOMP
, 
offs_0
);

624 
ªgVÆ
 = 
	`REG_READ
(
ah
, 0x7834);

625 
ªgVÆ
 |= 0x1;

626 
	`REG_WRITE
(
ah
, 0x7834, 
ªgVÆ
);

627 
ªgVÆ
 = 
	`REG_READ
(
ah
, 0x9808);

628 
ªgVÆ
 &= (~(0x1 << 27));

629 
	`REG_WRITE
(
ah
, 0x9808, 
ªgVÆ
);

631 
i
 = 0; i < 
	`ARRAY_SIZE
(
ªgLi°
); i++)

632 
	`REG_WRITE
(
ah
, 
ªgLi°
[
i
][0],ÑegList[i][1]);

634 
	`REG_RMW_FIELD
(
ah
, 
AR9285_AN_RF2G6
, 
AR9285_AN_RF2G6_CCOMP
, 
ccomp_‹g
);

635 
	}
}

637 
	$¨9002_hw_∑_ˇl
(
©h_hw
 *
ah
, 
boﬁ
 
is_ª£t
)

639 i‡(
	`AR_SREV_9271
(
ah
)) {

640 i‡(
is_ª£t
 || !
ah
->
∑ˇl_öfo
.
skùcou¡
)

641 
	`¨9271_hw_∑_ˇl
(
ah
, 
is_ª£t
);

643 
ah
->
∑ˇl_öfo
.
skùcou¡
--;

644 } i‡(
	`AR_SREV_9285_12_OR_LATER
(
ah
)) {

645 i‡(
is_ª£t
 || !
ah
->
∑ˇl_öfo
.
skùcou¡
)

646 
	`¨9285_hw_∑_ˇl
(
ah
, 
is_ª£t
);

648 
ah
->
∑ˇl_öfo
.
skùcou¡
--;

650 
	}
}

652 
	$¨9002_hw_ﬁc_ãmp_com≥nßti⁄
(
©h_hw
 *
ah
)

654 i‡(
OLC_FOR_AR9287_10_LATER
)

655 
	`¨9287_hw_ﬁc_ãmp_com≥nßti⁄
(
ah
);

656 i‡(
OLC_FOR_AR9280_20_LATER
)

657 
	`¨9280_hw_ﬁc_ãmp_com≥nßti⁄
(
ah
);

658 
	}
}

660 
	$¨9002_hw_ˇlibøã
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
,

661 
u8
 
rxchaömask
, 
boﬁ
 
l⁄gˇl
)

663 
©h9k_ˇl_li°
 *
cuºCÆ
 = 
ah
->
ˇl_li°_cuº
;

664 
boﬁ
 
nfˇl
, 
nfˇl_≥ndög
 = 
Ál£
;

665 
ªt
;

667 
nfˇl
 = !!(
	`REG_READ
(
ah
, 
AR_PHY_AGC_CONTROL
Ë& 
AR_PHY_AGC_CONTROL_NF
);

668 i‡(
ah
->
ˇld©a
)

669 
nfˇl_≥ndög
 = 
	`ã°_bô
(
NFCAL_PENDING
, &
ah
->
ˇld©a
->
ˇl_Êags
);

671 i‡(
cuºCÆ
 && !
nfˇl
 &&

672 (
cuºCÆ
->
ˇlSèã
 =
CAL_RUNNING
 ||

673 
cuºCÆ
->
ˇlSèã
 =
CAL_WAITING
)) {

674 i‡(!
	`¨9002_hw_≥r_ˇlibøti⁄
(
ah
, 
ch™
, 
rxchaömask
, 
cuºCÆ
))

677 
ah
->
ˇl_li°_cuº
 = 
cuºCÆ
 = cuºCÆ->
ˇlNext
;

678 i‡(
cuºCÆ
->
ˇlSèã
 =
CAL_WAITING
) {

679 
	`©h9k_hw_ª£t_ˇlibøti⁄
(
ah
, 
cuºCÆ
);

685 i‡(
l⁄gˇl
 || 
nfˇl_≥ndög
) {

690 i‡(
	`©h9k_hw_gënf
(
ah
, 
ch™
)) {

697 
ªt
 = 
	`©h9k_hw_lﬂdnf
(
ah
,áh->
curch™
);

698 i‡(
ªt
 < 0)

699  
ªt
;

702 i‡(
l⁄gˇl
) {

703 
	`©h9k_hw_°¨t_nfˇl
(
ah
, 
Ál£
);

705 
	`¨9002_hw_∑_ˇl
(
ah
, 
Ál£
);

706 
	`¨9002_hw_ﬁc_ãmp_com≥nßti⁄
(
ah
);

711 
	}
}

714 
boﬁ
 
	$¨9285_hw_˛_ˇl
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
)

716 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

718 
	`REG_SET_BIT
(
ah
, 
AR_PHY_CL_CAL_CTL
, 
AR_PHY_CL_CAL_ENABLE
);

719 i‡(
	`IS_CHAN_HT20
(
ch™
)) {

720 
	`REG_SET_BIT
(
ah
, 
AR_PHY_CL_CAL_CTL
, 
AR_PHY_PARALLEL_CAL_ENABLE
);

721 
	`REG_SET_BIT
(
ah
, 
AR_PHY_TURBO
, 
AR_PHY_FC_DYN2040_EN
);

722 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_AGC_CONTROL
,

723 
AR_PHY_AGC_CONTROL_FLTR_CAL
);

724 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_TPCRG1
, 
AR_PHY_TPCRG1_PD_CAL_ENABLE
);

725 
	`REG_SET_BIT
(
ah
, 
AR_PHY_AGC_CONTROL
, 
AR_PHY_AGC_CONTROL_CAL
);

726 i‡(!
	`©h9k_hw_waô
(
ah
, 
AR_PHY_AGC_CONTROL
,

727 
AR_PHY_AGC_CONTROL_CAL
, 0, 
AH_WAIT_TIMEOUT
)) {

728 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

730 
AH_WAIT_TIMEOUT
 / 1000);

731  
Ál£
;

733 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_TURBO
, 
AR_PHY_FC_DYN2040_EN
);

734 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_CL_CAL_CTL
, 
AR_PHY_PARALLEL_CAL_ENABLE
);

735 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_CL_CAL_CTL
, 
AR_PHY_CL_CAL_ENABLE
);

737 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_ADC_CTL
, 
AR_PHY_ADC_CTL_OFF_PWDADC
);

738 
	`REG_SET_BIT
(
ah
, 
AR_PHY_AGC_CONTROL
, 
AR_PHY_AGC_CONTROL_FLTR_CAL
);

739 
	`REG_SET_BIT
(
ah
, 
AR_PHY_TPCRG1
, 
AR_PHY_TPCRG1_PD_CAL_ENABLE
);

740 
	`REG_SET_BIT
(
ah
, 
AR_PHY_AGC_CONTROL
, 
AR_PHY_AGC_CONTROL_CAL
);

741 i‡(!
	`©h9k_hw_waô
(
ah
, 
AR_PHY_AGC_CONTROL
, 
AR_PHY_AGC_CONTROL_CAL
,

742 0, 
AH_WAIT_TIMEOUT
)) {

743 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

745 
AH_WAIT_TIMEOUT
 / 1000);

746  
Ál£
;

749 
	`REG_SET_BIT
(
ah
, 
AR_PHY_ADC_CTL
, 
AR_PHY_ADC_CTL_OFF_PWDADC
);

750 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_CL_CAL_CTL
, 
AR_PHY_CL_CAL_ENABLE
);

751 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_AGC_CONTROL
, 
AR_PHY_AGC_CONTROL_FLTR_CAL
);

753  
åue
;

754 
	}
}

756 
boﬁ
 
	$¨9285_hw_˛c
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
)

758 
i
;

759 
u_öt32_t
 
txgaö_max
;

760 
u_öt32_t
 
˛c_gaö
, 
gaö_mask
 = 0, 
˛c_num
 = 0;

761 
u_öt32_t
 
ªg_˛c_I0
, 
ªg_˛c_Q0
;

762 
u_öt32_t
 
i0_num
 = 0;

763 
u_öt32_t
 
q0_num
 = 0;

764 
u_öt32_t
 
tŸÆ_num
 = 0;

765 
u_öt32_t
 
ªg_rf2g5_‹g
;

766 
boﬁ
 
ªtv
 = 
åue
;

768 i‡(!(
	`¨9285_hw_˛_ˇl
(
ah
, 
ch™
)))

769  
Ál£
;

771 
txgaö_max
 = 
	`MS
(
	`REG_READ
(
ah
, 
AR_PHY_TX_PWRCTRL7
),

772 
AR_PHY_TX_PWRCTRL_TX_GAIN_TAB_MAX
);

774 
i
 = 0; i < (
txgaö_max
+1); i++) {

775 
˛c_gaö
 = (
	`REG_READ
(
ah
, (
AR_PHY_TX_GAIN_TBL1
+(
i
<<2))) &

776 
AR_PHY_TX_GAIN_CLC
Ë>> 
AR_PHY_TX_GAIN_CLC_S
;

777 i‡(!(
gaö_mask
 & (1 << 
˛c_gaö
))) {

778 
gaö_mask
 |(1 << 
˛c_gaö
);

779 
˛c_num
++;

783 
i
 = 0; i < 
˛c_num
; i++) {

784 
ªg_˛c_I0
 = (
	`REG_READ
(
ah
, (
AR_PHY_CLC_TBL1
 + (
i
 << 2)))

785 & 
AR_PHY_CLC_I0
Ë>> 
AR_PHY_CLC_I0_S
;

786 
ªg_˛c_Q0
 = (
	`REG_READ
(
ah
, (
AR_PHY_CLC_TBL1
 + (
i
 << 2)))

787 & 
AR_PHY_CLC_Q0
Ë>> 
AR_PHY_CLC_Q0_S
;

788 i‡(
ªg_˛c_I0
 == 0)

789 
i0_num
++;

791 i‡(
ªg_˛c_Q0
 == 0)

792 
q0_num
++;

794 
tŸÆ_num
 = 
i0_num
 + 
q0_num
;

795 i‡(
tŸÆ_num
 > 
AR9285_CLCAL_REDO_THRESH
) {

796 
ªg_rf2g5_‹g
 = 
	`REG_READ
(
ah
, 
AR9285_RF2G5
);

797 i‡(
	`AR_SREV_9285E_20
(
ah
)) {

798 
	`REG_WRITE
(
ah
, 
AR9285_RF2G5
,

799 (
ªg_rf2g5_‹g
 & 
AR9285_RF2G5_IC50TX
) |

800 
AR9285_RF2G5_IC50TX_XE_SET
);

802 
	`REG_WRITE
(
ah
, 
AR9285_RF2G5
,

803 (
ªg_rf2g5_‹g
 & 
AR9285_RF2G5_IC50TX
) |

804 
AR9285_RF2G5_IC50TX_SET
);

806 
ªtv
 = 
	`¨9285_hw_˛_ˇl
(
ah
, 
ch™
);

807 
	`REG_WRITE
(
ah
, 
AR9285_RF2G5
, 
ªg_rf2g5_‹g
);

809  
ªtv
;

810 
	}
}

812 
boﬁ
 
	$¨9002_hw_öô_ˇl
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
)

814 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

816 i‡(
	`AR_SREV_9271
(
ah
)) {

817 i‡(!
	`¨9285_hw_˛_ˇl
(
ah
, 
ch™
))

818  
Ál£
;

819 } i‡(
	`AR_SREV_9285
(
ah
Ë&& 
	`AR_SREV_9285_12_OR_LATER
(ah)) {

820 i‡(!
	`¨9285_hw_˛c
(
ah
, 
ch™
))

821  
Ál£
;

823 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
)) {

824 i‡(!
	`AR_SREV_9287_11_OR_LATER
(
ah
))

825 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_ADC_CTL
,

826 
AR_PHY_ADC_CTL_OFF_PWDADC
);

827 
	`REG_SET_BIT
(
ah
, 
AR_PHY_AGC_CONTROL
,

828 
AR_PHY_AGC_CONTROL_FLTR_CAL
);

832 
	`REG_WRITE
(
ah
, 
AR_PHY_AGC_CONTROL
,

833 
	`REG_READ
(
ah
, 
AR_PHY_AGC_CONTROL
) |

834 
AR_PHY_AGC_CONTROL_CAL
);

837 i‡(!
	`©h9k_hw_waô
(
ah
, 
AR_PHY_AGC_CONTROL
,

838 
AR_PHY_AGC_CONTROL_CAL
,

839 0, 
AH_WAIT_TIMEOUT
)) {

840 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

842 
AH_WAIT_TIMEOUT
 / 1000);

843  
Ál£
;

846 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
)) {

847 i‡(!
	`AR_SREV_9287_11_OR_LATER
(
ah
))

848 
	`REG_SET_BIT
(
ah
, 
AR_PHY_ADC_CTL
,

849 
AR_PHY_ADC_CTL_OFF_PWDADC
);

850 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_AGC_CONTROL
,

851 
AR_PHY_AGC_CONTROL_FLTR_CAL
);

856 
	`¨9002_hw_∑_ˇl
(
ah
, 
åue
);

857 
	`©h9k_hw_°¨t_nfˇl
(
ah
, 
åue
);

859 i‡(
ah
->
ˇld©a
)

860 
	`£t_bô
(
NFCAL_PENDING
, &
ah
->
ˇld©a
->
ˇl_Êags
);

862 
ah
->
ˇl_li°
 =áh->
ˇl_li°_œ°
 =áh->
ˇl_li°_cuº
 = 
NULL
;

865 i‡(
	`AR_SREV_9100
(
ah
Ë|| 
	`AR_SREV_9160_10_OR_LATER
(ah)) {

866 
ah
->
suµ_ˇls
 = 
IQ_MISMATCH_CAL
;

868 i‡(
	`AR_SREV_9160_10_OR_LATER
(
ah
))

869 
ah
->
suµ_ˇls
 |
ADC_GAIN_CAL
 | 
ADC_DC_CAL
;

871 i‡(
	`AR_SREV_9287
(
ah
))

872 
ah
->
suµ_ˇls
 &~
ADC_GAIN_CAL
;

874 i‡(
	`¨9002_hw_is_ˇl_suµ‹ãd
(
ah
, 
ch™
, 
ADC_GAIN_CAL
)) {

875 
	`INIT_CAL
(&
ah
->
adcgaö_ˇld©a
);

876 
	`INSERT_CAL
(
ah
, &ah->
adcgaö_ˇld©a
);

877 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

881 i‡(
	`¨9002_hw_is_ˇl_suµ‹ãd
(
ah
, 
ch™
, 
ADC_DC_CAL
)) {

882 
	`INIT_CAL
(&
ah
->
adcdc_ˇld©a
);

883 
	`INSERT_CAL
(
ah
, &ah->
adcdc_ˇld©a
);

884 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

888 i‡(
	`¨9002_hw_is_ˇl_suµ‹ãd
(
ah
, 
ch™
, 
IQ_MISMATCH_CAL
)) {

889 
	`INIT_CAL
(&
ah
->
iq_ˇld©a
);

890 
	`INSERT_CAL
(
ah
, &ah->
iq_ˇld©a
);

891 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "enabling IQ Calibration\n");

894 
ah
->
ˇl_li°_cuº
 =áh->
ˇl_li°
;

896 i‡(
ah
->
ˇl_li°_cuº
)

897 
	`©h9k_hw_ª£t_ˇlibøti⁄
(
ah
,áh->
ˇl_li°_cuº
);

900 i‡(
ah
->
ˇld©a
)

901 
ah
->
ˇld©a
->
CÆVÆid
 = 0;

903  
åue
;

904 
	}
}

906 c⁄° 
©h9k_≥rˇl_d©a
 
	giq_ˇl_mu…i_ßm∂e
 = {

907 
IQ_MISMATCH_CAL
,

908 
MAX_CAL_SAMPLES
,

909 
PER_MIN_LOG_COUNT
,

910 
¨9002_hw_iqˇl_cﬁÀ˘
,

911 
¨9002_hw_iqˇlibøã


913 c⁄° 
©h9k_≥rˇl_d©a
 
	giq_ˇl_sögÀ_ßm∂e
 = {

914 
IQ_MISMATCH_CAL
,

915 
MIN_CAL_SAMPLES
,

916 
PER_MAX_LOG_COUNT
,

917 
¨9002_hw_iqˇl_cﬁÀ˘
,

918 
¨9002_hw_iqˇlibøã


920 c⁄° 
©h9k_≥rˇl_d©a
 
	gadc_gaö_ˇl_mu…i_ßm∂e
 = {

921 
ADC_GAIN_CAL
,

922 
MAX_CAL_SAMPLES
,

923 
PER_MIN_LOG_COUNT
,

924 
¨9002_hw_adc_gaöˇl_cﬁÀ˘
,

925 
¨9002_hw_adc_gaöˇl_ˇlibøã


927 c⁄° 
©h9k_≥rˇl_d©a
 
	gadc_gaö_ˇl_sögÀ_ßm∂e
 = {

928 
ADC_GAIN_CAL
,

929 
MIN_CAL_SAMPLES
,

930 
PER_MAX_LOG_COUNT
,

931 
¨9002_hw_adc_gaöˇl_cﬁÀ˘
,

932 
¨9002_hw_adc_gaöˇl_ˇlibøã


934 c⁄° 
©h9k_≥rˇl_d©a
 
	gadc_dc_ˇl_mu…i_ßm∂e
 = {

935 
ADC_DC_CAL
,

936 
MAX_CAL_SAMPLES
,

937 
PER_MIN_LOG_COUNT
,

938 
¨9002_hw_adc_dcˇl_cﬁÀ˘
,

939 
¨9002_hw_adc_dcˇl_ˇlibøã


941 c⁄° 
©h9k_≥rˇl_d©a
 
	gadc_dc_ˇl_sögÀ_ßm∂e
 = {

942 
ADC_DC_CAL
,

943 
MIN_CAL_SAMPLES
,

944 
PER_MAX_LOG_COUNT
,

945 
¨9002_hw_adc_dcˇl_cﬁÀ˘
,

946 
¨9002_hw_adc_dcˇl_ˇlibøã


949 
	$¨9002_hw_öô_ˇl_£âögs
(
©h_hw
 *
ah
)

951 i‡(
	`AR_SREV_9100
(
ah
)) {

952 
ah
->
iq_ˇld©a
.
ˇlD©a
 = &
iq_ˇl_mu…i_ßm∂e
;

953 
ah
->
suµ_ˇls
 = 
IQ_MISMATCH_CAL
;

957 i‡(
	`AR_SREV_9160_10_OR_LATER
(
ah
)) {

958 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
)) {

959 
ah
->
iq_ˇld©a
.
ˇlD©a
 = &
iq_ˇl_sögÀ_ßm∂e
;

960 
ah
->
adcgaö_ˇld©a
.
ˇlD©a
 =

961 &
adc_gaö_ˇl_sögÀ_ßm∂e
;

962 
ah
->
adcdc_ˇld©a
.
ˇlD©a
 =

963 &
adc_dc_ˇl_sögÀ_ßm∂e
;

965 
ah
->
iq_ˇld©a
.
ˇlD©a
 = &
iq_ˇl_mu…i_ßm∂e
;

966 
ah
->
adcgaö_ˇld©a
.
ˇlD©a
 =

967 &
adc_gaö_ˇl_mu…i_ßm∂e
;

968 
ah
->
adcdc_ˇld©a
.
ˇlD©a
 =

969 &
adc_dc_ˇl_mu…i_ßm∂e
;

971 
ah
->
suµ_ˇls
 = 
ADC_GAIN_CAL
 | 
ADC_DC_CAL
 | 
IQ_MISMATCH_CAL
;

973 i‡(
	`AR_SREV_9287
(
ah
))

974 
ah
->
suµ_ˇls
 &~
ADC_GAIN_CAL
;

976 
	}
}

978 
	$¨9002_hw_©èch_ˇlib_›s
(
©h_hw
 *
ah
)

980 
©h_hw_¥iv©e_›s
 *
¥iv_›s
 = 
	`©h9k_hw_¥iv©e_›s
(
ah
);

981 
©h_hw_›s
 *
›s
 = 
	`©h9k_hw_›s
(
ah
);

983 
¥iv_›s
->
öô_ˇl_£âögs
 = 
¨9002_hw_öô_ˇl_£âögs
;

984 
¥iv_›s
->
öô_ˇl
 = 
¨9002_hw_öô_ˇl
;

985 
¥iv_›s
->
£tup_ˇlibøti⁄
 = 
¨9002_hw_£tup_ˇlibøti⁄
;

987 
›s
->
ˇlibøã
 = 
¨9002_hw_ˇlibøã
;

988 
	}
}

	@ar9002_hw.c

17 
	~<löux/moduÀ∑øm.h
>

18 
	~"hw.h
"

19 
	~"¨5008_öôvÆs.h
"

20 
	~"¨9001_öôvÆs.h
"

21 
	~"¨9002_öôvÆs.h
"

22 
	~"¨9002_phy.h
"

26 
	$¨9002_hw_öô_mode_ªgs
(
©h_hw
 *
ah
)

28 i‡(
	`AR_SREV_9271
(
ah
)) {

29 
	`INIT_INI_ARRAY
(&
ah
->
öiModes
, 
¨9271Modes_9271
);

30 
	`INIT_INI_ARRAY
(&
ah
->
öiComm⁄
, 
¨9271Comm⁄_9271
);

31 
	`INIT_INI_ARRAY
(&
ah
->
öiModes_9271_ANI_ªg
, 
¨9271Modes_9271_ANI_ªg
);

35 
	`INIT_INI_ARRAY
(&
ah
->
öiPcõSîdes
,

36 
¨9280PcõPhy_˛kªq_Æways_⁄_L1_9280
);

38 i‡(
	`AR_SREV_9287_11_OR_LATER
(
ah
)) {

39 
	`INIT_INI_ARRAY
(&
ah
->
öiModes
, 
¨9287Modes_9287_1_1
);

40 
	`INIT_INI_ARRAY
(&
ah
->
öiComm⁄
, 
¨9287Comm⁄_9287_1_1
);

41 } i‡(
	`AR_SREV_9285_12_OR_LATER
(
ah
)) {

42 
	`INIT_INI_ARRAY
(&
ah
->
öiModes
, 
¨9285Modes_9285_1_2
);

43 
	`INIT_INI_ARRAY
(&
ah
->
öiComm⁄
, 
¨9285Comm⁄_9285_1_2
);

44 } i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
)) {

45 
	`INIT_INI_ARRAY
(&
ah
->
öiModes
, 
¨9280Modes_9280_2
);

46 
	`INIT_INI_ARRAY
(&
ah
->
öiComm⁄
, 
¨9280Comm⁄_9280_2
);

48 
	`INIT_INI_ARRAY
(&
ah
->
öiModesFa°Clock
,

49 
¨9280Modes_Á°_˛ock_9280_2
);

50 } i‡(
	`AR_SREV_9160_10_OR_LATER
(
ah
)) {

51 
	`INIT_INI_ARRAY
(&
ah
->
öiModes
, 
¨5416Modes_9160
);

52 
	`INIT_INI_ARRAY
(&
ah
->
öiComm⁄
, 
¨5416Comm⁄_9160
);

53 i‡(
	`AR_SREV_9160_11
(
ah
)) {

54 
	`INIT_INI_ARRAY
(&
ah
->
öiAddac
,

55 
¨5416Addac_9160_1_1
);

57 
	`INIT_INI_ARRAY
(&
ah
->
öiAddac
, 
¨5416Addac_9160
);

59 } i‡(
	`AR_SREV_9100_OR_LATER
(
ah
)) {

60 
	`INIT_INI_ARRAY
(&
ah
->
öiModes
, 
¨5416Modes_9100
);

61 
	`INIT_INI_ARRAY
(&
ah
->
öiComm⁄
, 
¨5416Comm⁄_9100
);

62 
	`INIT_INI_ARRAY
(&
ah
->
öiAddac
, 
¨5416Addac_9100
);

64 
	`INIT_INI_ARRAY
(&
ah
->
öiModes
, 
¨5416Modes
);

65 
	`INIT_INI_ARRAY
(&
ah
->
öiComm⁄
, 
¨5416Comm⁄
);

66 
	`INIT_INI_ARRAY
(&
ah
->
öiAddac
, 
¨5416Addac
);

69 i‡(!
	`AR_SREV_9280_20_OR_LATER
(
ah
)) {

71 
	`INIT_INI_ARRAY
(&
ah
->
öiBB_RfGaö
, 
¨5416BB_RfGaö
);

74 i‡(!
	`AR_SREV_5416
(
ah
))

75 
	`INIT_INI_ARRAY
(&
ah
->
öiB™k6
, 
¨5416B™k6TPC_9100
);

77 
	`INIT_INI_ARRAY
(&
ah
->
öiB™k6
, 
¨5416B™k6TPC
);

81 i‡(
	`AR_SREV_9160
(
ah
Ë|| !
	`AR_SREV_5416_22_OR_LATER
(ah)) {

82 
¨5416IniAºay
 *
addac
 = &
ah
->
öiAddac
;

83 
u32
 
size
 = (u32Ë* 
addac
->
ü_rows
 *áddac->
ü_cﬁumns
;

84 
u32
 *
d©a
;

86 
d©a
 = 
	`devm_kzÆloc
(
ah
->
dev
, 
size
, 
GFP_KERNEL
);

87 i‡(!
d©a
)

88  -
ENOMEM
;

90 
	`mem˝y
(
d©a
, 
addac
->
ü_¨øy
, 
size
);

91 
addac
->
ü_¨øy
 = 
d©a
;

93 i‡(!
	`AR_SREV_5416_22_OR_LATER
(
ah
)) {

95 
	`INI_RA
(
addac
, 31,1) = 0;

98 i‡(
	`AR_SREV_9287_11_OR_LATER
(
ah
)) {

99 
	`INIT_INI_ARRAY
(&
ah
->
öiCckfúN‹mÆ
,

100 
¨9287Comm⁄_n‹mÆ_cck_fú_c€ff_9287_1_1
);

101 
	`INIT_INI_ARRAY
(&
ah
->
öiCckfúJ≠™2484
,

102 
¨9287Comm⁄_j≠™_2484_cck_fú_c€ff_9287_1_1
);

105 
	}
}

107 
	$¨9280_20_hw_öô_rxgaö_öi
(
©h_hw
 *
ah
)

109 
u32
 
rxgaö_ty≥
;

111 i‡(
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_MINOR_REV
) >=

112 
AR5416_EEP_MINOR_VER_17
) {

113 
rxgaö_ty≥
 = 
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_RXGAIN_TYPE
);

115 i‡(
rxgaö_ty≥
 =
AR5416_EEP_RXGAIN_13DB_BACKOFF
)

116 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

117 
¨9280Modes_backoff_13db_rxgaö_9280_2
);

118 i‡(
rxgaö_ty≥
 =
AR5416_EEP_RXGAIN_23DB_BACKOFF
)

119 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

120 
¨9280Modes_backoff_23db_rxgaö_9280_2
);

122 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

123 
¨9280Modes_‹igöÆ_rxgaö_9280_2
);

125 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

126 
¨9280Modes_‹igöÆ_rxgaö_9280_2
);

128 
	}
}

130 
	$¨9280_20_hw_öô_txgaö_öi
(
©h_hw
 *
ah
, 
u32
 
txgaö_ty≥
)

132 i‡(
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_MINOR_REV
) >=

133 
AR5416_EEP_MINOR_VER_19
) {

134 i‡(
txgaö_ty≥
 =
AR5416_EEP_TXGAIN_HIGH_POWER
)

135 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

136 
¨9280Modes_high_powî_tx_gaö_9280_2
);

138 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

139 
¨9280Modes_‹igöÆ_tx_gaö_9280_2
);

141 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

142 
¨9280Modes_‹igöÆ_tx_gaö_9280_2
);

144 
	}
}

146 
	$¨9271_hw_öô_txgaö_öi
(
©h_hw
 *
ah
, 
u32
 
txgaö_ty≥
)

148 i‡(
txgaö_ty≥
 =
AR5416_EEP_TXGAIN_HIGH_POWER
)

149 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

150 
¨9271Modes_high_powî_tx_gaö_9271
);

152 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

153 
¨9271Modes_n‹mÆ_powî_tx_gaö_9271
);

154 
	}
}

156 
	$¨9002_hw_öô_mode_gaö_ªgs
(
©h_hw
 *
ah
)

158 
u32
 
txgaö_ty≥
 = 
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_TXGAIN_TYPE
);

160 i‡(
	`AR_SREV_9287_11_OR_LATER
(
ah
))

161 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

162 
¨9287Modes_rx_gaö_9287_1_1
);

163 i‡(
	`AR_SREV_9280_20
(
ah
))

164 
	`¨9280_20_hw_öô_rxgaö_öi
(
ah
);

166 i‡(
	`AR_SREV_9271
(
ah
)) {

167 
	`¨9271_hw_öô_txgaö_öi
(
ah
, 
txgaö_ty≥
);

168 } i‡(
	`AR_SREV_9287_11_OR_LATER
(
ah
)) {

169 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

170 
¨9287Modes_tx_gaö_9287_1_1
);

171 } i‡(
	`AR_SREV_9280_20
(
ah
)) {

172 
	`¨9280_20_hw_öô_txgaö_öi
(
ah
, 
txgaö_ty≥
);

173 } i‡(
	`AR_SREV_9285_12_OR_LATER
(
ah
)) {

175 i‡(
txgaö_ty≥
 =
AR5416_EEP_TXGAIN_HIGH_POWER
) {

176 i‡(
	`AR_SREV_9285E_20
(
ah
)) {

177 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

178 
¨9285Modes_XE2_0_high_powî
);

180 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

181 
¨9285Modes_high_powî_tx_gaö_9285_1_2
);

184 i‡(
	`AR_SREV_9285E_20
(
ah
)) {

185 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

186 
¨9285Modes_XE2_0_n‹mÆ_powî
);

188 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

189 
¨9285Modes_‹igöÆ_tx_gaö_9285_1_2
);

193 
	}
}

204 
	$¨9002_hw_c⁄figpcùowîßve
(
©h_hw
 *
ah
,

205 
boﬁ
 
powî_off
)

207 
u8
 
i
;

208 
u32
 
vÆ
;

211 i‡(!
powî_off
 ) {

212 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
)) {

218 
i
 = 0; i < 
ah
->
öiPcõSîdes
.
ü_rows
; i++) {

219 
	`REG_WRITE
(
ah
, 
	`INI_RA
(&ah->
öiPcõSîdes
, 
i
, 0),

220 
	`INI_RA
(&
ah
->
öiPcõSîdes
, 
i
, 1));

223 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

225 
	`REG_WRITE
(
ah
, 
AR_PCIE_SERDES
, 0x9248fc00);

226 
	`REG_WRITE
(
ah
, 
AR_PCIE_SERDES
, 0x24924924);

229 
	`REG_WRITE
(
ah
, 
AR_PCIE_SERDES
, 0x28000039);

230 
	`REG_WRITE
(
ah
, 
AR_PCIE_SERDES
, 0x53160824);

231 
	`REG_WRITE
(
ah
, 
AR_PCIE_SERDES
, 0xe5980579);

237 
	`REG_WRITE
(
ah
, 
AR_PCIE_SERDES
, 0x001defff);

239 
	`REG_WRITE
(
ah
, 
AR_PCIE_SERDES
, 0x1aaabe40);

240 
	`REG_WRITE
(
ah
, 
AR_PCIE_SERDES
, 0xbe105554);

241 
	`REG_WRITE
(
ah
, 
AR_PCIE_SERDES
, 0x000e3007);

244 
	`REG_WRITE
(
ah
, 
AR_PCIE_SERDES2
, 0x00000000);

246 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

249 
	`udñay
(1000);

252 i‡(
powî_off
) {

254 
	`REG_CLR_BIT
(
ah
, 
AR_PCIE_PM_CTRL
, 
AR_PCIE_PM_CTRL_ENA
);

256 
vÆ
 = 
	`REG_READ
(
ah
, 
AR_WA
);

264 i‡(
ah
->
c⁄fig
.
pcõ_w´n
) {

265 i‡(
ah
->
c⁄fig
.
pcõ_w´n
 & 
AR_WA_D3_L1_DISABLE
)

266 
vÆ
 |
AR_WA_D3_L1_DISABLE
;

268 i‡(
	`AR_SREV_9285
(
ah
Ë|| 
	`AR_SREV_9271
◊hË|| 
	`AR_SREV_9287
(ah)) {

269 i‡(
AR9285_WA_DEFAULT
 & 
AR_WA_D3_L1_DISABLE
)

270 
vÆ
 |
AR_WA_D3_L1_DISABLE
;

271 } i‡(
	`AR_SREV_9280
(
ah
)) {

272 i‡(
AR9280_WA_DEFAULT
 & 
AR_WA_D3_L1_DISABLE
)

273 
vÆ
 |
AR_WA_D3_L1_DISABLE
;

277 i‡(
	`AR_SREV_9280
(
ah
Ë|| 
	`AR_SREV_9285
◊hË|| 
	`AR_SREV_9287
(ah)) {

282 
vÆ
 &~(
AR_WA_BIT6
 | 
AR_WA_BIT7
);

285 i‡(
	`AR_SREV_9280
(
ah
))

286 
vÆ
 |
AR_WA_BIT22
;

288 i‡(
	`AR_SREV_9285E_20
(
ah
))

289 
vÆ
 |
AR_WA_BIT23
;

291 
	`REG_WRITE
(
ah
, 
AR_WA
, 
vÆ
);

293 i‡(
ah
->
c⁄fig
.
pcõ_w´n
) {

294 
vÆ
 = 
ah
->
c⁄fig
.
pcõ_w´n
;

295 
vÆ
 &(~
AR_WA_D3_L1_DISABLE
);

297 i‡(
	`AR_SREV_9285
(
ah
Ë|| 
	`AR_SREV_9271
◊hË|| 
	`AR_SREV_9287
(ah)) {

298 
vÆ
 = 
AR9285_WA_DEFAULT
;

299 
vÆ
 &(~
AR_WA_D3_L1_DISABLE
);

300 } i‡(
	`AR_SREV_9280
(
ah
)) {

305 
vÆ
 = 
AR9280_WA_DEFAULT
;

306 
vÆ
 &(~
AR_WA_D3_L1_DISABLE
);

308 
vÆ
 = 
AR_WA_DEFAULT
;

313 i‡(
	`AR_SREV_9285
(
ah
Ë|| 
	`AR_SREV_9287
(ah))

314 
vÆ
 |(
AR_WA_BIT6
 | 
AR_WA_BIT7
);

316 i‡(
	`AR_SREV_9285E_20
(
ah
))

317 
vÆ
 |
AR_WA_BIT23
;

319 
	`REG_WRITE
(
ah
, 
AR_WA
, 
vÆ
);

322 
	`REG_SET_BIT
(
ah
, 
AR_PCIE_PM_CTRL
, 
AR_PCIE_PM_CTRL_ENA
);

324 
	}
}

326 
	$¨9002_hw_gë_ødi‹ev
(
©h_hw
 *
ah
)

328 
u32
 
vÆ
;

329 
i
;

331 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

333 
	`REG_WRITE
(
ah
, 
	`AR_PHY
(0x36), 0x00007058);

334 
i
 = 0; i < 8; i++)

335 
	`REG_WRITE
(
ah
, 
	`AR_PHY
(0x20), 0x00010000);

337 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

339 
vÆ
 = (
	`REG_READ
(
ah
, 
	`AR_PHY
(256)) >> 24) & 0xff;

340 
vÆ
 = ((val & 0xf0) >> 4) | ((val & 0x0f) << 4);

342  
	`©h9k_hw_ªvî£_bôs
(
vÆ
, 8);

343 
	}
}

345 
	$¨9002_hw_rf_˛aim
(
©h_hw
 *
ah
)

347 
u32
 
vÆ
;

349 
	`REG_WRITE
(
ah
, 
	`AR_PHY
(0), 0x00000007);

351 
vÆ
 = 
	`¨9002_hw_gë_ødi‹ev
(
ah
);

352 
vÆ
 & 
AR_RADIO_SREV_MAJOR
) {

354 
vÆ
 = 
AR_RAD5133_SREV_MAJOR
;

356 
AR_RAD5133_SREV_MAJOR
:

357 
AR_RAD5122_SREV_MAJOR
:

358 
AR_RAD2133_SREV_MAJOR
:

359 
AR_RAD2122_SREV_MAJOR
:

362 
	`©h_îr
(
	`©h9k_hw_comm⁄
(
ah
),

364 
vÆ
 & 
AR_RADIO_SREV_MAJOR
);

365  -
EOPNOTSUPP
;

368 
ah
->
hw_vîsi⁄
.
™Æog5GhzRev
 = 
vÆ
;

371 
	}
}

373 
	$¨9002_hw_íabÀ_async_fifo
(
©h_hw
 *
ah
)

375 i‡(
	`AR_SREV_9287_13_OR_LATER
(
ah
)) {

376 
	`REG_SET_BIT
(
ah
, 
AR_MAC_PCU_ASYNC_FIFO_REG3
,

377 
AR_MAC_PCU_ASYNC_FIFO_REG3_DATAPATH_SEL
);

378 
	`REG_SET_BIT
(
ah
, 
AR_PHY_MODE
, 
AR_PHY_MODE_ASYNCFIFO
);

379 
	`REG_CLR_BIT
(
ah
, 
AR_MAC_PCU_ASYNC_FIFO_REG3
,

380 
AR_MAC_PCU_ASYNC_FIFO_REG3_SOFT_RESET
);

381 
	`REG_SET_BIT
(
ah
, 
AR_MAC_PCU_ASYNC_FIFO_REG3
,

382 
AR_MAC_PCU_ASYNC_FIFO_REG3_SOFT_RESET
);

384 
	}
}

386 
	$¨9002_hw_öô_h™g_checks
(
©h_hw
 *
ah
)

388 i‡(
	`AR_SREV_9100
(
ah
Ë|| 
	`AR_SREV_9160
(ah)) {

389 
ah
->
c⁄fig
.
hw_h™g_checks
 |
HW_BB_RIFS_HANG
;

390 
ah
->
c⁄fig
.
hw_h™g_checks
 |
HW_BB_DFS_HANG
;

393 i‡(
	`AR_SREV_9280
(
ah
))

394 
ah
->
c⁄fig
.
hw_h™g_checks
 |
HW_BB_RX_CLEAR_STUCK_HANG
;

396 i‡(
	`AR_SREV_5416
(
ah
Ë|| 
	`AR_SREV_9100
◊hË|| 
	`AR_SREV_9160
(ah))

397 
ah
->
c⁄fig
.
hw_h™g_checks
 |
HW_MAC_HANG
;

398 
	}
}

401 
	$¨9002_hw_©èch_›s
(
©h_hw
 *
ah
)

403 
©h_hw_¥iv©e_›s
 *
¥iv_›s
 = 
	`©h9k_hw_¥iv©e_›s
(
ah
);

404 
©h_hw_›s
 *
›s
 = 
	`©h9k_hw_›s
(
ah
);

405 
ªt
;

407 
ªt
 = 
	`¨9002_hw_öô_mode_ªgs
(
ah
);

408 i‡(
ªt
)

409  
ªt
;

411 
¥iv_›s
->
öô_mode_gaö_ªgs
 = 
¨9002_hw_öô_mode_gaö_ªgs
;

412 
¥iv_›s
->
öô_h™g_checks
 = 
¨9002_hw_öô_h™g_checks
;

414 
›s
->
c⁄fig_pci_powîßve
 = 
¨9002_hw_c⁄figpcùowîßve
;

416 
ªt
 = 
	`¨5008_hw_©èch_phy_›s
(
ah
);

417 i‡(
ªt
)

418  
ªt
;

420 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
))

421 
	`¨9002_hw_©èch_phy_›s
(
ah
);

423 
	`¨9002_hw_©èch_ˇlib_›s
(
ah
);

424 
	`¨9002_hw_©èch_mac_›s
(
ah
);

426 
	}
}

428 
	$¨9002_hw_lﬂd_™i_ªg
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
)

430 
u32
 
modesIndex
;

431 
i
;

433 i‡(
	`IS_CHAN_5GHZ
(
ch™
))

434 
modesIndex
 = 
	`IS_CHAN_HT40
(
ch™
) ? 2 : 1;

436 
modesIndex
 = 
	`IS_CHAN_HT40
(
ch™
) ? 3 : 4;

438 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

440 
i
 = 0; i < 
ah
->
öiModes_9271_ANI_ªg
.
ü_rows
; i++) {

441 
u32
 
ªg
 = 
	`INI_RA
(&
ah
->
öiModes_9271_ANI_ªg
, 
i
, 0);

442 
u32
 
vÆ
 = 
	`INI_RA
(&
ah
->
öiModes_9271_ANI_ªg
, 
i
, 
modesIndex
);

443 
u32
 
vÆ_‹ig
;

445 i‡(
ªg
 =
AR_PHY_CCK_DETECT
) {

446 
vÆ_‹ig
 = 
	`REG_READ
(
ah
, 
ªg
);

447 
vÆ
 &
AR_PHY_CCK_DETECT_WEAK_SIG_THR_CCK
;

448 
vÆ_‹ig
 &~
AR_PHY_CCK_DETECT_WEAK_SIG_THR_CCK
;

450 
	`REG_WRITE
(
ah
, 
ªg
, 
vÆ
|
vÆ_‹ig
);

452 
	`REG_WRITE
(
ah
, 
ªg
, 
vÆ
);

455 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

456 
	}
}

	@ar9002_initvals.h

17 c⁄° 
u32
 
	g¨9280Modes_9280_2
[][5] = {

67 c⁄° 
u32
 
	g¨9280Comm⁄_9280_2
[][2] = {

411 c⁄° 
u32
 
	g¨9280Modes_Á°_˛ock_9280_2
[][3] = {

428 c⁄° 
u32
 
	g¨9280Modes_backoff_23db_rxgaö_9280_2
[][5] = {

562 c⁄° 
u32
 
	g¨9280Modes_‹igöÆ_rxgaö_9280_2
[][5] = {

696 c⁄° 
u32
 
	g¨9280Modes_backoff_13db_rxgaö_9280_2
[][5] = {

830 c⁄° 
u32
 
	g¨9280Modes_high_powî_tx_gaö_9280_2
[][5] = {

865 c⁄° 
u32
 
	g¨9280Modes_‹igöÆ_tx_gaö_9280_2
[][5] = {

900 c⁄° 
u32
 
	g¨9280PcõPhy_˛kªq_off_L1_9280
[][2] = {

914 c⁄° 
u32
 
	g¨9280PcõPhy_˛kªq_Æways_⁄_L1_9280
[][2] = {

928 c⁄° 
u32
 
	g¨9285Modes_9285_1_2
[][5] = {

1234 c⁄° 
u32
 
	g¨9285Comm⁄_9285_1_2
[][2] = {

1554 c⁄° 
u32
 
	g¨9285Modes_high_powî_tx_gaö_9285_1_2
[][5] = {

1595 c⁄° 
u32
 
	g¨9285Modes_‹igöÆ_tx_gaö_9285_1_2
[][5] = {

1636 c⁄° 
u32
 
	g¨9285Modes_XE2_0_n‹mÆ_powî
[][5] = {

1677 c⁄° 
u32
 
	g¨9285Modes_XE2_0_high_powî
[][5] = {

1718 c⁄° 
u32
 
	g¨9287Modes_9287_1_1
[][5] = {

1765 c⁄° 
u32
 
	g¨9287Comm⁄_9287_1_1
[][2] = {

2134 c⁄° 
u32
 
	g¨9287Comm⁄_n‹mÆ_cck_fú_c€ff_9287_1_1
[][2] = {

2141 c⁄° 
u32
 
	g¨9287Comm⁄_j≠™_2484_cck_fú_c€ff_9287_1_1
[][2] = {

2148 c⁄° 
u32
 
	g¨9287Modes_tx_gaö_9287_1_1
[][5] = {

2197 c⁄° 
u32
 
	g¨9287Modes_rx_gaö_9287_1_1
[][5] = {

2459 c⁄° 
u32
 
	g¨9271Modes_9271
[][5] = {

2766 c⁄° 
u32
 
	g¨9271Comm⁄_9271
[][2] = {

3095 c⁄° 
u32
 
	g¨9271Modes_9271_ANI_ªg
[][5] = {

3107 c⁄° 
u32
 
	g¨9271Modes_n‹mÆ_powî_tx_gaö_9271
[][5] = {

3144 c⁄° 
u32
 
	g¨9271Modes_high_powî_tx_gaö_9271
[][5] = {

	@ar9002_mac.c

17 
	~"hw.h
"

18 
	~<löux/exp‹t.h
>

20 
	#AR_BufLí
 0x00000fff

	)

22 
	$¨9002_hw_rx_íabÀ
(
©h_hw
 *
ah
)

24 
	`REG_WRITE
(
ah
, 
AR_CR
, 
AR_CR_RXE
);

25 
	}
}

27 
	$¨9002_hw_£t_desc_lök
(*
ds
, 
u32
 
ds_lök
)

29 ((
©h_desc
*Ë
ds
)->
ds_lök
 = ds_link;

30 
	}
}

32 
boﬁ
 
	$¨9002_hw_gë_i§
(
©h_hw
 *
ah
, 
©h9k_öt
 *
masked
,

33 
u32
 *
sync_ˇu£_p
)

35 
u32
 
i§
 = 0;

36 
u32
 
mask2
 = 0;

37 
©h9k_hw_ˇ∑bûôõs
 *
pC≠
 = &
ah
->
ˇps
;

38 
u32
 
sync_ˇu£
 = 0;

39 
boﬁ
 
Áèl_öt
 = 
Ál£
;

40 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

42 i‡(!
	`AR_SREV_9100
(
ah
)) {

43 i‡(
	`REG_READ
(
ah
, 
AR_INTR_ASYNC_CAUSE
Ë& 
AR_INTR_MAC_IRQ
) {

44 i‡((
	`REG_READ
(
ah
, 
AR_RTC_STATUS
Ë& 
AR_RTC_STATUS_M
)

45 =
AR_RTC_STATUS_ON
) {

46 
i§
 = 
	`REG_READ
(
ah
, 
AR_ISR
);

50 
sync_ˇu£
 = 
	`REG_READ
(
ah
, 
AR_INTR_SYNC_CAUSE
) &

51 
AR_INTR_SYNC_DEFAULT
;

53 *
masked
 = 0;

55 i‡(!
i§
 && !
sync_ˇu£
)

56  
Ál£
;

58 *
masked
 = 0;

59 
i§
 = 
	`REG_READ
(
ah
, 
AR_ISR
);

62 i‡(
i§
) {

63 i‡(
i§
 & 
AR_ISR_BCNMISC
) {

64 
u32
 
i§2
;

65 
i§2
 = 
	`REG_READ
(
ah
, 
AR_ISR_S2
);

66 i‡(
i§2
 & 
AR_ISR_S2_TIM
)

67 
mask2
 |
ATH9K_INT_TIM
;

68 i‡(
i§2
 & 
AR_ISR_S2_DTIM
)

69 
mask2
 |
ATH9K_INT_DTIM
;

70 i‡(
i§2
 & 
AR_ISR_S2_DTIMSYNC
)

71 
mask2
 |
ATH9K_INT_DTIMSYNC
;

72 i‡(
i§2
 & (
AR_ISR_S2_CABEND
))

73 
mask2
 |
ATH9K_INT_CABEND
;

74 i‡(
i§2
 & 
AR_ISR_S2_GTT
)

75 
mask2
 |
ATH9K_INT_GTT
;

76 i‡(
i§2
 & 
AR_ISR_S2_CST
)

77 
mask2
 |
ATH9K_INT_CST
;

78 i‡(
i§2
 & 
AR_ISR_S2_TSFOOR
)

79 
mask2
 |
ATH9K_INT_TSFOOR
;

81 i‡(!(
pC≠
->
hw_ˇps
 & 
ATH9K_HW_CAP_RAC_SUPPORTED
)) {

82 
	`REG_WRITE
(
ah
, 
AR_ISR_S2
, 
i§2
);

83 
i§
 &~
AR_ISR_BCNMISC
;

87 i‡(
pC≠
->
hw_ˇps
 & 
ATH9K_HW_CAP_RAC_SUPPORTED
)

88 
i§
 = 
	`REG_READ
(
ah
, 
AR_ISR_RAC
);

90 i‡(
i§
 == 0xffffffff) {

91 *
masked
 = 0;

92  
Ál£
;

95 *
masked
 = 
i§
 & 
ATH9K_INT_COMMON
;

97 i‡(
i§
 & (
AR_ISR_RXMINTR
 | 
AR_ISR_RXINTM
 |

98 
AR_ISR_RXOK
 | 
AR_ISR_RXERR
))

99 *
masked
 |
ATH9K_INT_RX
;

101 i‡(
i§
 &

102 (
AR_ISR_TXOK
 | 
AR_ISR_TXDESC
 | 
AR_ISR_TXERR
 |

103 
AR_ISR_TXEOL
)) {

104 
u32
 
s0_s
, 
s1_s
;

106 *
masked
 |
ATH9K_INT_TX
;

108 i‡(
pC≠
->
hw_ˇps
 & 
ATH9K_HW_CAP_RAC_SUPPORTED
) {

109 
s0_s
 = 
	`REG_READ
(
ah
, 
AR_ISR_S0_S
);

110 
s1_s
 = 
	`REG_READ
(
ah
, 
AR_ISR_S1_S
);

112 
s0_s
 = 
	`REG_READ
(
ah
, 
AR_ISR_S0
);

113 
	`REG_WRITE
(
ah
, 
AR_ISR_S0
, 
s0_s
);

114 
s1_s
 = 
	`REG_READ
(
ah
, 
AR_ISR_S1
);

115 
	`REG_WRITE
(
ah
, 
AR_ISR_S1
, 
s1_s
);

117 
i§
 &~(
AR_ISR_TXOK
 |

118 
AR_ISR_TXDESC
 |

119 
AR_ISR_TXERR
 |

120 
AR_ISR_TXEOL
);

123 
ah
->
öå_txqs
 |
	`MS
(
s0_s
, 
AR_ISR_S0_QCU_TXOK
);

124 
ah
->
öå_txqs
 |
	`MS
(
s0_s
, 
AR_ISR_S0_QCU_TXDESC
);

125 
ah
->
öå_txqs
 |
	`MS
(
s1_s
, 
AR_ISR_S1_QCU_TXERR
);

126 
ah
->
öå_txqs
 |
	`MS
(
s1_s
, 
AR_ISR_S1_QCU_TXEOL
);

129 i‡(
i§
 & 
AR_ISR_RXORN
) {

130 
	`©h_dbg
(
comm⁄
, 
INTERRUPT
,

134 *
masked
 |
mask2
;

137 i‡(!
	`AR_SREV_9100
(
ah
Ë&& (
i§
 & 
AR_ISR_GENTMR
)) {

138 
u32
 
s5_s
;

140 i‡(
pC≠
->
hw_ˇps
 & 
ATH9K_HW_CAP_RAC_SUPPORTED
) {

141 
s5_s
 = 
	`REG_READ
(
ah
, 
AR_ISR_S5_S
);

143 
s5_s
 = 
	`REG_READ
(
ah
, 
AR_ISR_S5
);

146 
ah
->
öå_gí_timî_åiggî
 =

147 
	`MS
(
s5_s
, 
AR_ISR_S5_GENTIMER_TRIG
);

149 
ah
->
öå_gí_timî_thªsh
 =

150 
	`MS
(
s5_s
, 
AR_ISR_S5_GENTIMER_THRESH
);

152 i‡(
ah
->
öå_gí_timî_åiggî
)

153 *
masked
 |
ATH9K_INT_GENTIMER
;

155 i‡((
s5_s
 & 
AR_ISR_S5_TIM_TIMER
) &&

156 !(
pC≠
->
hw_ˇps
 & 
ATH9K_HW_CAP_AUTOSLEEP
))

157 *
masked
 |
ATH9K_INT_TIM_TIMER
;

159 i‡(!(
pC≠
->
hw_ˇps
 & 
ATH9K_HW_CAP_RAC_SUPPORTED
)) {

160 
	`REG_WRITE
(
ah
, 
AR_ISR_S5
, 
s5_s
);

161 
i§
 &~
AR_ISR_GENTMR
;

165 i‡(!(
pC≠
->
hw_ˇps
 & 
ATH9K_HW_CAP_RAC_SUPPORTED
)) {

166 
	`REG_WRITE
(
ah
, 
AR_ISR
, 
i§
);

167 
	`REG_READ
(
ah
, 
AR_ISR
);

170 i‡(
	`AR_SREV_9100
(
ah
))

171  
åue
;

173 i‡(
sync_ˇu£
) {

174 i‡(
sync_ˇu£_p
)

175 *
sync_ˇu£_p
 = 
sync_ˇu£
;

176 
Áèl_öt
 =

177 (
sync_ˇu£
 &

178 (
AR_INTR_SYNC_HOST1_FATAL
 | 
AR_INTR_SYNC_HOST1_PERR
))

179 ? 
åue
 : 
Ál£
;

181 i‡(
Áèl_öt
) {

182 i‡(
sync_ˇu£
 & 
AR_INTR_SYNC_HOST1_FATAL
) {

183 
	`©h_dbg
(
comm⁄
, 
ANY
,

186 i‡(
sync_ˇu£
 & 
AR_INTR_SYNC_HOST1_PERR
) {

187 
	`©h_dbg
(
comm⁄
, 
ANY
,

190 *
masked
 |
ATH9K_INT_FATAL
;

192 i‡(
sync_ˇu£
 & 
AR_INTR_SYNC_RADM_CPL_TIMEOUT
) {

193 
	`©h_dbg
(
comm⁄
, 
INTERRUPT
,

195 
	`REG_WRITE
(
ah
, 
AR_RC
, 
AR_RC_HOSTIF
);

196 
	`REG_WRITE
(
ah
, 
AR_RC
, 0);

197 *
masked
 |
ATH9K_INT_FATAL
;

199 i‡(
sync_ˇu£
 & 
AR_INTR_SYNC_LOCAL_TIMEOUT
) {

200 
	`©h_dbg
(
comm⁄
, 
INTERRUPT
,

204 
	`REG_WRITE
(
ah
, 
AR_INTR_SYNC_CAUSE_CLR
, 
sync_ˇu£
);

205 (Ë
	`REG_READ
(
ah
, 
AR_INTR_SYNC_CAUSE_CLR
);

208  
åue
;

209 
	}
}

212 
	$¨9002_£t_txdesc
(
©h_hw
 *
ah
, *
ds
, 
©h_tx_öfo
 *
i
)

214 
¨5416_desc
 *
ads
 = 
	`AR5416DESC
(
ds
);

215 
u32
 
˘l1
, 
˘l6
;

217 
ads
->
ds_tx°©us0
 =áds->
ds_tx°©us1
 = 0;

218 
ads
->
ds_tx°©us2
 =áds->
ds_tx°©us3
 = 0;

219 
ads
->
ds_tx°©us4
 =áds->
ds_tx°©us5
 = 0;

220 
ads
->
ds_tx°©us6
 =áds->
ds_tx°©us7
 = 0;

221 
ads
->
ds_tx°©us8
 =áds->
ds_tx°©us9
 = 0;

223 
	`ACCESS_ONCE
(
ads
->
ds_lök
Ë
i
->
lök
;

224 
	`ACCESS_ONCE
(
ads
->
ds_d©a
Ë
i
->
buf_addr
[0];

226 
˘l1
 = 
i
->
buf_Àn
[0] | (i->
is_œ°
 ? 0 : 
AR_TxM‹e
);

227 
˘l6
 = 
	`SM
(
i
->
keyty≥
, 
AR_En¸Ty≥
);

229 i‡(
	`AR_SREV_9285
(
ah
)) {

230 
ads
->
ds_˘l8
 = 0;

231 
ads
->
ds_˘l9
 = 0;

232 
ads
->
ds_˘l10
 = 0;

233 
ads
->
ds_˘l11
 = 0;

236 i‡((
i
->
is_fú°
 || i->
is_œ°
) &&

237 
i
->
aggr
 !
AGGR_BUF_MIDDLE
 && i->agg∏!
AGGR_BUF_LAST
) {

238 
	`ACCESS_ONCE
(
ads
->
ds_˘l2
Ë
	`£t11nTrõs
(
i
->
øãs
, 0)

239 | 
	`£t11nTrõs
(
i
->
øãs
, 1)

240 | 
	`£t11nTrõs
(
i
->
øãs
, 2)

241 | 
	`£t11nTrõs
(
i
->
øãs
, 3)

242 | (
i
->
dur_upd©e
 ? 
AR_DurUpd©eE«
 : 0)

243 | 
	`SM
(0, 
AR_Bur°Dur
);

245 
	`ACCESS_ONCE
(
ads
->
ds_˘l3
Ë
	`£t11nR©e
(
i
->
øãs
, 0)

246 | 
	`£t11nR©e
(
i
->
øãs
, 1)

247 | 
	`£t11nR©e
(
i
->
øãs
, 2)

248 | 
	`£t11nR©e
(
i
->
øãs
, 3);

250 
	`ACCESS_ONCE
(
ads
->
ds_˘l2
) = 0;

251 
	`ACCESS_ONCE
(
ads
->
ds_˘l3
) = 0;

254 i‡(!
i
->
is_fú°
) {

255 
	`ACCESS_ONCE
(
ads
->
ds_˘l0
) = 0;

256 
	`ACCESS_ONCE
(
ads
->
ds_˘l1
Ë
˘l1
;

257 
	`ACCESS_ONCE
(
ads
->
ds_˘l6
Ë
˘l6
;

261 
˘l1
 |(
i
->
keyix
 !
ATH9K_TXKEYIX_INVALID
 ? 
	`SM
(i->keyix, 
AR_De°Idx
) : 0)

262 | 
	`SM
(
i
->
ty≥
, 
AR_FømeTy≥
)

263 | (
i
->
Êags
 & 
ATH9K_TXDESC_NOACK
 ? 
AR_NoAck
 : 0)

264 | (
i
->
Êags
 & 
ATH9K_TXDESC_EXT_ONLY
 ? 
AR_ExtO∆y
 : 0)

265 | (
i
->
Êags
 & 
ATH9K_TXDESC_EXT_AND_CTL
 ? 
AR_ExtAndCé
 : 0);

267 
i
->
aggr
) {

268 
AGGR_BUF_FIRST
:

269 
˘l6
 |
	`SM
(
i
->
aggr_Àn
, 
AR_AggrLí
);

271 
AGGR_BUF_MIDDLE
:

272 
˘l1
 |
AR_IsAggr
 | 
AR_M‹eAggr
;

273 
˘l6
 |
	`SM
(
i
->
ndñim
, 
AR_PadDñim
);

275 
AGGR_BUF_LAST
:

276 
˘l1
 |
AR_IsAggr
;

278 
AGGR_BUF_NONE
:

282 
	`ACCESS_ONCE
(
ads
->
ds_˘l0
Ë(
i
->
pkt_Àn
 & 
AR_FømeLí
)

283 | (
i
->
Êags
 & 
ATH9K_TXDESC_VMF
 ? 
AR_VútM‹eFøg
 : 0)

284 | 
	`SM
(
i
->
txpowî
, 
AR_XmôPowî
)

285 | (
i
->
Êags
 & 
ATH9K_TXDESC_VEOL
 ? 
AR_VEOL
 : 0)

286 | (
i
->
Êags
 & 
ATH9K_TXDESC_INTREQ
 ? 
AR_TxI¡rReq
 : 0)

287 | (
i
->
keyix
 !
ATH9K_TXKEYIX_INVALID
 ? 
AR_De°IdxVÆid
 : 0)

288 | (
i
->
Êags
 & 
ATH9K_TXDESC_CLRDMASK
 ? 
AR_CÃDe°Mask
 : 0)

289 | (
i
->
Êags
 & 
ATH9K_TXDESC_RTSENA
 ? 
AR_RTSE«bÀ
 :

290 (
i
->
Êags
 & 
ATH9K_TXDESC_CTSENA
 ? 
AR_CTSE«bÀ
 : 0));

292 
	`ACCESS_ONCE
(
ads
->
ds_˘l1
Ë
˘l1
;

293 
	`ACCESS_ONCE
(
ads
->
ds_˘l6
Ë
˘l6
;

295 i‡(
i
->
aggr
 =
AGGR_BUF_MIDDLE
 || i->agg∏=
AGGR_BUF_LAST
)

298 
	`ACCESS_ONCE
(
ads
->
ds_˘l4
Ë
	`£t11nPktDurRTSCTS
(
i
->
øãs
, 0)

299 | 
	`£t11nPktDurRTSCTS
(
i
->
øãs
, 1);

301 
	`ACCESS_ONCE
(
ads
->
ds_˘l5
Ë
	`£t11nPktDurRTSCTS
(
i
->
øãs
, 2)

302 | 
	`£t11nPktDurRTSCTS
(
i
->
øãs
, 3);

304 
	`ACCESS_ONCE
(
ads
->
ds_˘l7
Ë
	`£t11nR©eFœgs
(
i
->
øãs
, 0)

305 | 
	`£t11nR©eFœgs
(
i
->
øãs
, 1)

306 | 
	`£t11nR©eFœgs
(
i
->
øãs
, 2)

307 | 
	`£t11nR©eFœgs
(
i
->
øãs
, 3)

308 | 
	`SM
(
i
->
πs˘s_øã
, 
AR_RTSCTSR©e
);

309 
	}
}

311 
	$¨9002_hw_¥oc_txdesc
(
©h_hw
 *
ah
, *
ds
,

312 
©h_tx_°©us
 *
ts
)

314 
¨5416_desc
 *
ads
 = 
	`AR5416DESC
(
ds
);

315 
u32
 
°©us
;

317 
°©us
 = 
	`ACCESS_ONCE
(
ads
->
ds_tx°©us9
);

318 i‡((
°©us
 & 
AR_TxD⁄e
) == 0)

319  -
EINPROGRESS
;

321 
ts
->
ts_t°amp
 = 
ads
->
AR_SídTime°amp
;

322 
ts
->
ts_°©us
 = 0;

323 
ts
->
ts_Êags
 = 0;

325 i‡(
°©us
 & 
AR_TxOpEx˚eded
)

326 
ts
->
ts_°©us
 |
ATH9K_TXERR_XTXOP
;

327 
ts
->
tid
 = 
	`MS
(
°©us
, 
AR_TxTid
);

328 
ts
->
ts_øãödex
 = 
	`MS
(
°©us
, 
AR_FöÆTxIdx
);

329 
ts
->
ts_£qnum
 = 
	`MS
(
°©us
, 
AR_SeqNum
);

331 
°©us
 = 
	`ACCESS_ONCE
(
ads
->
ds_tx°©us0
);

332 
ts
->
ts_rssi_˘l0
 = 
	`MS
(
°©us
, 
AR_TxRSSIA¡00
);

333 
ts
->
ts_rssi_˘l1
 = 
	`MS
(
°©us
, 
AR_TxRSSIA¡01
);

334 
ts
->
ts_rssi_˘l2
 = 
	`MS
(
°©us
, 
AR_TxRSSIA¡02
);

335 i‡(
°©us
 & 
AR_TxBaSètus
) {

336 
ts
->
ts_Êags
 |
ATH9K_TX_BA
;

337 
ts
->
ba_low
 = 
ads
->
AR_BaBôm≠Low
;

338 
ts
->
ba_high
 = 
ads
->
AR_BaBôm≠High
;

341 
°©us
 = 
	`ACCESS_ONCE
(
ads
->
ds_tx°©us1
);

342 i‡(
°©us
 & 
AR_FrmXmôOK
)

343 
ts
->
ts_°©us
 |
ATH9K_TX_ACKED
;

345 i‡(
°©us
 & 
AR_Ex˚ssiveRërõs
)

346 
ts
->
ts_°©us
 |
ATH9K_TXERR_XRETRY
;

347 i‡(
°©us
 & 
AR_Fûãªd
)

348 
ts
->
ts_°©us
 |
ATH9K_TXERR_FILT
;

349 i‡(
°©us
 & 
AR_FIFOUndîrun
) {

350 
ts
->
ts_°©us
 |
ATH9K_TXERR_FIFO
;

351 
	`©h9k_hw_upd©ëxåigÀvñ
(
ah
, 
åue
);

354 i‡(
°©us
 & 
AR_TxTimîExpúed
)

355 
ts
->
ts_°©us
 |
ATH9K_TXERR_TIMER_EXPIRED
;

356 i‡(
°©us
 & 
AR_DescCfgEº
)

357 
ts
->
ts_Êags
 |
ATH9K_TX_DESC_CFG_ERR
;

358 i‡(
°©us
 & 
AR_TxD©aUndîrun
) {

359 
ts
->
ts_Êags
 |
ATH9K_TX_DATA_UNDERRUN
;

360 
	`©h9k_hw_upd©ëxåigÀvñ
(
ah
, 
åue
);

362 i‡(
°©us
 & 
AR_TxDñimUndîrun
) {

363 
ts
->
ts_Êags
 |
ATH9K_TX_DELIM_UNDERRUN
;

364 
	`©h9k_hw_upd©ëxåigÀvñ
(
ah
, 
åue
);

366 
ts
->
ts_sh‹åëry
 = 
	`MS
(
°©us
, 
AR_RTSFaûC¡
);

367 
ts
->
ts_l⁄gªåy
 = 
	`MS
(
°©us
, 
AR_D©aFaûC¡
);

368 
ts
->
ts_vútcﬁ
 = 
	`MS
(
°©us
, 
AR_VútRëryC¡
);

370 
°©us
 = 
	`ACCESS_ONCE
(
ads
->
ds_tx°©us5
);

371 
ts
->
ts_rssi
 = 
	`MS
(
°©us
, 
AR_TxRSSIComböed
);

372 
ts
->
ts_rssi_ext0
 = 
	`MS
(
°©us
, 
AR_TxRSSIA¡10
);

373 
ts
->
ts_rssi_ext1
 = 
	`MS
(
°©us
, 
AR_TxRSSIA¡11
);

374 
ts
->
ts_rssi_ext2
 = 
	`MS
(
°©us
, 
AR_TxRSSIA¡12
);

376 
ts
->
evm0
 = 
ads
->
AR_TxEVM0
;

377 
ts
->
evm1
 = 
ads
->
AR_TxEVM1
;

378 
ts
->
evm2
 = 
ads
->
AR_TxEVM2
;

381 
	}
}

383 
	$©h9k_hw_£tu¥xdesc
(
©h_hw
 *
ah
, 
©h_desc
 *
ds
,

384 
u32
 
size
, u32 
Êags
)

386 
¨5416_desc
 *
ads
 = 
	`AR5416DESC
(
ds
);

388 
ads
->
ds_˘l1
 = 
size
 & 
AR_BufLí
;

389 i‡(
Êags
 & 
ATH9K_RXDESC_INTREQ
)

390 
ads
->
ds_˘l1
 |
AR_RxI¡rReq
;

392 
	`mem£t
(&
ads
->
u
.
rx
, 0, (ads->u.rx));

393 
	}
}

394 
EXPORT_SYMBOL
(
©h9k_hw_£tu¥xdesc
);

396 
	$¨9002_hw_©èch_mac_›s
(
©h_hw
 *
ah
)

398 
©h_hw_›s
 *
›s
 = 
	`©h9k_hw_›s
(
ah
);

400 
›s
->
rx_íabÀ
 = 
¨9002_hw_rx_íabÀ
;

401 
›s
->
£t_desc_lök
 = 
¨9002_hw_£t_desc_lök
;

402 
›s
->
gë_i§
 = 
¨9002_hw_gë_i§
;

403 
›s
->
£t_txdesc
 = 
¨9002_£t_txdesc
;

404 
›s
->
¥oc_txdesc
 = 
¨9002_hw_¥oc_txdesc
;

405 
	}
}

	@ar9002_phy.c

42 
	~"hw.h
"

43 
	~"¨9002_phy.h
"

66 
	$¨9002_hw_£t_ch™√l
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
)

68 
u16
 
bMode
, 
‰acMode
, 
aModeRefSñ
 = 0;

69 
u32
 
‰eq
, 
ndiv
, 
ch™√lSñ
 = 0, 
ch™√lFøc
 = 0, 
ªg32
 = 0;

70 
ch™_˚¡îs
 
˚¡îs
;

71 
u32
 
ªfDivA
 = 24;

73 
	`©h9k_hw_gë_ch™√l_˚¡îs
(
ah
, 
ch™
, &
˚¡îs
);

74 
‰eq
 = 
˚¡îs
.
sy¡h_˚¡î
;

76 
ªg32
 = 
	`REG_READ
(
ah
, 
AR_PHY_SYNTH_CONTROL
);

77 
ªg32
 &= 0xc0000000;

79 i‡(
‰eq
 < 4800) {

80 
u32
 
tx˘l
;

81 
ªgWrôes
 = 0;

83 
bMode
 = 1;

84 
‰acMode
 = 1;

85 
aModeRefSñ
 = 0;

86 
ch™√lSñ
 = 
	`CHANSEL_2G
(
‰eq
);

88 i‡(
	`AR_SREV_9287_11_OR_LATER
(
ah
)) {

89 i‡(
‰eq
 == 2484) {

91 
	`REG_WRITE_ARRAY
(&
ah
->
öiCckfúJ≠™2484
,

92 1, 
ªgWrôes
);

94 
	`REG_WRITE_ARRAY
(&
ah
->
öiCckfúN‹mÆ
,

95 1, 
ªgWrôes
);

98 
tx˘l
 = 
	`REG_READ
(
ah
, 
AR_PHY_CCK_TX_CTRL
);

99 i‡(
‰eq
 == 2484) {

101 
	`REG_WRITE
(
ah
, 
AR_PHY_CCK_TX_CTRL
,

102 
tx˘l
 | 
AR_PHY_CCK_TX_CTRL_JAPAN
);

104 
	`REG_WRITE
(
ah
, 
AR_PHY_CCK_TX_CTRL
,

105 
tx˘l
 & ~
AR_PHY_CCK_TX_CTRL_JAPAN
);

109 
bMode
 = 0;

110 
‰acMode
 = 0;

112 
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_FRAC_N_5G
)) {

114 i‡(
	`IS_CHAN_HALF_RATE
(
ch™
Ë|| 
	`IS_CHAN_QUARTER_RATE
(chan))

115 
aModeRefSñ
 = 0;

116 i‡((
‰eq
 % 20) == 0)

117 
aModeRefSñ
 = 3;

118 i‡((
‰eq
 % 10) == 0)

119 
aModeRefSñ
 = 2;

120 i‡(
aModeRefSñ
)

124 
aModeRefSñ
 = 0;

129 
‰acMode
 = 1;

130 
ªfDivA
 = 1;

131 
ch™√lSñ
 = 
	`CHANSEL_5G
(
‰eq
);

134 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
, 
AR_AN_SYNTH9
,

135 
AR_AN_SYNTH9_REFDIVA
,

136 
AR_AN_SYNTH9_REFDIVA_S
, 
ªfDivA
);

140 i‡(!
‰acMode
) {

141 
ndiv
 = (
‰eq
 * (
ªfDivA
 >> 
aModeRefSñ
)) / 60;

142 
ch™√lSñ
 = 
ndiv
 & 0x1ff;

143 
ch™√lFøc
 = (
ndiv
 & 0xfffffe00) * 2;

144 
ch™√lSñ
 = (ch™√lSñ << 17Ë| 
ch™√lFøc
;

148 
ªg32
 =Ñeg32 |

149 (
bMode
 << 29) |

150 (
‰acMode
 << 28Ë| (
aModeRefSñ
 << 26Ë| (
ch™√lSñ
);

152 
	`REG_WRITE
(
ah
, 
AR_PHY_SYNTH_CONTROL
, 
ªg32
);

154 
ah
->
curch™
 = 
ch™
;

157 
	}
}

167 
	$¨9002_hw_•ur_môig©e
(
©h_hw
 *
ah
,

168 
©h9k_ch™√l
 *
ch™
)

170 
bb_•ur
 = 
AR_NO_SPUR
;

171 
‰eq
;

172 
bö
, 
cur_bö
;

173 
bb_•ur_off
, 
•ur_subch™√l_sd
;

174 
•ur_‰eq_sd
;

175 
•ur_dñè_pha£
;

176 
díomö©‹
;

177 
uµî
, 
lowî
, 
cur_vô_mask
;

178 
tmp
, 
√wVÆ
;

179 
i
;

180 c⁄° 
pûŸ_mask_ªg
[4] = {

181 
AR_PHY_TIMING7
, 
AR_PHY_TIMING8
,

182 
AR_PHY_PILOT_MASK_01_30
, 
AR_PHY_PILOT_MASK_31_60


184 c⁄° 
ch™_mask_ªg
[4] = {

185 
AR_PHY_TIMING9
, 
AR_PHY_TIMING10
,

186 
AR_PHY_CHANNEL_MASK_01_30
, 
AR_PHY_CHANNEL_MASK_31_60


188 c⁄° 
öc
[4] = { 0, 100, 0, 0 };

189 
ch™_˚¡îs
 
˚¡îs
;

191 
öt8_t
 
mask_m
[123];

192 
öt8_t
 
mask_p
[123];

193 
öt8_t
 
mask_amt
;

194 
tmp_mask
;

195 
cur_bb_•ur
;

196 
boﬁ
 
is2GHz
 = 
	`IS_CHAN_2GHZ
(
ch™
);

198 
	`mem£t
(&
mask_m
, 0, (
öt8_t
) * 123);

199 
	`mem£t
(&
mask_p
, 0, (
öt8_t
) * 123);

201 
	`©h9k_hw_gë_ch™√l_˚¡îs
(
ah
, 
ch™
, &
˚¡îs
);

202 
‰eq
 = 
˚¡îs
.
sy¡h_˚¡î
;

204 
i
 = 0; i < 
AR_EEPROM_MODAL_SPURS
; i++) {

205 
cur_bb_•ur
 = 
ah
->
ìp_›s
->
	`gë_•ur_ch™√l
◊h, 
i
, 
is2GHz
);

207 i‡(
AR_NO_SPUR
 =
cur_bb_•ur
)

210 i‡(
is2GHz
)

211 
cur_bb_•ur
 = (cur_bb_•u∏/ 10Ë+ 
AR_BASE_FREQ_2GHZ
;

213 
cur_bb_•ur
 = (cur_bb_•u∏/ 10Ë+ 
AR_BASE_FREQ_5GHZ
;

215 
cur_bb_•ur
 = cur_bb_•u∏- 
‰eq
;

217 i‡(
	`IS_CHAN_HT40
(
ch™
)) {

218 i‡((
cur_bb_•ur
 > -
AR_SPUR_FEEQ_BOUND_HT40
) &&

219 (
cur_bb_•ur
 < 
AR_SPUR_FEEQ_BOUND_HT40
)) {

220 
bb_•ur
 = 
cur_bb_•ur
;

223 } i‡((
cur_bb_•ur
 > -
AR_SPUR_FEEQ_BOUND_HT20
) &&

224 (
cur_bb_•ur
 < 
AR_SPUR_FEEQ_BOUND_HT20
)) {

225 
bb_•ur
 = 
cur_bb_•ur
;

230 i‡(
AR_NO_SPUR
 =
bb_•ur
) {

231 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_FORCE_CLKEN_CCK
,

232 
AR_PHY_FORCE_CLKEN_CCK_MRC_MUX
);

235 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_FORCE_CLKEN_CCK
,

236 
AR_PHY_FORCE_CLKEN_CCK_MRC_MUX
);

239 
bö
 = 
bb_•ur
 * 320;

241 
tmp
 = 
	`REG_READ
(
ah
, 
	`AR_PHY_TIMING_CTRL4
(0));

243 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

245 
√wVÆ
 = 
tmp
 | (
AR_PHY_TIMING_CTRL4_ENABLE_SPUR_RSSI
 |

246 
AR_PHY_TIMING_CTRL4_ENABLE_SPUR_FILTER
 |

247 
AR_PHY_TIMING_CTRL4_ENABLE_CHAN_MASK
 |

248 
AR_PHY_TIMING_CTRL4_ENABLE_PILOT_MASK
);

249 
	`REG_WRITE
(
ah
, 
	`AR_PHY_TIMING_CTRL4
(0), 
√wVÆ
);

251 
√wVÆ
 = (
AR_PHY_SPUR_REG_MASK_RATE_CNTL
 |

252 
AR_PHY_SPUR_REG_ENABLE_MASK_PPM
 |

253 
AR_PHY_SPUR_REG_MASK_RATE_SELECT
 |

254 
AR_PHY_SPUR_REG_ENABLE_VIT_SPUR_RSSI
 |

255 
	`SM
(
SPUR_RSSI_THRESH
, 
AR_PHY_SPUR_REG_SPUR_RSSI_THRESH
));

256 
	`REG_WRITE
(
ah
, 
AR_PHY_SPUR_REG
, 
√wVÆ
);

258 i‡(
	`IS_CHAN_HT40
(
ch™
)) {

259 i‡(
bb_•ur
 < 0) {

260 
•ur_subch™√l_sd
 = 1;

261 
bb_•ur_off
 = 
bb_•ur
 + 10;

263 
•ur_subch™√l_sd
 = 0;

264 
bb_•ur_off
 = 
bb_•ur
 - 10;

267 
•ur_subch™√l_sd
 = 0;

268 
bb_•ur_off
 = 
bb_•ur
;

271 i‡(
	`IS_CHAN_HT40
(
ch™
))

272 
•ur_dñè_pha£
 =

273 ((
bb_•ur
 * 262144) /

274 10Ë& 
AR_PHY_TIMING11_SPUR_DELTA_PHASE
;

276 
•ur_dñè_pha£
 =

277 ((
bb_•ur
 * 524288) /

278 10Ë& 
AR_PHY_TIMING11_SPUR_DELTA_PHASE
;

280 
díomö©‹
 = 
	`IS_CHAN_2GHZ
(
ch™
) ? 44 : 40;

281 
•ur_‰eq_sd
 = ((
bb_•ur_off
 * 2048Ë/ 
díomö©‹
) & 0x3ff;

283 
√wVÆ
 = (
AR_PHY_TIMING11_USE_SPUR_IN_AGC
 |

284 
	`SM
(
•ur_‰eq_sd
, 
AR_PHY_TIMING11_SPUR_FREQ_SD
) |

285 
	`SM
(
•ur_dñè_pha£
, 
AR_PHY_TIMING11_SPUR_DELTA_PHASE
));

286 
	`REG_WRITE
(
ah
, 
AR_PHY_TIMING11
, 
√wVÆ
);

288 
√wVÆ
 = 
•ur_subch™√l_sd
 << 
AR_PHY_SFCORR_SPUR_SUBCHNL_SD_S
;

289 
	`REG_WRITE
(
ah
, 
AR_PHY_SFCORR_EXT
, 
√wVÆ
);

291 
cur_bö
 = -6000;

292 
uµî
 = 
bö
 + 100;

293 
lowî
 = 
bö
 - 100;

295 
i
 = 0; i < 4; i++) {

296 
pûŸ_mask
 = 0;

297 
ch™_mask
 = 0;

298 
bp
 = 0;

299 
bp
 = 0; bp < 30; bp++) {

300 i‡((
cur_bö
 > 
lowî
Ë&& (cur_bö < 
uµî
)) {

301 
pûŸ_mask
 =ÖûŸ_mask | 0x1 << 
bp
;

302 
ch™_mask
 = ch™_mask | 0x1 << 
bp
;

304 
cur_bö
 += 100;

306 
cur_bö
 +
öc
[
i
];

307 
	`REG_WRITE
(
ah
, 
pûŸ_mask_ªg
[
i
], 
pûŸ_mask
);

308 
	`REG_WRITE
(
ah
, 
ch™_mask_ªg
[
i
], 
ch™_mask
);

311 
cur_vô_mask
 = 6100;

312 
uµî
 = 
bö
 + 120;

313 
lowî
 = 
bö
 - 120;

315 
i
 = 0; i < 123; i++) {

316 i‡((
cur_vô_mask
 > 
lowî
Ë&& (cur_vô_mask < 
uµî
)) {

319 vﬁ©ûê
tmp_v
 = 
	`abs
(
cur_vô_mask
 - 
bö
);

321 i‡(
tmp_v
 < 75)

322 
mask_amt
 = 1;

324 
mask_amt
 = 0;

325 i‡(
cur_vô_mask
 < 0)

326 
mask_m
[
	`abs
(
cur_vô_mask
 / 100)] = 
mask_amt
;

328 
mask_p
[
cur_vô_mask
 / 100] = 
mask_amt
;

330 
cur_vô_mask
 -= 100;

333 
tmp_mask
 = (
mask_m
[46] << 30) | (mask_m[47] << 28)

334 | (
mask_m
[48] << 26) | (mask_m[49] << 24)

335 | (
mask_m
[50] << 22) | (mask_m[51] << 20)

336 | (
mask_m
[52] << 18) | (mask_m[53] << 16)

337 | (
mask_m
[54] << 14) | (mask_m[55] << 12)

338 | (
mask_m
[56] << 10) | (mask_m[57] << 8)

339 | (
mask_m
[58] << 6) | (mask_m[59] << 4)

340 | (
mask_m
[60] << 2) | (mask_m[61] << 0);

341 
	`REG_WRITE
(
ah
, 
AR_PHY_BIN_MASK_1
, 
tmp_mask
);

342 
	`REG_WRITE
(
ah
, 
AR_PHY_VIT_MASK2_M_46_61
, 
tmp_mask
);

344 
tmp_mask
 = (
mask_m
[31] << 28)

345 | (
mask_m
[32] << 26) | (mask_m[33] << 24)

346 | (
mask_m
[34] << 22) | (mask_m[35] << 20)

347 | (
mask_m
[36] << 18) | (mask_m[37] << 16)

348 | (
mask_m
[48] << 14) | (mask_m[39] << 12)

349 | (
mask_m
[40] << 10) | (mask_m[41] << 8)

350 | (
mask_m
[42] << 6) | (mask_m[43] << 4)

351 | (
mask_m
[44] << 2) | (mask_m[45] << 0);

352 
	`REG_WRITE
(
ah
, 
AR_PHY_BIN_MASK_2
, 
tmp_mask
);

353 
	`REG_WRITE
(
ah
, 
AR_PHY_MASK2_M_31_45
, 
tmp_mask
);

355 
tmp_mask
 = (
mask_m
[16] << 30) | (mask_m[16] << 28)

356 | (
mask_m
[18] << 26) | (mask_m[18] << 24)

357 | (
mask_m
[20] << 22) | (mask_m[20] << 20)

358 | (
mask_m
[22] << 18) | (mask_m[22] << 16)

359 | (
mask_m
[24] << 14) | (mask_m[24] << 12)

360 | (
mask_m
[25] << 10) | (mask_m[26] << 8)

361 | (
mask_m
[27] << 6) | (mask_m[28] << 4)

362 | (
mask_m
[29] << 2) | (mask_m[30] << 0);

363 
	`REG_WRITE
(
ah
, 
AR_PHY_BIN_MASK_3
, 
tmp_mask
);

364 
	`REG_WRITE
(
ah
, 
AR_PHY_MASK2_M_16_30
, 
tmp_mask
);

366 
tmp_mask
 = (
mask_m
[0] << 30) | (mask_m[1] << 28)

367 | (
mask_m
[2] << 26) | (mask_m[3] << 24)

368 | (
mask_m
[4] << 22) | (mask_m[5] << 20)

369 | (
mask_m
[6] << 18) | (mask_m[7] << 16)

370 | (
mask_m
[8] << 14) | (mask_m[9] << 12)

371 | (
mask_m
[10] << 10) | (mask_m[11] << 8)

372 | (
mask_m
[12] << 6) | (mask_m[13] << 4)

373 | (
mask_m
[14] << 2) | (mask_m[15] << 0);

374 
	`REG_WRITE
(
ah
, 
AR_PHY_MASK_CTL
, 
tmp_mask
);

375 
	`REG_WRITE
(
ah
, 
AR_PHY_MASK2_M_00_15
, 
tmp_mask
);

377 
tmp_mask
 = (
mask_p
[15] << 28)

378 | (
mask_p
[14] << 26) | (mask_p[13] << 24)

379 | (
mask_p
[12] << 22) | (mask_p[11] << 20)

380 | (
mask_p
[10] << 18) | (mask_p[9] << 16)

381 | (
mask_p
[8] << 14) | (mask_p[7] << 12)

382 | (
mask_p
[6] << 10) | (mask_p[5] << 8)

383 | (
mask_p
[4] << 6) | (mask_p[3] << 4)

384 | (
mask_p
[2] << 2) | (mask_p[1] << 0);

385 
	`REG_WRITE
(
ah
, 
AR_PHY_BIN_MASK2_1
, 
tmp_mask
);

386 
	`REG_WRITE
(
ah
, 
AR_PHY_MASK2_P_15_01
, 
tmp_mask
);

388 
tmp_mask
 = (
mask_p
[30] << 28)

389 | (
mask_p
[29] << 26) | (mask_p[28] << 24)

390 | (
mask_p
[27] << 22) | (mask_p[26] << 20)

391 | (
mask_p
[25] << 18) | (mask_p[24] << 16)

392 | (
mask_p
[23] << 14) | (mask_p[22] << 12)

393 | (
mask_p
[21] << 10) | (mask_p[20] << 8)

394 | (
mask_p
[19] << 6) | (mask_p[18] << 4)

395 | (
mask_p
[17] << 2) | (mask_p[16] << 0);

396 
	`REG_WRITE
(
ah
, 
AR_PHY_BIN_MASK2_2
, 
tmp_mask
);

397 
	`REG_WRITE
(
ah
, 
AR_PHY_MASK2_P_30_16
, 
tmp_mask
);

399 
tmp_mask
 = (
mask_p
[45] << 28)

400 | (
mask_p
[44] << 26) | (mask_p[43] << 24)

401 | (
mask_p
[42] << 22) | (mask_p[41] << 20)

402 | (
mask_p
[40] << 18) | (mask_p[39] << 16)

403 | (
mask_p
[38] << 14) | (mask_p[37] << 12)

404 | (
mask_p
[36] << 10) | (mask_p[35] << 8)

405 | (
mask_p
[34] << 6) | (mask_p[33] << 4)

406 | (
mask_p
[32] << 2) | (mask_p[31] << 0);

407 
	`REG_WRITE
(
ah
, 
AR_PHY_BIN_MASK2_3
, 
tmp_mask
);

408 
	`REG_WRITE
(
ah
, 
AR_PHY_MASK2_P_45_31
, 
tmp_mask
);

410 
tmp_mask
 = (
mask_p
[61] << 30) | (mask_p[60] << 28)

411 | (
mask_p
[59] << 26) | (mask_p[58] << 24)

412 | (
mask_p
[57] << 22) | (mask_p[56] << 20)

413 | (
mask_p
[55] << 18) | (mask_p[54] << 16)

414 | (
mask_p
[53] << 14) | (mask_p[52] << 12)

415 | (
mask_p
[51] << 10) | (mask_p[50] << 8)

416 | (
mask_p
[49] << 6) | (mask_p[48] << 4)

417 | (
mask_p
[47] << 2) | (mask_p[46] << 0);

418 
	`REG_WRITE
(
ah
, 
AR_PHY_BIN_MASK2_4
, 
tmp_mask
);

419 
	`REG_WRITE
(
ah
, 
AR_PHY_MASK2_P_61_45
, 
tmp_mask
);

421 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

422 
	}
}

424 
	$¨9002_ﬁc_öô
(
©h_hw
 *
ah
)

426 
u32
 
i
;

428 i‡(!
OLC_FOR_AR9280_20_LATER
)

431 i‡(
OLC_FOR_AR9287_10_LATER
) {

432 
	`REG_SET_BIT
(
ah
, 
AR_PHY_TX_PWRCTRL9
,

433 
AR_PHY_TX_PWRCTRL9_RES_DC_REMOVAL
);

434 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
, 
AR9287_AN_TXPC0
,

435 
AR9287_AN_TXPC0_TXPCMODE
,

436 
AR9287_AN_TXPC0_TXPCMODE_S
,

437 
AR9287_AN_TXPC0_TXPCMODE_TEMPSENSE
);

438 
	`udñay
(100);

440 
i
 = 0; i < 
AR9280_TX_GAIN_TABLE_SIZE
; i++)

441 
ah
->
‹igöÆGaö
[
i
] =

442 
	`MS
(
	`REG_READ
(
ah
, 
AR_PHY_TX_GAIN_TBL1
 + 
i
 * 4),

443 
AR_PHY_TX_GAIN
);

444 
ah
->
PDADCdñè
 = 0;

446 
	}
}

448 
u32
 
	$¨9002_hw_compuã_∂l_c⁄åﬁ
(
©h_hw
 *
ah
,

449 
©h9k_ch™√l
 *
ch™
)

451 
ªf_div
 = 5;

452 
∂l_div
 = 0x2c;

453 
u32
 
∂l
;

455 i‡(
ch™
 && 
	`IS_CHAN_5GHZ
(ch™Ë&& !
	`IS_CHAN_A_FAST_CLOCK
(
ah
, chan)) {

456 i‡(
	`AR_SREV_9280_20
(
ah
)) {

457 
ªf_div
 = 10;

458 
∂l_div
 = 0x50;

460 
∂l_div
 = 0x28;

464 
∂l
 = 
	`SM
(
ªf_div
, 
AR_RTC_9160_PLL_REFDIV
);

465 
∂l
 |
	`SM
(
∂l_div
, 
AR_RTC_9160_PLL_DIV
);

467 i‡(
ch™
 && 
	`IS_CHAN_HALF_RATE
(chan))

468 
∂l
 |
	`SM
(0x1, 
AR_RTC_9160_PLL_CLKSEL
);

469 i‡(
ch™
 && 
	`IS_CHAN_QUARTER_RATE
(chan))

470 
∂l
 |
	`SM
(0x2, 
AR_RTC_9160_PLL_CLKSEL
);

472  
∂l
;

473 
	}
}

475 
	$¨9002_hw_do_gënf
(
©h_hw
 *
ah
,

476 
öt16_t
 
nÁºay
[
NUM_NF_READINGS
])

478 
öt16_t
 
nf
;

480 
nf
 = 
	`MS
(
	`REG_READ
(
ah
, 
AR_PHY_CCA
), 
AR9280_PHY_MINCCA_PWR
);

481 
nÁºay
[0] = 
	`sign_exãnd32
(
nf
, 8);

483 
nf
 = 
	`MS
(
	`REG_READ
(
ah
, 
AR_PHY_EXT_CCA
), 
AR9280_PHY_EXT_MINCCA_PWR
);

484 i‡(
	`IS_CHAN_HT40
(
ah
->
curch™
))

485 
nÁºay
[3] = 
	`sign_exãnd32
(
nf
, 8);

487 i‡(!(
ah
->
rxchaömask
 & 
	`BIT
(1)))

490 
nf
 = 
	`MS
(
	`REG_READ
(
ah
, 
AR_PHY_CH1_CCA
), 
AR9280_PHY_CH1_MINCCA_PWR
);

491 
nÁºay
[1] = 
	`sign_exãnd32
(
nf
, 8);

493 
nf
 = 
	`MS
(
	`REG_READ
(
ah
, 
AR_PHY_CH1_EXT_CCA
), 
AR9280_PHY_CH1_EXT_MINCCA_PWR
);

494 i‡(
	`IS_CHAN_HT40
(
ah
->
curch™
))

495 
nÁºay
[4] = 
	`sign_exãnd32
(
nf
, 8);

496 
	}
}

498 
	$¨9002_hw_£t_nf_limôs
(
©h_hw
 *
ah
)

500 i‡(
	`AR_SREV_9285
(
ah
)) {

501 
ah
->
nf_2g
.
max
 = 
AR_PHY_CCA_MAX_GOOD_VAL_9285_2GHZ
;

502 
ah
->
nf_2g
.
mö
 = 
AR_PHY_CCA_MIN_GOOD_VAL_9285_2GHZ
;

503 
ah
->
nf_2g
.
nomöÆ
 = 
AR_PHY_CCA_NOM_VAL_9285_2GHZ
;

504 } i‡(
	`AR_SREV_9287
(
ah
)) {

505 
ah
->
nf_2g
.
max
 = 
AR_PHY_CCA_MAX_GOOD_VAL_9287_2GHZ
;

506 
ah
->
nf_2g
.
mö
 = 
AR_PHY_CCA_MIN_GOOD_VAL_9287_2GHZ
;

507 
ah
->
nf_2g
.
nomöÆ
 = 
AR_PHY_CCA_NOM_VAL_9287_2GHZ
;

508 } i‡(
	`AR_SREV_9271
(
ah
)) {

509 
ah
->
nf_2g
.
max
 = 
AR_PHY_CCA_MAX_GOOD_VAL_9271_2GHZ
;

510 
ah
->
nf_2g
.
mö
 = 
AR_PHY_CCA_MIN_GOOD_VAL_9271_2GHZ
;

511 
ah
->
nf_2g
.
nomöÆ
 = 
AR_PHY_CCA_NOM_VAL_9271_2GHZ
;

513 
ah
->
nf_2g
.
max
 = 
AR_PHY_CCA_MAX_GOOD_VAL_9280_2GHZ
;

514 
ah
->
nf_2g
.
mö
 = 
AR_PHY_CCA_MIN_GOOD_VAL_9280_2GHZ
;

515 
ah
->
nf_2g
.
nomöÆ
 = 
AR_PHY_CCA_NOM_VAL_9280_2GHZ
;

516 
ah
->
nf_5g
.
max
 = 
AR_PHY_CCA_MAX_GOOD_VAL_9280_5GHZ
;

517 
ah
->
nf_5g
.
mö
 = 
AR_PHY_CCA_MIN_GOOD_VAL_9280_5GHZ
;

518 
ah
->
nf_5g
.
nomöÆ
 = 
AR_PHY_CCA_NOM_VAL_9280_5GHZ
;

520 
	}
}

522 
	$¨9002_hw_™tdiv_comb_c⁄f_gë
(
©h_hw
 *
ah
,

523 
©h_hw_™tcomb_c⁄f
 *
™tc⁄f
)

525 
u32
 
ªgvÆ
;

527 
ªgvÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_MULTICHAIN_GAIN_CTL
);

528 
™tc⁄f
->
maö_ a_c⁄f
 = (
ªgvÆ
 & 
AR_PHY_9285_ANT_DIV_MAIN_LNACONF
) >>

529 
AR_PHY_9285_ANT_DIV_MAIN_LNACONF_S
;

530 
™tc⁄f
->
Æt_ a_c⁄f
 = (
ªgvÆ
 & 
AR_PHY_9285_ANT_DIV_ALT_LNACONF
) >>

531 
AR_PHY_9285_ANT_DIV_ALT_LNACONF_S
;

532 
™tc⁄f
->
Á°_div_büs
 = (
ªgvÆ
 & 
AR_PHY_9285_FAST_DIV_BIAS
) >>

533 
AR_PHY_9285_FAST_DIV_BIAS_S
;

534 
™tc⁄f
->
 a1_ a2_swôch_dñè
 = -1;

535 
™tc⁄f
->
 a1_ a2_dñè
 = -3;

536 
™tc⁄f
->
div_group
 = 0;

537 
	}
}

539 
	$¨9002_hw_™tdiv_comb_c⁄f_£t
(
©h_hw
 *
ah
,

540 
©h_hw_™tcomb_c⁄f
 *
™tc⁄f
)

542 
u32
 
ªgvÆ
;

544 
ªgvÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_MULTICHAIN_GAIN_CTL
);

545 
ªgvÆ
 &~(
AR_PHY_9285_ANT_DIV_MAIN_LNACONF
 |

546 
AR_PHY_9285_ANT_DIV_ALT_LNACONF
 |

547 
AR_PHY_9285_FAST_DIV_BIAS
);

548 
ªgvÆ
 |((
™tc⁄f
->
maö_ a_c⁄f
 << 
AR_PHY_9285_ANT_DIV_MAIN_LNACONF_S
)

549 & 
AR_PHY_9285_ANT_DIV_MAIN_LNACONF
);

550 
ªgvÆ
 |((
™tc⁄f
->
Æt_ a_c⁄f
 << 
AR_PHY_9285_ANT_DIV_ALT_LNACONF_S
)

551 & 
AR_PHY_9285_ANT_DIV_ALT_LNACONF
);

552 
ªgvÆ
 |((
™tc⁄f
->
Á°_div_büs
 << 
AR_PHY_9285_FAST_DIV_BIAS_S
)

553 & 
AR_PHY_9285_FAST_DIV_BIAS
);

555 
	`REG_WRITE
(
ah
, 
AR_PHY_MULTICHAIN_GAIN_CTL
, 
ªgvÆ
);

556 
	}
}

558 #ifde‡
CPTCFG_ATH9K_BTCOEX_SUPPORT


560 
	$¨9002_hw_£t_bt_™t_divîsôy
(
©h_hw
 *
ah
, 
boﬁ
 
íabÀ
)

562 
©h_btc€x_hw
 *
btc€x
 = &
ah
->
btc€x_hw
;

563 
u8
 
™tdiv_˘æ1
, 
™tdiv_˘æ2
;

564 
u32
 
ªgvÆ
;

566 i‡(
íabÀ
) {

567 
™tdiv_˘æ1
 = 
ATH_BT_COEX_ANTDIV_CONTROL1_ENABLE
;

568 
™tdiv_˘æ2
 = 
ATH_BT_COEX_ANTDIV_CONTROL2_ENABLE
;

573 
btc€x
->
bt_c€x_mode2
 &(~(
AR_BT_DISABLE_BT_ANT
));

574 
	`REG_WRITE
(
ah
, 
AR_BT_COEX_MODE2
, 
btc€x
->
bt_c€x_mode2
);

576 
	`REG_WRITE
(
ah
, 
AR_PHY_SWITCH_COM
, 
ATH_BT_COEX_ANT_DIV_SWITCH_COM
);

577 
	`REG_RMW
(
ah
, 
AR_PHY_SWITCH_CHAIN_0
, 0, 0xf0000000);

582 
™tdiv_˘æ1
 = 
ATH_BT_COEX_ANTDIV_CONTROL1_FIXED_A
;

583 
™tdiv_˘æ2
 = 
ATH_BT_COEX_ANTDIV_CONTROL2_FIXED_A
;

588 
btc€x
->
bt_c€x_mode2
 |
AR_BT_DISABLE_BT_ANT
;

589 
	`REG_WRITE
(
ah
, 
AR_BT_COEX_MODE2
, 
btc€x
->
bt_c€x_mode2
);

595 
	`REG_WRITE
(
ah
, 
AR_PHY_SWITCH_COM
, 0);

596 
	`REG_RMW
(
ah
, 
AR_PHY_SWITCH_CHAIN_0
, 0, 0xf0000000);

599 
ªgvÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_MULTICHAIN_GAIN_CTL
);

600 
ªgvÆ
 &(~(
AR_PHY_9285_ANT_DIV_CTL_ALL
));

605 
ªgvÆ
 &(~(
AR_PHY_9285_FAST_DIV_BIAS
));

606 
ªgvÆ
 |
	`SM
(
™tdiv_˘æ1
, 
AR_PHY_9285_ANT_DIV_CTL
);

607 
ªgvÆ
 |
	`SM
(
™tdiv_˘æ2
, 
AR_PHY_9285_ANT_DIV_ALT_LNACONF
);

608 
ªgvÆ
 |
	`SM
((
™tdiv_˘æ2
 >> 2), 
AR_PHY_9285_ANT_DIV_MAIN_LNACONF
);

609 
ªgvÆ
 |
	`SM
((
™tdiv_˘æ1
 >> 1), 
AR_PHY_9285_ANT_DIV_ALT_GAINTB
);

610 
ªgvÆ
 |
	`SM
((
™tdiv_˘æ1
 >> 2), 
AR_PHY_9285_ANT_DIV_MAIN_GAINTB
);

611 
	`REG_WRITE
(
ah
, 
AR_PHY_MULTICHAIN_GAIN_CTL
, 
ªgvÆ
);

613 
ªgvÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_CCK_DETECT
);

614 
ªgvÆ
 &(~
AR_PHY_CCK_DETECT_BB_ENABLE_ANT_FAST_DIV
);

615 
ªgvÆ
 |
	`SM
((
™tdiv_˘æ1
 >> 3), 
AR_PHY_CCK_DETECT_BB_ENABLE_ANT_FAST_DIV
);

616 
	`REG_WRITE
(
ah
, 
AR_PHY_CCK_DETECT
, 
ªgvÆ
);

617 
	}
}

621 
	$¨9002_hw_•e˘øl_sˇn_c⁄fig
(
©h_hw
 *
ah
,

622 
©h_•ec_sˇn
 *
∑øm
)

624 
u8
 
cou¡
;

626 i‡(!
∑øm
->
íabÀd
) {

627 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_SPECTRAL_SCAN
,

628 
AR_PHY_SPECTRAL_SCAN_ENABLE
);

631 
	`REG_SET_BIT
(
ah
, 
AR_PHY_RADAR_0
, 
AR_PHY_RADAR_0_FFT_ENA
);

632 
	`REG_SET_BIT
(
ah
, 
AR_PHY_SPECTRAL_SCAN
, 
AR_PHY_SPECTRAL_SCAN_ENABLE
);

634 i‡(
∑øm
->
sh‹t_ª≥©
)

635 
	`REG_SET_BIT
(
ah
, 
AR_PHY_SPECTRAL_SCAN
,

636 
AR_PHY_SPECTRAL_SCAN_SHORT_REPEAT
);

638 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_SPECTRAL_SCAN
,

639 
AR_PHY_SPECTRAL_SCAN_SHORT_REPEAT
);

645 
cou¡
 = 
∑øm
->count;

646 i‡(
∑øm
->
ídÀss
)

647 
cou¡
 = 0x80;

648 i‡(
cou¡
 & 0x80)

649 
cou¡
 = 0x7f;

651 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SPECTRAL_SCAN
,

652 
AR_PHY_SPECTRAL_SCAN_COUNT
, 
cou¡
);

653 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SPECTRAL_SCAN
,

654 
AR_PHY_SPECTRAL_SCAN_PERIOD
, 
∑øm
->
≥riod
);

655 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SPECTRAL_SCAN
,

656 
AR_PHY_SPECTRAL_SCAN_FFT_PERIOD
, 
∑øm
->
f·_≥riod
);

659 
	}
}

661 
	$¨9002_hw_•e˘øl_sˇn_åiggî
(
©h_hw
 *
ah
)

663 
	`REG_SET_BIT
(
ah
, 
AR_PHY_SPECTRAL_SCAN
, 
AR_PHY_SPECTRAL_SCAN_ENABLE
);

665 
	`REG_SET_BIT
(
ah
, 
AR_PHY_SPECTRAL_SCAN
,

666 
AR_PHY_SPECTRAL_SCAN_ACTIVE
);

667 
	}
}

669 
	$¨9002_hw_•e˘øl_sˇn_waô
(
©h_hw
 *
ah
)

671 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

674 i‡(!
	`©h9k_hw_waô
(
ah
, 
AR_PHY_SPECTRAL_SCAN
,

675 
AR_PHY_SPECTRAL_SCAN_ACTIVE
,

676 0, 
AH_WAIT_TIMEOUT
)) {

677 
	`©h_îr
(
comm⁄
, "spectral scan wait failed\n");

680 
	}
}

682 
	$¨9002_hw_tx99_°¨t
(
©h_hw
 *
ah
, 
u32
 
qnum
)

684 
	`REG_SET_BIT
(
ah
, 0x9864, 0x7f000);

685 
	`REG_SET_BIT
(
ah
, 0x9924, 0x7f00fe);

686 
	`REG_CLR_BIT
(
ah
, 
AR_DIAG_SW
, 
AR_DIAG_RX_DIS
);

687 
	`REG_WRITE
(
ah
, 
AR_CR
, 
AR_CR_RXD
);

688 
	`REG_WRITE
(
ah
, 
	`AR_DLCL_IFS
(
qnum
), 0);

689 
	`REG_WRITE
(
ah
, 
AR_D_GBL_IFS_SIFS
, 20);

690 
	`REG_WRITE
(
ah
, 
AR_D_GBL_IFS_EIFS
, 20);

691 
	`REG_WRITE
(
ah
, 
AR_D_FPCTL
, 0x10|
qnum
);

692 
	`REG_WRITE
(
ah
, 
AR_TIME_OUT
, 0x00000400);

693 
	`REG_WRITE
(
ah
, 
	`AR_DRETRY_LIMIT
(
qnum
), 0xffffffff);

694 
	`REG_SET_BIT
(
ah
, 
	`AR_QMISC
(
qnum
), 
AR_Q_MISC_DCU_EARLY_TERM_REQ
);

695 
	}
}

697 
	$¨9002_hw_tx99_°›
(
©h_hw
 *
ah
)

699 
	`REG_SET_BIT
(
ah
, 
AR_DIAG_SW
, 
AR_DIAG_RX_DIS
);

700 
	}
}

702 
	$¨9002_hw_©èch_phy_›s
(
©h_hw
 *
ah
)

704 
©h_hw_¥iv©e_›s
 *
¥iv_›s
 = 
	`©h9k_hw_¥iv©e_›s
(
ah
);

705 
©h_hw_›s
 *
›s
 = 
	`©h9k_hw_›s
(
ah
);

707 
¥iv_›s
->
£t_rf_ªgs
 = 
NULL
;

708 
¥iv_›s
->
rf_£t_‰eq
 = 
¨9002_hw_£t_ch™√l
;

709 
¥iv_›s
->
•ur_môig©e_‰eq
 = 
¨9002_hw_•ur_môig©e
;

710 
¥iv_›s
->
ﬁc_öô
 = 
¨9002_ﬁc_öô
;

711 
¥iv_›s
->
compuã_∂l_c⁄åﬁ
 = 
¨9002_hw_compuã_∂l_c⁄åﬁ
;

712 
¥iv_›s
->
do_gënf
 = 
¨9002_hw_do_gënf
;

714 
›s
->
™tdiv_comb_c⁄f_gë
 = 
¨9002_hw_™tdiv_comb_c⁄f_gë
;

715 
›s
->
™tdiv_comb_c⁄f_£t
 = 
¨9002_hw_™tdiv_comb_c⁄f_£t
;

716 
›s
->
•e˘øl_sˇn_c⁄fig
 = 
¨9002_hw_•e˘øl_sˇn_c⁄fig
;

717 
›s
->
•e˘øl_sˇn_åiggî
 = 
¨9002_hw_•e˘øl_sˇn_åiggî
;

718 
›s
->
•e˘øl_sˇn_waô
 = 
¨9002_hw_•e˘øl_sˇn_waô
;

720 #ifde‡
CPTCFG_ATH9K_BTCOEX_SUPPORT


721 
›s
->
£t_bt_™t_divîsôy
 = 
¨9002_hw_£t_bt_™t_divîsôy
;

723 
›s
->
tx99_°¨t
 = 
¨9002_hw_tx99_°¨t
;

724 
›s
->
tx99_°›
 = 
¨9002_hw_tx99_°›
;

726 
	`¨9002_hw_£t_nf_limôs
(
ah
);

727 
	}
}

	@ar9002_phy.h

16 #i‚de‡
AR9002_PHY_H


17 
	#AR9002_PHY_H


	)

19 
	#AR_PHY_TEST
 0x9800

	)

20 
	#PHY_AGC_CLR
 0x10000000

	)

21 
	#RFSILENT_BB
 0x00002000

	)

23 
	#AR_PHY_TEST_BBB_OBS_SEL
 0x780000

	)

24 
	#AR_PHY_TEST_BBB_OBS_SEL_S
 19

	)

26 
	#AR_PHY_TEST_RX_OBS_SEL_BIT5_S
 23

	)

27 
	#AR_PHY_TEST_RX_OBS_SEL_BIT5
 (1 << 
AR_PHY_TEST_RX_OBS_SEL_BIT5_S
)

	)

29 
	#AR_PHY_TURBO
 0x9804

	)

30 
	#AR_PHY_FC_TURBO_MODE
 0x00000001

	)

31 
	#AR_PHY_FC_TURBO_SHORT
 0x00000002

	)

32 
	#AR_PHY_FC_DYN2040_EN
 0x00000004

	)

33 
	#AR_PHY_FC_DYN2040_PRI_ONLY
 0x00000008

	)

34 
	#AR_PHY_FC_DYN2040_PRI_CH
 0x00000010

	)

36 
	#AR_PHY_FC_DYN2040_EXT_CH
 0x00000020

	)

37 
	#AR_PHY_FC_HT_EN
 0x00000040

	)

38 
	#AR_PHY_FC_SHORT_GI_40
 0x00000080

	)

39 
	#AR_PHY_FC_WALSH
 0x00000100

	)

40 
	#AR_PHY_FC_SINGLE_HT_LTF1
 0x00000200

	)

41 
	#AR_PHY_FC_ENABLE_DAC_FIFO
 0x00000800

	)

43 
	#AR_PHY_TEST2
 0x9808

	)

45 
	#AR_PHY_TEST2_RX_OBS_SEL
 0x3C00

	)

46 
	#AR_PHY_TEST2_RX_OBS_SEL_S
 10

	)

48 
	#AR_PHY_TIMING2
 0x9810

	)

49 
	#AR_PHY_TIMING3
 0x9814

	)

50 
	#AR_PHY_TIMING3_DSC_MAN
 0xFFFE0000

	)

51 
	#AR_PHY_TIMING3_DSC_MAN_S
 17

	)

52 
	#AR_PHY_TIMING3_DSC_EXP
 0x0001E000

	)

53 
	#AR_PHY_TIMING3_DSC_EXP_S
 13

	)

55 
	#AR_PHY_CHIP_ID_REV_0
 0x80

	)

56 
	#AR_PHY_CHIP_ID_REV_1
 0x81

	)

57 
	#AR_PHY_CHIP_ID_9160_REV_0
 0xb0

	)

59 
	#AR_PHY_ACTIVE
 0x981C

	)

60 
	#AR_PHY_ACTIVE_EN
 0x00000001

	)

61 
	#AR_PHY_ACTIVE_DIS
 0x00000000

	)

63 
	#AR_PHY_RF_CTL2
 0x9824

	)

64 
	#AR_PHY_TX_END_DATA_START
 0x000000FF

	)

65 
	#AR_PHY_TX_END_DATA_START_S
 0

	)

66 
	#AR_PHY_TX_END_PA_ON
 0x0000FF00

	)

67 
	#AR_PHY_TX_END_PA_ON_S
 8

	)

69 
	#AR_PHY_RF_CTL3
 0x9828

	)

70 
	#AR_PHY_TX_END_TO_A2_RX_ON
 0x00FF0000

	)

71 
	#AR_PHY_TX_END_TO_A2_RX_ON_S
 16

	)

72 
	#AR_PHY_TX_END_TO_ADC_ON
 0xFF000000

	)

73 
	#AR_PHY_TX_END_TO_ADC_ON_S
 24

	)

75 
	#AR_PHY_ADC_CTL
 0x982C

	)

76 
	#AR_PHY_ADC_CTL_OFF_INBUFGAIN
 0x00000003

	)

77 
	#AR_PHY_ADC_CTL_OFF_INBUFGAIN_S
 0

	)

78 
	#AR_PHY_ADC_CTL_OFF_PWDDAC
 0x00002000

	)

79 
	#AR_PHY_ADC_CTL_OFF_PWDBANDGAP
 0x00004000

	)

80 
	#AR_PHY_ADC_CTL_OFF_PWDADC
 0x00008000

	)

81 
	#AR_PHY_ADC_CTL_ON_INBUFGAIN
 0x00030000

	)

82 
	#AR_PHY_ADC_CTL_ON_INBUFGAIN_S
 16

	)

84 
	#AR_PHY_ADC_SERIAL_CTL
 0x9830

	)

85 
	#AR_PHY_SEL_INTERNAL_ADDAC
 0x00000000

	)

86 
	#AR_PHY_SEL_EXTERNAL_RADIO
 0x00000001

	)

88 
	#AR_PHY_RF_CTL4
 0x9834

	)

89 
	#AR_PHY_RF_CTL4_TX_END_XPAB_OFF
 0xFF000000

	)

90 
	#AR_PHY_RF_CTL4_TX_END_XPAB_OFF_S
 24

	)

91 
	#AR_PHY_RF_CTL4_TX_END_XPAA_OFF
 0x00FF0000

	)

92 
	#AR_PHY_RF_CTL4_TX_END_XPAA_OFF_S
 16

	)

93 
	#AR_PHY_RF_CTL4_FRAME_XPAB_ON
 0x0000FF00

	)

94 
	#AR_PHY_RF_CTL4_FRAME_XPAB_ON_S
 8

	)

95 
	#AR_PHY_RF_CTL4_FRAME_XPAA_ON
 0x000000FF

	)

96 
	#AR_PHY_RF_CTL4_FRAME_XPAA_ON_S
 0

	)

98 
	#AR_PHY_TSTDAC_CONST
 0x983c

	)

100 
	#AR_PHY_SETTLING
 0x9844

	)

101 
	#AR_PHY_SETTLING_SWITCH
 0x00003F80

	)

102 
	#AR_PHY_SETTLING_SWITCH_S
 7

	)

104 
	#AR_PHY_RXGAIN
 0x9848

	)

105 
	#AR_PHY_RXGAIN_TXRX_ATTEN
 0x0003F000

	)

106 
	#AR_PHY_RXGAIN_TXRX_ATTEN_S
 12

	)

107 
	#AR_PHY_RXGAIN_TXRX_RF_MAX
 0x007C0000

	)

108 
	#AR_PHY_RXGAIN_TXRX_RF_MAX_S
 18

	)

109 
	#AR9280_PHY_RXGAIN_TXRX_ATTEN
 0x00003F80

	)

110 
	#AR9280_PHY_RXGAIN_TXRX_ATTEN_S
 7

	)

111 
	#AR9280_PHY_RXGAIN_TXRX_MARGIN
 0x001FC000

	)

112 
	#AR9280_PHY_RXGAIN_TXRX_MARGIN_S
 14

	)

114 
	#AR_PHY_DESIRED_SZ
 0x9850

	)

115 
	#AR_PHY_DESIRED_SZ_ADC
 0x000000FF

	)

116 
	#AR_PHY_DESIRED_SZ_ADC_S
 0

	)

117 
	#AR_PHY_DESIRED_SZ_PGA
 0x0000FF00

	)

118 
	#AR_PHY_DESIRED_SZ_PGA_S
 8

	)

119 
	#AR_PHY_DESIRED_SZ_TOT_DES
 0x0FF00000

	)

120 
	#AR_PHY_DESIRED_SZ_TOT_DES_S
 20

	)

122 
	#AR_PHY_FIND_SIG
 0x9858

	)

123 
	#AR_PHY_FIND_SIG_FIRSTEP
 0x0003F000

	)

124 
	#AR_PHY_FIND_SIG_FIRSTEP_S
 12

	)

125 
	#AR_PHY_FIND_SIG_FIRPWR
 0x03FC0000

	)

126 
	#AR_PHY_FIND_SIG_FIRPWR_S
 18

	)

128 
	#AR_PHY_FIND_SIG_LOW
 0x9840

	)

129 
	#AR_PHY_FIND_SIG_FIRSTEP_LOW
 0x00000FC0L

	)

130 
	#AR_PHY_FIND_SIG_FIRSTEP_LOW_S
 6

	)

132 
	#AR_PHY_AGC_CTL1
 0x985C

	)

133 
	#AR_PHY_AGC_CTL1_COARSE_LOW
 0x00007F80

	)

134 
	#AR_PHY_AGC_CTL1_COARSE_LOW_S
 7

	)

135 
	#AR_PHY_AGC_CTL1_COARSE_HIGH
 0x003F8000

	)

136 
	#AR_PHY_AGC_CTL1_COARSE_HIGH_S
 15

	)

138 
	#AR_PHY_CCA
 0x9864

	)

139 
	#AR_PHY_MINCCA_PWR
 0x0FF80000

	)

140 
	#AR_PHY_MINCCA_PWR_S
 19

	)

141 
	#AR_PHY_CCA_THRESH62
 0x0007F000

	)

142 
	#AR_PHY_CCA_THRESH62_S
 12

	)

143 
	#AR9280_PHY_MINCCA_PWR
 0x1FF00000

	)

144 
	#AR9280_PHY_MINCCA_PWR_S
 20

	)

145 
	#AR9280_PHY_CCA_THRESH62
 0x000FF000

	)

146 
	#AR9280_PHY_CCA_THRESH62_S
 12

	)

148 
	#AR_PHY_SFCORR_LOW
 0x986C

	)

149 
	#AR_PHY_SFCORR_LOW_USE_SELF_CORR_LOW
 0x00000001

	)

150 
	#AR_PHY_SFCORR_LOW_M2COUNT_THR_LOW
 0x00003F00

	)

151 
	#AR_PHY_SFCORR_LOW_M2COUNT_THR_LOW_S
 8

	)

152 
	#AR_PHY_SFCORR_LOW_M1_THRESH_LOW
 0x001FC000

	)

153 
	#AR_PHY_SFCORR_LOW_M1_THRESH_LOW_S
 14

	)

154 
	#AR_PHY_SFCORR_LOW_M2_THRESH_LOW
 0x0FE00000

	)

155 
	#AR_PHY_SFCORR_LOW_M2_THRESH_LOW_S
 21

	)

157 
	#AR_PHY_SFCORR
 0x9868

	)

158 
	#AR_PHY_SFCORR_M2COUNT_THR
 0x0000001F

	)

159 
	#AR_PHY_SFCORR_M2COUNT_THR_S
 0

	)

160 
	#AR_PHY_SFCORR_M1_THRESH
 0x00FE0000

	)

161 
	#AR_PHY_SFCORR_M1_THRESH_S
 17

	)

162 
	#AR_PHY_SFCORR_M2_THRESH
 0x7F000000

	)

163 
	#AR_PHY_SFCORR_M2_THRESH_S
 24

	)

165 
	#AR_PHY_SLEEP_CTR_CONTROL
 0x9870

	)

166 
	#AR_PHY_SLEEP_CTR_LIMIT
 0x9874

	)

167 
	#AR_PHY_SYNTH_CONTROL
 0x9874

	)

168 
	#AR_PHY_SLEEP_SCAL
 0x9878

	)

170 
	#AR_PHY_PLL_CTL
 0x987c

	)

171 
	#AR_PHY_PLL_CTL_40
 0xØ

	)

172 
	#AR_PHY_PLL_CTL_40_5413
 0x04

	)

173 
	#AR_PHY_PLL_CTL_44
 0xab

	)

174 
	#AR_PHY_PLL_CTL_44_2133
 0xeb

	)

175 
	#AR_PHY_PLL_CTL_40_2133
 0xó

	)

177 
	#AR_PHY_SPECTRAL_SCAN
 0x9910

	)

178 
	#AR_PHY_SPECTRAL_SCAN_ENABLE
 0x1

	)

179 
	#AR_PHY_SPECTRAL_SCAN_ENA
 0x00000001

	)

180 
	#AR_PHY_SPECTRAL_SCAN_ENA_S
 0

	)

181 
	#AR_PHY_SPECTRAL_SCAN_ACTIVE
 0x00000002

	)

182 
	#AR_PHY_SPECTRAL_SCAN_ACTIVE_S
 1

	)

183 
	#AR_PHY_SPECTRAL_SCAN_FFT_PERIOD
 0x000000F0

	)

184 
	#AR_PHY_SPECTRAL_SCAN_FFT_PERIOD_S
 4

	)

185 
	#AR_PHY_SPECTRAL_SCAN_PERIOD
 0x0000FF00

	)

186 
	#AR_PHY_SPECTRAL_SCAN_PERIOD_S
 8

	)

187 
	#AR_PHY_SPECTRAL_SCAN_COUNT
 0x00FF0000

	)

188 
	#AR_PHY_SPECTRAL_SCAN_COUNT_S
 16

	)

189 
	#AR_PHY_SPECTRAL_SCAN_SHORT_REPEAT
 0x01000000

	)

190 
	#AR_PHY_SPECTRAL_SCAN_SHORT_REPEAT_S
 24

	)

192 
	#AR_PHY_RX_DELAY
 0x9914

	)

193 
	#AR_PHY_SEARCH_START_DELAY
 0x9918

	)

194 
	#AR_PHY_RX_DELAY_DELAY
 0x00003FFF

	)

196 
	#AR_PHY_TIMING_CTRL4
(
_i
Ë(0x9920 + ((_iË<< 12))

	)

197 
	#AR_PHY_TIMING_CTRL4_IQCORR_Q_Q_COFF
 0x01F

	)

198 
	#AR_PHY_TIMING_CTRL4_IQCORR_Q_Q_COFF_S
 0

	)

199 
	#AR_PHY_TIMING_CTRL4_IQCORR_Q_I_COFF
 0x7E0

	)

200 
	#AR_PHY_TIMING_CTRL4_IQCORR_Q_I_COFF_S
 5

	)

201 
	#AR_PHY_TIMING_CTRL4_IQCORR_ENABLE
 0x800

	)

202 
	#AR_PHY_TIMING_CTRL4_IQCAL_LOG_COUNT_MAX
 0xF000

	)

203 
	#AR_PHY_TIMING_CTRL4_IQCAL_LOG_COUNT_MAX_S
 12

	)

204 
	#AR_PHY_TIMING_CTRL4_DO_CAL
 0x10000

	)

206 
	#AR_PHY_TIMING_CTRL4_ENABLE_SPUR_RSSI
 0x80000000

	)

207 
	#AR_PHY_TIMING_CTRL4_ENABLE_SPUR_FILTER
 0x40000000

	)

208 
	#AR_PHY_TIMING_CTRL4_ENABLE_CHAN_MASK
 0x20000000

	)

209 
	#AR_PHY_TIMING_CTRL4_ENABLE_PILOT_MASK
 0x10000000

	)

211 
	#AR_PHY_TIMING5
 0x9924

	)

212 
	#AR_PHY_TIMING5_CYCPWR_THR1
 0x000000FE

	)

213 
	#AR_PHY_TIMING5_CYCPWR_THR1_S
 1

	)

215 
	#AR_PHY_POWER_TX_RATE1
 0x9934

	)

216 
	#AR_PHY_POWER_TX_RATE2
 0x9938

	)

217 
	#AR_PHY_POWER_TX_RATE_MAX
 0x993c

	)

218 
	#AR_PHY_POWER_TX_RATE_MAX_TPC_ENABLE
 0x00000040

	)

220 
	#AR_PHY_FRAME_CTL
 0x9944

	)

221 
	#AR_PHY_FRAME_CTL_TX_CLIP
 0x00000038

	)

222 
	#AR_PHY_FRAME_CTL_TX_CLIP_S
 3

	)

224 
	#AR_PHY_TXPWRADJ
 0x994C

	)

225 
	#AR_PHY_TXPWRADJ_CCK_GAIN_DELTA
 0x00000FC0

	)

226 
	#AR_PHY_TXPWRADJ_CCK_GAIN_DELTA_S
 6

	)

227 
	#AR_PHY_TXPWRADJ_CCK_PCDAC_INDEX
 0x00FC0000

	)

228 
	#AR_PHY_TXPWRADJ_CCK_PCDAC_INDEX_S
 18

	)

230 
	#AR_PHY_RADAR_EXT
 0x9940

	)

231 
	#AR_PHY_RADAR_EXT_ENA
 0x00004000

	)

233 
	#AR_PHY_RADAR_0
 0x9954

	)

234 
	#AR_PHY_RADAR_0_ENA
 0x00000001

	)

235 
	#AR_PHY_RADAR_0_FFT_ENA
 0x80000000

	)

236 
	#AR_PHY_RADAR_0_INBAND
 0x0000003e

	)

237 
	#AR_PHY_RADAR_0_INBAND_S
 1

	)

238 
	#AR_PHY_RADAR_0_PRSSI
 0x00000FC0

	)

239 
	#AR_PHY_RADAR_0_PRSSI_S
 6

	)

240 
	#AR_PHY_RADAR_0_HEIGHT
 0x0003F000

	)

241 
	#AR_PHY_RADAR_0_HEIGHT_S
 12

	)

242 
	#AR_PHY_RADAR_0_RRSSI
 0x00FC0000

	)

243 
	#AR_PHY_RADAR_0_RRSSI_S
 18

	)

244 
	#AR_PHY_RADAR_0_FIRPWR
 0x7F000000

	)

245 
	#AR_PHY_RADAR_0_FIRPWR_S
 24

	)

247 
	#AR_PHY_RADAR_1
 0x9958

	)

248 
	#AR_PHY_RADAR_1_RELPWR_ENA
 0x00800000

	)

249 
	#AR_PHY_RADAR_1_USE_FIR128
 0x00400000

	)

250 
	#AR_PHY_RADAR_1_RELPWR_THRESH
 0x003F0000

	)

251 
	#AR_PHY_RADAR_1_RELPWR_THRESH_S
 16

	)

252 
	#AR_PHY_RADAR_1_BLOCK_CHECK
 0x00008000

	)

253 
	#AR_PHY_RADAR_1_MAX_RRSSI
 0x00004000

	)

254 
	#AR_PHY_RADAR_1_RELSTEP_CHECK
 0x00002000

	)

255 
	#AR_PHY_RADAR_1_RELSTEP_THRESH
 0x00001F00

	)

256 
	#AR_PHY_RADAR_1_RELSTEP_THRESH_S
 8

	)

257 
	#AR_PHY_RADAR_1_MAXLEN
 0x000000FF

	)

258 
	#AR_PHY_RADAR_1_MAXLEN_S
 0

	)

260 
	#AR_PHY_SWITCH_CHAIN_0
 0x9960

	)

261 
	#AR_PHY_SWITCH_COM
 0x9964

	)

263 
	#AR_PHY_SIGMA_DELTA
 0x996C

	)

264 
	#AR_PHY_SIGMA_DELTA_ADC_SEL
 0x00000003

	)

265 
	#AR_PHY_SIGMA_DELTA_ADC_SEL_S
 0

	)

266 
	#AR_PHY_SIGMA_DELTA_FILT2
 0x000000F8

	)

267 
	#AR_PHY_SIGMA_DELTA_FILT2_S
 3

	)

268 
	#AR_PHY_SIGMA_DELTA_FILT1
 0x00001F00

	)

269 
	#AR_PHY_SIGMA_DELTA_FILT1_S
 8

	)

270 
	#AR_PHY_SIGMA_DELTA_ADC_CLIP
 0x01FFE000

	)

271 
	#AR_PHY_SIGMA_DELTA_ADC_CLIP_S
 13

	)

273 
	#AR_PHY_RESTART
 0x9970

	)

274 
	#AR_PHY_RESTART_DIV_GC
 0x001C0000

	)

275 
	#AR_PHY_RESTART_DIV_GC_S
 18

	)

277 
	#AR_PHY_RFBUS_REQ
 0x997C

	)

278 
	#AR_PHY_RFBUS_REQ_EN
 0x00000001

	)

280 
	#AR_PHY_TIMING7
 0x9980

	)

281 
	#AR_PHY_TIMING8
 0x9984

	)

282 
	#AR_PHY_TIMING8_PILOT_MASK_2
 0x000FFFFF

	)

283 
	#AR_PHY_TIMING8_PILOT_MASK_2_S
 0

	)

285 
	#AR_PHY_BIN_MASK2_1
 0x9988

	)

286 
	#AR_PHY_BIN_MASK2_2
 0x998c

	)

287 
	#AR_PHY_BIN_MASK2_3
 0x9990

	)

288 
	#AR_PHY_BIN_MASK2_4
 0x9994

	)

290 
	#AR_PHY_BIN_MASK_1
 0x9900

	)

291 
	#AR_PHY_BIN_MASK_2
 0x9904

	)

292 
	#AR_PHY_BIN_MASK_3
 0x9908

	)

294 
	#AR_PHY_MASK_CTL
 0x990c

	)

296 
	#AR_PHY_BIN_MASK2_4_MASK_4
 0x00003FFF

	)

297 
	#AR_PHY_BIN_MASK2_4_MASK_4_S
 0

	)

299 
	#AR_PHY_TIMING9
 0x9998

	)

300 
	#AR_PHY_TIMING10
 0x999c

	)

301 
	#AR_PHY_TIMING10_PILOT_MASK_2
 0x000FFFFF

	)

302 
	#AR_PHY_TIMING10_PILOT_MASK_2_S
 0

	)

304 
	#AR_PHY_TIMING11
 0x99a0

	)

305 
	#AR_PHY_TIMING11_SPUR_DELTA_PHASE
 0x000FFFFF

	)

306 
	#AR_PHY_TIMING11_SPUR_DELTA_PHASE_S
 0

	)

307 
	#AR_PHY_TIMING11_USE_SPUR_IN_AGC
 0x40000000

	)

308 
	#AR_PHY_TIMING11_USE_SPUR_IN_SELFCOR
 0x80000000

	)

310 
	#AR_PHY_RX_CHAINMASK
 0x99a4

	)

311 
	#AR_PHY_NEW_ADC_DC_GAIN_CORR
(
_i
Ë(0x99b4 + ((_iË<< 12))

	)

312 
	#AR_PHY_NEW_ADC_GAIN_CORR_ENABLE
 0x40000000

	)

313 
	#AR_PHY_NEW_ADC_DC_OFFSET_CORR_ENABLE
 0x80000000

	)

315 
	#AR_PHY_MULTICHAIN_GAIN_CTL
 0x99ac

	)

316 
	#AR_PHY_9285_FAST_DIV_BIAS
 0x00007E00

	)

317 
	#AR_PHY_9285_FAST_DIV_BIAS_S
 9

	)

318 
	#AR_PHY_9285_ANT_DIV_CTL_ALL
 0x7f000000

	)

319 
	#AR_PHY_9285_ANT_DIV_CTL
 0x01000000

	)

320 
	#AR_PHY_9285_ANT_DIV_CTL_S
 24

	)

321 
	#AR_PHY_9285_ANT_DIV_ALT_LNACONF
 0x06000000

	)

322 
	#AR_PHY_9285_ANT_DIV_ALT_LNACONF_S
 25

	)

323 
	#AR_PHY_9285_ANT_DIV_MAIN_LNACONF
 0x18000000

	)

324 
	#AR_PHY_9285_ANT_DIV_MAIN_LNACONF_S
 27

	)

325 
	#AR_PHY_9285_ANT_DIV_ALT_GAINTB
 0x20000000

	)

326 
	#AR_PHY_9285_ANT_DIV_ALT_GAINTB_S
 29

	)

327 
	#AR_PHY_9285_ANT_DIV_MAIN_GAINTB
 0x40000000

	)

328 
	#AR_PHY_9285_ANT_DIV_MAIN_GAINTB_S
 30

	)

329 
	#AR_PHY_9285_ANT_DIV_GAINTB_0
 0

	)

330 
	#AR_PHY_9285_ANT_DIV_GAINTB_1
 1

	)

332 
	#ATH_BT_COEX_ANTDIV_CONTROL1_ENABLE
 0x0b

	)

333 
	#ATH_BT_COEX_ANTDIV_CONTROL2_ENABLE
 0x09

	)

334 
	#ATH_BT_COEX_ANTDIV_CONTROL1_FIXED_A
 0x04

	)

335 
	#ATH_BT_COEX_ANTDIV_CONTROL2_FIXED_A
 0x09

	)

336 
	#ATH_BT_COEX_ANT_DIV_SWITCH_COM
 0x66666666

	)

338 
	#AR_PHY_EXT_CCA0
 0x99b8

	)

339 
	#AR_PHY_EXT_CCA0_THRESH62
 0x000000FF

	)

340 
	#AR_PHY_EXT_CCA0_THRESH62_S
 0

	)

342 
	#AR_PHY_EXT_CCA
 0x99bc

	)

343 
	#AR_PHY_EXT_CCA_CYCPWR_THR1
 0x0000FE00

	)

344 
	#AR_PHY_EXT_CCA_CYCPWR_THR1_S
 9

	)

345 
	#AR_PHY_EXT_CCA_THRESH62
 0x007F0000

	)

346 
	#AR_PHY_EXT_CCA_THRESH62_S
 16

	)

347 
	#AR_PHY_EXT_TIMING5_CYCPWR_THR1
 0x0000FE00L

	)

348 
	#AR_PHY_EXT_TIMING5_CYCPWR_THR1_S
 9

	)

350 
	#AR_PHY_EXT_MINCCA_PWR
 0xFF800000

	)

351 
	#AR_PHY_EXT_MINCCA_PWR_S
 23

	)

352 
	#AR9280_PHY_EXT_MINCCA_PWR
 0x01FF0000

	)

353 
	#AR9280_PHY_EXT_MINCCA_PWR_S
 16

	)

355 
	#AR_PHY_SFCORR_EXT
 0x99c0

	)

356 
	#AR_PHY_SFCORR_EXT_M1_THRESH
 0x0000007F

	)

357 
	#AR_PHY_SFCORR_EXT_M1_THRESH_S
 0

	)

358 
	#AR_PHY_SFCORR_EXT_M2_THRESH
 0x00003F80

	)

359 
	#AR_PHY_SFCORR_EXT_M2_THRESH_S
 7

	)

360 
	#AR_PHY_SFCORR_EXT_M1_THRESH_LOW
 0x001FC000

	)

361 
	#AR_PHY_SFCORR_EXT_M1_THRESH_LOW_S
 14

	)

362 
	#AR_PHY_SFCORR_EXT_M2_THRESH_LOW
 0x0FE00000

	)

363 
	#AR_PHY_SFCORR_EXT_M2_THRESH_LOW_S
 21

	)

364 
	#AR_PHY_SFCORR_SPUR_SUBCHNL_SD_S
 28

	)

366 
	#AR_PHY_HALFGI
 0x99D0

	)

367 
	#AR_PHY_HALFGI_DSC_MAN
 0x0007FFF0

	)

368 
	#AR_PHY_HALFGI_DSC_MAN_S
 4

	)

369 
	#AR_PHY_HALFGI_DSC_EXP
 0x0000000F

	)

370 
	#AR_PHY_HALFGI_DSC_EXP_S
 0

	)

372 
	#AR_PHY_CHAN_INFO_MEMORY
 0x99DC

	)

373 
	#AR_PHY_CHAN_INFO_MEMORY_CAPTURE_MASK
 0x0001

	)

375 
	#AR_PHY_HEAVY_CLIP_ENABLE
 0x99E0

	)

377 
	#AR_PHY_HEAVY_CLIP_FACTOR_RIFS
 0x99EC

	)

378 
	#AR_PHY_RIFS_INIT_DELAY
 0x03ff0000

	)

380 
	#AR_PHY_M_SLEEP
 0x99f0

	)

381 
	#AR_PHY_REFCLKDLY
 0x99f4

	)

382 
	#AR_PHY_REFCLKPD
 0x99f8

	)

384 
	#AR_PHY_CALMODE
 0x99f0

	)

386 
	#AR_PHY_CALMODE_IQ
 0x00000000

	)

387 
	#AR_PHY_CALMODE_ADC_GAIN
 0x00000001

	)

388 
	#AR_PHY_CALMODE_ADC_DC_PER
 0x00000002

	)

389 
	#AR_PHY_CALMODE_ADC_DC_INIT
 0x00000003

	)

391 
	#AR_PHY_CAL_MEAS_0
(
_i
Ë(0x9c10 + ((_iË<< 12))

	)

392 
	#AR_PHY_CAL_MEAS_1
(
_i
Ë(0x9c14 + ((_iË<< 12))

	)

393 
	#AR_PHY_CAL_MEAS_2
(
_i
Ë(0x9c18 + ((_iË<< 12))

	)

394 
	#AR_PHY_CAL_MEAS_3
(
_i
Ë(0x9c1¯+ ((_iË<< 12))

	)

396 
	#AR_PHY_CURRENT_RSSI
 0x9c1c

	)

397 
	#AR9280_PHY_CURRENT_RSSI
 0x9c3c

	)

399 
	#AR_PHY_RFBUS_GRANT
 0x9C20

	)

400 
	#AR_PHY_RFBUS_GRANT_EN
 0x00000001

	)

402 
	#AR_PHY_TST_ADC
 0x9C24

	)

404 
	#AR_PHY_CHAN_INFO_GAIN_DIFF
 0x9CF4

	)

405 
	#AR_PHY_CHAN_INFO_GAIN_DIFF_UPPER_LIMIT
 320

	)

407 
	#AR_PHY_CHAN_INFO_GAIN
 0x9CFC

	)

409 
	#AR_PHY_MODE
 0xA200

	)

410 
	#AR_PHY_MODE_ASYNCFIFO
 0x80

	)

411 
	#AR_PHY_MODE_AR2133
 0x08

	)

412 
	#AR_PHY_MODE_AR5111
 0x00

	)

413 
	#AR_PHY_MODE_AR5112
 0x08

	)

414 
	#AR_PHY_MODE_DYNAMIC
 0x04

	)

415 
	#AR_PHY_MODE_RF2GHZ
 0x02

	)

416 
	#AR_PHY_MODE_RF5GHZ
 0x00

	)

417 
	#AR_PHY_MODE_CCK
 0x01

	)

418 
	#AR_PHY_MODE_OFDM
 0x00

	)

419 
	#AR_PHY_MODE_DYN_CCK_DISABLE
 0x100

	)

421 
	#AR_PHY_CCK_TX_CTRL
 0xA204

	)

422 
	#AR_PHY_CCK_TX_CTRL_JAPAN
 0x00000010

	)

423 
	#AR_PHY_CCK_TX_CTRL_TX_DAC_SCALE_CCK
 0x0000000C

	)

424 
	#AR_PHY_CCK_TX_CTRL_TX_DAC_SCALE_CCK_S
 2

	)

426 
	#AR_PHY_CCK_DETECT
 0xA208

	)

427 
	#AR_PHY_CCK_DETECT_WEAK_SIG_THR_CCK
 0x0000003F

	)

428 
	#AR_PHY_CCK_DETECT_WEAK_SIG_THR_CCK_S
 0

	)

430 
	#AR_PHY_CCK_DETECT_ANT_SWITCH_TIME
 0x00001FC0

	)

431 
	#AR_PHY_CCK_DETECT_ANT_SWITCH_TIME_S
 6

	)

432 
	#AR_PHY_CCK_DETECT_BB_ENABLE_ANT_FAST_DIV
 0x2000

	)

433 
	#AR_PHY_CCK_DETECT_BB_ENABLE_ANT_FAST_DIV_S
 13

	)

435 
	#AR_PHY_GAIN_2GHZ
 0xA20C

	)

436 
	#AR_PHY_GAIN_2GHZ_RXTX_MARGIN
 0x00FC0000

	)

437 
	#AR_PHY_GAIN_2GHZ_RXTX_MARGIN_S
 18

	)

438 
	#AR_PHY_GAIN_2GHZ_BSW_MARGIN
 0x00003C00

	)

439 
	#AR_PHY_GAIN_2GHZ_BSW_MARGIN_S
 10

	)

440 
	#AR_PHY_GAIN_2GHZ_BSW_ATTEN
 0x0000001F

	)

441 
	#AR_PHY_GAIN_2GHZ_BSW_ATTEN_S
 0

	)

443 
	#AR_PHY_GAIN_2GHZ_XATTEN2_MARGIN
 0x003E0000

	)

444 
	#AR_PHY_GAIN_2GHZ_XATTEN2_MARGIN_S
 17

	)

445 
	#AR_PHY_GAIN_2GHZ_XATTEN1_MARGIN
 0x0001F000

	)

446 
	#AR_PHY_GAIN_2GHZ_XATTEN1_MARGIN_S
 12

	)

447 
	#AR_PHY_GAIN_2GHZ_XATTEN2_DB
 0x00000FC0

	)

448 
	#AR_PHY_GAIN_2GHZ_XATTEN2_DB_S
 6

	)

449 
	#AR_PHY_GAIN_2GHZ_XATTEN1_DB
 0x0000003F

	)

450 
	#AR_PHY_GAIN_2GHZ_XATTEN1_DB_S
 0

	)

452 
	#AR_PHY_CCK_RXCTRL4
 0xA21C

	)

453 
	#AR_PHY_CCK_RXCTRL4_FREQ_EST_SHORT
 0x01F80000

	)

454 
	#AR_PHY_CCK_RXCTRL4_FREQ_EST_SHORT_S
 19

	)

456 
	#AR_PHY_DAG_CTRLCCK
 0xA228

	)

457 
	#AR_PHY_DAG_CTRLCCK_EN_RSSI_THR
 0x00000200

	)

458 
	#AR_PHY_DAG_CTRLCCK_RSSI_THR
 0x0001FC00

	)

459 
	#AR_PHY_DAG_CTRLCCK_RSSI_THR_S
 10

	)

461 
	#AR_PHY_FORCE_CLKEN_CCK
 0xA22C

	)

462 
	#AR_PHY_FORCE_CLKEN_CCK_MRC_MUX
 0x00000040

	)

464 
	#AR_PHY_POWER_TX_RATE3
 0xA234

	)

465 
	#AR_PHY_POWER_TX_RATE4
 0xA238

	)

467 
	#AR_PHY_SCRM_SEQ_XR
 0xA23C

	)

468 
	#AR_PHY_HEADER_DETECT_XR
 0xA240

	)

469 
	#AR_PHY_CHIRP_DETECTED_XR
 0xA244

	)

470 
	#AR_PHY_BLUETOOTH
 0xA254

	)

472 
	#AR_PHY_TPCRG1
 0xA258

	)

473 
	#AR_PHY_TPCRG1_NUM_PD_GAIN
 0x0000c000

	)

474 
	#AR_PHY_TPCRG1_NUM_PD_GAIN_S
 14

	)

476 
	#AR_PHY_TPCRG1_PD_GAIN_1
 0x00030000

	)

477 
	#AR_PHY_TPCRG1_PD_GAIN_1_S
 16

	)

478 
	#AR_PHY_TPCRG1_PD_GAIN_2
 0x000C0000

	)

479 
	#AR_PHY_TPCRG1_PD_GAIN_2_S
 18

	)

480 
	#AR_PHY_TPCRG1_PD_GAIN_3
 0x00300000

	)

481 
	#AR_PHY_TPCRG1_PD_GAIN_3_S
 20

	)

483 
	#AR_PHY_TPCRG1_PD_CAL_ENABLE
 0x00400000

	)

484 
	#AR_PHY_TPCRG1_PD_CAL_ENABLE_S
 22

	)

486 
	#AR_PHY_TX_PWRCTRL4
 0xa264

	)

487 
	#AR_PHY_TX_PWRCTRL_PD_AVG_VALID
 0x00000001

	)

488 
	#AR_PHY_TX_PWRCTRL_PD_AVG_VALID_S
 0

	)

489 
	#AR_PHY_TX_PWRCTRL_PD_AVG_OUT
 0x000001FE

	)

490 
	#AR_PHY_TX_PWRCTRL_PD_AVG_OUT_S
 1

	)

492 
	#AR_PHY_TX_PWRCTRL6_0
 0xa270

	)

493 
	#AR_PHY_TX_PWRCTRL6_1
 0xb270

	)

494 
	#AR_PHY_TX_PWRCTRL_ERR_EST_MODE
 0x03000000

	)

495 
	#AR_PHY_TX_PWRCTRL_ERR_EST_MODE_S
 24

	)

497 
	#AR_PHY_TX_PWRCTRL7
 0xa274

	)

498 
	#AR_PHY_TX_PWRCTRL_INIT_TX_GAIN
 0x01F80000

	)

499 
	#AR_PHY_TX_PWRCTRL_INIT_TX_GAIN_S
 19

	)

501 
	#AR_PHY_TX_PWRCTRL8
 0xa278

	)

503 
	#AR_PHY_TX_PWRCTRL9
 0xa27C

	)

505 
	#AR_PHY_TX_PWRCTRL10
 0xa394

	)

506 
	#AR_PHY_TX_DESIRED_SCALE_CCK
 0x00007C00

	)

507 
	#AR_PHY_TX_DESIRED_SCALE_CCK_S
 10

	)

508 
	#AR_PHY_TX_PWRCTRL9_RES_DC_REMOVAL
 0x80000000

	)

509 
	#AR_PHY_TX_PWRCTRL9_RES_DC_REMOVAL_S
 31

	)

511 
	#AR_PHY_TX_GAIN_TBL1
 0xa300

	)

512 
	#AR_PHY_TX_GAIN
 0x0007F000

	)

513 
	#AR_PHY_TX_GAIN_S
 12

	)

515 
	#AR_PHY_CH0_TX_PWRCTRL11
 0xa398

	)

516 
	#AR_PHY_CH1_TX_PWRCTRL11
 0xb398

	)

517 
	#AR_PHY_CH0_TX_PWRCTRL12
 0xa3dc

	)

518 
	#AR_PHY_CH0_TX_PWRCTRL13
 0xa3e0

	)

519 
	#AR_PHY_TX_PWRCTRL_OLPC_TEMP_COMP
 0x0000FC00

	)

520 
	#AR_PHY_TX_PWRCTRL_OLPC_TEMP_COMP_S
 10

	)

522 
	#AR_PHY_VIT_MASK2_M_46_61
 0xa3a0

	)

523 
	#AR_PHY_MASK2_M_31_45
 0xa3a4

	)

524 
	#AR_PHY_MASK2_M_16_30
 0xa3a8

	)

525 
	#AR_PHY_MASK2_M_00_15
 0xa3ac

	)

526 
	#AR_PHY_MASK2_P_15_01
 0xa3b8

	)

527 
	#AR_PHY_MASK2_P_30_16
 0xa3bc

	)

528 
	#AR_PHY_MASK2_P_45_31
 0xa3c0

	)

529 
	#AR_PHY_MASK2_P_61_45
 0xa3c4

	)

530 
	#AR_PHY_SPUR_REG
 0x994c

	)

532 
	#AR_PHY_SPUR_REG_MASK_RATE_CNTL
 (0xFF << 18)

	)

533 
	#AR_PHY_SPUR_REG_MASK_RATE_CNTL_S
 18

	)

535 
	#AR_PHY_SPUR_REG_ENABLE_MASK_PPM
 0x20000

	)

536 
	#AR_PHY_SPUR_REG_MASK_RATE_SELECT
 (0xFF << 9)

	)

537 
	#AR_PHY_SPUR_REG_MASK_RATE_SELECT_S
 9

	)

538 
	#AR_PHY_SPUR_REG_ENABLE_VIT_SPUR_RSSI
 0x100

	)

539 
	#AR_PHY_SPUR_REG_SPUR_RSSI_THRESH
 0x7F

	)

540 
	#AR_PHY_SPUR_REG_SPUR_RSSI_THRESH_S
 0

	)

542 
	#AR_PHY_PILOT_MASK_01_30
 0xa3b0

	)

543 
	#AR_PHY_PILOT_MASK_31_60
 0xa3b4

	)

545 
	#AR_PHY_CHANNEL_MASK_01_30
 0x99d4

	)

546 
	#AR_PHY_CHANNEL_MASK_31_60
 0x99d8

	)

548 
	#AR_PHY_ANALOG_SWAP
 0xa268

	)

549 
	#AR_PHY_SWAP_ALT_CHAIN
 0x00000040

	)

551 
	#AR_PHY_TPCRG5
 0xA26C

	)

552 
	#AR_PHY_TPCRG5_PD_GAIN_OVERLAP
 0x0000000F

	)

553 
	#AR_PHY_TPCRG5_PD_GAIN_OVERLAP_S
 0

	)

554 
	#AR_PHY_TPCRG5_PD_GAIN_BOUNDARY_1
 0x000003F0

	)

555 
	#AR_PHY_TPCRG5_PD_GAIN_BOUNDARY_1_S
 4

	)

556 
	#AR_PHY_TPCRG5_PD_GAIN_BOUNDARY_2
 0x0000FC00

	)

557 
	#AR_PHY_TPCRG5_PD_GAIN_BOUNDARY_2_S
 10

	)

558 
	#AR_PHY_TPCRG5_PD_GAIN_BOUNDARY_3
 0x003F0000

	)

559 
	#AR_PHY_TPCRG5_PD_GAIN_BOUNDARY_3_S
 16

	)

560 
	#AR_PHY_TPCRG5_PD_GAIN_BOUNDARY_4
 0x0FC00000

	)

561 
	#AR_PHY_TPCRG5_PD_GAIN_BOUNDARY_4_S
 22

	)

564 
	#AR_PHY_CL_CAL_CTL
 0xA358

	)

565 
	#AR_PHY_CL_CAL_ENABLE
 0x00000002

	)

566 
	#AR_PHY_PARALLEL_CAL_ENABLE
 0x00000001

	)

568 
	#AR_PHY_POWER_TX_RATE5
 0xA38C

	)

569 
	#AR_PHY_POWER_TX_RATE6
 0xA390

	)

571 
	#AR_PHY_CAL_CHAINMASK
 0xA39C

	)

573 
	#AR_PHY_POWER_TX_SUB
 0xA3C8

	)

574 
	#AR_PHY_POWER_TX_RATE7
 0xA3CC

	)

575 
	#AR_PHY_POWER_TX_RATE8
 0xA3D0

	)

576 
	#AR_PHY_POWER_TX_RATE9
 0xA3D4

	)

578 
	#AR_PHY_XPA_CFG
 0xA3D8

	)

579 
	#AR_PHY_FORCE_XPA_CFG
 0x000000001

	)

580 
	#AR_PHY_FORCE_XPA_CFG_S
 0

	)

582 
	#AR_PHY_CH1_CCA
 0xa864

	)

583 
	#AR_PHY_CH1_MINCCA_PWR
 0x0FF80000

	)

584 
	#AR_PHY_CH1_MINCCA_PWR_S
 19

	)

585 
	#AR9280_PHY_CH1_MINCCA_PWR
 0x1FF00000

	)

586 
	#AR9280_PHY_CH1_MINCCA_PWR_S
 20

	)

588 
	#AR_PHY_CH2_CCA
 0xb864

	)

589 
	#AR_PHY_CH2_MINCCA_PWR
 0x0FF80000

	)

590 
	#AR_PHY_CH2_MINCCA_PWR_S
 19

	)

592 
	#AR_PHY_CH1_EXT_CCA
 0xa9bc

	)

593 
	#AR_PHY_CH1_EXT_MINCCA_PWR
 0xFF800000

	)

594 
	#AR_PHY_CH1_EXT_MINCCA_PWR_S
 23

	)

595 
	#AR9280_PHY_CH1_EXT_MINCCA_PWR
 0x01FF0000

	)

596 
	#AR9280_PHY_CH1_EXT_MINCCA_PWR_S
 16

	)

598 
	#AR_PHY_CH2_EXT_CCA
 0xb9bc

	)

599 
	#AR_PHY_CH2_EXT_MINCCA_PWR
 0xFF800000

	)

600 
	#AR_PHY_CH2_EXT_MINCCA_PWR_S
 23

	)

602 
	#AR_PHY_CCA_NOM_VAL_5416_2GHZ
 -90

	)

603 
	#AR_PHY_CCA_NOM_VAL_5416_5GHZ
 -100

	)

604 
	#AR_PHY_CCA_MIN_GOOD_VAL_5416_2GHZ
 -100

	)

605 
	#AR_PHY_CCA_MIN_GOOD_VAL_5416_5GHZ
 -110

	)

606 
	#AR_PHY_CCA_MAX_GOOD_VAL_5416_2GHZ
 -80

	)

607 
	#AR_PHY_CCA_MAX_GOOD_VAL_5416_5GHZ
 -90

	)

609 
	#AR_PHY_CCA_NOM_VAL_9280_2GHZ
 -112

	)

610 
	#AR_PHY_CCA_NOM_VAL_9280_5GHZ
 -112

	)

611 
	#AR_PHY_CCA_MIN_GOOD_VAL_9280_2GHZ
 -127

	)

612 
	#AR_PHY_CCA_MIN_GOOD_VAL_9280_5GHZ
 -122

	)

613 
	#AR_PHY_CCA_MAX_GOOD_VAL_9280_2GHZ
 -97

	)

614 
	#AR_PHY_CCA_MAX_GOOD_VAL_9280_5GHZ
 -102

	)

616 
	#AR_PHY_CCA_NOM_VAL_9285_2GHZ
 -118

	)

617 
	#AR_PHY_CCA_MIN_GOOD_VAL_9285_2GHZ
 -127

	)

618 
	#AR_PHY_CCA_MAX_GOOD_VAL_9285_2GHZ
 -108

	)

620 
	#AR_PHY_CCA_NOM_VAL_9271_2GHZ
 -118

	)

621 
	#AR_PHY_CCA_MIN_GOOD_VAL_9271_2GHZ
 -127

	)

622 
	#AR_PHY_CCA_MAX_GOOD_VAL_9271_2GHZ
 -116

	)

624 
	#AR_PHY_CCA_NOM_VAL_9287_2GHZ
 -120

	)

625 
	#AR_PHY_CCA_MIN_GOOD_VAL_9287_2GHZ
 -127

	)

626 
	#AR_PHY_CCA_MAX_GOOD_VAL_9287_2GHZ
 -110

	)

	@ar9003_2p2_initvals.h

18 #i‚de‡
INITVALS_9003_2P2_H


19 
	#INITVALS_9003_2P2_H


	)

23 c⁄° 
u32
 
	g¨9300_2p2_ødio_po°ambÀ
[][5] = {

36 c⁄° 
u32
 
	g¨9300Modes_lowe°_ob_db_tx_gaö_èbÀ_2p2
[][5] = {

142 c⁄° 
u32
 
	g¨9300Modes_Á°_˛ock_2p2
[][3] = {

155 c⁄° 
u32
 
	g¨9300_2p2_ødio_c‹e
[][2] = {

299 c⁄° 
u32
 
	g¨9300_2p2_mac_po°ambÀ
[][5] = {

311 c⁄° 
u32
 
	g¨9300_2p2_soc_po°ambÀ
[][5] = {

316 c⁄° 
u32
 
	g¨9300_2p2_ba£b™d_po°ambÀ
[][5] = {

372 c⁄° 
u32
 
	g¨9300_2p2_ba£b™d_c‹e
[][2] = {

535 c⁄° 
u32
 
	g¨9300Modes_high_powî_tx_gaö_èbÀ_2p2
[][5] = {

641 c⁄° 
u32
 
	g¨9300Modes_high_ob_db_tx_gaö_èbÀ_2p2
[][5] = {

747 c⁄° 
u32
 
	g¨9300Modes_mixed_ob_db_tx_gaö_èbÀ_2p2
[][5] = {

853 c⁄° 
u32
 
	g¨9300Modes_ty≥5_tx_gaö_èbÀ_2p2
[][5] = {

927 c⁄° 
u32
 
	g¨9300Comm⁄_rx_gaö_èbÀ_2p2
[][2] = {

1187 c⁄° 
u32
 
	g¨9300Modes_low_ob_db_tx_gaö_èbÀ_2p2
[][5] = {

1293 c⁄° 
u32
 
	g¨9300_2p2_mac_c‹e
[][2] = {

1450 c⁄° 
u32
 
	g¨9300Comm⁄_wo_x a_rx_gaö_èbÀ_2p2
[][2] = {

1710 c⁄° 
u32
 
	g¨9300_2p2_soc_¥ómbÀ
[][2] = {

1720 c⁄° 
u32
 
	g¨9300PcõPhy_∂l_⁄_˛kªq_dißbÀ_L1_2p2
[][2] = {

1727 c⁄° 
u32
 
	g¨9300PcõPhy_˛kªq_íabÀ_L1_2p2
[][2] = {

1734 c⁄° 
u32
 
	g¨9300PcõPhy_˛kªq_dißbÀ_L1_2p2
[][2] = {

1741 c⁄° 
u32
 
	g¨9300_2p2_ba£b™d_c‹e_txfú_c€ff_j≠™_2484
[][2] = {

1748 c⁄° 
u32
 
	g¨9300_2p2_ba£b™d_po°ambÀ_dfs_ch™√l
[][3] = {

	@ar9003_buffalo_initvals.h

17 #i‚de‡
INITVALS_9003_BUFFALO_H


18 
	#INITVALS_9003_BUFFALO_H


	)

20 c⁄° 
u32
 
	g¨9300Modes_high_powî_tx_gaö_èbÀ_bufÁlo
[][5] = {

	@ar9003_calib.c

17 
	~"hw.h
"

18 
	~"hw-›s.h
"

19 
	~"¨9003_phy.h
"

20 
	~"¨9003_πt.h
"

21 
	~"¨9003_mci.h
"

23 
	#MAX_MEASUREMENT
 
MAX_IQCAL_MEASUREMENT


	)

24 
	#MAX_MAG_DELTA
 11

	)

25 
	#MAX_PHS_DELTA
 10

	)

26 
	#MAXIQCAL
 3

	)

28 
	sc€ff
 {

29 
	mmag_c€ff
[
AR9300_MAX_CHAINS
][
MAX_MEASUREMENT
][
MAXIQCAL
];

30 
	mphs_c€ff
[
AR9300_MAX_CHAINS
][
MAX_MEASUREMENT
][
MAXIQCAL
];

31 
	miqc_c€ff
[2];

34 
	e¨9003_ˇl_ty≥s
 {

35 
	mIQ_MISMATCH_CAL
 = 
BIT
(0),

38 
	$¨9003_hw_£tup_ˇlibøti⁄
(
©h_hw
 *
ah
,

39 
©h9k_ˇl_li°
 *
cuºCÆ
)

41 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

44 
cuºCÆ
->
ˇlD©a
->
ˇlTy≥
) {

45 
IQ_MISMATCH_CAL
:

50 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TIMING4
,

51 
AR_PHY_TIMING4_IQCAL_LOG_COUNT_MAX
,

52 
cuºCÆ
->
ˇlD©a
->
ˇlCou¡Max
);

53 
	`REG_WRITE
(
ah
, 
AR_PHY_CALMODE
, 
AR_PHY_CALMODE_IQ
);

55 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

59 
	`REG_SET_BIT
(
ah
, 
AR_PHY_TIMING4
, 
AR_PHY_TIMING4_DO_CAL
);

62 
	`©h_îr
(
comm⁄
, "Invalid calibrationÅype\n");

65 
	}
}

72 
boﬁ
 
	$¨9003_hw_≥r_ˇlibøti⁄
(
©h_hw
 *
ah
,

73 
©h9k_ch™√l
 *
ich™
,

74 
u8
 
rxchaömask
,

75 
©h9k_ˇl_li°
 *
cuºCÆ
)

77 
©h9k_hw_ˇl_d©a
 *
ˇld©a
 = 
ah
->caldata;

79 
boﬁ
 
isˇld⁄e
 = 
Ál£
;

82 i‡(
cuºCÆ
->
ˇlSèã
 =
CAL_RUNNING
) {

84 i‡(!(
	`REG_READ
(
ah
, 
AR_PHY_TIMING4
Ë& 
AR_PHY_TIMING4_DO_CAL
)) {

88 
cuºCÆ
->
ˇlD©a
->
	`ˇlCﬁÀ˘
(
ah
);

89 
ah
->
ˇl_ßm∂es
++;

91 i‡(
ah
->
ˇl_ßm∂es
 >=

92 
cuºCÆ
->
ˇlD©a
->
ˇlNumSam∂es
) {

93 
i
, 
numChaös
 = 0;

94 
i
 = 0; i < 
AR9300_MAX_CHAINS
; i++) {

95 i‡(
rxchaömask
 & (1 << 
i
))

96 
numChaös
++;

102 
cuºCÆ
->
ˇlD©a
->
	`ˇlPo°Proc
(
ah
, 
numChaös
);

105 
ˇld©a
->
CÆVÆid
 |
cuºCÆ
->
ˇlD©a
->
ˇlTy≥
;

106 
cuºCÆ
->
ˇlSèã
 = 
CAL_DONE
;

107 
isˇld⁄e
 = 
åue
;

113 
	`¨9003_hw_£tup_ˇlibøti⁄
(
ah
, 
cuºCÆ
);

116 } i‡(!(
ˇld©a
->
CÆVÆid
 & 
cuºCÆ
->
ˇlD©a
->
ˇlTy≥
)) {

118 
	`©h9k_hw_ª£t_ˇlibøti⁄
(
ah
, 
cuºCÆ
);

121  
isˇld⁄e
;

122 
	}
}

124 
	$¨9003_hw_ˇlibøã
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
,

125 
u8
 
rxchaömask
, 
boﬁ
 
l⁄gˇl
)

127 
boﬁ
 
isˇld⁄e
 = 
åue
;

128 
©h9k_ˇl_li°
 *
cuºCÆ
 = 
ah
->
ˇl_li°_cuº
;

129 
ªt
;

140 i‡(
cuºCÆ
 &&

141 (
cuºCÆ
->
ˇlSèã
 =
CAL_RUNNING
 ||

142 
cuºCÆ
->
ˇlSèã
 =
CAL_WAITING
)) {

143 
isˇld⁄e
 = 
	`¨9003_hw_≥r_ˇlibøti⁄
(
ah
, 
ch™
,

144 
rxchaömask
, 
cuºCÆ
);

145 i‡(
isˇld⁄e
) {

146 
ah
->
ˇl_li°_cuº
 = 
cuºCÆ
 = cuºCÆ->
ˇlNext
;

148 i‡(
cuºCÆ
->
ˇlSèã
 =
CAL_WAITING
) {

149 
isˇld⁄e
 = 
Ál£
;

150 
	`©h9k_hw_ª£t_ˇlibøti⁄
(
ah
, 
cuºCÆ
);

159 i‡(
l⁄gˇl
 && 
	`©h9k_hw_gënf
(
ah
, 
ch™
)) {

165 
ªt
 = 
	`©h9k_hw_lﬂdnf
(
ah
,áh->
curch™
);

166 i‡(
ªt
 < 0)

167  
ªt
;

170 
	`©h9k_hw_°¨t_nfˇl
(
ah
, 
Ál£
);

173  
isˇld⁄e
;

174 
	}
}

176 
	$¨9003_hw_iqˇl_cﬁÀ˘
(
©h_hw
 *
ah
)

178 
i
;

181 
i
 = 0; i < 
AR5416_MAX_CHAINS
; i++) {

182 i‡(
ah
->
txchaömask
 & 
	`BIT
(
i
)) {

183 
ah
->
tŸÆPowîMósI
[
i
] +=

184 
	`REG_READ
(
ah
, 
	`AR_PHY_CAL_MEAS_0
(
i
));

185 
ah
->
tŸÆPowîMósQ
[
i
] +=

186 
	`REG_READ
(
ah
, 
	`AR_PHY_CAL_MEAS_1
(
i
));

187 
ah
->
tŸÆIqC‹rMós
[
i
] +=

188 (
öt32_t
Ë
	`REG_READ
(
ah
, 
	`AR_PHY_CAL_MEAS_2
(
i
));

189 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
CALIBRATE
,

191 
ah
->
ˇl_ßm∂es
, 
i
,áh->
tŸÆPowîMósI
[i],

192 
ah
->
tŸÆPowîMósQ
[
i
],

193 
ah
->
tŸÆIqC‹rMós
[
i
]);

196 
	}
}

198 
	$¨9003_hw_iqˇlibøã
(
©h_hw
 *
ah
, 
u8
 
numChaös
)

200 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

201 
u32
 
powîMósQ
, 
powîMósI
, 
iqC‹rMós
;

202 
u32
 
qCoffDíom
, 
iCoffDíom
;

203 
öt32_t
 
qCoff
, 
iCoff
;

204 
iqC‹rNeg
, 
i
;

205 c⁄° 
u_öt32_t
 
off£t_¨øy
[3] = {

206 
AR_PHY_RX_IQCAL_CORR_B0
,

207 
AR_PHY_RX_IQCAL_CORR_B1
,

208 
AR_PHY_RX_IQCAL_CORR_B2
,

211 
i
 = 0; i < 
numChaös
; i++) {

212 
powîMósI
 = 
ah
->
tŸÆPowîMósI
[
i
];

213 
powîMósQ
 = 
ah
->
tŸÆPowîMósQ
[
i
];

214 
iqC‹rMós
 = 
ah
->
tŸÆIqC‹rMós
[
i
];

216 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

217 "Sèπög IQ CÆánd C‹ª˘i⁄ f‹ Chaö %d\n", 
i
);

219 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

221 
i
, 
ah
->
tŸÆIqC‹rMós
[i]);

223 
iqC‹rNeg
 = 0;

225 i‡(
iqC‹rMós
 > 0x80000000) {

226 
iqC‹rMós
 = (0xffffffff - iqCorrMeas) + 1;

227 
iqC‹rNeg
 = 1;

230 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "Chn %dÖwr_meas_i = 0x%08x\n",

231 
i
, 
powîMósI
);

232 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "Chn %dÖwr_meas_q = 0x%08x\n",

233 
i
, 
powîMósQ
);

234 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "iqC‹rNeg i†0x%08x\n", 
iqC‹rNeg
);

236 
iCoffDíom
 = (
powîMósI
 / 2 + 
powîMósQ
 / 2) / 256;

237 
qCoffDíom
 = 
powîMósQ
 / 64;

239 i‡((
iCoffDíom
 !0Ë&& (
qCoffDíom
 != 0)) {

240 
iCoff
 = 
iqC‹rMós
 / 
iCoffDíom
;

241 
qCoff
 = 
powîMósI
 / 
qCoffDíom
 - 64;

242 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "Chn %d iCoff = 0x%08x\n",

243 
i
, 
iCoff
);

244 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "Chn %d qCoff = 0x%08x\n",

245 
i
, 
qCoff
);

248 i‡(
iCoff
 >= 63)

249 
iCoff
 = 63;

250 i‡(
iCoff
 <= -63)

251 
iCoff
 = -63;

254 i‡(
iqC‹rNeg
 == 0x0)

255 
iCoff
 = -iCoff;

258 i‡(
qCoff
 >= 63)

259 
qCoff
 = 63;

260 i‡(
qCoff
 <= -63)

261 
qCoff
 = -63;

263 
iCoff
 = iCoff & 0x7f;

264 
qCoff
 = qCoff & 0x7f;

266 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

268 
i
, 
iCoff
, 
qCoff
);

269 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

271 
off£t_¨øy
[
i
],

272 
	`REG_READ
(
ah
, 
off£t_¨øy
[
i
]));

274 i‡(
	`AR_SREV_9565
(
ah
) &&

275 (
iCoff
 =63 || 
qCoff
 == 63 ||

276 
iCoff
 =-63 || 
qCoff
 == -63))

279 
	`REG_RMW_FIELD
(
ah
, 
off£t_¨øy
[
i
],

280 
AR_PHY_RX_IQCAL_CORR_IQCORR_Q_I_COFF
,

281 
iCoff
);

282 
	`REG_RMW_FIELD
(
ah
, 
off£t_¨øy
[
i
],

283 
AR_PHY_RX_IQCAL_CORR_IQCORR_Q_Q_COFF
,

284 
qCoff
);

285 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

287 
off£t_¨øy
[
i
],

288 
AR_PHY_RX_IQCAL_CORR_IQCORR_Q_I_COFF
,

289 
	`REG_READ
(
ah
, 
off£t_¨øy
[
i
]));

290 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

292 
off£t_¨øy
[
i
],

293 
AR_PHY_RX_IQCAL_CORR_IQCORR_Q_Q_COFF
,

294 
	`REG_READ
(
ah
, 
off£t_¨øy
[
i
]));

296 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

297 "IQ CÆánd C‹ª˘i⁄ d⁄êf‹ Chaö %d\n", 
i
);

301 
	`REG_SET_BIT
(
ah
, 
AR_PHY_RX_IQCAL_CORR_B0
,

302 
AR_PHY_RX_IQCAL_CORR_IQCORR_ENABLE
);

303 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

305 (Ë(
AR_PHY_RX_IQCAL_CORR_B0
),

306 
AR_PHY_RX_IQCAL_CORR_IQCORR_ENABLE
,

307 
	`REG_READ
(
ah
, 
AR_PHY_RX_IQCAL_CORR_B0
));

308 
	}
}

310 c⁄° 
©h9k_≥rˇl_d©a
 
	giq_ˇl_sögÀ_ßm∂e
 = {

311 
IQ_MISMATCH_CAL
,

312 
MIN_CAL_SAMPLES
,

313 
PER_MAX_LOG_COUNT
,

314 
¨9003_hw_iqˇl_cﬁÀ˘
,

315 
¨9003_hw_iqˇlibøã


318 
	$¨9003_hw_öô_ˇl_£âögs
(
©h_hw
 *
ah
)

320 
ah
->
iq_ˇld©a
.
ˇlD©a
 = &
iq_ˇl_sögÀ_ßm∂e
;

322 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
)) {

323 
ah
->
íabÀd_ˇls
 |
TX_IQ_CAL
;

324 i‡(
	`AR_SREV_9485_OR_LATER
(
ah
Ë&& !
	`AR_SREV_9340
(ah))

325 
ah
->
íabÀd_ˇls
 |
TX_IQ_ON_AGC_CAL
;

328 
ah
->
suµ_ˇls
 = 
IQ_MISMATCH_CAL
;

329 
	}
}

331 
	#OFF_UPPER_LT
 24

	)

332 
	#OFF_LOWER_LT
 7

	)

334 
boﬁ
 
	$¨9003_hw_dy«mic_osdac_£À˘i⁄
(
©h_hw
 *
ah
,

335 
boﬁ
 
txiqˇl_d⁄e
)

337 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

338 
ch0_d⁄e
, 
osdac_ch0
, 
dc_off_ch0_i1
, 
dc_off_ch0_q1
, 
dc_off_ch0_i2
,

339 
dc_off_ch0_q2
, 
dc_off_ch0_i3
, 
dc_off_ch0_q3
;

340 
ch1_d⁄e
, 
osdac_ch1
, 
dc_off_ch1_i1
, 
dc_off_ch1_q1
, 
dc_off_ch1_i2
,

341 
dc_off_ch1_q2
, 
dc_off_ch1_i3
, 
dc_off_ch1_q3
;

342 
ch2_d⁄e
, 
osdac_ch2
, 
dc_off_ch2_i1
, 
dc_off_ch2_q1
, 
dc_off_ch2_i2
,

343 
dc_off_ch2_q2
, 
dc_off_ch2_i3
, 
dc_off_ch2_q3
;

344 
boﬁ
 
°©us
;

345 
u32
 
ãmp
, 
vÆ
;

350 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_AGC_CONTROL
,

351 
AR_PHY_AGC_CONTROL_OFFSET_CAL
);

352 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_TX_IQCAL_CONTROL_0
,

353 
AR_PHY_TX_IQCAL_CONTROL_0_ENABLE_TXIQ_CAL
);

354 
	`REG_WRITE
(
ah
, 
AR_PHY_AGC_CONTROL
,

355 
	`REG_READ
(
ah
, 
AR_PHY_AGC_CONTROL
Ë| 
AR_PHY_AGC_CONTROL_CAL
);

357 
°©us
 = 
	`©h9k_hw_waô
(
ah
, 
AR_PHY_AGC_CONTROL
,

358 
AR_PHY_AGC_CONTROL_CAL
,

359 0, 
AH_WAIT_TIMEOUT
);

360 i‡(!
°©us
) {

361 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

363  
Ál£
;

371 
	`REG_SET_BIT
(
ah
, 
AR_PHY_AGC_CONTROL
,

372 
AR_PHY_AGC_CONTROL_OFFSET_CAL
);

373 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_CL_CAL_CTL
,

374 
AR_PHY_CL_CAL_ENABLE
);

375 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_AGC_CONTROL
,

376 
AR_PHY_AGC_CONTROL_FLTR_CAL
);

377 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_AGC_CONTROL
,

378 
AR_PHY_AGC_CONTROL_PKDET_CAL
);

380 
ch0_d⁄e
 = 0;

381 
ch1_d⁄e
 = 0;

382 
ch2_d⁄e
 = 0;

384 (
ch0_d⁄e
 =0Ë|| (
ch1_d⁄e
 =0Ë|| (
ch2_d⁄e
 == 0)) {

385 
osdac_ch0
 = (
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH0_BB1
) >> 30) & 0x3;

386 
osdac_ch1
 = (
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH1_BB1
) >> 30) & 0x3;

387 
osdac_ch2
 = (
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH2_BB1
) >> 30) & 0x3;

389 
	`REG_SET_BIT
(
ah
, 
AR_PHY_ACTIVE
, 
AR_PHY_ACTIVE_EN
);

391 
	`REG_WRITE
(
ah
, 
AR_PHY_AGC_CONTROL
,

392 
	`REG_READ
(
ah
, 
AR_PHY_AGC_CONTROL
Ë| 
AR_PHY_AGC_CONTROL_CAL
);

394 
°©us
 = 
	`©h9k_hw_waô
(
ah
, 
AR_PHY_AGC_CONTROL
,

395 
AR_PHY_AGC_CONTROL_CAL
,

396 0, 
AH_WAIT_TIMEOUT
);

397 i‡(!
°©us
) {

398 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

400  
Ál£
;

403 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_ACTIVE
, 
AR_PHY_ACTIVE_EN
);

408 
	`REG_WRITE
(
ah
, 
AR_PHY_65NM_CH0_BB3
,

409 ((
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH0_BB3
) & 0xfffffcff) | (1 << 8)));

410 
	`REG_WRITE
(
ah
, 
AR_PHY_65NM_CH1_BB3
,

411 ((
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH1_BB3
) & 0xfffffcff) | (1 << 8)));

412 
	`REG_WRITE
(
ah
, 
AR_PHY_65NM_CH2_BB3
,

413 ((
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH2_BB3
) & 0xfffffcff) | (1 << 8)));

415 
ãmp
 = 
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH0_BB3
);

416 
dc_off_ch0_i1
 = (
ãmp
 >> 26) & 0x1f;

417 
dc_off_ch0_q1
 = (
ãmp
 >> 21) & 0x1f;

419 
ãmp
 = 
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH1_BB3
);

420 
dc_off_ch1_i1
 = (
ãmp
 >> 26) & 0x1f;

421 
dc_off_ch1_q1
 = (
ãmp
 >> 21) & 0x1f;

423 
ãmp
 = 
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH2_BB3
);

424 
dc_off_ch2_i1
 = (
ãmp
 >> 26) & 0x1f;

425 
dc_off_ch2_q1
 = (
ãmp
 >> 21) & 0x1f;

430 
	`REG_WRITE
(
ah
, 
AR_PHY_65NM_CH0_BB3
,

431 ((
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH0_BB3
) & 0xfffffcff) | (2 << 8)));

432 
	`REG_WRITE
(
ah
, 
AR_PHY_65NM_CH1_BB3
,

433 ((
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH1_BB3
) & 0xfffffcff) | (2 << 8)));

434 
	`REG_WRITE
(
ah
, 
AR_PHY_65NM_CH2_BB3
,

435 ((
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH2_BB3
) & 0xfffffcff) | (2 << 8)));

437 
ãmp
 = 
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH0_BB3
);

438 
dc_off_ch0_i2
 = (
ãmp
 >> 26) & 0x1f;

439 
dc_off_ch0_q2
 = (
ãmp
 >> 21) & 0x1f;

441 
ãmp
 = 
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH1_BB3
);

442 
dc_off_ch1_i2
 = (
ãmp
 >> 26) & 0x1f;

443 
dc_off_ch1_q2
 = (
ãmp
 >> 21) & 0x1f;

445 
ãmp
 = 
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH2_BB3
);

446 
dc_off_ch2_i2
 = (
ãmp
 >> 26) & 0x1f;

447 
dc_off_ch2_q2
 = (
ãmp
 >> 21) & 0x1f;

452 
	`REG_WRITE
(
ah
, 
AR_PHY_65NM_CH0_BB3
,

453 ((
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH0_BB3
) & 0xfffffcff) | (3 << 8)));

454 
	`REG_WRITE
(
ah
, 
AR_PHY_65NM_CH1_BB3
,

455 ((
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH1_BB3
) & 0xfffffcff) | (3 << 8)));

456 
	`REG_WRITE
(
ah
, 
AR_PHY_65NM_CH2_BB3
,

457 ((
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH2_BB3
) & 0xfffffcff) | (3 << 8)));

459 
ãmp
 = 
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH0_BB3
);

460 
dc_off_ch0_i3
 = (
ãmp
 >> 26) & 0x1f;

461 
dc_off_ch0_q3
 = (
ãmp
 >> 21) & 0x1f;

463 
ãmp
 = 
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH1_BB3
);

464 
dc_off_ch1_i3
 = (
ãmp
 >> 26) & 0x1f;

465 
dc_off_ch1_q3
 = (
ãmp
 >> 21) & 0x1f;

467 
ãmp
 = 
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH2_BB3
);

468 
dc_off_ch2_i3
 = (
ãmp
 >> 26) & 0x1f;

469 
dc_off_ch2_q3
 = (
ãmp
 >> 21) & 0x1f;

471 i‡((
dc_off_ch0_i1
 > 
OFF_UPPER_LT
Ë|| (dc_off_ch0_i1 < 
OFF_LOWER_LT
) ||

472 (
dc_off_ch0_i2
 > 
OFF_UPPER_LT
Ë|| (dc_off_ch0_i2 < 
OFF_LOWER_LT
) ||

473 (
dc_off_ch0_i3
 > 
OFF_UPPER_LT
Ë|| (dc_off_ch0_i3 < 
OFF_LOWER_LT
) ||

474 (
dc_off_ch0_q1
 > 
OFF_UPPER_LT
Ë|| (dc_off_ch0_q1 < 
OFF_LOWER_LT
) ||

475 (
dc_off_ch0_q2
 > 
OFF_UPPER_LT
Ë|| (dc_off_ch0_q2 < 
OFF_LOWER_LT
) ||

476 (
dc_off_ch0_q3
 > 
OFF_UPPER_LT
Ë|| (dc_off_ch0_q3 < 
OFF_LOWER_LT
)) {

477 i‡(
osdac_ch0
 == 3) {

478 
ch0_d⁄e
 = 1;

480 
osdac_ch0
++;

482 
vÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH0_BB1
) & 0x3fffffff;

483 
vÆ
 |(
osdac_ch0
 << 30);

484 
	`REG_WRITE
(
ah
, 
AR_PHY_65NM_CH0_BB1
, 
vÆ
);

486 
ch0_d⁄e
 = 0;

489 
ch0_d⁄e
 = 1;

492 i‡((
dc_off_ch1_i1
 > 
OFF_UPPER_LT
Ë|| (dc_off_ch1_i1 < 
OFF_LOWER_LT
) ||

493 (
dc_off_ch1_i2
 > 
OFF_UPPER_LT
Ë|| (dc_off_ch1_i2 < 
OFF_LOWER_LT
) ||

494 (
dc_off_ch1_i3
 > 
OFF_UPPER_LT
Ë|| (dc_off_ch1_i3 < 
OFF_LOWER_LT
) ||

495 (
dc_off_ch1_q1
 > 
OFF_UPPER_LT
Ë|| (dc_off_ch1_q1 < 
OFF_LOWER_LT
) ||

496 (
dc_off_ch1_q2
 > 
OFF_UPPER_LT
Ë|| (dc_off_ch1_q2 < 
OFF_LOWER_LT
) ||

497 (
dc_off_ch1_q3
 > 
OFF_UPPER_LT
Ë|| (dc_off_ch1_q3 < 
OFF_LOWER_LT
)) {

498 i‡(
osdac_ch1
 == 3) {

499 
ch1_d⁄e
 = 1;

501 
osdac_ch1
++;

503 
vÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH1_BB1
) & 0x3fffffff;

504 
vÆ
 |(
osdac_ch1
 << 30);

505 
	`REG_WRITE
(
ah
, 
AR_PHY_65NM_CH1_BB1
, 
vÆ
);

507 
ch1_d⁄e
 = 0;

510 
ch1_d⁄e
 = 1;

513 i‡((
dc_off_ch2_i1
 > 
OFF_UPPER_LT
Ë|| (dc_off_ch2_i1 < 
OFF_LOWER_LT
) ||

514 (
dc_off_ch2_i2
 > 
OFF_UPPER_LT
Ë|| (dc_off_ch2_i2 < 
OFF_LOWER_LT
) ||

515 (
dc_off_ch2_i3
 > 
OFF_UPPER_LT
Ë|| (dc_off_ch2_i3 < 
OFF_LOWER_LT
) ||

516 (
dc_off_ch2_q1
 > 
OFF_UPPER_LT
Ë|| (dc_off_ch2_q1 < 
OFF_LOWER_LT
) ||

517 (
dc_off_ch2_q2
 > 
OFF_UPPER_LT
Ë|| (dc_off_ch2_q2 < 
OFF_LOWER_LT
) ||

518 (
dc_off_ch2_q3
 > 
OFF_UPPER_LT
Ë|| (dc_off_ch2_q3 < 
OFF_LOWER_LT
)) {

519 i‡(
osdac_ch2
 == 3) {

520 
ch2_d⁄e
 = 1;

522 
osdac_ch2
++;

524 
vÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH2_BB1
) & 0x3fffffff;

525 
vÆ
 |(
osdac_ch2
 << 30);

526 
	`REG_WRITE
(
ah
, 
AR_PHY_65NM_CH2_BB1
, 
vÆ
);

528 
ch2_d⁄e
 = 0;

531 
ch2_d⁄e
 = 1;

535 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_AGC_CONTROL
,

536 
AR_PHY_AGC_CONTROL_OFFSET_CAL
);

537 
	`REG_SET_BIT
(
ah
, 
AR_PHY_ACTIVE
, 
AR_PHY_ACTIVE_EN
);

543 
	`REG_SET_BIT
(
ah
, 
AR_PHY_TX_IQCAL_CONTROL_0
,

544 
AR_PHY_TX_IQCAL_CONTROL_0_ENABLE_TXIQ_CAL
);

546  
åue
;

547 
	}
}

552 
boﬁ
 
	$¨9003_hw_sﬁve_iq_ˇl
(
©h_hw
 *
ah
,

553 
s32
 
sö_2phi_1
,

554 
s32
 
cos_2phi_1
,

555 
s32
 
sö_2phi_2
,

556 
s32
 
cos_2phi_2
,

557 
s32
 
mag_a0_d0
,

558 
s32
 
phs_a0_d0
,

559 
s32
 
mag_a1_d0
,

560 
s32
 
phs_a1_d0
,

561 
s32
 
sﬁved_eq
[])

563 
s32
 
f1
 = 
cos_2phi_1
 - 
cos_2phi_2
,

564 
f3
 = 
sö_2phi_1
 - 
sö_2phi_2
,

565 
f2
;

566 
s32
 
mag_tx
, 
phs_tx
, 
mag_rx
, 
phs_rx
;

567 c⁄° 
s32
 
ªsu…_shi·
 = 1 << 15;

568 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

570 
f2
 = ((
f1
 >> 3Ë* (f1 >> 3Ë+ (
f3
 >> 3) * (f3 >> 3)) >> 9;

572 i‡(!
f2
) {

573 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "Divide by 0\n");

574  
Ál£
;

578 
mag_tx
 = 
f1
 * (
mag_a0_d0
 - 
mag_a1_d0
Ë+ 
f3
 * (
phs_a0_d0
 - 
phs_a1_d0
);

580 
phs_tx
 = 
f3
 * (-
mag_a0_d0
 + 
mag_a1_d0
Ë+ 
f1
 * (
phs_a0_d0
 - 
phs_a1_d0
);

582 
mag_tx
 = (mag_tx / 
f2
);

583 
phs_tx
 = (phs_tx / 
f2
);

586 
mag_rx
 = 
mag_a0_d0
 - (
cos_2phi_1
 * 
mag_tx
 + 
sö_2phi_1
 * 
phs_tx
) /

587 
ªsu…_shi·
;

589 
phs_rx
 = 
phs_a0_d0
 + (
sö_2phi_1
 * 
mag_tx
 - 
cos_2phi_1
 * 
phs_tx
) /

590 
ªsu…_shi·
;

592 
sﬁved_eq
[0] = 
mag_tx
;

593 
sﬁved_eq
[1] = 
phs_tx
;

594 
sﬁved_eq
[2] = 
mag_rx
;

595 
sﬁved_eq
[3] = 
phs_rx
;

597  
åue
;

598 
	}
}

600 
s32
 
	$¨9003_hw_föd_mag_≠¥ox
(
©h_hw
 *
ah
, 
s32
 
ö_ª
, s32 
ö_im
)

602 
s32
 
abs_i
 = 
	`abs
(
ö_ª
),

603 
abs_q
 = 
	`abs
(
ö_im
),

604 
max_abs
, 
mö_abs
;

606 i‡(
abs_i
 > 
abs_q
) {

607 
max_abs
 = 
abs_i
;

608 
mö_abs
 = 
abs_q
;

610 
max_abs
 = 
abs_q
;

611 
mö_abs
 = 
abs_i
;

614  
max_abs
 - (max_ab†/ 32Ë+ (
mö_abs
 / 8) + (min_abs / 4);

615 
	}
}

617 
	#DELPT
 32

	)

619 
boﬁ
 
	$¨9003_hw_ˇlc_iq_c‹r
(
©h_hw
 *
ah
,

620 
s32
 
chaö_idx
,

621 c⁄° 
s32
 
iq_ªs
[],

622 
s32
 
iqc_c€ff
[])

624 
s32
 
i2_m_q2_a0_d0
, 
i2_p_q2_a0_d0
, 
iq_c‹r_a0_d0
,

625 
i2_m_q2_a0_d1
, 
i2_p_q2_a0_d1
, 
iq_c‹r_a0_d1
,

626 
i2_m_q2_a1_d0
, 
i2_p_q2_a1_d0
, 
iq_c‹r_a1_d0
,

627 
i2_m_q2_a1_d1
, 
i2_p_q2_a1_d1
, 
iq_c‹r_a1_d1
;

628 
s32
 
mag_a0_d0
, 
mag_a1_d0
, 
mag_a0_d1
, 
mag_a1_d1
,

629 
phs_a0_d0
, 
phs_a1_d0
, 
phs_a0_d1
, 
phs_a1_d1
,

630 
sö_2phi_1
, 
cos_2phi_1
,

631 
sö_2phi_2
, 
cos_2phi_2
;

632 
s32
 
mag_tx
, 
phs_tx
, 
mag_rx
, 
phs_rx
;

633 
s32
 
sﬁved_eq
[4], 
mag_c‹r_tx
, 
phs_c‹r_tx
, 
mag_c‹r_rx
, 
phs_c‹r_rx
,

634 
q_q_coff
, 
q_i_coff
;

635 c⁄° 
s32
 
ªs_sˇÀ
 = 1 << 15;

636 c⁄° 
s32
 
dñ±_shi·
 = 1 << 8;

637 
s32
 
mag1
, 
mag2
;

638 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

640 
i2_m_q2_a0_d0
 = 
iq_ªs
[0] & 0xfff;

641 
i2_p_q2_a0_d0
 = (
iq_ªs
[0] >> 12) & 0xfff;

642 
iq_c‹r_a0_d0
 = ((
iq_ªs
[0] >> 24) & 0xff) + ((iq_res[1] & 0xf) << 8);

644 i‡(
i2_m_q2_a0_d0
 > 0x800)

645 
i2_m_q2_a0_d0
 = -((0xfff - i2_m_q2_a0_d0) + 1);

647 i‡(
i2_p_q2_a0_d0
 > 0x800)

648 
i2_p_q2_a0_d0
 = -((0xfff - i2_p_q2_a0_d0) + 1);

650 i‡(
iq_c‹r_a0_d0
 > 0x800)

651 
iq_c‹r_a0_d0
 = -((0xfff - iq_corr_a0_d0) + 1);

653 
i2_m_q2_a0_d1
 = (
iq_ªs
[1] >> 4) & 0xfff;

654 
i2_p_q2_a0_d1
 = (
iq_ªs
[2] & 0xfff);

655 
iq_c‹r_a0_d1
 = (
iq_ªs
[2] >> 12) & 0xfff;

657 i‡(
i2_m_q2_a0_d1
 > 0x800)

658 
i2_m_q2_a0_d1
 = -((0xfff - i2_m_q2_a0_d1) + 1);

660 i‡(
iq_c‹r_a0_d1
 > 0x800)

661 
iq_c‹r_a0_d1
 = -((0xfff - iq_corr_a0_d1) + 1);

663 
i2_m_q2_a1_d0
 = ((
iq_ªs
[2] >> 24) & 0xff) + ((iq_res[3] & 0xf) << 8);

664 
i2_p_q2_a1_d0
 = (
iq_ªs
[3] >> 4) & 0xfff;

665 
iq_c‹r_a1_d0
 = 
iq_ªs
[4] & 0xfff;

667 i‡(
i2_m_q2_a1_d0
 > 0x800)

668 
i2_m_q2_a1_d0
 = -((0xfff - i2_m_q2_a1_d0) + 1);

670 i‡(
i2_p_q2_a1_d0
 > 0x800)

671 
i2_p_q2_a1_d0
 = -((0xfff - i2_p_q2_a1_d0) + 1);

673 i‡(
iq_c‹r_a1_d0
 > 0x800)

674 
iq_c‹r_a1_d0
 = -((0xfff - iq_corr_a1_d0) + 1);

676 
i2_m_q2_a1_d1
 = (
iq_ªs
[4] >> 12) & 0xfff;

677 
i2_p_q2_a1_d1
 = ((
iq_ªs
[4] >> 24) & 0xff) + ((iq_res[5] & 0xf) << 8);

678 
iq_c‹r_a1_d1
 = (
iq_ªs
[5] >> 4) & 0xfff;

680 i‡(
i2_m_q2_a1_d1
 > 0x800)

681 
i2_m_q2_a1_d1
 = -((0xfff - i2_m_q2_a1_d1) + 1);

683 i‡(
i2_p_q2_a1_d1
 > 0x800)

684 
i2_p_q2_a1_d1
 = -((0xfff - i2_p_q2_a1_d1) + 1);

686 i‡(
iq_c‹r_a1_d1
 > 0x800)

687 
iq_c‹r_a1_d1
 = -((0xfff - iq_corr_a1_d1) + 1);

689 i‡((
i2_p_q2_a0_d0
 =0Ë|| (
i2_p_q2_a0_d1
 == 0) ||

690 (
i2_p_q2_a1_d0
 =0Ë|| (
i2_p_q2_a1_d1
 == 0)) {

691 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

697 
i2_p_q2_a0_d0
, 
i2_p_q2_a0_d1
,

698 
i2_p_q2_a1_d0
, 
i2_p_q2_a1_d1
);

699  
Ál£
;

702 i‡((
i2_p_q2_a0_d0
 < 1024) || (i2_p_q2_a0_d0 > 2047) ||

703 (
i2_p_q2_a1_d0
 < 0Ë|| (
i2_p_q2_a1_d1
 < 0) ||

704 (
i2_p_q2_a0_d0
 <
i2_m_q2_a0_d0
) ||

705 (
i2_p_q2_a0_d0
 <
iq_c‹r_a0_d0
) ||

706 (
i2_p_q2_a0_d1
 <
i2_m_q2_a0_d1
) ||

707 (
i2_p_q2_a0_d1
 <
iq_c‹r_a0_d1
) ||

708 (
i2_p_q2_a1_d0
 <
i2_m_q2_a1_d0
) ||

709 (
i2_p_q2_a1_d0
 <
iq_c‹r_a1_d0
) ||

710 (
i2_p_q2_a1_d1
 <
i2_m_q2_a1_d1
) ||

711 (
i2_p_q2_a1_d1
 <
iq_c‹r_a1_d1
)) {

712  
Ál£
;

715 
mag_a0_d0
 = (
i2_m_q2_a0_d0
 * 
ªs_sˇÀ
Ë/ 
i2_p_q2_a0_d0
;

716 
phs_a0_d0
 = (
iq_c‹r_a0_d0
 * 
ªs_sˇÀ
Ë/ 
i2_p_q2_a0_d0
;

718 
mag_a0_d1
 = (
i2_m_q2_a0_d1
 * 
ªs_sˇÀ
Ë/ 
i2_p_q2_a0_d1
;

719 
phs_a0_d1
 = (
iq_c‹r_a0_d1
 * 
ªs_sˇÀ
Ë/ 
i2_p_q2_a0_d1
;

721 
mag_a1_d0
 = (
i2_m_q2_a1_d0
 * 
ªs_sˇÀ
Ë/ 
i2_p_q2_a1_d0
;

722 
phs_a1_d0
 = (
iq_c‹r_a1_d0
 * 
ªs_sˇÀ
Ë/ 
i2_p_q2_a1_d0
;

724 
mag_a1_d1
 = (
i2_m_q2_a1_d1
 * 
ªs_sˇÀ
Ë/ 
i2_p_q2_a1_d1
;

725 
phs_a1_d1
 = (
iq_c‹r_a1_d1
 * 
ªs_sˇÀ
Ë/ 
i2_p_q2_a1_d1
;

728 
sö_2phi_1
 = (((
mag_a0_d0
 - 
mag_a0_d1
Ë* 
dñ±_shi·
Ë/ 
DELPT
);

730 
cos_2phi_1
 = (((
phs_a0_d1
 - 
phs_a0_d0
Ë* 
dñ±_shi·
Ë/ 
DELPT
);

732 
sö_2phi_2
 = (((
mag_a1_d0
 - 
mag_a1_d1
Ë* 
dñ±_shi·
Ë/ 
DELPT
);

734 
cos_2phi_2
 = (((
phs_a1_d1
 - 
phs_a1_d0
Ë* 
dñ±_shi·
Ë/ 
DELPT
);

740 
mag1
 = 
	`¨9003_hw_föd_mag_≠¥ox
(
ah
, 
cos_2phi_1
, 
sö_2phi_1
);

741 
mag2
 = 
	`¨9003_hw_föd_mag_≠¥ox
(
ah
, 
cos_2phi_2
, 
sö_2phi_2
);

743 i‡((
mag1
 =0Ë|| (
mag2
 == 0)) {

744 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "Divide by 0: mag1=%d, mag2=%d\n",

745 
mag1
, 
mag2
);

746  
Ál£
;

750 
sö_2phi_1
 = (sö_2phi_1 * 
ªs_sˇÀ
 / 
mag1
);

751 
cos_2phi_1
 = (cos_2phi_1 * 
ªs_sˇÀ
 / 
mag1
);

752 
sö_2phi_2
 = (sö_2phi_2 * 
ªs_sˇÀ
 / 
mag2
);

753 
cos_2phi_2
 = (cos_2phi_2 * 
ªs_sˇÀ
 / 
mag2
);

756 i‡(!
	`¨9003_hw_sﬁve_iq_ˇl
(
ah
,

757 
sö_2phi_1
, 
cos_2phi_1
,

758 
sö_2phi_2
, 
cos_2phi_2
,

759 
mag_a0_d0
, 
phs_a0_d0
,

760 
mag_a1_d0
,

761 
phs_a1_d0
, 
sﬁved_eq
)) {

762 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

764  
Ál£
;

767 
mag_tx
 = 
sﬁved_eq
[0];

768 
phs_tx
 = 
sﬁved_eq
[1];

769 
mag_rx
 = 
sﬁved_eq
[2];

770 
phs_rx
 = 
sﬁved_eq
[3];

772 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

774 
chaö_idx
, 
mag_tx
/
ªs_sˇÀ
, 
phs_tx
/res_scale);

776 i‡(
ªs_sˇÀ
 =
mag_tx
) {

777 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

779 
mag_tx
, 
ªs_sˇÀ
);

780  
Ál£
;

784 
mag_c‹r_tx
 = (
mag_tx
 * 
ªs_sˇÀ
) / (res_scale - mag_tx);

785 
phs_c‹r_tx
 = -
phs_tx
;

787 
q_q_coff
 = (
mag_c‹r_tx
 * 128 / 
ªs_sˇÀ
);

788 
q_i_coff
 = (
phs_c‹r_tx
 * 256 / 
ªs_sˇÀ
);

790 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "tx chain %d: mag corr=%dÖhase corr=%d\n",

791 
chaö_idx
, 
q_q_coff
, 
q_i_coff
);

793 i‡(
q_i_coff
 < -63)

794 
q_i_coff
 = -63;

795 i‡(
q_i_coff
 > 63)

796 
q_i_coff
 = 63;

797 i‡(
q_q_coff
 < -63)

798 
q_q_coff
 = -63;

799 i‡(
q_q_coff
 > 63)

800 
q_q_coff
 = 63;

802 
iqc_c€ff
[0] = (
q_q_coff
 * 128Ë+ (0x7‡& 
q_i_coff
);

804 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "tx chain %d: iq corr coeff=%x\n",

805 
chaö_idx
, 
iqc_c€ff
[0]);

807 i‡(-
mag_rx
 =
ªs_sˇÀ
) {

808 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

810 
mag_rx
, 
ªs_sˇÀ
);

811  
Ál£
;

815 
mag_c‹r_rx
 = (-
mag_rx
 * 
ªs_sˇÀ
) / (res_scale + mag_rx);

816 
phs_c‹r_rx
 = -
phs_rx
;

818 
q_q_coff
 = (
mag_c‹r_rx
 * 128 / 
ªs_sˇÀ
);

819 
q_i_coff
 = (
phs_c‹r_rx
 * 256 / 
ªs_sˇÀ
);

821 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "rx chain %d: mag corr=%dÖhase corr=%d\n",

822 
chaö_idx
, 
q_q_coff
, 
q_i_coff
);

824 i‡(
q_i_coff
 < -63)

825 
q_i_coff
 = -63;

826 i‡(
q_i_coff
 > 63)

827 
q_i_coff
 = 63;

828 i‡(
q_q_coff
 < -63)

829 
q_q_coff
 = -63;

830 i‡(
q_q_coff
 > 63)

831 
q_q_coff
 = 63;

833 
iqc_c€ff
[1] = (
q_q_coff
 * 128Ë+ (0x7‡& 
q_i_coff
);

835 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "rx chain %d: iq corr coeff=%x\n",

836 
chaö_idx
, 
iqc_c€ff
[1]);

838  
åue
;

839 
	}
}

841 
	$¨9003_hw_dëe˘_ouéõr
(
mp_c€ff
[][
MAXIQCAL
],

842 
nmósuªmít
,

843 
max_dñè
)

845 
mp_max
 = -64, 
max_idx
 = 0;

846 
mp_mö
 = 63, 
mö_idx
 = 0;

847 
mp_avg
 = 0, 
i
, 
ouéõr_idx
 = 0, 
mp_cou¡
 = 0;

850 
i
 = 0; i < 
nmósuªmít
; i++) {

851 i‡(
mp_c€ff
[
i
][0] > 
mp_max
) {

852 
mp_max
 = 
mp_c€ff
[
i
][0];

853 
max_idx
 = 
i
;

854 } i‡(
mp_c€ff
[
i
][0] < 
mp_mö
) {

855 
mp_mö
 = 
mp_c€ff
[
i
][0];

856 
mö_idx
 = 
i
;

861 
i
 = 0; i < 
nmósuªmít
; i++) {

862 i‡((
	`abs
(
mp_c€ff
[
i
][0]Ë<ábs(
mp_max
)) ||

863 (
	`abs
(
mp_c€ff
[
i
][0]Ë<ábs(
mp_mö
))) {

864 
mp_avg
 +
mp_c€ff
[
i
][0];

865 
mp_cou¡
++;

873 i‡(
mp_cou¡
)

874 
mp_avg
 /
mp_cou¡
;

876 
mp_avg
 = 
mp_c€ff
[
nmósuªmít
 - 1][0];

879 i‡(
	`abs
(
mp_max
 - 
mp_mö
Ë> 
max_dñè
) {

880 i‡(
	`abs
(
mp_max
 - 
mp_avg
Ë>ábs(
mp_mö
 - mp_avg))

881 
ouéõr_idx
 = 
max_idx
;

883 
ouéõr_idx
 = 
mö_idx
;

885 
mp_c€ff
[
ouéõr_idx
][0] = 
mp_avg
;

887 
	}
}

889 
	$¨9003_hw_tx_iq_ˇl_ouéõr_dëe˘i⁄
(
©h_hw
 *
ah
,

890 
c€ff
 *coeff,

891 
boﬁ
 
is_ªußbÀ
)

893 
i
, 
im
, 
nmósuªmít
;

894 
magnôude
, 
pha£
;

895 
u32
 
tx_c‹r_c€ff
[
MAX_MEASUREMENT
][
AR9300_MAX_CHAINS
];

896 
©h9k_hw_ˇl_d©a
 *
ˇld©a
 = 
ah
->caldata;

898 
	`mem£t
(
tx_c‹r_c€ff
, 0, (tx_corr_coeff));

899 
i
 = 0; i < 
MAX_MEASUREMENT
 / 2; i++) {

900 
tx_c‹r_c€ff
[
i
 * 2][0] =Åx_corr_coeff[(i * 2) + 1][0] =

901 
	`AR_PHY_TX_IQCAL_CORR_COEFF_B0
(
i
);

902 i‡(!
	`AR_SREV_9485
(
ah
)) {

903 
tx_c‹r_c€ff
[
i
 * 2][1] =

904 
tx_c‹r_c€ff
[(
i
 * 2) + 1][1] =

905 
	`AR_PHY_TX_IQCAL_CORR_COEFF_B1
(
i
);

907 
tx_c‹r_c€ff
[
i
 * 2][2] =

908 
tx_c‹r_c€ff
[(
i
 * 2) + 1][2] =

909 
	`AR_PHY_TX_IQCAL_CORR_COEFF_B2
(
i
);

914 
i
 = 0; i < 
AR9300_MAX_CHAINS
; i++) {

915 i‡(!(
ah
->
txchaömask
 & (1 << 
i
)))

917 
nmósuªmít
 = 
	`REG_READ_FIELD
(
ah
,

918 
AR_PHY_TX_IQCAL_STATUS_B0
,

919 
AR_PHY_CALIBRATED_GAINS_0
);

921 i‡(
nmósuªmít
 > 
MAX_MEASUREMENT
)

922 
nmósuªmít
 = 
MAX_MEASUREMENT
;

927 i‡(!
	`AR_SREV_9550
(
ah
)) {

929 i‡(
nmósuªmít
 > 1) {

931 
	`¨9003_hw_dëe˘_ouéõr
(
c€ff
->
mag_c€ff
[
i
],

932 
nmósuªmít
,

933 
MAX_MAG_DELTA
);

936 
	`¨9003_hw_dëe˘_ouéõr
(
c€ff
->
phs_c€ff
[
i
],

937 
nmósuªmít
,

938 
MAX_PHS_DELTA
);

942 
im
 = 0; im < 
nmósuªmít
; im++) {

943 
magnôude
 = 
c€ff
->
mag_c€ff
[
i
][
im
][0];

944 
pha£
 = 
c€ff
->
phs_c€ff
[
i
][
im
][0];

946 
c€ff
->
iqc_c€ff
[0] =

947 (
pha£
 & 0x7fË| ((
magnôude
 & 0x7f) << 7);

949 i‡((
im
 % 2) == 0)

950 
	`REG_RMW_FIELD
(
ah
, 
tx_c‹r_c€ff
[
im
][
i
],

951 
AR_PHY_TX_IQCAL_CORR_COEFF_00_COEFF_TABLE
,

952 
c€ff
->
iqc_c€ff
[0]);

954 
	`REG_RMW_FIELD
(
ah
, 
tx_c‹r_c€ff
[
im
][
i
],

955 
AR_PHY_TX_IQCAL_CORR_COEFF_01_COEFF_TABLE
,

956 
c€ff
->
iqc_c€ff
[0]);

958 i‡(
ˇld©a
)

959 
ˇld©a
->
tx_c‹r_c€ff
[
im
][
i
] =

960 
c€ff
->
iqc_c€ff
[0];

962 i‡(
ˇld©a
)

963 
ˇld©a
->
num_mósuªs
[
i
] = 
nmósuªmít
;

966 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TX_IQCAL_CONTROL_3
,

967 
AR_PHY_TX_IQCAL_CONTROL_3_IQCORR_EN
, 0x1);

968 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_RX_IQCAL_CORR_B0
,

969 
AR_PHY_RX_IQCAL_CORR_B0_LOOPBACK_IQCORR_EN
, 0x1);

971 i‡(
ˇld©a
) {

972 i‡(
is_ªußbÀ
)

973 
	`£t_bô
(
TXIQCAL_DONE
, &
ˇld©a
->
ˇl_Êags
);

975 
	`˛ór_bô
(
TXIQCAL_DONE
, &
ˇld©a
->
ˇl_Êags
);

979 
	}
}

981 
boﬁ
 
	$¨9003_hw_tx_iq_ˇl_run
(
©h_hw
 *
ah
)

983 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

984 
u8
 
tx_gaö_f‹˚d
;

986 
tx_gaö_f‹˚d
 = 
	`REG_READ_FIELD
(
ah
, 
AR_PHY_TX_FORCED_GAIN
,

987 
AR_PHY_TXGAIN_FORCE
);

988 i‡(
tx_gaö_f‹˚d
)

989 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TX_FORCED_GAIN
,

990 
AR_PHY_TXGAIN_FORCE
, 0);

992 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TX_IQCAL_START
,

993 
AR_PHY_TX_IQCAL_START_DO_CAL
, 1);

995 i‡(!
	`©h9k_hw_waô
(
ah
, 
AR_PHY_TX_IQCAL_START
,

996 
AR_PHY_TX_IQCAL_START_DO_CAL
, 0,

997 
AH_WAIT_TIMEOUT
)) {

998 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "Tx IQ Cal isÇot completed\n");

999  
Ál£
;

1001  
åue
;

1002 
	}
}

1004 
	$__¨955x_tx_iq_ˇl_s‹t
(
©h_hw
 *
ah
,

1005 
c€ff
 *coeff,

1006 
i
, 
nmósuªmít
)

1008 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1009 
im
, 
ix
, 
iy
, 
ãmp
;

1011 
im
 = 0; im < 
nmósuªmít
; im++) {

1012 
ix
 = 0; ix < 
MAXIQCAL
 - 1; ix++) {

1013 
iy
 = 
ix
 + 1; iy <
MAXIQCAL
 - 1; iy++) {

1014 i‡(
c€ff
->
mag_c€ff
[
i
][
im
][
iy
] <

1015 
c€ff
->
mag_c€ff
[
i
][
im
][
ix
]) {

1016 
ãmp
 = 
c€ff
->
mag_c€ff
[
i
][
im
][
ix
];

1017 
c€ff
->
mag_c€ff
[
i
][
im
][
ix
] =

1018 
c€ff
->
mag_c€ff
[
i
][
im
][
iy
];

1019 
c€ff
->
mag_c€ff
[
i
][
im
][
iy
] = 
ãmp
;

1021 i‡(
c€ff
->
phs_c€ff
[
i
][
im
][
iy
] <

1022 
c€ff
->
phs_c€ff
[
i
][
im
][
ix
]) {

1023 
ãmp
 = 
c€ff
->
phs_c€ff
[
i
][
im
][
ix
];

1024 
c€ff
->
phs_c€ff
[
i
][
im
][
ix
] =

1025 
c€ff
->
phs_c€ff
[
i
][
im
][
iy
];

1026 
c€ff
->
phs_c€ff
[
i
][
im
][
iy
] = 
ãmp
;

1030 
c€ff
->
mag_c€ff
[
i
][
im
][0] = c€ff->mag_c€ff[i][im][
MAXIQCAL
 / 2];

1031 
c€ff
->
phs_c€ff
[
i
][
im
][0] = c€ff->phs_c€ff[i][im][
MAXIQCAL
 / 2];

1033 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

1035 
i
, 
im
,

1036 
c€ff
->
mag_c€ff
[
i
][
im
][0],

1037 
c€ff
->
phs_c€ff
[
i
][
im
][0]);

1039 
	}
}

1041 
boﬁ
 
	$¨955x_tx_iq_ˇl_medün
(
©h_hw
 *
ah
,

1042 
c€ff
 *coeff,

1043 
iqˇl_idx
,

1044 
nmósuªmít
)

1046 
i
;

1048 i‡((
iqˇl_idx
 + 1Ë!
MAXIQCAL
)

1049  
Ál£
;

1051 
i
 = 0; i < 
AR9300_MAX_CHAINS
; i++) {

1052 
	`__¨955x_tx_iq_ˇl_s‹t
(
ah
, 
c€ff
, 
i
, 
nmósuªmít
);

1055  
åue
;

1056 
	}
}

1058 
	$¨9003_hw_tx_iq_ˇl_po°_¥oc
(
©h_hw
 *
ah
,

1059 
iqˇl_idx
,

1060 
boﬁ
 
is_ªußbÀ
)

1062 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1063 c⁄° 
u32
 
txiqˇl_°©us
[
AR9300_MAX_CHAINS
] = {

1064 
AR_PHY_TX_IQCAL_STATUS_B0
,

1065 
AR_PHY_TX_IQCAL_STATUS_B1
,

1066 
AR_PHY_TX_IQCAL_STATUS_B2
,

1068 c⁄° 
u_öt32_t
 
ch™_öfo_èb
[] = {

1069 
AR_PHY_CHAN_INFO_TAB_0
,

1070 
AR_PHY_CHAN_INFO_TAB_1
,

1071 
AR_PHY_CHAN_INFO_TAB_2
,

1073 
c€ff
 coeff;

1074 
s32
 
iq_ªs
[6];

1075 
i
, 
im
, 
j
;

1076 
nmósuªmít
 = 0;

1077 
boﬁ
 
ouéõr_dëe˘
 = 
åue
;

1079 
i
 = 0; i < 
AR9300_MAX_CHAINS
; i++) {

1080 i‡(!(
ah
->
txchaömask
 & (1 << 
i
)))

1083 
nmósuªmít
 = 
	`REG_READ_FIELD
(
ah
,

1084 
AR_PHY_TX_IQCAL_STATUS_B0
,

1085 
AR_PHY_CALIBRATED_GAINS_0
);

1086 i‡(
nmósuªmít
 > 
MAX_MEASUREMENT
)

1087 
nmósuªmít
 = 
MAX_MEASUREMENT
;

1089 
im
 = 0; im < 
nmósuªmít
; im++) {

1090 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

1091 "Doög Tx IQ CÆ f‹ chaö %d\n", 
i
);

1093 i‡(
	`REG_READ
(
ah
, 
txiqˇl_°©us
[
i
]) &

1094 
AR_PHY_TX_IQCAL_STATUS_FAILED
) {

1095 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

1096 "Tx IQ CÆ faûed f‹ chaö %d\n", 
i
);

1097 
tx_iqˇl_Áû
;

1100 
j
 = 0; j < 3; j++) {

1101 
u32
 
idx
 = 2 * 
j
, 
off£t
 = 4 * (3 * 
im
 + j);

1103 
	`REG_RMW_FIELD
(
ah
,

1104 
AR_PHY_CHAN_INFO_MEMORY
,

1105 
AR_PHY_CHAN_INFO_TAB_S2_READ
,

1109 
iq_ªs
[
idx
] = 
	`REG_READ
(
ah
,

1110 
ch™_öfo_èb
[
i
] +

1111 
off£t
);

1113 
	`REG_RMW_FIELD
(
ah
,

1114 
AR_PHY_CHAN_INFO_MEMORY
,

1115 
AR_PHY_CHAN_INFO_TAB_S2_READ
,

1119 
iq_ªs
[
idx
 + 1] = 0xfff‡& 
	`REG_READ
(
ah
,

1120 
ch™_öfo_èb
[
i
] + 
off£t
);

1122 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

1124 
idx
, 
iq_ªs
[idx], idx + 1,

1125 
iq_ªs
[
idx
 + 1]);

1128 i‡(!
	`¨9003_hw_ˇlc_iq_c‹r
(
ah
, 
i
, 
iq_ªs
,

1129 
c€ff
.
iqc_c€ff
)) {

1130 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

1132 
tx_iqˇl_Áû
;

1135 
c€ff
.
phs_c€ff
[
i
][
im
][
iqˇl_idx
] =

1136 
c€ff
.
iqc_c€ff
[0] & 0x7f;

1137 
c€ff
.
mag_c€ff
[
i
][
im
][
iqˇl_idx
] =

1138 (
c€ff
.
iqc_c€ff
[0] >> 7) & 0x7f;

1140 i‡(
c€ff
.
mag_c€ff
[
i
][
im
][
iqˇl_idx
] > 63)

1141 
c€ff
.
mag_c€ff
[
i
][
im
][
iqˇl_idx
] -= 128;

1142 i‡(
c€ff
.
phs_c€ff
[
i
][
im
][
iqˇl_idx
] > 63)

1143 
c€ff
.
phs_c€ff
[
i
][
im
][
iqˇl_idx
] -= 128;

1147 i‡(
	`AR_SREV_9550
(
ah
))

1148 
ouéõr_dëe˘
 = 
	`¨955x_tx_iq_ˇl_medün
(
ah
, &
c€ff
,

1149 
iqˇl_idx
, 
nmósuªmít
);

1150 i‡(
ouéõr_dëe˘
)

1151 
	`¨9003_hw_tx_iq_ˇl_ouéõr_dëe˘i⁄
(
ah
, &
c€ff
, 
is_ªußbÀ
);

1155 
tx_iqˇl_Áû
:

1156 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "Tx IQ Cal failed\n");

1158 
	}
}

1160 
	$¨9003_hw_tx_iq_ˇl_ªlﬂd
(
©h_hw
 *
ah
)

1162 
©h9k_hw_ˇl_d©a
 *
ˇld©a
 = 
ah
->caldata;

1163 
u32
 
tx_c‹r_c€ff
[
MAX_MEASUREMENT
][
AR9300_MAX_CHAINS
];

1164 
i
, 
im
;

1166 
	`mem£t
(
tx_c‹r_c€ff
, 0, (tx_corr_coeff));

1167 
i
 = 0; i < 
MAX_MEASUREMENT
 / 2; i++) {

1168 
tx_c‹r_c€ff
[
i
 * 2][0] =Åx_corr_coeff[(i * 2) + 1][0] =

1169 
	`AR_PHY_TX_IQCAL_CORR_COEFF_B0
(
i
);

1170 i‡(!
	`AR_SREV_9485
(
ah
)) {

1171 
tx_c‹r_c€ff
[
i
 * 2][1] =

1172 
tx_c‹r_c€ff
[(
i
 * 2) + 1][1] =

1173 
	`AR_PHY_TX_IQCAL_CORR_COEFF_B1
(
i
);

1175 
tx_c‹r_c€ff
[
i
 * 2][2] =

1176 
tx_c‹r_c€ff
[(
i
 * 2) + 1][2] =

1177 
	`AR_PHY_TX_IQCAL_CORR_COEFF_B2
(
i
);

1181 
i
 = 0; i < 
AR9300_MAX_CHAINS
; i++) {

1182 i‡(!(
ah
->
txchaömask
 & (1 << 
i
)))

1185 
im
 = 0; im < 
ˇld©a
->
num_mósuªs
[
i
]; im++) {

1186 i‡((
im
 % 2) == 0)

1187 
	`REG_RMW_FIELD
(
ah
, 
tx_c‹r_c€ff
[
im
][
i
],

1188 
AR_PHY_TX_IQCAL_CORR_COEFF_00_COEFF_TABLE
,

1189 
ˇld©a
->
tx_c‹r_c€ff
[
im
][
i
]);

1191 
	`REG_RMW_FIELD
(
ah
, 
tx_c‹r_c€ff
[
im
][
i
],

1192 
AR_PHY_TX_IQCAL_CORR_COEFF_01_COEFF_TABLE
,

1193 
ˇld©a
->
tx_c‹r_c€ff
[
im
][
i
]);

1197 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TX_IQCAL_CONTROL_3
,

1198 
AR_PHY_TX_IQCAL_CONTROL_3_IQCORR_EN
, 0x1);

1199 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_RX_IQCAL_CORR_B0
,

1200 
AR_PHY_RX_IQCAL_CORR_B0_LOOPBACK_IQCORR_EN
, 0x1);

1201 
	}
}

1203 
	$¨9003_hw_m™uÆ_≥ak_ˇl
(
©h_hw
 *
ah
, 
u8
 
chaö
, 
boﬁ
 
is_2g
)

1205 
off£t
[8] = {0}, 
tŸÆ
 = 0, 
ã°
;

1206 
agc_out
, 
i
;

1208 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_65NM_RXRF_GAINSTAGES
(
chaö
),

1209 
AR_PHY_65NM_RXRF_GAINSTAGES_RX_OVERRIDE
, 0x1);

1210 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_65NM_RXRF_GAINSTAGES
(
chaö
),

1211 
AR_PHY_65NM_RXRF_GAINSTAGES_LNAON_CALDC
, 0x0);

1212 i‡(
is_2g
)

1213 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_65NM_RXRF_GAINSTAGES
(
chaö
),

1214 
AR_PHY_65NM_RXRF_GAINSTAGES_LNA2G_GAIN_OVR
, 0x0);

1216 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_65NM_RXRF_GAINSTAGES
(
chaö
),

1217 
AR_PHY_65NM_RXRF_GAINSTAGES_LNA5G_GAIN_OVR
, 0x0);

1219 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_65NM_RXTX2
(
chaö
),

1220 
AR_PHY_65NM_RXTX2_RXON_OVR
, 0x1);

1221 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_65NM_RXTX2
(
chaö
),

1222 
AR_PHY_65NM_RXTX2_RXON
, 0x0);

1224 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_65NM_RXRF_AGC
(
chaö
),

1225 
AR_PHY_65NM_RXRF_AGC_AGC_OVERRIDE
, 0x1);

1226 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_65NM_RXRF_AGC
(
chaö
),

1227 
AR_PHY_65NM_RXRF_AGC_AGC_ON_OVR
, 0x1);

1228 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_65NM_RXRF_AGC
(
chaö
),

1229 
AR_PHY_65NM_RXRF_AGC_AGC_CAL_OVR
, 0x1);

1231 i‡(
	`AR_SREV_9330_11
(
ah
)) {

1232 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_65NM_RXRF_AGC
(
chaö
),

1233 
AR_PHY_65NM_RXRF_AGC_AGC2G_CALDAC_OVR
, 0x0);

1235 i‡(
is_2g
)

1236 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_65NM_RXRF_AGC
(
chaö
),

1237 
AR_PHY_65NM_RXRF_AGC_AGC2G_DBDAC_OVR
, 0x0);

1239 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_65NM_RXRF_AGC
(
chaö
),

1240 
AR_PHY_65NM_RXRF_AGC_AGC5G_DBDAC_OVR
, 0x0);

1243 
i
 = 6; i > 0; i--) {

1244 
off£t
[
i
] = 
	`BIT
(i - 1);

1245 
ã°
 = 
tŸÆ
 + 
off£t
[
i
];

1247 i‡(
is_2g
)

1248 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_65NM_RXRF_AGC
(
chaö
),

1249 
AR_PHY_65NM_RXRF_AGC_AGC2G_CALDAC_OVR
,

1250 
ã°
);

1252 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_65NM_RXRF_AGC
(
chaö
),

1253 
AR_PHY_65NM_RXRF_AGC_AGC5G_CALDAC_OVR
,

1254 
ã°
);

1255 
	`udñay
(100);

1256 
agc_out
 = 
	`REG_READ_FIELD
(
ah
, 
	`AR_PHY_65NM_RXRF_AGC
(
chaö
),

1257 
AR_PHY_65NM_RXRF_AGC_AGC_OUT
);

1258 
off£t
[
i
] = (
agc_out
) ? 0 : 1;

1259 
tŸÆ
 +(
off£t
[
i
] << (i - 1));

1262 i‡(
is_2g
)

1263 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_65NM_RXRF_AGC
(
chaö
),

1264 
AR_PHY_65NM_RXRF_AGC_AGC2G_CALDAC_OVR
, 
tŸÆ
);

1266 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_65NM_RXRF_AGC
(
chaö
),

1267 
AR_PHY_65NM_RXRF_AGC_AGC5G_CALDAC_OVR
, 
tŸÆ
);

1269 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_65NM_RXRF_GAINSTAGES
(
chaö
),

1270 
AR_PHY_65NM_RXRF_GAINSTAGES_RX_OVERRIDE
, 0);

1271 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_65NM_RXTX2
(
chaö
),

1272 
AR_PHY_65NM_RXTX2_RXON_OVR
, 0);

1273 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_65NM_RXRF_AGC
(
chaö
),

1274 
AR_PHY_65NM_RXRF_AGC_AGC_CAL_OVR
, 0);

1275 
	}
}

1277 
	$¨9003_hw_do_pc€m_m™uÆ_≥ak_ˇl
(
©h_hw
 *
ah
,

1278 
©h9k_ch™√l
 *
ch™
,

1279 
boﬁ
 
run_πt_ˇl
)

1281 
©h9k_hw_ˇl_d©a
 *
ˇld©a
 = 
ah
->caldata;

1282 
i
;

1284 i‡(!
	`AR_SREV_9462
(
ah
Ë&& !
	`AR_SREV_9565
◊hË&& !
	`AR_SREV_9485
(ah))

1287 i‡((
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_RTT
Ë&& !
run_πt_ˇl
)

1290 
i
 = 0; i < 
AR9300_MAX_CHAINS
; i++) {

1291 i‡(!(
ah
->
rxchaömask
 & (1 << 
i
)))

1293 
	`¨9003_hw_m™uÆ_≥ak_ˇl
(
ah
, 
i
, 
	`IS_CHAN_2GHZ
(
ch™
));

1296 i‡(
ˇld©a
)

1297 
	`£t_bô
(
SW_PKDET_DONE
, &
ˇld©a
->
ˇl_Êags
);

1299 i‡((
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_RTT
Ë&& 
ˇld©a
) {

1300 i‡(
	`IS_CHAN_2GHZ
(
ch™
)){

1301 
ˇld©a
->
ˇldac
[0] = 
	`REG_READ_FIELD
(
ah
,

1302 
	`AR_PHY_65NM_RXRF_AGC
(0),

1303 
AR_PHY_65NM_RXRF_AGC_AGC2G_CALDAC_OVR
);

1304 
ˇld©a
->
ˇldac
[1] = 
	`REG_READ_FIELD
(
ah
,

1305 
	`AR_PHY_65NM_RXRF_AGC
(1),

1306 
AR_PHY_65NM_RXRF_AGC_AGC2G_CALDAC_OVR
);

1308 
ˇld©a
->
ˇldac
[0] = 
	`REG_READ_FIELD
(
ah
,

1309 
	`AR_PHY_65NM_RXRF_AGC
(0),

1310 
AR_PHY_65NM_RXRF_AGC_AGC5G_CALDAC_OVR
);

1311 
ˇld©a
->
ˇldac
[1] = 
	`REG_READ_FIELD
(
ah
,

1312 
	`AR_PHY_65NM_RXRF_AGC
(1),

1313 
AR_PHY_65NM_RXRF_AGC_AGC5G_CALDAC_OVR
);

1316 
	}
}

1318 
	$¨9003_hw_˛_ˇl_po°_¥oc
(
©h_hw
 *
ah
, 
boﬁ
 
is_ªußbÀ
)

1320 
u32
 
˛_idx
[
AR9300_MAX_CHAINS
] = { 
AR_PHY_CL_TAB_0
,

1321 
AR_PHY_CL_TAB_1
,

1322 
AR_PHY_CL_TAB_2
 };

1323 
©h9k_hw_ˇl_d©a
 *
ˇld©a
 = 
ah
->caldata;

1324 
boﬁ
 
tx˛ˇl_d⁄e
 = 
Ál£
;

1325 
i
, 
j
;

1327 i‡(!
ˇld©a
 || !(
ah
->
íabÀd_ˇls
 & 
TX_CL_CAL
))

1330 
tx˛ˇl_d⁄e
 = !!(
	`REG_READ
(
ah
, 
AR_PHY_AGC_CONTROL
) &

1331 
AR_PHY_AGC_CONTROL_CLC_SUCCESS
);

1333 i‡(
	`ã°_bô
(
TXCLCAL_DONE
, &
ˇld©a
->
ˇl_Êags
)) {

1334 
i
 = 0; i < 
AR9300_MAX_CHAINS
; i++) {

1335 i‡(!(
ah
->
txchaömask
 & (1 << 
i
)))

1337 
j
 = 0; j < 
MAX_CL_TAB_ENTRY
; j++)

1338 
	`REG_WRITE
(
ah
, 
	`CL_TAB_ENTRY
(
˛_idx
[
i
]),

1339 
ˇld©a
->
tx_˛ˇl
[
i
][
j
]);

1341 } i‡(
is_ªußbÀ
 && 
tx˛ˇl_d⁄e
) {

1342 
i
 = 0; i < 
AR9300_MAX_CHAINS
; i++) {

1343 i‡(!(
ah
->
txchaömask
 & (1 << 
i
)))

1345 
j
 = 0; j < 
MAX_CL_TAB_ENTRY
; j++)

1346 
ˇld©a
->
tx_˛ˇl
[
i
][
j
] =

1347 
	`REG_READ
(
ah
, 
	`CL_TAB_ENTRY
(
˛_idx
[
i
]));

1349 
	`£t_bô
(
TXCLCAL_DONE
, &
ˇld©a
->
ˇl_Êags
);

1351 
	}
}

1353 
boﬁ
 
	$¨9003_hw_öô_ˇl_pc€m
(
©h_hw
 *
ah
,

1354 
©h9k_ch™√l
 *
ch™
)

1356 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1357 
©h9k_hw_ˇl_d©a
 *
ˇld©a
 = 
ah
->caldata;

1358 
boﬁ
 
txiqˇl_d⁄e
 = 
Ál£
;

1359 
boﬁ
 
is_ªußbÀ
 = 
åue
, 
°©us
 =Årue;

1360 
boﬁ
 
run_πt_ˇl
 = 
Ál£
, 
run_agc_ˇl
;

1361 
boﬁ
 
πt
 = !!(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_RTT
);

1362 
u32
 
rx_dñay
 = 0;

1363 
u32
 
agc_˘æ
 = 0, 
agc_suµ_ˇls
 = 
AR_PHY_AGC_CONTROL_OFFSET_CAL
 |

1364 
AR_PHY_AGC_CONTROL_FLTR_CAL
 |

1365 
AR_PHY_AGC_CONTROL_PKDET_CAL
;

1368 
	`¨9003_hw_£t_chaö_masks
(
ah
,áh->
ˇps
.
rx_chaömask
,áh->ˇps.
tx_chaömask
);

1370 i‡(
πt
) {

1371 i‡(!
	`¨9003_hw_πt_ª°‹e
(
ah
, 
ch™
))

1372 
run_πt_ˇl
 = 
åue
;

1374 i‡(
run_πt_ˇl
)

1375 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "RTT calibrationÅo be done\n");

1378 
run_agc_ˇl
 = 
run_πt_ˇl
;

1380 i‡(
run_πt_ˇl
) {

1381 
	`¨9003_hw_πt_íabÀ
(
ah
);

1382 
	`¨9003_hw_πt_£t_mask
(
ah
, 0x00);

1383 
	`¨9003_hw_πt_˛ór_hi°
(
ah
);

1386 i‡(
πt
) {

1387 i‡(!
run_πt_ˇl
) {

1388 
agc_˘æ
 = 
	`REG_READ
(
ah
, 
AR_PHY_AGC_CONTROL
);

1389 
agc_suµ_ˇls
 &
agc_˘æ
;

1390 
agc_˘æ
 &~(
AR_PHY_AGC_CONTROL_OFFSET_CAL
 |

1391 
AR_PHY_AGC_CONTROL_FLTR_CAL
 |

1392 
AR_PHY_AGC_CONTROL_PKDET_CAL
);

1393 
	`REG_WRITE
(
ah
, 
AR_PHY_AGC_CONTROL
, 
agc_˘æ
);

1395 i‡(
ah
->
ah_Êags
 & 
AH_FASTCC
)

1396 
run_agc_ˇl
 = 
åue
;

1400 i‡(
ah
->
íabÀd_ˇls
 & 
TX_CL_CAL
) {

1401 i‡(
ˇld©a
 && 
	`ã°_bô
(
TXCLCAL_DONE
, &ˇld©a->
ˇl_Êags
))

1402 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_CL_CAL_CTL
,

1403 
AR_PHY_CL_CAL_ENABLE
);

1405 
	`REG_SET_BIT
(
ah
, 
AR_PHY_CL_CAL_CTL
,

1406 
AR_PHY_CL_CAL_ENABLE
);

1407 
run_agc_ˇl
 = 
åue
;

1411 i‡((
	`IS_CHAN_HALF_RATE
(
ch™
Ë|| 
	`IS_CHAN_QUARTER_RATE
(chan)) ||

1412 !(
ah
->
íabÀd_ˇls
 & 
TX_IQ_CAL
))

1413 
skù_tx_iqˇl
;

1416 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TX_IQCAL_CONTROL_1
,

1417 
AR_PHY_TX_IQCAL_CONTROL_1_IQCORR_I_Q_COFF_DELPT
,

1418 
DELPT
);

1424 i‡(
ah
->
íabÀd_ˇls
 & 
TX_IQ_ON_AGC_CAL
) {

1425 i‡(
ˇld©a
 && !
	`ã°_bô
(
TXIQCAL_DONE
, &ˇld©a->
ˇl_Êags
))

1426 
	`REG_SET_BIT
(
ah
, 
AR_PHY_TX_IQCAL_CONTROL_0
,

1427 
AR_PHY_TX_IQCAL_CONTROL_0_ENABLE_TXIQ_CAL
);

1429 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_TX_IQCAL_CONTROL_0
,

1430 
AR_PHY_TX_IQCAL_CONTROL_0_ENABLE_TXIQ_CAL
);

1431 
txiqˇl_d⁄e
 = 
run_agc_ˇl
 = 
åue
;

1434 
skù_tx_iqˇl
:

1435 i‡(
	`©h9k_hw_mci_is_íabÀd
(
ah
Ë&& 
	`IS_CHAN_2GHZ
(
ch™
Ë&& 
run_agc_ˇl
)

1436 
	`¨9003_mci_öô_ˇl_ªq
(
ah
, &
is_ªußbÀ
);

1438 i‡(
	`REG_READ
(
ah
, 
AR_PHY_CL_CAL_CTL
Ë& 
AR_PHY_CL_CAL_ENABLE
) {

1439 
rx_dñay
 = 
	`REG_READ
(
ah
, 
AR_PHY_RX_DELAY
);

1441 
	`REG_WRITE
(
ah
, 
AR_PHY_ACTIVE
, 
AR_PHY_ACTIVE_DIS
);

1442 
	`udñay
(5);

1443 
	`REG_WRITE
(
ah
, 
AR_PHY_RX_DELAY
, 
AR_PHY_RX_DELAY_DELAY
);

1444 
	`REG_WRITE
(
ah
, 
AR_PHY_ACTIVE
, 
AR_PHY_ACTIVE_EN
);

1447 i‡(
run_agc_ˇl
 || !(
ah
->
ah_Êags
 & 
AH_FASTCC
)) {

1449 
	`REG_WRITE
(
ah
, 
AR_PHY_AGC_CONTROL
,

1450 
	`REG_READ
(
ah
, 
AR_PHY_AGC_CONTROL
) |

1451 
AR_PHY_AGC_CONTROL_CAL
);

1454 
°©us
 = 
	`©h9k_hw_waô
(
ah
, 
AR_PHY_AGC_CONTROL
,

1455 
AR_PHY_AGC_CONTROL_CAL
,

1456 0, 
AH_WAIT_TIMEOUT
);

1458 
	`¨9003_hw_do_pc€m_m™uÆ_≥ak_ˇl
(
ah
, 
ch™
, 
run_πt_ˇl
);

1461 i‡(
	`REG_READ
(
ah
, 
AR_PHY_CL_CAL_CTL
Ë& 
AR_PHY_CL_CAL_ENABLE
) {

1462 
	`REG_WRITE
(
ah
, 
AR_PHY_RX_DELAY
, 
rx_dñay
);

1463 
	`udñay
(5);

1466 i‡(
	`©h9k_hw_mci_is_íabÀd
(
ah
Ë&& 
	`IS_CHAN_2GHZ
(
ch™
Ë&& 
run_agc_ˇl
)

1467 
	`¨9003_mci_öô_ˇl_d⁄e
(
ah
);

1469 i‡(
πt
 && !
run_πt_ˇl
) {

1470 
agc_˘æ
 |
agc_suµ_ˇls
;

1471 
	`REG_WRITE
(
ah
, 
AR_PHY_AGC_CONTROL
, 
agc_˘æ
);

1474 i‡(!
°©us
) {

1475 i‡(
run_πt_ˇl
)

1476 
	`¨9003_hw_πt_dißbÀ
(
ah
);

1478 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

1480 
AH_WAIT_TIMEOUT
 / 1000);

1481  
Ál£
;

1484 i‡(
txiqˇl_d⁄e
)

1485 
	`¨9003_hw_tx_iq_ˇl_po°_¥oc
(
ah
, 0, 
is_ªußbÀ
);

1486 i‡(
ˇld©a
 && 
	`ã°_bô
(
TXIQCAL_DONE
, &ˇld©a->
ˇl_Êags
))

1487 
	`¨9003_hw_tx_iq_ˇl_ªlﬂd
(
ah
);

1489 
	`¨9003_hw_˛_ˇl_po°_¥oc
(
ah
, 
is_ªußbÀ
);

1491 i‡(
run_πt_ˇl
 && 
ˇld©a
) {

1492 i‡(
is_ªußbÀ
) {

1493 i‡(!
	`©h9k_hw_rfbus_ªq
(
ah
)) {

1494 
	`©h_îr
(
	`©h9k_hw_comm⁄
(
ah
),

1497 
	`¨9003_hw_πt_fûl_hi°
(
ah
);

1499 i‡(
	`ã°_bô
(
SW_PKDET_DONE
, &
ˇld©a
->
ˇl_Êags
))

1500 
	`¨9003_hw_πt_lﬂd_hi°
(
ah
);

1503 
	`©h9k_hw_rfbus_d⁄e
(
ah
);

1506 
	`¨9003_hw_πt_dißbÀ
(
ah
);

1510 
	`¨9003_hw_£t_chaö_masks
(
ah
,áh->
rxchaömask
,áh->
txchaömask
);

1513 
ah
->
ˇl_li°
 =áh->
ˇl_li°_œ°
 =áh->
ˇl_li°_cuº
 = 
NULL
;

1515 
	`INIT_CAL
(&
ah
->
iq_ˇld©a
);

1516 
	`INSERT_CAL
(
ah
, &ah->
iq_ˇld©a
);

1517 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "enabling IQ Calibration\n");

1520 
ah
->
ˇl_li°_cuº
 =áh->
ˇl_li°
;

1522 i‡(
ah
->
ˇl_li°_cuº
)

1523 
	`©h9k_hw_ª£t_ˇlibøti⁄
(
ah
,áh->
ˇl_li°_cuº
);

1525 i‡(
ˇld©a
)

1526 
ˇld©a
->
CÆVÆid
 = 0;

1528  
åue
;

1529 
	}
}

1531 
boﬁ
 
	$do_¨9003_agc_ˇl
(
©h_hw
 *
ah
)

1533 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1534 
boﬁ
 
°©us
;

1536 
	`REG_WRITE
(
ah
, 
AR_PHY_AGC_CONTROL
,

1537 
	`REG_READ
(
ah
, 
AR_PHY_AGC_CONTROL
) |

1538 
AR_PHY_AGC_CONTROL_CAL
);

1540 
°©us
 = 
	`©h9k_hw_waô
(
ah
, 
AR_PHY_AGC_CONTROL
,

1541 
AR_PHY_AGC_CONTROL_CAL
,

1542 0, 
AH_WAIT_TIMEOUT
);

1543 i‡(!
°©us
) {

1544 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

1547 
AH_WAIT_TIMEOUT
 / 1000);

1548  
Ál£
;

1551  
åue
;

1552 
	}
}

1554 
boﬁ
 
	$¨9003_hw_öô_ˇl_soc
(
©h_hw
 *
ah
,

1555 
©h9k_ch™√l
 *
ch™
)

1557 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1558 
©h9k_hw_ˇl_d©a
 *
ˇld©a
 = 
ah
->caldata;

1559 
boﬁ
 
txiqˇl_d⁄e
 = 
Ál£
;

1560 
boﬁ
 
°©us
 = 
åue
;

1561 
boﬁ
 
run_agc_ˇl
 = 
Ál£
, 
£p_iq_ˇl
 = false;

1562 
i
 = 0;

1565 
	`¨9003_hw_£t_chaö_masks
(
ah
,áh->
ˇps
.
rx_chaömask
,áh->ˇps.
tx_chaömask
);

1567 i‡(
ah
->
íabÀd_ˇls
 & 
TX_CL_CAL
) {

1568 
	`REG_SET_BIT
(
ah
, 
AR_PHY_CL_CAL_CTL
, 
AR_PHY_CL_CAL_ENABLE
);

1569 
run_agc_ˇl
 = 
åue
;

1572 i‡(
	`IS_CHAN_HALF_RATE
(
ch™
Ë|| 
	`IS_CHAN_QUARTER_RATE
(chan))

1573 
skù_tx_iqˇl
;

1576 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TX_IQCAL_CONTROL_1
,

1577 
AR_PHY_TX_IQCAL_CONTROL_1_IQCORR_I_Q_COFF_DELPT
,

1578 
DELPT
);

1584 i‡(
ah
->
íabÀd_ˇls
 & 
TX_IQ_ON_AGC_CAL
) {

1585 i‡(
	`REG_READ_FIELD
(
ah
, 
AR_PHY_TX_IQCAL_CONTROL_0
,

1586 
AR_PHY_TX_IQCAL_CONTROL_0_ENABLE_TXIQ_CAL
)) {

1587 
txiqˇl_d⁄e
 = 
åue
;

1589 
txiqˇl_d⁄e
 = 
Ál£
;

1591 
run_agc_ˇl
 = 
åue
;

1593 
£p_iq_ˇl
 = 
åue
;

1594 
run_agc_ˇl
 = 
åue
;

1600 i‡(
£p_iq_ˇl
) {

1601 
txiqˇl_d⁄e
 = 
	`¨9003_hw_tx_iq_ˇl_run
(
ah
);

1602 
	`REG_WRITE
(
ah
, 
AR_PHY_ACTIVE
, 
AR_PHY_ACTIVE_DIS
);

1603 
	`udñay
(5);

1604 
	`REG_WRITE
(
ah
, 
AR_PHY_ACTIVE
, 
AR_PHY_ACTIVE_EN
);

1607 i‡(
	`AR_SREV_9550
(
ah
Ë&& 
	`IS_CHAN_2GHZ
(
ch™
)) {

1608 i‡(!
	`¨9003_hw_dy«mic_osdac_£À˘i⁄
(
ah
, 
txiqˇl_d⁄e
))

1609  
Ál£
;

1612 
skù_tx_iqˇl
:

1613 i‡(
run_agc_ˇl
 || !(
ah
->
ah_Êags
 & 
AH_FASTCC
)) {

1614 i‡(
	`AR_SREV_9330_11
(
ah
))

1615 
	`¨9003_hw_m™uÆ_≥ak_ˇl
(
ah
, 0, 
	`IS_CHAN_2GHZ
(
ch™
));

1625 i‡(!
	`AR_SREV_9550
(
ah
)) {

1626 
°©us
 = 
	`do_¨9003_agc_ˇl
(
ah
);

1627 i‡(!
°©us
)

1628  
Ál£
;

1630 i‡(
txiqˇl_d⁄e
)

1631 
	`¨9003_hw_tx_iq_ˇl_po°_¥oc
(
ah
, 0, 
Ál£
);

1633 i‡(!
txiqˇl_d⁄e
) {

1634 
°©us
 = 
	`do_¨9003_agc_ˇl
(
ah
);

1635 i‡(!
°©us
)

1636  
Ál£
;

1638 
i
 = 0; i < 
MAXIQCAL
; i++) {

1639 
°©us
 = 
	`do_¨9003_agc_ˇl
(
ah
);

1640 i‡(!
°©us
)

1641  
Ál£
;

1642 
	`¨9003_hw_tx_iq_ˇl_po°_¥oc
(
ah
, 
i
, 
Ál£
);

1649 
	`¨9003_hw_£t_chaö_masks
(
ah
,áh->
rxchaömask
,áh->
txchaömask
);

1652 
ah
->
ˇl_li°
 =áh->
ˇl_li°_œ°
 =áh->
ˇl_li°_cuº
 = 
NULL
;

1654 
	`INIT_CAL
(&
ah
->
iq_ˇld©a
);

1655 
	`INSERT_CAL
(
ah
, &ah->
iq_ˇld©a
);

1656 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "enabling IQ Calibration\n");

1659 
ah
->
ˇl_li°_cuº
 =áh->
ˇl_li°
;

1661 i‡(
ah
->
ˇl_li°_cuº
)

1662 
	`©h9k_hw_ª£t_ˇlibøti⁄
(
ah
,áh->
ˇl_li°_cuº
);

1664 i‡(
ˇld©a
)

1665 
ˇld©a
->
CÆVÆid
 = 0;

1667  
åue
;

1668 
	}
}

1670 
	$¨9003_hw_©èch_ˇlib_›s
(
©h_hw
 *
ah
)

1672 
©h_hw_¥iv©e_›s
 *
¥iv_›s
 = 
	`©h9k_hw_¥iv©e_›s
(
ah
);

1673 
©h_hw_›s
 *
›s
 = 
	`©h9k_hw_›s
(
ah
);

1675 i‡(
	`AR_SREV_9485
(
ah
Ë|| 
	`AR_SREV_9462
◊hË|| 
	`AR_SREV_9565
(ah))

1676 
¥iv_›s
->
öô_ˇl
 = 
¨9003_hw_öô_ˇl_pc€m
;

1678 
¥iv_›s
->
öô_ˇl
 = 
¨9003_hw_öô_ˇl_soc
;

1680 
¥iv_›s
->
öô_ˇl_£âögs
 = 
¨9003_hw_öô_ˇl_£âögs
;

1681 
¥iv_›s
->
£tup_ˇlibøti⁄
 = 
¨9003_hw_£tup_ˇlibøti⁄
;

1683 
›s
->
ˇlibøã
 = 
¨9003_hw_ˇlibøã
;

1684 
	}
}

	@ar9003_eeprom.c

17 
	~<asm/u«lig√d.h
>

18 
	~"hw.h
"

19 
	~"¨9003_phy.h
"

20 
	~"¨9003_ì¥om.h
"

21 
	~"¨9003_mci.h
"

23 
	#COMP_HDR_LEN
 4

	)

24 
	#COMP_CKSUM_LEN
 2

	)

26 
	#LE16
(
x
Ë
	`˝u_to_À16
(x)

	)

27 
	#LE32
(
x
Ë
	`˝u_to_À32
(x)

	)

30 
	#EXT_ADDITIVE
 (0x8000)

	)

31 
	#CTL_11A_EXT
 (
CTL_11A
 | 
EXT_ADDITIVE
)

	)

32 
	#CTL_11G_EXT
 (
CTL_11G
 | 
EXT_ADDITIVE
)

	)

33 
	#CTL_11B_EXT
 (
CTL_11B
 | 
EXT_ADDITIVE
)

	)

35 
	#SUB_NUM_CTL_MODES_AT_5G_40
 2

	)

36 
	#SUB_NUM_CTL_MODES_AT_2G_40
 3

	)

38 
	#CTL
(
_çowî
, 
_Êag
Ë((_çowîË| ((_ÊagË<< 6))

	)

40 
	#EEPROM_DATA_LEN_9485
 1088

	)

42 
¨9003_hw_powî_öãΩﬁ©e
(
öt32_t
 
x
,

43 
öt32_t
 *
px
, i¡32_à*
py
, 
u_öt16_t
 
≈
);

45 c⁄° 
¨9300_ì¥om
 
	g¨9300_deÁu…
 = {

46 .
ì¥omVîsi⁄
 = 2,

47 .
	gãm∂©eVîsi⁄
 = 2,

48 .
	gmacAddr
 = {0, 2, 3, 4, 5, 6},

49 .
	gcu°D©a
 = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

51 .
	gba£EïHódî
 = {

52 .
ªgDmn
 = { 
LE16
(0), LE16(0x1f) },

53 .
	gtxrxMask
 = 0x77,

54 .
	g›C≠Fœgs
 = {

55 .
›Fœgs
 = 
AR5416_OPFLAGS_11G
 | 
AR5416_OPFLAGS_11A
,

56 .
	gìpMisc
 = 0,

58 .
	grfSûít
 = 0,

59 .
	gblueToŸhO±i⁄s
 = 0,

60 .
	gdevi˚C≠
 = 0,

61 .
	gdevi˚Ty≥
 = 5,

62 .
	gpwrTabÀOff£t
 = 
AR9300_PWR_TABLE_OFFSET
,

63 .
	g∑øms_f‹_tunög_ˇps
 = {0, 0},

64 .
	g„©uªE«bÀ
 = 0x0c,

73 .
	gmiscC⁄figuøti⁄
 = 0,

74 .
	gì¥omWrôeE«bÀGpio
 = 3,

75 .
	gwœnDißbÀGpio
 = 0,

76 .
	gwœnLedGpio
 = 8,

77 .
	grxB™dSñe˘Gpio
 = 0xff,

78 .
	gtxrxgaö
 = 0,

79 .
	gswªg
 = 0,

81 .
	gmodÆHódî2G
 = {

84 .
™tCålComm⁄
 = 
LE32
(0x110),

86 .
	g™tCålComm⁄2
 = 
LE32
(0x22222),

92 .
	g™tCålChaö
 = { 
LE16
(0x150), LE16(0x150), LE16(0x150) },

98 .
	gx©ãn1DB
 = {0, 0, 0},

104 .
	gx©ãn1M¨gö
 = {0, 0, 0},

105 .
	gãmpSl›e
 = 36,

106 .
	gvﬁtSl›e
 = 0,

112 .
	g•urCh™s
 = {0, 0, 0, 0, 0},

118 .
	gnoi£Flo‹ThªshCh
 = {-1, 0, 0},

119 .
	gª£rved
 = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},

120 .
	gquick_dr›
 = 0,

121 .
	gx∑BüsLvl
 = 0,

122 .
	gtxFømeToD©aSèπ
 = 0x0e,

123 .
	gtxFømeToPaOn
 = 0x0e,

124 .
	gtxClù
 = 3,

125 .
	g™ã¬aGaö
 = 0,

126 .
	gswôchSëéög
 = 0x2c,

127 .
	gadcDesúedSize
 = -30,

128 .
	gtxEndToX∑Off
 = 0,

129 .
	gtxEndToRxOn
 = 0x2,

130 .
	gtxFømeToX∑On
 = 0xe,

131 .
	gthªsh62
 = 28,

132 .
	g∑pdR©eMaskHt20
 = 
LE32
(0x0cf0e0e0),

133 .
	g∑pdR©eMaskHt40
 = 
LE32
(0x6cf0e0e0),

134 .
	gswôchcom•dt
 = 0,

135 .
	gx a_büs_°ªngth
 = 0,

136 .
	gfutuªModÆ
 = {

140 .
	gba£_ext1
 = {

141 .
™t_div_c⁄åﬁ
 = 0,

142 .
	gfutuª
 = {0, 0},

143 .
	gãmp¶›exãnsi⁄
 = {0, 0, 0, 0, 0, 0, 0, 0}

145 .
	gˇlFªqPõr2G
 = {

146 
FREQ2FBIN
(2412, 1),

147 
FREQ2FBIN
(2437, 1),

148 
FREQ2FBIN
(2472, 1),

151 .
	gˇlPõrD©a2G
 = {

156 .
	gˇlT¨gë_‰eqbö_Cck
 = {

157 
FREQ2FBIN
(2412, 1),

158 
FREQ2FBIN
(2484, 1),

160 .
	gˇlT¨gë_‰eqbö_2G
 = {

161 
FREQ2FBIN
(2412, 1),

162 
FREQ2FBIN
(2437, 1),

163 
FREQ2FBIN
(2472, 1)

165 .
	gˇlT¨gë_‰eqbö_2GHT20
 = {

166 
FREQ2FBIN
(2412, 1),

167 
FREQ2FBIN
(2437, 1),

168 
FREQ2FBIN
(2472, 1)

170 .
	gˇlT¨gë_‰eqbö_2GHT40
 = {

171 
FREQ2FBIN
(2412, 1),

172 
FREQ2FBIN
(2437, 1),

173 
FREQ2FBIN
(2472, 1)

175 .
	gˇlT¨gëPowîCck
 = {

180 .
	gˇlT¨gëPowî2G
 = {

186 .
	gˇlT¨gëPowî2GHT20
 = {

191 .
	gˇlT¨gëPowî2GHT40
 = {

196 .
	g˘lIndex_2G
 = {

200 .
	g˘l_‰eqbö_2G
 = {

202 
FREQ2FBIN
(2412, 1),

203 
FREQ2FBIN
(2417, 1),

204 
FREQ2FBIN
(2457, 1),

205 
FREQ2FBIN
(2462, 1)

208 
FREQ2FBIN
(2412, 1),

209 
FREQ2FBIN
(2417, 1),

210 
FREQ2FBIN
(2462, 1),

215 
FREQ2FBIN
(2412, 1),

216 
FREQ2FBIN
(2417, 1),

217 
FREQ2FBIN
(2462, 1),

221 
FREQ2FBIN
(2422, 1),

222 
FREQ2FBIN
(2427, 1),

223 
FREQ2FBIN
(2447, 1),

224 
FREQ2FBIN
(2452, 1)

228  
FREQ2FBIN
(2412, 1),

229  
FREQ2FBIN
(2417, 1),

230  
FREQ2FBIN
(2472, 1),

231  
FREQ2FBIN
(2484, 1),

235  
FREQ2FBIN
(2412, 1),

236  
FREQ2FBIN
(2417, 1),

237  
FREQ2FBIN
(2472, 1),

242  
FREQ2FBIN
(2412, 1),

243  
FREQ2FBIN
(2417, 1),

244 
FREQ2FBIN
(2472, 1),

249  
FREQ2FBIN
(2422, 1),

250  
FREQ2FBIN
(2427, 1),

251  
FREQ2FBIN
(2447, 1),

252  
FREQ2FBIN
(2462, 1),

256  
FREQ2FBIN
(2412, 1),

257  
FREQ2FBIN
(2417, 1),

258  
FREQ2FBIN
(2472, 1),

262  
FREQ2FBIN
(2412, 1),

263  
FREQ2FBIN
(2417, 1),

264  
FREQ2FBIN
(2472, 1),

269  
FREQ2FBIN
(2412, 1),

270  
FREQ2FBIN
(2417, 1),

271  
FREQ2FBIN
(2472, 1),

276  
FREQ2FBIN
(2422, 1),

277  
FREQ2FBIN
(2427, 1),

278  
FREQ2FBIN
(2447, 1),

279  
FREQ2FBIN
(2462, 1),

282 .
	g˘lPowîD©a_2G
 = {

283 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

284 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

285 { { 
CTL
(60, 1), CTL(60, 0), CTL(60, 0), CTL(60, 1) } },

287 { { 
CTL
(60, 1), CTL(60, 0), CTL(60, 0), CTL(60, 0) } },

288 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

289 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

291 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 1), CTL(60, 0) } },

292 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

293 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

295 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

296 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 1), CTL(60, 1) } },

297 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 1), CTL(60, 1) } },

299 .
	gmodÆHódî5G
 = {

301 .
™tCålComm⁄
 = 
LE32
(0x110),

303 .
	g™tCålComm⁄2
 = 
LE32
(0x22222),

305 .
	g™tCålChaö
 = {

306 
LE16
(0x000), LE16(0x000), LE16(0x000),

309 .
	gx©ãn1DB
 = {0, 0, 0},

315 .
	gx©ãn1M¨gö
 = {0, 0, 0},

316 .
	gãmpSl›e
 = 68,

317 .
	gvﬁtSl›e
 = 0,

319 .
	g•urCh™s
 = {0, 0, 0, 0, 0},

321 .
	gnoi£Flo‹ThªshCh
 = {-1, 0, 0},

322 .
	gª£rved
 = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},

323 .
	gquick_dr›
 = 0,

324 .
	gx∑BüsLvl
 = 0,

325 .
	gtxFømeToD©aSèπ
 = 0x0e,

326 .
	gtxFømeToPaOn
 = 0x0e,

327 .
	gtxClù
 = 3,

328 .
	g™ã¬aGaö
 = 0,

329 .
	gswôchSëéög
 = 0x2d,

330 .
	gadcDesúedSize
 = -30,

331 .
	gtxEndToX∑Off
 = 0,

332 .
	gtxEndToRxOn
 = 0x2,

333 .
	gtxFømeToX∑On
 = 0xe,

334 .
	gthªsh62
 = 28,

335 .
	g∑pdR©eMaskHt20
 = 
LE32
(0x0c80c080),

336 .
	g∑pdR©eMaskHt40
 = 
LE32
(0x0080c080),

337 .
	gswôchcom•dt
 = 0,

338 .
	gx a_büs_°ªngth
 = 0,

339 .
	gfutuªModÆ
 = {

343 .
	gba£_ext2
 = {

344 .
ãmpSl›eLow
 = 0,

345 .
	gãmpSl›eHigh
 = 0,

346 .
	gx©ãn1DBLow
 = {0, 0, 0},

347 .
	gx©ãn1M¨göLow
 = {0, 0, 0},

348 .
	gx©ãn1DBHigh
 = {0, 0, 0},

349 .
	gx©ãn1M¨göHigh
 = {0, 0, 0}

351 .
	gˇlFªqPõr5G
 = {

352 
FREQ2FBIN
(5180, 0),

353 
FREQ2FBIN
(5220, 0),

354 
FREQ2FBIN
(5320, 0),

355 
FREQ2FBIN
(5400, 0),

356 
FREQ2FBIN
(5500, 0),

357 
FREQ2FBIN
(5600, 0),

358 
FREQ2FBIN
(5725, 0),

359 
FREQ2FBIN
(5825, 0)

361 .
	gˇlPõrD©a5G
 = {

394 .
	gˇlT¨gë_‰eqbö_5G
 = {

395 
FREQ2FBIN
(5180, 0),

396 
FREQ2FBIN
(5220, 0),

397 
FREQ2FBIN
(5320, 0),

398 
FREQ2FBIN
(5400, 0),

399 
FREQ2FBIN
(5500, 0),

400 
FREQ2FBIN
(5600, 0),

401 
FREQ2FBIN
(5725, 0),

402 
FREQ2FBIN
(5825, 0)

404 .
	gˇlT¨gë_‰eqbö_5GHT20
 = {

405 
FREQ2FBIN
(5180, 0),

406 
FREQ2FBIN
(5240, 0),

407 
FREQ2FBIN
(5320, 0),

408 
FREQ2FBIN
(5500, 0),

409 
FREQ2FBIN
(5700, 0),

410 
FREQ2FBIN
(5745, 0),

411 
FREQ2FBIN
(5725, 0),

412 
FREQ2FBIN
(5825, 0)

414 .
	gˇlT¨gë_‰eqbö_5GHT40
 = {

415 
FREQ2FBIN
(5180, 0),

416 
FREQ2FBIN
(5240, 0),

417 
FREQ2FBIN
(5320, 0),

418 
FREQ2FBIN
(5500, 0),

419 
FREQ2FBIN
(5700, 0),

420 
FREQ2FBIN
(5745, 0),

421 
FREQ2FBIN
(5725, 0),

422 
FREQ2FBIN
(5825, 0)

424 .
	gˇlT¨gëPowî5G
 = {

435 .
	gˇlT¨gëPowî5GHT20
 = {

449 .
	gˇlT¨gëPowî5GHT40
 = {

463 .
	g˘lIndex_5G
 = {

467 .
	g˘l_‰eqbö_5G
 = {

469  
FREQ2FBIN
(5180, 0),

470  
FREQ2FBIN
(5260, 0),

471  
FREQ2FBIN
(5280, 0),

472  
FREQ2FBIN
(5500, 0),

473  
FREQ2FBIN
(5600, 0),

474  
FREQ2FBIN
(5700, 0),

475  
FREQ2FBIN
(5745, 0),

476  
FREQ2FBIN
(5825, 0)

479  
FREQ2FBIN
(5180, 0),

480  
FREQ2FBIN
(5260, 0),

481  
FREQ2FBIN
(5280, 0),

482  
FREQ2FBIN
(5500, 0),

483  
FREQ2FBIN
(5520, 0),

484  
FREQ2FBIN
(5700, 0),

485  
FREQ2FBIN
(5745, 0),

486  
FREQ2FBIN
(5825, 0)

490  
FREQ2FBIN
(5190, 0),

491  
FREQ2FBIN
(5230, 0),

492  
FREQ2FBIN
(5270, 0),

493  
FREQ2FBIN
(5310, 0),

494  
FREQ2FBIN
(5510, 0),

495  
FREQ2FBIN
(5550, 0),

496  
FREQ2FBIN
(5670, 0),

497  
FREQ2FBIN
(5755, 0)

501  
FREQ2FBIN
(5180, 0),

502  
FREQ2FBIN
(5200, 0),

503  
FREQ2FBIN
(5260, 0),

504  
FREQ2FBIN
(5320, 0),

505  
FREQ2FBIN
(5500, 0),

506  
FREQ2FBIN
(5700, 0),

512  
FREQ2FBIN
(5180, 0),

513  
FREQ2FBIN
(5260, 0),

514  
FREQ2FBIN
(5500, 0),

515  
FREQ2FBIN
(5700, 0),

523  
FREQ2FBIN
(5190, 0),

524  
FREQ2FBIN
(5270, 0),

525  
FREQ2FBIN
(5310, 0),

526  
FREQ2FBIN
(5510, 0),

527  
FREQ2FBIN
(5590, 0),

528  
FREQ2FBIN
(5670, 0),

534  
FREQ2FBIN
(5180, 0),

535  
FREQ2FBIN
(5200, 0),

536  
FREQ2FBIN
(5220, 0),

537  
FREQ2FBIN
(5260, 0),

538  
FREQ2FBIN
(5500, 0),

539  
FREQ2FBIN
(5600, 0),

540  
FREQ2FBIN
(5700, 0),

541  
FREQ2FBIN
(5745, 0)

545  
FREQ2FBIN
(5180, 0),

546  
FREQ2FBIN
(5260, 0),

547  
FREQ2FBIN
(5320, 0),

548  
FREQ2FBIN
(5500, 0),

549  
FREQ2FBIN
(5560, 0),

550  
FREQ2FBIN
(5700, 0),

551  
FREQ2FBIN
(5745, 0),

552  
FREQ2FBIN
(5825, 0)

556  
FREQ2FBIN
(5190, 0),

557  
FREQ2FBIN
(5230, 0),

558  
FREQ2FBIN
(5270, 0),

559  
FREQ2FBIN
(5510, 0),

560  
FREQ2FBIN
(5550, 0),

561  
FREQ2FBIN
(5670, 0),

562  
FREQ2FBIN
(5755, 0),

563  
FREQ2FBIN
(5795, 0)

566 .
	g˘lPowîD©a_5G
 = {

569 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

570 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 0),

575 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

576 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 0),

581 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 1),

582 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

587 
CTL
(60, 0), CTL(60, 1), CTL(60, 1), CTL(60, 0),

588 
CTL
(60, 1), CTL(60, 0), CTL(60, 0), CTL(60, 0),

593 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 0),

594 
CTL
(60, 0), CTL(60, 0), CTL(60, 0), CTL(60, 0),

599 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

600 
CTL
(60, 1), CTL(60, 0), CTL(60, 0), CTL(60, 0),

605 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

606 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

611 
CTL
(60, 1), CTL(60, 1), CTL(60, 0), CTL(60, 1),

612 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 0),

617 
CTL
(60, 1), CTL(60, 0), CTL(60, 1), CTL(60, 1),

618 
CTL
(60, 1), CTL(60, 1), CTL(60, 0), CTL(60, 1),

624 c⁄° 
¨9300_ì¥om
 
	g¨9300_x113
 = {

625 .
ì¥omVîsi⁄
 = 2,

626 .
	gãm∂©eVîsi⁄
 = 6,

627 .
	gmacAddr
 = {0x00, 0x03, 0x7f, 0x0, 0x0, 0x0},

628 .
	gcu°D©a
 = {"x113-023-f0000"},

629 .
	gba£EïHódî
 = {

630 .
ªgDmn
 = { 
LE16
(0), LE16(0x1f) },

631 .
	gtxrxMask
 = 0x77,

632 .
	g›C≠Fœgs
 = {

633 .
›Fœgs
 = 
AR5416_OPFLAGS_11A
,

634 .
	gìpMisc
 = 0,

636 .
	grfSûít
 = 0,

637 .
	gblueToŸhO±i⁄s
 = 0,

638 .
	gdevi˚C≠
 = 0,

639 .
	gdevi˚Ty≥
 = 5,

640 .
	gpwrTabÀOff£t
 = 
AR9300_PWR_TABLE_OFFSET
,

641 .
	g∑øms_f‹_tunög_ˇps
 = {0, 0},

642 .
	g„©uªE«bÀ
 = 0x0d,

651 .
	gmiscC⁄figuøti⁄
 = 0,

652 .
	gì¥omWrôeE«bÀGpio
 = 6,

653 .
	gwœnDißbÀGpio
 = 0,

654 .
	gwœnLedGpio
 = 8,

655 .
	grxB™dSñe˘Gpio
 = 0xff,

656 .
	gtxrxgaö
 = 0x21,

657 .
	gswªg
 = 0,

659 .
	gmodÆHódî2G
 = {

662 .
™tCålComm⁄
 = 
LE32
(0x110),

664 .
	g™tCålComm⁄2
 = 
LE32
(0x44444),

670 .
	g™tCålChaö
 = { 
LE16
(0x150), LE16(0x150), LE16(0x150) },

676 .
	gx©ãn1DB
 = {0, 0, 0},

682 .
	gx©ãn1M¨gö
 = {0, 0, 0},

683 .
	gãmpSl›e
 = 25,

684 .
	gvﬁtSl›e
 = 0,

690 .
	g•urCh™s
 = {
FREQ2FBIN
(2464, 1), 0, 0, 0, 0},

696 .
	gnoi£Flo‹ThªshCh
 = {-1, 0, 0},

697 .
	gª£rved
 = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},

698 .
	gquick_dr›
 = 0,

699 .
	gx∑BüsLvl
 = 0,

700 .
	gtxFømeToD©aSèπ
 = 0x0e,

701 .
	gtxFømeToPaOn
 = 0x0e,

702 .
	gtxClù
 = 3,

703 .
	g™ã¬aGaö
 = 0,

704 .
	gswôchSëéög
 = 0x2c,

705 .
	gadcDesúedSize
 = -30,

706 .
	gtxEndToX∑Off
 = 0,

707 .
	gtxEndToRxOn
 = 0x2,

708 .
	gtxFømeToX∑On
 = 0xe,

709 .
	gthªsh62
 = 28,

710 .
	g∑pdR©eMaskHt20
 = 
LE32
(0x0c80c080),

711 .
	g∑pdR©eMaskHt40
 = 
LE32
(0x0080c080),

712 .
	gswôchcom•dt
 = 0,

713 .
	gx a_büs_°ªngth
 = 0,

714 .
	gfutuªModÆ
 = {

718 .
	gba£_ext1
 = {

719 .
™t_div_c⁄åﬁ
 = 0,

720 .
	gfutuª
 = {0, 0},

721 .
	gãmp¶›exãnsi⁄
 = {0, 0, 0, 0, 0, 0, 0, 0}

723 .
	gˇlFªqPõr2G
 = {

724 
FREQ2FBIN
(2412, 1),

725 
FREQ2FBIN
(2437, 1),

726 
FREQ2FBIN
(2472, 1),

729 .
	gˇlPõrD©a2G
 = {

734 .
	gˇlT¨gë_‰eqbö_Cck
 = {

735 
FREQ2FBIN
(2412, 1),

736 
FREQ2FBIN
(2472, 1),

738 .
	gˇlT¨gë_‰eqbö_2G
 = {

739 
FREQ2FBIN
(2412, 1),

740 
FREQ2FBIN
(2437, 1),

741 
FREQ2FBIN
(2472, 1)

743 .
	gˇlT¨gë_‰eqbö_2GHT20
 = {

744 
FREQ2FBIN
(2412, 1),

745 
FREQ2FBIN
(2437, 1),

746 
FREQ2FBIN
(2472, 1)

748 .
	gˇlT¨gë_‰eqbö_2GHT40
 = {

749 
FREQ2FBIN
(2412, 1),

750 
FREQ2FBIN
(2437, 1),

751 
FREQ2FBIN
(2472, 1)

753 .
	gˇlT¨gëPowîCck
 = {

758 .
	gˇlT¨gëPowî2G
 = {

764 .
	gˇlT¨gëPowî2GHT20
 = {

769 .
	gˇlT¨gëPowî2GHT40
 = {

774 .
	g˘lIndex_2G
 = {

778 .
	g˘l_‰eqbö_2G
 = {

780 
FREQ2FBIN
(2412, 1),

781 
FREQ2FBIN
(2417, 1),

782 
FREQ2FBIN
(2457, 1),

783 
FREQ2FBIN
(2462, 1)

786 
FREQ2FBIN
(2412, 1),

787 
FREQ2FBIN
(2417, 1),

788 
FREQ2FBIN
(2462, 1),

793 
FREQ2FBIN
(2412, 1),

794 
FREQ2FBIN
(2417, 1),

795 
FREQ2FBIN
(2462, 1),

799 
FREQ2FBIN
(2422, 1),

800 
FREQ2FBIN
(2427, 1),

801 
FREQ2FBIN
(2447, 1),

802 
FREQ2FBIN
(2452, 1)

806  
FREQ2FBIN
(2412, 1),

807  
FREQ2FBIN
(2417, 1),

808  
FREQ2FBIN
(2472, 1),

809  
FREQ2FBIN
(2484, 1),

813  
FREQ2FBIN
(2412, 1),

814  
FREQ2FBIN
(2417, 1),

815  
FREQ2FBIN
(2472, 1),

820  
FREQ2FBIN
(2412, 1),

821  
FREQ2FBIN
(2417, 1),

822 
FREQ2FBIN
(2472, 1),

827  
FREQ2FBIN
(2422, 1),

828  
FREQ2FBIN
(2427, 1),

829  
FREQ2FBIN
(2447, 1),

830  
FREQ2FBIN
(2462, 1),

834  
FREQ2FBIN
(2412, 1),

835  
FREQ2FBIN
(2417, 1),

836  
FREQ2FBIN
(2472, 1),

840  
FREQ2FBIN
(2412, 1),

841  
FREQ2FBIN
(2417, 1),

842  
FREQ2FBIN
(2472, 1),

847  
FREQ2FBIN
(2412, 1),

848  
FREQ2FBIN
(2417, 1),

849  
FREQ2FBIN
(2472, 1),

854  
FREQ2FBIN
(2422, 1),

855  
FREQ2FBIN
(2427, 1),

856  
FREQ2FBIN
(2447, 1),

857  
FREQ2FBIN
(2462, 1),

860 .
	g˘lPowîD©a_2G
 = {

861 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

862 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

863 { { 
CTL
(60, 1), CTL(60, 0), CTL(60, 0), CTL(60, 1) } },

865 { { 
CTL
(60, 1), CTL(60, 0), CTL(60, 0), CTL(60, 0) } },

866 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

867 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

869 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 1), CTL(60, 0) } },

870 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

871 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

873 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

874 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 1), CTL(60, 1) } },

875 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 1), CTL(60, 1) } },

877 .
	gmodÆHódî5G
 = {

879 .
™tCålComm⁄
 = 
LE32
(0x220),

881 .
	g™tCålComm⁄2
 = 
LE32
(0x11111),

883 .
	g™tCålChaö
 = {

884 
LE16
(0x150), LE16(0x150), LE16(0x150),

887 .
	gx©ãn1DB
 = {0, 0, 0},

893 .
	gx©ãn1M¨gö
 = {0, 0, 0},

894 .
	gãmpSl›e
 = 68,

895 .
	gvﬁtSl›e
 = 0,

897 .
	g•urCh™s
 = {
FREQ2FBIN
(5500, 0), 0, 0, 0, 0},

899 .
	gnoi£Flo‹ThªshCh
 = {-1, 0, 0},

900 .
	gª£rved
 = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},

901 .
	gquick_dr›
 = 0,

902 .
	gx∑BüsLvl
 = 0xf,

903 .
	gtxFømeToD©aSèπ
 = 0x0e,

904 .
	gtxFømeToPaOn
 = 0x0e,

905 .
	gtxClù
 = 3,

906 .
	g™ã¬aGaö
 = 0,

907 .
	gswôchSëéög
 = 0x2d,

908 .
	gadcDesúedSize
 = -30,

909 .
	gtxEndToX∑Off
 = 0,

910 .
	gtxEndToRxOn
 = 0x2,

911 .
	gtxFømeToX∑On
 = 0xe,

912 .
	gthªsh62
 = 28,

913 .
	g∑pdR©eMaskHt20
 = 
LE32
(0x0cf0e0e0),

914 .
	g∑pdR©eMaskHt40
 = 
LE32
(0x6cf0e0e0),

915 .
	gswôchcom•dt
 = 0,

916 .
	gx a_büs_°ªngth
 = 0,

917 .
	gfutuªModÆ
 = {

921 .
	gba£_ext2
 = {

922 .
ãmpSl›eLow
 = 72,

923 .
	gãmpSl›eHigh
 = 105,

924 .
	gx©ãn1DBLow
 = {0, 0, 0},

925 .
	gx©ãn1M¨göLow
 = {0, 0, 0},

926 .
	gx©ãn1DBHigh
 = {0, 0, 0},

927 .
	gx©ãn1M¨göHigh
 = {0, 0, 0}

929 .
	gˇlFªqPõr5G
 = {

930 
FREQ2FBIN
(5180, 0),

931 
FREQ2FBIN
(5240, 0),

932 
FREQ2FBIN
(5320, 0),

933 
FREQ2FBIN
(5400, 0),

934 
FREQ2FBIN
(5500, 0),

935 
FREQ2FBIN
(5600, 0),

936 
FREQ2FBIN
(5745, 0),

937 
FREQ2FBIN
(5785, 0)

939 .
	gˇlPõrD©a5G
 = {

972 .
	gˇlT¨gë_‰eqbö_5G
 = {

973 
FREQ2FBIN
(5180, 0),

974 
FREQ2FBIN
(5220, 0),

975 
FREQ2FBIN
(5320, 0),

976 
FREQ2FBIN
(5400, 0),

977 
FREQ2FBIN
(5500, 0),

978 
FREQ2FBIN
(5600, 0),

979 
FREQ2FBIN
(5745, 0),

980 
FREQ2FBIN
(5785, 0)

982 .
	gˇlT¨gë_‰eqbö_5GHT20
 = {

983 
FREQ2FBIN
(5180, 0),

984 
FREQ2FBIN
(5240, 0),

985 
FREQ2FBIN
(5320, 0),

986 
FREQ2FBIN
(5400, 0),

987 
FREQ2FBIN
(5500, 0),

988 
FREQ2FBIN
(5700, 0),

989 
FREQ2FBIN
(5745, 0),

990 
FREQ2FBIN
(5825, 0)

992 .
	gˇlT¨gë_‰eqbö_5GHT40
 = {

993 
FREQ2FBIN
(5190, 0),

994 
FREQ2FBIN
(5230, 0),

995 
FREQ2FBIN
(5320, 0),

996 
FREQ2FBIN
(5410, 0),

997 
FREQ2FBIN
(5510, 0),

998 
FREQ2FBIN
(5670, 0),

999 
FREQ2FBIN
(5755, 0),

1000 
FREQ2FBIN
(5825, 0)

1002 .
	gˇlT¨gëPowî5G
 = {

1013 .
	gˇlT¨gëPowî5GHT20
 = {

1027 .
	gˇlT¨gëPowî5GHT40
 = {

1041 .
	g˘lIndex_5G
 = {

1045 .
	g˘l_‰eqbö_5G
 = {

1047  
FREQ2FBIN
(5180, 0),

1048  
FREQ2FBIN
(5260, 0),

1049  
FREQ2FBIN
(5280, 0),

1050  
FREQ2FBIN
(5500, 0),

1051  
FREQ2FBIN
(5600, 0),

1052  
FREQ2FBIN
(5700, 0),

1053  
FREQ2FBIN
(5745, 0),

1054  
FREQ2FBIN
(5825, 0)

1057  
FREQ2FBIN
(5180, 0),

1058  
FREQ2FBIN
(5260, 0),

1059  
FREQ2FBIN
(5280, 0),

1060  
FREQ2FBIN
(5500, 0),

1061  
FREQ2FBIN
(5520, 0),

1062  
FREQ2FBIN
(5700, 0),

1063  
FREQ2FBIN
(5745, 0),

1064  
FREQ2FBIN
(5825, 0)

1068  
FREQ2FBIN
(5190, 0),

1069  
FREQ2FBIN
(5230, 0),

1070  
FREQ2FBIN
(5270, 0),

1071  
FREQ2FBIN
(5310, 0),

1072  
FREQ2FBIN
(5510, 0),

1073  
FREQ2FBIN
(5550, 0),

1074  
FREQ2FBIN
(5670, 0),

1075  
FREQ2FBIN
(5755, 0)

1079  
FREQ2FBIN
(5180, 0),

1080  
FREQ2FBIN
(5200, 0),

1081  
FREQ2FBIN
(5260, 0),

1082  
FREQ2FBIN
(5320, 0),

1083  
FREQ2FBIN
(5500, 0),

1084  
FREQ2FBIN
(5700, 0),

1090  
FREQ2FBIN
(5180, 0),

1091  
FREQ2FBIN
(5260, 0),

1092  
FREQ2FBIN
(5500, 0),

1093  
FREQ2FBIN
(5700, 0),

1101  
FREQ2FBIN
(5190, 0),

1102  
FREQ2FBIN
(5270, 0),

1103  
FREQ2FBIN
(5310, 0),

1104  
FREQ2FBIN
(5510, 0),

1105  
FREQ2FBIN
(5590, 0),

1106  
FREQ2FBIN
(5670, 0),

1112  
FREQ2FBIN
(5180, 0),

1113  
FREQ2FBIN
(5200, 0),

1114  
FREQ2FBIN
(5220, 0),

1115  
FREQ2FBIN
(5260, 0),

1116  
FREQ2FBIN
(5500, 0),

1117  
FREQ2FBIN
(5600, 0),

1118  
FREQ2FBIN
(5700, 0),

1119  
FREQ2FBIN
(5745, 0)

1123  
FREQ2FBIN
(5180, 0),

1124  
FREQ2FBIN
(5260, 0),

1125  
FREQ2FBIN
(5320, 0),

1126  
FREQ2FBIN
(5500, 0),

1127  
FREQ2FBIN
(5560, 0),

1128  
FREQ2FBIN
(5700, 0),

1129  
FREQ2FBIN
(5745, 0),

1130  
FREQ2FBIN
(5825, 0)

1134  
FREQ2FBIN
(5190, 0),

1135  
FREQ2FBIN
(5230, 0),

1136  
FREQ2FBIN
(5270, 0),

1137  
FREQ2FBIN
(5510, 0),

1138  
FREQ2FBIN
(5550, 0),

1139  
FREQ2FBIN
(5670, 0),

1140  
FREQ2FBIN
(5755, 0),

1141  
FREQ2FBIN
(5795, 0)

1144 .
	g˘lPowîD©a_5G
 = {

1147 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

1148 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 0),

1153 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

1154 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 0),

1159 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 1),

1160 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

1165 
CTL
(60, 0), CTL(60, 1), CTL(60, 1), CTL(60, 0),

1166 
CTL
(60, 1), CTL(60, 0), CTL(60, 0), CTL(60, 0),

1171 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 0),

1172 
CTL
(60, 0), CTL(60, 0), CTL(60, 0), CTL(60, 0),

1177 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

1178 
CTL
(60, 1), CTL(60, 0), CTL(60, 0), CTL(60, 0),

1183 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

1184 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

1189 
CTL
(60, 1), CTL(60, 1), CTL(60, 0), CTL(60, 1),

1190 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 0),

1195 
CTL
(60, 1), CTL(60, 0), CTL(60, 1), CTL(60, 1),

1196 
CTL
(60, 1), CTL(60, 1), CTL(60, 0), CTL(60, 1),

1203 c⁄° 
¨9300_ì¥om
 
	g¨9300_h112
 = {

1204 .
ì¥omVîsi⁄
 = 2,

1205 .
	gãm∂©eVîsi⁄
 = 3,

1206 .
	gmacAddr
 = {0x00, 0x03, 0x7f, 0x0, 0x0, 0x0},

1207 .
	gcu°D©a
 = {"h112-241-f0000"},

1208 .
	gba£EïHódî
 = {

1209 .
ªgDmn
 = { 
LE16
(0), LE16(0x1f) },

1210 .
	gtxrxMask
 = 0x77,

1211 .
	g›C≠Fœgs
 = {

1212 .
›Fœgs
 = 
AR5416_OPFLAGS_11G
 | 
AR5416_OPFLAGS_11A
,

1213 .
	gìpMisc
 = 0,

1215 .
	grfSûít
 = 0,

1216 .
	gblueToŸhO±i⁄s
 = 0,

1217 .
	gdevi˚C≠
 = 0,

1218 .
	gdevi˚Ty≥
 = 5,

1219 .
	gpwrTabÀOff£t
 = 
AR9300_PWR_TABLE_OFFSET
,

1220 .
	g∑øms_f‹_tunög_ˇps
 = {0, 0},

1221 .
	g„©uªE«bÀ
 = 0x0d,

1230 .
	gmiscC⁄figuøti⁄
 = 0,

1231 .
	gì¥omWrôeE«bÀGpio
 = 6,

1232 .
	gwœnDißbÀGpio
 = 0,

1233 .
	gwœnLedGpio
 = 8,

1234 .
	grxB™dSñe˘Gpio
 = 0xff,

1235 .
	gtxrxgaö
 = 0x10,

1236 .
	gswªg
 = 0,

1238 .
	gmodÆHódî2G
 = {

1241 .
™tCålComm⁄
 = 
LE32
(0x110),

1243 .
	g™tCålComm⁄2
 = 
LE32
(0x44444),

1249 .
	g™tCålChaö
 = { 
LE16
(0x150), LE16(0x150), LE16(0x150) },

1255 .
	gx©ãn1DB
 = {0, 0, 0},

1261 .
	gx©ãn1M¨gö
 = {0, 0, 0},

1262 .
	gãmpSl›e
 = 25,

1263 .
	gvﬁtSl›e
 = 0,

1269 .
	g•urCh™s
 = {
FREQ2FBIN
(2464, 1), 0, 0, 0, 0},

1275 .
	gnoi£Flo‹ThªshCh
 = {-1, 0, 0},

1276 .
	gª£rved
 = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},

1277 .
	gquick_dr›
 = 0,

1278 .
	gx∑BüsLvl
 = 0,

1279 .
	gtxFømeToD©aSèπ
 = 0x0e,

1280 .
	gtxFømeToPaOn
 = 0x0e,

1281 .
	gtxClù
 = 3,

1282 .
	g™ã¬aGaö
 = 0,

1283 .
	gswôchSëéög
 = 0x2c,

1284 .
	gadcDesúedSize
 = -30,

1285 .
	gtxEndToX∑Off
 = 0,

1286 .
	gtxEndToRxOn
 = 0x2,

1287 .
	gtxFømeToX∑On
 = 0xe,

1288 .
	gthªsh62
 = 28,

1289 .
	g∑pdR©eMaskHt20
 = 
LE32
(0x0c80c080),

1290 .
	g∑pdR©eMaskHt40
 = 
LE32
(0x0080c080),

1291 .
	gswôchcom•dt
 = 0,

1292 .
	gx a_büs_°ªngth
 = 0,

1293 .
	gfutuªModÆ
 = {

1297 .
	gba£_ext1
 = {

1298 .
™t_div_c⁄åﬁ
 = 0,

1299 .
	gfutuª
 = {0, 0},

1300 .
	gãmp¶›exãnsi⁄
 = {0, 0, 0, 0, 0, 0, 0, 0}

1302 .
	gˇlFªqPõr2G
 = {

1303 
FREQ2FBIN
(2412, 1),

1304 
FREQ2FBIN
(2437, 1),

1305 
FREQ2FBIN
(2462, 1),

1308 .
	gˇlPõrD©a2G
 = {

1313 .
	gˇlT¨gë_‰eqbö_Cck
 = {

1314 
FREQ2FBIN
(2412, 1),

1315 
FREQ2FBIN
(2472, 1),

1317 .
	gˇlT¨gë_‰eqbö_2G
 = {

1318 
FREQ2FBIN
(2412, 1),

1319 
FREQ2FBIN
(2437, 1),

1320 
FREQ2FBIN
(2472, 1)

1322 .
	gˇlT¨gë_‰eqbö_2GHT20
 = {

1323 
FREQ2FBIN
(2412, 1),

1324 
FREQ2FBIN
(2437, 1),

1325 
FREQ2FBIN
(2472, 1)

1327 .
	gˇlT¨gë_‰eqbö_2GHT40
 = {

1328 
FREQ2FBIN
(2412, 1),

1329 
FREQ2FBIN
(2437, 1),

1330 
FREQ2FBIN
(2472, 1)

1332 .
	gˇlT¨gëPowîCck
 = {

1337 .
	gˇlT¨gëPowî2G
 = {

1343 .
	gˇlT¨gëPowî2GHT20
 = {

1348 .
	gˇlT¨gëPowî2GHT40
 = {

1353 .
	g˘lIndex_2G
 = {

1357 .
	g˘l_‰eqbö_2G
 = {

1359 
FREQ2FBIN
(2412, 1),

1360 
FREQ2FBIN
(2417, 1),

1361 
FREQ2FBIN
(2457, 1),

1362 
FREQ2FBIN
(2462, 1)

1365 
FREQ2FBIN
(2412, 1),

1366 
FREQ2FBIN
(2417, 1),

1367 
FREQ2FBIN
(2462, 1),

1372 
FREQ2FBIN
(2412, 1),

1373 
FREQ2FBIN
(2417, 1),

1374 
FREQ2FBIN
(2462, 1),

1378 
FREQ2FBIN
(2422, 1),

1379 
FREQ2FBIN
(2427, 1),

1380 
FREQ2FBIN
(2447, 1),

1381 
FREQ2FBIN
(2452, 1)

1385  
FREQ2FBIN
(2412, 1),

1386  
FREQ2FBIN
(2417, 1),

1387  
FREQ2FBIN
(2472, 1),

1388  
FREQ2FBIN
(2484, 1),

1392  
FREQ2FBIN
(2412, 1),

1393  
FREQ2FBIN
(2417, 1),

1394  
FREQ2FBIN
(2472, 1),

1399  
FREQ2FBIN
(2412, 1),

1400  
FREQ2FBIN
(2417, 1),

1401 
FREQ2FBIN
(2472, 1),

1406  
FREQ2FBIN
(2422, 1),

1407  
FREQ2FBIN
(2427, 1),

1408  
FREQ2FBIN
(2447, 1),

1409  
FREQ2FBIN
(2462, 1),

1413  
FREQ2FBIN
(2412, 1),

1414  
FREQ2FBIN
(2417, 1),

1415  
FREQ2FBIN
(2472, 1),

1419  
FREQ2FBIN
(2412, 1),

1420  
FREQ2FBIN
(2417, 1),

1421  
FREQ2FBIN
(2472, 1),

1426  
FREQ2FBIN
(2412, 1),

1427  
FREQ2FBIN
(2417, 1),

1428  
FREQ2FBIN
(2472, 1),

1433  
FREQ2FBIN
(2422, 1),

1434  
FREQ2FBIN
(2427, 1),

1435  
FREQ2FBIN
(2447, 1),

1436  
FREQ2FBIN
(2462, 1),

1439 .
	g˘lPowîD©a_2G
 = {

1440 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

1441 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

1442 { { 
CTL
(60, 1), CTL(60, 0), CTL(60, 0), CTL(60, 1) } },

1444 { { 
CTL
(60, 1), CTL(60, 0), CTL(60, 0), CTL(60, 0) } },

1445 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

1446 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

1448 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 1), CTL(60, 0) } },

1449 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

1450 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

1452 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

1453 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 1), CTL(60, 1) } },

1454 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 1), CTL(60, 1) } },

1456 .
	gmodÆHódî5G
 = {

1458 .
™tCålComm⁄
 = 
LE32
(0x220),

1460 .
	g™tCålComm⁄2
 = 
LE32
(0x44444),

1462 .
	g™tCålChaö
 = {

1463 
LE16
(0x150), LE16(0x150), LE16(0x150),

1466 .
	gx©ãn1DB
 = {0, 0, 0},

1472 .
	gx©ãn1M¨gö
 = {0, 0, 0},

1473 .
	gãmpSl›e
 = 45,

1474 .
	gvﬁtSl›e
 = 0,

1476 .
	g•urCh™s
 = {0, 0, 0, 0, 0},

1478 .
	gnoi£Flo‹ThªshCh
 = {-1, 0, 0},

1479 .
	gª£rved
 = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},

1480 .
	gquick_dr›
 = 0,

1481 .
	gx∑BüsLvl
 = 0,

1482 .
	gtxFømeToD©aSèπ
 = 0x0e,

1483 .
	gtxFømeToPaOn
 = 0x0e,

1484 .
	gtxClù
 = 3,

1485 .
	g™ã¬aGaö
 = 0,

1486 .
	gswôchSëéög
 = 0x2d,

1487 .
	gadcDesúedSize
 = -30,

1488 .
	gtxEndToX∑Off
 = 0,

1489 .
	gtxEndToRxOn
 = 0x2,

1490 .
	gtxFømeToX∑On
 = 0xe,

1491 .
	gthªsh62
 = 28,

1492 .
	g∑pdR©eMaskHt20
 = 
LE32
(0x0cf0e0e0),

1493 .
	g∑pdR©eMaskHt40
 = 
LE32
(0x6cf0e0e0),

1494 .
	gswôchcom•dt
 = 0,

1495 .
	gx a_büs_°ªngth
 = 0,

1496 .
	gfutuªModÆ
 = {

1500 .
	gba£_ext2
 = {

1501 .
ãmpSl›eLow
 = 40,

1502 .
	gãmpSl›eHigh
 = 50,

1503 .
	gx©ãn1DBLow
 = {0, 0, 0},

1504 .
	gx©ãn1M¨göLow
 = {0, 0, 0},

1505 .
	gx©ãn1DBHigh
 = {0, 0, 0},

1506 .
	gx©ãn1M¨göHigh
 = {0, 0, 0}

1508 .
	gˇlFªqPõr5G
 = {

1509 
FREQ2FBIN
(5180, 0),

1510 
FREQ2FBIN
(5220, 0),

1511 
FREQ2FBIN
(5320, 0),

1512 
FREQ2FBIN
(5400, 0),

1513 
FREQ2FBIN
(5500, 0),

1514 
FREQ2FBIN
(5600, 0),

1515 
FREQ2FBIN
(5700, 0),

1516 
FREQ2FBIN
(5785, 0)

1518 .
	gˇlPõrD©a5G
 = {

1551 .
	gˇlT¨gë_‰eqbö_5G
 = {

1552 
FREQ2FBIN
(5180, 0),

1553 
FREQ2FBIN
(5240, 0),

1554 
FREQ2FBIN
(5320, 0),

1555 
FREQ2FBIN
(5400, 0),

1556 
FREQ2FBIN
(5500, 0),

1557 
FREQ2FBIN
(5600, 0),

1558 
FREQ2FBIN
(5700, 0),

1559 
FREQ2FBIN
(5825, 0)

1561 .
	gˇlT¨gë_‰eqbö_5GHT20
 = {

1562 
FREQ2FBIN
(5180, 0),

1563 
FREQ2FBIN
(5240, 0),

1564 
FREQ2FBIN
(5320, 0),

1565 
FREQ2FBIN
(5400, 0),

1566 
FREQ2FBIN
(5500, 0),

1567 
FREQ2FBIN
(5700, 0),

1568 
FREQ2FBIN
(5745, 0),

1569 
FREQ2FBIN
(5825, 0)

1571 .
	gˇlT¨gë_‰eqbö_5GHT40
 = {

1572 
FREQ2FBIN
(5180, 0),

1573 
FREQ2FBIN
(5240, 0),

1574 
FREQ2FBIN
(5320, 0),

1575 
FREQ2FBIN
(5400, 0),

1576 
FREQ2FBIN
(5500, 0),

1577 
FREQ2FBIN
(5700, 0),

1578 
FREQ2FBIN
(5745, 0),

1579 
FREQ2FBIN
(5825, 0)

1581 .
	gˇlT¨gëPowî5G
 = {

1592 .
	gˇlT¨gëPowî5GHT20
 = {

1606 .
	gˇlT¨gëPowî5GHT40
 = {

1620 .
	g˘lIndex_5G
 = {

1624 .
	g˘l_‰eqbö_5G
 = {

1626  
FREQ2FBIN
(5180, 0),

1627  
FREQ2FBIN
(5260, 0),

1628  
FREQ2FBIN
(5280, 0),

1629  
FREQ2FBIN
(5500, 0),

1630  
FREQ2FBIN
(5600, 0),

1631  
FREQ2FBIN
(5700, 0),

1632  
FREQ2FBIN
(5745, 0),

1633  
FREQ2FBIN
(5825, 0)

1636  
FREQ2FBIN
(5180, 0),

1637  
FREQ2FBIN
(5260, 0),

1638  
FREQ2FBIN
(5280, 0),

1639  
FREQ2FBIN
(5500, 0),

1640  
FREQ2FBIN
(5520, 0),

1641  
FREQ2FBIN
(5700, 0),

1642  
FREQ2FBIN
(5745, 0),

1643  
FREQ2FBIN
(5825, 0)

1647  
FREQ2FBIN
(5190, 0),

1648  
FREQ2FBIN
(5230, 0),

1649  
FREQ2FBIN
(5270, 0),

1650  
FREQ2FBIN
(5310, 0),

1651  
FREQ2FBIN
(5510, 0),

1652  
FREQ2FBIN
(5550, 0),

1653  
FREQ2FBIN
(5670, 0),

1654  
FREQ2FBIN
(5755, 0)

1658  
FREQ2FBIN
(5180, 0),

1659  
FREQ2FBIN
(5200, 0),

1660  
FREQ2FBIN
(5260, 0),

1661  
FREQ2FBIN
(5320, 0),

1662  
FREQ2FBIN
(5500, 0),

1663  
FREQ2FBIN
(5700, 0),

1669  
FREQ2FBIN
(5180, 0),

1670  
FREQ2FBIN
(5260, 0),

1671  
FREQ2FBIN
(5500, 0),

1672  
FREQ2FBIN
(5700, 0),

1680  
FREQ2FBIN
(5190, 0),

1681  
FREQ2FBIN
(5270, 0),

1682  
FREQ2FBIN
(5310, 0),

1683  
FREQ2FBIN
(5510, 0),

1684  
FREQ2FBIN
(5590, 0),

1685  
FREQ2FBIN
(5670, 0),

1691  
FREQ2FBIN
(5180, 0),

1692  
FREQ2FBIN
(5200, 0),

1693  
FREQ2FBIN
(5220, 0),

1694  
FREQ2FBIN
(5260, 0),

1695  
FREQ2FBIN
(5500, 0),

1696  
FREQ2FBIN
(5600, 0),

1697  
FREQ2FBIN
(5700, 0),

1698  
FREQ2FBIN
(5745, 0)

1702  
FREQ2FBIN
(5180, 0),

1703  
FREQ2FBIN
(5260, 0),

1704  
FREQ2FBIN
(5320, 0),

1705  
FREQ2FBIN
(5500, 0),

1706  
FREQ2FBIN
(5560, 0),

1707  
FREQ2FBIN
(5700, 0),

1708  
FREQ2FBIN
(5745, 0),

1709  
FREQ2FBIN
(5825, 0)

1713  
FREQ2FBIN
(5190, 0),

1714  
FREQ2FBIN
(5230, 0),

1715  
FREQ2FBIN
(5270, 0),

1716  
FREQ2FBIN
(5510, 0),

1717  
FREQ2FBIN
(5550, 0),

1718  
FREQ2FBIN
(5670, 0),

1719  
FREQ2FBIN
(5755, 0),

1720  
FREQ2FBIN
(5795, 0)

1723 .
	g˘lPowîD©a_5G
 = {

1726 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

1727 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 0),

1732 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

1733 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 0),

1738 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 1),

1739 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

1744 
CTL
(60, 0), CTL(60, 1), CTL(60, 1), CTL(60, 0),

1745 
CTL
(60, 1), CTL(60, 0), CTL(60, 0), CTL(60, 0),

1750 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 0),

1751 
CTL
(60, 0), CTL(60, 0), CTL(60, 0), CTL(60, 0),

1756 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

1757 
CTL
(60, 1), CTL(60, 0), CTL(60, 0), CTL(60, 0),

1762 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

1763 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

1768 
CTL
(60, 1), CTL(60, 1), CTL(60, 0), CTL(60, 1),

1769 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 0),

1774 
CTL
(60, 1), CTL(60, 0), CTL(60, 1), CTL(60, 1),

1775 
CTL
(60, 1), CTL(60, 1), CTL(60, 0), CTL(60, 1),

1782 c⁄° 
¨9300_ì¥om
 
	g¨9300_x112
 = {

1783 .
ì¥omVîsi⁄
 = 2,

1784 .
	gãm∂©eVîsi⁄
 = 5,

1785 .
	gmacAddr
 = {0x00, 0x03, 0x7f, 0x0, 0x0, 0x0},

1786 .
	gcu°D©a
 = {"x112-041-f0000"},

1787 .
	gba£EïHódî
 = {

1788 .
ªgDmn
 = { 
LE16
(0), LE16(0x1f) },

1789 .
	gtxrxMask
 = 0x77,

1790 .
	g›C≠Fœgs
 = {

1791 .
›Fœgs
 = 
AR5416_OPFLAGS_11G
 | 
AR5416_OPFLAGS_11A
,

1792 .
	gìpMisc
 = 0,

1794 .
	grfSûít
 = 0,

1795 .
	gblueToŸhO±i⁄s
 = 0,

1796 .
	gdevi˚C≠
 = 0,

1797 .
	gdevi˚Ty≥
 = 5,

1798 .
	gpwrTabÀOff£t
 = 
AR9300_PWR_TABLE_OFFSET
,

1799 .
	g∑øms_f‹_tunög_ˇps
 = {0, 0},

1800 .
	g„©uªE«bÀ
 = 0x0d,

1809 .
	gmiscC⁄figuøti⁄
 = 0,

1810 .
	gì¥omWrôeE«bÀGpio
 = 6,

1811 .
	gwœnDißbÀGpio
 = 0,

1812 .
	gwœnLedGpio
 = 8,

1813 .
	grxB™dSñe˘Gpio
 = 0xff,

1814 .
	gtxrxgaö
 = 0x0,

1815 .
	gswªg
 = 0,

1817 .
	gmodÆHódî2G
 = {

1820 .
™tCålComm⁄
 = 
LE32
(0x110),

1822 .
	g™tCålComm⁄2
 = 
LE32
(0x22222),

1828 .
	g™tCålChaö
 = { 
LE16
(0x10), LE16(0x10), LE16(0x10) },

1834 .
	gx©ãn1DB
 = {0x1b, 0x1b, 0x1b},

1840 .
	gx©ãn1M¨gö
 = {0x15, 0x15, 0x15},

1841 .
	gãmpSl›e
 = 50,

1842 .
	gvﬁtSl›e
 = 0,

1848 .
	g•urCh™s
 = {
FREQ2FBIN
(2464, 1), 0, 0, 0, 0},

1854 .
	gnoi£Flo‹ThªshCh
 = {-1, 0, 0},

1855 .
	gª£rved
 = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},

1856 .
	gquick_dr›
 = 0,

1857 .
	gx∑BüsLvl
 = 0,

1858 .
	gtxFømeToD©aSèπ
 = 0x0e,

1859 .
	gtxFømeToPaOn
 = 0x0e,

1860 .
	gtxClù
 = 3,

1861 .
	g™ã¬aGaö
 = 0,

1862 .
	gswôchSëéög
 = 0x2c,

1863 .
	gadcDesúedSize
 = -30,

1864 .
	gtxEndToX∑Off
 = 0,

1865 .
	gtxEndToRxOn
 = 0x2,

1866 .
	gtxFømeToX∑On
 = 0xe,

1867 .
	gthªsh62
 = 28,

1868 .
	g∑pdR©eMaskHt20
 = 
LE32
(0x0c80c080),

1869 .
	g∑pdR©eMaskHt40
 = 
LE32
(0x0080c080),

1870 .
	gswôchcom•dt
 = 0,

1871 .
	gx a_büs_°ªngth
 = 0,

1872 .
	gfutuªModÆ
 = {

1876 .
	gba£_ext1
 = {

1877 .
™t_div_c⁄åﬁ
 = 0,

1878 .
	gfutuª
 = {0, 0},

1879 .
	gãmp¶›exãnsi⁄
 = {0, 0, 0, 0, 0, 0, 0, 0}

1881 .
	gˇlFªqPõr2G
 = {

1882 
FREQ2FBIN
(2412, 1),

1883 
FREQ2FBIN
(2437, 1),

1884 
FREQ2FBIN
(2472, 1),

1887 .
	gˇlPõrD©a2G
 = {

1892 .
	gˇlT¨gë_‰eqbö_Cck
 = {

1893 
FREQ2FBIN
(2412, 1),

1894 
FREQ2FBIN
(2472, 1),

1896 .
	gˇlT¨gë_‰eqbö_2G
 = {

1897 
FREQ2FBIN
(2412, 1),

1898 
FREQ2FBIN
(2437, 1),

1899 
FREQ2FBIN
(2472, 1)

1901 .
	gˇlT¨gë_‰eqbö_2GHT20
 = {

1902 
FREQ2FBIN
(2412, 1),

1903 
FREQ2FBIN
(2437, 1),

1904 
FREQ2FBIN
(2472, 1)

1906 .
	gˇlT¨gë_‰eqbö_2GHT40
 = {

1907 
FREQ2FBIN
(2412, 1),

1908 
FREQ2FBIN
(2437, 1),

1909 
FREQ2FBIN
(2472, 1)

1911 .
	gˇlT¨gëPowîCck
 = {

1916 .
	gˇlT¨gëPowî2G
 = {

1922 .
	gˇlT¨gëPowî2GHT20
 = {

1927 .
	gˇlT¨gëPowî2GHT40
 = {

1932 .
	g˘lIndex_2G
 = {

1936 .
	g˘l_‰eqbö_2G
 = {

1938 
FREQ2FBIN
(2412, 1),

1939 
FREQ2FBIN
(2417, 1),

1940 
FREQ2FBIN
(2457, 1),

1941 
FREQ2FBIN
(2462, 1)

1944 
FREQ2FBIN
(2412, 1),

1945 
FREQ2FBIN
(2417, 1),

1946 
FREQ2FBIN
(2462, 1),

1951 
FREQ2FBIN
(2412, 1),

1952 
FREQ2FBIN
(2417, 1),

1953 
FREQ2FBIN
(2462, 1),

1957 
FREQ2FBIN
(2422, 1),

1958 
FREQ2FBIN
(2427, 1),

1959 
FREQ2FBIN
(2447, 1),

1960 
FREQ2FBIN
(2452, 1)

1964  
FREQ2FBIN
(2412, 1),

1965  
FREQ2FBIN
(2417, 1),

1966  
FREQ2FBIN
(2472, 1),

1967  
FREQ2FBIN
(2484, 1),

1971  
FREQ2FBIN
(2412, 1),

1972  
FREQ2FBIN
(2417, 1),

1973  
FREQ2FBIN
(2472, 1),

1978  
FREQ2FBIN
(2412, 1),

1979  
FREQ2FBIN
(2417, 1),

1980 
FREQ2FBIN
(2472, 1),

1985  
FREQ2FBIN
(2422, 1),

1986  
FREQ2FBIN
(2427, 1),

1987  
FREQ2FBIN
(2447, 1),

1988  
FREQ2FBIN
(2462, 1),

1992  
FREQ2FBIN
(2412, 1),

1993  
FREQ2FBIN
(2417, 1),

1994  
FREQ2FBIN
(2472, 1),

1998  
FREQ2FBIN
(2412, 1),

1999  
FREQ2FBIN
(2417, 1),

2000  
FREQ2FBIN
(2472, 1),

2005  
FREQ2FBIN
(2412, 1),

2006  
FREQ2FBIN
(2417, 1),

2007  
FREQ2FBIN
(2472, 1),

2012  
FREQ2FBIN
(2422, 1),

2013  
FREQ2FBIN
(2427, 1),

2014  
FREQ2FBIN
(2447, 1),

2015  
FREQ2FBIN
(2462, 1),

2018 .
	g˘lPowîD©a_2G
 = {

2019 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

2020 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

2021 { { 
CTL
(60, 1), CTL(60, 0), CTL(60, 0), CTL(60, 1) } },

2023 { { 
CTL
(60, 1), CTL(60, 0), CTL(60, 0), CTL(60, 0) } },

2024 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

2025 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

2027 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 1), CTL(60, 0) } },

2028 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

2029 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

2031 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

2032 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 1), CTL(60, 1) } },

2033 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 1), CTL(60, 1) } },

2035 .
	gmodÆHódî5G
 = {

2037 .
™tCålComm⁄
 = 
LE32
(0x110),

2039 .
	g™tCålComm⁄2
 = 
LE32
(0x22222),

2041 .
	g™tCålChaö
 = {

2042 
LE16
(0x0), LE16(0x0), LE16(0x0),

2045 .
	gx©ãn1DB
 = {0x13, 0x19, 0x17},

2051 .
	gx©ãn1M¨gö
 = {0x19, 0x19, 0x19},

2052 .
	gãmpSl›e
 = 70,

2053 .
	gvﬁtSl›e
 = 15,

2055 .
	g•urCh™s
 = {0, 0, 0, 0, 0},

2057 .
	gnoi£Flo‹ThªshCh
 = {-1, 0, 0},

2058 .
	gª£rved
 = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},

2059 .
	gquick_dr›
 = 0,

2060 .
	gx∑BüsLvl
 = 0,

2061 .
	gtxFømeToD©aSèπ
 = 0x0e,

2062 .
	gtxFømeToPaOn
 = 0x0e,

2063 .
	gtxClù
 = 3,

2064 .
	g™ã¬aGaö
 = 0,

2065 .
	gswôchSëéög
 = 0x2d,

2066 .
	gadcDesúedSize
 = -30,

2067 .
	gtxEndToX∑Off
 = 0,

2068 .
	gtxEndToRxOn
 = 0x2,

2069 .
	gtxFømeToX∑On
 = 0xe,

2070 .
	gthªsh62
 = 28,

2071 .
	g∑pdR©eMaskHt20
 = 
LE32
(0x0cf0e0e0),

2072 .
	g∑pdR©eMaskHt40
 = 
LE32
(0x6cf0e0e0),

2073 .
	gswôchcom•dt
 = 0,

2074 .
	gx a_büs_°ªngth
 = 0,

2075 .
	gfutuªModÆ
 = {

2079 .
	gba£_ext2
 = {

2080 .
ãmpSl›eLow
 = 72,

2081 .
	gãmpSl›eHigh
 = 105,

2082 .
	gx©ãn1DBLow
 = {0x10, 0x14, 0x10},

2083 .
	gx©ãn1M¨göLow
 = {0x19, 0x19 , 0x19},

2084 .
	gx©ãn1DBHigh
 = {0x1d, 0x20, 0x24},

2085 .
	gx©ãn1M¨göHigh
 = {0x10, 0x10, 0x10}

2087 .
	gˇlFªqPõr5G
 = {

2088 
FREQ2FBIN
(5180, 0),

2089 
FREQ2FBIN
(5220, 0),

2090 
FREQ2FBIN
(5320, 0),

2091 
FREQ2FBIN
(5400, 0),

2092 
FREQ2FBIN
(5500, 0),

2093 
FREQ2FBIN
(5600, 0),

2094 
FREQ2FBIN
(5700, 0),

2095 
FREQ2FBIN
(5785, 0)

2097 .
	gˇlPõrD©a5G
 = {

2130 .
	gˇlT¨gë_‰eqbö_5G
 = {

2131 
FREQ2FBIN
(5180, 0),

2132 
FREQ2FBIN
(5220, 0),

2133 
FREQ2FBIN
(5320, 0),

2134 
FREQ2FBIN
(5400, 0),

2135 
FREQ2FBIN
(5500, 0),

2136 
FREQ2FBIN
(5600, 0),

2137 
FREQ2FBIN
(5725, 0),

2138 
FREQ2FBIN
(5825, 0)

2140 .
	gˇlT¨gë_‰eqbö_5GHT20
 = {

2141 
FREQ2FBIN
(5180, 0),

2142 
FREQ2FBIN
(5220, 0),

2143 
FREQ2FBIN
(5320, 0),

2144 
FREQ2FBIN
(5400, 0),

2145 
FREQ2FBIN
(5500, 0),

2146 
FREQ2FBIN
(5600, 0),

2147 
FREQ2FBIN
(5725, 0),

2148 
FREQ2FBIN
(5825, 0)

2150 .
	gˇlT¨gë_‰eqbö_5GHT40
 = {

2151 
FREQ2FBIN
(5180, 0),

2152 
FREQ2FBIN
(5220, 0),

2153 
FREQ2FBIN
(5320, 0),

2154 
FREQ2FBIN
(5400, 0),

2155 
FREQ2FBIN
(5500, 0),

2156 
FREQ2FBIN
(5600, 0),

2157 
FREQ2FBIN
(5725, 0),

2158 
FREQ2FBIN
(5825, 0)

2160 .
	gˇlT¨gëPowî5G
 = {

2171 .
	gˇlT¨gëPowî5GHT20
 = {

2185 .
	gˇlT¨gëPowî5GHT40
 = {

2199 .
	g˘lIndex_5G
 = {

2203 .
	g˘l_‰eqbö_5G
 = {

2205  
FREQ2FBIN
(5180, 0),

2206  
FREQ2FBIN
(5260, 0),

2207  
FREQ2FBIN
(5280, 0),

2208  
FREQ2FBIN
(5500, 0),

2209  
FREQ2FBIN
(5600, 0),

2210  
FREQ2FBIN
(5700, 0),

2211  
FREQ2FBIN
(5745, 0),

2212  
FREQ2FBIN
(5825, 0)

2215  
FREQ2FBIN
(5180, 0),

2216  
FREQ2FBIN
(5260, 0),

2217  
FREQ2FBIN
(5280, 0),

2218  
FREQ2FBIN
(5500, 0),

2219  
FREQ2FBIN
(5520, 0),

2220  
FREQ2FBIN
(5700, 0),

2221  
FREQ2FBIN
(5745, 0),

2222  
FREQ2FBIN
(5825, 0)

2226  
FREQ2FBIN
(5190, 0),

2227  
FREQ2FBIN
(5230, 0),

2228  
FREQ2FBIN
(5270, 0),

2229  
FREQ2FBIN
(5310, 0),

2230  
FREQ2FBIN
(5510, 0),

2231  
FREQ2FBIN
(5550, 0),

2232  
FREQ2FBIN
(5670, 0),

2233  
FREQ2FBIN
(5755, 0)

2237  
FREQ2FBIN
(5180, 0),

2238  
FREQ2FBIN
(5200, 0),

2239  
FREQ2FBIN
(5260, 0),

2240  
FREQ2FBIN
(5320, 0),

2241  
FREQ2FBIN
(5500, 0),

2242  
FREQ2FBIN
(5700, 0),

2248  
FREQ2FBIN
(5180, 0),

2249  
FREQ2FBIN
(5260, 0),

2250  
FREQ2FBIN
(5500, 0),

2251  
FREQ2FBIN
(5700, 0),

2259  
FREQ2FBIN
(5190, 0),

2260  
FREQ2FBIN
(5270, 0),

2261  
FREQ2FBIN
(5310, 0),

2262  
FREQ2FBIN
(5510, 0),

2263  
FREQ2FBIN
(5590, 0),

2264  
FREQ2FBIN
(5670, 0),

2270  
FREQ2FBIN
(5180, 0),

2271  
FREQ2FBIN
(5200, 0),

2272  
FREQ2FBIN
(5220, 0),

2273  
FREQ2FBIN
(5260, 0),

2274  
FREQ2FBIN
(5500, 0),

2275  
FREQ2FBIN
(5600, 0),

2276  
FREQ2FBIN
(5700, 0),

2277  
FREQ2FBIN
(5745, 0)

2281  
FREQ2FBIN
(5180, 0),

2282  
FREQ2FBIN
(5260, 0),

2283  
FREQ2FBIN
(5320, 0),

2284  
FREQ2FBIN
(5500, 0),

2285  
FREQ2FBIN
(5560, 0),

2286  
FREQ2FBIN
(5700, 0),

2287  
FREQ2FBIN
(5745, 0),

2288  
FREQ2FBIN
(5825, 0)

2292  
FREQ2FBIN
(5190, 0),

2293  
FREQ2FBIN
(5230, 0),

2294  
FREQ2FBIN
(5270, 0),

2295  
FREQ2FBIN
(5510, 0),

2296  
FREQ2FBIN
(5550, 0),

2297  
FREQ2FBIN
(5670, 0),

2298  
FREQ2FBIN
(5755, 0),

2299  
FREQ2FBIN
(5795, 0)

2302 .
	g˘lPowîD©a_5G
 = {

2305 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

2306 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 0),

2311 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

2312 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 0),

2317 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 1),

2318 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

2323 
CTL
(60, 0), CTL(60, 1), CTL(60, 1), CTL(60, 0),

2324 
CTL
(60, 1), CTL(60, 0), CTL(60, 0), CTL(60, 0),

2329 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 0),

2330 
CTL
(60, 0), CTL(60, 0), CTL(60, 0), CTL(60, 0),

2335 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

2336 
CTL
(60, 1), CTL(60, 0), CTL(60, 0), CTL(60, 0),

2341 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

2342 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

2347 
CTL
(60, 1), CTL(60, 1), CTL(60, 0), CTL(60, 1),

2348 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 0),

2353 
CTL
(60, 1), CTL(60, 0), CTL(60, 1), CTL(60, 1),

2354 
CTL
(60, 1), CTL(60, 1), CTL(60, 0), CTL(60, 1),

2360 c⁄° 
¨9300_ì¥om
 
	g¨9300_h116
 = {

2361 .
ì¥omVîsi⁄
 = 2,

2362 .
	gãm∂©eVîsi⁄
 = 4,

2363 .
	gmacAddr
 = {0x00, 0x03, 0x7f, 0x0, 0x0, 0x0},

2364 .
	gcu°D©a
 = {"h116-041-f0000"},

2365 .
	gba£EïHódî
 = {

2366 .
ªgDmn
 = { 
LE16
(0), LE16(0x1f) },

2367 .
	gtxrxMask
 = 0x33,

2368 .
	g›C≠Fœgs
 = {

2369 .
›Fœgs
 = 
AR5416_OPFLAGS_11G
 | 
AR5416_OPFLAGS_11A
,

2370 .
	gìpMisc
 = 0,

2372 .
	grfSûít
 = 0,

2373 .
	gblueToŸhO±i⁄s
 = 0,

2374 .
	gdevi˚C≠
 = 0,

2375 .
	gdevi˚Ty≥
 = 5,

2376 .
	gpwrTabÀOff£t
 = 
AR9300_PWR_TABLE_OFFSET
,

2377 .
	g∑øms_f‹_tunög_ˇps
 = {0, 0},

2378 .
	g„©uªE«bÀ
 = 0x0d,

2387 .
	gmiscC⁄figuøti⁄
 = 0,

2388 .
	gì¥omWrôeE«bÀGpio
 = 6,

2389 .
	gwœnDißbÀGpio
 = 0,

2390 .
	gwœnLedGpio
 = 8,

2391 .
	grxB™dSñe˘Gpio
 = 0xff,

2392 .
	gtxrxgaö
 = 0x10,

2393 .
	gswªg
 = 0,

2395 .
	gmodÆHódî2G
 = {

2398 .
™tCålComm⁄
 = 
LE32
(0x110),

2400 .
	g™tCålComm⁄2
 = 
LE32
(0x44444),

2406 .
	g™tCålChaö
 = { 
LE16
(0x10), LE16(0x10), LE16(0x10) },

2412 .
	gx©ãn1DB
 = {0x1f, 0x1f, 0x1f},

2418 .
	gx©ãn1M¨gö
 = {0x12, 0x12, 0x12},

2419 .
	gãmpSl›e
 = 25,

2420 .
	gvﬁtSl›e
 = 0,

2426 .
	g•urCh™s
 = {
FREQ2FBIN
(2464, 1), 0, 0, 0, 0},

2432 .
	gnoi£Flo‹ThªshCh
 = {-1, 0, 0},

2433 .
	gª£rved
 = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},

2434 .
	gquick_dr›
 = 0,

2435 .
	gx∑BüsLvl
 = 0,

2436 .
	gtxFømeToD©aSèπ
 = 0x0e,

2437 .
	gtxFømeToPaOn
 = 0x0e,

2438 .
	gtxClù
 = 3,

2439 .
	g™ã¬aGaö
 = 0,

2440 .
	gswôchSëéög
 = 0x2c,

2441 .
	gadcDesúedSize
 = -30,

2442 .
	gtxEndToX∑Off
 = 0,

2443 .
	gtxEndToRxOn
 = 0x2,

2444 .
	gtxFømeToX∑On
 = 0xe,

2445 .
	gthªsh62
 = 28,

2446 .
	g∑pdR©eMaskHt20
 = 
LE32
(0x0c80C080),

2447 .
	g∑pdR©eMaskHt40
 = 
LE32
(0x0080C080),

2448 .
	gswôchcom•dt
 = 0,

2449 .
	gx a_büs_°ªngth
 = 0,

2450 .
	gfutuªModÆ
 = {

2454 .
	gba£_ext1
 = {

2455 .
™t_div_c⁄åﬁ
 = 0,

2456 .
	gfutuª
 = {0, 0},

2457 .
	gãmp¶›exãnsi⁄
 = {0, 0, 0, 0, 0, 0, 0, 0}

2459 .
	gˇlFªqPõr2G
 = {

2460 
FREQ2FBIN
(2412, 1),

2461 
FREQ2FBIN
(2437, 1),

2462 
FREQ2FBIN
(2462, 1),

2465 .
	gˇlPõrD©a2G
 = {

2470 .
	gˇlT¨gë_‰eqbö_Cck
 = {

2471 
FREQ2FBIN
(2412, 1),

2472 
FREQ2FBIN
(2472, 1),

2474 .
	gˇlT¨gë_‰eqbö_2G
 = {

2475 
FREQ2FBIN
(2412, 1),

2476 
FREQ2FBIN
(2437, 1),

2477 
FREQ2FBIN
(2472, 1)

2479 .
	gˇlT¨gë_‰eqbö_2GHT20
 = {

2480 
FREQ2FBIN
(2412, 1),

2481 
FREQ2FBIN
(2437, 1),

2482 
FREQ2FBIN
(2472, 1)

2484 .
	gˇlT¨gë_‰eqbö_2GHT40
 = {

2485 
FREQ2FBIN
(2412, 1),

2486 
FREQ2FBIN
(2437, 1),

2487 
FREQ2FBIN
(2472, 1)

2489 .
	gˇlT¨gëPowîCck
 = {

2494 .
	gˇlT¨gëPowî2G
 = {

2500 .
	gˇlT¨gëPowî2GHT20
 = {

2505 .
	gˇlT¨gëPowî2GHT40
 = {

2510 .
	g˘lIndex_2G
 = {

2514 .
	g˘l_‰eqbö_2G
 = {

2516 
FREQ2FBIN
(2412, 1),

2517 
FREQ2FBIN
(2417, 1),

2518 
FREQ2FBIN
(2457, 1),

2519 
FREQ2FBIN
(2462, 1)

2522 
FREQ2FBIN
(2412, 1),

2523 
FREQ2FBIN
(2417, 1),

2524 
FREQ2FBIN
(2462, 1),

2529 
FREQ2FBIN
(2412, 1),

2530 
FREQ2FBIN
(2417, 1),

2531 
FREQ2FBIN
(2462, 1),

2535 
FREQ2FBIN
(2422, 1),

2536 
FREQ2FBIN
(2427, 1),

2537 
FREQ2FBIN
(2447, 1),

2538 
FREQ2FBIN
(2452, 1)

2542  
FREQ2FBIN
(2412, 1),

2543  
FREQ2FBIN
(2417, 1),

2544  
FREQ2FBIN
(2472, 1),

2545  
FREQ2FBIN
(2484, 1),

2549  
FREQ2FBIN
(2412, 1),

2550  
FREQ2FBIN
(2417, 1),

2551  
FREQ2FBIN
(2472, 1),

2556  
FREQ2FBIN
(2412, 1),

2557  
FREQ2FBIN
(2417, 1),

2558 
FREQ2FBIN
(2472, 1),

2563  
FREQ2FBIN
(2422, 1),

2564  
FREQ2FBIN
(2427, 1),

2565  
FREQ2FBIN
(2447, 1),

2566  
FREQ2FBIN
(2462, 1),

2570  
FREQ2FBIN
(2412, 1),

2571  
FREQ2FBIN
(2417, 1),

2572  
FREQ2FBIN
(2472, 1),

2576  
FREQ2FBIN
(2412, 1),

2577  
FREQ2FBIN
(2417, 1),

2578  
FREQ2FBIN
(2472, 1),

2583  
FREQ2FBIN
(2412, 1),

2584  
FREQ2FBIN
(2417, 1),

2585  
FREQ2FBIN
(2472, 1),

2590  
FREQ2FBIN
(2422, 1),

2591  
FREQ2FBIN
(2427, 1),

2592  
FREQ2FBIN
(2447, 1),

2593  
FREQ2FBIN
(2462, 1),

2596 .
	g˘lPowîD©a_2G
 = {

2597 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

2598 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

2599 { { 
CTL
(60, 1), CTL(60, 0), CTL(60, 0), CTL(60, 1) } },

2601 { { 
CTL
(60, 1), CTL(60, 0), CTL(60, 0), CTL(60, 0) } },

2602 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

2603 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

2605 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 1), CTL(60, 0) } },

2606 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

2607 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

2609 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 0) } },

2610 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 1), CTL(60, 1) } },

2611 { { 
CTL
(60, 0), CTL(60, 1), CTL(60, 1), CTL(60, 1) } },

2613 .
	gmodÆHódî5G
 = {

2615 .
™tCålComm⁄
 = 
LE32
(0x220),

2617 .
	g™tCålComm⁄2
 = 
LE32
(0x44444),

2619 .
	g™tCålChaö
 = {

2620 
LE16
(0x150), LE16(0x150), LE16(0x150),

2623 .
	gx©ãn1DB
 = {0x19, 0x19, 0x19},

2629 .
	gx©ãn1M¨gö
 = {0x14, 0x14, 0x14},

2630 .
	gãmpSl›e
 = 70,

2631 .
	gvﬁtSl›e
 = 0,

2633 .
	g•urCh™s
 = {0, 0, 0, 0, 0},

2635 .
	gnoi£Flo‹ThªshCh
 = {-1, 0, 0},

2636 .
	gª£rved
 = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},

2637 .
	gquick_dr›
 = 0,

2638 .
	gx∑BüsLvl
 = 0,

2639 .
	gtxFømeToD©aSèπ
 = 0x0e,

2640 .
	gtxFømeToPaOn
 = 0x0e,

2641 .
	gtxClù
 = 3,

2642 .
	g™ã¬aGaö
 = 0,

2643 .
	gswôchSëéög
 = 0x2d,

2644 .
	gadcDesúedSize
 = -30,

2645 .
	gtxEndToX∑Off
 = 0,

2646 .
	gtxEndToRxOn
 = 0x2,

2647 .
	gtxFømeToX∑On
 = 0xe,

2648 .
	gthªsh62
 = 28,

2649 .
	g∑pdR©eMaskHt20
 = 
LE32
(0x0cf0e0e0),

2650 .
	g∑pdR©eMaskHt40
 = 
LE32
(0x6cf0e0e0),

2651 .
	gswôchcom•dt
 = 0,

2652 .
	gx a_büs_°ªngth
 = 0,

2653 .
	gfutuªModÆ
 = {

2657 .
	gba£_ext2
 = {

2658 .
ãmpSl›eLow
 = 35,

2659 .
	gãmpSl›eHigh
 = 50,

2660 .
	gx©ãn1DBLow
 = {0, 0, 0},

2661 .
	gx©ãn1M¨göLow
 = {0, 0, 0},

2662 .
	gx©ãn1DBHigh
 = {0, 0, 0},

2663 .
	gx©ãn1M¨göHigh
 = {0, 0, 0}

2665 .
	gˇlFªqPõr5G
 = {

2666 
FREQ2FBIN
(5160, 0),

2667 
FREQ2FBIN
(5220, 0),

2668 
FREQ2FBIN
(5320, 0),

2669 
FREQ2FBIN
(5400, 0),

2670 
FREQ2FBIN
(5500, 0),

2671 
FREQ2FBIN
(5600, 0),

2672 
FREQ2FBIN
(5700, 0),

2673 
FREQ2FBIN
(5785, 0)

2675 .
	gˇlPõrD©a5G
 = {

2708 .
	gˇlT¨gë_‰eqbö_5G
 = {

2709 
FREQ2FBIN
(5180, 0),

2710 
FREQ2FBIN
(5240, 0),

2711 
FREQ2FBIN
(5320, 0),

2712 
FREQ2FBIN
(5400, 0),

2713 
FREQ2FBIN
(5500, 0),

2714 
FREQ2FBIN
(5600, 0),

2715 
FREQ2FBIN
(5700, 0),

2716 
FREQ2FBIN
(5825, 0)

2718 .
	gˇlT¨gë_‰eqbö_5GHT20
 = {

2719 
FREQ2FBIN
(5180, 0),

2720 
FREQ2FBIN
(5240, 0),

2721 
FREQ2FBIN
(5320, 0),

2722 
FREQ2FBIN
(5400, 0),

2723 
FREQ2FBIN
(5500, 0),

2724 
FREQ2FBIN
(5700, 0),

2725 
FREQ2FBIN
(5745, 0),

2726 
FREQ2FBIN
(5825, 0)

2728 .
	gˇlT¨gë_‰eqbö_5GHT40
 = {

2729 
FREQ2FBIN
(5180, 0),

2730 
FREQ2FBIN
(5240, 0),

2731 
FREQ2FBIN
(5320, 0),

2732 
FREQ2FBIN
(5400, 0),

2733 
FREQ2FBIN
(5500, 0),

2734 
FREQ2FBIN
(5700, 0),

2735 
FREQ2FBIN
(5745, 0),

2736 
FREQ2FBIN
(5825, 0)

2738 .
	gˇlT¨gëPowî5G
 = {

2749 .
	gˇlT¨gëPowî5GHT20
 = {

2763 .
	gˇlT¨gëPowî5GHT40
 = {

2777 .
	g˘lIndex_5G
 = {

2781 .
	g˘l_‰eqbö_5G
 = {

2783  
FREQ2FBIN
(5180, 0),

2784  
FREQ2FBIN
(5260, 0),

2785  
FREQ2FBIN
(5280, 0),

2786  
FREQ2FBIN
(5500, 0),

2787  
FREQ2FBIN
(5600, 0),

2788  
FREQ2FBIN
(5700, 0),

2789  
FREQ2FBIN
(5745, 0),

2790  
FREQ2FBIN
(5825, 0)

2793  
FREQ2FBIN
(5180, 0),

2794  
FREQ2FBIN
(5260, 0),

2795  
FREQ2FBIN
(5280, 0),

2796  
FREQ2FBIN
(5500, 0),

2797  
FREQ2FBIN
(5520, 0),

2798  
FREQ2FBIN
(5700, 0),

2799  
FREQ2FBIN
(5745, 0),

2800  
FREQ2FBIN
(5825, 0)

2804  
FREQ2FBIN
(5190, 0),

2805  
FREQ2FBIN
(5230, 0),

2806  
FREQ2FBIN
(5270, 0),

2807  
FREQ2FBIN
(5310, 0),

2808  
FREQ2FBIN
(5510, 0),

2809  
FREQ2FBIN
(5550, 0),

2810  
FREQ2FBIN
(5670, 0),

2811  
FREQ2FBIN
(5755, 0)

2815  
FREQ2FBIN
(5180, 0),

2816  
FREQ2FBIN
(5200, 0),

2817  
FREQ2FBIN
(5260, 0),

2818  
FREQ2FBIN
(5320, 0),

2819  
FREQ2FBIN
(5500, 0),

2820  
FREQ2FBIN
(5700, 0),

2826  
FREQ2FBIN
(5180, 0),

2827  
FREQ2FBIN
(5260, 0),

2828  
FREQ2FBIN
(5500, 0),

2829  
FREQ2FBIN
(5700, 0),

2837  
FREQ2FBIN
(5190, 0),

2838  
FREQ2FBIN
(5270, 0),

2839  
FREQ2FBIN
(5310, 0),

2840  
FREQ2FBIN
(5510, 0),

2841  
FREQ2FBIN
(5590, 0),

2842  
FREQ2FBIN
(5670, 0),

2848  
FREQ2FBIN
(5180, 0),

2849  
FREQ2FBIN
(5200, 0),

2850  
FREQ2FBIN
(5220, 0),

2851  
FREQ2FBIN
(5260, 0),

2852  
FREQ2FBIN
(5500, 0),

2853  
FREQ2FBIN
(5600, 0),

2854  
FREQ2FBIN
(5700, 0),

2855  
FREQ2FBIN
(5745, 0)

2859  
FREQ2FBIN
(5180, 0),

2860  
FREQ2FBIN
(5260, 0),

2861  
FREQ2FBIN
(5320, 0),

2862  
FREQ2FBIN
(5500, 0),

2863  
FREQ2FBIN
(5560, 0),

2864  
FREQ2FBIN
(5700, 0),

2865  
FREQ2FBIN
(5745, 0),

2866  
FREQ2FBIN
(5825, 0)

2870  
FREQ2FBIN
(5190, 0),

2871  
FREQ2FBIN
(5230, 0),

2872  
FREQ2FBIN
(5270, 0),

2873  
FREQ2FBIN
(5510, 0),

2874  
FREQ2FBIN
(5550, 0),

2875  
FREQ2FBIN
(5670, 0),

2876  
FREQ2FBIN
(5755, 0),

2877  
FREQ2FBIN
(5795, 0)

2880 .
	g˘lPowîD©a_5G
 = {

2883 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

2884 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 0),

2889 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

2890 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 0),

2895 
CTL
(60, 0), CTL(60, 1), CTL(60, 0), CTL(60, 1),

2896 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

2901 
CTL
(60, 0), CTL(60, 1), CTL(60, 1), CTL(60, 0),

2902 
CTL
(60, 1), CTL(60, 0), CTL(60, 0), CTL(60, 0),

2907 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 0),

2908 
CTL
(60, 0), CTL(60, 0), CTL(60, 0), CTL(60, 0),

2913 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

2914 
CTL
(60, 1), CTL(60, 0), CTL(60, 0), CTL(60, 0),

2919 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

2920 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 1),

2925 
CTL
(60, 1), CTL(60, 1), CTL(60, 0), CTL(60, 1),

2926 
CTL
(60, 1), CTL(60, 1), CTL(60, 1), CTL(60, 0),

2931 
CTL
(60, 1), CTL(60, 0), CTL(60, 1), CTL(60, 1),

2932 
CTL
(60, 1), CTL(60, 1), CTL(60, 0), CTL(60, 1),

2939 c⁄° 
¨9300_ì¥om
 *
	g¨9300_ìp_ãm∂©es
[] = {

2940 &
¨9300_deÁu…
,

2941 &
¨9300_x112
,

2942 &
¨9300_h116
,

2943 &
¨9300_h112
,

2944 &
¨9300_x113
,

2947 c⁄° 
¨9300_ì¥om
 *
	$¨9003_ì¥om_°ru˘_föd_by_id
(
id
)

2949 
	#N_LOOP
 ((
¨9300_ìp_ãm∂©es
Ë/ ◊r9300_ìp_ãm∂©es[0]))

	)

2950 
ô
;

2952 
ô
 = 0; ià< 
N_LOOP
; it++)

2953 i‡(
¨9300_ìp_ãm∂©es
[
ô
]->
ãm∂©eVîsi⁄
 =
id
)

2954  
¨9300_ìp_ãm∂©es
[
ô
];

2955  
NULL
;

2956 #unde‡
N_LOOP


2957 
	}
}

2959 
	$©h9k_hw_¨9300_check_ì¥om
(
©h_hw
 *
ah
)

2962 
	}
}

2964 
	$öãΩﬁ©e
(
x
, 
xa
, 
xb
, 
ya
, 
yb
)

2966 
bf
, 
Á˘‹
, 
∂us
;

2968 
bf
 = 2 * (
yb
 - 
ya
Ë* (
x
 - 
xa
Ë/ (
xb
 - xa);

2969 
Á˘‹
 = 
bf
 / 2;

2970 
∂us
 = 
bf
 % 2;

2971  
ya
 + 
Á˘‹
 + 
∂us
;

2972 
	}
}

2974 
u32
 
	$©h9k_hw_¨9300_gë_ì¥om
(
©h_hw
 *
ah
,

2975 
ì¥om_∑øm
 
∑øm
)

2977 
¨9300_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
¨9300_ìp
;

2978 
¨9300_ba£_ìp_hdr
 *
pBa£
 = &
ìp
->
ba£EïHódî
;

2980 
∑øm
) {

2981 
EEP_MAC_LSW
:

2982  
	`gë_u«lig√d_be16
(
ìp
->
macAddr
);

2983 
EEP_MAC_MID
:

2984  
	`gë_u«lig√d_be16
(
ìp
->
macAddr
 + 2);

2985 
EEP_MAC_MSW
:

2986  
	`gë_u«lig√d_be16
(
ìp
->
macAddr
 + 4);

2987 
EEP_REG_0
:

2988  
	`À16_to_˝u
(
pBa£
->
ªgDmn
[0]);

2989 
EEP_OP_CAP
:

2990  
pBa£
->
devi˚C≠
;

2991 
EEP_OP_MODE
:

2992  
pBa£
->
›C≠Fœgs
.
›Fœgs
;

2993 
EEP_RF_SILENT
:

2994  
pBa£
->
rfSûít
;

2995 
EEP_TX_MASK
:

2996  (
pBa£
->
txrxMask
 >> 4) & 0xf;

2997 
EEP_RX_MASK
:

2998  
pBa£
->
txrxMask
 & 0xf;

2999 
EEP_PAPRD
:

3000  !!(
pBa£
->
„©uªE«bÀ
 & 
	`BIT
(5));

3001 
EEP_CHAIN_MASK_REDUCE
:

3002  (
pBa£
->
miscC⁄figuøti⁄
 >> 0x3) & 0x1;

3003 
EEP_ANT_DIV_CTL1
:

3004 i‡(
	`AR_SREV_9565
(
ah
))

3005  
AR9300_EEP_ANTDIV_CONTROL_DEFAULT_VALUE
;

3007  
ìp
->
ba£_ext1
.
™t_div_c⁄åﬁ
;

3008 
EEP_ANTENNA_GAIN_5G
:

3009  
ìp
->
modÆHódî5G
.
™ã¬aGaö
;

3010 
EEP_ANTENNA_GAIN_2G
:

3011  
ìp
->
modÆHódî2G
.
™ã¬aGaö
;

3015 
	}
}

3017 
boﬁ
 
	$¨9300_ì¥om_ªad_byã
(
©h_hw
 *
ah
, 
addªss
,

3018 
u8
 *
buf„r
)

3020 
u16
 
vÆ
;

3022 i‡(
	`u∆ikñy
(!
	`©h9k_hw_nvøm_ªad
(
ah
, 
addªss
 / 2, &
vÆ
)))

3023  
Ál£
;

3025 *
buf„r
 = (
vÆ
 >> (8 * (
addªss
 % 2))) & 0xff;

3026  
åue
;

3027 
	}
}

3029 
boﬁ
 
	$¨9300_ì¥om_ªad_w‹d
(
©h_hw
 *
ah
, 
addªss
,

3030 
u8
 *
buf„r
)

3032 
u16
 
vÆ
;

3034 i‡(
	`u∆ikñy
(!
	`©h9k_hw_nvøm_ªad
(
ah
, 
addªss
 / 2, &
vÆ
)))

3035  
Ál£
;

3037 
buf„r
[0] = 
vÆ
 >> 8;

3038 
buf„r
[1] = 
vÆ
 & 0xff;

3040  
åue
;

3041 
	}
}

3043 
boﬁ
 
	$¨9300_ªad_ì¥om
(
©h_hw
 *
ah
, 
addªss
, 
u8
 *
buf„r
,

3044 
cou¡
)

3046 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

3047 
i
;

3049 i‡((
addªss
 < 0Ë|| (◊ddªs†+ 
cou¡
Ë/ 2 > 
AR9300_EEPROM_SIZE
 - 1)) {

3050 
	`©h_dbg
(
comm⁄
, 
EEPROM
, "eepromáddressÇot inÑange\n");

3051  
Ál£
;

3059 i‡(
addªss
 % 2 == 0) {

3060 i‡(!
	`¨9300_ì¥om_ªad_byã
(
ah
, 
addªss
--, 
buf„r
++))

3061 
îr‹
;

3063 
cou¡
--;

3066 
i
 = 0; i < 
cou¡
 / 2; i++) {

3067 i‡(!
	`¨9300_ì¥om_ªad_w‹d
(
ah
, 
addªss
, 
buf„r
))

3068 
îr‹
;

3070 
addªss
 -= 2;

3071 
buf„r
 += 2;

3074 i‡(
cou¡
 % 2)

3075 i‡(!
	`¨9300_ì¥om_ªad_byã
(
ah
, 
addªss
, 
buf„r
))

3076 
îr‹
;

3078  
åue
;

3080 
îr‹
:

3081 
	`©h_dbg
(
comm⁄
, 
EEPROM
, "unableÅoÑeadÉepromÑegionát offset %d\n",

3082 
addªss
);

3083  
Ál£
;

3084 
	}
}

3086 
boﬁ
 
	$¨9300_Ÿp_ªad_w‹d
(
©h_hw
 *
ah
, 
addr
, 
u32
 *
d©a
)

3088 
	`REG_READ
(
ah
, 
AR9300_OTP_BASE
 + (4 * 
addr
));

3090 i‡(!
	`©h9k_hw_waô
(
ah
, 
AR9300_OTP_STATUS
, 
AR9300_OTP_STATUS_TYPE
,

3091 
AR9300_OTP_STATUS_VALID
, 1000))

3092  
Ál£
;

3094 *
d©a
 = 
	`REG_READ
(
ah
, 
AR9300_OTP_READ_DATA
);

3095  
åue
;

3096 
	}
}

3098 
boﬁ
 
	$¨9300_ªad_Ÿp
(
©h_hw
 *
ah
, 
addªss
, 
u8
 *
buf„r
,

3099 
cou¡
)

3101 
u32
 
d©a
;

3102 
i
;

3104 
i
 = 0; i < 
cou¡
; i++) {

3105 
off£t
 = 8 * ((
addªss
 - 
i
) % 4);

3106 i‡(!
	`¨9300_Ÿp_ªad_w‹d
(
ah
, (
addªss
 - 
i
Ë/ 4, &
d©a
))

3107  
Ál£
;

3109 
buf„r
[
i
] = (
d©a
 >> 
off£t
) & 0xff;

3112  
åue
;

3113 
	}
}

3116 
	$¨9300_comp_hdr_u≈ack
(
u8
 *
be°
, *
code
, *
ª„ªn˚
,

3117 *
Àngth
, *
maj‹
, *
mö‹
)

3119 
vÆue
[4];

3121 
vÆue
[0] = 
be°
[0];

3122 
vÆue
[1] = 
be°
[1];

3123 
vÆue
[2] = 
be°
[2];

3124 
vÆue
[3] = 
be°
[3];

3125 *
code
 = ((
vÆue
[0] >> 5) & 0x0007);

3126 *
ª„ªn˚
 = (
vÆue
[0] & 0x001f) | ((value[1] >> 2) & 0x0020);

3127 *
Àngth
 = ((
vÆue
[1] << 4) & 0x07f0) | ((value[2] >> 4) & 0x000f);

3128 *
maj‹
 = (
vÆue
[2] & 0x000f);

3129 *
mö‹
 = (
vÆue
[3] & 0x00ff);

3130 
	}
}

3132 
u16
 
	$¨9300_comp_cksum
(
u8
 *
d©a
, 
dsize
)

3134 
ô
, 
checksum
 = 0;

3136 
ô
 = 0; ià< 
dsize
; it++) {

3137 
checksum
 +
d©a
[
ô
];

3138 
checksum
 &= 0xffff;

3141  
checksum
;

3142 
	}
}

3144 
boﬁ
 
	$¨9300_uncom¥ess_block
(
©h_hw
 *
ah
,

3145 
u8
 *
m±r
,

3146 
md©aSize
,

3147 
u8
 *
block
,

3148 
size
)

3150 
ô
;

3151 
•Ÿ
;

3152 
off£t
;

3153 
Àngth
;

3154 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

3156 
•Ÿ
 = 0;

3158 
ô
 = 0; ià< 
size
; ià+(
Àngth
+2)) {

3159 
off£t
 = 
block
[
ô
];

3160 
off£t
 &= 0xff;

3161 
•Ÿ
 +
off£t
;

3162 
Àngth
 = 
block
[
ô
+1];

3163 
Àngth
 &= 0xff;

3165 i‡(
Àngth
 > 0 && 
•Ÿ
 >0 && spŸ+Àngth <
md©aSize
) {

3166 
	`©h_dbg
(
comm⁄
, 
EEPROM
,

3168 
ô
, 
•Ÿ
, 
off£t
, 
Àngth
);

3169 
	`mem˝y
(&
m±r
[
•Ÿ
], &
block
[
ô
+2], 
Àngth
);

3170 
•Ÿ
 +
Àngth
;

3171 } i‡(
Àngth
 > 0) {

3172 
	`©h_dbg
(
comm⁄
, 
EEPROM
,

3174 
ô
, 
•Ÿ
, 
off£t
, 
Àngth
);

3175  
Ál£
;

3178  
åue
;

3179 
	}
}

3181 
	$¨9300_com¥ess_decisi⁄
(
©h_hw
 *
ah
,

3182 
ô
,

3183 
code
,

3184 
ª„ªn˚
,

3185 
u8
 *
m±r
,

3186 
u8
 *
w‹d
, 
Àngth
, 
md©a_size
)

3188 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

3189 c⁄° 
¨9300_ì¥om
 *
ìp
 = 
NULL
;

3191 
code
) {

3192 
_Com¥essN⁄e
:

3193 i‡(
Àngth
 !
md©a_size
) {

3194 
	`©h_dbg
(
comm⁄
, 
EEPROM
,

3196 
md©a_size
, 
Àngth
);

3199 
	`mem˝y
(
m±r
, 
w‹d
 + 
COMP_HDR_LEN
, 
Àngth
);

3200 
	`©h_dbg
(
comm⁄
, 
EEPROM
,

3202 
ô
, 
Àngth
);

3204 
_Com¥essBlock
:

3205 i‡(
ª„ªn˚
 == 0) {

3207 
ìp
 = 
	`¨9003_ì¥om_°ru˘_föd_by_id
(
ª„ªn˚
);

3208 i‡(
ìp
 =
NULL
) {

3209 
	`©h_dbg
(
comm⁄
, 
EEPROM
,

3211 
ª„ªn˚
);

3214 
	`mem˝y
(
m±r
, 
ìp
, 
md©a_size
);

3216 
	`©h_dbg
(
comm⁄
, 
EEPROM
,

3218 
ô
, 
ª„ªn˚
, 
Àngth
);

3219 
	`¨9300_uncom¥ess_block
(
ah
, 
m±r
, 
md©a_size
,

3220 (
w‹d
 + 
COMP_HDR_LEN
), 
Àngth
);

3223 
	`©h_dbg
(
comm⁄
, 
EEPROM
, "unknow¿com¥essi⁄ codê%d\n", 
code
);

3227 
	}
}

3229 
	$boﬁ
 (*
	tì¥om_ªad_›
)(
	t©h_hw
 *
	tah
, 
	taddªss
, 
	tu8
 *
	tbuf„r
,

3230 
	tcou¡
);

3232 
boﬁ
 
	$¨9300_check_hódî
(*
d©a
)

3234 
u32
 *
w‹d
 = 
d©a
;

3235  !(*
w‹d
 == 0 || *word == ~0);

3236 
	}
}

3238 
boﬁ
 
	$¨9300_check_ì¥om_hódî
(
©h_hw
 *
ah
, 
ì¥om_ªad_›
 
ªad
,

3239 
ba£_addr
)

3241 
u8
 
hódî
[4];

3243 i‡(!
	`ªad
(
ah
, 
ba£_addr
, 
hódî
, 4))

3244  
Ál£
;

3246  
	`¨9300_check_hódî
(
hódî
);

3247 
	}
}

3249 
	$¨9300_ì¥om_ª°‹e_Êash
(
©h_hw
 *
ah
, 
u8
 *
m±r
,

3250 
md©a_size
)

3252 
u16
 *
d©a
 = (u16 *Ë
m±r
;

3253 
i
;

3255 
i
 = 0; i < 
md©a_size
 / 2; i++, 
d©a
++)

3256 
	`©h9k_hw_nvøm_ªad
(
ah
, 
i
, 
d©a
);

3259 
	}
}

3267 
	$¨9300_ì¥om_ª°‹e_öã∫Æ
(
©h_hw
 *
ah
,

3268 
u8
 *
m±r
, 
md©a_size
)

3270 
	#MDEFAULT
 15

	)

3271 
	#MSTATE
 100

	)

3272 
˝å
;

3273 
u8
 *
w‹d
;

3274 
code
;

3275 
ª„ªn˚
, 
Àngth
, 
maj‹
, 
mö‹
;

3276 
osize
;

3277 
ô
;

3278 
u16
 
checksum
, 
mchecksum
;

3279 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

3280 
¨9300_ì¥om
 *
ìp
;

3281 
ì¥om_ªad_›
 
ªad
;

3283 i‡(
	`©h9k_hw_u£_Êash
(
ah
)) {

3284 
u8
 
txrx
;

3286 
	`¨9300_ì¥om_ª°‹e_Êash
(
ah
, 
m±r
, 
md©a_size
);

3289 
ìp
 = (
¨9300_ì¥om
 *Ë
m±r
;

3290 
txrx
 = 
ìp
->
ba£EïHódî
.
txrxMask
;

3291 i‡(
txrx
 != 0 &&Åxrx != 0xff)

3295 
w‹d
 = 
	`kzÆloc
(2048, 
GFP_KERNEL
);

3296 i‡(!
w‹d
)

3297  -
ENOMEM
;

3299 
	`mem˝y
(
m±r
, &
¨9300_deÁu…
, 
md©a_size
);

3301 
ªad
 = 
¨9300_ªad_ì¥om
;

3302 i‡(
	`AR_SREV_9485
(
ah
))

3303 
˝å
 = 
AR9300_BASE_ADDR_4K
;

3304 i‡(
	`AR_SREV_9330
(
ah
))

3305 
˝å
 = 
AR9300_BASE_ADDR_512
;

3307 
˝å
 = 
AR9300_BASE_ADDR
;

3308 
	`©h_dbg
(
comm⁄
, 
EEPROM
, "Trying EEPROMáccessát Address 0x%04x\n",

3309 
˝å
);

3310 i‡(
	`¨9300_check_ì¥om_hódî
(
ah
, 
ªad
, 
˝å
))

3311 
found
;

3313 
˝å
 = 
AR9300_BASE_ADDR_512
;

3314 
	`©h_dbg
(
comm⁄
, 
EEPROM
, "Trying EEPROMáccessát Address 0x%04x\n",

3315 
˝å
);

3316 i‡(
	`¨9300_check_ì¥om_hódî
(
ah
, 
ªad
, 
˝å
))

3317 
found
;

3319 
ªad
 = 
¨9300_ªad_Ÿp
;

3320 
˝å
 = 
AR9300_BASE_ADDR
;

3321 
	`©h_dbg
(
comm⁄
, 
EEPROM
, "Tryög OTPác˚s†© Addªs†0x%04x\n", 
˝å
);

3322 i‡(
	`¨9300_check_ì¥om_hódî
(
ah
, 
ªad
, 
˝å
))

3323 
found
;

3325 
˝å
 = 
AR9300_BASE_ADDR_512
;

3326 
	`©h_dbg
(
comm⁄
, 
EEPROM
, "Tryög OTPác˚s†© Addªs†0x%04x\n", 
˝å
);

3327 i‡(
	`¨9300_check_ì¥om_hódî
(
ah
, 
ªad
, 
˝å
))

3328 
found
;

3330 
Áû
;

3332 
found
:

3333 
	`©h_dbg
(
comm⁄
, 
EEPROM
, "Found valid EEPROM data\n");

3335 
ô
 = 0; ià< 
MSTATE
; it++) {

3336 i‡(!
	`ªad
(
ah
, 
˝å
, 
w‹d
, 
COMP_HDR_LEN
))

3337 
Áû
;

3339 i‡(!
	`¨9300_check_hódî
(
w‹d
))

3342 
	`¨9300_comp_hdr_u≈ack
(
w‹d
, &
code
, &
ª„ªn˚
,

3343 &
Àngth
, &
maj‹
, &
mö‹
);

3344 
	`©h_dbg
(
comm⁄
, 
EEPROM
,

3346 
˝å
, 
code
, 
ª„ªn˚
, 
Àngth
, 
maj‹
, 
mö‹
);

3347 i‡((!
	`AR_SREV_9485
(
ah
Ë&& 
Àngth
 >= 1024) ||

3348 (
	`AR_SREV_9485
(
ah
Ë&& 
Àngth
 > 
EEPROM_DATA_LEN_9485
)) {

3349 
	`©h_dbg
(
comm⁄
, 
EEPROM
, "Skipping bad header\n");

3350 
˝å
 -
COMP_HDR_LEN
;

3354 
osize
 = 
Àngth
;

3355 
	`ªad
(
ah
, 
˝å
, 
w‹d
, 
COMP_HDR_LEN
 + 
osize
 + 
COMP_CKSUM_LEN
);

3356 
checksum
 = 
	`¨9300_comp_cksum
(&
w‹d
[
COMP_HDR_LEN
], 
Àngth
);

3357 
mchecksum
 = 
	`gë_u«lig√d_À16
(&
w‹d
[
COMP_HDR_LEN
 + 
osize
]);

3358 
	`©h_dbg
(
comm⁄
, 
EEPROM
, "checksum %x %x\n",

3359 
checksum
, 
mchecksum
);

3360 i‡(
checksum
 =
mchecksum
) {

3361 
	`¨9300_com¥ess_decisi⁄
(
ah
, 
ô
, 
code
, 
ª„ªn˚
, 
m±r
,

3362 
w‹d
, 
Àngth
, 
md©a_size
);

3364 
	`©h_dbg
(
comm⁄
, 
EEPROM
,

3367 
˝å
 -(
COMP_HDR_LEN
 + 
osize
 + 
COMP_CKSUM_LEN
);

3370 
	`k‰ì
(
w‹d
);

3371  
˝å
;

3373 
Áû
:

3374 
	`k‰ì
(
w‹d
);

3376 
	}
}

3383 
boﬁ
 
	$©h9k_hw_¨9300_fûl_ì¥om
(
©h_hw
 *
ah
)

3385 
u8
 *
m±r
 = (u8 *Ë&
ah
->
ì¥om
.
¨9300_ìp
;

3387 i‡(
	`¨9300_ì¥om_ª°‹e_öã∫Æ
(
ah
, 
m±r
,

3388 (
¨9300_ì¥om
)) < 0)

3389  
Ál£
;

3391  
åue
;

3392 
	}
}

3394 #i‡
deföed
(
CPTCFG_ATH9K_DEBUGFS
Ë|| deföed(
CPTCFG_ATH9K_HTC_DEBUGFS
)

3395 
u32
 
	$¨9003_dump_modÆ_ì¥om
(*
buf
, 
u32
 
Àn
, u32 
size
,

3396 
¨9300_modÆ_ìp_hódî
 *
modÆ_hdr
)

3398 
	`PR_EEP
("Chaö0 A¡. C⁄åﬁ", 
	`À16_to_˝u
(
modÆ_hdr
->
™tCålChaö
[0]));

3399 
	`PR_EEP
("Chaö1 A¡. C⁄åﬁ", 
	`À16_to_˝u
(
modÆ_hdr
->
™tCålChaö
[1]));

3400 
	`PR_EEP
("Chaö2 A¡. C⁄åﬁ", 
	`À16_to_˝u
(
modÆ_hdr
->
™tCålChaö
[2]));

3401 
	`PR_EEP
("A¡. Comm⁄ C⁄åﬁ", 
	`À32_to_˝u
(
modÆ_hdr
->
™tCålComm⁄
));

3402 
	`PR_EEP
("A¡. Comm⁄ C⁄åﬁ2", 
	`À32_to_˝u
(
modÆ_hdr
->
™tCålComm⁄2
));

3403 
	`PR_EEP
("A¡. Gaö", 
modÆ_hdr
->
™ã¬aGaö
);

3404 
	`PR_EEP
("Swôch Sëée", 
modÆ_hdr
->
swôchSëéög
);

3405 
	`PR_EEP
("Chaö0 x©ãn1DB", 
modÆ_hdr
->
x©ãn1DB
[0]);

3406 
	`PR_EEP
("Chaö1 x©ãn1DB", 
modÆ_hdr
->
x©ãn1DB
[1]);

3407 
	`PR_EEP
("Chaö2 x©ãn1DB", 
modÆ_hdr
->
x©ãn1DB
[2]);

3408 
	`PR_EEP
("Chaö0 x©ãn1M¨gö", 
modÆ_hdr
->
x©ãn1M¨gö
[0]);

3409 
	`PR_EEP
("Chaö1 x©ãn1M¨gö", 
modÆ_hdr
->
x©ãn1M¨gö
[1]);

3410 
	`PR_EEP
("Chaö2 x©ãn1M¨gö", 
modÆ_hdr
->
x©ãn1M¨gö
[2]);

3411 
	`PR_EEP
("Tem∞Sl›e", 
modÆ_hdr
->
ãmpSl›e
);

3412 
	`PR_EEP
("VﬁàSl›e", 
modÆ_hdr
->
vﬁtSl›e
);

3413 
	`PR_EEP
("•u∏Ch™√ls0", 
modÆ_hdr
->
•urCh™s
[0]);

3414 
	`PR_EEP
("•u∏Ch™√ls1", 
modÆ_hdr
->
•urCh™s
[1]);

3415 
	`PR_EEP
("•u∏Ch™√ls2", 
modÆ_hdr
->
•urCh™s
[2]);

3416 
	`PR_EEP
("•u∏Ch™√ls3", 
modÆ_hdr
->
•urCh™s
[3]);

3417 
	`PR_EEP
("•u∏Ch™√ls4", 
modÆ_hdr
->
•urCh™s
[4]);

3418 
	`PR_EEP
("Chaö0 NF Thªshﬁd", 
modÆ_hdr
->
noi£Flo‹ThªshCh
[0]);

3419 
	`PR_EEP
("Chaö1 NF Thªshﬁd", 
modÆ_hdr
->
noi£Flo‹ThªshCh
[1]);

3420 
	`PR_EEP
("Chaö2 NF Thªshﬁd", 
modÆ_hdr
->
noi£Flo‹ThªshCh
[2]);

3421 
	`PR_EEP
("Quick Dr›", 
modÆ_hdr
->
quick_dr›
);

3422 
	`PR_EEP
("txEndToX∑Off", 
modÆ_hdr
->
txEndToX∑Off
);

3423 
	`PR_EEP
("xPA Bü†Levñ", 
modÆ_hdr
->
x∑BüsLvl
);

3424 
	`PR_EEP
("txFømeToD©aSèπ", 
modÆ_hdr
->
txFømeToD©aSèπ
);

3425 
	`PR_EEP
("txFømeToPaOn", 
modÆ_hdr
->
txFømeToPaOn
);

3426 
	`PR_EEP
("txFømeToX∑On", 
modÆ_hdr
->
txFømeToX∑On
);

3427 
	`PR_EEP
("txClù", 
modÆ_hdr
->
txClù
);

3428 
	`PR_EEP
("ADC Desúed size", 
modÆ_hdr
->
adcDesúedSize
);

3430  
Àn
;

3431 
	}
}

3433 
u32
 
	$©h9k_hw_¨9003_dump_ì¥om
(
©h_hw
 *
ah
, 
boﬁ
 
dump_ba£_hdr
,

3434 
u8
 *
buf
, 
u32
 
Àn
, u32 
size
)

3436 
¨9300_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
¨9300_ìp
;

3437 
¨9300_ba£_ìp_hdr
 *
pBa£
;

3439 i‡(!
dump_ba£_hdr
) {

3440 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen,

3442 
Àn
 = 
	`¨9003_dump_modÆ_ì¥om
(
buf
,Üí, 
size
,

3443 &
ìp
->
modÆHódî2G
);

3444 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen,

3446 
Àn
 = 
	`¨9003_dump_modÆ_ì¥om
(
buf
,Üí, 
size
,

3447 &
ìp
->
modÆHódî5G
);

3448 
out
;

3451 
pBa£
 = &
ìp
->
ba£EïHódî
;

3453 
	`PR_EEP
("EEPROM Vîsi⁄", 
ah
->
ì¥om
.
¨9300_ìp
.
ì¥omVîsi⁄
);

3454 
	`PR_EEP
("RegDomaö1", 
	`À16_to_˝u
(
pBa£
->
ªgDmn
[0]));

3455 
	`PR_EEP
("RegDomaö2", 
	`À16_to_˝u
(
pBa£
->
ªgDmn
[1]));

3456 
	`PR_EEP
("TX Mask", (
pBa£
->
txrxMask
 >> 4));

3457 
	`PR_EEP
("RX Mask", (
pBa£
->
txrxMask
 & 0x0f));

3458 
	`PR_EEP
("AŒow 5GHz", !!(
pBa£
->
›C≠Fœgs
.
›Fœgs
 &

3459 
AR5416_OPFLAGS_11A
));

3460 
	`PR_EEP
("AŒow 2GHz", !!(
pBa£
->
›C≠Fœgs
.
›Fœgs
 &

3461 
AR5416_OPFLAGS_11G
));

3462 
	`PR_EEP
("DißbÀ 2GHz HT20", !!(
pBa£
->
›C≠Fœgs
.
›Fœgs
 &

3463 
AR5416_OPFLAGS_N_2G_HT20
));

3464 
	`PR_EEP
("DißbÀ 2GHz HT40", !!(
pBa£
->
›C≠Fœgs
.
›Fœgs
 &

3465 
AR5416_OPFLAGS_N_2G_HT40
));

3466 
	`PR_EEP
("DißbÀ 5Ghz HT20", !!(
pBa£
->
›C≠Fœgs
.
›Fœgs
 &

3467 
AR5416_OPFLAGS_N_5G_HT20
));

3468 
	`PR_EEP
("DißbÀ 5Ghz HT40", !!(
pBa£
->
›C≠Fœgs
.
›Fœgs
 &

3469 
AR5416_OPFLAGS_N_5G_HT40
));

3470 
	`PR_EEP
("Big Endün", !!(
pBa£
->
›C≠Fœgs
.
ìpMisc
 & 0x01));

3471 
	`PR_EEP
("RF Sûít", 
pBa£
->
rfSûít
);

3472 
	`PR_EEP
("BT o±i⁄", 
pBa£
->
blueToŸhO±i⁄s
);

3473 
	`PR_EEP
("Devi˚ C≠", 
pBa£
->
devi˚C≠
);

3474 
	`PR_EEP
("Devi˚ Ty≥", 
pBa£
->
devi˚Ty≥
);

3475 
	`PR_EEP
("Powî TabÀ Off£t", 
pBa£
->
pwrTabÀOff£t
);

3476 
	`PR_EEP
("Tunög C≠s1", 
pBa£
->
∑øms_f‹_tunög_ˇps
[0]);

3477 
	`PR_EEP
("Tunög C≠s2", 
pBa£
->
∑øms_f‹_tunög_ˇps
[1]);

3478 
	`PR_EEP
("E«bÀ Tx Tem∞Comp", !!(
pBa£
->
„©uªE«bÀ
 & 
	`BIT
(0)));

3479 
	`PR_EEP
("E«bÀ Tx VﬁàComp", !!(
pBa£
->
„©uªE«bÀ
 & 
	`BIT
(1)));

3480 
	`PR_EEP
("E«bÀ fa° clock", !!(
pBa£
->
„©uªE«bÀ
 & 
	`BIT
(2)));

3481 
	`PR_EEP
("E«bÀ doublög", !!(
pBa£
->
„©uªE«bÀ
 & 
	`BIT
(3)));

3482 
	`PR_EEP
("I¡î«»ªguœt‹", !!(
pBa£
->
„©uªE«bÀ
 & 
	`BIT
(4)));

3483 
	`PR_EEP
("E«bÀ P≠rd", !!(
pBa£
->
„©uªE«bÀ
 & 
	`BIT
(5)));

3484 
	`PR_EEP
("Drivî Såígth", !!(
pBa£
->
miscC⁄figuøti⁄
 & 
	`BIT
(0)));

3485 
	`PR_EEP
("Quick Dr›", !!(
pBa£
->
miscC⁄figuøti⁄
 & 
	`BIT
(1)));

3486 
	`PR_EEP
("Chaö mask Redu˚", (
pBa£
->
miscC⁄figuøti⁄
 >> 0x3) & 0x1);

3487 
	`PR_EEP
("WrôêíabÀ Gpio", 
pBa£
->
ì¥omWrôeE«bÀGpio
);

3488 
	`PR_EEP
("WLAN DißbÀ Gpio", 
pBa£
->
wœnDißbÀGpio
);

3489 
	`PR_EEP
("WLAN LED Gpio", 
pBa£
->
wœnLedGpio
);

3490 
	`PR_EEP
("Rx B™d Sñe˘ Gpio", 
pBa£
->
rxB™dSñe˘Gpio
);

3491 
	`PR_EEP
("Tx Gaö", 
pBa£
->
txrxgaö
 >> 4);

3492 
	`PR_EEP
("Rx Gaö", 
pBa£
->
txrxgaö
 & 0xf);

3493 
	`PR_EEP
("SW Reg", 
	`À32_to_˝u
(
pBa£
->
swªg
));

3495 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%20s : %pM\n", "MacAddress",

3496 
ah
->
ì¥om
.
¨9300_ìp
.
macAddr
);

3497 
out
:

3498 i‡(
Àn
 > 
size
)

3499 
Àn
 = 
size
;

3501  
Àn
;

3502 
	}
}

3504 
u32
 
	$©h9k_hw_¨9003_dump_ì¥om
(
©h_hw
 *
ah
, 
boﬁ
 
dump_ba£_hdr
,

3505 
u8
 *
buf
, 
u32
 
Àn
, u32 
size
)

3508 
	}
}

3512 
	$©h9k_hw_¨9300_gë_ì¥om_vî
(
©h_hw
 *
ah
)

3514  
ah
->
ì¥om
.
¨9300_ìp
.
ì¥omVîsi⁄
;

3515 
	}
}

3518 
	$©h9k_hw_¨9300_gë_ì¥om_ªv
(
©h_hw
 *
ah
)

3521 
	}
}

3523 
¨9300_modÆ_ìp_hódî
 *
	$¨9003_modÆ_hódî
(
©h_hw
 *
ah
,

3524 
boﬁ
 
is2ghz
)

3526 
¨9300_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
¨9300_ìp
;

3528 i‡(
is2ghz
)

3529  &
ìp
->
modÆHódî2G
;

3531  &
ìp
->
modÆHódî5G
;

3532 
	}
}

3534 
	$¨9003_hw_x∑_büs_Àvñ_≠∂y
(
©h_hw
 *
ah
, 
boﬁ
 
is2ghz
)

3536 
büs
 = 
	`¨9003_modÆ_hódî
(
ah
, 
is2ghz
)->
x∑BüsLvl
;

3538 i‡(
	`AR_SREV_9485
(
ah
Ë|| 
	`AR_SREV_9330
◊hË|| 
	`AR_SREV_9340
(ah))

3539 
	`REG_RMW_FIELD
(
ah
, 
AR_CH0_TOP2
, 
AR_CH0_TOP2_XPABIASLVL
, 
büs
);

3540 i‡(
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9550
◊hË|| 
	`AR_SREV_9565
(ah))

3541 
	`REG_RMW_FIELD
(
ah
, 
AR_CH0_TOP
, 
AR_CH0_TOP_XPABIASLVL
, 
büs
);

3543 
	`REG_RMW_FIELD
(
ah
, 
AR_CH0_TOP
, 
AR_CH0_TOP_XPABIASLVL
, 
büs
);

3544 
	`REG_RMW_FIELD
(
ah
, 
AR_CH0_THERM
,

3545 
AR_CH0_THERM_XPABIASLVL_MSB
,

3546 
büs
 >> 2);

3547 
	`REG_RMW_FIELD
(
ah
, 
AR_CH0_THERM
,

3548 
AR_CH0_THERM_XPASHORT2GND
, 1);

3550 
	}
}

3552 
u16
 
	$¨9003_swôch_com_•dt_gë
(
©h_hw
 *
ah
, 
boﬁ
 
is2ghz
)

3554  
	`À16_to_˝u
(
	`¨9003_modÆ_hódî
(
ah
, 
is2ghz
)->
swôchcom•dt
);

3555 
	}
}

3557 
u32
 
	$¨9003_hw_™t_˘æ_comm⁄_gë
(
©h_hw
 *
ah
, 
boﬁ
 
is2ghz
)

3559  
	`À32_to_˝u
(
	`¨9003_modÆ_hódî
(
ah
, 
is2ghz
)->
™tCålComm⁄
);

3560 
	}
}

3562 
u32
 
	$¨9003_hw_™t_˘æ_comm⁄_2_gë
(
©h_hw
 *
ah
, 
boﬁ
 
is2ghz
)

3564  
	`À32_to_˝u
(
	`¨9003_modÆ_hódî
(
ah
, 
is2ghz
)->
™tCålComm⁄2
);

3565 
	}
}

3567 
u16
 
	$¨9003_hw_™t_˘æ_chaö_gë
(
©h_hw
 *
ah
, 
chaö
,

3568 
boﬁ
 
is2ghz
)

3570 
__À16
 
vÆ
 = 
	`¨9003_modÆ_hódî
(
ah
, 
is2ghz
)->
™tCålChaö
[
chaö
];

3571  
	`À16_to_˝u
(
vÆ
);

3572 
	}
}

3574 
	$¨9003_hw_™t_˘æ_≠∂y
(
©h_hw
 *
ah
, 
boﬁ
 
is2ghz
)

3576 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

3577 
©h9k_hw_ˇ∑bûôõs
 *
pC≠
 = &
ah
->
ˇps
;

3578 
chaö
;

3579 
u32
 
ªgvÆ
, 
vÆue
, 
gpio
;

3580 c⁄° 
u32
 
swôch_chaö_ªg
[
AR9300_MAX_CHAINS
] = {

3581 
AR_PHY_SWITCH_CHAIN_0
,

3582 
AR_PHY_SWITCH_CHAIN_1
,

3583 
AR_PHY_SWITCH_CHAIN_2
,

3586 i‡(
	`AR_SREV_9485
(
ah
Ë&& (
	`¨9003_hw_gë_rx_gaö_idx
(ah) == 0)) {

3587 i‡(
ah
->
c⁄fig
.
x a_gpio
)

3588 
gpio
 = 
ah
->
c⁄fig
.
x a_gpio
;

3590 
gpio
 = 
AR9300_EXT_LNA_CTL_GPIO_AR9485
;

3592 
	`©h9k_hw_cfg_ouçut
(
ah
, 
gpio
,

3593 
AR_GPIO_OUTPUT_MUX_AS_PCIE_ATTENTION_LED
);

3596 
vÆue
 = 
	`¨9003_hw_™t_˘æ_comm⁄_gë
(
ah
, 
is2ghz
);

3598 i‡(
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9565
(ah)) {

3599 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SWITCH_COM
,

3600 
AR_SWITCH_TABLE_COM_AR9462_ALL
, 
vÆue
);

3601 } i‡(
	`AR_SREV_9550
(
ah
Ë|| 
	`AR_SREV_9531
(ah)) {

3602 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SWITCH_COM
,

3603 
AR_SWITCH_TABLE_COM_AR9550_ALL
, 
vÆue
);

3605 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SWITCH_COM
,

3606 
AR_SWITCH_TABLE_COM_ALL
, 
vÆue
);

3622 i‡(
	`AR_SREV_9462_20_OR_LATER
(
ah
Ë|| 
	`AR_SREV_9565
(ah)) {

3623 
vÆue
 = 
	`¨9003_swôch_com_•dt_gë
(
ah
, 
is2ghz
);

3624 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_GLB_CONTROL
,

3625 
AR_SWITCH_TABLE_COM_SPDT_ALL
, 
vÆue
);

3626 
	`REG_SET_BIT
(
ah
, 
AR_PHY_GLB_CONTROL
, 
AR_BTCOEX_CTRL_SPDT_ENABLE
);

3629 
vÆue
 = 
	`¨9003_hw_™t_˘æ_comm⁄_2_gë
(
ah
, 
is2ghz
);

3630 i‡(
	`AR_SREV_9485
(
ah
Ë&& 
comm⁄
->
bt_™t_divîsôy
) {

3631 
vÆue
 &~
AR_SWITCH_TABLE_COM2_ALL
;

3632 
vÆue
 |
ah
->
c⁄fig
.
™t_˘æ_comm2g_swôch_íabÀ
;

3635 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SWITCH_COM_2
, 
AR_SWITCH_TABLE_COM2_ALL
, 
vÆue
);

3637 i‡((
	`AR_SREV_9462
(
ah
)Ë&& (ah->
rxchaömask
 == 0x2)) {

3638 
vÆue
 = 
	`¨9003_hw_™t_˘æ_chaö_gë
(
ah
, 1, 
is2ghz
);

3639 
	`REG_RMW_FIELD
(
ah
, 
swôch_chaö_ªg
[0],

3640 
AR_SWITCH_TABLE_ALL
, 
vÆue
);

3643 
chaö
 = 0; chaö < 
AR9300_MAX_CHAINS
; chain++) {

3644 i‡((
ah
->
rxchaömask
 & 
	`BIT
(
chaö
)) ||

3645 (
ah
->
txchaömask
 & 
	`BIT
(
chaö
))) {

3646 
vÆue
 = 
	`¨9003_hw_™t_˘æ_chaö_gë
(
ah
, 
chaö
,

3647 
is2ghz
);

3648 
	`REG_RMW_FIELD
(
ah
, 
swôch_chaö_ªg
[
chaö
],

3649 
AR_SWITCH_TABLE_ALL
, 
vÆue
);

3653 i‡(
	`AR_SREV_9330
(
ah
Ë|| 
	`AR_SREV_9485
◊hË|| 
	`AR_SREV_9565
(ah)) {

3654 
vÆue
 = 
	`©h9k_hw_¨9300_gë_ì¥om
(
ah
, 
EEP_ANT_DIV_CTL1
);

3659 
ªgvÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_MC_GAIN_CTRL
);

3660 
ªgvÆ
 &(~
AR_ANT_DIV_CTRL_ALL
);

3661 
ªgvÆ
 |(
vÆue
 & 0x3fË<< 
AR_ANT_DIV_CTRL_ALL_S
;

3663 
ªgvÆ
 &(~
AR_PHY_ANT_DIV_LNADIV
);

3664 
ªgvÆ
 |((
vÆue
 >> 6Ë& 0x1Ë<< 
AR_PHY_ANT_DIV_LNADIV_S
;

3666 i‡(
	`AR_SREV_9485
(
ah
Ë&& 
comm⁄
->
bt_™t_divîsôy
)

3667 
ªgvÆ
 |
AR_ANT_DIV_ENABLE
;

3669 i‡(
	`AR_SREV_9565
(
ah
)) {

3670 i‡(
comm⁄
->
bt_™t_divîsôy
) {

3671 
ªgvÆ
 |(1 << 
AR_PHY_ANT_SW_RX_PROT_S
);

3673 
	`REG_SET_BIT
(
ah
, 
AR_PHY_RESTART
,

3674 
AR_PHY_RESTART_ENABLE_DIV_M2FLAG
);

3677 
	`REG_SET_BIT
(
ah
, 
AR_BTCOEX_WL_LNADIV
,

3678 
AR_BTCOEX_WL_LNADIV_FORCE_ON
);

3680 
ªgvÆ
 &~(1 << 
AR_PHY_ANT_DIV_LNADIV_S
);

3681 
ªgvÆ
 &~(1 << 
AR_PHY_ANT_SW_RX_PROT_S
);

3683 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_MC_GAIN_CTRL
,

3684 (1 << 
AR_PHY_ANT_SW_RX_PROT_S
));

3687 
	`REG_CLR_BIT
(
ah
, 
AR_BTCOEX_WL_LNADIV
,

3688 
AR_BTCOEX_WL_LNADIV_FORCE_ON
);

3692 
	`REG_WRITE
(
ah
, 
AR_PHY_MC_GAIN_CTRL
, 
ªgvÆ
);

3695 
ªgvÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_CCK_DETECT
);

3696 
ªgvÆ
 &(~
AR_FAST_DIV_ENABLE
);

3697 
ªgvÆ
 |((
vÆue
 >> 7Ë& 0x1Ë<< 
AR_FAST_DIV_ENABLE_S
;

3699 i‡((
	`AR_SREV_9485
(
ah
Ë|| 
	`AR_SREV_9565
(ah))

3700 && 
comm⁄
->
bt_™t_divîsôy
)

3701 
ªgvÆ
 |
AR_FAST_DIV_ENABLE
;

3703 
	`REG_WRITE
(
ah
, 
AR_PHY_CCK_DETECT
, 
ªgvÆ
);

3705 i‡(
pC≠
->
hw_ˇps
 & 
ATH9K_HW_CAP_ANT_DIV_COMB
) {

3706 
ªgvÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_MC_GAIN_CTRL
);

3711 
ªgvÆ
 &(~(
AR_PHY_ANT_DIV_MAIN_LNACONF
 |

3712 
AR_PHY_ANT_DIV_ALT_LNACONF
 |

3713 
AR_PHY_ANT_DIV_ALT_GAINTB
 |

3714 
AR_PHY_ANT_DIV_MAIN_GAINTB
));

3716 
ªgvÆ
 |(
ATH_ANT_DIV_COMB_LNA1
 <<

3717 
AR_PHY_ANT_DIV_MAIN_LNACONF_S
);

3718 
ªgvÆ
 |(
ATH_ANT_DIV_COMB_LNA2
 <<

3719 
AR_PHY_ANT_DIV_ALT_LNACONF_S
);

3720 
	`REG_WRITE
(
ah
, 
AR_PHY_MC_GAIN_CTRL
, 
ªgvÆ
);

3723 
	}
}

3725 
	$¨9003_hw_drive_°ªngth_≠∂y
(
©h_hw
 *
ah
)

3727 
¨9300_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
¨9300_ìp
;

3728 
¨9300_ba£_ìp_hdr
 *
pBa£
 = &
ìp
->
ba£EïHódî
;

3729 
drive_°ªngth
;

3730 
ªg
;

3732 
drive_°ªngth
 = 
pBa£
->
miscC⁄figuøti⁄
 & 
	`BIT
(0);

3733 i‡(!
drive_°ªngth
)

3736 
ªg
 = 
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH0_BIAS1
);

3737 
ªg
 &= ~0x00ffffc0;

3738 
ªg
 |= 0x5 << 21;

3739 
ªg
 |= 0x5 << 18;

3740 
ªg
 |= 0x5 << 15;

3741 
ªg
 |= 0x5 << 12;

3742 
ªg
 |= 0x5 << 9;

3743 
ªg
 |= 0x5 << 6;

3744 
	`REG_WRITE
(
ah
, 
AR_PHY_65NM_CH0_BIAS1
, 
ªg
);

3746 
ªg
 = 
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH0_BIAS2
);

3747 
ªg
 &= ~0xffffffe0;

3748 
ªg
 |= 0x5 << 29;

3749 
ªg
 |= 0x5 << 26;

3750 
ªg
 |= 0x5 << 23;

3751 
ªg
 |= 0x5 << 20;

3752 
ªg
 |= 0x5 << 17;

3753 
ªg
 |= 0x5 << 14;

3754 
ªg
 |= 0x5 << 11;

3755 
ªg
 |= 0x5 << 8;

3756 
ªg
 |= 0x5 << 5;

3757 
	`REG_WRITE
(
ah
, 
AR_PHY_65NM_CH0_BIAS2
, 
ªg
);

3759 
ªg
 = 
	`REG_READ
(
ah
, 
AR_PHY_65NM_CH0_BIAS4
);

3760 
ªg
 &= ~0xff800000;

3761 
ªg
 |= 0x5 << 29;

3762 
ªg
 |= 0x5 << 26;

3763 
ªg
 |= 0x5 << 23;

3764 
	`REG_WRITE
(
ah
, 
AR_PHY_65NM_CH0_BIAS4
, 
ªg
);

3765 
	}
}

3767 
u16
 
	$¨9003_hw_©ãn_chaö_gë
(
©h_hw
 *
ah
, 
chaö
,

3768 
©h9k_ch™√l
 *
ch™
)

3770 
f
[3], 
t
[3];

3771 
u16
 
vÆue
;

3772 
¨9300_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
¨9300_ìp
;

3774 i‡(
chaö
 >= 0 && chain < 3) {

3775 i‡(
	`IS_CHAN_2GHZ
(
ch™
))

3776  
ìp
->
modÆHódî2G
.
x©ãn1DB
[
chaö
];

3777 i‡(
ìp
->
ba£_ext2
.
x©ãn1DBLow
[
chaö
] != 0) {

3778 
t
[0] = 
ìp
->
ba£_ext2
.
x©ãn1DBLow
[
chaö
];

3779 
f
[0] = 5180;

3780 
t
[1] = 
ìp
->
modÆHódî5G
.
x©ãn1DB
[
chaö
];

3781 
f
[1] = 5500;

3782 
t
[2] = 
ìp
->
ba£_ext2
.
x©ãn1DBHigh
[
chaö
];

3783 
f
[2] = 5785;

3784 
vÆue
 = 
	`¨9003_hw_powî_öãΩﬁ©e
((
s32
Ë
ch™
->
ch™√l
,

3785 
f
, 
t
, 3);

3786  
vÆue
;

3788  
ìp
->
modÆHódî5G
.
x©ãn1DB
[
chaö
];

3792 
	}
}

3795 
u16
 
	$¨9003_hw_©ãn_chaö_gë_m¨gö
(
©h_hw
 *
ah
, 
chaö
,

3796 
©h9k_ch™√l
 *
ch™
)

3798 
f
[3], 
t
[3];

3799 
u16
 
vÆue
;

3800 
¨9300_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
¨9300_ìp
;

3802 i‡(
chaö
 >= 0 && chain < 3) {

3803 i‡(
	`IS_CHAN_2GHZ
(
ch™
))

3804  
ìp
->
modÆHódî2G
.
x©ãn1M¨gö
[
chaö
];

3805 i‡(
ìp
->
ba£_ext2
.
x©ãn1M¨göLow
[
chaö
] != 0) {

3806 
t
[0] = 
ìp
->
ba£_ext2
.
x©ãn1M¨göLow
[
chaö
];

3807 
f
[0] = 5180;

3808 
t
[1] = 
ìp
->
modÆHódî5G
.
x©ãn1M¨gö
[
chaö
];

3809 
f
[1] = 5500;

3810 
t
[2] = 
ìp
->
ba£_ext2
.
x©ãn1M¨göHigh
[
chaö
];

3811 
f
[2] = 5785;

3812 
vÆue
 = 
	`¨9003_hw_powî_öãΩﬁ©e
((
s32
Ë
ch™
->
ch™√l
,

3813 
f
, 
t
, 3);

3814  
vÆue
;

3816  
ìp
->
modÆHódî5G
.
x©ãn1M¨gö
[
chaö
];

3820 
	}
}

3822 
	$¨9003_hw_©ãn_≠∂y
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
)

3824 
i
;

3825 
u16
 
vÆue
;

3826 
ext_©ãn_ªg
[3] = {
AR_PHY_EXT_ATTEN_CTL_0
,

3827 
AR_PHY_EXT_ATTEN_CTL_1
,

3828 
AR_PHY_EXT_ATTEN_CTL_2
,

3831 i‡((
	`AR_SREV_9462
(
ah
)Ë&& (ah->
rxchaömask
 == 0x2)) {

3832 
vÆue
 = 
	`¨9003_hw_©ãn_chaö_gë
(
ah
, 1, 
ch™
);

3833 
	`REG_RMW_FIELD
(
ah
, 
ext_©ãn_ªg
[0],

3834 
AR_PHY_EXT_ATTEN_CTL_XATTEN1_DB
, 
vÆue
);

3836 
vÆue
 = 
	`¨9003_hw_©ãn_chaö_gë_m¨gö
(
ah
, 1, 
ch™
);

3837 
	`REG_RMW_FIELD
(
ah
, 
ext_©ãn_ªg
[0],

3838 
AR_PHY_EXT_ATTEN_CTL_XATTEN1_MARGIN
,

3839 
vÆue
);

3843 
i
 = 0; i < 3; i++) {

3844 i‡(
ah
->
txchaömask
 & 
	`BIT
(
i
)) {

3845 
vÆue
 = 
	`¨9003_hw_©ãn_chaö_gë
(
ah
, 
i
, 
ch™
);

3846 
	`REG_RMW_FIELD
(
ah
, 
ext_©ãn_ªg
[
i
],

3847 
AR_PHY_EXT_ATTEN_CTL_XATTEN1_DB
, 
vÆue
);

3849 i‡(
	`AR_SREV_9485
(
ah
) &&

3850 (
	`¨9003_hw_gë_rx_gaö_idx
(
ah
) == 0) &&

3851 
ah
->
c⁄fig
.
x©ãn_m¨gö_cfg
)

3852 
vÆue
 = 5;

3854 
vÆue
 = 
	`¨9003_hw_©ãn_chaö_gë_m¨gö
(
ah
, 
i
, 
ch™
);

3856 i‡(
ah
->
c⁄fig
.
Æt_mögaöidx
)

3857 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_EXT_ATTEN_CTL_0
,

3858 
AR_PHY_EXT_ATTEN_CTL_XATTEN1_MARGIN
,

3859 
vÆue
);

3861 
	`REG_RMW_FIELD
(
ah
, 
ext_©ãn_ªg
[
i
],

3862 
AR_PHY_EXT_ATTEN_CTL_XATTEN1_MARGIN
,

3863 
vÆue
);

3866 
	}
}

3868 
boﬁ
 
	$is_pmu_£t
(
©h_hw
 *
ah
, 
u32
 
pmu_ªg
, 
pmu_£t
)

3870 
timeout
 = 100;

3872 
pmu_£t
 !
	`REG_READ
(
ah
, 
pmu_ªg
)) {

3873 i‡(
timeout
-- == 0)

3874  
Ál£
;

3875 
	`REG_WRITE
(
ah
, 
pmu_ªg
, 
pmu_£t
);

3876 
	`udñay
(10);

3879  
åue
;

3880 
	}
}

3882 
	$¨9003_hw_öã∫Æ_ªguœt‹_≠∂y
(
©h_hw
 *
ah
)

3884 
¨9300_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
¨9300_ìp
;

3885 
¨9300_ba£_ìp_hdr
 *
pBa£
 = &
ìp
->
ba£EïHódî
;

3886 
u32
 
ªg_vÆ
;

3888 i‡(
pBa£
->
„©uªE«bÀ
 & 
	`BIT
(4)) {

3889 i‡(
	`AR_SREV_9330
(
ah
Ë|| 
	`AR_SREV_9485
(ah)) {

3890 
ªg_pmu_£t
;

3892 
ªg_pmu_£t
 = 
	`REG_READ
(
ah
, 
AR_PHY_PMU2
Ë& ~
AR_PHY_PMU2_PGM
;

3893 
	`REG_WRITE
(
ah
, 
AR_PHY_PMU2
, 
ªg_pmu_£t
);

3894 i‡(!
	`is_pmu_£t
(
ah
, 
AR_PHY_PMU2
, 
ªg_pmu_£t
))

3897 i‡(
	`AR_SREV_9330
(
ah
)) {

3898 i‡(
ah
->
is_˛k_25mhz
) {

3899 
ªg_pmu_£t
 = (3 << 1) | (8 << 4) |

3904 
ªg_pmu_£t
 = (4 << 1) | (7 << 4) |

3910 
ªg_pmu_£t
 = (5 << 1) | (7 << 4) |

3916 
	`REG_WRITE
(
ah
, 
AR_PHY_PMU1
, 
ªg_pmu_£t
);

3917 i‡(!
	`is_pmu_£t
(
ah
, 
AR_PHY_PMU1
, 
ªg_pmu_£t
))

3920 
ªg_pmu_£t
 = (
	`REG_READ
(
ah
, 
AR_PHY_PMU2
) & ~0xFFC00000)

3922 
	`REG_WRITE
(
ah
, 
AR_PHY_PMU2
, 
ªg_pmu_£t
);

3923 i‡(!
	`is_pmu_£t
(
ah
, 
AR_PHY_PMU2
, 
ªg_pmu_£t
))

3926 
ªg_pmu_£t
 = (
	`REG_READ
(
ah
, 
AR_PHY_PMU2
) & ~0x00200000)

3928 
	`REG_WRITE
(
ah
, 
AR_PHY_PMU2
, 
ªg_pmu_£t
);

3929 i‡(!
	`is_pmu_£t
(
ah
, 
AR_PHY_PMU2
, 
ªg_pmu_£t
))

3931 } i‡(
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9565
(ah)) {

3932 
ªg_vÆ
 = 
	`À32_to_˝u
(
pBa£
->
swªg
);

3933 
	`REG_WRITE
(
ah
, 
AR_PHY_PMU1
, 
ªg_vÆ
);

3936 
ªg_vÆ
 = 
	`À32_to_˝u
(
pBa£
->
swªg
);

3937 
	`REG_WRITE
(
ah
, 
AR_RTC_REG_CONTROL1
,

3938 
	`REG_READ
(
ah
, 
AR_RTC_REG_CONTROL1
) &

3939 (~
AR_RTC_REG_CONTROL1_SWREG_PROGRAM
));

3940 
	`REG_WRITE
(
ah
, 
AR_RTC_REG_CONTROL0
, 
ªg_vÆ
);

3942 
	`REG_WRITE
(
ah
, 
AR_RTC_REG_CONTROL1
,

3943 
	`REG_READ
(
ah
,

3944 
AR_RTC_REG_CONTROL1
) |

3945 
AR_RTC_REG_CONTROL1_SWREG_PROGRAM
);

3948 i‡(
	`AR_SREV_9330
(
ah
Ë|| 
	`AR_SREV_9485
(ah)) {

3949 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PMU2
, 
AR_PHY_PMU2_PGM
, 0);

3950 
	`REG_READ_FIELD
(
ah
, 
AR_PHY_PMU2
,

3951 
AR_PHY_PMU2_PGM
))

3952 
	`udñay
(10);

3954 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PMU1
, 
AR_PHY_PMU1_PWD
, 0x1);

3955 !
	`REG_READ_FIELD
(
ah
, 
AR_PHY_PMU1
,

3956 
AR_PHY_PMU1_PWD
))

3957 
	`udñay
(10);

3958 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PMU2
, 
AR_PHY_PMU2_PGM
, 0x1);

3959 !
	`REG_READ_FIELD
(
ah
, 
AR_PHY_PMU2
,

3960 
AR_PHY_PMU2_PGM
))

3961 
	`udñay
(10);

3962 } i‡(
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9565
(ah))

3963 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PMU1
, 
AR_PHY_PMU1_PWD
, 0x1);

3965 
ªg_vÆ
 = 
	`REG_READ
(
ah
, 
AR_RTC_SLEEP_CLK
) |

3966 
AR_RTC_FORCE_SWREG_PRD
;

3967 
	`REG_WRITE
(
ah
, 
AR_RTC_SLEEP_CLK
, 
ªg_vÆ
);

3971 
	}
}

3973 
	$¨9003_hw_≠∂y_tunög_ˇps
(
©h_hw
 *
ah
)

3975 
¨9300_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
¨9300_ìp
;

3976 
u8
 
tunög_ˇps_∑øm
 = 
ìp
->
ba£EïHódî
.
∑øms_f‹_tunög_ˇps
[0];

3978 i‡(
	`AR_SREV_9340
(
ah
Ë|| 
	`AR_SREV_9531
(ah))

3981 i‡(
ìp
->
ba£EïHódî
.
„©uªE«bÀ
 & 0x40) {

3982 
tunög_ˇps_∑øm
 &= 0x7f;

3983 
	`REG_RMW_FIELD
(
ah
, 
AR_CH0_XTAL
, 
AR_CH0_XTAL_CAPINDAC
,

3984 
tunög_ˇps_∑øm
);

3985 
	`REG_RMW_FIELD
(
ah
, 
AR_CH0_XTAL
, 
AR_CH0_XTAL_CAPOUTDAC
,

3986 
tunög_ˇps_∑øm
);

3988 
	}
}

3990 
	$¨9003_hw_quick_dr›_≠∂y
(
©h_hw
 *
ah
, 
u16
 
‰eq
)

3992 
¨9300_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
¨9300_ìp
;

3993 
¨9300_ba£_ìp_hdr
 *
pBa£
 = &
ìp
->
ba£EïHódî
;

3994 
quick_dr›
;

3995 
s32
 
t
[3], 
f
[3] = {5180, 5500, 5785};

3997 i‡(!(
pBa£
->
miscC⁄figuøti⁄
 & 
	`BIT
(4)))

4000 i‡(
	`AR_SREV_9300
(
ah
Ë|| 
	`AR_SREV_9580
◊hË|| 
	`AR_SREV_9340
(ah)) {

4001 i‡(
‰eq
 < 4000) {

4002 
quick_dr›
 = 
ìp
->
modÆHódî2G
.quick_drop;

4004 
t
[0] = 
ìp
->
ba£_ext1
.
quick_dr›_low
;

4005 
t
[1] = 
ìp
->
modÆHódî5G
.
quick_dr›
;

4006 
t
[2] = 
ìp
->
ba£_ext1
.
quick_dr›_high
;

4007 
quick_dr›
 = 
	`¨9003_hw_powî_öãΩﬁ©e
(
‰eq
, 
f
, 
t
, 3);

4009 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_AGC
, 
AR_PHY_AGC_QUICK_DROP
, 
quick_dr›
);

4011 
	}
}

4013 
	$¨9003_hw_txíd_to_x∑_off_≠∂y
(
©h_hw
 *
ah
, 
boﬁ
 
is2ghz
)

4015 
u32
 
vÆue
;

4017 
vÆue
 = 
	`¨9003_modÆ_hódî
(
ah
, 
is2ghz
)->
txEndToX∑Off
;

4019 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_XPA_TIMING_CTL
,

4020 
AR_PHY_XPA_TIMING_CTL_TX_END_XPAB_OFF
, 
vÆue
);

4021 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_XPA_TIMING_CTL
,

4022 
AR_PHY_XPA_TIMING_CTL_TX_END_XPAA_OFF
, 
vÆue
);

4023 
	}
}

4025 
	$¨9003_hw_x∑_timög_c⁄åﬁ_≠∂y
(
©h_hw
 *
ah
, 
boﬁ
 
is2ghz
)

4027 
¨9300_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
¨9300_ìp
;

4028 
u8
 
x∑_˘l
;

4030 i‡(!(
ìp
->
ba£EïHódî
.
„©uªE«bÀ
 & 0x80))

4033 i‡(!
	`AR_SREV_9300
(
ah
) &&

4034 !
	`AR_SREV_9340
(
ah
) &&

4035 !
	`AR_SREV_9580
(
ah
) &&

4036 !
	`AR_SREV_9531
(
ah
))

4039 
x∑_˘l
 = 
	`¨9003_modÆ_hódî
(
ah
, 
is2ghz
)->
txFømeToX∑On
;

4040 i‡(
is2ghz
)

4041 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_XPA_TIMING_CTL
,

4042 
AR_PHY_XPA_TIMING_CTL_FRAME_XPAB_ON
, 
x∑_˘l
);

4044 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_XPA_TIMING_CTL
,

4045 
AR_PHY_XPA_TIMING_CTL_FRAME_XPAA_ON
, 
x∑_˘l
);

4046 
	}
}

4048 
	$¨9003_hw_x a_büs_°ªngth_≠∂y
(
©h_hw
 *
ah
, 
boﬁ
 
is2ghz
)

4050 
¨9300_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
¨9300_ìp
;

4051 
u8
 
büs
;

4053 i‡(!(
ìp
->
ba£EïHódî
.
miscC⁄figuøti⁄
 & 0x40))

4056 i‡(!
	`AR_SREV_9300
(
ah
))

4059 
büs
 = 
	`¨9003_modÆ_hódî
(
ah
, 
is2ghz
)->
x a_büs_°ªngth
;

4060 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_65NM_CH0_RXTX4
, 
AR_PHY_65NM_RXTX4_XLNA_BIAS
,

4061 
büs
 & 0x3);

4062 
büs
 >>= 2;

4063 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_65NM_CH1_RXTX4
, 
AR_PHY_65NM_RXTX4_XLNA_BIAS
,

4064 
büs
 & 0x3);

4065 
büs
 >>= 2;

4066 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_65NM_CH2_RXTX4
, 
AR_PHY_65NM_RXTX4_XLNA_BIAS
,

4067 
büs
 & 0x3);

4068 
	}
}

4070 
	$¨9003_hw_gë_thîmomëî
(
©h_hw
 *
ah
)

4072 
¨9300_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
¨9300_ìp
;

4073 
¨9300_ba£_ìp_hdr
 *
pBa£
 = &
ìp
->
ba£EïHódî
;

4074 
thîmomëî
 = (
pBa£
->
miscC⁄figuøti⁄
 >> 1) & 0x3;

4076  --
thîmomëî
;

4077 
	}
}

4079 
	$¨9003_hw_thîmomëî_≠∂y
(
©h_hw
 *
ah
)

4081 
thîmomëî
 = 
	`¨9003_hw_gë_thîmomëî
(
ah
);

4082 
u8
 
thîm_⁄
 = (
thîmomëî
 < 0) ? 0 : 1;

4084 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_65NM_CH0_RXTX4
,

4085 
AR_PHY_65NM_CH0_RXTX4_THERM_ON_OVR
, 
thîm_⁄
);

4086 i‡(
ah
->
ˇps
.
tx_chaömask
 & 
	`BIT
(1))

4087 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_65NM_CH1_RXTX4
,

4088 
AR_PHY_65NM_CH0_RXTX4_THERM_ON_OVR
, 
thîm_⁄
);

4089 i‡(
ah
->
ˇps
.
tx_chaömask
 & 
	`BIT
(2))

4090 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_65NM_CH2_RXTX4
,

4091 
AR_PHY_65NM_CH0_RXTX4_THERM_ON_OVR
, 
thîm_⁄
);

4093 
thîm_⁄
 = (
thîmomëî
 < 0) ? 0 : (thermometer == 0);

4094 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_65NM_CH0_RXTX4
,

4095 
AR_PHY_65NM_CH0_RXTX4_THERM_ON
, 
thîm_⁄
);

4096 i‡(
ah
->
ˇps
.
tx_chaömask
 & 
	`BIT
(1)) {

4097 
thîm_⁄
 = (
thîmomëî
 < 0) ? 0 : (thermometer == 1);

4098 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_65NM_CH1_RXTX4
,

4099 
AR_PHY_65NM_CH0_RXTX4_THERM_ON
, 
thîm_⁄
);

4101 i‡(
ah
->
ˇps
.
tx_chaömask
 & 
	`BIT
(2)) {

4102 
thîm_⁄
 = (
thîmomëî
 < 0) ? 0 : (thermometer == 2);

4103 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_65NM_CH2_RXTX4
,

4104 
AR_PHY_65NM_CH0_RXTX4_THERM_ON
, 
thîm_⁄
);

4106 
	}
}

4108 
	$¨9003_hw_thîmo_ˇl_≠∂y
(
©h_hw
 *
ah
)

4110 
u32
 
d©a
, 
ko
, 
kg
;

4112 i‡(!
	`AR_SREV_9462_20_OR_LATER
(
ah
))

4115 
	`¨9300_Ÿp_ªad_w‹d
(
ah
, 1, &
d©a
);

4116 
ko
 = 
d©a
 & 0xff;

4117 
kg
 = (
d©a
 >> 8) & 0xff;

4118 i‡(
ko
 || 
kg
) {

4119 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_BB_THERM_ADC_3
,

4120 
AR_PHY_BB_THERM_ADC_3_THERM_ADC_OFFSET
, 
ko
);

4121 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_BB_THERM_ADC_3
,

4122 
AR_PHY_BB_THERM_ADC_3_THERM_ADC_SCALE_GAIN
,

4123 
kg
 + 256);

4125 
	}
}

4127 
	$¨9003_hw_≠∂y_möcˇpwr_thªsh
(
©h_hw
 *
ah
,

4128 
boﬁ
 
is2ghz
)

4130 
¨9300_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
¨9300_ìp
;

4131 c⁄° 
u_öt32_t
 
cˇ_˘æ
[
AR9300_MAX_CHAINS
] = {

4132 
AR_PHY_CCA_CTRL_0
,

4133 
AR_PHY_CCA_CTRL_1
,

4134 
AR_PHY_CCA_CTRL_2
,

4136 
chaö
;

4137 
u32
 
vÆ
;

4139 i‡(
is2ghz
) {

4140 i‡(!(
ìp
->
ba£_ext1
.
misc_íabÀ
 & 
	`BIT
(2)))

4143 i‡(!(
ìp
->
ba£_ext1
.
misc_íabÀ
 & 
	`BIT
(3)))

4147 
chaö
 = 0; chaö < 
AR9300_MAX_CHAINS
; chain++) {

4148 i‡(!(
ah
->
ˇps
.
tx_chaömask
 & 
	`BIT
(
chaö
)))

4151 
vÆ
 = 
	`¨9003_modÆ_hódî
(
ah
, 
is2ghz
)->
noi£Flo‹ThªshCh
[
chaö
];

4152 
	`REG_RMW_FIELD
(
ah
, 
cˇ_˘æ
[
chaö
],

4153 
AR_PHY_EXT_CCA0_THRESH62_1
, 
vÆ
);

4156 
	}
}

4158 
	$©h9k_hw_¨9300_£t_bﬂrd_vÆues
(
©h_hw
 *
ah
,

4159 
©h9k_ch™√l
 *
ch™
)

4161 
boﬁ
 
is2ghz
 = 
	`IS_CHAN_2GHZ
(
ch™
);

4162 
	`¨9003_hw_x∑_timög_c⁄åﬁ_≠∂y
(
ah
, 
is2ghz
);

4163 
	`¨9003_hw_x∑_büs_Àvñ_≠∂y
(
ah
, 
is2ghz
);

4164 
	`¨9003_hw_™t_˘æ_≠∂y
(
ah
, 
is2ghz
);

4165 
	`¨9003_hw_drive_°ªngth_≠∂y
(
ah
);

4166 
	`¨9003_hw_x a_büs_°ªngth_≠∂y
(
ah
, 
is2ghz
);

4167 
	`¨9003_hw_©ãn_≠∂y
(
ah
, 
ch™
);

4168 
	`¨9003_hw_quick_dr›_≠∂y
(
ah
, 
ch™
->
ch™√l
);

4169 i‡(!
	`AR_SREV_9330
(
ah
Ë&& !
	`AR_SREV_9340
◊hË&& !
	`AR_SREV_9531
(ah))

4170 
	`¨9003_hw_öã∫Æ_ªguœt‹_≠∂y
(
ah
);

4171 
	`¨9003_hw_≠∂y_tunög_ˇps
(
ah
);

4172 
	`¨9003_hw_≠∂y_möcˇpwr_thªsh
(
ah
, 
ch™
);

4173 
	`¨9003_hw_txíd_to_x∑_off_≠∂y
(
ah
, 
is2ghz
);

4174 
	`¨9003_hw_thîmomëî_≠∂y
(
ah
);

4175 
	`¨9003_hw_thîmo_ˇl_≠∂y
(
ah
);

4176 
	}
}

4178 
	$©h9k_hw_¨9300_£t_addac
(
©h_hw
 *
ah
,

4179 
©h9k_ch™√l
 *
ch™
)

4181 
	}
}

4192 
	$¨9003_hw_powî_öãΩﬁ©e
(
öt32_t
 
x
,

4193 
öt32_t
 *
px
, i¡32_à*
py
, 
u_öt16_t
 
≈
)

4195 
ù
 = 0;

4196 
lx
 = 0, 
ly
 = 0, 
lhave
 = 0;

4197 
hx
 = 0, 
hy
 = 0, 
hhave
 = 0;

4198 
dx
 = 0;

4199 
y
 = 0;

4201 
lhave
 = 0;

4202 
hhave
 = 0;

4205 
ù
 = 0; i∞< 
≈
; ip++) {

4206 
dx
 = 
x
 - 
px
[
ù
];

4209 i‡(
dx
 <= 0) {

4210 i‡(!
hhave
 || 
dx
 > (
x
 - 
hx
)) {

4212 
hx
 = 
px
[
ù
];

4213 
hy
 = 
py
[
ù
];

4214 
hhave
 = 1;

4218 i‡(
dx
 >= 0) {

4219 i‡(!
lhave
 || 
dx
 < (
x
 - 
lx
)) {

4221 
lx
 = 
px
[
ù
];

4222 
ly
 = 
py
[
ù
];

4223 
lhave
 = 1;

4229 i‡(
lhave
) {

4231 i‡(
hhave
) {

4233 i‡(
hx
 =
lx
)

4234 
y
 = 
ly
;

4236 
y
 = 
	`öãΩﬁ©e
(
x
, 
lx
, 
hx
, 
ly
, 
hy
);

4238 
y
 = 
ly
;

4239 } i‡(
hhave
)

4240 
y
 = 
hy
;

4242 
y
 = -(1 << 30);

4243  
y
;

4244 
	}
}

4246 
u8
 
	$¨9003_hw_ì¥om_gë_tgt_pwr
(
©h_hw
 *
ah
,

4247 
u16
 
øãIndex
, u16 
‰eq
, 
boﬁ
 
is2GHz
)

4249 
u16
 
numPõrs
, 
i
;

4250 
s32
 
èrgëPowîAºay
[
AR9300_NUM_5G_20_TARGET_POWERS
];

4251 
s32
 
‰eqAºay
[
AR9300_NUM_5G_20_TARGET_POWERS
];

4252 
¨9300_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
¨9300_ìp
;

4253 
ˇl_tgt_pow_Àgacy
 *
pEïromT¨gëPwr
;

4254 
u8
 *
pFªqBö
;

4256 i‡(
is2GHz
) {

4257 
numPõrs
 = 
AR9300_NUM_2G_20_TARGET_POWERS
;

4258 
pEïromT¨gëPwr
 = 
ìp
->
ˇlT¨gëPowî2G
;

4259 
pFªqBö
 = 
ìp
->
ˇlT¨gë_‰eqbö_2G
;

4261 
numPõrs
 = 
AR9300_NUM_5G_20_TARGET_POWERS
;

4262 
pEïromT¨gëPwr
 = 
ìp
->
ˇlT¨gëPowî5G
;

4263 
pFªqBö
 = 
ìp
->
ˇlT¨gë_‰eqbö_5G
;

4270 
i
 = 0; i < 
numPõrs
; i++) {

4271 
‰eqAºay
[
i
] = 
	`©h9k_hw_fbö2‰eq
(
pFªqBö
[i], 
is2GHz
);

4272 
èrgëPowîAºay
[
i
] = 
pEïromT¨gëPwr
[i].
tPow2x
[
øãIndex
];

4276  (
u8
Ë
	`¨9003_hw_powî_öãΩﬁ©e
((
s32
Ë
‰eq
,

4277 
‰eqAºay
,

4278 
èrgëPowîAºay
, 
numPõrs
);

4279 
	}
}

4281 
u8
 
	$¨9003_hw_ì¥om_gë_ht20_tgt_pwr
(
©h_hw
 *
ah
,

4282 
u16
 
øãIndex
,

4283 
u16
 
‰eq
, 
boﬁ
 
is2GHz
)

4285 
u16
 
numPõrs
, 
i
;

4286 
s32
 
èrgëPowîAºay
[
AR9300_NUM_5G_20_TARGET_POWERS
];

4287 
s32
 
‰eqAºay
[
AR9300_NUM_5G_20_TARGET_POWERS
];

4288 
¨9300_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
¨9300_ìp
;

4289 
ˇl_tgt_pow_ht
 *
pEïromT¨gëPwr
;

4290 
u8
 *
pFªqBö
;

4292 i‡(
is2GHz
) {

4293 
numPõrs
 = 
AR9300_NUM_2G_20_TARGET_POWERS
;

4294 
pEïromT¨gëPwr
 = 
ìp
->
ˇlT¨gëPowî2GHT20
;

4295 
pFªqBö
 = 
ìp
->
ˇlT¨gë_‰eqbö_2GHT20
;

4297 
numPõrs
 = 
AR9300_NUM_5G_20_TARGET_POWERS
;

4298 
pEïromT¨gëPwr
 = 
ìp
->
ˇlT¨gëPowî5GHT20
;

4299 
pFªqBö
 = 
ìp
->
ˇlT¨gë_‰eqbö_5GHT20
;

4306 
i
 = 0; i < 
numPõrs
; i++) {

4307 
‰eqAºay
[
i
] = 
	`©h9k_hw_fbö2‰eq
(
pFªqBö
[i], 
is2GHz
);

4308 
èrgëPowîAºay
[
i
] = 
pEïromT¨gëPwr
[i].
tPow2x
[
øãIndex
];

4312  (
u8
Ë
	`¨9003_hw_powî_öãΩﬁ©e
((
s32
Ë
‰eq
,

4313 
‰eqAºay
,

4314 
èrgëPowîAºay
, 
numPõrs
);

4315 
	}
}

4317 
u8
 
	$¨9003_hw_ì¥om_gë_ht40_tgt_pwr
(
©h_hw
 *
ah
,

4318 
u16
 
øãIndex
,

4319 
u16
 
‰eq
, 
boﬁ
 
is2GHz
)

4321 
u16
 
numPõrs
, 
i
;

4322 
s32
 
èrgëPowîAºay
[
AR9300_NUM_5G_40_TARGET_POWERS
];

4323 
s32
 
‰eqAºay
[
AR9300_NUM_5G_40_TARGET_POWERS
];

4324 
¨9300_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
¨9300_ìp
;

4325 
ˇl_tgt_pow_ht
 *
pEïromT¨gëPwr
;

4326 
u8
 *
pFªqBö
;

4328 i‡(
is2GHz
) {

4329 
numPõrs
 = 
AR9300_NUM_2G_40_TARGET_POWERS
;

4330 
pEïromT¨gëPwr
 = 
ìp
->
ˇlT¨gëPowî2GHT40
;

4331 
pFªqBö
 = 
ìp
->
ˇlT¨gë_‰eqbö_2GHT40
;

4333 
numPõrs
 = 
AR9300_NUM_5G_40_TARGET_POWERS
;

4334 
pEïromT¨gëPwr
 = 
ìp
->
ˇlT¨gëPowî5GHT40
;

4335 
pFªqBö
 = 
ìp
->
ˇlT¨gë_‰eqbö_5GHT40
;

4342 
i
 = 0; i < 
numPõrs
; i++) {

4343 
‰eqAºay
[
i
] = 
	`©h9k_hw_fbö2‰eq
(
pFªqBö
[i], 
is2GHz
);

4344 
èrgëPowîAºay
[
i
] = 
pEïromT¨gëPwr
[i].
tPow2x
[
øãIndex
];

4348  (
u8
Ë
	`¨9003_hw_powî_öãΩﬁ©e
((
s32
Ë
‰eq
,

4349 
‰eqAºay
,

4350 
èrgëPowîAºay
, 
numPõrs
);

4351 
	}
}

4353 
u8
 
	$¨9003_hw_ì¥om_gë_cck_tgt_pwr
(
©h_hw
 *
ah
,

4354 
u16
 
øãIndex
, u16 
‰eq
)

4356 
u16
 
numPõrs
 = 
AR9300_NUM_2G_CCK_TARGET_POWERS
, 
i
;

4357 
s32
 
èrgëPowîAºay
[
AR9300_NUM_2G_CCK_TARGET_POWERS
];

4358 
s32
 
‰eqAºay
[
AR9300_NUM_2G_CCK_TARGET_POWERS
];

4359 
¨9300_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
¨9300_ìp
;

4360 
ˇl_tgt_pow_Àgacy
 *
pEïromT¨gëPwr
 = 
ìp
->
ˇlT¨gëPowîCck
;

4361 
u8
 *
pFªqBö
 = 
ìp
->
ˇlT¨gë_‰eqbö_Cck
;

4367 
i
 = 0; i < 
numPõrs
; i++) {

4368 
‰eqAºay
[
i
] = 
	`©h9k_hw_fbö2‰eq
(
pFªqBö
[i], 1);

4369 
èrgëPowîAºay
[
i
] = 
pEïromT¨gëPwr
[i].
tPow2x
[
øãIndex
];

4373  (
u8
Ë
	`¨9003_hw_powî_öãΩﬁ©e
((
s32
Ë
‰eq
,

4374 
‰eqAºay
,

4375 
èrgëPowîAºay
, 
numPõrs
);

4376 
	}
}

4379 
	$¨9003_hw_tx_powî_ªgwrôe
(
©h_hw
 *
ah
, 
u8
 * 
pPwrAºay
)

4381 
	#POW_SM
(
_r
, 
_s
Ë(((_rË& 0x3fË<< (_s))

	)

4383 
	`REG_WRITE
(
ah
, 
AR_PHY_TX_FORCED_GAIN
, 0);

4388 
	`REG_WRITE
(
ah
, 
	`AR_PHY_POWER_TX_RATE
(0),

4389 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_LEGACY_6_24
], 24) |

4390 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_LEGACY_6_24
], 16) |

4391 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_LEGACY_6_24
], 8) |

4392 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_LEGACY_6_24
], 0));

4395 
	`REG_WRITE
(
ah
, 
	`AR_PHY_POWER_TX_RATE
(1),

4396 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_LEGACY_54
], 24) |

4397 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_LEGACY_48
], 16) |

4398 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_LEGACY_36
], 8) |

4399 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_LEGACY_6_24
], 0));

4404 
	`REG_WRITE
(
ah
, 
	`AR_PHY_POWER_TX_RATE
(2),

4405 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_LEGACY_1L_5L
], 24) |

4406 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_LEGACY_1L_5L
], 16) |

4408 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_LEGACY_1L_5L
], 0));

4411 
	`REG_WRITE
(
ah
, 
	`AR_PHY_POWER_TX_RATE
(3),

4412 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_LEGACY_11S
], 24) |

4413 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_LEGACY_11L
], 16) |

4414 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_LEGACY_5S
], 8) |

4415 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_LEGACY_1L_5L
], 0)

4421 
	`REG_WRITE
(
ah
, 
	`AR_PHY_POWER_TX_RATE
(8),

4422 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_LEGACY_6_24
], 24) |

4423 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_LEGACY_1L_5L
], 16) |

4424 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_LEGACY_6_24
], 8) |

4425 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_LEGACY_1L_5L
], 0)

4431 
	`REG_WRITE
(
ah
, 
	`AR_PHY_POWER_TX_RATE
(4),

4432 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT20_5
], 24) |

4433 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT20_4
], 16) |

4434 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT20_1_3_9_11_17_19
], 8) |

4435 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT20_0_8_16
], 0)

4439 
	`REG_WRITE
(
ah
, 
	`AR_PHY_POWER_TX_RATE
(5),

4440 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT20_13
], 24) |

4441 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT20_12
], 16) |

4442 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT20_7
], 8) |

4443 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT20_6
], 0)

4447 
	`REG_WRITE
(
ah
, 
	`AR_PHY_POWER_TX_RATE
(9),

4448 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT20_21
], 24) |

4449 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT20_20
], 16) |

4450 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT20_15
], 8) |

4451 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT20_14
], 0)

4457 
	`REG_WRITE
(
ah
, 
	`AR_PHY_POWER_TX_RATE
(10),

4458 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT40_23
], 24) |

4459 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT40_22
], 16) |

4460 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT20_23
], 8) |

4461 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT20_22
], 0)

4469 
	`REG_WRITE
(
ah
, 
	`AR_PHY_POWER_TX_RATE
(6),

4470 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT40_5
], 24) |

4471 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT40_4
], 16) |

4472 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT40_1_3_9_11_17_19
], 8) |

4473 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT40_0_8_16
], 0)

4477 
	`REG_WRITE
(
ah
, 
	`AR_PHY_POWER_TX_RATE
(7),

4478 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT40_13
], 24) |

4479 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT40_12
], 16) |

4480 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT40_7
], 8) |

4481 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT40_6
], 0)

4485 
	`REG_WRITE
(
ah
, 
	`AR_PHY_POWER_TX_RATE
(11),

4486 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT40_21
], 24) |

4487 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT40_20
], 16) |

4488 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT40_15
], 8) |

4489 
	`POW_SM
(
pPwrAºay
[
ALL_TARGET_HT40_14
], 0)

4493 #unde‡
POW_SM


4494 
	}
}

4496 
	$¨9003_hw_gë_Àgacy_èrgë_powîs
(
©h_hw
 *
ah
, 
u16
 
‰eq
,

4497 
u8
 *
èrgëPowîVÆT2
,

4498 
boﬁ
 
is2GHz
)

4500 
èrgëPowîVÆT2
[
ALL_TARGET_LEGACY_6_24
] =

4501 
	`¨9003_hw_ì¥om_gë_tgt_pwr
(
ah
, 
LEGACY_TARGET_RATE_6_24
, 
‰eq
,

4502 
is2GHz
);

4503 
èrgëPowîVÆT2
[
ALL_TARGET_LEGACY_36
] =

4504 
	`¨9003_hw_ì¥om_gë_tgt_pwr
(
ah
, 
LEGACY_TARGET_RATE_36
, 
‰eq
,

4505 
is2GHz
);

4506 
èrgëPowîVÆT2
[
ALL_TARGET_LEGACY_48
] =

4507 
	`¨9003_hw_ì¥om_gë_tgt_pwr
(
ah
, 
LEGACY_TARGET_RATE_48
, 
‰eq
,

4508 
is2GHz
);

4509 
èrgëPowîVÆT2
[
ALL_TARGET_LEGACY_54
] =

4510 
	`¨9003_hw_ì¥om_gë_tgt_pwr
(
ah
, 
LEGACY_TARGET_RATE_54
, 
‰eq
,

4511 
is2GHz
);

4512 
	}
}

4514 
	$¨9003_hw_gë_cck_èrgë_powîs
(
©h_hw
 *
ah
, 
u16
 
‰eq
,

4515 
u8
 *
èrgëPowîVÆT2
)

4517 
èrgëPowîVÆT2
[
ALL_TARGET_LEGACY_1L_5L
] =

4518 
	`¨9003_hw_ì¥om_gë_cck_tgt_pwr
(
ah
, 
LEGACY_TARGET_RATE_1L_5L
,

4519 
‰eq
);

4520 
èrgëPowîVÆT2
[
ALL_TARGET_LEGACY_5S
] =

4521 
	`¨9003_hw_ì¥om_gë_cck_tgt_pwr
(
ah
, 
LEGACY_TARGET_RATE_5S
, 
‰eq
);

4522 
èrgëPowîVÆT2
[
ALL_TARGET_LEGACY_11L
] =

4523 
	`¨9003_hw_ì¥om_gë_cck_tgt_pwr
(
ah
, 
LEGACY_TARGET_RATE_11L
, 
‰eq
);

4524 
èrgëPowîVÆT2
[
ALL_TARGET_LEGACY_11S
] =

4525 
	`¨9003_hw_ì¥om_gë_cck_tgt_pwr
(
ah
, 
LEGACY_TARGET_RATE_11S
, 
‰eq
);

4526 
	}
}

4528 
	$¨9003_hw_gë_ht20_èrgë_powîs
(
©h_hw
 *
ah
, 
u16
 
‰eq
,

4529 
u8
 *
èrgëPowîVÆT2
, 
boﬁ
 
is2GHz
)

4531 
èrgëPowîVÆT2
[
ALL_TARGET_HT20_0_8_16
] =

4532 
	`¨9003_hw_ì¥om_gë_ht20_tgt_pwr
(
ah
, 
HT_TARGET_RATE_0_8_16
, 
‰eq
,

4533 
is2GHz
);

4534 
èrgëPowîVÆT2
[
ALL_TARGET_HT20_1_3_9_11_17_19
] =

4535 
	`¨9003_hw_ì¥om_gë_ht20_tgt_pwr
(
ah
, 
HT_TARGET_RATE_1_3_9_11_17_19
,

4536 
‰eq
, 
is2GHz
);

4537 
èrgëPowîVÆT2
[
ALL_TARGET_HT20_4
] =

4538 
	`¨9003_hw_ì¥om_gë_ht20_tgt_pwr
(
ah
, 
HT_TARGET_RATE_4
, 
‰eq
,

4539 
is2GHz
);

4540 
èrgëPowîVÆT2
[
ALL_TARGET_HT20_5
] =

4541 
	`¨9003_hw_ì¥om_gë_ht20_tgt_pwr
(
ah
, 
HT_TARGET_RATE_5
, 
‰eq
,

4542 
is2GHz
);

4543 
èrgëPowîVÆT2
[
ALL_TARGET_HT20_6
] =

4544 
	`¨9003_hw_ì¥om_gë_ht20_tgt_pwr
(
ah
, 
HT_TARGET_RATE_6
, 
‰eq
,

4545 
is2GHz
);

4546 
èrgëPowîVÆT2
[
ALL_TARGET_HT20_7
] =

4547 
	`¨9003_hw_ì¥om_gë_ht20_tgt_pwr
(
ah
, 
HT_TARGET_RATE_7
, 
‰eq
,

4548 
is2GHz
);

4549 
èrgëPowîVÆT2
[
ALL_TARGET_HT20_12
] =

4550 
	`¨9003_hw_ì¥om_gë_ht20_tgt_pwr
(
ah
, 
HT_TARGET_RATE_12
, 
‰eq
,

4551 
is2GHz
);

4552 
èrgëPowîVÆT2
[
ALL_TARGET_HT20_13
] =

4553 
	`¨9003_hw_ì¥om_gë_ht20_tgt_pwr
(
ah
, 
HT_TARGET_RATE_13
, 
‰eq
,

4554 
is2GHz
);

4555 
èrgëPowîVÆT2
[
ALL_TARGET_HT20_14
] =

4556 
	`¨9003_hw_ì¥om_gë_ht20_tgt_pwr
(
ah
, 
HT_TARGET_RATE_14
, 
‰eq
,

4557 
is2GHz
);

4558 
èrgëPowîVÆT2
[
ALL_TARGET_HT20_15
] =

4559 
	`¨9003_hw_ì¥om_gë_ht20_tgt_pwr
(
ah
, 
HT_TARGET_RATE_15
, 
‰eq
,

4560 
is2GHz
);

4561 
èrgëPowîVÆT2
[
ALL_TARGET_HT20_20
] =

4562 
	`¨9003_hw_ì¥om_gë_ht20_tgt_pwr
(
ah
, 
HT_TARGET_RATE_20
, 
‰eq
,

4563 
is2GHz
);

4564 
èrgëPowîVÆT2
[
ALL_TARGET_HT20_21
] =

4565 
	`¨9003_hw_ì¥om_gë_ht20_tgt_pwr
(
ah
, 
HT_TARGET_RATE_21
, 
‰eq
,

4566 
is2GHz
);

4567 
èrgëPowîVÆT2
[
ALL_TARGET_HT20_22
] =

4568 
	`¨9003_hw_ì¥om_gë_ht20_tgt_pwr
(
ah
, 
HT_TARGET_RATE_22
, 
‰eq
,

4569 
is2GHz
);

4570 
èrgëPowîVÆT2
[
ALL_TARGET_HT20_23
] =

4571 
	`¨9003_hw_ì¥om_gë_ht20_tgt_pwr
(
ah
, 
HT_TARGET_RATE_23
, 
‰eq
,

4572 
is2GHz
);

4573 
	}
}

4575 
	$¨9003_hw_gë_ht40_èrgë_powîs
(
©h_hw
 *
ah
,

4576 
u16
 
‰eq
,

4577 
u8
 *
èrgëPowîVÆT2
,

4578 
boﬁ
 
is2GHz
)

4581 
u8
 
ht40PowîIncF‹Pdadc
 = 0;

4583 
èrgëPowîVÆT2
[
ALL_TARGET_HT40_0_8_16
] =

4584 
	`¨9003_hw_ì¥om_gë_ht40_tgt_pwr
(
ah
, 
HT_TARGET_RATE_0_8_16
, 
‰eq
,

4585 
is2GHz
Ë+ 
ht40PowîIncF‹Pdadc
;

4586 
èrgëPowîVÆT2
[
ALL_TARGET_HT40_1_3_9_11_17_19
] =

4587 
	`¨9003_hw_ì¥om_gë_ht40_tgt_pwr
(
ah
, 
HT_TARGET_RATE_1_3_9_11_17_19
,

4588 
‰eq
,

4589 
is2GHz
Ë+ 
ht40PowîIncF‹Pdadc
;

4590 
èrgëPowîVÆT2
[
ALL_TARGET_HT40_4
] =

4591 
	`¨9003_hw_ì¥om_gë_ht40_tgt_pwr
(
ah
, 
HT_TARGET_RATE_4
, 
‰eq
,

4592 
is2GHz
Ë+ 
ht40PowîIncF‹Pdadc
;

4593 
èrgëPowîVÆT2
[
ALL_TARGET_HT40_5
] =

4594 
	`¨9003_hw_ì¥om_gë_ht40_tgt_pwr
(
ah
, 
HT_TARGET_RATE_5
, 
‰eq
,

4595 
is2GHz
Ë+ 
ht40PowîIncF‹Pdadc
;

4596 
èrgëPowîVÆT2
[
ALL_TARGET_HT40_6
] =

4597 
	`¨9003_hw_ì¥om_gë_ht40_tgt_pwr
(
ah
, 
HT_TARGET_RATE_6
, 
‰eq
,

4598 
is2GHz
Ë+ 
ht40PowîIncF‹Pdadc
;

4599 
èrgëPowîVÆT2
[
ALL_TARGET_HT40_7
] =

4600 
	`¨9003_hw_ì¥om_gë_ht40_tgt_pwr
(
ah
, 
HT_TARGET_RATE_7
, 
‰eq
,

4601 
is2GHz
Ë+ 
ht40PowîIncF‹Pdadc
;

4602 
èrgëPowîVÆT2
[
ALL_TARGET_HT40_12
] =

4603 
	`¨9003_hw_ì¥om_gë_ht40_tgt_pwr
(
ah
, 
HT_TARGET_RATE_12
, 
‰eq
,

4604 
is2GHz
Ë+ 
ht40PowîIncF‹Pdadc
;

4605 
èrgëPowîVÆT2
[
ALL_TARGET_HT40_13
] =

4606 
	`¨9003_hw_ì¥om_gë_ht40_tgt_pwr
(
ah
, 
HT_TARGET_RATE_13
, 
‰eq
,

4607 
is2GHz
Ë+ 
ht40PowîIncF‹Pdadc
;

4608 
èrgëPowîVÆT2
[
ALL_TARGET_HT40_14
] =

4609 
	`¨9003_hw_ì¥om_gë_ht40_tgt_pwr
(
ah
, 
HT_TARGET_RATE_14
, 
‰eq
,

4610 
is2GHz
Ë+ 
ht40PowîIncF‹Pdadc
;

4611 
èrgëPowîVÆT2
[
ALL_TARGET_HT40_15
] =

4612 
	`¨9003_hw_ì¥om_gë_ht40_tgt_pwr
(
ah
, 
HT_TARGET_RATE_15
, 
‰eq
,

4613 
is2GHz
Ë+ 
ht40PowîIncF‹Pdadc
;

4614 
èrgëPowîVÆT2
[
ALL_TARGET_HT40_20
] =

4615 
	`¨9003_hw_ì¥om_gë_ht40_tgt_pwr
(
ah
, 
HT_TARGET_RATE_20
, 
‰eq
,

4616 
is2GHz
Ë+ 
ht40PowîIncF‹Pdadc
;

4617 
èrgëPowîVÆT2
[
ALL_TARGET_HT40_21
] =

4618 
	`¨9003_hw_ì¥om_gë_ht40_tgt_pwr
(
ah
, 
HT_TARGET_RATE_21
, 
‰eq
,

4619 
is2GHz
Ë+ 
ht40PowîIncF‹Pdadc
;

4620 
èrgëPowîVÆT2
[
ALL_TARGET_HT40_22
] =

4621 
	`¨9003_hw_ì¥om_gë_ht40_tgt_pwr
(
ah
, 
HT_TARGET_RATE_22
, 
‰eq
,

4622 
is2GHz
Ë+ 
ht40PowîIncF‹Pdadc
;

4623 
èrgëPowîVÆT2
[
ALL_TARGET_HT40_23
] =

4624 
	`¨9003_hw_ì¥om_gë_ht40_tgt_pwr
(
ah
, 
HT_TARGET_RATE_23
, 
‰eq
,

4625 
is2GHz
Ë+ 
ht40PowîIncF‹Pdadc
;

4626 
	}
}

4628 
	$¨9003_hw_gë_èrgë_powî_ì¥om
(
©h_hw
 *
ah
,

4629 
©h9k_ch™√l
 *
ch™
,

4630 
u8
 *
èrgëPowîVÆT2
)

4632 
boﬁ
 
is2GHz
 = 
	`IS_CHAN_2GHZ
(
ch™
);

4633 
i
 = 0;

4634 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

4635 
u16
 
‰eq
 = 
ch™
->
ch™√l
;

4637 i‡(
is2GHz
)

4638 
	`¨9003_hw_gë_cck_èrgë_powîs
(
ah
, 
‰eq
, 
èrgëPowîVÆT2
);

4640 
	`¨9003_hw_gë_Àgacy_èrgë_powîs
(
ah
, 
‰eq
, 
èrgëPowîVÆT2
, 
is2GHz
);

4641 
	`¨9003_hw_gë_ht20_èrgë_powîs
(
ah
, 
‰eq
, 
èrgëPowîVÆT2
, 
is2GHz
);

4643 i‡(
	`IS_CHAN_HT40
(
ch™
))

4644 
	`¨9003_hw_gë_ht40_èrgë_powîs
(
ah
, 
‰eq
, 
èrgëPowîVÆT2
,

4645 
is2GHz
);

4647 
i
 = 0; i < 
¨9300R©eSize
; i++) {

4648 
	`©h_dbg
(
comm⁄
, 
REGULATORY
, "TPC[%02d] 0x%08x\n",

4649 
i
, 
èrgëPowîVÆT2
[i]);

4651 
	}
}

4653 
	$¨9003_hw_ˇl_põr_gë
(
©h_hw
 *
ah
,

4654 
mode
,

4655 
ùõr
,

4656 
ichaö
,

4657 *
p‰equícy
,

4658 *
pc‹ª˘i⁄
,

4659 *
±em≥øtuª
, *
pvﬁège
)

4661 
u8
 *
pCÆPõr
;

4662 
¨9300_ˇl_d©a_≥r_‰eq_›_lo›
 *
pCÆPõrSåu˘
;

4663 
is2GHz
;

4664 
¨9300_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
¨9300_ìp
;

4665 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

4667 i‡(
ichaö
 >
AR9300_MAX_CHAINS
) {

4668 
	`©h_dbg
(
comm⁄
, 
EEPROM
,

4670 
AR9300_MAX_CHAINS
);

4674 i‡(
mode
) {

4675 i‡(
ùõr
 >
AR9300_NUM_5G_CAL_PIERS
) {

4676 
	`©h_dbg
(
comm⁄
, 
EEPROM
,

4678 
AR9300_NUM_5G_CAL_PIERS
);

4681 
pCÆPõr
 = &(
ìp
->
ˇlFªqPõr5G
[
ùõr
]);

4682 
pCÆPõrSåu˘
 = &(
ìp
->
ˇlPõrD©a5G
[
ichaö
][
ùõr
]);

4683 
is2GHz
 = 0;

4685 i‡(
ùõr
 >
AR9300_NUM_2G_CAL_PIERS
) {

4686 
	`©h_dbg
(
comm⁄
, 
EEPROM
,

4688 
AR9300_NUM_2G_CAL_PIERS
);

4692 
pCÆPõr
 = &(
ìp
->
ˇlFªqPõr2G
[
ùõr
]);

4693 
pCÆPõrSåu˘
 = &(
ìp
->
ˇlPõrD©a2G
[
ichaö
][
ùõr
]);

4694 
is2GHz
 = 1;

4697 *
p‰equícy
 = 
	`©h9k_hw_fbö2‰eq
(*
pCÆPõr
, 
is2GHz
);

4698 *
pc‹ª˘i⁄
 = 
pCÆPõrSåu˘
->
ªfPowî
;

4699 *
±em≥øtuª
 = 
pCÆPõrSåu˘
->
ãmpMós
;

4700 *
pvﬁège
 = 
pCÆPõrSåu˘
->
vﬁtMós
;

4703 
	}
}

4705 
	$¨9003_hw_powî_c⁄åﬁ_ovîride
(
©h_hw
 *
ah
,

4706 
‰equícy
,

4707 *
c‹ª˘i⁄
,

4708 *
vﬁège
, *
ãm≥øtuª
)

4710 
ãmp_¶›e
 = 0, 
ãmp_¶›e1
 = 0, 
ãmp_¶›e2
 = 0;

4711 
¨9300_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
¨9300_ìp
;

4712 
f
[8], 
t
[8], 
t1
[3], 
t2
[3], 
i
;

4714 
	`REG_RMW
(
ah
, 
AR_PHY_TPC_11_B0
,

4715 (
c‹ª˘i⁄
[0] << 
AR_PHY_TPC_OLPC_GAIN_DELTA_S
),

4716 
AR_PHY_TPC_OLPC_GAIN_DELTA
);

4717 i‡(
ah
->
ˇps
.
tx_chaömask
 & 
	`BIT
(1))

4718 
	`REG_RMW
(
ah
, 
AR_PHY_TPC_11_B1
,

4719 (
c‹ª˘i⁄
[1] << 
AR_PHY_TPC_OLPC_GAIN_DELTA_S
),

4720 
AR_PHY_TPC_OLPC_GAIN_DELTA
);

4721 i‡(
ah
->
ˇps
.
tx_chaömask
 & 
	`BIT
(2))

4722 
	`REG_RMW
(
ah
, 
AR_PHY_TPC_11_B2
,

4723 (
c‹ª˘i⁄
[2] << 
AR_PHY_TPC_OLPC_GAIN_DELTA_S
),

4724 
AR_PHY_TPC_OLPC_GAIN_DELTA
);

4727 
	`REG_RMW
(
ah
, 
AR_PHY_TPC_6_B0
,

4728 (3 << 
AR_PHY_TPC_6_ERROR_EST_MODE_S
),

4729 
AR_PHY_TPC_6_ERROR_EST_MODE
);

4730 i‡(
ah
->
ˇps
.
tx_chaömask
 & 
	`BIT
(1))

4731 
	`REG_RMW
(
ah
, 
AR_PHY_TPC_6_B1
,

4732 (3 << 
AR_PHY_TPC_6_ERROR_EST_MODE_S
),

4733 
AR_PHY_TPC_6_ERROR_EST_MODE
);

4734 i‡(
ah
->
ˇps
.
tx_chaömask
 & 
	`BIT
(2))

4735 
	`REG_RMW
(
ah
, 
AR_PHY_TPC_6_B2
,

4736 (3 << 
AR_PHY_TPC_6_ERROR_EST_MODE_S
),

4737 
AR_PHY_TPC_6_ERROR_EST_MODE
);

4743 i‡(
‰equícy
 < 4000) {

4744 
ãmp_¶›e
 = 
ìp
->
modÆHódî2G
.
ãmpSl›e
;

4746 i‡(
	`AR_SREV_9550
(
ah
)) {

4747 
t
[0] = 
ìp
->
ba£_ext1
.
ãmp¶›exãnsi⁄
[2];

4748 
t1
[0] = 
ìp
->
ba£_ext1
.
ãmp¶›exãnsi⁄
[3];

4749 
t2
[0] = 
ìp
->
ba£_ext1
.
ãmp¶›exãnsi⁄
[4];

4750 
f
[0] = 5180;

4752 
t
[1] = 
ìp
->
modÆHódî5G
.
ãmpSl›e
;

4753 
t1
[1] = 
ìp
->
ba£_ext1
.
ãmp¶›exãnsi⁄
[0];

4754 
t2
[1] = 
ìp
->
ba£_ext1
.
ãmp¶›exãnsi⁄
[1];

4755 
f
[1] = 5500;

4757 
t
[2] = 
ìp
->
ba£_ext1
.
ãmp¶›exãnsi⁄
[5];

4758 
t1
[2] = 
ìp
->
ba£_ext1
.
ãmp¶›exãnsi⁄
[6];

4759 
t2
[2] = 
ìp
->
ba£_ext1
.
ãmp¶›exãnsi⁄
[7];

4760 
f
[2] = 5785;

4762 
ãmp_¶›e
 = 
	`¨9003_hw_powî_öãΩﬁ©e
(
‰equícy
,

4763 
f
, 
t
, 3);

4764 
ãmp_¶›e1
 = 
	`¨9003_hw_powî_öãΩﬁ©e
(
‰equícy
,

4765 
f
, 
t1
, 3);

4766 
ãmp_¶›e2
 = 
	`¨9003_hw_powî_öãΩﬁ©e
(
‰equícy
,

4767 
f
, 
t2
, 3);

4769 
ãmp¶›e
;

4772 i‡((
ìp
->
ba£EïHódî
.
miscC⁄figuøti⁄
 & 0x20) != 0) {

4773 
i
 = 0; i < 8; i++) {

4774 
t
[
i
] = 
ìp
->
ba£_ext1
.
ãmp¶›exãnsi⁄
[i];

4775 
f
[
i
] = 
	`FBIN2FREQ
(
ìp
->
ˇlFªqPõr5G
[i], 0);

4777 
ãmp_¶›e
 = 
	`¨9003_hw_powî_öãΩﬁ©e
((
s32
Ë
‰equícy
,

4778 
f
, 
t
, 8);

4779 } i‡(
ìp
->
ba£_ext2
.
ãmpSl›eLow
 != 0) {

4780 
t
[0] = 
ìp
->
ba£_ext2
.
ãmpSl›eLow
;

4781 
f
[0] = 5180;

4782 
t
[1] = 
ìp
->
modÆHódî5G
.
ãmpSl›e
;

4783 
f
[1] = 5500;

4784 
t
[2] = 
ìp
->
ba£_ext2
.
ãmpSl›eHigh
;

4785 
f
[2] = 5785;

4786 
ãmp_¶›e
 = 
	`¨9003_hw_powî_öãΩﬁ©e
((
s32
Ë
‰equícy
,

4787 
f
, 
t
, 3);

4789 
ãmp_¶›e
 = 
ìp
->
modÆHódî5G
.
ãmpSl›e
;

4793 
ãmp¶›e
:

4794 i‡(
	`AR_SREV_9550
(
ah
Ë|| 
	`AR_SREV_9531
(ah)) {

4795 
u8
 
txmask
 = (
ìp
->
ba£EïHódî
.
txrxMask
 & 0xf0) >> 4;

4801 i‡(
ìp
->
ba£EïHódî
.
„©uªE«bÀ
 & 0x1) {

4802 i‡(
‰equícy
 < 4000) {

4803 i‡(
txmask
 & 
	`BIT
(0))

4804 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TPC_19
,

4805 
AR_PHY_TPC_19_ALPHA_THERM
,

4806 
ìp
->
ba£_ext2
.
ãmpSl›eLow
);

4807 i‡(
txmask
 & 
	`BIT
(1))

4808 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TPC_19_B1
,

4809 
AR_PHY_TPC_19_ALPHA_THERM
,

4810 
ãmp_¶›e
);

4811 i‡(
txmask
 & 
	`BIT
(2))

4812 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TPC_19_B2
,

4813 
AR_PHY_TPC_19_ALPHA_THERM
,

4814 
ìp
->
ba£_ext2
.
ãmpSl›eHigh
);

4816 i‡(
txmask
 & 
	`BIT
(0))

4817 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TPC_19
,

4818 
AR_PHY_TPC_19_ALPHA_THERM
,

4819 
ãmp_¶›e
);

4820 i‡(
txmask
 & 
	`BIT
(1))

4821 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TPC_19_B1
,

4822 
AR_PHY_TPC_19_ALPHA_THERM
,

4823 
ãmp_¶›e1
);

4824 i‡(
txmask
 & 
	`BIT
(2))

4825 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TPC_19_B2
,

4826 
AR_PHY_TPC_19_ALPHA_THERM
,

4827 
ãmp_¶›e2
);

4834 i‡(
txmask
 & 
	`BIT
(0))

4835 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TPC_19
,

4836 
AR_PHY_TPC_19_ALPHA_THERM
, 0);

4837 i‡(
txmask
 & 
	`BIT
(1))

4838 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TPC_19_B1
,

4839 
AR_PHY_TPC_19_ALPHA_THERM
, 0);

4840 i‡(
txmask
 & 
	`BIT
(2))

4841 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TPC_19_B2
,

4842 
AR_PHY_TPC_19_ALPHA_THERM
, 0);

4845 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TPC_19
,

4846 
AR_PHY_TPC_19_ALPHA_THERM
, 
ãmp_¶›e
);

4849 i‡(
	`AR_SREV_9462_20_OR_LATER
(
ah
))

4850 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TPC_19_B1
,

4851 
AR_PHY_TPC_19_B1_ALPHA_THERM
, 
ãmp_¶›e
);

4854 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TPC_18
, 
AR_PHY_TPC_18_THERM_CAL_VALUE
,

4855 
ãm≥øtuª
[0]);

4856 
	}
}

4859 
	$¨9003_hw_ˇlibøti⁄_≠∂y
(
©h_hw
 *
ah
, 
‰equícy
)

4861 
ichaö
, 
ùõr
, 
≈õr
;

4862 
mode
;

4863 
l‰equícy
[
AR9300_MAX_CHAINS
],

4864 
lc‹ª˘i⁄
[
AR9300_MAX_CHAINS
],

4865 
…em≥øtuª
[
AR9300_MAX_CHAINS
], 
lvﬁège
[AR9300_MAX_CHAINS];

4866 
h‰equícy
[
AR9300_MAX_CHAINS
],

4867 
hc‹ª˘i⁄
[
AR9300_MAX_CHAINS
],

4868 
hãm≥øtuª
[
AR9300_MAX_CHAINS
], 
hvﬁège
[AR9300_MAX_CHAINS];

4869 
fdiff
;

4870 
c‹ª˘i⁄
[
AR9300_MAX_CHAINS
],

4871 
vﬁège
[
AR9300_MAX_CHAINS
], 
ãm≥øtuª
[AR9300_MAX_CHAINS];

4872 
p‰equícy
, 
pc‹ª˘i⁄
, 
±em≥øtuª
, 
pvﬁège
;

4873 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

4875 
mode
 = (
‰equícy
 >= 4000);

4876 i‡(
mode
)

4877 
≈õr
 = 
AR9300_NUM_5G_CAL_PIERS
;

4879 
≈õr
 = 
AR9300_NUM_2G_CAL_PIERS
;

4881 
ichaö
 = 0; ichaö < 
AR9300_MAX_CHAINS
; ichain++) {

4882 
l‰equícy
[
ichaö
] = 0;

4883 
h‰equícy
[
ichaö
] = 100000;

4886 
ichaö
 = 0; ichaö < 
AR9300_MAX_CHAINS
; ichain++) {

4887 
ùõr
 = 0; ipõ∏< 
≈õr
; ipier++) {

4888 i‡(!
	`¨9003_hw_ˇl_põr_gë
(
ah
, 
mode
, 
ùõr
, 
ichaö
,

4889 &
p‰equícy
, &
pc‹ª˘i⁄
,

4890 &
±em≥øtuª
, &
pvﬁège
)) {

4891 
fdiff
 = 
‰equícy
 - 
p‰equícy
;

4897 i‡(
fdiff
 <= 0) {

4898 i‡(
h‰equícy
[
ichaö
] <= 0 ||

4899 
h‰equícy
[
ichaö
] >= 100000 ||

4900 
fdiff
 >

4901 (
‰equícy
 - 
h‰equícy
[
ichaö
])) {

4906 
h‰equícy
[
ichaö
] = 
p‰equícy
;

4907 
hc‹ª˘i⁄
[
ichaö
] =

4908 
pc‹ª˘i⁄
;

4909 
hãm≥øtuª
[
ichaö
] =

4910 
±em≥øtuª
;

4911 
hvﬁège
[
ichaö
] = 
pvﬁège
;

4914 i‡(
fdiff
 >= 0) {

4915 i‡(
l‰equícy
[
ichaö
] <= 0

4916 || 
fdiff
 <

4917 (
‰equícy
 - 
l‰equícy
[
ichaö
])) {

4922 
l‰equícy
[
ichaö
] = 
p‰equícy
;

4923 
lc‹ª˘i⁄
[
ichaö
] =

4924 
pc‹ª˘i⁄
;

4925 
…em≥øtuª
[
ichaö
] =

4926 
±em≥øtuª
;

4927 
lvﬁège
[
ichaö
] = 
pvﬁège
;

4935 
ichaö
 = 0; ichaö < 
AR9300_MAX_CHAINS
; ichain++) {

4936 
	`©h_dbg
(
comm⁄
, 
EEPROM
, "ch=%d f=%dÜow=%d %d h=%d %d\n",

4937 
ichaö
, 
‰equícy
, 
l‰equícy
[ichain],

4938 
lc‹ª˘i⁄
[
ichaö
], 
h‰equícy
[ichain],

4939 
hc‹ª˘i⁄
[
ichaö
]);

4941 i‡(
h‰equícy
[
ichaö
] =
l‰equícy
[ichain]) {

4942 
c‹ª˘i⁄
[
ichaö
] = 
lc‹ª˘i⁄
[ichain];

4943 
vﬁège
[
ichaö
] = 
lvﬁège
[ichain];

4944 
ãm≥øtuª
[
ichaö
] = 
…em≥øtuª
[ichain];

4947 i‡(
‰equícy
 - 
l‰equícy
[
ichaö
] < 1000) {

4949 i‡(
h‰equícy
[
ichaö
] - 
‰equícy
 < 1000) {

4951 
c‹ª˘i⁄
[
ichaö
] = 
	`öãΩﬁ©e
(
‰equícy
,

4952 
l‰equícy
[
ichaö
],

4953 
h‰equícy
[
ichaö
],

4954 
lc‹ª˘i⁄
[
ichaö
],

4955 
hc‹ª˘i⁄
[
ichaö
]);

4957 
ãm≥øtuª
[
ichaö
] = 
	`öãΩﬁ©e
(
‰equícy
,

4958 
l‰equícy
[
ichaö
],

4959 
h‰equícy
[
ichaö
],

4960 
…em≥øtuª
[
ichaö
],

4961 
hãm≥øtuª
[
ichaö
]);

4963 
vﬁège
[
ichaö
] = 
	`öãΩﬁ©e
(
‰equícy
,

4964 
l‰equícy
[
ichaö
],

4965 
h‰equícy
[
ichaö
],

4966 
lvﬁège
[
ichaö
],

4967 
hvﬁège
[
ichaö
]);

4971 
c‹ª˘i⁄
[
ichaö
] = 
lc‹ª˘i⁄
[ichain];

4972 
ãm≥øtuª
[
ichaö
] = 
…em≥øtuª
[ichain];

4973 
vﬁège
[
ichaö
] = 
lvﬁège
[ichain];

4977 i‡(
h‰equícy
[
ichaö
] - 
‰equícy
 < 1000) {

4978 
c‹ª˘i⁄
[
ichaö
] = 
hc‹ª˘i⁄
[ichain];

4979 
ãm≥øtuª
[
ichaö
] = 
hãm≥øtuª
[ichain];

4980 
vﬁège
[
ichaö
] = 
hvﬁège
[ichain];

4982 
c‹ª˘i⁄
[
ichaö
] = 0;

4983 
ãm≥øtuª
[
ichaö
] = 0;

4984 
vﬁège
[
ichaö
] = 0;

4988 
	`¨9003_hw_powî_c⁄åﬁ_ovîride
(
ah
, 
‰equícy
, 
c‹ª˘i⁄
, 
vﬁège
,

4989 
ãm≥øtuª
);

4991 
	`©h_dbg
(
comm⁄
, 
EEPROM
,

4993 
‰equícy
, 
c‹ª˘i⁄
[0], correction[1], correction[2]);

4996 
	}
}

4998 
u16
 
	$¨9003_hw_gë_dúe˘_edge_powî
(
¨9300_ì¥om
 *
ìp
,

4999 
idx
,

5000 
edge
,

5001 
boﬁ
 
is2GHz
)

5003 
ˇl_˘l_d©a_2g
 *
˘l_2g
 = 
ìp
->
˘lPowîD©a_2G
;

5004 
ˇl_˘l_d©a_5g
 *
˘l_5g
 = 
ìp
->
˘lPowîD©a_5G
;

5006 i‡(
is2GHz
)

5007  
	`CTL_EDGE_TPOWER
(
˘l_2g
[
idx
].
˘lEdges
[
edge
]);

5009  
	`CTL_EDGE_TPOWER
(
˘l_5g
[
idx
].
˘lEdges
[
edge
]);

5010 
	}
}

5012 
u16
 
	$¨9003_hw_gë_ödúe˘_edge_powî
(
¨9300_ì¥om
 *
ìp
,

5013 
idx
,

5014 
edge
,

5015 
u16
 
‰eq
,

5016 
boﬁ
 
is2GHz
)

5018 
ˇl_˘l_d©a_2g
 *
˘l_2g
 = 
ìp
->
˘lPowîD©a_2G
;

5019 
ˇl_˘l_d©a_5g
 *
˘l_5g
 = 
ìp
->
˘lPowîD©a_5G
;

5021 
u8
 *
˘l_‰eqbö
 = 
is2GHz
 ?

5022 &
ìp
->
˘l_‰eqbö_2G
[
idx
][0] :

5023 &
ìp
->
˘l_‰eqbö_5G
[
idx
][0];

5025 i‡(
is2GHz
) {

5026 i‡(
	`©h9k_hw_fbö2‰eq
(
˘l_‰eqbö
[
edge
 - 1], 1Ë< 
‰eq
 &&

5027 
	`CTL_EDGE_FLAGS
(
˘l_2g
[
idx
].
˘lEdges
[
edge
 - 1]))

5028  
	`CTL_EDGE_TPOWER
(
˘l_2g
[
idx
].
˘lEdges
[
edge
 - 1]);

5030 i‡(
	`©h9k_hw_fbö2‰eq
(
˘l_‰eqbö
[
edge
 - 1], 0Ë< 
‰eq
 &&

5031 
	`CTL_EDGE_FLAGS
(
˘l_5g
[
idx
].
˘lEdges
[
edge
 - 1]))

5032  
	`CTL_EDGE_TPOWER
(
˘l_5g
[
idx
].
˘lEdges
[
edge
 - 1]);

5035  
MAX_RATE_POWER
;

5036 
	}
}

5041 
u16
 
	$¨9003_hw_gë_max_edge_powî
(
¨9300_ì¥om
 *
ìp
,

5042 
u16
 
‰eq
, 
idx
, 
boﬁ
 
is2GHz
)

5044 
u16
 
twi˚MaxEdgePowî
 = 
MAX_RATE_POWER
;

5045 
u8
 *
˘l_‰eqbö
 = 
is2GHz
 ?

5046 &
ìp
->
˘l_‰eqbö_2G
[
idx
][0] :

5047 &
ìp
->
˘l_‰eqbö_5G
[
idx
][0];

5048 
u16
 
num_edges
 = 
is2GHz
 ?

5049 
AR9300_NUM_BAND_EDGES_2G
 : 
AR9300_NUM_BAND_EDGES_5G
;

5050 
edge
;

5053 
edge
 = 0;

5054 (
edge
 < 
num_edges
Ë&& (
˘l_‰eqbö
[edge] !
AR5416_BCHAN_UNUSED
);

5055 
edge
++) {

5060 i‡(
‰eq
 =
	`©h9k_hw_fbö2‰eq
(
˘l_‰eqbö
[
edge
], 
is2GHz
)) {

5061 
twi˚MaxEdgePowî
 =

5062 
	`¨9003_hw_gë_dúe˘_edge_powî
(
ìp
, 
idx
,

5063 
edge
, 
is2GHz
);

5065 } i‡((
edge
 > 0) &&

5066 (
‰eq
 < 
	`©h9k_hw_fbö2‰eq
(
˘l_‰eqbö
[
edge
],

5067 
is2GHz
))) {

5068 
twi˚MaxEdgePowî
 =

5069 
	`¨9003_hw_gë_ödúe˘_edge_powî
(
ìp
, 
idx
,

5070 
edge
, 
‰eq
,

5071 
is2GHz
);

5080 i‡(
is2GHz
 && !
twi˚MaxEdgePowî
)

5081 
twi˚MaxEdgePowî
 = 60;

5083  
twi˚MaxEdgePowî
;

5084 
	}
}

5086 
	$¨9003_hw_£t_powî_≥r_øã_èbÀ
(
©h_hw
 *
ah
,

5087 
©h9k_ch™√l
 *
ch™
,

5088 
u8
 *
pPwrAºay
, 
u16
 
cfgCé
,

5089 
u8
 
™ã¬a_ªdu˘i⁄
,

5090 
u16
 
powîLimô
)

5092 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

5093 
¨9300_ì¥om
 *
pEïD©a
 = &
ah
->
ì¥om
.
¨9300_ìp
;

5094 
u16
 
twi˚MaxEdgePowî
;

5095 
i
;

5096 
u16
 
sˇÀdPowî
 = 0, 
möCéPowî
;

5097 c⁄° 
u16
 
˘lModesF‹11a
[] = {

5098 
CTL_11A
, 
CTL_5GHT20
, 
CTL_11A_EXT
, 
CTL_5GHT40


5100 c⁄° 
u16
 
˘lModesF‹11g
[] = {

5101 
CTL_11B
, 
CTL_11G
, 
CTL_2GHT20
, 
CTL_11B_EXT
,

5102 
CTL_11G_EXT
, 
CTL_2GHT40


5104 
u16
 
numCéModes
;

5105 c⁄° 
u16
 *
pCéMode
;

5106 
u16
 
˘lMode
, 
‰eq
;

5107 
ch™_˚¡îs
 
˚¡îs
;

5108 
u8
 *
˘lIndex
;

5109 
u8
 
˘lNum
;

5110 
u16
 
twi˚MöEdgePowî
;

5111 
boﬁ
 
is2ghz
 = 
	`IS_CHAN_2GHZ
(
ch™
);

5113 
	`©h9k_hw_gë_ch™√l_˚¡îs
(
ah
, 
ch™
, &
˚¡îs
);

5114 
sˇÀdPowî
 = 
	`©h9k_hw_gë_sˇÀd_powî
(
ah
, 
powîLimô
,

5115 
™ã¬a_ªdu˘i⁄
);

5117 i‡(
is2ghz
) {

5120 
numCéModes
 =

5121 
	`ARRAY_SIZE
(
˘lModesF‹11g
) -

5122 
SUB_NUM_CTL_MODES_AT_2G_40
;

5123 
pCéMode
 = 
˘lModesF‹11g
;

5124 i‡(
	`IS_CHAN_HT40
(
ch™
))

5126 
numCéModes
 = 
	`ARRAY_SIZE
(
˘lModesF‹11g
);

5130 
numCéModes
 = 
	`ARRAY_SIZE
(
˘lModesF‹11a
) -

5131 
SUB_NUM_CTL_MODES_AT_5G_40
;

5132 
pCéMode
 = 
˘lModesF‹11a
;

5133 i‡(
	`IS_CHAN_HT40
(
ch™
))

5135 
numCéModes
 = 
	`ARRAY_SIZE
(
˘lModesF‹11a
);

5146 
˘lMode
 = 0; céModê< 
numCéModes
; ctlMode++) {

5147 
boﬁ
 
isHt40CéMode
 = (
pCéMode
[
˘lMode
] =
CTL_5GHT40
) ||

5148 (
pCéMode
[
˘lMode
] =
CTL_2GHT40
);

5149 i‡(
isHt40CéMode
)

5150 
‰eq
 = 
˚¡îs
.
sy¡h_˚¡î
;

5151 i‡(
pCéMode
[
˘lMode
] & 
EXT_ADDITIVE
)

5152 
‰eq
 = 
˚¡îs
.
ext_˚¡î
;

5154 
‰eq
 = 
˚¡îs
.
˘l_˚¡î
;

5156 
	`©h_dbg
(
comm⁄
, 
REGULATORY
,

5158 
˘lMode
, 
numCéModes
, 
isHt40CéMode
,

5159 (
pCéMode
[
˘lMode
] & 
EXT_ADDITIVE
));

5162 i‡(
is2ghz
) {

5163 
˘lIndex
 = 
pEïD©a
->
˘lIndex_2G
;

5164 
˘lNum
 = 
AR9300_NUM_CTLS_2G
;

5166 
˘lIndex
 = 
pEïD©a
->
˘lIndex_5G
;

5167 
˘lNum
 = 
AR9300_NUM_CTLS_5G
;

5170 
twi˚MaxEdgePowî
 = 
MAX_RATE_POWER
;

5171 
i
 = 0; (ò< 
˘lNum
Ë&& 
˘lIndex
[i]; i++) {

5172 
	`©h_dbg
(
comm⁄
, 
REGULATORY
,

5174 
i
, 
cfgCé
, 
pCéMode
[
˘lMode
], 
˘lIndex
[i],

5175 
ch™
->
ch™√l
);

5182 i‡((((
cfgCé
 & ~
CTL_MODE_M
) |

5183 (
pCéMode
[
˘lMode
] & 
CTL_MODE_M
)) ==

5184 
˘lIndex
[
i
]) ||

5185 (((
cfgCé
 & ~
CTL_MODE_M
) |

5186 (
pCéMode
[
˘lMode
] & 
CTL_MODE_M
)) ==

5187 ((
˘lIndex
[
i
] & 
CTL_MODE_M
) |

5188 
SD_NO_CTL
))) {

5189 
twi˚MöEdgePowî
 =

5190 
	`¨9003_hw_gë_max_edge_powî
(
pEïD©a
,

5191 
‰eq
, 
i
,

5192 
is2ghz
);

5194 i‡((
cfgCé
 & ~
CTL_MODE_M
Ë=
SD_NO_CTL
)

5200 
twi˚MaxEdgePowî
 =

5201 
	`mö
(
twi˚MaxEdgePowî
,

5202 
twi˚MöEdgePowî
);

5205 
twi˚MaxEdgePowî
 = 
twi˚MöEdgePowî
;

5211 
möCéPowî
 = (
u8
)
	`mö
(
twi˚MaxEdgePowî
, 
sˇÀdPowî
);

5213 
	`©h_dbg
(
comm⁄
, 
REGULATORY
,

5215 
˘lMode
, 
pCéMode
[˘lMode], 
twi˚MaxEdgePowî
,

5216 
sˇÀdPowî
, 
möCéPowî
);

5219 
pCéMode
[
˘lMode
]) {

5220 
CTL_11B
:

5221 
i
 = 
ALL_TARGET_LEGACY_1L_5L
;

5222 
i
 <
ALL_TARGET_LEGACY_11S
; i++)

5223 
pPwrAºay
[
i
] = (
u8
)
	`mö
((
u16
)pPwrArray[i],

5224 
möCéPowî
);

5226 
CTL_11A
:

5227 
CTL_11G
:

5228 
i
 = 
ALL_TARGET_LEGACY_6_24
;

5229 
i
 <
ALL_TARGET_LEGACY_54
; i++)

5230 
pPwrAºay
[
i
] = (
u8
)
	`mö
((
u16
)pPwrArray[i],

5231 
möCéPowî
);

5233 
CTL_5GHT20
:

5234 
CTL_2GHT20
:

5235 
i
 = 
ALL_TARGET_HT20_0_8_16
;

5236 
i
 <
ALL_TARGET_HT20_23
; i++) {

5237 
pPwrAºay
[
i
] = (
u8
)
	`mö
((
u16
)pPwrArray[i],

5238 
möCéPowî
);

5239 i‡(
	`©h9k_hw_mci_is_íabÀd
(
ah
))

5240 
pPwrAºay
[
i
] =

5241 (
u8
)
	`mö
((
u16
)
pPwrAºay
[
i
],

5242 
	`¨9003_mci_gë_max_txpowî
(
ah
,

5243 
pCéMode
[
˘lMode
]));

5246 
CTL_5GHT40
:

5247 
CTL_2GHT40
:

5248 
i
 = 
ALL_TARGET_HT40_0_8_16
;

5249 
i
 <
ALL_TARGET_HT40_23
; i++) {

5250 
pPwrAºay
[
i
] = (
u8
)
	`mö
((
u16
)pPwrArray[i],

5251 
möCéPowî
);

5252 i‡(
	`©h9k_hw_mci_is_íabÀd
(
ah
))

5253 
pPwrAºay
[
i
] =

5254 (
u8
)
	`mö
((
u16
)
pPwrAºay
[
i
],

5255 
	`¨9003_mci_gë_max_txpowî
(
ah
,

5256 
pCéMode
[
˘lMode
]));

5263 
	}
}

5265 
ölöe
 
u8
 
	$mcsidx_to_tgçwridx
(
mcs_idx
, 
u8
 
ba£_pwridx
)

5267 
u8
 
mod_idx
 = 
mcs_idx
 % 8;

5269 i‡(
mod_idx
 <= 3)

5270  
mod_idx
 ? (
ba£_pwridx
 + 1) : base_pwridx;

5272  
ba£_pwridx
 + 4 * (
mcs_idx
 / 8Ë+ 
mod_idx
 - 2;

5273 
	}
}

5275 
	$¨9003_∑¥d_£t_txpowî
(
©h_hw
 *
ah
,

5276 
©h9k_ch™√l
 *
ch™
,

5277 
u8
 *
èrgëPowîVÆT2
)

5279 
i
;

5281 i‡(!
	`¨9003_is_∑¥d_íabÀd
(
ah
))

5284 i‡(
	`IS_CHAN_HT40
(
ch™
))

5285 
i
 = 
ALL_TARGET_HT40_7
;

5287 
i
 = 
ALL_TARGET_HT20_7
;

5289 i‡(
	`IS_CHAN_2GHZ
(
ch™
)) {

5290 i‡(!
	`AR_SREV_9330
(
ah
Ë&& !
	`AR_SREV_9340
(ah) &&

5291 !
	`AR_SREV_9462
(
ah
Ë&& !
	`AR_SREV_9565
(ah)) {

5292 i‡(
	`IS_CHAN_HT40
(
ch™
))

5293 
i
 = 
ALL_TARGET_HT40_0_8_16
;

5295 
i
 = 
ALL_TARGET_HT20_0_8_16
;

5299 
ah
->
∑¥d_èrgë_powî
 = 
èrgëPowîVÆT2
[
i
];

5300 
	}
}

5302 
	$©h9k_hw_¨9300_£t_txpowî
(
©h_hw
 *
ah
,

5303 
©h9k_ch™√l
 *
ch™
, 
u16
 
cfgCé
,

5304 
u8
 
twi˚A¡í«Redu˘i⁄
,

5305 
u8
 
powîLimô
, 
boﬁ
 
ã°
)

5307 
©h_ªguœt‹y
 *
ªguœt‹y
 = 
	`©h9k_hw_ªguœt‹y
(
ah
);

5308 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

5309 
¨9300_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
¨9300_ìp
;

5310 
¨9300_modÆ_ìp_hódî
 *
modÆ_hdr
;

5311 
u8
 
èrgëPowîVÆT2
[
¨9300R©eSize
];

5312 
u8
 
èrgë_powî_vÆ_t2_ìp
[
¨9300R©eSize
];

5313 
i
 = 0, 
∑¥d_sˇÀ_Á˘‹
 = 0;

5314 
u8
 
pwr_idx
, 
mö_pwridx
 = 0;

5316 
	`mem£t
(
èrgëPowîVÆT2
, 0 , (targetPowerValT2));

5321 
	`¨9003_hw_gë_èrgë_powî_ì¥om
(
ah
, 
ch™
, 
èrgëPowîVÆT2
);

5323 i‡(
	`¨9003_is_∑¥d_íabÀd
(
ah
)) {

5324 i‡(
	`IS_CHAN_2GHZ
(
ch™
))

5325 
modÆ_hdr
 = &
ìp
->
modÆHódî2G
;

5327 
modÆ_hdr
 = &
ìp
->
modÆHódî5G
;

5329 
ah
->
∑¥d_øãmask
 =

5330 
	`À32_to_˝u
(
modÆ_hdr
->
∑pdR©eMaskHt20
) &

5331 
AR9300_PAPRD_RATE_MASK
;

5333 
ah
->
∑¥d_øãmask_ht40
 =

5334 
	`À32_to_˝u
(
modÆ_hdr
->
∑pdR©eMaskHt40
) &

5335 
AR9300_PAPRD_RATE_MASK
;

5337 
∑¥d_sˇÀ_Á˘‹
 = 
	`¨9003_gë_∑¥d_sˇÀ_Á˘‹
(
ah
, 
ch™
);

5338 
mö_pwridx
 = 
	`IS_CHAN_HT40
(
ch™
Ë? 
ALL_TARGET_HT40_0_8_16
 :

5339 
ALL_TARGET_HT20_0_8_16
;

5341 i‡(!
ah
->
∑¥d_èbÀ_wrôe_d⁄e
) {

5342 
	`mem˝y
(
èrgë_powî_vÆ_t2_ìp
, 
èrgëPowîVÆT2
,

5343 (
èrgëPowîVÆT2
));

5344 
i
 = 0; i < 24; i++) {

5345 
pwr_idx
 = 
	`mcsidx_to_tgçwridx
(
i
, 
mö_pwridx
);

5346 i‡(
ah
->
∑¥d_øãmask
 & (1 << 
i
)) {

5347 i‡(
èrgëPowîVÆT2
[
pwr_idx
] &&

5348 
èrgëPowîVÆT2
[
pwr_idx
] ==

5349 
èrgë_powî_vÆ_t2_ìp
[
pwr_idx
])

5350 
èrgëPowîVÆT2
[
pwr_idx
] -=

5351 
∑¥d_sˇÀ_Á˘‹
;

5355 
	`mem˝y
(
èrgë_powî_vÆ_t2_ìp
, 
èrgëPowîVÆT2
,

5356 (
èrgëPowîVÆT2
));

5359 
	`¨9003_hw_£t_powî_≥r_øã_èbÀ
(
ah
, 
ch™
,

5360 
èrgëPowîVÆT2
, 
cfgCé
,

5361 
twi˚A¡í«Redu˘i⁄
,

5362 
powîLimô
);

5364 i‡(
	`¨9003_is_∑¥d_íabÀd
(
ah
)) {

5365 
i
 = 0; i < 
¨9300R©eSize
; i++) {

5366 i‡((
ah
->
∑¥d_øãmask
 & (1 << 
i
)) &&

5367 (
	`abs
(
èrgëPowîVÆT2
[
i
] -

5368 
èrgë_powî_vÆ_t2_ìp
[
i
]) >

5369 
∑¥d_sˇÀ_Á˘‹
)) {

5370 
ah
->
∑¥d_øãmask
 &~(1 << 
i
);

5371 
	`©h_dbg
(
comm⁄
, 
EEPROM
,

5372 "∑¥d dißbÀd f‹ mc†%d\n", 
i
);

5377 
ªguœt‹y
->
max_powî_Àvñ
 = 0;

5378 
i
 = 0; i < 
¨9300R©eSize
; i++) {

5379 i‡(
èrgëPowîVÆT2
[
i
] > 
ªguœt‹y
->
max_powî_Àvñ
)

5380 
ªguœt‹y
->
max_powî_Àvñ
 = 
èrgëPowîVÆT2
[
i
];

5383 
	`©h9k_hw_upd©e_ªguœt‹y_maxpowî
(
ah
);

5385 i‡(
ã°
)

5388 
i
 = 0; i < 
¨9300R©eSize
; i++) {

5389 
	`©h_dbg
(
comm⁄
, 
REGULATORY
, "TPC[%02d] 0x%08x\n",

5390 
i
, 
èrgëPowîVÆT2
[i]);

5394 
	`¨9003_hw_tx_powî_ªgwrôe
(
ah
, 
èrgëPowîVÆT2
);

5395 
	`¨9003_hw_ˇlibøti⁄_≠∂y
(
ah
, 
ch™
->
ch™√l
);

5396 
	`¨9003_∑¥d_£t_txpowî
(
ah
, 
ch™
, 
èrgëPowîVÆT2
);

5397 
	}
}

5399 
u16
 
	$©h9k_hw_¨9300_gë_•ur_ch™√l
(
©h_hw
 *
ah
,

5400 
u16
 
i
, 
boﬁ
 
is2GHz
)

5402  
AR_NO_SPUR
;

5403 
	}
}

5405 
s32
 
	$¨9003_hw_gë_tx_gaö_idx
(
©h_hw
 *
ah
)

5407 
¨9300_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
¨9300_ìp
;

5409  (
ìp
->
ba£EïHódî
.
txrxgaö
 >> 4) & 0xf;

5410 
	}
}

5412 
s32
 
	$¨9003_hw_gë_rx_gaö_idx
(
©h_hw
 *
ah
)

5414 
¨9300_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
¨9300_ìp
;

5416  (
ìp
->
ba£EïHódî
.
txrxgaö
) & 0xf;

5417 
	}
}

5419 
u8
 *
	$¨9003_gë_•ur_ch™_±r
(
©h_hw
 *
ah
, 
boﬁ
 
is2ghz
)

5421  
	`¨9003_modÆ_hódî
(
ah
, 
is2ghz
)->
•urCh™s
;

5422 
	}
}

5424 
	$¨9003_gë_∑¥d_sˇÀ_Á˘‹
(
©h_hw
 *
ah
,

5425 
©h9k_ch™√l
 *
ch™
)

5427 
¨9300_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
¨9300_ìp
;

5429 i‡(
	`IS_CHAN_2GHZ
(
ch™
))

5430  
	`MS
(
	`À32_to_˝u
(
ìp
->
modÆHódî2G
.
∑pdR©eMaskHt20
),

5431 
AR9300_PAPRD_SCALE_1
);

5433 i‡(
ch™
->
ch™√l
 >= 5700)

5434  
	`MS
(
	`À32_to_˝u
(
ìp
->
modÆHódî5G
.
∑pdR©eMaskHt20
),

5435 
AR9300_PAPRD_SCALE_1
);

5436 i‡(
ch™
->
ch™√l
 >= 5400)

5437  
	`MS
(
	`À32_to_˝u
(
ìp
->
modÆHódî5G
.
∑pdR©eMaskHt40
),

5438 
AR9300_PAPRD_SCALE_2
);

5440  
	`MS
(
	`À32_to_˝u
(
ìp
->
modÆHódî5G
.
∑pdR©eMaskHt40
),

5441 
AR9300_PAPRD_SCALE_1
);

5443 
	}
}

5445 c⁄° 
ì¥om_›s
 
	gìp_¨9300_›s
 = {

5446 .
check_ì¥om
 = 
©h9k_hw_¨9300_check_ì¥om
,

5447 .
	ggë_ì¥om
 = 
©h9k_hw_¨9300_gë_ì¥om
,

5448 .
	gfûl_ì¥om
 = 
©h9k_hw_¨9300_fûl_ì¥om
,

5449 .
	gdump_ì¥om
 = 
©h9k_hw_¨9003_dump_ì¥om
,

5450 .
	ggë_ì¥om_vî
 = 
©h9k_hw_¨9300_gë_ì¥om_vî
,

5451 .
	ggë_ì¥om_ªv
 = 
©h9k_hw_¨9300_gë_ì¥om_ªv
,

5452 .
	g£t_bﬂrd_vÆues
 = 
©h9k_hw_¨9300_£t_bﬂrd_vÆues
,

5453 .
	g£t_addac
 = 
©h9k_hw_¨9300_£t_addac
,

5454 .
	g£t_txpowî
 = 
©h9k_hw_¨9300_£t_txpowî
,

5455 .
	ggë_•ur_ch™√l
 = 
©h9k_hw_¨9300_gë_•ur_ch™√l


	@ar9003_eeprom.h

17 #i‚de‡
AR9003_EEPROM_H


18 
	#AR9003_EEPROM_H


	)

20 
	~<löux/ty≥s.h
>

22 
	#AR9300_EEP_VER
 0xD000

	)

23 
	#AR9300_EEP_VER_MINOR_MASK
 0xFFF

	)

24 
	#AR9300_EEP_MINOR_VER_1
 0x1

	)

25 
	#AR9300_EEP_MINOR_VER
 
AR9300_EEP_MINOR_VER_1


	)

28 
	#AR9300_EEP_START_LOC
 256

	)

29 
	#AR9300_NUM_5G_CAL_PIERS
 8

	)

30 
	#AR9300_NUM_2G_CAL_PIERS
 3

	)

31 
	#AR9300_NUM_5G_20_TARGET_POWERS
 8

	)

32 
	#AR9300_NUM_5G_40_TARGET_POWERS
 8

	)

33 
	#AR9300_NUM_2G_CCK_TARGET_POWERS
 2

	)

34 
	#AR9300_NUM_2G_20_TARGET_POWERS
 3

	)

35 
	#AR9300_NUM_2G_40_TARGET_POWERS
 3

	)

37 
	#AR9300_NUM_CTLS_5G
 9

	)

38 
	#AR9300_NUM_CTLS_2G
 12

	)

39 
	#AR9300_NUM_BAND_EDGES_5G
 8

	)

40 
	#AR9300_NUM_BAND_EDGES_2G
 4

	)

41 
	#AR9300_EEPMISC_BIG_ENDIAN
 0x01

	)

42 
	#AR9300_EEPMISC_WOW
 0x02

	)

43 
	#AR9300_CUSTOMER_DATA_SIZE
 20

	)

45 
	#AR9300_MAX_CHAINS
 3

	)

46 
	#AR9300_ANT_16S
 25

	)

47 
	#AR9300_FUTURE_MODAL_SZ
 6

	)

49 
	#AR9300_PAPRD_RATE_MASK
 0x01ffffff

	)

50 
	#AR9300_PAPRD_SCALE_1
 0x0e000000

	)

51 
	#AR9300_PAPRD_SCALE_1_S
 25

	)

52 
	#AR9300_PAPRD_SCALE_2
 0x70000000

	)

53 
	#AR9300_PAPRD_SCALE_2_S
 28

	)

55 
	#AR9300_EEP_ANTDIV_CONTROL_DEFAULT_VALUE
 0xc9

	)

64 
	#AR9300_PWR_TABLE_OFFSET
 0

	)

67 
	#AR9300_EEPROM_SIZE
 (16*1024)

	)

69 
	#AR9300_BASE_ADDR_4K
 0xfff

	)

70 
	#AR9300_BASE_ADDR
 0x3ff

	)

71 
	#AR9300_BASE_ADDR_512
 0x1ff

	)

73 
	#AR9300_OTP_BASE
 \

74 ((
	`AR_SREV_9340
(
ah
Ë|| 
	`AR_SREV_9550
◊h)Ë? 0x30000 : 0x14000)

	)

75 
	#AR9300_OTP_STATUS
 \

76 ((
	`AR_SREV_9340
(
ah
Ë|| 
	`AR_SREV_9550
◊h)Ë? 0x30018 : 0x15f18)

	)

77 
	#AR9300_OTP_STATUS_TYPE
 0x7

	)

78 
	#AR9300_OTP_STATUS_VALID
 0x4

	)

79 
	#AR9300_OTP_STATUS_ACCESS_BUSY
 0x2

	)

80 
	#AR9300_OTP_STATUS_SM_BUSY
 0x1

	)

81 
	#AR9300_OTP_READ_DATA
 \

82 ((
	`AR_SREV_9340
(
ah
Ë|| 
	`AR_SREV_9550
◊h)Ë? 0x3001¯: 0x15f1c)

	)

84 
	eèrgëPowîHTR©es
 {

85 
	mHT_TARGET_RATE_0_8_16
,

86 
	mHT_TARGET_RATE_1_3_9_11_17_19
,

87 
	mHT_TARGET_RATE_4
,

88 
	mHT_TARGET_RATE_5
,

89 
	mHT_TARGET_RATE_6
,

90 
	mHT_TARGET_RATE_7
,

91 
	mHT_TARGET_RATE_12
,

92 
	mHT_TARGET_RATE_13
,

93 
	mHT_TARGET_RATE_14
,

94 
	mHT_TARGET_RATE_15
,

95 
	mHT_TARGET_RATE_20
,

96 
	mHT_TARGET_RATE_21
,

97 
	mHT_TARGET_RATE_22
,

98 
	mHT_TARGET_RATE_23


101 
	eèrgëPowîLegacyR©es
 {

102 
	mLEGACY_TARGET_RATE_6_24
,

103 
	mLEGACY_TARGET_RATE_36
,

104 
	mLEGACY_TARGET_RATE_48
,

105 
	mLEGACY_TARGET_RATE_54


108 
	eèrgëPowîCckR©es
 {

109 
	mLEGACY_TARGET_RATE_1L_5L
,

110 
	mLEGACY_TARGET_RATE_5S
,

111 
	mLEGACY_TARGET_RATE_11L
,

112 
	mLEGACY_TARGET_RATE_11S


115 
	e¨9300_R©es
 {

116 
	mALL_TARGET_LEGACY_6_24
,

117 
	mALL_TARGET_LEGACY_36
,

118 
	mALL_TARGET_LEGACY_48
,

119 
	mALL_TARGET_LEGACY_54
,

120 
	mALL_TARGET_LEGACY_1L_5L
,

121 
	mALL_TARGET_LEGACY_5S
,

122 
	mALL_TARGET_LEGACY_11L
,

123 
	mALL_TARGET_LEGACY_11S
,

124 
	mALL_TARGET_HT20_0_8_16
,

125 
	mALL_TARGET_HT20_1_3_9_11_17_19
,

126 
	mALL_TARGET_HT20_4
,

127 
	mALL_TARGET_HT20_5
,

128 
	mALL_TARGET_HT20_6
,

129 
	mALL_TARGET_HT20_7
,

130 
	mALL_TARGET_HT20_12
,

131 
	mALL_TARGET_HT20_13
,

132 
	mALL_TARGET_HT20_14
,

133 
	mALL_TARGET_HT20_15
,

134 
	mALL_TARGET_HT20_20
,

135 
	mALL_TARGET_HT20_21
,

136 
	mALL_TARGET_HT20_22
,

137 
	mALL_TARGET_HT20_23
,

138 
	mALL_TARGET_HT40_0_8_16
,

139 
	mALL_TARGET_HT40_1_3_9_11_17_19
,

140 
	mALL_TARGET_HT40_4
,

141 
	mALL_TARGET_HT40_5
,

142 
	mALL_TARGET_HT40_6
,

143 
	mALL_TARGET_HT40_7
,

144 
	mALL_TARGET_HT40_12
,

145 
	mALL_TARGET_HT40_13
,

146 
	mALL_TARGET_HT40_14
,

147 
	mALL_TARGET_HT40_15
,

148 
	mALL_TARGET_HT40_20
,

149 
	mALL_TARGET_HT40_21
,

150 
	mALL_TARGET_HT40_22
,

151 
	mALL_TARGET_HT40_23
,

152 
	m¨9300R©eSize
,

156 
	sìpFœgs
 {

157 
u8
 
	m›Fœgs
;

158 
u8
 
	mìpMisc
;

159 } 
	g__∑cked
;

161 
	eCom¥essAlg‹ôhm
 {

162 
	m_Com¥essN⁄e
 = 0,

163 
	m_Com¥essLzma
,

164 
	m_Com¥essPaús
,

165 
	m_Com¥essBlock
,

166 
	m_Com¥ess4
,

167 
	m_Com¥ess5
,

168 
	m_Com¥ess6
,

169 
	m_Com¥ess7
,

172 
	s¨9300_ba£_ìp_hdr
 {

173 
__À16
 
	mªgDmn
[2];

175 
u8
 
	mtxrxMask
;

176 
ìpFœgs
 
	m›C≠Fœgs
;

177 
u8
 
	mrfSûít
;

178 
u8
 
	mblueToŸhO±i⁄s
;

179 
u8
 
	mdevi˚C≠
;

181 
u8
 
	mdevi˚Ty≥
;

185 
öt8_t
 
	mpwrTabÀOff£t
;

186 
u8
 
	m∑øms_f‹_tunög_ˇps
[2];

194 
u8
 
	m„©uªE«bÀ
;

196 
u8
 
	mmiscC⁄figuøti⁄
;

197 
u8
 
	mì¥omWrôeE«bÀGpio
;

198 
u8
 
	mwœnDißbÀGpio
;

199 
u8
 
	mwœnLedGpio
;

200 
u8
 
	mrxB™dSñe˘Gpio
;

201 
u8
 
	mtxrxgaö
;

203 
__À32
 
	mswªg
;

204 } 
	g__∑cked
;

206 
	s¨9300_modÆ_ìp_hódî
 {

208 
__À32
 
	m™tCålComm⁄
;

210 
__À32
 
	m™tCålComm⁄2
;

212 
__À16
 
	m™tCålChaö
[
AR9300_MAX_CHAINS
];

214 
u8
 
	mx©ãn1DB
[
AR9300_MAX_CHAINS
];

216 
u8
 
	mx©ãn1M¨gö
[
AR9300_MAX_CHAINS
];

217 
öt8_t
 
	mãmpSl›e
;

218 
öt8_t
 
	mvﬁtSl›e
;

220 
u8
 
	m•urCh™s
[
AR_EEPROM_MODAL_SPURS
];

222 
öt8_t
 
	mnoi£Flo‹ThªshCh
[
AR9300_MAX_CHAINS
];

223 
u8
 
	mª£rved
[11];

224 
öt8_t
 
	mquick_dr›
;

225 
u8
 
	mx∑BüsLvl
;

226 
u8
 
	mtxFømeToD©aSèπ
;

227 
u8
 
	mtxFømeToPaOn
;

228 
u8
 
	mtxClù
;

229 
öt8_t
 
	m™ã¬aGaö
;

230 
u8
 
	mswôchSëéög
;

231 
öt8_t
 
	madcDesúedSize
;

232 
u8
 
	mtxEndToX∑Off
;

233 
u8
 
	mtxEndToRxOn
;

234 
u8
 
	mtxFømeToX∑On
;

235 
u8
 
	mthªsh62
;

236 
__À32
 
	m∑pdR©eMaskHt20
;

237 
__À32
 
	m∑pdR©eMaskHt40
;

238 
__À16
 
	mswôchcom•dt
;

239 
u8
 
	mx a_büs_°ªngth
;

240 
u8
 
	mfutuªModÆ
[7];

241 } 
	g__∑cked
;

243 
	s¨9300_ˇl_d©a_≥r_‰eq_›_lo›
 {

244 
öt8_t
 
	mªfPowî
;

246 
u8
 
	mvﬁtMós
;

248 
u8
 
	mãmpMós
;

250 
öt8_t
 
	mrxNoi£Êo‹CÆ
;

252 
öt8_t
 
	mrxNoi£Êo‹Powî
;

254 
u8
 
	mrxTempMós
;

255 } 
	g__∑cked
;

257 
	sˇl_tgt_pow_Àgacy
 {

258 
u8
 
	mtPow2x
[4];

259 } 
	g__∑cked
;

261 
	sˇl_tgt_pow_ht
 {

262 
u8
 
	mtPow2x
[14];

263 } 
	g__∑cked
;

265 
	sˇl_˘l_d©a_2g
 {

266 
u8
 
	m˘lEdges
[
AR9300_NUM_BAND_EDGES_2G
];

267 } 
	g__∑cked
;

269 
	sˇl_˘l_d©a_5g
 {

270 
u8
 
	m˘lEdges
[
AR9300_NUM_BAND_EDGES_5G
];

271 } 
	g__∑cked
;

273 
	#MAX_BASE_EXTENSION_FUTURE
 2

	)

275 
	s¨9300_Ba£Exãnsi⁄_1
 {

276 
u8
 
	m™t_div_c⁄åﬁ
;

277 
u8
 
	mfutuª
[
MAX_BASE_EXTENSION_FUTURE
];

285 
u8
 
	mmisc_íabÀ
;

286 
öt8_t
 
	mãmp¶›exãnsi⁄
[8];

287 
öt8_t
 
	mquick_dr›_low
;

288 
öt8_t
 
	mquick_dr›_high
;

289 } 
	g__∑cked
;

291 
	s¨9300_Ba£Exãnsi⁄_2
 {

292 
öt8_t
 
	mãmpSl›eLow
;

293 
öt8_t
 
	mãmpSl›eHigh
;

294 
u8
 
	mx©ãn1DBLow
[
AR9300_MAX_CHAINS
];

295 
u8
 
	mx©ãn1M¨göLow
[
AR9300_MAX_CHAINS
];

296 
u8
 
	mx©ãn1DBHigh
[
AR9300_MAX_CHAINS
];

297 
u8
 
	mx©ãn1M¨göHigh
[
AR9300_MAX_CHAINS
];

298 } 
	g__∑cked
;

300 
	s¨9300_ì¥om
 {

301 
u8
 
	mì¥omVîsi⁄
;

302 
u8
 
	mãm∂©eVîsi⁄
;

303 
u8
 
	mmacAddr
[6];

304 
u8
 
	mcu°D©a
[
AR9300_CUSTOMER_DATA_SIZE
];

306 
¨9300_ba£_ìp_hdr
 
	mba£EïHódî
;

308 
¨9300_modÆ_ìp_hódî
 
	mmodÆHódî2G
;

309 
¨9300_Ba£Exãnsi⁄_1
 
	mba£_ext1
;

310 
u8
 
	mˇlFªqPõr2G
[
AR9300_NUM_2G_CAL_PIERS
];

311 
¨9300_ˇl_d©a_≥r_‰eq_›_lo›


312 
	mˇlPõrD©a2G
[
AR9300_MAX_CHAINS
][
AR9300_NUM_2G_CAL_PIERS
];

313 
u8
 
	mˇlT¨gë_‰eqbö_Cck
[
AR9300_NUM_2G_CCK_TARGET_POWERS
];

314 
u8
 
	mˇlT¨gë_‰eqbö_2G
[
AR9300_NUM_2G_20_TARGET_POWERS
];

315 
u8
 
	mˇlT¨gë_‰eqbö_2GHT20
[
AR9300_NUM_2G_20_TARGET_POWERS
];

316 
u8
 
	mˇlT¨gë_‰eqbö_2GHT40
[
AR9300_NUM_2G_40_TARGET_POWERS
];

317 
ˇl_tgt_pow_Àgacy


318 
	mˇlT¨gëPowîCck
[
AR9300_NUM_2G_CCK_TARGET_POWERS
];

319 
ˇl_tgt_pow_Àgacy


320 
	mˇlT¨gëPowî2G
[
AR9300_NUM_2G_20_TARGET_POWERS
];

321 
ˇl_tgt_pow_ht


322 
	mˇlT¨gëPowî2GHT20
[
AR9300_NUM_2G_20_TARGET_POWERS
];

323 
ˇl_tgt_pow_ht


324 
	mˇlT¨gëPowî2GHT40
[
AR9300_NUM_2G_40_TARGET_POWERS
];

325 
u8
 
	m˘lIndex_2G
[
AR9300_NUM_CTLS_2G
];

326 
u8
 
	m˘l_‰eqbö_2G
[
AR9300_NUM_CTLS_2G
][
AR9300_NUM_BAND_EDGES_2G
];

327 
ˇl_˘l_d©a_2g
 
	m˘lPowîD©a_2G
[
AR9300_NUM_CTLS_2G
];

328 
¨9300_modÆ_ìp_hódî
 
	mmodÆHódî5G
;

329 
¨9300_Ba£Exãnsi⁄_2
 
	mba£_ext2
;

330 
u8
 
	mˇlFªqPõr5G
[
AR9300_NUM_5G_CAL_PIERS
];

331 
¨9300_ˇl_d©a_≥r_‰eq_›_lo›


332 
	mˇlPõrD©a5G
[
AR9300_MAX_CHAINS
][
AR9300_NUM_5G_CAL_PIERS
];

333 
u8
 
	mˇlT¨gë_‰eqbö_5G
[
AR9300_NUM_5G_20_TARGET_POWERS
];

334 
u8
 
	mˇlT¨gë_‰eqbö_5GHT20
[
AR9300_NUM_5G_20_TARGET_POWERS
];

335 
u8
 
	mˇlT¨gë_‰eqbö_5GHT40
[
AR9300_NUM_5G_40_TARGET_POWERS
];

336 
ˇl_tgt_pow_Àgacy


337 
	mˇlT¨gëPowî5G
[
AR9300_NUM_5G_20_TARGET_POWERS
];

338 
ˇl_tgt_pow_ht


339 
	mˇlT¨gëPowî5GHT20
[
AR9300_NUM_5G_20_TARGET_POWERS
];

340 
ˇl_tgt_pow_ht


341 
	mˇlT¨gëPowî5GHT40
[
AR9300_NUM_5G_40_TARGET_POWERS
];

342 
u8
 
	m˘lIndex_5G
[
AR9300_NUM_CTLS_5G
];

343 
u8
 
	m˘l_‰eqbö_5G
[
AR9300_NUM_CTLS_5G
][
AR9300_NUM_BAND_EDGES_5G
];

344 
ˇl_˘l_d©a_5g
 
	m˘lPowîD©a_5G
[
AR9300_NUM_CTLS_5G
];

345 } 
	g__∑cked
;

347 
s32
 
¨9003_hw_gë_tx_gaö_idx
(
©h_hw
 *
ah
);

348 
s32
 
¨9003_hw_gë_rx_gaö_idx
(
©h_hw
 *
ah
);

349 
u32
 
¨9003_hw_™t_˘æ_comm⁄_gë
(
©h_hw
 *
ah
, 
boﬁ
 
is2ghz
);

350 
u32
 
¨9003_hw_™t_˘æ_comm⁄_2_gë
(
©h_hw
 *
ah
, 
boﬁ
 
is2ghz
);

352 
u8
 *
¨9003_gë_•ur_ch™_±r
(
©h_hw
 *
ah
, 
boﬁ
 
is_2ghz
);

354 
¨9003_gë_∑¥d_sˇÀ_Á˘‹
(
©h_hw
 *
ah
,

355 
©h9k_ch™√l
 *
ch™
);

357 
¨9003_hw_öã∫Æ_ªguœt‹_≠∂y
(
©h_hw
 *
ah
);

	@ar9003_hw.c

17 
	~"hw.h
"

18 
	~"¨9003_mac.h
"

19 
	~"¨9003_2p2_öôvÆs.h
"

20 
	~"¨9003_bufÁlo_öôvÆs.h
"

21 
	~"¨9485_öôvÆs.h
"

22 
	~"¨9340_öôvÆs.h
"

23 
	~"¨9330_1p1_öôvÆs.h
"

24 
	~"¨9330_1p2_öôvÆs.h
"

25 
	~"¨955x_1p0_öôvÆs.h
"

26 
	~"¨9580_1p0_öôvÆs.h
"

27 
	~"¨9462_2p0_öôvÆs.h
"

28 
	~"¨9462_2p1_öôvÆs.h
"

29 
	~"¨9565_1p0_öôvÆs.h
"

30 
	~"¨9565_1p1_öôvÆs.h
"

31 
	~"¨953x_öôvÆs.h
"

40 
	$¨9003_hw_öô_mode_ªgs
(
©h_hw
 *
ah
)

42 i‡(
	`AR_SREV_9330_11
(
ah
)) {

44 
	`INIT_INI_ARRAY
(&
ah
->
öiMac
[
ATH_INI_CORE
],

45 
¨9331_1p1_mac_c‹e
);

46 
	`INIT_INI_ARRAY
(&
ah
->
öiMac
[
ATH_INI_POST
],

47 
¨9331_1p1_mac_po°ambÀ
);

50 
	`INIT_INI_ARRAY
(&
ah
->
öiBB
[
ATH_INI_CORE
],

51 
¨9331_1p1_ba£b™d_c‹e
);

52 
	`INIT_INI_ARRAY
(&
ah
->
öiBB
[
ATH_INI_POST
],

53 
¨9331_1p1_ba£b™d_po°ambÀ
);

56 
	`INIT_INI_ARRAY
(&
ah
->
öiRadio
[
ATH_INI_CORE
],

57 
¨9331_1p1_ødio_c‹e
);

60 
	`INIT_INI_ARRAY
(&
ah
->
öiSOC
[
ATH_INI_PRE
],

61 
¨9331_1p1_soc_¥ómbÀ
);

62 
	`INIT_INI_ARRAY
(&
ah
->
öiSOC
[
ATH_INI_POST
],

63 
¨9331_1p1_soc_po°ambÀ
);

66 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

67 
¨9331_comm⁄_rx_gaö_1p1
);

68 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

69 
¨9331_modes_lowe°_ob_db_tx_gaö_1p1
);

72 
	`INIT_INI_ARRAY
(&
ah
->
öiCckfúJ≠™2484
,

73 
¨9331_1p1_ba£b™d_c‹e_txfú_c€ff_j≠™_2484
);

76 i‡(
ah
->
is_˛k_25mhz
)

77 
	`INIT_INI_ARRAY
(&
ah
->
öiAddôi⁄Æ
,

78 
¨9331_1p1_xèl_25M
);

80 
	`INIT_INI_ARRAY
(&
ah
->
öiAddôi⁄Æ
,

81 
¨9331_1p1_xèl_40M
);

82 } i‡(
	`AR_SREV_9330_12
(
ah
)) {

84 
	`INIT_INI_ARRAY
(&
ah
->
öiMac
[
ATH_INI_CORE
],

85 
¨9331_1p2_mac_c‹e
);

86 
	`INIT_INI_ARRAY
(&
ah
->
öiMac
[
ATH_INI_POST
],

87 
¨9331_1p2_mac_po°ambÀ
);

90 
	`INIT_INI_ARRAY
(&
ah
->
öiBB
[
ATH_INI_CORE
],

91 
¨9331_1p2_ba£b™d_c‹e
);

92 
	`INIT_INI_ARRAY
(&
ah
->
öiBB
[
ATH_INI_POST
],

93 
¨9331_1p2_ba£b™d_po°ambÀ
);

96 
	`INIT_INI_ARRAY
(&
ah
->
öiRadio
[
ATH_INI_CORE
],

97 
¨9331_1p2_ødio_c‹e
);

100 
	`INIT_INI_ARRAY
(&
ah
->
öiSOC
[
ATH_INI_PRE
],

101 
¨9331_1p2_soc_¥ómbÀ
);

102 
	`INIT_INI_ARRAY
(&
ah
->
öiSOC
[
ATH_INI_POST
],

103 
¨9331_1p2_soc_po°ambÀ
);

106 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

107 
¨9331_comm⁄_rx_gaö_1p2
);

108 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

109 
¨9331_modes_lowe°_ob_db_tx_gaö_1p2
);

112 
	`INIT_INI_ARRAY
(&
ah
->
öiCckfúJ≠™2484
,

113 
¨9331_1p2_ba£b™d_c‹e_txfú_c€ff_j≠™_2484
);

116 i‡(
ah
->
is_˛k_25mhz
)

117 
	`INIT_INI_ARRAY
(&
ah
->
öiAddôi⁄Æ
,

118 
¨9331_1p2_xèl_25M
);

120 
	`INIT_INI_ARRAY
(&
ah
->
öiAddôi⁄Æ
,

121 
¨9331_1p2_xèl_40M
);

122 } i‡(
	`AR_SREV_9340
(
ah
)) {

124 
	`INIT_INI_ARRAY
(&
ah
->
öiMac
[
ATH_INI_CORE
],

125 
¨9340_1p0_mac_c‹e
);

126 
	`INIT_INI_ARRAY
(&
ah
->
öiMac
[
ATH_INI_POST
],

127 
¨9340_1p0_mac_po°ambÀ
);

130 
	`INIT_INI_ARRAY
(&
ah
->
öiBB
[
ATH_INI_CORE
],

131 
¨9340_1p0_ba£b™d_c‹e
);

132 
	`INIT_INI_ARRAY
(&
ah
->
öiBB
[
ATH_INI_POST
],

133 
¨9340_1p0_ba£b™d_po°ambÀ
);

136 
	`INIT_INI_ARRAY
(&
ah
->
öiRadio
[
ATH_INI_CORE
],

137 
¨9340_1p0_ødio_c‹e
);

138 
	`INIT_INI_ARRAY
(&
ah
->
öiRadio
[
ATH_INI_POST
],

139 
¨9340_1p0_ødio_po°ambÀ
);

142 
	`INIT_INI_ARRAY
(&
ah
->
öiSOC
[
ATH_INI_PRE
],

143 
¨9340_1p0_soc_¥ómbÀ
);

144 
	`INIT_INI_ARRAY
(&
ah
->
öiSOC
[
ATH_INI_POST
],

145 
¨9340_1p0_soc_po°ambÀ
);

148 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

149 
¨9340Comm⁄_wo_x a_rx_gaö_èbÀ_1p0
);

150 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

151 
¨9340Modes_high_ob_db_tx_gaö_èbÀ_1p0
);

153 
	`INIT_INI_ARRAY
(&
ah
->
öiModesFa°Clock
,

154 
¨9340Modes_Á°_˛ock_1p0
);

155 
	`INIT_INI_ARRAY
(&
ah
->
öiCckfúJ≠™2484
,

156 
¨9340_1p0_ba£b™d_c‹e_txfú_c€ff_j≠™_2484
);

157 
	`INIT_INI_ARRAY
(&
ah
->
öi_dfs
,

158 
¨9340_1p0_ba£b™d_po°ambÀ_dfs_ch™√l
);

160 i‡(!
ah
->
is_˛k_25mhz
)

161 
	`INIT_INI_ARRAY
(&
ah
->
öiAddôi⁄Æ
,

162 
¨9340_1p0_ødio_c‹e_40M
);

163 } i‡(
	`AR_SREV_9485_11_OR_LATER
(
ah
)) {

165 
	`INIT_INI_ARRAY
(&
ah
->
öiMac
[
ATH_INI_CORE
],

166 
¨9485_1_1_mac_c‹e
);

167 
	`INIT_INI_ARRAY
(&
ah
->
öiMac
[
ATH_INI_POST
],

168 
¨9485_1_1_mac_po°ambÀ
);

171 
	`INIT_INI_ARRAY
(&
ah
->
öiBB
[
ATH_INI_PRE
], 
¨9485_1_1
);

172 
	`INIT_INI_ARRAY
(&
ah
->
öiBB
[
ATH_INI_CORE
],

173 
¨9485_1_1_ba£b™d_c‹e
);

174 
	`INIT_INI_ARRAY
(&
ah
->
öiBB
[
ATH_INI_POST
],

175 
¨9485_1_1_ba£b™d_po°ambÀ
);

178 
	`INIT_INI_ARRAY
(&
ah
->
öiRadio
[
ATH_INI_CORE
],

179 
¨9485_1_1_ødio_c‹e
);

180 
	`INIT_INI_ARRAY
(&
ah
->
öiRadio
[
ATH_INI_POST
],

181 
¨9485_1_1_ødio_po°ambÀ
);

184 
	`INIT_INI_ARRAY
(&
ah
->
öiSOC
[
ATH_INI_PRE
],

185 
¨9485_1_1_soc_¥ómbÀ
);

188 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

189 
¨9485Comm⁄_wo_x a_rx_gaö_1_1
);

190 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

191 
¨9485_modes_lowe°_ob_db_tx_gaö_1_1
);

194 
	`INIT_INI_ARRAY
(&
ah
->
öiCckfúJ≠™2484
,

195 
¨9485_1_1_ba£b™d_c‹e_txfú_c€ff_j≠™_2484
);

197 i‡(
ah
->
c⁄fig
.
no_∂l_pwrßve
) {

198 
	`INIT_INI_ARRAY
(&
ah
->
öiPcõSîdes
,

199 
¨9485_1_1_pcõ_phy_˛kªq_dißbÀ_L1
);

200 
	`INIT_INI_ARRAY
(&
ah
->
öiPcõSîdesLowPowî
,

201 
¨9485_1_1_pcõ_phy_˛kªq_dißbÀ_L1
);

203 
	`INIT_INI_ARRAY
(&
ah
->
öiPcõSîdes
,

204 
¨9485_1_1_∂l_⁄_cdr_⁄_˛kªq_dißbÀ_L1
);

205 
	`INIT_INI_ARRAY
(&
ah
->
öiPcõSîdesLowPowî
,

206 
¨9485_1_1_∂l_⁄_cdr_⁄_˛kªq_dißbÀ_L1
);

208 } i‡(
	`AR_SREV_9462_21
(
ah
)) {

209 
	`INIT_INI_ARRAY
(&
ah
->
öiMac
[
ATH_INI_CORE
],

210 
¨9462_2p1_mac_c‹e
);

211 
	`INIT_INI_ARRAY
(&
ah
->
öiMac
[
ATH_INI_POST
],

212 
¨9462_2p1_mac_po°ambÀ
);

213 
	`INIT_INI_ARRAY
(&
ah
->
öiBB
[
ATH_INI_CORE
],

214 
¨9462_2p1_ba£b™d_c‹e
);

215 
	`INIT_INI_ARRAY
(&
ah
->
öiBB
[
ATH_INI_POST
],

216 
¨9462_2p1_ba£b™d_po°ambÀ
);

217 
	`INIT_INI_ARRAY
(&
ah
->
öiRadio
[
ATH_INI_CORE
],

218 
¨9462_2p1_ødio_c‹e
);

219 
	`INIT_INI_ARRAY
(&
ah
->
öiRadio
[
ATH_INI_POST
],

220 
¨9462_2p1_ødio_po°ambÀ
);

221 
	`INIT_INI_ARRAY
(&
ah
->
öi_ødio_po°_sys2™t
,

222 
¨9462_2p1_ødio_po°ambÀ_sys2™t
);

223 
	`INIT_INI_ARRAY
(&
ah
->
öiSOC
[
ATH_INI_PRE
],

224 
¨9462_2p1_soc_¥ómbÀ
);

225 
	`INIT_INI_ARRAY
(&
ah
->
öiSOC
[
ATH_INI_POST
],

226 
¨9462_2p1_soc_po°ambÀ
);

227 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

228 
¨9462_2p1_comm⁄_rx_gaö
);

229 
	`INIT_INI_ARRAY
(&
ah
->
öiModesFa°Clock
,

230 
¨9462_2p1_modes_Á°_˛ock
);

231 
	`INIT_INI_ARRAY
(&
ah
->
öiCckfúJ≠™2484
,

232 
¨9462_2p1_ba£b™d_c‹e_txfú_c€ff_j≠™_2484
);

233 
	`INIT_INI_ARRAY
(&
ah
->
öiPcõSîdes
,

234 
¨9462_2p1_pcõphy_˛kªq_dißbÀ_L1
);

235 
	`INIT_INI_ARRAY
(&
ah
->
öiPcõSîdesLowPowî
,

236 
¨9462_2p1_pcõphy_˛kªq_dißbÀ_L1
);

237 } i‡(
	`AR_SREV_9462_20
(
ah
)) {

239 
	`INIT_INI_ARRAY
(&
ah
->
öiMac
[
ATH_INI_CORE
], 
¨9462_2p0_mac_c‹e
);

240 
	`INIT_INI_ARRAY
(&
ah
->
öiMac
[
ATH_INI_POST
],

241 
¨9462_2p0_mac_po°ambÀ
);

243 
	`INIT_INI_ARRAY
(&
ah
->
öiBB
[
ATH_INI_CORE
],

244 
¨9462_2p0_ba£b™d_c‹e
);

245 
	`INIT_INI_ARRAY
(&
ah
->
öiBB
[
ATH_INI_POST
],

246 
¨9462_2p0_ba£b™d_po°ambÀ
);

248 
	`INIT_INI_ARRAY
(&
ah
->
öiRadio
[
ATH_INI_CORE
],

249 
¨9462_2p0_ødio_c‹e
);

250 
	`INIT_INI_ARRAY
(&
ah
->
öiRadio
[
ATH_INI_POST
],

251 
¨9462_2p0_ødio_po°ambÀ
);

252 
	`INIT_INI_ARRAY
(&
ah
->
öi_ødio_po°_sys2™t
,

253 
¨9462_2p0_ødio_po°ambÀ_sys2™t
);

255 
	`INIT_INI_ARRAY
(&
ah
->
öiSOC
[
ATH_INI_PRE
],

256 
¨9462_2p0_soc_¥ómbÀ
);

257 
	`INIT_INI_ARRAY
(&
ah
->
öiSOC
[
ATH_INI_POST
],

258 
¨9462_2p0_soc_po°ambÀ
);

260 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

261 
¨9462_2p0_comm⁄_rx_gaö
);

264 
	`INIT_INI_ARRAY
(&
ah
->
öiPcõSîdes
,

265 
¨9462_2p0_pcõphy_˛kªq_dißbÀ_L1
);

267 
	`INIT_INI_ARRAY
(&
ah
->
öiPcõSîdesLowPowî
,

268 
¨9462_2p0_pcõphy_˛kªq_dißbÀ_L1
);

271 
	`INIT_INI_ARRAY
(&
ah
->
öiModesFa°Clock
,

272 
¨9462_2p0_modes_Á°_˛ock
);

274 
	`INIT_INI_ARRAY
(&
ah
->
öiCckfúJ≠™2484
,

275 
¨9462_2p0_ba£b™d_c‹e_txfú_c€ff_j≠™_2484
);

276 } i‡(
	`AR_SREV_9550
(
ah
)) {

278 
	`INIT_INI_ARRAY
(&
ah
->
öiMac
[
ATH_INI_CORE
],

279 
¨955x_1p0_mac_c‹e
);

280 
	`INIT_INI_ARRAY
(&
ah
->
öiMac
[
ATH_INI_POST
],

281 
¨955x_1p0_mac_po°ambÀ
);

284 
	`INIT_INI_ARRAY
(&
ah
->
öiBB
[
ATH_INI_CORE
],

285 
¨955x_1p0_ba£b™d_c‹e
);

286 
	`INIT_INI_ARRAY
(&
ah
->
öiBB
[
ATH_INI_POST
],

287 
¨955x_1p0_ba£b™d_po°ambÀ
);

290 
	`INIT_INI_ARRAY
(&
ah
->
öiRadio
[
ATH_INI_CORE
],

291 
¨955x_1p0_ødio_c‹e
);

292 
	`INIT_INI_ARRAY
(&
ah
->
öiRadio
[
ATH_INI_POST
],

293 
¨955x_1p0_ødio_po°ambÀ
);

296 
	`INIT_INI_ARRAY
(&
ah
->
öiSOC
[
ATH_INI_PRE
],

297 
¨955x_1p0_soc_¥ómbÀ
);

298 
	`INIT_INI_ARRAY
(&
ah
->
öiSOC
[
ATH_INI_POST
],

299 
¨955x_1p0_soc_po°ambÀ
);

302 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

303 
¨955x_1p0_comm⁄_wo_x a_rx_gaö_èbÀ
);

304 
	`INIT_INI_ARRAY
(&
ah
->
öi_modes_rx_gaö_bounds
,

305 
¨955x_1p0_comm⁄_wo_x a_rx_gaö_bounds
);

306 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

307 
¨955x_1p0_modes_x∑_tx_gaö_èbÀ
);

310 
	`INIT_INI_ARRAY
(&
ah
->
öiModesFa°Clock
,

311 
¨955x_1p0_modes_Á°_˛ock
);

312 } i‡(
	`AR_SREV_9531
(
ah
)) {

313 
	`INIT_INI_ARRAY
(&
ah
->
öiMac
[
ATH_INI_CORE
],

314 
qˇ953x_1p0_mac_c‹e
);

315 
	`INIT_INI_ARRAY
(&
ah
->
öiMac
[
ATH_INI_POST
],

316 
qˇ953x_1p0_mac_po°ambÀ
);

317 
	`INIT_INI_ARRAY
(&
ah
->
öiBB
[
ATH_INI_CORE
],

318 
qˇ953x_1p0_ba£b™d_c‹e
);

319 
	`INIT_INI_ARRAY
(&
ah
->
öiBB
[
ATH_INI_POST
],

320 
qˇ953x_1p0_ba£b™d_po°ambÀ
);

321 
	`INIT_INI_ARRAY
(&
ah
->
öiRadio
[
ATH_INI_CORE
],

322 
qˇ953x_1p0_ødio_c‹e
);

323 
	`INIT_INI_ARRAY
(&
ah
->
öiRadio
[
ATH_INI_POST
],

324 
qˇ953x_1p0_ødio_po°ambÀ
);

325 
	`INIT_INI_ARRAY
(&
ah
->
öiSOC
[
ATH_INI_PRE
],

326 
qˇ953x_1p0_soc_¥ómbÀ
);

327 
	`INIT_INI_ARRAY
(&
ah
->
öiSOC
[
ATH_INI_POST
],

328 
qˇ953x_1p0_soc_po°ambÀ
);

329 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

330 
qˇ953x_1p0_comm⁄_wo_x a_rx_gaö_èbÀ
);

331 
	`INIT_INI_ARRAY
(&
ah
->
öi_modes_rx_gaö_bounds
,

332 
qˇ953x_1p0_comm⁄_wo_x a_rx_gaö_bounds
);

333 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

334 
qˇ953x_1p0_modes_no_x∑_tx_gaö_èbÀ
);

335 
	`INIT_INI_ARRAY
(&
ah
->
öiModesFa°Clock
,

336 
qˇ953x_1p0_modes_Á°_˛ock
);

337 } i‡(
	`AR_SREV_9580
(
ah
)) {

339 
	`INIT_INI_ARRAY
(&
ah
->
öiMac
[
ATH_INI_CORE
],

340 
¨9580_1p0_mac_c‹e
);

341 
	`INIT_INI_ARRAY
(&
ah
->
öiMac
[
ATH_INI_POST
],

342 
¨9580_1p0_mac_po°ambÀ
);

345 
	`INIT_INI_ARRAY
(&
ah
->
öiBB
[
ATH_INI_CORE
],

346 
¨9580_1p0_ba£b™d_c‹e
);

347 
	`INIT_INI_ARRAY
(&
ah
->
öiBB
[
ATH_INI_POST
],

348 
¨9580_1p0_ba£b™d_po°ambÀ
);

351 
	`INIT_INI_ARRAY
(&
ah
->
öiRadio
[
ATH_INI_CORE
],

352 
¨9580_1p0_ødio_c‹e
);

353 
	`INIT_INI_ARRAY
(&
ah
->
öiRadio
[
ATH_INI_POST
],

354 
¨9580_1p0_ødio_po°ambÀ
);

357 
	`INIT_INI_ARRAY
(&
ah
->
öiSOC
[
ATH_INI_PRE
],

358 
¨9580_1p0_soc_¥ómbÀ
);

359 
	`INIT_INI_ARRAY
(&
ah
->
öiSOC
[
ATH_INI_POST
],

360 
¨9580_1p0_soc_po°ambÀ
);

363 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

364 
¨9580_1p0_rx_gaö_èbÀ
);

365 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

366 
¨9580_1p0_low_ob_db_tx_gaö_èbÀ
);

368 
	`INIT_INI_ARRAY
(&
ah
->
öiModesFa°Clock
,

369 
¨9580_1p0_modes_Á°_˛ock
);

370 
	`INIT_INI_ARRAY
(&
ah
->
öiCckfúJ≠™2484
,

371 
¨9580_1p0_ba£b™d_c‹e_txfú_c€ff_j≠™_2484
);

372 
	`INIT_INI_ARRAY
(&
ah
->
öi_dfs
,

373 
¨9580_1p0_ba£b™d_po°ambÀ_dfs_ch™√l
);

374 } i‡(
	`AR_SREV_9565_11_OR_LATER
(
ah
)) {

375 
	`INIT_INI_ARRAY
(&
ah
->
öiMac
[
ATH_INI_CORE
],

376 
¨9565_1p1_mac_c‹e
);

377 
	`INIT_INI_ARRAY
(&
ah
->
öiMac
[
ATH_INI_POST
],

378 
¨9565_1p1_mac_po°ambÀ
);

380 
	`INIT_INI_ARRAY
(&
ah
->
öiBB
[
ATH_INI_CORE
],

381 
¨9565_1p1_ba£b™d_c‹e
);

382 
	`INIT_INI_ARRAY
(&
ah
->
öiBB
[
ATH_INI_POST
],

383 
¨9565_1p1_ba£b™d_po°ambÀ
);

385 
	`INIT_INI_ARRAY
(&
ah
->
öiRadio
[
ATH_INI_CORE
],

386 
¨9565_1p1_ødio_c‹e
);

387 
	`INIT_INI_ARRAY
(&
ah
->
öiRadio
[
ATH_INI_POST
],

388 
¨9565_1p1_ødio_po°ambÀ
);

390 
	`INIT_INI_ARRAY
(&
ah
->
öiSOC
[
ATH_INI_PRE
],

391 
¨9565_1p1_soc_¥ómbÀ
);

392 
	`INIT_INI_ARRAY
(&
ah
->
öiSOC
[
ATH_INI_POST
],

393 
¨9565_1p1_soc_po°ambÀ
);

395 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

396 
¨9565_1p1_Comm⁄_rx_gaö_èbÀ
);

397 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

398 
¨9565_1p1_Modes_lowe°_ob_db_tx_gaö_èbÀ
);

400 
	`INIT_INI_ARRAY
(&
ah
->
öiPcõSîdes
,

401 
¨9565_1p1_pcõphy_˛kªq_dißbÀ_L1
);

402 
	`INIT_INI_ARRAY
(&
ah
->
öiPcõSîdesLowPowî
,

403 
¨9565_1p1_pcõphy_˛kªq_dißbÀ_L1
);

405 
	`INIT_INI_ARRAY
(&
ah
->
öiModesFa°Clock
,

406 
¨9565_1p1_modes_Á°_˛ock
);

407 
	`INIT_INI_ARRAY
(&
ah
->
öiCckfúJ≠™2484
,

408 
¨9565_1p1_ba£b™d_c‹e_txfú_c€ff_j≠™_2484
);

409 } i‡(
	`AR_SREV_9565
(
ah
)) {

410 
	`INIT_INI_ARRAY
(&
ah
->
öiMac
[
ATH_INI_CORE
],

411 
¨9565_1p0_mac_c‹e
);

412 
	`INIT_INI_ARRAY
(&
ah
->
öiMac
[
ATH_INI_POST
],

413 
¨9565_1p0_mac_po°ambÀ
);

415 
	`INIT_INI_ARRAY
(&
ah
->
öiBB
[
ATH_INI_CORE
],

416 
¨9565_1p0_ba£b™d_c‹e
);

417 
	`INIT_INI_ARRAY
(&
ah
->
öiBB
[
ATH_INI_POST
],

418 
¨9565_1p0_ba£b™d_po°ambÀ
);

420 
	`INIT_INI_ARRAY
(&
ah
->
öiRadio
[
ATH_INI_CORE
],

421 
¨9565_1p0_ødio_c‹e
);

422 
	`INIT_INI_ARRAY
(&
ah
->
öiRadio
[
ATH_INI_POST
],

423 
¨9565_1p0_ødio_po°ambÀ
);

425 
	`INIT_INI_ARRAY
(&
ah
->
öiSOC
[
ATH_INI_PRE
],

426 
¨9565_1p0_soc_¥ómbÀ
);

427 
	`INIT_INI_ARRAY
(&
ah
->
öiSOC
[
ATH_INI_POST
],

428 
¨9565_1p0_soc_po°ambÀ
);

430 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

431 
¨9565_1p0_Comm⁄_rx_gaö_èbÀ
);

432 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

433 
¨9565_1p0_Modes_lowe°_ob_db_tx_gaö_èbÀ
);

435 
	`INIT_INI_ARRAY
(&
ah
->
öiPcõSîdes
,

436 
¨9565_1p0_pcõphy_˛kªq_dißbÀ_L1
);

437 
	`INIT_INI_ARRAY
(&
ah
->
öiPcõSîdesLowPowî
,

438 
¨9565_1p0_pcõphy_˛kªq_dißbÀ_L1
);

440 
	`INIT_INI_ARRAY
(&
ah
->
öiModesFa°Clock
,

441 
¨9565_1p0_modes_Á°_˛ock
);

442 
	`INIT_INI_ARRAY
(&
ah
->
öiCckfúJ≠™2484
,

443 
¨9565_1p0_ba£b™d_c‹e_txfú_c€ff_j≠™_2484
);

446 
	`INIT_INI_ARRAY
(&
ah
->
öiMac
[
ATH_INI_CORE
],

447 
¨9300_2p2_mac_c‹e
);

448 
	`INIT_INI_ARRAY
(&
ah
->
öiMac
[
ATH_INI_POST
],

449 
¨9300_2p2_mac_po°ambÀ
);

452 
	`INIT_INI_ARRAY
(&
ah
->
öiBB
[
ATH_INI_CORE
],

453 
¨9300_2p2_ba£b™d_c‹e
);

454 
	`INIT_INI_ARRAY
(&
ah
->
öiBB
[
ATH_INI_POST
],

455 
¨9300_2p2_ba£b™d_po°ambÀ
);

458 
	`INIT_INI_ARRAY
(&
ah
->
öiRadio
[
ATH_INI_CORE
],

459 
¨9300_2p2_ødio_c‹e
);

460 
	`INIT_INI_ARRAY
(&
ah
->
öiRadio
[
ATH_INI_POST
],

461 
¨9300_2p2_ødio_po°ambÀ
);

464 
	`INIT_INI_ARRAY
(&
ah
->
öiSOC
[
ATH_INI_PRE
],

465 
¨9300_2p2_soc_¥ómbÀ
);

466 
	`INIT_INI_ARRAY
(&
ah
->
öiSOC
[
ATH_INI_POST
],

467 
¨9300_2p2_soc_po°ambÀ
);

470 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

471 
¨9300Comm⁄_rx_gaö_èbÀ_2p2
);

472 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

473 
¨9300Modes_lowe°_ob_db_tx_gaö_èbÀ_2p2
);

479 
	`INIT_INI_ARRAY
(&
ah
->
öiPcõSîdes
,

480 
¨9300PcõPhy_∂l_⁄_˛kªq_dißbÀ_L1_2p2
);

484 
	`INIT_INI_ARRAY
(&
ah
->
öiPcõSîdesLowPowî
,

485 
¨9300PcõPhy_∂l_⁄_˛kªq_dißbÀ_L1_2p2
);

488 
	`INIT_INI_ARRAY
(&
ah
->
öiModesFa°Clock
,

489 
¨9300Modes_Á°_˛ock_2p2
);

490 
	`INIT_INI_ARRAY
(&
ah
->
öiCckfúJ≠™2484
,

491 
¨9300_2p2_ba£b™d_c‹e_txfú_c€ff_j≠™_2484
);

492 
	`INIT_INI_ARRAY
(&
ah
->
öi_dfs
,

493 
¨9300_2p2_ba£b™d_po°ambÀ_dfs_ch™√l
);

495 
	}
}

497 
	$¨9003_tx_gaö_èbÀ_mode0
(
©h_hw
 *
ah
)

499 i‡(
	`AR_SREV_9330_12
(
ah
))

500 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

501 
¨9331_modes_lowe°_ob_db_tx_gaö_1p2
);

502 i‡(
	`AR_SREV_9330_11
(
ah
))

503 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

504 
¨9331_modes_lowe°_ob_db_tx_gaö_1p1
);

505 i‡(
	`AR_SREV_9340
(
ah
))

506 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

507 
¨9340Modes_lowe°_ob_db_tx_gaö_èbÀ_1p0
);

508 i‡(
	`AR_SREV_9485_11_OR_LATER
(
ah
))

509 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

510 
¨9485_modes_lowe°_ob_db_tx_gaö_1_1
);

511 i‡(
	`AR_SREV_9550
(
ah
))

512 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

513 
¨955x_1p0_modes_x∑_tx_gaö_èbÀ
);

514 i‡(
	`AR_SREV_9531
(
ah
))

515 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

516 
qˇ953x_1p0_modes_x∑_tx_gaö_èbÀ
);

517 i‡(
	`AR_SREV_9580
(
ah
))

518 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

519 
¨9580_1p0_lowe°_ob_db_tx_gaö_èbÀ
);

520 i‡(
	`AR_SREV_9462_21
(
ah
))

521 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

522 
¨9462_2p1_modes_low_ob_db_tx_gaö
);

523 i‡(
	`AR_SREV_9462_20
(
ah
))

524 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

525 
¨9462_2p0_modes_low_ob_db_tx_gaö
);

526 i‡(
	`AR_SREV_9565_11
(
ah
))

527 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

528 
¨9565_1p1_modes_low_ob_db_tx_gaö_èbÀ
);

529 i‡(
	`AR_SREV_9565
(
ah
))

530 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

531 
¨9565_1p0_modes_low_ob_db_tx_gaö_èbÀ
);

533 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

534 
¨9300Modes_lowe°_ob_db_tx_gaö_èbÀ_2p2
);

535 
	}
}

537 
	$¨9003_tx_gaö_èbÀ_mode1
(
©h_hw
 *
ah
)

539 i‡(
	`AR_SREV_9330_12
(
ah
))

540 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

541 
¨9331_modes_high_ob_db_tx_gaö_1p2
);

542 i‡(
	`AR_SREV_9330_11
(
ah
))

543 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

544 
¨9331_modes_high_ob_db_tx_gaö_1p1
);

545 i‡(
	`AR_SREV_9340
(
ah
))

546 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

547 
¨9340Modes_high_ob_db_tx_gaö_èbÀ_1p0
);

548 i‡(
	`AR_SREV_9485_11_OR_LATER
(
ah
))

549 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

550 
¨9485Modes_high_ob_db_tx_gaö_1_1
);

551 i‡(
	`AR_SREV_9580
(
ah
))

552 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

553 
¨9580_1p0_high_ob_db_tx_gaö_èbÀ
);

554 i‡(
	`AR_SREV_9550
(
ah
))

555 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

556 
¨955x_1p0_modes_no_x∑_tx_gaö_èbÀ
);

557 i‡(
	`AR_SREV_9531
(
ah
)) {

558 i‡(
	`AR_SREV_9531_11
(
ah
))

559 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

560 
qˇ953x_1p1_modes_no_x∑_tx_gaö_èbÀ
);

562 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

563 
qˇ953x_1p0_modes_no_x∑_tx_gaö_èbÀ
);

564 } i‡(
	`AR_SREV_9462_21
(
ah
))

565 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

566 
¨9462_2p1_modes_high_ob_db_tx_gaö
);

567 i‡(
	`AR_SREV_9462_20
(
ah
))

568 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

569 
¨9462_2p0_modes_high_ob_db_tx_gaö
);

570 i‡(
	`AR_SREV_9565_11
(
ah
))

571 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

572 
¨9565_1p1_modes_high_ob_db_tx_gaö_èbÀ
);

573 i‡(
	`AR_SREV_9565
(
ah
))

574 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

575 
¨9565_1p0_modes_high_ob_db_tx_gaö_èbÀ
);

577 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

578 
¨9300Modes_high_ob_db_tx_gaö_èbÀ_2p2
);

579 
	}
}

581 
	$¨9003_tx_gaö_èbÀ_mode2
(
©h_hw
 *
ah
)

583 i‡(
	`AR_SREV_9330_12
(
ah
))

584 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

585 
¨9331_modes_low_ob_db_tx_gaö_1p2
);

586 i‡(
	`AR_SREV_9330_11
(
ah
))

587 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

588 
¨9331_modes_low_ob_db_tx_gaö_1p1
);

589 i‡(
	`AR_SREV_9340
(
ah
))

590 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

591 
¨9340Modes_low_ob_db_tx_gaö_èbÀ_1p0
);

592 i‡(
	`AR_SREV_9485_11_OR_LATER
(
ah
))

593 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

594 
¨9485Modes_low_ob_db_tx_gaö_1_1
);

595 i‡(
	`AR_SREV_9580
(
ah
))

596 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

597 
¨9580_1p0_low_ob_db_tx_gaö_èbÀ
);

598 i‡(
	`AR_SREV_9565_11
(
ah
))

599 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

600 
¨9565_1p1_modes_low_ob_db_tx_gaö_èbÀ
);

601 i‡(
	`AR_SREV_9565
(
ah
))

602 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

603 
¨9565_1p0_modes_low_ob_db_tx_gaö_èbÀ
);

605 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

606 
¨9300Modes_low_ob_db_tx_gaö_èbÀ_2p2
);

607 
	}
}

609 
	$¨9003_tx_gaö_èbÀ_mode3
(
©h_hw
 *
ah
)

611 i‡(
	`AR_SREV_9330_12
(
ah
))

612 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

613 
¨9331_modes_high_powî_tx_gaö_1p2
);

614 i‡(
	`AR_SREV_9330_11
(
ah
))

615 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

616 
¨9331_modes_high_powî_tx_gaö_1p1
);

617 i‡(
	`AR_SREV_9340
(
ah
))

618 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

619 
¨9340Modes_high_powî_tx_gaö_èbÀ_1p0
);

620 i‡(
	`AR_SREV_9485_11_OR_LATER
(
ah
))

621 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

622 
¨9485Modes_high_powî_tx_gaö_1_1
);

623 i‡(
	`AR_SREV_9580
(
ah
))

624 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

625 
¨9580_1p0_high_powî_tx_gaö_èbÀ
);

626 i‡(
	`AR_SREV_9565_11
(
ah
))

627 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

628 
¨9565_1p1_modes_high_powî_tx_gaö_èbÀ
);

629 i‡(
	`AR_SREV_9565
(
ah
))

630 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

631 
¨9565_1p0_modes_high_powî_tx_gaö_èbÀ
);

633 i‡(
ah
->
c⁄fig
.
tx_gaö_bufÁlo
)

634 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

635 
¨9300Modes_high_powî_tx_gaö_èbÀ_bufÁlo
);

637 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

638 
¨9300Modes_high_powî_tx_gaö_èbÀ_2p2
);

640 
	}
}

642 
	$¨9003_tx_gaö_èbÀ_mode4
(
©h_hw
 *
ah
)

644 i‡(
	`AR_SREV_9340
(
ah
))

645 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

646 
¨9340Modes_mixed_ob_db_tx_gaö_èbÀ_1p0
);

647 i‡(
	`AR_SREV_9580
(
ah
))

648 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

649 
¨9580_1p0_mixed_ob_db_tx_gaö_èbÀ
);

650 i‡(
	`AR_SREV_9462_21
(
ah
))

651 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

652 
¨9462_2p1_modes_mix_ob_db_tx_gaö
);

653 i‡(
	`AR_SREV_9462_20
(
ah
))

654 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

655 
¨9462_2p0_modes_mix_ob_db_tx_gaö
);

657 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

658 
¨9300Modes_mixed_ob_db_tx_gaö_èbÀ_2p2
);

659 
	}
}

661 
	$¨9003_tx_gaö_èbÀ_mode5
(
©h_hw
 *
ah
)

663 i‡(
	`AR_SREV_9485_11_OR_LATER
(
ah
))

664 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

665 
¨9485Modes_gªí_ob_db_tx_gaö_1_1
);

666 i‡(
	`AR_SREV_9580
(
ah
))

667 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

668 
¨9580_1p0_ty≥5_tx_gaö_èbÀ
);

669 i‡(
	`AR_SREV_9300_22
(
ah
))

670 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

671 
¨9300Modes_ty≥5_tx_gaö_èbÀ_2p2
);

672 
	}
}

674 
	$¨9003_tx_gaö_èbÀ_mode6
(
©h_hw
 *
ah
)

676 i‡(
	`AR_SREV_9340
(
ah
))

677 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

678 
¨9340Modes_low_ob_db_™d_•ur_tx_gaö_èbÀ_1p0
);

679 i‡(
	`AR_SREV_9485_11_OR_LATER
(
ah
))

680 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

681 
¨9485Modes_gªí_•ur_ob_db_tx_gaö_1_1
);

682 i‡(
	`AR_SREV_9580
(
ah
))

683 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

684 
¨9580_1p0_ty≥6_tx_gaö_èbÀ
);

685 
	}
}

687 
	$¨9003_tx_gaö_èbÀ_mode7
(
©h_hw
 *
ah
)

689 i‡(
	`AR_SREV_9340
(
ah
))

690 
	`INIT_INI_ARRAY
(&
ah
->
öiModesTxGaö
,

691 
¨9340_cus227_tx_gaö_èbÀ_1p0
);

692 
	}
}

694 (*
	t©h_txgaö_èb
)(
	t©h_hw
 *
	tah
);

696 
	$¨9003_tx_gaö_èbÀ_≠∂y
(
©h_hw
 *
ah
)

698 c⁄° 
©h_txgaö_èb
 
modes
[] = {

699 
¨9003_tx_gaö_èbÀ_mode0
,

700 
¨9003_tx_gaö_èbÀ_mode1
,

701 
¨9003_tx_gaö_èbÀ_mode2
,

702 
¨9003_tx_gaö_èbÀ_mode3
,

703 
¨9003_tx_gaö_èbÀ_mode4
,

704 
¨9003_tx_gaö_èbÀ_mode5
,

705 
¨9003_tx_gaö_èbÀ_mode6
,

706 
¨9003_tx_gaö_èbÀ_mode7
,

708 
idx
 = 
	`¨9003_hw_gë_tx_gaö_idx
(
ah
);

710 i‡(
idx
 >
	`ARRAY_SIZE
(
modes
))

711 
idx
 = 0;

713 
modes
[
idx
](
ah
);

714 
	}
}

716 
	$¨9003_rx_gaö_èbÀ_mode0
(
©h_hw
 *
ah
)

718 i‡(
	`AR_SREV_9330_12
(
ah
))

719 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

720 
¨9331_comm⁄_rx_gaö_1p2
);

721 i‡(
	`AR_SREV_9330_11
(
ah
))

722 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

723 
¨9331_comm⁄_rx_gaö_1p1
);

724 i‡(
	`AR_SREV_9340
(
ah
))

725 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

726 
¨9340Comm⁄_rx_gaö_èbÀ_1p0
);

727 i‡(
	`AR_SREV_9485_11_OR_LATER
(
ah
))

728 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

729 
¨9485_comm⁄_rx_gaö_1_1
);

730 i‡(
	`AR_SREV_9550
(
ah
)) {

731 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

732 
¨955x_1p0_comm⁄_rx_gaö_èbÀ
);

733 
	`INIT_INI_ARRAY
(&
ah
->
öi_modes_rx_gaö_bounds
,

734 
¨955x_1p0_comm⁄_rx_gaö_bounds
);

735 } i‡(
	`AR_SREV_9531
(
ah
)) {

736 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

737 
qˇ953x_1p0_comm⁄_rx_gaö_èbÀ
);

738 
	`INIT_INI_ARRAY
(&
ah
->
öi_modes_rx_gaö_bounds
,

739 
qˇ953x_1p0_comm⁄_rx_gaö_bounds
);

740 } i‡(
	`AR_SREV_9580
(
ah
))

741 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

742 
¨9580_1p0_rx_gaö_èbÀ
);

743 i‡(
	`AR_SREV_9462_21
(
ah
))

744 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

745 
¨9462_2p1_comm⁄_rx_gaö
);

746 i‡(
	`AR_SREV_9462_20
(
ah
))

747 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

748 
¨9462_2p0_comm⁄_rx_gaö
);

749 i‡(
	`AR_SREV_9565_11
(
ah
))

750 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

751 
¨9565_1p1_Comm⁄_rx_gaö_èbÀ
);

752 i‡(
	`AR_SREV_9565
(
ah
))

753 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

754 
¨9565_1p0_Comm⁄_rx_gaö_èbÀ
);

756 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

757 
¨9300Comm⁄_rx_gaö_èbÀ_2p2
);

758 
	}
}

760 
	$¨9003_rx_gaö_èbÀ_mode1
(
©h_hw
 *
ah
)

762 i‡(
	`AR_SREV_9330_12
(
ah
))

763 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

764 
¨9331_comm⁄_wo_x a_rx_gaö_1p2
);

765 i‡(
	`AR_SREV_9330_11
(
ah
))

766 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

767 
¨9331_comm⁄_wo_x a_rx_gaö_1p1
);

768 i‡(
	`AR_SREV_9340
(
ah
))

769 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

770 
¨9340Comm⁄_wo_x a_rx_gaö_èbÀ_1p0
);

771 i‡(
	`AR_SREV_9485_11_OR_LATER
(
ah
))

772 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

773 
¨9485Comm⁄_wo_x a_rx_gaö_1_1
);

774 i‡(
	`AR_SREV_9462_21
(
ah
))

775 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

776 
¨9462_2p1_comm⁄_wo_x a_rx_gaö
);

777 i‡(
	`AR_SREV_9462_20
(
ah
))

778 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

779 
¨9462_2p0_comm⁄_wo_x a_rx_gaö
);

780 i‡(
	`AR_SREV_9550
(
ah
)) {

781 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

782 
¨955x_1p0_comm⁄_wo_x a_rx_gaö_èbÀ
);

783 
	`INIT_INI_ARRAY
(&
ah
->
öi_modes_rx_gaö_bounds
,

784 
¨955x_1p0_comm⁄_wo_x a_rx_gaö_bounds
);

785 } i‡(
	`AR_SREV_9531
(
ah
)) {

786 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

787 
qˇ953x_1p0_comm⁄_wo_x a_rx_gaö_èbÀ
);

788 
	`INIT_INI_ARRAY
(&
ah
->
öi_modes_rx_gaö_bounds
,

789 
qˇ953x_1p0_comm⁄_wo_x a_rx_gaö_bounds
);

790 } i‡(
	`AR_SREV_9580
(
ah
))

791 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

792 
¨9580_1p0_wo_x a_rx_gaö_èbÀ
);

793 i‡(
	`AR_SREV_9565_11
(
ah
))

794 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

795 
¨9565_1p1_comm⁄_wo_x a_rx_gaö_èbÀ
);

796 i‡(
	`AR_SREV_9565
(
ah
))

797 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

798 
¨9565_1p0_comm⁄_wo_x a_rx_gaö_èbÀ
);

800 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

801 
¨9300Comm⁄_wo_x a_rx_gaö_èbÀ_2p2
);

802 
	}
}

804 
	$¨9003_rx_gaö_èbÀ_mode2
(
©h_hw
 *
ah
)

806 i‡(
	`AR_SREV_9462_21
(
ah
)) {

807 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

808 
¨9462_2p1_comm⁄_mixed_rx_gaö
);

809 
	`INIT_INI_ARRAY
(&
ah
->
öi_modes_rxgaö_bb_c‹e
,

810 
¨9462_2p1_ba£b™d_c‹e_mix_rxgaö
);

811 
	`INIT_INI_ARRAY
(&
ah
->
öi_modes_rxgaö_bb_po°ambÀ
,

812 
¨9462_2p1_ba£b™d_po°ambÀ_mix_rxgaö
);

813 
	`INIT_INI_ARRAY
(&
ah
->
öi_modes_rxgaö_5g_x a
,

814 
¨9462_2p1_ba£b™d_po°ambÀ_5g_x a
);

815 } i‡(
	`AR_SREV_9462_20
(
ah
)) {

816 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

817 
¨9462_2p0_comm⁄_mixed_rx_gaö
);

818 
	`INIT_INI_ARRAY
(&
ah
->
öi_modes_rxgaö_bb_c‹e
,

819 
¨9462_2p0_ba£b™d_c‹e_mix_rxgaö
);

820 
	`INIT_INI_ARRAY
(&
ah
->
öi_modes_rxgaö_bb_po°ambÀ
,

821 
¨9462_2p0_ba£b™d_po°ambÀ_mix_rxgaö
);

822 
	`INIT_INI_ARRAY
(&
ah
->
öi_modes_rxgaö_5g_x a
,

823 
¨9462_2p0_ba£b™d_po°ambÀ_5g_x a
);

825 
	}
}

827 
	$¨9003_rx_gaö_èbÀ_mode3
(
©h_hw
 *
ah
)

829 i‡(
	`AR_SREV_9462_21
(
ah
)) {

830 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

831 
¨9462_2p1_comm⁄_5g_x a_⁄ly_rxgaö
);

832 
	`INIT_INI_ARRAY
(&
ah
->
öi_modes_rxgaö_5g_x a
,

833 
¨9462_2p1_ba£b™d_po°ambÀ_5g_x a
);

834 } i‡(
	`AR_SREV_9462_20
(
ah
)) {

835 
	`INIT_INI_ARRAY
(&
ah
->
öiModesRxGaö
,

836 
¨9462_2p0_comm⁄_5g_x a_⁄ly_rxgaö
);

837 
	`INIT_INI_ARRAY
(&
ah
->
öi_modes_rxgaö_5g_x a
,

838 
¨9462_2p0_ba£b™d_po°ambÀ_5g_x a
);

840 
	}
}

842 
	$¨9003_rx_gaö_èbÀ_≠∂y
(
©h_hw
 *
ah
)

844 
	`¨9003_hw_gë_rx_gaö_idx
(
ah
)) {

847 
	`¨9003_rx_gaö_èbÀ_mode0
(
ah
);

850 
	`¨9003_rx_gaö_èbÀ_mode1
(
ah
);

853 
	`¨9003_rx_gaö_èbÀ_mode2
(
ah
);

856 
	`¨9003_rx_gaö_èbÀ_mode3
(
ah
);

859 
	}
}

862 
	$¨9003_hw_öô_mode_gaö_ªgs
(
©h_hw
 *
ah
)

864 
	`¨9003_tx_gaö_èbÀ_≠∂y
(
ah
);

865 
	`¨9003_rx_gaö_èbÀ_≠∂y
(
ah
);

866 
	}
}

877 
	$¨9003_hw_c⁄figpcùowîßve
(
©h_hw
 *
ah
,

878 
boﬁ
 
powî_off
)

880 
i
;

881 
¨5416IniAºay
 *
¨øy
;

888 i‡(
	`AR_SREV_9462
(
ah
)) {

889 
u32
 
vÆ
 = 
ah
->
c⁄fig
.
a•m_l1_fix
;

890 i‡((
vÆ
 & 0xff000000) == 0x17000000) {

891 
vÆ
 &= 0x00ffffff;

892 
vÆ
 |= 0x27000000;

893 
	`REG_WRITE
(
ah
, 0x570c, 
vÆ
);

898 i‡(!
powî_off
 ) {

900 
	`REG_SET_BIT
(
ah
, 
AR_PCIE_PM_CTRL
, 
AR_PCIE_PM_CTRL_ENA
);

901 
	`REG_WRITE
(
ah
, 
AR_WA
,áh->
WARegVÆ
);

908 
¨øy
 = 
powî_off
 ? &
ah
->
öiPcõSîdes
 :

909 &
ah
->
öiPcõSîdesLowPowî
;

911 
i
 = 0; i < 
¨øy
->
ü_rows
; i++) {

912 
	`REG_WRITE
(
ah
,

913 
	`INI_RA
(
¨øy
, 
i
, 0),

914 
	`INI_RA
(
¨øy
, 
i
, 1));

916 
	}
}

918 
	$¨9003_hw_öô_h™g_checks
(
©h_hw
 *
ah
)

923 
ah
->
c⁄fig
.
hw_h™g_checks
 |
HW_BB_WATCHDOG
;

924 
ah
->
c⁄fig
.
hw_h™g_checks
 |
HW_MAC_HANG
;

929 i‡(
	`AR_SREV_9300_22
(
ah
))

930 
ah
->
c⁄fig
.
hw_h™g_checks
 |
HW_PHYRESTART_CLC_WAR
;

932 i‡(
	`AR_SREV_9330
(
ah
))

933 
ah
->
bb_w©chdog_timeout_ms
 = 85;

935 
ah
->
bb_w©chdog_timeout_ms
 = 25;

936 
	}
}

961 
	#NUM_STATUS_READS
 50

	)

963 
boﬁ
 
	$©h9k_hw_vîify_h™g
(
©h_hw
 *
ah
, 
queue
)

965 
u32
 
dma_dbg_chaö
, 
dma_dbg_com∂ëe
;

966 
u8
 
dcu_chaö_°©e
, 
dcu_com∂ëe_°©e
;

967 
i
;

969 
i
 = 0; i < 
NUM_STATUS_READS
; i++) {

970 i‡(
queue
 < 6)

971 
dma_dbg_chaö
 = 
	`REG_READ
(
ah
, 
AR_DMADBG_4
);

973 
dma_dbg_chaö
 = 
	`REG_READ
(
ah
, 
AR_DMADBG_5
);

975 
dma_dbg_com∂ëe
 = 
	`REG_READ
(
ah
, 
AR_DMADBG_6
);

977 
dcu_chaö_°©e
 = (
dma_dbg_chaö
 >> (5 * 
queue
)) & 0x1f;

978 
dcu_com∂ëe_°©e
 = 
dma_dbg_com∂ëe
 & 0x3;

980 i‡((
dcu_chaö_°©e
 !0x6Ë|| (
dcu_com∂ëe_°©e
 != 0x1))

981  
Ál£
;

984 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
RESET
,

985 "MAC H™g sig«tuª found f‹ queue: %d\n", 
queue
);

987  
åue
;

988 
	}
}

990 
boﬁ
 
	$¨9003_hw_dëe˘_mac_h™g
(
©h_hw
 *
ah
)

992 
u32
 
dma_dbg_4
, 
dma_dbg_5
, 
dma_dbg_6
, 
chk_dbg
;

993 
u8
 
dcu_chaö_°©e
, 
dcu_com∂ëe_°©e
;

994 
boﬁ
 
dcu_waô_‰d⁄e
 = 
Ál£
;

995 
chk_dcu
 = 0;

996 
i
 = 0;

998 
dma_dbg_4
 = 
	`REG_READ
(
ah
, 
AR_DMADBG_4
);

999 
dma_dbg_5
 = 
	`REG_READ
(
ah
, 
AR_DMADBG_5
);

1000 
dma_dbg_6
 = 
	`REG_READ
(
ah
, 
AR_DMADBG_6
);

1002 
dcu_com∂ëe_°©e
 = 
dma_dbg_6
 & 0x3;

1003 i‡(
dcu_com∂ëe_°©e
 != 0x1)

1004 
exô
;

1006 
i
 = 0; i < 
ATH9K_NUM_TX_QUEUES
; i++) {

1007 i‡(
i
 < 6)

1008 
chk_dbg
 = 
dma_dbg_4
;

1010 
chk_dbg
 = 
dma_dbg_5
;

1012 
dcu_chaö_°©e
 = (
chk_dbg
 >> (5 * 
i
)) & 0x1f;

1013 i‡(
dcu_chaö_°©e
 == 0x6) {

1014 
dcu_waô_‰d⁄e
 = 
åue
;

1015 
chk_dcu
 |
	`BIT
(
i
);

1019 i‡((
dcu_com∂ëe_°©e
 =0x1Ë&& 
dcu_waô_‰d⁄e
) {

1020 
	`f‹_óch_£t_bô
(
i
, &
chk_dcu
, 
ATH9K_NUM_TX_QUEUES
) {

1021 i‡(
	`©h9k_hw_vîify_h™g
(
ah
, 
i
))

1022  
åue
;

1025 
exô
:

1026  
Ál£
;

1027 
	}
}

1030 
	$¨9003_hw_©èch_›s
(
©h_hw
 *
ah
)

1032 
©h_hw_¥iv©e_›s
 *
¥iv_›s
 = 
	`©h9k_hw_¥iv©e_›s
(
ah
);

1033 
©h_hw_›s
 *
›s
 = 
	`©h9k_hw_›s
(
ah
);

1035 
	`¨9003_hw_öô_mode_ªgs
(
ah
);

1036 
¥iv_›s
->
öô_mode_gaö_ªgs
 = 
¨9003_hw_öô_mode_gaö_ªgs
;

1037 
¥iv_›s
->
öô_h™g_checks
 = 
¨9003_hw_öô_h™g_checks
;

1038 
¥iv_›s
->
dëe˘_mac_h™g
 = 
¨9003_hw_dëe˘_mac_h™g
;

1040 
›s
->
c⁄fig_pci_powîßve
 = 
¨9003_hw_c⁄figpcùowîßve
;

1042 
	`¨9003_hw_©èch_phy_›s
(
ah
);

1043 
	`¨9003_hw_©èch_ˇlib_›s
(
ah
);

1044 
	`¨9003_hw_©èch_mac_›s
(
ah
);

1045 
	}
}

	@ar9003_mac.c

16 
	~<löux/exp‹t.h
>

17 
	~"hw.h
"

18 
	~"¨9003_mac.h
"

19 
	~"¨9003_mci.h
"

21 
	$¨9003_hw_rx_íabÀ
(
©h_hw
 *
hw
)

23 
	`REG_WRITE
(
hw
, 
AR_CR
, 0);

24 
	}
}

27 
	$¨9003_£t_txdesc
(
©h_hw
 *
ah
, *
ds
, 
©h_tx_öfo
 *
i
)

29 
¨9003_txc
 *
ads
 = 
ds
;

30 
checksum
 = 0;

31 
u32
 
vÆ
, 
˘l12
, 
˘l17
;

32 
u8
 
desc_Àn
;

34 
desc_Àn
 = ((
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9565
(ah)) ? 0x18 : 0x17);

36 
vÆ
 = (
ATHEROS_VENDOR_ID
 << 
AR_DescId_S
) |

37 (1 << 
AR_TxRxDesc_S
) |

38 (1 << 
AR_CålSèt_S
) |

39 (
i
->
qcu
 << 
AR_TxQcuNum_S
Ë| 
desc_Àn
;

41 
checksum
 +
vÆ
;

42 
	`ACCESS_ONCE
(
ads
->
öfo
Ë
vÆ
;

44 
checksum
 +
i
->
lök
;

45 
	`ACCESS_ONCE
(
ads
->
lök
Ë
i
->link;

47 
checksum
 +
i
->
buf_addr
[0];

48 
	`ACCESS_ONCE
(
ads
->
d©a0
Ë
i
->
buf_addr
[0];

49 
checksum
 +
i
->
buf_addr
[1];

50 
	`ACCESS_ONCE
(
ads
->
d©a1
Ë
i
->
buf_addr
[1];

51 
checksum
 +
i
->
buf_addr
[2];

52 
	`ACCESS_ONCE
(
ads
->
d©a2
Ë
i
->
buf_addr
[2];

53 
checksum
 +
i
->
buf_addr
[3];

54 
	`ACCESS_ONCE
(
ads
->
d©a3
Ë
i
->
buf_addr
[3];

56 
checksum
 +(
vÆ
 = (
i
->
buf_Àn
[0] << 
AR_BufLí_S
Ë& 
AR_BufLí
);

57 
	`ACCESS_ONCE
(
ads
->
˘l3
Ë
vÆ
;

58 
checksum
 +(
vÆ
 = (
i
->
buf_Àn
[1] << 
AR_BufLí_S
Ë& 
AR_BufLí
);

59 
	`ACCESS_ONCE
(
ads
->
˘l5
Ë
vÆ
;

60 
checksum
 +(
vÆ
 = (
i
->
buf_Àn
[2] << 
AR_BufLí_S
Ë& 
AR_BufLí
);

61 
	`ACCESS_ONCE
(
ads
->
˘l7
Ë
vÆ
;

62 
checksum
 +(
vÆ
 = (
i
->
buf_Àn
[3] << 
AR_BufLí_S
Ë& 
AR_BufLí
);

63 
	`ACCESS_ONCE
(
ads
->
˘l9
Ë
vÆ
;

65 
checksum
 = (
u16
) (((checksum & 0xffff) + (checksum >> 16)) & 0xffff);

66 
	`ACCESS_ONCE
(
ads
->
˘l10
Ë
checksum
;

68 i‡(
i
->
is_fú°
 || i->
is_œ°
) {

69 
	`ACCESS_ONCE
(
ads
->
˘l13
Ë
	`£t11nTrõs
(
i
->
øãs
, 0)

70 | 
	`£t11nTrõs
(
i
->
øãs
, 1)

71 | 
	`£t11nTrõs
(
i
->
øãs
, 2)

72 | 
	`£t11nTrõs
(
i
->
øãs
, 3)

73 | (
i
->
dur_upd©e
 ? 
AR_DurUpd©eE«
 : 0)

74 | 
	`SM
(0, 
AR_Bur°Dur
);

76 
	`ACCESS_ONCE
(
ads
->
˘l14
Ë
	`£t11nR©e
(
i
->
øãs
, 0)

77 | 
	`£t11nR©e
(
i
->
øãs
, 1)

78 | 
	`£t11nR©e
(
i
->
øãs
, 2)

79 | 
	`£t11nR©e
(
i
->
øãs
, 3);

81 
	`ACCESS_ONCE
(
ads
->
˘l13
) = 0;

82 
	`ACCESS_ONCE
(
ads
->
˘l14
) = 0;

85 
ads
->
˘l20
 = 0;

86 
ads
->
˘l21
 = 0;

87 
ads
->
˘l22
 = 0;

88 
ads
->
˘l23
 = 0;

90 
˘l17
 = 
	`SM
(
i
->
keyty≥
, 
AR_En¸Ty≥
);

91 i‡(!
i
->
is_fú°
) {

92 
	`ACCESS_ONCE
(
ads
->
˘l11
) = 0;

93 
	`ACCESS_ONCE
(
ads
->
˘l12
Ë
i
->
is_œ°
 ? 0 : 
AR_TxM‹e
;

94 
	`ACCESS_ONCE
(
ads
->
˘l15
) = 0;

95 
	`ACCESS_ONCE
(
ads
->
˘l16
) = 0;

96 
	`ACCESS_ONCE
(
ads
->
˘l17
) = ctl17;

97 
	`ACCESS_ONCE
(
ads
->
˘l18
) = 0;

98 
	`ACCESS_ONCE
(
ads
->
˘l19
) = 0;

102 
	`ACCESS_ONCE
(
ads
->
˘l11
Ë(
i
->
pkt_Àn
 & 
AR_FømeLí
)

103 | (
i
->
Êags
 & 
ATH9K_TXDESC_VMF
 ? 
AR_VútM‹eFøg
 : 0)

104 | 
	`SM
(
i
->
txpowî
, 
AR_XmôPowî
)

105 | (
i
->
Êags
 & 
ATH9K_TXDESC_VEOL
 ? 
AR_VEOL
 : 0)

106 | (
i
->
keyix
 !
ATH9K_TXKEYIX_INVALID
 ? 
AR_De°IdxVÆid
 : 0)

107 | (
i
->
Êags
 & 
ATH9K_TXDESC_LOWRXCHAIN
 ? 
AR_LowRxChaö
 : 0)

108 | (
i
->
Êags
 & 
ATH9K_TXDESC_CLRDMASK
 ? 
AR_CÃDe°Mask
 : 0)

109 | (
i
->
Êags
 & 
ATH9K_TXDESC_RTSENA
 ? 
AR_RTSE«bÀ
 :

110 (
i
->
Êags
 & 
ATH9K_TXDESC_CTSENA
 ? 
AR_CTSE«bÀ
 : 0));

112 
˘l12
 = (
i
->
keyix
 !
ATH9K_TXKEYIX_INVALID
 ?

113 
	`SM
(
i
->
keyix
, 
AR_De°Idx
) : 0)

114 | 
	`SM
(
i
->
ty≥
, 
AR_FømeTy≥
)

115 | (
i
->
Êags
 & 
ATH9K_TXDESC_NOACK
 ? 
AR_NoAck
 : 0)

116 | (
i
->
Êags
 & 
ATH9K_TXDESC_EXT_ONLY
 ? 
AR_ExtO∆y
 : 0)

117 | (
i
->
Êags
 & 
ATH9K_TXDESC_EXT_AND_CTL
 ? 
AR_ExtAndCé
 : 0);

119 
˘l17
 |(
i
->
Êags
 & 
ATH9K_TXDESC_LDPC
 ? 
AR_LDPC
 : 0);

120 
i
->
aggr
) {

121 
AGGR_BUF_FIRST
:

122 
˘l17
 |
	`SM
(
i
->
aggr_Àn
, 
AR_AggrLí
);

124 
AGGR_BUF_MIDDLE
:

125 
˘l12
 |
AR_IsAggr
 | 
AR_M‹eAggr
;

126 
˘l17
 |
	`SM
(
i
->
ndñim
, 
AR_PadDñim
);

128 
AGGR_BUF_LAST
:

129 
˘l12
 |
AR_IsAggr
;

131 
AGGR_BUF_NONE
:

135 
vÆ
 = (
i
->
Êags
 & 
ATH9K_TXDESC_PAPRD
Ë>> 
ATH9K_TXDESC_PAPRD_S
;

136 
˘l12
 |
	`SM
(
vÆ
, 
AR_PAPRDChaöMask
);

138 
	`ACCESS_ONCE
(
ads
->
˘l12
) = ctl12;

139 
	`ACCESS_ONCE
(
ads
->
˘l17
) = ctl17;

141 
	`ACCESS_ONCE
(
ads
->
˘l15
Ë
	`£t11nPktDurRTSCTS
(
i
->
øãs
, 0)

142 | 
	`£t11nPktDurRTSCTS
(
i
->
øãs
, 1);

144 
	`ACCESS_ONCE
(
ads
->
˘l16
Ë
	`£t11nPktDurRTSCTS
(
i
->
øãs
, 2)

145 | 
	`£t11nPktDurRTSCTS
(
i
->
øãs
, 3);

147 
	`ACCESS_ONCE
(
ads
->
˘l18
Ë
	`£t11nR©eFœgs
(
i
->
øãs
, 0)

148 | 
	`£t11nR©eFœgs
(
i
->
øãs
, 1)

149 | 
	`£t11nR©eFœgs
(
i
->
øãs
, 2)

150 | 
	`£t11nR©eFœgs
(
i
->
øãs
, 3)

151 | 
	`SM
(
i
->
πs˘s_øã
, 
AR_RTSCTSR©e
);

153 
	`ACCESS_ONCE
(
ads
->
˘l19
Ë
AR_NŸ_Soundög
;

154 
	}
}

156 
u16
 
	$¨9003_ˇlc_±r_chksum
(
¨9003_txc
 *
ads
)

158 
checksum
;

160 
checksum
 = 
ads
->
öfo
 +áds->
lök


161 + 
ads
->
d©a0
 +áds->
˘l3


162 + 
ads
->
d©a1
 +áds->
˘l5


163 + 
ads
->
d©a2
 +áds->
˘l7


164 + 
ads
->
d©a3
 +áds->
˘l9
;

166  ((
checksum
 & 0xffffË+ (checksum >> 16)Ë& 
AR_TxPåChkSum
;

167 
	}
}

169 
	$¨9003_hw_£t_desc_lök
(*
ds
, 
u32
 
ds_lök
)

171 
¨9003_txc
 *
ads
 = 
ds
;

173 
ads
->
lök
 = 
ds_lök
;

174 
ads
->
˘l10
 &~
AR_TxPåChkSum
;

175 
ads
->
˘l10
 |
	`¨9003_ˇlc_±r_chksum
(ads);

176 
	}
}

178 
boﬁ
 
	$¨9003_hw_gë_i§
(
©h_hw
 *
ah
, 
©h9k_öt
 *
masked
,

179 
u32
 *
sync_ˇu£_p
)

181 
u32
 
i§
 = 0;

182 
u32
 
mask2
 = 0;

183 
©h9k_hw_ˇ∑bûôõs
 *
pC≠
 = &
ah
->
ˇps
;

184 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

185 
u32
 
sync_ˇu£
 = 0, 
async_ˇu£
, 
async_mask
 = 
AR_INTR_MAC_IRQ
;

186 
boﬁ
 
Áèl_öt
;

188 i‡(
	`©h9k_hw_mci_is_íabÀd
(
ah
))

189 
async_mask
 |
AR_INTR_ASYNC_MASK_MCI
;

191 
async_ˇu£
 = 
	`REG_READ
(
ah
, 
AR_INTR_ASYNC_CAUSE
);

193 i‡(
async_ˇu£
 & 
async_mask
) {

194 i‡((
	`REG_READ
(
ah
, 
AR_RTC_STATUS
Ë& 
AR_RTC_STATUS_M
)

195 =
AR_RTC_STATUS_ON
)

196 
i§
 = 
	`REG_READ
(
ah
, 
AR_ISR
);

200 
sync_ˇu£
 = 
	`REG_READ
(
ah
, 
AR_INTR_SYNC_CAUSE
Ë& 
AR_INTR_SYNC_DEFAULT
;

202 *
masked
 = 0;

204 i‡(!
i§
 && !
sync_ˇu£
 && !
async_ˇu£
)

205  
Ál£
;

207 i‡(
i§
) {

208 i‡(
i§
 & 
AR_ISR_BCNMISC
) {

209 
u32
 
i§2
;

210 
i§2
 = 
	`REG_READ
(
ah
, 
AR_ISR_S2
);

212 
mask2
 |((
i§2
 & 
AR_ISR_S2_TIM
) >>

213 
MAP_ISR_S2_TIM
);

214 
mask2
 |((
i§2
 & 
AR_ISR_S2_DTIM
) >>

215 
MAP_ISR_S2_DTIM
);

216 
mask2
 |((
i§2
 & 
AR_ISR_S2_DTIMSYNC
) >>

217 
MAP_ISR_S2_DTIMSYNC
);

218 
mask2
 |((
i§2
 & 
AR_ISR_S2_CABEND
) >>

219 
MAP_ISR_S2_CABEND
);

220 
mask2
 |((
i§2
 & 
AR_ISR_S2_GTT
) <<

221 
MAP_ISR_S2_GTT
);

222 
mask2
 |((
i§2
 & 
AR_ISR_S2_CST
) <<

223 
MAP_ISR_S2_CST
);

224 
mask2
 |((
i§2
 & 
AR_ISR_S2_TSFOOR
) >>

225 
MAP_ISR_S2_TSFOOR
);

226 
mask2
 |((
i§2
 & 
AR_ISR_S2_BB_WATCHDOG
) >>

227 
MAP_ISR_S2_BB_WATCHDOG
);

229 i‡(!(
pC≠
->
hw_ˇps
 & 
ATH9K_HW_CAP_RAC_SUPPORTED
)) {

230 
	`REG_WRITE
(
ah
, 
AR_ISR_S2
, 
i§2
);

231 
i§
 &~
AR_ISR_BCNMISC
;

235 i‡((
pC≠
->
hw_ˇps
 & 
ATH9K_HW_CAP_RAC_SUPPORTED
))

236 
i§
 = 
	`REG_READ
(
ah
, 
AR_ISR_RAC
);

238 i‡(
i§
 == 0xffffffff) {

239 *
masked
 = 0;

240  
Ál£
;

243 *
masked
 = 
i§
 & 
ATH9K_INT_COMMON
;

245 i‡(
ah
->
c⁄fig
.
rx_öå_môig©i⁄
)

246 i‡(
i§
 & (
AR_ISR_RXMINTR
 | 
AR_ISR_RXINTM
))

247 *
masked
 |
ATH9K_INT_RXLP
;

249 i‡(
ah
->
c⁄fig
.
tx_öå_môig©i⁄
)

250 i‡(
i§
 & (
AR_ISR_TXMINTR
 | 
AR_ISR_TXINTM
))

251 *
masked
 |
ATH9K_INT_TX
;

253 i‡(
i§
 & (
AR_ISR_LP_RXOK
 | 
AR_ISR_RXERR
))

254 *
masked
 |
ATH9K_INT_RXLP
;

256 i‡(
i§
 & 
AR_ISR_HP_RXOK
)

257 *
masked
 |
ATH9K_INT_RXHP
;

259 i‡(
i§
 & (
AR_ISR_TXOK
 | 
AR_ISR_TXERR
 | 
AR_ISR_TXEOL
)) {

260 *
masked
 |
ATH9K_INT_TX
;

262 i‡(!(
pC≠
->
hw_ˇps
 & 
ATH9K_HW_CAP_RAC_SUPPORTED
)) {

263 
u32
 
s0
, 
s1
;

264 
s0
 = 
	`REG_READ
(
ah
, 
AR_ISR_S0
);

265 
	`REG_WRITE
(
ah
, 
AR_ISR_S0
, 
s0
);

266 
s1
 = 
	`REG_READ
(
ah
, 
AR_ISR_S1
);

267 
	`REG_WRITE
(
ah
, 
AR_ISR_S1
, 
s1
);

269 
i§
 &~(
AR_ISR_TXOK
 | 
AR_ISR_TXERR
 |

270 
AR_ISR_TXEOL
);

274 i‡(
i§
 & 
AR_ISR_GENTMR
) {

275 
u32
 
s5
;

277 i‡(
pC≠
->
hw_ˇps
 & 
ATH9K_HW_CAP_RAC_SUPPORTED
)

278 
s5
 = 
	`REG_READ
(
ah
, 
AR_ISR_S5_S
);

280 
s5
 = 
	`REG_READ
(
ah
, 
AR_ISR_S5
);

282 
ah
->
öå_gí_timî_åiggî
 =

283 
	`MS
(
s5
, 
AR_ISR_S5_GENTIMER_TRIG
);

285 
ah
->
öå_gí_timî_thªsh
 =

286 
	`MS
(
s5
, 
AR_ISR_S5_GENTIMER_THRESH
);

288 i‡(
ah
->
öå_gí_timî_åiggî
)

289 *
masked
 |
ATH9K_INT_GENTIMER
;

291 i‡(!(
pC≠
->
hw_ˇps
 & 
ATH9K_HW_CAP_RAC_SUPPORTED
)) {

292 
	`REG_WRITE
(
ah
, 
AR_ISR_S5
, 
s5
);

293 
i§
 &~
AR_ISR_GENTMR
;

298 *
masked
 |
mask2
;

300 i‡(!(
pC≠
->
hw_ˇps
 & 
ATH9K_HW_CAP_RAC_SUPPORTED
)) {

301 
	`REG_WRITE
(
ah
, 
AR_ISR
, 
i§
);

303 (Ë
	`REG_READ
(
ah
, 
AR_ISR
);

306 i‡(*
masked
 & 
ATH9K_INT_BB_WATCHDOG
)

307 
	`¨9003_hw_bb_w©chdog_ªad
(
ah
);

310 i‡(
async_ˇu£
 & 
AR_INTR_ASYNC_MASK_MCI
)

311 
	`¨9003_mci_gë_i§
(
ah
, 
masked
);

313 i‡(
sync_ˇu£
) {

314 i‡(
sync_ˇu£_p
)

315 *
sync_ˇu£_p
 = 
sync_ˇu£
;

316 
Áèl_öt
 =

317 (
sync_ˇu£
 &

318 (
AR_INTR_SYNC_HOST1_FATAL
 | 
AR_INTR_SYNC_HOST1_PERR
))

319 ? 
åue
 : 
Ál£
;

321 i‡(
Áèl_öt
) {

322 i‡(
sync_ˇu£
 & 
AR_INTR_SYNC_HOST1_FATAL
) {

323 
	`©h_dbg
(
comm⁄
, 
ANY
,

326 i‡(
sync_ˇu£
 & 
AR_INTR_SYNC_HOST1_PERR
) {

327 
	`©h_dbg
(
comm⁄
, 
ANY
,

330 *
masked
 |
ATH9K_INT_FATAL
;

333 i‡(
sync_ˇu£
 & 
AR_INTR_SYNC_RADM_CPL_TIMEOUT
) {

334 
	`REG_WRITE
(
ah
, 
AR_RC
, 
AR_RC_HOSTIF
);

335 
	`REG_WRITE
(
ah
, 
AR_RC
, 0);

336 *
masked
 |
ATH9K_INT_FATAL
;

339 i‡(
sync_ˇu£
 & 
AR_INTR_SYNC_LOCAL_TIMEOUT
)

340 
	`©h_dbg
(
comm⁄
, 
INTERRUPT
,

343 
	`REG_WRITE
(
ah
, 
AR_INTR_SYNC_CAUSE_CLR
, 
sync_ˇu£
);

344 (Ë
	`REG_READ
(
ah
, 
AR_INTR_SYNC_CAUSE_CLR
);

347  
åue
;

348 
	}
}

350 
	$¨9003_hw_¥oc_txdesc
(
©h_hw
 *
ah
, *
ds
,

351 
©h_tx_°©us
 *
ts
)

353 
¨9003_txs
 *
ads
;

354 
u32
 
°©us
;

356 
ads
 = &
ah
->
ts_rög
[ah->
ts_èû
];

358 
°©us
 = 
	`ACCESS_ONCE
(
ads
->
°©us8
);

359 i‡((
°©us
 & 
AR_TxD⁄e
) == 0)

360  -
EINPROGRESS
;

362 
ah
->
ts_èû
 = (ah->ts_èû + 1Ë%áh->
ts_size
;

364 i‡((
	`MS
(
ads
->
ds_öfo
, 
AR_DescId
Ë!
ATHEROS_VENDOR_ID
) ||

365 (
	`MS
(
ads
->
ds_öfo
, 
AR_TxRxDesc
) != 1)) {

366 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
XMIT
,

367 "Tx Des¸ùt‹Éº‹ %x\n", 
ads
->
ds_öfo
);

368 
	`mem£t
(
ads
, 0, (*ads));

369  -
EIO
;

372 
ts
->
ts_øãödex
 = 
	`MS
(
°©us
, 
AR_FöÆTxIdx
);

373 
ts
->
ts_£qnum
 = 
	`MS
(
°©us
, 
AR_SeqNum
);

374 
ts
->
tid
 = 
	`MS
(
°©us
, 
AR_TxTid
);

376 
ts
->
qid
 = 
	`MS
(
ads
->
ds_öfo
, 
AR_TxQcuNum
);

377 
ts
->
desc_id
 = 
	`MS
(
ads
->
°©us1
, 
AR_TxDescId
);

378 
ts
->
ts_t°amp
 = 
ads
->
°©us4
;

379 
ts
->
ts_°©us
 = 0;

380 
ts
->
ts_Êags
 = 0;

382 i‡(
°©us
 & 
AR_TxOpEx˚eded
)

383 
ts
->
ts_°©us
 |
ATH9K_TXERR_XTXOP
;

384 
°©us
 = 
	`ACCESS_ONCE
(
ads
->
°©us2
);

385 
ts
->
ts_rssi_˘l0
 = 
	`MS
(
°©us
, 
AR_TxRSSIA¡00
);

386 
ts
->
ts_rssi_˘l1
 = 
	`MS
(
°©us
, 
AR_TxRSSIA¡01
);

387 
ts
->
ts_rssi_˘l2
 = 
	`MS
(
°©us
, 
AR_TxRSSIA¡02
);

388 i‡(
°©us
 & 
AR_TxBaSètus
) {

389 
ts
->
ts_Êags
 |
ATH9K_TX_BA
;

390 
ts
->
ba_low
 = 
ads
->
°©us5
;

391 
ts
->
ba_high
 = 
ads
->
°©us6
;

394 
°©us
 = 
	`ACCESS_ONCE
(
ads
->
°©us3
);

395 i‡(
°©us
 & 
AR_Ex˚ssiveRërõs
)

396 
ts
->
ts_°©us
 |
ATH9K_TXERR_XRETRY
;

397 i‡(
°©us
 & 
AR_Fûãªd
)

398 
ts
->
ts_°©us
 |
ATH9K_TXERR_FILT
;

399 i‡(
°©us
 & 
AR_FIFOUndîrun
) {

400 
ts
->
ts_°©us
 |
ATH9K_TXERR_FIFO
;

401 
	`©h9k_hw_upd©ëxåigÀvñ
(
ah
, 
åue
);

403 i‡(
°©us
 & 
AR_TxTimîExpúed
)

404 
ts
->
ts_°©us
 |
ATH9K_TXERR_TIMER_EXPIRED
;

405 i‡(
°©us
 & 
AR_DescCfgEº
)

406 
ts
->
ts_Êags
 |
ATH9K_TX_DESC_CFG_ERR
;

407 i‡(
°©us
 & 
AR_TxD©aUndîrun
) {

408 
ts
->
ts_Êags
 |
ATH9K_TX_DATA_UNDERRUN
;

409 
	`©h9k_hw_upd©ëxåigÀvñ
(
ah
, 
åue
);

411 i‡(
°©us
 & 
AR_TxDñimUndîrun
) {

412 
ts
->
ts_Êags
 |
ATH9K_TX_DELIM_UNDERRUN
;

413 
	`©h9k_hw_upd©ëxåigÀvñ
(
ah
, 
åue
);

415 
ts
->
ts_sh‹åëry
 = 
	`MS
(
°©us
, 
AR_RTSFaûC¡
);

416 
ts
->
ts_l⁄gªåy
 = 
	`MS
(
°©us
, 
AR_D©aFaûC¡
);

417 
ts
->
ts_vútcﬁ
 = 
	`MS
(
°©us
, 
AR_VútRëryC¡
);

419 
°©us
 = 
	`ACCESS_ONCE
(
ads
->
°©us7
);

420 
ts
->
ts_rssi
 = 
	`MS
(
°©us
, 
AR_TxRSSIComböed
);

421 
ts
->
ts_rssi_ext0
 = 
	`MS
(
°©us
, 
AR_TxRSSIA¡10
);

422 
ts
->
ts_rssi_ext1
 = 
	`MS
(
°©us
, 
AR_TxRSSIA¡11
);

423 
ts
->
ts_rssi_ext2
 = 
	`MS
(
°©us
, 
AR_TxRSSIA¡12
);

425 
	`mem£t
(
ads
, 0, (*ads));

428 
	}
}

430 
	$¨9003_hw_©èch_mac_›s
(
©h_hw
 *
hw
)

432 
©h_hw_›s
 *
›s
 = 
	`©h9k_hw_›s
(
hw
);

434 
›s
->
rx_íabÀ
 = 
¨9003_hw_rx_íabÀ
;

435 
›s
->
£t_desc_lök
 = 
¨9003_hw_£t_desc_lök
;

436 
›s
->
gë_i§
 = 
¨9003_hw_gë_i§
;

437 
›s
->
£t_txdesc
 = 
¨9003_£t_txdesc
;

438 
›s
->
¥oc_txdesc
 = 
¨9003_hw_¥oc_txdesc
;

439 
	}
}

441 
	$©h9k_hw_£t_rx_bufsize
(
©h_hw
 *
ah
, 
u16
 
buf_size
)

443 
	`REG_WRITE
(
ah
, 
AR_DATABUF_SIZE
, 
buf_size
 & 
AR_DATABUF_SIZE_MASK
);

444 
	}
}

445 
EXPORT_SYMBOL
(
©h9k_hw_£t_rx_bufsize
);

447 
	$©h9k_hw_addrxbuf_edma
(
©h_hw
 *
ah
, 
u32
 
rxdp
,

448 
©h9k_rx_qty≥
 
qty≥
)

450 i‡(
qty≥
 =
ATH9K_RX_QUEUE_HP
)

451 
	`REG_WRITE
(
ah
, 
AR_HP_RXDP
, 
rxdp
);

453 
	`REG_WRITE
(
ah
, 
AR_LP_RXDP
, 
rxdp
);

454 
	}
}

455 
EXPORT_SYMBOL
(
©h9k_hw_addrxbuf_edma
);

457 
	$©h9k_hw_¥o˚ss_rxdesc_edma
(
©h_hw
 *
ah
, 
©h_rx_°©us
 *
rxs
,

458 *
buf_addr
)

460 
¨9003_rxs
 *
rx•
 = (¨9003_rx†*Ë
buf_addr
;

461 
phyîr
;

463 i‡((
rx•
->
°©us11
 & 
AR_RxD⁄e
) == 0)

464  -
EINPROGRESS
;

466 i‡(
	`MS
(
rx•
->
ds_öfo
, 
AR_DescId
) != 0x168c)

467  -
EINVAL
;

469 i‡((
rx•
->
ds_öfo
 & (
AR_TxRxDesc
 | 
AR_CålSèt
)) != 0)

470  -
EINPROGRESS
;

472 
rxs
->
rs_°©us
 = 0;

473 
rxs
->
rs_Êags
 = 0;

474 
rxs
->
Êag
 = 0;

476 
rxs
->
rs_d©Æí
 = 
rx•
->
°©us2
 & 
AR_D©aLí
;

477 
rxs
->
rs_t°amp
 = 
rx•
->
°©us3
;

480 
rxs
->
rs_rssi
 = 
	`MS
(
rx•
->
°©us5
, 
AR_RxRSSIComböed
);

481 
rxs
->
rs_rssi_˘l
[0] = 
	`MS
(
rx•
->
°©us1
, 
AR_RxRSSIA¡00
);

482 
rxs
->
rs_rssi_˘l
[1] = 
	`MS
(
rx•
->
°©us1
, 
AR_RxRSSIA¡01
);

483 
rxs
->
rs_rssi_˘l
[2] = 
	`MS
(
rx•
->
°©us1
, 
AR_RxRSSIA¡02
);

484 
rxs
->
rs_rssi_ext
[0] = 
	`MS
(
rx•
->
°©us5
, 
AR_RxRSSIA¡10
);

485 
rxs
->
rs_rssi_ext
[1] = 
	`MS
(
rx•
->
°©us5
, 
AR_RxRSSIA¡11
);

486 
rxs
->
rs_rssi_ext
[2] = 
	`MS
(
rx•
->
°©us5
, 
AR_RxRSSIA¡12
);

488 i‡(
rx•
->
°©us11
 & 
AR_RxKeyIdxVÆid
)

489 
rxs
->
rs_keyix
 = 
	`MS
(
rx•
->
°©us11
, 
AR_KeyIdx
);

491 
rxs
->
rs_keyix
 = 
ATH9K_RXKEYIX_INVALID
;

493 
rxs
->
rs_øã
 = 
	`MS
(
rx•
->
°©us1
, 
AR_RxR©e
);

494 
rxs
->
rs_m‹e
 = (
rx•
->
°©us2
 & 
AR_RxM‹e
) ? 1 : 0;

496 
rxs
->
rs_fú°aggr
 = (
rx•
->
°©us11
 & 
AR_RxFú°Aggr
) ? 1 : 0;

497 
rxs
->
rs_ißggr
 = (
rx•
->
°©us11
 & 
AR_RxAggr
) ? 1 : 0;

498 
rxs
->
rs_m‹óggr
 = (
rx•
->
°©us11
 & 
AR_RxM‹eAggr
) ? 1 : 0;

499 
rxs
->
rs_™ã¬a
 = (
	`MS
(
rx•
->
°©us4
, 
AR_RxA¡í«
) & 0x7);

500 
rxs
->
Êag
 |(
rx•
->
°©us4
 & 
AR_GI
Ë? 
RX_FLAG_SHORT_GI
 : 0;

501 
rxs
->
Êag
 |(
rx•
->
°©us4
 & 
AR_2040
Ë? 
RX_FLAG_40MHZ
 : 0;

503 
rxs
->
evm0
 = 
rx•
->
°©us6
;

504 
rxs
->
evm1
 = 
rx•
->
°©us7
;

505 
rxs
->
evm2
 = 
rx•
->
°©us8
;

506 
rxs
->
evm3
 = 
rx•
->
°©us9
;

507 
rxs
->
evm4
 = (
rx•
->
°©us10
 & 0xffff);

509 i‡(
rx•
->
°©us11
 & 
AR_PªDñimCRCEº
)

510 
rxs
->
rs_Êags
 |
ATH9K_RX_DELIM_CRC_PRE
;

512 i‡(
rx•
->
°©us11
 & 
AR_Po°DñimCRCEº
)

513 
rxs
->
rs_Êags
 |
ATH9K_RX_DELIM_CRC_POST
;

515 i‡(
rx•
->
°©us11
 & 
AR_De¸y±BusyEº
)

516 
rxs
->
rs_Êags
 |
ATH9K_RX_DECRYPT_BUSY
;

518 i‡((
rx•
->
°©us11
 & 
AR_RxFømeOK
) == 0) {

527 i‡(
rx•
->
°©us11
 & 
AR_CRCEº
)

528 
rxs
->
rs_°©us
 |
ATH9K_RXERR_CRC
;

529 i‡(
rx•
->
°©us11
 & 
AR_De¸y±CRCEº
)

530 
rxs
->
rs_°©us
 |
ATH9K_RXERR_DECRYPT
;

531 i‡(
rx•
->
°©us11
 & 
AR_Mich´lEº
)

532 
rxs
->
rs_°©us
 |
ATH9K_RXERR_MIC
;

533 i‡(
rx•
->
°©us11
 & 
AR_PHYEº
) {

534 
phyîr
 = 
	`MS
(
rx•
->
°©us11
, 
AR_PHYEºCode
);

548 i‡((
phyîr
 =
ATH9K_PHYERR_OFDM_RESTART
) &&

549 (
rx•
->
°©us11
 & 
AR_Po°DñimCRCEº
)) {

550 
rxs
->
rs_phyîr
 = 0;

552 
rxs
->
rs_°©us
 |
ATH9K_RXERR_PHY
;

553 
rxs
->
rs_phyîr
 = 
phyîr
;

558 i‡(
rx•
->
°©us11
 & 
AR_KeyMiss
)

559 
rxs
->
rs_°©us
 |
ATH9K_RXERR_KEYMISS
;

562 
	}
}

563 
EXPORT_SYMBOL
(
©h9k_hw_¥o˚ss_rxdesc_edma
);

565 
	$©h9k_hw_ª£t_tx°©us_rög
(
©h_hw
 *
ah
)

567 
ah
->
ts_èû
 = 0;

569 
	`mem£t
((*Ë
ah
->
ts_rög
, 0,

570 
ah
->
ts_size
 * (
¨9003_txs
));

572 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
XMIT
,

574 
ah
->
ts_∑ddr_°¨t
,áh->
ts_∑ddr_íd
,

575 
ah
->
ts_rög
,áh->
ts_size
);

577 
	`REG_WRITE
(
ah
, 
AR_Q_STATUS_RING_START
,áh->
ts_∑ddr_°¨t
);

578 
	`REG_WRITE
(
ah
, 
AR_Q_STATUS_RING_END
,áh->
ts_∑ddr_íd
);

579 
	}
}

581 
	$©h9k_hw_£tup_°©u§ög
(
©h_hw
 *
ah
, *
ts_°¨t
,

582 
u32
 
ts_∑ddr_°¨t
,

583 
u16
 
size
)

586 
ah
->
ts_∑ddr_°¨t
 =Ås_paddr_start;

587 
ah
->
ts_∑ddr_íd
 = 
ts_∑ddr_°¨t
 + (
size
 * (
¨9003_txs
));

588 
ah
->
ts_size
 = 
size
;

589 
ah
->
ts_rög
 = (
¨9003_txs
 *Ë
ts_°¨t
;

591 
	`©h9k_hw_ª£t_tx°©us_rög
(
ah
);

592 
	}
}

593 
EXPORT_SYMBOL
(
©h9k_hw_£tup_°©u§ög
);

	@ar9003_mac.h

17 #i‚de‡
AR9003_MAC_H


18 
	#AR9003_MAC_H


	)

20 
	#AR_DescId
 0xffff0000

	)

21 
	#AR_DescId_S
 16

	)

22 
	#AR_CålSèt
 0x00004000

	)

23 
	#AR_CålSèt_S
 14

	)

24 
	#AR_TxRxDesc
 0x00008000

	)

25 
	#AR_TxRxDesc_S
 15

	)

26 
	#AR_TxQcuNum
 0x00000f00

	)

27 
	#AR_TxQcuNum_S
 8

	)

29 
	#AR_BufLí
 0x0fff0000

	)

30 
	#AR_BufLí_S
 16

	)

32 
	#AR_TxDescId
 0xffff0000

	)

33 
	#AR_TxDescId_S
 16

	)

34 
	#AR_TxPåChkSum
 0x0000ffff

	)

36 
	#AR_LowRxChaö
 0x00004000

	)

38 
	#AR_NŸ_Soundög
 0x20000000

	)

41 
	#AR_PAPRDChaöMask
 0x00000e00

	)

42 
	#AR_PAPRDChaöMask_S
 9

	)

44 
	#MAP_ISR_S2_CST
 6

	)

45 
	#MAP_ISR_S2_GTT
 6

	)

46 
	#MAP_ISR_S2_TIM
 3

	)

47 
	#MAP_ISR_S2_CABEND
 0

	)

48 
	#MAP_ISR_S2_DTIMSYNC
 7

	)

49 
	#MAP_ISR_S2_DTIM
 7

	)

50 
	#MAP_ISR_S2_TSFOOR
 4

	)

51 
	#MAP_ISR_S2_BB_WATCHDOG
 6

	)

53 
	#AR9003TXC_CONST
(
_ds
Ë((c⁄° 
¨9003_txc
 *Ë_ds)

	)

55 
	s¨9003_rxs
 {

56 
u32
 
	mds_öfo
;

57 
u32
 
	m°©us1
;

58 
u32
 
	m°©us2
;

59 
u32
 
	m°©us3
;

60 
u32
 
	m°©us4
;

61 
u32
 
	m°©us5
;

62 
u32
 
	m°©us6
;

63 
u32
 
	m°©us7
;

64 
u32
 
	m°©us8
;

65 
u32
 
	m°©us9
;

66 
u32
 
	m°©us10
;

67 
u32
 
	m°©us11
;

68 } 
__∑cked
 
__Æig√d
(4);

71 
	s¨9003_txc
 {

72 
u32
 
	möfo
;

73 
u32
 
	mlök
;

74 
u32
 
	md©a0
;

75 
u32
 
	m˘l3
;

76 
u32
 
	md©a1
;

77 
u32
 
	m˘l5
;

78 
u32
 
	md©a2
;

79 
u32
 
	m˘l7
;

80 
u32
 
	md©a3
;

81 
u32
 
	m˘l9
;

82 
u32
 
	m˘l10
;

83 
u32
 
	m˘l11
;

84 
u32
 
	m˘l12
;

85 
u32
 
	m˘l13
;

86 
u32
 
	m˘l14
;

87 
u32
 
	m˘l15
;

88 
u32
 
	m˘l16
;

89 
u32
 
	m˘l17
;

90 
u32
 
	m˘l18
;

91 
u32
 
	m˘l19
;

92 
u32
 
	m˘l20
;

93 
u32
 
	m˘l21
;

94 
u32
 
	m˘l22
;

95 
u32
 
	m˘l23
;

96 
u32
 
	m∑d
[8];

97 } 
__∑cked
 
__Æig√d
(4);

99 
	s¨9003_txs
 {

100 
u32
 
	mds_öfo
;

101 
u32
 
	m°©us1
;

102 
u32
 
	m°©us2
;

103 
u32
 
	m°©us3
;

104 
u32
 
	m°©us4
;

105 
u32
 
	m°©us5
;

106 
u32
 
	m°©us6
;

107 
u32
 
	m°©us7
;

108 
u32
 
	m°©us8
;

109 } 
__∑cked
 
__Æig√d
(4);

111 
¨9003_hw_©èch_mac_›s
(
©h_hw
 *
hw
);

112 
©h9k_hw_£t_rx_bufsize
(
©h_hw
 *
ah
, 
u16
 
buf_size
);

113 
©h9k_hw_addrxbuf_edma
(
©h_hw
 *
ah
, 
u32
 
rxdp
,

114 
©h9k_rx_qty≥
 
qty≥
);

116 
©h9k_hw_¥o˚ss_rxdesc_edma
(
©h_hw
 *
ah
,

117 
©h_rx_°©us
 *
rxs
,

118 *
buf_addr
);

119 
©h9k_hw_ª£t_tx°©us_rög
(
©h_hw
 *
ah
);

120 
©h9k_hw_£tup_°©u§ög
(
©h_hw
 *
ah
, *
ts_°¨t
,

121 
u32
 
ts_∑ddr_°¨t
,

122 
u16
 
size
);

	@ar9003_mci.c

17 
	~<löux/exp‹t.h
>

18 
	~"hw.h
"

19 
	~"hw-›s.h
"

20 
	~"¨9003_phy.h
"

21 
	~"¨9003_mci.h
"

23 
	$¨9003_mci_ª£t_ªq_wakeup
(
©h_hw
 *
ah
)

25 
	`REG_RMW_FIELD
(
ah
, 
AR_MCI_COMMAND2
,

26 
AR_MCI_COMMAND2_RESET_REQ_WAKEUP
, 1);

27 
	`udñay
(1);

28 
	`REG_RMW_FIELD
(
ah
, 
AR_MCI_COMMAND2
,

29 
AR_MCI_COMMAND2_RESET_REQ_WAKEUP
, 0);

30 
	}
}

32 
	$¨9003_mci_waô_f‹_öãºu±
(
©h_hw
 *
ah
, 
u32
 
addªss
,

33 
u32
 
bô_posôi⁄
, 
time_out
)

35 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

37 
time_out
) {

38 i‡(!(
	`REG_READ
(
ah
, 
addªss
Ë& 
bô_posôi⁄
)) {

39 
	`udñay
(10);

40 
time_out
 -= 10;

42 i‡(
time_out
 < 0)

47 
	`REG_WRITE
(
ah
, 
addªss
, 
bô_posôi⁄
);

49 i‡(
addªss
 !
AR_MCI_INTERRUPT_RX_MSG_RAW
)

52 i‡(
bô_posôi⁄
 & 
AR_MCI_INTERRUPT_RX_MSG_REQ_WAKE
)

53 
	`¨9003_mci_ª£t_ªq_wakeup
(
ah
);

55 i‡(
bô_posôi⁄
 & (
AR_MCI_INTERRUPT_RX_MSG_SYS_SLEEPING
 |

56 
AR_MCI_INTERRUPT_RX_MSG_SYS_WAKING
))

57 
	`REG_WRITE
(
ah
, 
AR_MCI_INTERRUPT_RAW
,

58 
AR_MCI_INTERRUPT_REMOTE_SLEEP_UPDATE
);

60 
	`REG_WRITE
(
ah
, 
AR_MCI_INTERRUPT_RAW
, 
AR_MCI_INTERRUPT_RX_MSG
);

64 i‡(
time_out
 <= 0) {

65 
	`©h_dbg
(
comm⁄
, 
MCI
,

67 
addªss
, 
bô_posôi⁄
);

68 
	`©h_dbg
(
comm⁄
, 
MCI
,

70 
	`REG_READ
(
ah
, 
AR_MCI_INTERRUPT_RAW
),

71 
	`REG_READ
(
ah
, 
AR_MCI_INTERRUPT_RX_MSG_RAW
));

72 
time_out
 = 0;

75  
time_out
;

76 
	}
}

78 
	$¨9003_mci_ªmŸe_ª£t
(
©h_hw
 *
ah
, 
boﬁ
 
waô_d⁄e
)

80 
u32
 
∑ylﬂd
[4] = { 0xffffffff, 0xffffffff, 0xffffffff, 0xffffff00};

82 
	`¨9003_mci_£nd_mesßge
(
ah
, 
MCI_REMOTE_RESET
, 0, 
∑ylﬂd
, 16,

83 
waô_d⁄e
, 
Ál£
);

84 
	`udñay
(5);

85 
	}
}

87 
	$¨9003_mci_£nd_ a_å™s„r
(
©h_hw
 *
ah
, 
boﬁ
 
waô_d⁄e
)

89 
u32
 
∑ylﬂd
 = 0x00000000;

91 
	`¨9003_mci_£nd_mesßge
(
ah
, 
MCI_LNA_TRANS
, 0, &
∑ylﬂd
, 1,

92 
waô_d⁄e
, 
Ál£
);

93 
	}
}

95 
	$¨9003_mci_£nd_ªq_wake
(
©h_hw
 *
ah
, 
boﬁ
 
waô_d⁄e
)

97 
	`¨9003_mci_£nd_mesßge
(
ah
, 
MCI_REQ_WAKE
, 
MCI_FLAG_DISABLE_TIMESTAMP
,

98 
NULL
, 0, 
waô_d⁄e
, 
Ál£
);

99 
	`udñay
(5);

100 
	}
}

102 
	$¨9003_mci_£nd_sys_wakög
(
©h_hw
 *
ah
, 
boﬁ
 
waô_d⁄e
)

104 
	`¨9003_mci_£nd_mesßge
(
ah
, 
MCI_SYS_WAKING
, 
MCI_FLAG_DISABLE_TIMESTAMP
,

105 
NULL
, 0, 
waô_d⁄e
, 
Ál£
);

106 
	}
}

108 
	$¨9003_mci_£nd_ a_èke
(
©h_hw
 *
ah
, 
boﬁ
 
waô_d⁄e
)

110 
u32
 
∑ylﬂd
 = 0x70000000;

112 
	`¨9003_mci_£nd_mesßge
(
ah
, 
MCI_LNA_TAKE
, 0, &
∑ylﬂd
, 1,

113 
waô_d⁄e
, 
Ál£
);

114 
	}
}

116 
	$¨9003_mci_£nd_sys_¶ìpög
(
©h_hw
 *
ah
, 
boﬁ
 
waô_d⁄e
)

118 
	`¨9003_mci_£nd_mesßge
(
ah
, 
MCI_SYS_SLEEPING
,

119 
MCI_FLAG_DISABLE_TIMESTAMP
,

120 
NULL
, 0, 
waô_d⁄e
, 
Ál£
);

121 
	}
}

123 
	$¨9003_mci_£nd_c€x_vîsi⁄_quîy
(
©h_hw
 *
ah
,

124 
boﬁ
 
waô_d⁄e
)

126 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

127 
u32
 
∑ylﬂd
[4] = {0, 0, 0, 0};

129 i‡(
mci
->
bt_vîsi⁄_known
 ||

130 (
mci
->
bt_°©e
 =
MCI_BT_SLEEP
))

133 
	`MCI_GPM_SET_TYPE_OPCODE
(
∑ylﬂd
, 
MCI_GPM_COEX_AGENT
,

134 
MCI_GPM_COEX_VERSION_QUERY
);

135 
	`¨9003_mci_£nd_mesßge
(
ah
, 
MCI_GPM
, 0, 
∑ylﬂd
, 16, 
waô_d⁄e
, 
åue
);

136 
	}
}

138 
	$¨9003_mci_£nd_c€x_vîsi⁄_ª•⁄£
(
©h_hw
 *
ah
,

139 
boﬁ
 
waô_d⁄e
)

141 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

142 
u32
 
∑ylﬂd
[4] = {0, 0, 0, 0};

144 
	`MCI_GPM_SET_TYPE_OPCODE
(
∑ylﬂd
, 
MCI_GPM_COEX_AGENT
,

145 
MCI_GPM_COEX_VERSION_RESPONSE
);

146 *(((
u8
 *)
∑ylﬂd
Ë+ 
MCI_GPM_COEX_B_MAJOR_VERSION
) =

147 
mci
->
wœn_vî_maj‹
;

148 *(((
u8
 *)
∑ylﬂd
Ë+ 
MCI_GPM_COEX_B_MINOR_VERSION
) =

149 
mci
->
wœn_vî_mö‹
;

150 
	`¨9003_mci_£nd_mesßge
(
ah
, 
MCI_GPM
, 0, 
∑ylﬂd
, 16, 
waô_d⁄e
, 
åue
);

151 
	}
}

153 
	$¨9003_mci_£nd_c€x_wœn_ch™√ls
(
©h_hw
 *
ah
,

154 
boﬁ
 
waô_d⁄e
)

156 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

157 
u32
 *
∑ylﬂd
 = &
mci
->
wœn_ch™√ls
[0];

159 i‡(!
mci
->
wœn_ch™√ls_upd©e
 ||

160 (
mci
->
bt_°©e
 =
MCI_BT_SLEEP
))

163 
	`MCI_GPM_SET_TYPE_OPCODE
(
∑ylﬂd
, 
MCI_GPM_COEX_AGENT
,

164 
MCI_GPM_COEX_WLAN_CHANNELS
);

165 
	`¨9003_mci_£nd_mesßge
(
ah
, 
MCI_GPM
, 0, 
∑ylﬂd
, 16, 
waô_d⁄e
, 
åue
);

166 
	`MCI_GPM_SET_TYPE_OPCODE
(
∑ylﬂd
, 0xff, 0xff);

167 
	}
}

169 
	$¨9003_mci_£nd_c€x_bt_°©us_quîy
(
©h_hw
 *
ah
,

170 
boﬁ
 
waô_d⁄e
, 
u8
 
quîy_ty≥
)

172 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

173 
u32
 
∑ylﬂd
[4] = {0, 0, 0, 0};

174 
boﬁ
 
quîy_btöfo
;

176 i‡(
mci
->
bt_°©e
 =
MCI_BT_SLEEP
)

179 
quîy_btöfo
 = !!(
quîy_ty≥
 & (
MCI_GPM_COEX_QUERY_BT_ALL_INFO
 |

180 
MCI_GPM_COEX_QUERY_BT_TOPOLOGY
));

181 
	`MCI_GPM_SET_TYPE_OPCODE
(
∑ylﬂd
, 
MCI_GPM_COEX_AGENT
,

182 
MCI_GPM_COEX_STATUS_QUERY
);

184 *(((
u8
 *)
∑ylﬂd
Ë+ 
MCI_GPM_COEX_B_BT_BITMAP
Ë
quîy_ty≥
;

190 i‡(!
	`¨9003_mci_£nd_mesßge
(
ah
, 
MCI_GPM
, 0, 
∑ylﬂd
, 16,

191 
waô_d⁄e
, 
åue
)) {

192 i‡(
quîy_btöfo
)

193 
mci
->
√ed_Êush_btöfo
 = 
åue
;

196 i‡(
quîy_btöfo
)

197 
mci
->
quîy_bt
 = 
Ál£
;

198 
	}
}

200 
	$¨9003_mci_£nd_c€x_hÆt_bt_gpm
(
©h_hw
 *
ah
, 
boﬁ
 
hÆt
,

201 
boﬁ
 
waô_d⁄e
)

203 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

204 
u32
 
∑ylﬂd
[4] = {0, 0, 0, 0};

206 
	`MCI_GPM_SET_TYPE_OPCODE
(
∑ylﬂd
, 
MCI_GPM_COEX_AGENT
,

207 
MCI_GPM_COEX_HALT_BT_GPM
);

209 i‡(
hÆt
) {

210 
mci
->
quîy_bt
 = 
åue
;

212 
mci
->
unhÆt_bt_gpm
 = 
åue
;

213 
mci
->
√ed_Êush_btöfo
 = 
åue
;

214 *(((
u8
 *)
∑ylﬂd
Ë+ 
MCI_GPM_COEX_B_HALT_STATE
) =

215 
MCI_GPM_COEX_BT_GPM_HALT
;

217 *(((
u8
 *)
∑ylﬂd
Ë+ 
MCI_GPM_COEX_B_HALT_STATE
) =

218 
MCI_GPM_COEX_BT_GPM_UNHALT
;

220 
	`¨9003_mci_£nd_mesßge
(
ah
, 
MCI_GPM
, 0, 
∑ylﬂd
, 16, 
waô_d⁄e
, 
åue
);

221 
	}
}

223 
	$¨9003_mci_¥ï_öãrÁ˚
(
©h_hw
 *
ah
)

225 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

226 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

227 
u32
 
ßved_mci_öt_í
;

228 
u32
 
mci_timeout
 = 150;

230 
mci
->
bt_°©e
 = 
MCI_BT_SLEEP
;

231 
ßved_mci_öt_í
 = 
	`REG_READ
(
ah
, 
AR_MCI_INTERRUPT_EN
);

233 
	`REG_WRITE
(
ah
, 
AR_MCI_INTERRUPT_EN
, 0);

234 
	`REG_WRITE
(
ah
, 
AR_MCI_INTERRUPT_RX_MSG_RAW
,

235 
	`REG_READ
(
ah
, 
AR_MCI_INTERRUPT_RX_MSG_RAW
));

236 
	`REG_WRITE
(
ah
, 
AR_MCI_INTERRUPT_RAW
,

237 
	`REG_READ
(
ah
, 
AR_MCI_INTERRUPT_RAW
));

239 
	`¨9003_mci_ªmŸe_ª£t
(
ah
, 
åue
);

240 
	`¨9003_mci_£nd_ªq_wake
(
ah
, 
åue
);

242 i‡(!
	`¨9003_mci_waô_f‹_öãºu±
(
ah
, 
AR_MCI_INTERRUPT_RX_MSG_RAW
,

243 
AR_MCI_INTERRUPT_RX_MSG_SYS_WAKING
, 500))

244 
˛ór_ªdu¡
;

246 
mci
->
bt_°©e
 = 
MCI_BT_AWAKE
;

264 
	`¨9003_mci_£nd_sys_wakög
(
ah
, 
åue
);

265 
	`udñay
(10);

271 
	`REG_WRITE
(
ah
, 
AR_MCI_BT_PRI0
, 0xFFFFFFFF);

272 
	`REG_WRITE
(
ah
, 
AR_MCI_BT_PRI1
, 0xFFFFFFFF);

273 
	`REG_WRITE
(
ah
, 
AR_MCI_BT_PRI2
, 0xFFFFFFFF);

274 
	`REG_WRITE
(
ah
, 
AR_MCI_BT_PRI3
, 0xFFFFFFFF);

275 
	`REG_WRITE
(
ah
, 
AR_MCI_BT_PRI
, 0X000000FF);

283 
	`REG_WRITE
(
ah
, 
AR_MCI_INTERRUPT_RX_MSG_RAW
,

284 
AR_MCI_INTERRUPT_RX_MSG_CONT_RST
);

285 
	`REG_WRITE
(
ah
, 
AR_MCI_INTERRUPT_RAW
, 
AR_MCI_INTERRUPT_BT_PRI
);

287 i‡(
mci
->
is_2g
) {

288 
	`¨9003_mci_£nd_ a_å™s„r
(
ah
, 
åue
);

289 
	`udñay
(5);

292 i‡((
mci
->
is_2g
 && !mci->
upd©e_2g5g
)) {

293 i‡(
	`¨9003_mci_waô_f‹_öãºu±
(
ah
,

294 
AR_MCI_INTERRUPT_RX_MSG_RAW
,

295 
AR_MCI_INTERRUPT_RX_MSG_LNA_INFO
,

296 
mci_timeout
))

297 
	`©h_dbg
(
comm⁄
, 
MCI
,

300 
	`©h_dbg
(
comm⁄
, 
MCI
,

304 
˛ór_ªdu¡
:

306 i‡((
mci
->
bt_°©e
 =
MCI_BT_AWAKE
) &&

307 (
	`REG_READ_FIELD
(
ah
, 
AR_MCI_INTERRUPT_RX_MSG_RAW
,

308 
AR_MCI_INTERRUPT_RX_MSG_SYS_WAKING
)) &&

309 (
	`REG_READ_FIELD
(
ah
, 
AR_MCI_INTERRUPT_RX_MSG_RAW
,

310 
AR_MCI_INTERRUPT_RX_MSG_SYS_SLEEPING
) == 0)) {

311 
	`REG_WRITE
(
ah
, 
AR_MCI_INTERRUPT_RX_MSG_RAW
,

312 
AR_MCI_INTERRUPT_RX_MSG_SYS_WAKING
);

313 
	`REG_WRITE
(
ah
, 
AR_MCI_INTERRUPT_RAW
,

314 
AR_MCI_INTERRUPT_REMOTE_SLEEP_UPDATE
);

317 
	`REG_WRITE
(
ah
, 
AR_MCI_INTERRUPT_EN
, 
ßved_mci_öt_í
);

318 
	}
}

320 
	$¨9003_mci_£t_fuŒ_¶ìp
(
©h_hw
 *
ah
)

322 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

324 i‡(
	`¨9003_mci_°©e
(
ah
, 
MCI_STATE_ENABLE
) &&

325 (
mci
->
bt_°©e
 !
MCI_BT_SLEEP
) &&

326 !
mci
->
hÆãd_bt_gpm
) {

327 
	`¨9003_mci_£nd_c€x_hÆt_bt_gpm
(
ah
, 
åue
,Årue);

330 
mci
->
ªady
 = 
Ál£
;

331 
	}
}

333 
	$¨9003_mci_dißbÀ_öãºu±
(
©h_hw
 *
ah
)

335 
	`REG_WRITE
(
ah
, 
AR_MCI_INTERRUPT_EN
, 0);

336 
	`REG_WRITE
(
ah
, 
AR_MCI_INTERRUPT_RX_MSG_EN
, 0);

337 
	}
}

339 
	$¨9003_mci_íabÀ_öãºu±
(
©h_hw
 *
ah
)

341 
	`REG_WRITE
(
ah
, 
AR_MCI_INTERRUPT_EN
, 
AR_MCI_INTERRUPT_DEFAULT
);

342 
	`REG_WRITE
(
ah
, 
AR_MCI_INTERRUPT_RX_MSG_EN
,

343 
AR_MCI_INTERRUPT_RX_MSG_DEFAULT
);

344 
	}
}

346 
boﬁ
 
	$¨9003_mci_check_öt
(
©h_hw
 *
ah
, 
u32
 
öts
)

348 
u32
 
öå
;

350 
öå
 = 
	`REG_READ
(
ah
, 
AR_MCI_INTERRUPT_RX_MSG_RAW
);

351  ((
öå
 & 
öts
) == ints);

352 
	}
}

354 
	$¨9003_mci_gë_öãºu±
(
©h_hw
 *
ah
, 
u32
 *
øw_öå
,

355 
u32
 *
rx_msg_öå
)

357 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

359 *
øw_öå
 = 
mci
->raw_intr;

360 *
rx_msg_öå
 = 
mci
->rx_msg_intr;

363 
mci
->
øw_öå
 = 0;

364 
mci
->
rx_msg_öå
 = 0;

365 
	}
}

366 
EXPORT_SYMBOL
(
¨9003_mci_gë_öãºu±
);

368 
	$¨9003_mci_gë_i§
(
©h_hw
 *
ah
, 
©h9k_öt
 *
masked
)

370 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

371 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

372 
u32
 
øw_öå
, 
rx_msg_öå
;

374 
rx_msg_öå
 = 
	`REG_READ
(
ah
, 
AR_MCI_INTERRUPT_RX_MSG_RAW
);

375 
øw_öå
 = 
	`REG_READ
(
ah
, 
AR_MCI_INTERRUPT_RAW
);

377 i‡((
øw_öå
 =0xdódbìfË|| (
rx_msg_öå
 == 0xdeadbeef)) {

378 
	`©h_dbg
(
comm⁄
, 
MCI
,

381 
mci
->
rx_msg_öå
 |=Ñx_msg_intr;

382 
mci
->
øw_öå
 |=Ñaw_intr;

383 *
masked
 |
ATH9K_INT_MCI
;

385 i‡(
rx_msg_öå
 & 
AR_MCI_INTERRUPT_RX_MSG_CONT_INFO
)

386 
mci
->
c⁄t_°©us
 = 
	`REG_READ
(
ah
, 
AR_MCI_CONT_STATUS
);

388 
	`REG_WRITE
(
ah
, 
AR_MCI_INTERRUPT_RX_MSG_RAW
, 
rx_msg_öå
);

389 
	`REG_WRITE
(
ah
, 
AR_MCI_INTERRUPT_RAW
, 
øw_öå
);

391 
	}
}

393 
	$¨9003_mci_2g5g_ch™ged
(
©h_hw
 *
ah
, 
boﬁ
 
is_2g
)

395 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

397 i‡(!
mci
->
upd©e_2g5g
 &&

398 (
mci
->
is_2g
 != is_2g))

399 
mci
->
upd©e_2g5g
 = 
åue
;

401 
mci
->
is_2g
 = is_2g;

402 
	}
}

404 
boﬁ
 
	$¨9003_mci_is_gpm_vÆid
(
©h_hw
 *
ah
, 
u32
 
msg_ödex
)

406 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

407 
u32
 *
∑ylﬂd
;

408 
u32
 
ªcv_ty≥
, 
off£t
;

410 i‡(
msg_ödex
 =
MCI_GPM_INVALID
)

411  
Ál£
;

413 
off£t
 = 
msg_ödex
 << 4;

415 
∑ylﬂd
 = (
u32
 *)(
mci
->
gpm_buf
 + 
off£t
);

416 
ªcv_ty≥
 = 
	`MCI_GPM_TYPE
(
∑ylﬂd
);

418 i‡(
ªcv_ty≥
 =
MCI_GPM_RSVD_PATTERN
)

419  
Ál£
;

421  
åue
;

422 
	}
}

424 
	$¨9003_mci_ob£rv©i⁄_£t_up
(
©h_hw
 *
ah
)

426 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

428 i‡(
mci
->
c⁄fig
 & 
ATH_MCI_CONFIG_MCI_OBS_MCI
) {

429 
	`©h9k_hw_cfg_ouçut
(
ah
, 3, 
AR_GPIO_OUTPUT_MUX_AS_MCI_WLAN_DATA
);

430 
	`©h9k_hw_cfg_ouçut
(
ah
, 2, 
AR_GPIO_OUTPUT_MUX_AS_MCI_WLAN_CLK
);

431 
	`©h9k_hw_cfg_ouçut
(
ah
, 1, 
AR_GPIO_OUTPUT_MUX_AS_MCI_BT_DATA
);

432 
	`©h9k_hw_cfg_ouçut
(
ah
, 0, 
AR_GPIO_OUTPUT_MUX_AS_MCI_BT_CLK
);

433 } i‡(
mci
->
c⁄fig
 & 
ATH_MCI_CONFIG_MCI_OBS_TXRX
) {

434 
	`©h9k_hw_cfg_ouçut
(
ah
, 3, 
AR_GPIO_OUTPUT_MUX_AS_WL_IN_TX
);

435 
	`©h9k_hw_cfg_ouçut
(
ah
, 2, 
AR_GPIO_OUTPUT_MUX_AS_WL_IN_RX
);

436 
	`©h9k_hw_cfg_ouçut
(
ah
, 1, 
AR_GPIO_OUTPUT_MUX_AS_BT_IN_TX
);

437 
	`©h9k_hw_cfg_ouçut
(
ah
, 0, 
AR_GPIO_OUTPUT_MUX_AS_BT_IN_RX
);

438 
	`©h9k_hw_cfg_ouçut
(
ah
, 5, 
AR_GPIO_OUTPUT_MUX_AS_OUTPUT
);

439 } i‡(
mci
->
c⁄fig
 & 
ATH_MCI_CONFIG_MCI_OBS_BT
) {

440 
	`©h9k_hw_cfg_ouçut
(
ah
, 3, 
AR_GPIO_OUTPUT_MUX_AS_BT_IN_TX
);

441 
	`©h9k_hw_cfg_ouçut
(
ah
, 2, 
AR_GPIO_OUTPUT_MUX_AS_BT_IN_RX
);

442 
	`©h9k_hw_cfg_ouçut
(
ah
, 1, 
AR_GPIO_OUTPUT_MUX_AS_MCI_BT_DATA
);

443 
	`©h9k_hw_cfg_ouçut
(
ah
, 0, 
AR_GPIO_OUTPUT_MUX_AS_MCI_BT_CLK
);

447 
	`REG_SET_BIT
(
ah
, 
AR_GPIO_INPUT_EN_VAL
, 
AR_GPIO_JTAG_DISABLE
);

449 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_GLB_CONTROL
, 
AR_GLB_DS_JTAG_DISABLE
, 1);

450 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_GLB_CONTROL
, 
AR_GLB_WLAN_UART_INTF_EN
, 0);

451 
	`REG_SET_BIT
(
ah
, 
AR_GLB_GPIO_CONTROL
, 
ATH_MCI_CONFIG_MCI_OBS_GPIO
);

453 
	`REG_RMW_FIELD
(
ah
, 
AR_BTCOEX_CTRL2
, 
AR_BTCOEX_CTRL2_GPIO_OBS_SEL
, 0);

454 
	`REG_RMW_FIELD
(
ah
, 
AR_BTCOEX_CTRL2
, 
AR_BTCOEX_CTRL2_MAC_BB_OBS_SEL
, 1);

455 
	`REG_WRITE
(
ah
, 
AR_OBS
, 0x4b);

456 
	`REG_RMW_FIELD
(
ah
, 
AR_DIAG_SW
, 
AR_DIAG_OBS_PT_SEL1
, 0x03);

457 
	`REG_RMW_FIELD
(
ah
, 
AR_DIAG_SW
, 
AR_DIAG_OBS_PT_SEL2
, 0x01);

458 
	`REG_RMW_FIELD
(
ah
, 
AR_MACMISC
, 
AR_MACMISC_MISC_OBS_BUS_LSB
, 0x02);

459 
	`REG_RMW_FIELD
(
ah
, 
AR_MACMISC
, 
AR_MACMISC_MISC_OBS_BUS_MSB
, 0x03);

460 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TEST_CTL_STATUS
,

461 
AR_PHY_TEST_CTL_DEBUGPORT_SEL
, 0x07);

462 
	}
}

464 
boﬁ
 
	$¨9003_mci_£nd_c€x_bt_Êags
(
©h_hw
 *
ah
, 
boﬁ
 
waô_d⁄e
,

465 
u8
 
›code
, 
u32
 
bt_Êags
)

467 
u32
 
∂d
[4] = {0, 0, 0, 0};

469 
	`MCI_GPM_SET_TYPE_OPCODE
(
∂d
, 
MCI_GPM_COEX_AGENT
,

470 
MCI_GPM_COEX_BT_UPDATE_FLAGS
);

472 *(((
u8
 *)
∂d
Ë+ 
MCI_GPM_COEX_B_BT_FLAGS_OP
Ë
›code
;

473 *(((
u8
 *)
∂d
Ë+ 
MCI_GPM_COEX_W_BT_FLAGS
 + 0Ë
bt_Êags
 & 0xFF;

474 *(((
u8
 *)
∂d
Ë+ 
MCI_GPM_COEX_W_BT_FLAGS
 + 1Ë(
bt_Êags
 >> 8) & 0xFF;

475 *(((
u8
 *)
∂d
Ë+ 
MCI_GPM_COEX_W_BT_FLAGS
 + 2Ë(
bt_Êags
 >> 16) & 0xFF;

476 *(((
u8
 *)
∂d
Ë+ 
MCI_GPM_COEX_W_BT_FLAGS
 + 3Ë(
bt_Êags
 >> 24) & 0xFF;

478  
	`¨9003_mci_£nd_mesßge
(
ah
, 
MCI_GPM
, 0, 
∂d
, 16,

479 
waô_d⁄e
, 
åue
);

480 
	}
}

482 
	$¨9003_mci_sync_bt_°©e
(
©h_hw
 *
ah
)

484 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

485 
u32
 
cur_bt_°©e
;

487 
cur_bt_°©e
 = 
	`¨9003_mci_°©e
(
ah
, 
MCI_STATE_REMOTE_SLEEP
);

489 i‡(
mci
->
bt_°©e
 !
cur_bt_°©e
)

490 
mci
->
bt_°©e
 = 
cur_bt_°©e
;

492 i‡(
mci
->
bt_°©e
 !
MCI_BT_SLEEP
) {

494 
	`¨9003_mci_£nd_c€x_vîsi⁄_quîy
(
ah
, 
åue
);

495 
	`¨9003_mci_£nd_c€x_wœn_ch™√ls
(
ah
, 
åue
);

497 i‡(
mci
->
unhÆt_bt_gpm
 =
åue
)

498 
	`¨9003_mci_£nd_c€x_hÆt_bt_gpm
(
ah
, 
Ál£
, 
åue
);

500 
	}
}

502 
	$¨9003_mci_check_bt
(
©h_hw
 *
ah
)

504 
©h9k_hw_mci
 *
mci_hw
 = &
ah
->
btc€x_hw
.
mci
;

506 i‡(!
mci_hw
->
ªady
)

513 
	`¨9003_mci_sync_bt_°©e
(
ah
);

514 
	`¨9003_mci_2g5g_swôch
(
ah
, 
åue
);

516 i‡((
mci_hw
->
bt_°©e
 =
MCI_BT_AWAKE
) &&

517 (
mci_hw
->
quîy_bt
 =
åue
)) {

518 
mci_hw
->
√ed_Êush_btöfo
 = 
åue
;

520 
	}
}

522 
	$¨9003_mci_¥o˚ss_gpm_exåa
(
©h_hw
 *
ah
, 
u8
 
gpm_ty≥
,

523 
u8
 
gpm_›code
, 
u32
 *
p_gpm
)

525 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

526 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

527 
u8
 *
p_d©a
 = (u8 *Ë
p_gpm
;

529 i‡(
gpm_ty≥
 !
MCI_GPM_COEX_AGENT
)

532 
gpm_›code
) {

533 
MCI_GPM_COEX_VERSION_QUERY
:

534 
	`©h_dbg
(
comm⁄
, 
MCI
, "MCI Recv GPM COEX Version Query\n");

535 
	`¨9003_mci_£nd_c€x_vîsi⁄_ª•⁄£
(
ah
, 
åue
);

537 
MCI_GPM_COEX_VERSION_RESPONSE
:

538 
	`©h_dbg
(
comm⁄
, 
MCI
, "MCI Recv GPM COEX Version Response\n");

539 
mci
->
bt_vî_maj‹
 =

540 *(
p_d©a
 + 
MCI_GPM_COEX_B_MAJOR_VERSION
);

541 
mci
->
bt_vî_mö‹
 =

542 *(
p_d©a
 + 
MCI_GPM_COEX_B_MINOR_VERSION
);

543 
mci
->
bt_vîsi⁄_known
 = 
åue
;

544 
	`©h_dbg
(
comm⁄
, 
MCI
, "MCI BT Coex version: %d.%d\n",

545 
mci
->
bt_vî_maj‹
, mci->
bt_vî_mö‹
);

547 
MCI_GPM_COEX_STATUS_QUERY
:

548 
	`©h_dbg
(
comm⁄
, 
MCI
,

550 *(
p_d©a
 + 
MCI_GPM_COEX_B_WLAN_BITMAP
));

551 
mci
->
wœn_ch™√ls_upd©e
 = 
åue
;

552 
	`¨9003_mci_£nd_c€x_wœn_ch™√ls
(
ah
, 
åue
);

554 
MCI_GPM_COEX_BT_PROFILE_INFO
:

555 
mci
->
quîy_bt
 = 
åue
;

556 
	`©h_dbg
(
comm⁄
, 
MCI
, "MCI Recv GPM COEX BT_Profile_Info\n");

558 
MCI_GPM_COEX_BT_STATUS_UPDATE
:

559 
mci
->
quîy_bt
 = 
åue
;

560 
	`©h_dbg
(
comm⁄
, 
MCI
,

562 *(
p_gpm
 + 3));

567 
	}
}

569 
u32
 
	$¨9003_mci_waô_f‹_gpm
(
©h_hw
 *
ah
, 
u8
 
gpm_ty≥
,

570 
u8
 
gpm_›code
, 
time_out
)

572 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

573 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

574 
u32
 *
p_gpm
 = 
NULL
, 
mism©ch
 = 0, 
m‹e_d©a
;

575 
u32
 
off£t
;

576 
u8
 
ªcv_ty≥
 = 0, 
ªcv_›code
 = 0;

577 
boﬁ
 
b_is_bt_ˇl_d⁄e
 = (
gpm_ty≥
 =
MCI_GPM_BT_CAL_DONE
);

579 
m‹e_d©a
 = 
time_out
 ? 
MCI_GPM_NOMORE
 : 
MCI_GPM_MORE
;

581 
time_out
 > 0) {

582 i‡(
p_gpm
) {

583 
	`MCI_GPM_RECYCLE
(
p_gpm
);

584 
p_gpm
 = 
NULL
;

587 i‡(
m‹e_d©a
 !
MCI_GPM_MORE
)

588 
time_out
 = 
	`¨9003_mci_waô_f‹_öãºu±
(
ah
,

589 
AR_MCI_INTERRUPT_RX_MSG_RAW
,

590 
AR_MCI_INTERRUPT_RX_MSG_GPM
,

591 
time_out
);

593 i‡(!
time_out
)

596 
off£t
 = 
	`¨9003_mci_gë_√xt_gpm_off£t
(
ah
, 
Ál£
, &
m‹e_d©a
);

598 i‡(
off£t
 =
MCI_GPM_INVALID
)

601 
p_gpm
 = (
u32
 *Ë(
mci
->
gpm_buf
 + 
off£t
);

602 
ªcv_ty≥
 = 
	`MCI_GPM_TYPE
(
p_gpm
);

603 
ªcv_›code
 = 
	`MCI_GPM_OPCODE
(
p_gpm
);

605 i‡(
	`MCI_GPM_IS_CAL_TYPE
(
ªcv_ty≥
)) {

606 i‡(
ªcv_ty≥
 =
gpm_ty≥
) {

607 i‡((
gpm_ty≥
 =
MCI_GPM_BT_CAL_DONE
) &&

608 !
b_is_bt_ˇl_d⁄e
) {

609 
gpm_ty≥
 = 
MCI_GPM_BT_CAL_GRANT
;

614 } i‡((
ªcv_ty≥
 =
gpm_ty≥
) &&

615 (
ªcv_›code
 =
gpm_›code
))

631 i‡((
gpm_ty≥
 =
MCI_GPM_BT_CAL_GRANT
) &&

632 (
ªcv_ty≥
 =
MCI_GPM_BT_CAL_REQ
)) {

634 
u32
 
∑ylﬂd
[4] = {0, 0, 0, 0};

636 
gpm_ty≥
 = 
MCI_GPM_BT_CAL_DONE
;

637 
	`MCI_GPM_SET_CAL_TYPE
(
∑ylﬂd
,

638 
MCI_GPM_WLAN_CAL_GRANT
);

639 
	`¨9003_mci_£nd_mesßge
(
ah
, 
MCI_GPM
, 0, 
∑ylﬂd
, 16,

640 
Ál£
, false);

643 
	`©h_dbg
(
comm⁄
, 
MCI
, "MCI GPM subtypeÇot match 0x%x\n",

644 *(
p_gpm
 + 1));

645 
mism©ch
++;

646 
	`¨9003_mci_¥o˚ss_gpm_exåa
(
ah
, 
ªcv_ty≥
,

647 
ªcv_›code
, 
p_gpm
);

651 i‡(
p_gpm
) {

652 
	`MCI_GPM_RECYCLE
(
p_gpm
);

653 
p_gpm
 = 
NULL
;

656 i‡(
time_out
 <= 0)

657 
time_out
 = 0;

659 
m‹e_d©a
 =
MCI_GPM_MORE
) {

660 
off£t
 = 
	`¨9003_mci_gë_√xt_gpm_off£t
(
ah
, 
Ál£
, &
m‹e_d©a
);

661 i‡(
off£t
 =
MCI_GPM_INVALID
)

664 
p_gpm
 = (
u32
 *Ë(
mci
->
gpm_buf
 + 
off£t
);

665 
ªcv_ty≥
 = 
	`MCI_GPM_TYPE
(
p_gpm
);

666 
ªcv_›code
 = 
	`MCI_GPM_OPCODE
(
p_gpm
);

668 i‡(!
	`MCI_GPM_IS_CAL_TYPE
(
ªcv_ty≥
))

669 
	`¨9003_mci_¥o˚ss_gpm_exåa
(
ah
, 
ªcv_ty≥
,

670 
ªcv_›code
, 
p_gpm
);

672 
	`MCI_GPM_RECYCLE
(
p_gpm
);

675  
time_out
;

676 
	}
}

678 
boﬁ
 
	$¨9003_mci_°¨t_ª£t
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
)

680 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

681 
©h9k_hw_mci
 *
mci_hw
 = &
ah
->
btc€x_hw
.
mci
;

682 
u32
 
∑ylﬂd
[4] = {0, 0, 0, 0};

684 
	`¨9003_mci_2g5g_ch™ged
(
ah
, 
	`IS_CHAN_2GHZ
(
ch™
));

686 i‡(
mci_hw
->
bt_°©e
 !
MCI_BT_CAL_START
)

687  
Ál£
;

689 
mci_hw
->
bt_°©e
 = 
MCI_BT_CAL
;

696 
	`¨9003_mci_dißbÀ_öãºu±
(
ah
);

698 
	`MCI_GPM_SET_CAL_TYPE
(
∑ylﬂd
, 
MCI_GPM_WLAN_CAL_GRANT
);

699 
	`¨9003_mci_£nd_mesßge
(
ah
, 
MCI_GPM
, 0, 
∑ylﬂd
,

700 16, 
åue
, 
Ál£
);

704 i‡(
	`¨9003_mci_waô_f‹_gpm
(
ah
, 
MCI_GPM_BT_CAL_DONE
,

706 
	`©h_dbg
(
comm⁄
, 
MCI
, "MCI BT_CAL_DONEÑeceived\n");

708 
	`©h_dbg
(
comm⁄
, 
MCI
,

711 
mci_hw
->
bt_°©e
 = 
MCI_BT_AWAKE
;

713 
	`¨9003_mci_íabÀ_öãºu±
(
ah
);

715  
åue
;

716 
	}
}

718 
	$¨9003_mci_íd_ª£t
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
,

719 
©h9k_hw_ˇl_d©a
 *
ˇld©a
)

721 
©h9k_hw_mci
 *
mci_hw
 = &
ah
->
btc€x_hw
.
mci
;

723 i‡(!
mci_hw
->
ªady
)

726 i‡(!
	`IS_CHAN_2GHZ
(
ch™
Ë|| (
mci_hw
->
bt_°©e
 !
MCI_BT_SLEEP
))

727 
exô
;

729 i‡(!
	`¨9003_mci_check_öt
(
ah
, 
AR_MCI_INTERRUPT_RX_MSG_REMOTE_RESET
) &&

730 !
	`¨9003_mci_check_öt
(
ah
, 
AR_MCI_INTERRUPT_RX_MSG_REQ_WAKE
))

731 
exô
;

739 
	`REG_WRITE
(
ah
, 
AR_MCI_INTERRUPT_RX_MSG_RAW
,

740 (
AR_MCI_INTERRUPT_RX_MSG_REMOTE_RESET
 |

741 
AR_MCI_INTERRUPT_RX_MSG_REQ_WAKE
));

743 
	`¨9003_mci_ªmŸe_ª£t
(
ah
, 
åue
);

744 
	`¨9003_mci_£nd_sys_wakög
(
ah
, 
åue
);

745 
	`udñay
(1);

747 i‡(
	`IS_CHAN_2GHZ
(
ch™
))

748 
	`¨9003_mci_£nd_ a_å™s„r
(
ah
, 
åue
);

750 
mci_hw
->
bt_°©e
 = 
MCI_BT_AWAKE
;

752 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_TIMING4
,

753 1 << 
AR_PHY_TIMING_CONTROL4_DO_GAIN_DC_IQ_CAL_SHIFT
);

755 i‡(
ˇld©a
) {

756 
	`˛ór_bô
(
TXIQCAL_DONE
, &
ˇld©a
->
ˇl_Êags
);

757 
	`˛ór_bô
(
TXCLCAL_DONE
, &
ˇld©a
->
ˇl_Êags
);

758 
	`˛ór_bô
(
RTT_DONE
, &
ˇld©a
->
ˇl_Êags
);

761 i‡(!
	`©h9k_hw_öô_ˇl
(
ah
, 
ch™
))

762  -
EIO
;

764 
	`REG_SET_BIT
(
ah
, 
AR_PHY_TIMING4
,

765 1 << 
AR_PHY_TIMING_CONTROL4_DO_GAIN_DC_IQ_CAL_SHIFT
);

767 
exô
:

768 
	`¨9003_mci_íabÀ_öãºu±
(
ah
);

770 
	}
}

772 
	$¨9003_mci_muã_bt
(
©h_hw
 *
ah
)

775 
	`REG_WRITE
(
ah
, 
AR_MCI_MSG_ATTRIBUTES_TABLE
, 0xffff0000);

776 
	`REG_SET_BIT
(
ah
, 
AR_MCI_TX_CTRL
, 
AR_MCI_TX_CTRL_DISABLE_LNA_UPDATE
);

779 
	`udñay
(10);

786 
	`¨9003_mci_£nd_ a_èke
(
ah
, 
åue
);

788 
	`udñay
(5);

790 
	`¨9003_mci_£nd_sys_¶ìpög
(
ah
, 
åue
);

791 
	}
}

793 
	$¨9003_mci_o¶a_£tup
(
©h_hw
 *
ah
, 
boﬁ
 
íabÀ
)

795 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

796 
u32
 
thªsh
;

798 i‡(!
íabÀ
) {

799 
	`REG_CLR_BIT
(
ah
, 
AR_BTCOEX_CTRL
,

800 
AR_BTCOEX_CTRL_ONE_STEP_LOOK_AHEAD_EN
);

803 
	`REG_RMW_FIELD
(
ah
, 
AR_MCI_SCHD_TABLE_2
, 
AR_MCI_SCHD_TABLE_2_HW_BASED
, 1);

804 
	`REG_RMW_FIELD
(
ah
, 
AR_MCI_SCHD_TABLE_2
,

805 
AR_MCI_SCHD_TABLE_2_MEM_BASED
, 1);

807 i‡(
	`AR_SREV_9565
(
ah
))

808 
	`REG_RMW_FIELD
(
ah
, 
AR_MCI_MISC
, 
AR_MCI_MISC_HW_FIX_EN
, 1);

810 i‡(!(
mci
->
c⁄fig
 & 
ATH_MCI_CONFIG_DISABLE_AGGR_THRESH
)) {

811 
thªsh
 = 
	`MS
(
mci
->
c⁄fig
, 
ATH_MCI_CONFIG_AGGR_THRESH
);

812 
	`REG_RMW_FIELD
(
ah
, 
AR_BTCOEX_CTRL
,

813 
AR_BTCOEX_CTRL_AGGR_THRESH
, 
thªsh
);

814 
	`REG_RMW_FIELD
(
ah
, 
AR_BTCOEX_CTRL
,

815 
AR_BTCOEX_CTRL_TIME_TO_NEXT_BT_THRESH_EN
, 1);

817 
	`REG_RMW_FIELD
(
ah
, 
AR_BTCOEX_CTRL
,

818 
AR_BTCOEX_CTRL_TIME_TO_NEXT_BT_THRESH_EN
, 0);

820 
	`REG_RMW_FIELD
(
ah
, 
AR_BTCOEX_CTRL
,

821 
AR_BTCOEX_CTRL_ONE_STEP_LOOK_AHEAD_EN
, 1);

822 
	}
}

824 
	$¨9003_mci_ª£t
(
©h_hw
 *
ah
, 
boﬁ
 
í_öt
, boﬁ 
is_2g
,

825 
boﬁ
 
is_fuŒ_¶ìp
)

827 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

828 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

829 
u32
 
ªgvÆ
, 
i
;

831 
	`©h_dbg
(
comm⁄
, 
MCI
, "MCI Reset (full_sleep = %d, is_2g = %d)\n",

832 
is_fuŒ_¶ìp
, 
is_2g
);

834 i‡(!
mci
->
gpm_addr
 && !mci->
sched_addr
) {

835 
	`©h_îr
(
comm⁄
, "MCI GPMánd schedule buffersáreÇotállocated\n");

836  -
ENOMEM
;

839 i‡(
	`REG_READ
(
ah
, 
AR_BTCOEX_CTRL
) == 0xdeadbeef) {

840 
	`©h_îr
(
comm⁄
, "BTCOEX controlÑegister is dead\n");

841  -
EINVAL
;

845 
	`REG_WRITE
(
ah
, 
AR_MCI_GPM_0
, 
mci
->
gpm_addr
);

846 
	`REG_WRITE
(
ah
, 
AR_MCI_GPM_1
, 
mci
->
gpm_Àn
);

847 
	`REG_WRITE
(
ah
, 
AR_MCI_SCHD_TABLE_0
, 
mci
->
sched_addr
);

854 
ªgvÆ
 = 
	`SM
(1, 
AR_BTCOEX_CTRL_AR9462_MODE
) |

855 
	`SM
(1, 
AR_BTCOEX_CTRL_WBTIMER_EN
) |

856 
	`SM
(1, 
AR_BTCOEX_CTRL_PA_SHARED
) |

857 
	`SM
(1, 
AR_BTCOEX_CTRL_LNA_SHARED
) |

858 
	`SM
(0, 
AR_BTCOEX_CTRL_1_CHAIN_ACK
) |

859 
	`SM
(0, 
AR_BTCOEX_CTRL_1_CHAIN_BCN
) |

860 
	`SM
(0, 
AR_BTCOEX_CTRL_ONE_STEP_LOOK_AHEAD_EN
);

861 i‡(
	`AR_SREV_9565
(
ah
)) {

862 
ªgvÆ
 |
	`SM
(1, 
AR_BTCOEX_CTRL_NUM_ANTENNAS
) |

863 
	`SM
(1, 
AR_BTCOEX_CTRL_RX_CHAIN_MASK
);

864 
	`REG_RMW_FIELD
(
ah
, 
AR_BTCOEX_CTRL2
,

865 
AR_BTCOEX_CTRL2_TX_CHAIN_MASK
, 0x1);

867 
ªgvÆ
 |
	`SM
(2, 
AR_BTCOEX_CTRL_NUM_ANTENNAS
) |

868 
	`SM
(3, 
AR_BTCOEX_CTRL_RX_CHAIN_MASK
);

871 
	`REG_WRITE
(
ah
, 
AR_BTCOEX_CTRL
, 
ªgvÆ
);

873 i‡(
is_2g
 && !(
mci
->
c⁄fig
 & 
ATH_MCI_CONFIG_DISABLE_OSLA
))

874 
	`¨9003_mci_o¶a_£tup
(
ah
, 
åue
);

876 
	`¨9003_mci_o¶a_£tup
(
ah
, 
Ál£
);

878 
	`REG_SET_BIT
(
ah
, 
AR_PHY_GLB_CONTROL
,

879 
AR_BTCOEX_CTRL_SPDT_ENABLE
);

880 
	`REG_RMW_FIELD
(
ah
, 
AR_BTCOEX_CTRL3
,

881 
AR_BTCOEX_CTRL3_CONT_INFO_TIMEOUT
, 20);

883 
	`REG_RMW_FIELD
(
ah
, 
AR_BTCOEX_CTRL2
, 
AR_BTCOEX_CTRL2_RX_DEWEIGHT
, 0);

884 
	`REG_RMW_FIELD
(
ah
, 
AR_PCU_MISC
, 
AR_PCU_BT_ANT_PREVENT_RX
, 0);

887 
	`REG_RMW_FIELD
(
ah
, 
AR_BTCOEX_WL_LNA
, 
AR_BTCOEX_WL_LNA_TIMEOUT
, 0x3D090);

890 i‡(
mci
->
c⁄fig
 & 
ATH_MCI_CONFIG_CONCUR_TX
) {

891 
	`REG_RMW_FIELD
(
ah
, 
AR_BTCOEX_CTRL2
,

892 
AR_BTCOEX_CTRL2_DESC_BASED_TXPWR_ENABLE
, 0);

893 
	`REG_RMW_FIELD
(
ah
, 
AR_BTCOEX_CTRL2
,

894 
AR_BTCOEX_CTRL2_TXPWR_THRESH
, 0x7f);

895 
	`REG_RMW_FIELD
(
ah
, 
AR_BTCOEX_CTRL
,

896 
AR_BTCOEX_CTRL_REDUCE_TXPWR
, 0);

897 
i
 = 0; i < 8; i++)

898 
	`REG_WRITE
(
ah
, 
	`AR_BTCOEX_MAX_TXPWR
(
i
), 0x7f7f7f7f);

901 
ªgvÆ
 = 
	`MS
(
mci
->
c⁄fig
, 
ATH_MCI_CONFIG_CLK_DIV
);

902 
	`REG_RMW_FIELD
(
ah
, 
AR_MCI_TX_CTRL
, 
AR_MCI_TX_CTRL_CLK_DIV
, 
ªgvÆ
);

903 
	`REG_SET_BIT
(
ah
, 
AR_BTCOEX_CTRL
, 
AR_BTCOEX_CTRL_MCI_MODE_EN
);

906 
ªgvÆ
 = 
	`REG_READ
(
ah
, 
AR_MCI_COMMAND2
);

907 
ªgvÆ
 |
	`SM
(1, 
AR_MCI_COMMAND2_RESET_TX
);

908 
	`REG_WRITE
(
ah
, 
AR_MCI_COMMAND2
, 
ªgvÆ
);

910 
	`udñay
(1);

912 
ªgvÆ
 &~
	`SM
(1, 
AR_MCI_COMMAND2_RESET_TX
);

913 
	`REG_WRITE
(
ah
, 
AR_MCI_COMMAND2
, 
ªgvÆ
);

915 i‡(
is_fuŒ_¶ìp
) {

916 
	`¨9003_mci_muã_bt
(
ah
);

917 
	`udñay
(100);

921 
	`¨9003_mci_check_gpm_off£t
(
ah
);

923 
ªgvÆ
 |
	`SM
(1, 
AR_MCI_COMMAND2_RESET_RX
);

924 
	`REG_WRITE
(
ah
, 
AR_MCI_COMMAND2
, 
ªgvÆ
);

925 
	`udñay
(1);

926 
ªgvÆ
 &~
	`SM
(1, 
AR_MCI_COMMAND2_RESET_RX
);

927 
	`REG_WRITE
(
ah
, 
AR_MCI_COMMAND2
, 
ªgvÆ
);

929 
	`¨9003_mci_gë_√xt_gpm_off£t
(
ah
, 
åue
, 
NULL
);

931 
	`REG_WRITE
(
ah
, 
AR_MCI_MSG_ATTRIBUTES_TABLE
,

932 (
	`SM
(0xe801, 
AR_MCI_MSG_ATTRIBUTES_TABLE_INVALID_HDR
) |

933 
	`SM
(0x0000, 
AR_MCI_MSG_ATTRIBUTES_TABLE_CHECKSUM
)));

935 
	`REG_CLR_BIT
(
ah
, 
AR_MCI_TX_CTRL
,

936 
AR_MCI_TX_CTRL_DISABLE_LNA_UPDATE
);

938 
	`¨9003_mci_ob£rv©i⁄_£t_up
(
ah
);

940 
mci
->
ªady
 = 
åue
;

941 
	`¨9003_mci_¥ï_öãrÁ˚
(
ah
);

943 i‡(
	`AR_SREV_9565
(
ah
))

944 
	`REG_RMW_FIELD
(
ah
, 
AR_MCI_DBG_CNT_CTRL
,

945 
AR_MCI_DBG_CNT_CTRL_ENABLE
, 0);

946 i‡(
í_öt
)

947 
	`¨9003_mci_íabÀ_öãºu±
(
ah
);

950 
	}
}

952 
	$¨9003_mci_°›_bt
(
©h_hw
 *
ah
, 
boﬁ
 
ßve_fuŒ¶ìp
)

954 
©h9k_hw_mci
 *
mci_hw
 = &
ah
->
btc€x_hw
.
mci
;

956 
	`¨9003_mci_dißbÀ_öãºu±
(
ah
);

958 i‡(
mci_hw
->
ªady
 && !
ßve_fuŒ¶ìp
) {

959 
	`¨9003_mci_muã_bt
(
ah
);

960 
	`udñay
(20);

961 
	`REG_WRITE
(
ah
, 
AR_BTCOEX_CTRL
, 0);

964 
mci_hw
->
bt_°©e
 = 
MCI_BT_SLEEP
;

965 
mci_hw
->
ªady
 = 
Ál£
;

966 
	}
}

968 
	$¨9003_mci_£nd_2g5g_°©us
(
©h_hw
 *
ah
, 
boﬁ
 
waô_d⁄e
)

970 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

971 
u32
 
√w_Êags
, 
to_£t
, 
to_˛ór
;

973 i‡(!
mci
->
upd©e_2g5g
 || (mci->
bt_°©e
 =
MCI_BT_SLEEP
))

976 i‡(
mci
->
is_2g
) {

977 
√w_Êags
 = 
MCI_2G_FLAGS
;

978 
to_˛ór
 = 
MCI_2G_FLAGS_CLEAR_MASK
;

979 
to_£t
 = 
MCI_2G_FLAGS_SET_MASK
;

981 
√w_Êags
 = 
MCI_5G_FLAGS
;

982 
to_˛ór
 = 
MCI_5G_FLAGS_CLEAR_MASK
;

983 
to_£t
 = 
MCI_5G_FLAGS_SET_MASK
;

986 i‡(
to_˛ór
)

987 
	`¨9003_mci_£nd_c€x_bt_Êags
(
ah
, 
waô_d⁄e
,

988 
MCI_GPM_COEX_BT_FLAGS_CLEAR
,

989 
to_˛ór
);

990 i‡(
to_£t
)

991 
	`¨9003_mci_£nd_c€x_bt_Êags
(
ah
, 
waô_d⁄e
,

992 
MCI_GPM_COEX_BT_FLAGS_SET
,

993 
to_£t
);

994 
	}
}

996 
	$¨9003_mci_queue_un£¡_gpm
(
©h_hw
 *
ah
, 
u8
 
hódî
,

997 
u32
 *
∑ylﬂd
, 
boﬁ
 
queue
)

999 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

1000 
u8
 
ty≥
, 
›code
;

1003 i‡(
hódî
 !
MCI_GPM
)

1006 
ty≥
 = 
	`MCI_GPM_TYPE
(
∑ylﬂd
);

1007 
›code
 = 
	`MCI_GPM_OPCODE
(
∑ylﬂd
);

1009 i‡(
ty≥
 !
MCI_GPM_COEX_AGENT
)

1012 
›code
) {

1013 
MCI_GPM_COEX_BT_UPDATE_FLAGS
:

1014 i‡(*(((
u8
 *)
∑ylﬂd
Ë+ 
MCI_GPM_COEX_B_BT_FLAGS_OP
) ==

1015 
MCI_GPM_COEX_BT_FLAGS_READ
)

1018 
mci
->
upd©e_2g5g
 = 
queue
;

1021 
MCI_GPM_COEX_WLAN_CHANNELS
:

1022 
mci
->
wœn_ch™√ls_upd©e
 = 
queue
;

1024 
MCI_GPM_COEX_HALT_BT_GPM
:

1025 i‡(*(((
u8
 *)
∑ylﬂd
Ë+ 
MCI_GPM_COEX_B_HALT_STATE
) ==

1026 
MCI_GPM_COEX_BT_GPM_UNHALT
) {

1027 
mci
->
unhÆt_bt_gpm
 = 
queue
;

1029 i‡(!
queue
)

1030 
mci
->
hÆãd_bt_gpm
 = 
Ál£
;

1033 i‡(*(((
u8
 *)
∑ylﬂd
Ë+ 
MCI_GPM_COEX_B_HALT_STATE
) ==

1034 
MCI_GPM_COEX_BT_GPM_HALT
) {

1036 
mci
->
hÆãd_bt_gpm
 = !
queue
;

1043 
	}
}

1045 
	$¨9003_mci_2g5g_swôch
(
©h_hw
 *
ah
, 
boﬁ
 
f‹˚
)

1047 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

1049 i‡(!
mci
->
upd©e_2g5g
 && !
f‹˚
)

1052 i‡(
mci
->
is_2g
) {

1053 
	`¨9003_mci_£nd_2g5g_°©us
(
ah
, 
åue
);

1054 
	`¨9003_mci_£nd_ a_å™s„r
(
ah
, 
åue
);

1055 
	`udñay
(5);

1057 
	`REG_CLR_BIT
(
ah
, 
AR_MCI_TX_CTRL
,

1058 
AR_MCI_TX_CTRL_DISABLE_LNA_UPDATE
);

1059 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_GLB_CONTROL
,

1060 
AR_BTCOEX_CTRL_BT_OWN_SPDT_CTRL
);

1062 i‡(!(
mci
->
c⁄fig
 & 
ATH_MCI_CONFIG_DISABLE_OSLA
))

1063 
	`¨9003_mci_o¶a_£tup
(
ah
, 
åue
);

1065 i‡(
	`AR_SREV_9462
(
ah
))

1066 
	`REG_WRITE
(
ah
, 
AR_SELFGEN_MASK
, 0x02);

1068 
	`¨9003_mci_£nd_ a_èke
(
ah
, 
åue
);

1069 
	`udñay
(5);

1071 
	`REG_SET_BIT
(
ah
, 
AR_MCI_TX_CTRL
,

1072 
AR_MCI_TX_CTRL_DISABLE_LNA_UPDATE
);

1073 
	`REG_SET_BIT
(
ah
, 
AR_PHY_GLB_CONTROL
,

1074 
AR_BTCOEX_CTRL_BT_OWN_SPDT_CTRL
);

1076 
	`¨9003_mci_o¶a_£tup
(
ah
, 
Ál£
);

1077 
	`¨9003_mci_£nd_2g5g_°©us
(
ah
, 
åue
);

1079 
	}
}

1081 
boﬁ
 
	$¨9003_mci_£nd_mesßge
(
©h_hw
 *
ah
, 
u8
 
hódî
, 
u32
 
Êag
,

1082 
u32
 *
∑ylﬂd
, 
u8
 
Àn
, 
boﬁ
 
waô_d⁄e
,

1083 
boﬁ
 
check_bt
)

1085 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1086 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

1087 
boﬁ
 
msg_£¡
 = 
Ál£
;

1088 
u32
 
ªgvÆ
;

1089 
u32
 
ßved_mci_öt_í
;

1090 
i
;

1092 
ßved_mci_öt_í
 = 
	`REG_READ
(
ah
, 
AR_MCI_INTERRUPT_EN
);

1093 
ªgvÆ
 = 
	`REG_READ
(
ah
, 
AR_BTCOEX_CTRL
);

1095 i‡((
ªgvÆ
 =0xdódbìfË|| !‘egvÆ & 
AR_BTCOEX_CTRL_MCI_MODE_EN
)) {

1096 
	`©h_dbg
(
comm⁄
, 
MCI
,

1098 
hódî
, (
ah
->
powî_mode
 =
ATH9K_PM_FULL_SLEEP
) ? 1 : 0);

1099 
	`¨9003_mci_queue_un£¡_gpm
(
ah
, 
hódî
, 
∑ylﬂd
, 
åue
);

1100  
Ál£
;

1101 } i‡(
check_bt
 && (
mci
->
bt_°©e
 =
MCI_BT_SLEEP
)) {

1102 
	`©h_dbg
(
comm⁄
, 
MCI
,

1104 
hódî
);

1105 
	`¨9003_mci_queue_un£¡_gpm
(
ah
, 
hódî
, 
∑ylﬂd
, 
åue
);

1106  
Ál£
;

1109 i‡(
waô_d⁄e
)

1110 
	`REG_WRITE
(
ah
, 
AR_MCI_INTERRUPT_EN
, 0);

1114 
	`REG_WRITE
(
ah
, 
AR_MCI_INTERRUPT_RAW
,

1115 (
AR_MCI_INTERRUPT_SW_MSG_DONE
 |

1116 
AR_MCI_INTERRUPT_MSG_FAIL_MASK
));

1118 i‡(
∑ylﬂd
) {

1119 
i
 = 0; (ò* 4Ë< 
Àn
; i++)

1120 
	`REG_WRITE
(
ah
, (
AR_MCI_TX_PAYLOAD0
 + 
i
 * 4),

1121 *(
∑ylﬂd
 + 
i
));

1124 
	`REG_WRITE
(
ah
, 
AR_MCI_COMMAND0
,

1125 (
	`SM
((
Êag
 & 
MCI_FLAG_DISABLE_TIMESTAMP
),

1126 
AR_MCI_COMMAND0_DISABLE_TIMESTAMP
) |

1127 
	`SM
(
Àn
, 
AR_MCI_COMMAND0_LEN
) |

1128 
	`SM
(
hódî
, 
AR_MCI_COMMAND0_HEADER
)));

1130 i‡(
waô_d⁄e
 &&

1131 !(
	`¨9003_mci_waô_f‹_öãºu±
(
ah
, 
AR_MCI_INTERRUPT_RAW
,

1132 
AR_MCI_INTERRUPT_SW_MSG_DONE
, 500)))

1133 
	`¨9003_mci_queue_un£¡_gpm
(
ah
, 
hódî
, 
∑ylﬂd
, 
åue
);

1135 
	`¨9003_mci_queue_un£¡_gpm
(
ah
, 
hódî
, 
∑ylﬂd
, 
Ál£
);

1136 
msg_£¡
 = 
åue
;

1139 i‡(
waô_d⁄e
)

1140 
	`REG_WRITE
(
ah
, 
AR_MCI_INTERRUPT_EN
, 
ßved_mci_öt_í
);

1142  
msg_£¡
;

1143 
	}
}

1144 
EXPORT_SYMBOL
(
¨9003_mci_£nd_mesßge
);

1146 
	$¨9003_mci_öô_ˇl_ªq
(
©h_hw
 *
ah
, 
boﬁ
 *
is_ªußbÀ
)

1148 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1149 
©h9k_hw_mci
 *
mci_hw
 = &
ah
->
btc€x_hw
.
mci
;

1150 
u32
 
∂d
[4] = {0, 0, 0, 0};

1152 i‡((
mci_hw
->
bt_°©e
 !
MCI_BT_AWAKE
) ||

1153 (
mci_hw
->
c⁄fig
 & 
ATH_MCI_CONFIG_DISABLE_MCI_CAL
))

1156 
	`MCI_GPM_SET_CAL_TYPE
(
∂d
, 
MCI_GPM_WLAN_CAL_REQ
);

1157 
∂d
[
MCI_GPM_WLAN_CAL_W_SEQUENCE
] = 
mci_hw
->
wœn_ˇl_£q
++;

1159 
	`¨9003_mci_£nd_mesßge
(
ah
, 
MCI_GPM
, 0, 
∂d
, 16, 
åue
, 
Ál£
);

1161 i‡(
	`¨9003_mci_waô_f‹_gpm
(
ah
, 
MCI_GPM_BT_CAL_GRANT
, 0, 50000)) {

1162 
	`©h_dbg
(
comm⁄
, 
MCI
, "MCI BT_CAL_GRANTÑeceived\n");

1164 *
is_ªußbÀ
 = 
Ál£
;

1165 
	`©h_dbg
(
comm⁄
, 
MCI
, "MCI BT_CAL_GRANTÇotÑeceived\n");

1167 
	}
}

1169 
	$¨9003_mci_öô_ˇl_d⁄e
(
©h_hw
 *
ah
)

1171 
©h9k_hw_mci
 *
mci_hw
 = &
ah
->
btc€x_hw
.
mci
;

1172 
u32
 
∂d
[4] = {0, 0, 0, 0};

1174 i‡((
mci_hw
->
bt_°©e
 !
MCI_BT_AWAKE
) ||

1175 (
mci_hw
->
c⁄fig
 & 
ATH_MCI_CONFIG_DISABLE_MCI_CAL
))

1178 
	`MCI_GPM_SET_CAL_TYPE
(
∂d
, 
MCI_GPM_WLAN_CAL_DONE
);

1179 
∂d
[
MCI_GPM_WLAN_CAL_W_SEQUENCE
] = 
mci_hw
->
wœn_ˇl_d⁄e
++;

1180 
	`¨9003_mci_£nd_mesßge
(
ah
, 
MCI_GPM
, 0, 
∂d
, 16, 
åue
, 
Ál£
);

1181 
	}
}

1183 
	$¨9003_mci_£tup
(
©h_hw
 *
ah
, 
u32
 
gpm_addr
, *
gpm_buf
,

1184 
u16
 
Àn
, 
u32
 
sched_addr
)

1186 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

1188 
mci
->
gpm_addr
 = gpm_addr;

1189 
mci
->
gpm_buf
 = gpm_buf;

1190 
mci
->
gpm_Àn
 = 
Àn
;

1191 
mci
->
sched_addr
 = sched_addr;

1193  
	`¨9003_mci_ª£t
(
ah
, 
åue
,Årue,Årue);

1194 
	}
}

1195 
EXPORT_SYMBOL
(
¨9003_mci_£tup
);

1197 
	$¨9003_mci_˛ónup
(
©h_hw
 *
ah
)

1200 
	`REG_WRITE
(
ah
, 
AR_BTCOEX_CTRL
, 0x00);

1201 
	`¨9003_mci_dißbÀ_öãºu±
(
ah
);

1202 
	}
}

1203 
EXPORT_SYMBOL
(
¨9003_mci_˛ónup
);

1205 
u32
 
	$¨9003_mci_°©e
(
©h_hw
 *
ah
, 
u32
 
°©e_ty≥
)

1207 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

1208 
u32
 
vÆue
 = 0, 
tsf
;

1209 
u8
 
quîy_ty≥
;

1211 
°©e_ty≥
) {

1212 
MCI_STATE_ENABLE
:

1213 i‡(
mci
->
ªady
) {

1214 
vÆue
 = 
	`REG_READ
(
ah
, 
AR_BTCOEX_CTRL
);

1216 i‡((
vÆue
 == 0xdeadbeef) || (value == 0xffffffff))

1217 
vÆue
 = 0;

1219 
vÆue
 &
AR_BTCOEX_CTRL_MCI_MODE_EN
;

1221 
MCI_STATE_LAST_SCHD_MSG_OFFSET
:

1222 
vÆue
 = 
	`MS
(
	`REG_READ
(
ah
, 
AR_MCI_RX_STATUS
),

1223 
AR_MCI_RX_LAST_SCHD_MSG_INDEX
);

1225 
vÆue
 <<= 4;

1227 
MCI_STATE_REMOTE_SLEEP
:

1228 
vÆue
 = 
	`MS
(
	`REG_READ
(
ah
, 
AR_MCI_RX_STATUS
),

1229 
AR_MCI_RX_REMOTE_SLEEP
) ?

1230 
MCI_BT_SLEEP
 : 
MCI_BT_AWAKE
;

1232 
MCI_STATE_SET_BT_AWAKE
:

1233 
mci
->
bt_°©e
 = 
MCI_BT_AWAKE
;

1234 
	`¨9003_mci_£nd_c€x_vîsi⁄_quîy
(
ah
, 
åue
);

1235 
	`¨9003_mci_£nd_c€x_wœn_ch™√ls
(
ah
, 
åue
);

1237 i‡(
mci
->
unhÆt_bt_gpm
)

1238 
	`¨9003_mci_£nd_c€x_hÆt_bt_gpm
(
ah
, 
Ál£
, 
åue
);

1240 
	`¨9003_mci_2g5g_swôch
(
ah
, 
Ál£
);

1242 
MCI_STATE_RESET_REQ_WAKE
:

1243 
	`¨9003_mci_ª£t_ªq_wakeup
(
ah
);

1244 
mci
->
upd©e_2g5g
 = 
åue
;

1246 i‡(
mci
->
c⁄fig
 & 
ATH_MCI_CONFIG_MCI_OBS_MASK
) {

1248 i‡((
	`REG_READ
(
ah
, 
AR_GLB_GPIO_CONTROL
) &

1249 
ATH_MCI_CONFIG_MCI_OBS_GPIO
) !=

1250 
ATH_MCI_CONFIG_MCI_OBS_GPIO
) {

1251 
	`¨9003_mci_ob£rv©i⁄_£t_up
(
ah
);

1255 
MCI_STATE_SEND_WLAN_COEX_VERSION
:

1256 
	`¨9003_mci_£nd_c€x_vîsi⁄_ª•⁄£
(
ah
, 
åue
);

1258 
MCI_STATE_SEND_VERSION_QUERY
:

1259 
	`¨9003_mci_£nd_c€x_vîsi⁄_quîy
(
ah
, 
åue
);

1261 
MCI_STATE_SEND_STATUS_QUERY
:

1262 
quîy_ty≥
 = 
MCI_GPM_COEX_QUERY_BT_TOPOLOGY
;

1263 
	`¨9003_mci_£nd_c€x_bt_°©us_quîy
(
ah
, 
åue
, 
quîy_ty≥
);

1265 
MCI_STATE_RECOVER_RX
:

1266 
tsf
 = 
	`©h9k_hw_gëtsf32
(
ah
);

1267 i‡((
tsf
 - 
mci
->
œ°_ªcovîy
Ë<
MCI_RECOVERY_DUR_TSF
) {

1268 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
MCI
,

1272 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
MCI
, "(MCI) RECOVER RX\n");

1273 
mci
->
œ°_ªcovîy
 = 
tsf
;

1274 
	`¨9003_mci_¥ï_öãrÁ˚
(
ah
);

1275 
mci
->
quîy_bt
 = 
åue
;

1276 
mci
->
√ed_Êush_btöfo
 = 
åue
;

1277 
	`¨9003_mci_£nd_c€x_wœn_ch™√ls
(
ah
, 
åue
);

1278 
	`¨9003_mci_2g5g_swôch
(
ah
, 
Ál£
);

1280 
MCI_STATE_NEED_FTP_STOMP
:

1281 
vÆue
 = !(
mci
->
c⁄fig
 & 
ATH_MCI_CONFIG_DISABLE_FTP_STOMP
);

1283 
MCI_STATE_NEED_FLUSH_BT_INFO
:

1284 
vÆue
 = (!
mci
->
unhÆt_bt_gpm
 && mci->
√ed_Êush_btöfo
) ? 1 : 0;

1285 
mci
->
√ed_Êush_btöfo
 = 
Ál£
;

1291  
vÆue
;

1292 
	}
}

1293 
EXPORT_SYMBOL
(
¨9003_mci_°©e
);

1295 
	$¨9003_mci_bt_gaö_˘æ
(
©h_hw
 *
ah
)

1297 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1298 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

1300 
	`©h_dbg
(
comm⁄
, 
MCI
, "Give LNAánd SPDT controlÅo BT\n");

1302 
	`¨9003_mci_£nd_ a_èke
(
ah
, 
åue
);

1303 
	`udñay
(50);

1305 
	`REG_SET_BIT
(
ah
, 
AR_PHY_GLB_CONTROL
, 
AR_BTCOEX_CTRL_BT_OWN_SPDT_CTRL
);

1306 
mci
->
is_2g
 = 
Ál£
;

1307 
mci
->
upd©e_2g5g
 = 
åue
;

1308 
	`¨9003_mci_£nd_2g5g_°©us
(
ah
, 
åue
);

1311 
mci
->
upd©e_2g5g
 = 
åue
;

1312 
	}
}

1314 
	$¨9003_mci_£t_powî_awake
(
©h_hw
 *
ah
)

1316 
u32
 
btc€x_˘æ2
, 
düg_sw
;

1317 
i
;

1318 
u8
 
 a_˘æ
, 
bt_¶ìp
;

1320 
i
 = 0; i < 
AH_WAIT_TIMEOUT
; i++) {

1321 
btc€x_˘æ2
 = 
	`REG_READ
(
ah
, 
AR_BTCOEX_CTRL2
);

1322 i‡(
btc€x_˘æ2
 != 0xdeadbeef)

1324 
	`udñay
(
AH_TIME_QUANTUM
);

1326 
	`REG_WRITE
(
ah
, 
AR_BTCOEX_CTRL2
, (
btc€x_˘æ2
 | 
	`BIT
(23)));

1328 
i
 = 0; i < 
AH_WAIT_TIMEOUT
; i++) {

1329 
düg_sw
 = 
	`REG_READ
(
ah
, 
AR_DIAG_SW
);

1330 i‡(
düg_sw
 != 0xdeadbeef)

1332 
	`udñay
(
AH_TIME_QUANTUM
);

1334 
	`REG_WRITE
(
ah
, 
AR_DIAG_SW
, (
düg_sw
 | 
	`BIT
(27) | BIT(19) | BIT(18)));

1335 
 a_˘æ
 = 
	`REG_READ
(
ah
, 
AR_OBS_BUS_CTRL
) & 0x3;

1336 
bt_¶ìp
 = 
	`MS
(
	`REG_READ
(
ah
, 
AR_MCI_RX_STATUS
), 
AR_MCI_RX_REMOTE_SLEEP
);

1338 
	`REG_WRITE
(
ah
, 
AR_BTCOEX_CTRL2
, 
btc€x_˘æ2
);

1339 
	`REG_WRITE
(
ah
, 
AR_DIAG_SW
, 
düg_sw
);

1341 i‡(
bt_¶ìp
 && (
 a_˘æ
 == 2)) {

1342 
	`REG_SET_BIT
(
ah
, 
AR_BTCOEX_RC
, 0x1);

1343 
	`REG_CLR_BIT
(
ah
, 
AR_BTCOEX_RC
, 0x1);

1344 
	`udñay
(50);

1346 
	}
}

1348 
	$¨9003_mci_check_gpm_off£t
(
©h_hw
 *
ah
)

1350 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1351 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

1352 
u32
 
off£t
;

1357 
off£t
 = 
	`MS
(
	`REG_READ
(
ah
, 
AR_MCI_GPM_1
), 
AR_MCI_GPM_WRITE_PTR
);

1358 i‡(
mci
->
gpm_idx
 =
off£t
)

1360 
	`©h_dbg
(
comm⁄
, 
MCI
, "GPM cached writeÖointer mismatch %d %d\n",

1361 
mci
->
gpm_idx
, 
off£t
);

1362 
mci
->
quîy_bt
 = 
åue
;

1363 
mci
->
√ed_Êush_btöfo
 = 
åue
;

1364 
mci
->
gpm_idx
 = 0;

1365 
	}
}

1367 
u32
 
	$¨9003_mci_gë_√xt_gpm_off£t
(
©h_hw
 *
ah
, 
boﬁ
 
fú°
, 
u32
 *
m‹e
)

1369 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

1370 
u32
 
off£t
, 
m‹e_gpm
 = 0, 
gpm_±r
;

1372 i‡(
fú°
) {

1373 
gpm_±r
 = 
	`MS
(
	`REG_READ
(
ah
, 
AR_MCI_GPM_1
), 
AR_MCI_GPM_WRITE_PTR
);

1375 i‡(
gpm_±r
 >
mci
->
gpm_Àn
)

1376 
gpm_±r
 = 0;

1378 
mci
->
gpm_idx
 = 
gpm_±r
;

1379  
gpm_±r
;

1391 
	`REG_WRITE
(
ah
, 
AR_MCI_INTERRUPT_RX_MSG_RAW
,

1392 
AR_MCI_INTERRUPT_RX_MSG_GPM
);

1394 
gpm_±r
 = 
	`MS
(
	`REG_READ
(
ah
, 
AR_MCI_GPM_1
), 
AR_MCI_GPM_WRITE_PTR
);

1395 
off£t
 = 
gpm_±r
;

1397 i‡(!
off£t
)

1398 
off£t
 = 
mci
->
gpm_Àn
 - 1;

1399 i‡(
off£t
 >
mci
->
gpm_Àn
) {

1400 i‡(
off£t
 != 0xFFFF)

1401 
off£t
 = 0;

1403 
off£t
--;

1406 i‡((
off£t
 =0xFFFFË|| (
gpm_±r
 =
mci
->
gpm_idx
)) {

1407 
off£t
 = 
MCI_GPM_INVALID
;

1408 
m‹e_gpm
 = 
MCI_GPM_NOMORE
;

1409 
out
;

1412 
u32
 
ãmp_ödex
;

1416 i‡(
off£t
 !
mci
->
gpm_idx
)

1417 
m‹e_gpm
 = 
MCI_GPM_MORE
;

1419 
m‹e_gpm
 = 
MCI_GPM_NOMORE
;

1421 
ãmp_ödex
 = 
mci
->
gpm_idx
;

1423 i‡(
ãmp_ödex
 >
mci
->
gpm_Àn
)

1424 
ãmp_ödex
 = 0;

1426 
mci
->
gpm_idx
++;

1428 i‡(
mci
->
gpm_idx
 >mci->
gpm_Àn
)

1429 
mci
->
gpm_idx
 = 0;

1431 i‡(
	`¨9003_mci_is_gpm_vÆid
(
ah
, 
ãmp_ödex
)) {

1432 
off£t
 = 
ãmp_ödex
;

1436 i‡(
m‹e_gpm
 =
MCI_GPM_NOMORE
) {

1437 
off£t
 = 
MCI_GPM_INVALID
;

1442 i‡(
off£t
 !
MCI_GPM_INVALID
)

1443 
off£t
 <<= 4;

1444 
out
:

1445 i‡(
m‹e
)

1446 *
m‹e
 = 
m‹e_gpm
;

1448  
off£t
;

1449 
	}
}

1450 
EXPORT_SYMBOL
(
¨9003_mci_gë_√xt_gpm_off£t
);

1452 
	$¨9003_mci_£t_bt_vîsi⁄
(
©h_hw
 *
ah
, 
u8
 
maj‹
, u8 
mö‹
)

1454 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

1456 
mci
->
bt_vî_maj‹
 = 
maj‹
;

1457 
mci
->
bt_vî_mö‹
 = 
mö‹
;

1458 
mci
->
bt_vîsi⁄_known
 = 
åue
;

1459 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
MCI
, "MCI BT version set: %d.%d\n",

1460 
mci
->
bt_vî_maj‹
, mci->
bt_vî_mö‹
);

1461 
	}
}

1462 
EXPORT_SYMBOL
(
¨9003_mci_£t_bt_vîsi⁄
);

1464 
	$¨9003_mci_£nd_wœn_ch™√ls
(
©h_hw
 *
ah
)

1466 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

1468 
mci
->
wœn_ch™√ls_upd©e
 = 
åue
;

1469 
	`¨9003_mci_£nd_c€x_wœn_ch™√ls
(
ah
, 
åue
);

1470 
	}
}

1471 
EXPORT_SYMBOL
(
¨9003_mci_£nd_wœn_ch™√ls
);

1473 
u16
 
	$¨9003_mci_gë_max_txpowî
(
©h_hw
 *
ah
, 
u8
 
˘lmode
)

1475 i‡(!
ah
->
btc€x_hw
.
mci
.
c⁄cur_tx
)

1476 
out
;

1478 i‡(
˘lmode
 =
CTL_2GHT20
)

1479  
ATH_BTCOEX_HT20_MAX_TXPOWER
;

1480 i‡(
˘lmode
 =
CTL_2GHT40
)

1481  
ATH_BTCOEX_HT40_MAX_TXPOWER
;

1483 
out
:

1485 
	}
}

	@ar9003_mci.h

17 #i‚de‡
AR9003_MCI_H


18 
	#AR9003_MCI_H


	)

20 
	#MCI_FLAG_DISABLE_TIMESTAMP
 0x00000001

	)

21 
	#MCI_RECOVERY_DUR_TSF
 (100 * 1000Ë

	)

24 
	#MCI_GPM_COEX_MAJOR_VERSION_DEFAULT
 3

	)

25 
	#MCI_GPM_COEX_MINOR_VERSION_DEFAULT
 0

	)

28 
	#MCI_GPM_COEX_MAJOR_VERSION_WLAN
 3

	)

29 
	#MCI_GPM_COEX_MINOR_VERSION_WLAN
 0

	)

31 
	emci_gpm_c€x_quîy_ty≥
 {

32 
	mMCI_GPM_COEX_QUERY_BT_ALL_INFO
 = 
BIT
(0),

33 
	mMCI_GPM_COEX_QUERY_BT_TOPOLOGY
 = 
BIT
(1),

34 
	mMCI_GPM_COEX_QUERY_BT_DEBUG
 = 
BIT
(2),

37 
	emci_gpm_c€x_hÆt_bt_gpm
 {

38 
	mMCI_GPM_COEX_BT_GPM_UNHALT
,

39 
	mMCI_GPM_COEX_BT_GPM_HALT


42 
	emci_gpm_c€x_bt_upd©e_Êags_›
 {

43 
	mMCI_GPM_COEX_BT_FLAGS_READ
,

44 
	mMCI_GPM_COEX_BT_FLAGS_SET
,

45 
	mMCI_GPM_COEX_BT_FLAGS_CLEAR


48 
	#MCI_NUM_BT_CHANNELS
 79

	)

50 
	#MCI_BT_MCI_FLAGS_UPDATE_CORR
 0x00000002

	)

51 
	#MCI_BT_MCI_FLAGS_UPDATE_HDR
 0x00000004

	)

52 
	#MCI_BT_MCI_FLAGS_UPDATE_PLD
 0x00000008

	)

53 
	#MCI_BT_MCI_FLAGS_LNA_CTRL
 0x00000010

	)

54 
	#MCI_BT_MCI_FLAGS_DEBUG
 0x00000020

	)

55 
	#MCI_BT_MCI_FLAGS_SCHED_MSG
 0x00000040

	)

56 
	#MCI_BT_MCI_FLAGS_CONT_MSG
 0x00000080

	)

57 
	#MCI_BT_MCI_FLAGS_COEX_GPM
 0x00000100

	)

58 
	#MCI_BT_MCI_FLAGS_CPU_INT_MSG
 0x00000200

	)

59 
	#MCI_BT_MCI_FLAGS_MCI_MODE
 0x00000400

	)

60 
	#MCI_BT_MCI_FLAGS_AR9462_MODE
 0x00001000

	)

61 
	#MCI_BT_MCI_FLAGS_OTHER
 0x00010000

	)

63 
	#MCI_DEFAULT_BT_MCI_FLAGS
 0x00011dde

	)

65 
	#MCI_TOGGLE_BT_MCI_FLAGS
 (
MCI_BT_MCI_FLAGS_UPDATE_CORR
 | \

66 
MCI_BT_MCI_FLAGS_UPDATE_HDR
 | \

67 
MCI_BT_MCI_FLAGS_UPDATE_PLD
 | \

68 
MCI_BT_MCI_FLAGS_MCI_MODE
)

	)

70 
	#MCI_2G_FLAGS_CLEAR_MASK
 0x00000000

	)

71 
	#MCI_2G_FLAGS_SET_MASK
 
MCI_TOGGLE_BT_MCI_FLAGS


	)

72 
	#MCI_2G_FLAGS
 
MCI_DEFAULT_BT_MCI_FLAGS


	)

74 
	#MCI_5G_FLAGS_CLEAR_MASK
 
MCI_TOGGLE_BT_MCI_FLAGS


	)

75 
	#MCI_5G_FLAGS_SET_MASK
 0x00000000

	)

76 
	#MCI_5G_FLAGS
 (
MCI_DEFAULT_BT_MCI_FLAGS
 & \

77 ~
MCI_TOGGLE_BT_MCI_FLAGS
)

	)

82 
	#ATH_MCI_CONFIG_CONCUR_TX
 0x00000003

	)

83 
	#ATH_MCI_CONFIG_MCI_OBS_MCI
 0x00000004

	)

84 
	#ATH_MCI_CONFIG_MCI_OBS_TXRX
 0x00000008

	)

85 
	#ATH_MCI_CONFIG_MCI_OBS_BT
 0x00000010

	)

86 
	#ATH_MCI_CONFIG_DISABLE_MCI_CAL
 0x00000020

	)

87 
	#ATH_MCI_CONFIG_DISABLE_OSLA
 0x00000040

	)

88 
	#ATH_MCI_CONFIG_DISABLE_FTP_STOMP
 0x00000080

	)

89 
	#ATH_MCI_CONFIG_AGGR_THRESH
 0x00000700

	)

90 
	#ATH_MCI_CONFIG_AGGR_THRESH_S
 8

	)

91 
	#ATH_MCI_CONFIG_DISABLE_AGGR_THRESH
 0x00000800

	)

92 
	#ATH_MCI_CONFIG_CLK_DIV
 0x00003000

	)

93 
	#ATH_MCI_CONFIG_CLK_DIV_S
 12

	)

94 
	#ATH_MCI_CONFIG_DISABLE_TUNING
 0x00004000

	)

95 
	#ATH_MCI_CONFIG_MCI_WEIGHT_DBG
 0x40000000

	)

96 
	#ATH_MCI_CONFIG_DISABLE_MCI
 0x80000000

	)

98 
	#ATH_MCI_CONFIG_MCI_OBS_MASK
 (
ATH_MCI_CONFIG_MCI_OBS_MCI
 | \

99 
ATH_MCI_CONFIG_MCI_OBS_TXRX
 | \

100 
ATH_MCI_CONFIG_MCI_OBS_BT
)

	)

101 
	#ATH_MCI_CONFIG_MCI_OBS_GPIO
 0x0000002F

	)

103 
	emci_mesßge_hódî
 {

104 
	mMCI_LNA_CTRL
 = 0x10,

105 
	mMCI_CONT_NACK
 = 0x20,

106 
	mMCI_CONT_INFO
 = 0x30,

107 
	mMCI_CONT_RST
 = 0x40,

108 
	mMCI_SCHD_INFO
 = 0x50,

109 
	mMCI_CPU_INT
 = 0x60,

110 
	mMCI_SYS_WAKING
 = 0x70,

111 
	mMCI_GPM
 = 0x80,

112 
	mMCI_LNA_INFO
 = 0x90,

113 
	mMCI_LNA_STATE
 = 0x94,

114 
	mMCI_LNA_TAKE
 = 0x98,

115 
	mMCI_LNA_TRANS
 = 0x9c,

116 
	mMCI_SYS_SLEEPING
 = 0xa0,

117 
	mMCI_REQ_WAKE
 = 0xc0,

118 
	mMCI_DEBUG_16
 = 0xfe,

119 
	mMCI_REMOTE_RESET
 = 0xff

122 
	e©h_mci_gpm_c€x_¥ofûe_ty≥
 {

123 
	mMCI_GPM_COEX_PROFILE_UNKNOWN
,

124 
	mMCI_GPM_COEX_PROFILE_RFCOMM
,

125 
	mMCI_GPM_COEX_PROFILE_A2DP
,

126 
	mMCI_GPM_COEX_PROFILE_HID
,

127 
	mMCI_GPM_COEX_PROFILE_BNEP
,

128 
	mMCI_GPM_COEX_PROFILE_VOICE
,

129 
	mMCI_GPM_COEX_PROFILE_A2DPVO
,

130 
	mMCI_GPM_COEX_PROFILE_MAX


135 
	mMCI_GPM_COEX_W_GPM_PAYLOAD
 = 1,

136 
	mMCI_GPM_COEX_B_GPM_TYPE
 = 4,

137 
	mMCI_GPM_COEX_B_GPM_OPCODE
 = 5,

139 
	mMCI_GPM_WLAN_CAL_W_SEQUENCE
 = 2,

143 
	mMCI_GPM_COEX_B_MAJOR_VERSION
 = 6,

144 
	mMCI_GPM_COEX_B_MINOR_VERSION
 = 7,

146 
	mMCI_GPM_COEX_B_BT_BITMAP
 = 6,

147 
	mMCI_GPM_COEX_B_WLAN_BITMAP
 = 7,

149 
	mMCI_GPM_COEX_B_HALT_STATE
 = 6,

151 
	mMCI_GPM_COEX_B_CHANNEL_MAP
 = 6,

153 
	mMCI_GPM_COEX_B_PROFILE_TYPE
 = 6,

154 
	mMCI_GPM_COEX_B_PROFILE_LINKID
 = 7,

155 
	mMCI_GPM_COEX_B_PROFILE_STATE
 = 8,

156 
	mMCI_GPM_COEX_B_PROFILE_ROLE
 = 9,

157 
	mMCI_GPM_COEX_B_PROFILE_RATE
 = 10,

158 
	mMCI_GPM_COEX_B_PROFILE_VOTYPE
 = 11,

159 
	mMCI_GPM_COEX_H_PROFILE_T
 = 12,

160 
	mMCI_GPM_COEX_B_PROFILE_W
 = 14,

161 
	mMCI_GPM_COEX_B_PROFILE_A
 = 15,

163 
	mMCI_GPM_COEX_B_STATUS_TYPE
 = 6,

164 
	mMCI_GPM_COEX_B_STATUS_LINKID
 = 7,

165 
	mMCI_GPM_COEX_B_STATUS_STATE
 = 8,

167 
	mMCI_GPM_COEX_W_BT_FLAGS
 = 6,

168 
	mMCI_GPM_COEX_B_BT_FLAGS_OP
 = 10

171 
	emci_gpm_subty≥
 {

172 
	mMCI_GPM_BT_CAL_REQ
 = 0,

173 
	mMCI_GPM_BT_CAL_GRANT
 = 1,

174 
	mMCI_GPM_BT_CAL_DONE
 = 2,

175 
	mMCI_GPM_WLAN_CAL_REQ
 = 3,

176 
	mMCI_GPM_WLAN_CAL_GRANT
 = 4,

177 
	mMCI_GPM_WLAN_CAL_DONE
 = 5,

178 
	mMCI_GPM_COEX_AGENT
 = 0x0c,

179 
	mMCI_GPM_RSVD_PATTERN
 = 0xfe,

180 
	mMCI_GPM_RSVD_PATTERN32
 = 0xfefefefe,

181 
	mMCI_GPM_BT_DEBUG
 = 0xff

184 
	emci_bt_°©e
 {

185 
	mMCI_BT_SLEEP
,

186 
	mMCI_BT_AWAKE
,

187 
	mMCI_BT_CAL_START
,

188 
	mMCI_BT_CAL


192 
	emci_°©e_ty≥
 {

193 
	mMCI_STATE_ENABLE
,

194 
	mMCI_STATE_SET_BT_AWAKE
,

195 
	mMCI_STATE_LAST_SCHD_MSG_OFFSET
,

196 
	mMCI_STATE_REMOTE_SLEEP
,

197 
	mMCI_STATE_RESET_REQ_WAKE
,

198 
	mMCI_STATE_SEND_WLAN_COEX_VERSION
,

199 
	mMCI_STATE_SEND_VERSION_QUERY
,

200 
	mMCI_STATE_SEND_STATUS_QUERY
,

201 
	mMCI_STATE_RECOVER_RX
,

202 
	mMCI_STATE_NEED_FTP_STOMP
,

203 
	mMCI_STATE_DEBUG
,

204 
	mMCI_STATE_NEED_FLUSH_BT_INFO
,

205 
	mMCI_STATE_MAX


208 
	emci_gpm_c€x_›code
 {

209 
	mMCI_GPM_COEX_VERSION_QUERY
,

210 
	mMCI_GPM_COEX_VERSION_RESPONSE
,

211 
	mMCI_GPM_COEX_STATUS_QUERY
,

212 
	mMCI_GPM_COEX_HALT_BT_GPM
,

213 
	mMCI_GPM_COEX_WLAN_CHANNELS
,

214 
	mMCI_GPM_COEX_BT_PROFILE_INFO
,

215 
	mMCI_GPM_COEX_BT_STATUS_UPDATE
,

216 
	mMCI_GPM_COEX_BT_UPDATE_FLAGS
,

217 
	mMCI_GPM_COEX_NOOP
,

220 
	#MCI_GPM_NOMORE
 0

	)

221 
	#MCI_GPM_MORE
 1

	)

222 
	#MCI_GPM_INVALID
 0xffffffff

	)

224 
	#MCI_GPM_RECYCLE
(
_p_gpm
) do { \

225 *(((
u32
 *)
_p_gpm
Ë+ 
MCI_GPM_COEX_W_GPM_PAYLOAD
) = \

226 
MCI_GPM_RSVD_PATTERN32
; \

227 } 0)

	)

229 
	#MCI_GPM_TYPE
(
_p_gpm
) \

230 (*(((
u8
 *)(
_p_gpm
)Ë+ 
MCI_GPM_COEX_B_GPM_TYPE
Ë& 0xff)

	)

232 
	#MCI_GPM_OPCODE
(
_p_gpm
) \

233 (*(((
u8
 *)(
_p_gpm
)Ë+ 
MCI_GPM_COEX_B_GPM_OPCODE
Ë& 0xff)

	)

235 
	#MCI_GPM_SET_CAL_TYPE
(
_p_gpm
, 
_ˇl_ty≥
) do { \

236 *(((
u8
 *)(
_p_gpm
)Ë+ 
MCI_GPM_COEX_B_GPM_TYPE
Ë(
_ˇl_ty≥
) & 0xff;\

237 } 0)

	)

239 
	#MCI_GPM_SET_TYPE_OPCODE
(
_p_gpm
, 
_ty≥
, 
_›code
) do { \

240 *(((
u8
 *)(
_p_gpm
)Ë+ 
MCI_GPM_COEX_B_GPM_TYPE
Ë(
_ty≥
) & 0xff; \

241 *(((
u8
 *)(
_p_gpm
)Ë+ 
MCI_GPM_COEX_B_GPM_OPCODE
Ë(
_›code
) & 0xff;\

242 } 0)

	)

244 
	#MCI_GPM_IS_CAL_TYPE
(
_ty≥
Ë((_ty≥Ë<
MCI_GPM_WLAN_CAL_DONE
)

	)

249 
boﬁ
 
¨9003_mci_£nd_mesßge
(
©h_hw
 *
ah
, 
u8
 
hódî
, 
u32
 
Êag
,

250 
u32
 *
∑ylﬂd
, 
u8
 
Àn
, 
boﬁ
 
waô_d⁄e
,

251 
boﬁ
 
check_bt
);

252 
u32
 
¨9003_mci_°©e
(
©h_hw
 *
ah
, u32 
°©e_ty≥
);

253 
¨9003_mci_£tup
(
©h_hw
 *
ah
, 
u32
 
gpm_addr
, *
gpm_buf
,

254 
u16
 
Àn
, 
u32
 
sched_addr
);

255 
¨9003_mci_˛ónup
(
©h_hw
 *
ah
);

256 
¨9003_mci_gë_öãºu±
(
©h_hw
 *
ah
, 
u32
 *
øw_öå
,

257 
u32
 *
rx_msg_öå
);

258 
u32
 
¨9003_mci_gë_√xt_gpm_off£t
(
©h_hw
 *
ah
, 
boﬁ
 
fú°
, u32 *
m‹e
);

259 
¨9003_mci_£t_bt_vîsi⁄
(
©h_hw
 *
ah
, 
u8
 
maj‹
, u8 
mö‹
);

260 
¨9003_mci_£nd_wœn_ch™√ls
(
©h_hw
 *
ah
);

265 #ifde‡
CPTCFG_ATH9K_BTCOEX_SUPPORT


267 
¨9003_mci_°›_bt
(
©h_hw
 *
ah
, 
boﬁ
 
ßve_fuŒ¶ìp
);

268 
¨9003_mci_öô_ˇl_ªq
(
©h_hw
 *
ah
, 
boﬁ
 *
is_ªußbÀ
);

269 
¨9003_mci_öô_ˇl_d⁄e
(
©h_hw
 *
ah
);

270 
¨9003_mci_£t_fuŒ_¶ìp
(
©h_hw
 *
ah
);

271 
¨9003_mci_2g5g_swôch
(
©h_hw
 *
ah
, 
boﬁ
 
f‹˚
);

272 
¨9003_mci_check_bt
(
©h_hw
 *
ah
);

273 
boﬁ
 
¨9003_mci_°¨t_ª£t
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
);

274 
¨9003_mci_íd_ª£t
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
,

275 
©h9k_hw_ˇl_d©a
 *
ˇld©a
);

276 
¨9003_mci_ª£t
(
©h_hw
 *
ah
, 
boﬁ
 
í_öt
, boﬁ 
is_2g
,

277 
boﬁ
 
is_fuŒ_¶ìp
);

278 
¨9003_mci_gë_i§
(
©h_hw
 *
ah
, 
©h9k_öt
 *
masked
);

279 
¨9003_mci_bt_gaö_˘æ
(
©h_hw
 *
ah
);

280 
¨9003_mci_£t_powî_awake
(
©h_hw
 *
ah
);

281 
¨9003_mci_check_gpm_off£t
(
©h_hw
 *
ah
);

282 
u16
 
¨9003_mci_gë_max_txpowî
(
©h_hw
 *
ah
, 
u8
 
˘lmode
);

286 
ölöe
 
	$¨9003_mci_°›_bt
(
©h_hw
 *
ah
, 
boﬁ
 
ßve_fuŒ¶ìp
)

288 
	}
}

289 
ölöe
 
	$¨9003_mci_öô_ˇl_ªq
(
©h_hw
 *
ah
, 
boﬁ
 *
is_ªußbÀ
)

291 
	}
}

292 
ölöe
 
	$¨9003_mci_öô_ˇl_d⁄e
(
©h_hw
 *
ah
)

294 
	}
}

295 
ölöe
 
	$¨9003_mci_£t_fuŒ_¶ìp
(
©h_hw
 *
ah
)

297 
	}
}

298 
ölöe
 
	$¨9003_mci_2g5g_swôch
(
©h_hw
 *
ah
, 
boﬁ
 
waô_d⁄e
)

300 
	}
}

301 
ölöe
 
	$¨9003_mci_check_bt
(
©h_hw
 *
ah
)

303 
	}
}

304 
ölöe
 
boﬁ
 
	$¨9003_mci_°¨t_ª£t
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
)

306  
Ál£
;

307 
	}
}

308 
ölöe
 
	$¨9003_mci_íd_ª£t
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
,

309 
©h9k_hw_ˇl_d©a
 *
ˇld©a
)

312 
	}
}

313 
ölöe
 
	$¨9003_mci_ª£t
(
©h_hw
 *
ah
, 
boﬁ
 
í_öt
, boﬁ 
is_2g
,

314 
boﬁ
 
is_fuŒ_¶ìp
)

316 
	}
}

317 
ölöe
 
	$¨9003_mci_gë_i§
(
©h_hw
 *
ah
, 
©h9k_öt
 *
masked
)

319 
	}
}

320 
ölöe
 
	$¨9003_mci_bt_gaö_˘æ
(
©h_hw
 *
ah
)

322 
	}
}

323 
ölöe
 
	$¨9003_mci_£t_powî_awake
(
©h_hw
 *
ah
)

325 
	}
}

326 
ölöe
 
	$¨9003_mci_check_gpm_off£t
(
©h_hw
 *
ah
)

328 
	}
}

329 
ölöe
 
u16
 
	$¨9003_mci_gë_max_txpowî
(
©h_hw
 *
ah
, 
u8
 
˘lmode
)

332 
	}
}

	@ar9003_paprd.c

17 
	~<löux/exp‹t.h
>

18 
	~"hw.h
"

19 
	~"¨9003_phy.h
"

21 
	$¨9003_∑¥d_íabÀ
(
©h_hw
 *
ah
, 
boﬁ
 
vÆ
)

23 
©h9k_ch™√l
 *
ch™
 = 
ah
->
curch™
;

24 
¨9300_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
¨9300_ìp
;

39 i‡(
	`IS_CHAN_5GHZ
(
ch™
)) {

40 i‡(
ch™
->
ch™√l
 >
UPPER_5G_SUB_BAND_START
) {

41 i‡(
	`À32_to_˝u
(
ìp
->
modÆHódî5G
.
∑pdR©eMaskHt20
)

42 & 
	`BIT
(30))

43 
vÆ
 = 
Ál£
;

44 } i‡(
ch™
->
ch™√l
 >
MID_5G_SUB_BAND_START
) {

45 i‡(
	`À32_to_˝u
(
ìp
->
modÆHódî5G
.
∑pdR©eMaskHt20
)

46 & 
	`BIT
(29))

47 
vÆ
 = 
Ál£
;

49 i‡(
	`À32_to_˝u
(
ìp
->
modÆHódî5G
.
∑pdR©eMaskHt20
)

50 & 
	`BIT
(28))

51 
vÆ
 = 
Ál£
;

55 i‡(
vÆ
) {

56 
ah
->
∑¥d_èbÀ_wrôe_d⁄e
 = 
åue
;

57 
	`©h9k_hw_≠∂y_txpowî
(
ah
, 
ch™
, 
Ál£
);

60 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_CTRL0_B0
,

61 
AR_PHY_PAPRD_CTRL0_PAPRD_ENABLE
, !!
vÆ
);

62 i‡(
ah
->
ˇps
.
tx_chaömask
 & 
	`BIT
(1))

63 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_CTRL0_B1
,

64 
AR_PHY_PAPRD_CTRL0_PAPRD_ENABLE
, !!
vÆ
);

65 i‡(
ah
->
ˇps
.
tx_chaömask
 & 
	`BIT
(2))

66 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_CTRL0_B2
,

67 
AR_PHY_PAPRD_CTRL0_PAPRD_ENABLE
, !!
vÆ
);

68 
	}
}

69 
EXPORT_SYMBOL
(
¨9003_∑¥d_íabÀ
);

71 
	$¨9003_gë_åaöög_powî_2g
(
©h_hw
 *
ah
)

73 
©h9k_ch™√l
 *
ch™
 = 
ah
->
curch™
;

74 
powî
, 
sˇÀ
, 
dñè
;

76 
sˇÀ
 = 
	`¨9003_gë_∑¥d_sˇÀ_Á˘‹
(
ah
, 
ch™
);

78 i‡(
	`AR_SREV_9330
(
ah
Ë|| 
	`AR_SREV_9340
(ah) ||

79 
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9565
(ah)) {

80 
powî
 = 
ah
->
∑¥d_èrgë_powî
 + 2;

81 } i‡(
	`AR_SREV_9485
(
ah
)) {

82 
powî
 = 25;

84 
powî
 = 
	`REG_READ_FIELD
(
ah
, 
AR_PHY_POWERTX_RATE5
,

85 
AR_PHY_POWERTX_RATE5_POWERTXHT20_0
);

87 
dñè
 = 
	`abs
((Ë
ah
->
∑¥d_èrgë_powî
 - (Ë
powî
);

88 i‡(
dñè
 > 
sˇÀ
)

91 i‡(
dñè
 < 4)

92 
powî
 -4 - 
dñè
;

95  
powî
;

96 
	}
}

98 
	$¨9003_gë_åaöög_powî_5g
(
©h_hw
 *
ah
)

100 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

101 
©h9k_ch™√l
 *
ch™
 = 
ah
->
curch™
;

102 
powî
, 
sˇÀ
, 
dñè
;

104 
sˇÀ
 = 
	`¨9003_gë_∑¥d_sˇÀ_Á˘‹
(
ah
, 
ch™
);

106 i‡(
	`IS_CHAN_HT40
(
ch™
))

107 
powî
 = 
	`REG_READ_FIELD
(
ah
, 
AR_PHY_POWERTX_RATE8
,

108 
AR_PHY_POWERTX_RATE8_POWERTXHT40_5
);

110 
powî
 = 
	`REG_READ_FIELD
(
ah
, 
AR_PHY_POWERTX_RATE6
,

111 
AR_PHY_POWERTX_RATE6_POWERTXHT20_5
);

113 
powî
 +
sˇÀ
;

114 
dñè
 = 
	`abs
((Ë
ah
->
∑¥d_èrgë_powî
 - (Ë
powî
);

115 i‡(
dñè
 > 
sˇÀ
)

118 
	`gë_°ªams
(
ah
->
txchaömask
)) {

120 
dñè
 = 6;

123 
dñè
 = 4;

126 
dñè
 = 2;

129 
dñè
 = 0;

130 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "InvalidÅx-chainmask: %u\n",

131 
ah
->
txchaömask
);

134 
powî
 +
dñè
;

135  
powî
;

136 
	}
}

138 
	$¨9003_∑¥d_£tup_sögÀ_èbÀ
(
©h_hw
 *
ah
)

140 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

141 c⁄° 
u32
 
˘æ0
[3] = {

142 
AR_PHY_PAPRD_CTRL0_B0
,

143 
AR_PHY_PAPRD_CTRL0_B1
,

144 
AR_PHY_PAPRD_CTRL0_B2


146 c⁄° 
u32
 
˘æ1
[3] = {

147 
AR_PHY_PAPRD_CTRL1_B0
,

148 
AR_PHY_PAPRD_CTRL1_B1
,

149 
AR_PHY_PAPRD_CTRL1_B2


151 
åaöög_powî
;

152 
i
, 
vÆ
;

153 
u32
 
am2pm_mask
 = 
ah
->
∑¥d_øãmask
;

155 i‡(
	`IS_CHAN_2GHZ
(
ah
->
curch™
))

156 
åaöög_powî
 = 
	`¨9003_gë_åaöög_powî_2g
(
ah
);

158 
åaöög_powî
 = 
	`¨9003_gë_åaöög_powî_5g
(
ah
);

160 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "TrainingÖower: %d, TargetÖower: %d\n",

161 
åaöög_powî
, 
ah
->
∑¥d_èrgë_powî
);

163 i‡(
åaöög_powî
 < 0) {

164 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

166  -
ERANGE
;

168 
ah
->
∑¥d_åaöög_powî
 = 
åaöög_powî
;

170 i‡(
	`AR_SREV_9330
(
ah
))

171 
am2pm_mask
 = 0;

173 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_AM2AM
, 
AR_PHY_PAPRD_AM2AM_MASK
,

174 
ah
->
∑¥d_øãmask
);

175 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_AM2PM
, 
AR_PHY_PAPRD_AM2PM_MASK
,

176 
am2pm_mask
);

177 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_HT40
, 
AR_PHY_PAPRD_HT40_MASK
,

178 
ah
->
∑¥d_øãmask_ht40
);

180 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "PAPRD HT20 mask: 0x%x, HT40 mask: 0x%x\n",

181 
ah
->
∑¥d_øãmask
,áh->
∑¥d_øãmask_ht40
);

183 
i
 = 0; i < 
ah
->
ˇps
.
max_txchaös
; i++) {

184 
	`REG_RMW_FIELD
(
ah
, 
˘æ0
[
i
],

185 
AR_PHY_PAPRD_CTRL0_USE_SINGLE_TABLE_MASK
, 1);

186 
	`REG_RMW_FIELD
(
ah
, 
˘æ1
[
i
],

187 
AR_PHY_PAPRD_CTRL1_ADAPTIVE_AM2PM_ENABLE
, 1);

188 
	`REG_RMW_FIELD
(
ah
, 
˘æ1
[
i
],

189 
AR_PHY_PAPRD_CTRL1_ADAPTIVE_AM2AM_ENABLE
, 1);

190 
	`REG_RMW_FIELD
(
ah
, 
˘æ1
[
i
],

191 
AR_PHY_PAPRD_CTRL1_ADAPTIVE_SCALING_ENA
, 0);

192 
	`REG_RMW_FIELD
(
ah
, 
˘æ1
[
i
],

193 
AR_PHY_PAPRD_CTRL1_PA_GAIN_SCALE_FACT_MASK
, 181);

194 
	`REG_RMW_FIELD
(
ah
, 
˘æ1
[
i
],

195 
AR_PHY_PAPRD_CTRL1_PAPRD_MAG_SCALE_FACT
, 361);

196 
	`REG_RMW_FIELD
(
ah
, 
˘æ1
[
i
],

197 
AR_PHY_PAPRD_CTRL1_ADAPTIVE_SCALING_ENA
, 0);

198 
	`REG_RMW_FIELD
(
ah
, 
˘æ0
[
i
],

199 
AR_PHY_PAPRD_CTRL0_PAPRD_MAG_THRSH
, 3);

202 
	`¨9003_∑¥d_íabÀ
(
ah
, 
Ál£
);

204 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_TRAINER_CNTL1
,

205 
AR_PHY_PAPRD_TRAINER_CNTL1_CF_PAPRD_LB_SKIP
, 0x30);

206 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_TRAINER_CNTL1
,

207 
AR_PHY_PAPRD_TRAINER_CNTL1_CF_PAPRD_LB_ENABLE
, 1);

208 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_TRAINER_CNTL1
,

209 
AR_PHY_PAPRD_TRAINER_CNTL1_CF_PAPRD_TX_GAIN_FORCE
, 1);

210 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_TRAINER_CNTL1
,

211 
AR_PHY_PAPRD_TRAINER_CNTL1_CF_PAPRD_RX_BB_GAIN_FORCE
, 0);

212 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_TRAINER_CNTL1
,

213 
AR_PHY_PAPRD_TRAINER_CNTL1_CF_PAPRD_IQCORR_ENABLE
, 0);

214 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_TRAINER_CNTL1
,

215 
AR_PHY_PAPRD_TRAINER_CNTL1_CF_PAPRD_AGC2_SETTLING
, 28);

216 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_TRAINER_CNTL1
,

217 
AR_PHY_PAPRD_TRAINER_CNTL1_CF_CF_PAPRD_TRAIN_ENABLE
, 1);

219 i‡(
	`AR_SREV_9485
(
ah
)) {

220 
vÆ
 = 148;

222 i‡(
	`IS_CHAN_2GHZ
(
ah
->
curch™
)) {

223 i‡(
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9565
(ah))

224 
vÆ
 = 145;

226 
vÆ
 = 147;

228 
vÆ
 = 137;

232 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_TRAINER_CNTL2
,

233 
AR_PHY_PAPRD_TRAINER_CNTL2_CF_PAPRD_INIT_RX_BB_GAIN
, 
vÆ
);

234 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_TRAINER_CNTL3
,

235 
AR_PHY_PAPRD_TRAINER_CNTL3_CF_PAPRD_FINE_CORR_LEN
, 4);

236 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_TRAINER_CNTL3
,

237 
AR_PHY_PAPRD_TRAINER_CNTL3_CF_PAPRD_COARSE_CORR_LEN
, 4);

238 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_TRAINER_CNTL3
,

239 
AR_PHY_PAPRD_TRAINER_CNTL3_CF_PAPRD_NUM_CORR_STAGES
, 7);

240 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_TRAINER_CNTL3
,

241 
AR_PHY_PAPRD_TRAINER_CNTL3_CF_PAPRD_MIN_LOOPBACK_DEL
, 1);

243 i‡(
	`AR_SREV_9485
(
ah
) ||

244 
	`AR_SREV_9462
(
ah
) ||

245 
	`AR_SREV_9565
(
ah
) ||

246 
	`AR_SREV_9550
(
ah
) ||

247 
	`AR_SREV_9330
(
ah
) ||

248 
	`AR_SREV_9340
(
ah
))

249 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_TRAINER_CNTL3
,

250 
AR_PHY_PAPRD_TRAINER_CNTL3_CF_PAPRD_QUICK_DROP
, -3);

252 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_TRAINER_CNTL3
,

253 
AR_PHY_PAPRD_TRAINER_CNTL3_CF_PAPRD_QUICK_DROP
, -6);

255 
vÆ
 = -10;

257 i‡(
	`IS_CHAN_2GHZ
(
ah
->
curch™
Ë&& !
	`AR_SREV_9462
◊hË&& !
	`AR_SREV_9565
(ah))

258 
vÆ
 = -15;

260 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_TRAINER_CNTL3
,

261 
AR_PHY_PAPRD_TRAINER_CNTL3_CF_PAPRD_ADC_DESIRED_SIZE
,

262 
vÆ
);

263 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_TRAINER_CNTL3
,

264 
AR_PHY_PAPRD_TRAINER_CNTL3_CF_PAPRD_BBTXMIX_DISABLE
, 1);

265 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_TRAINER_CNTL4
,

266 
AR_PHY_PAPRD_TRAINER_CNTL4_CF_PAPRD_SAFETY_DELTA
, 0);

267 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_TRAINER_CNTL4
,

268 
AR_PHY_PAPRD_TRAINER_CNTL4_CF_PAPRD_MIN_CORR
, 400);

269 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_TRAINER_CNTL4
,

270 
AR_PHY_PAPRD_TRAINER_CNTL4_CF_PAPRD_NUM_TRAIN_SAMPLES
,

272 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_PRE_POST_SCALE_0_B0
,

273 
AR_PHY_PAPRD_PRE_POST_SCALING
, 261376);

274 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_PRE_POST_SCALE_1_B0
,

275 
AR_PHY_PAPRD_PRE_POST_SCALING
, 248079);

276 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_PRE_POST_SCALE_2_B0
,

277 
AR_PHY_PAPRD_PRE_POST_SCALING
, 233759);

278 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_PRE_POST_SCALE_3_B0
,

279 
AR_PHY_PAPRD_PRE_POST_SCALING
, 220464);

280 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_PRE_POST_SCALE_4_B0
,

281 
AR_PHY_PAPRD_PRE_POST_SCALING
, 208194);

282 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_PRE_POST_SCALE_5_B0
,

283 
AR_PHY_PAPRD_PRE_POST_SCALING
, 196949);

284 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_PRE_POST_SCALE_6_B0
,

285 
AR_PHY_PAPRD_PRE_POST_SCALING
, 185706);

286 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_PRE_POST_SCALE_7_B0
,

287 
AR_PHY_PAPRD_PRE_POST_SCALING
, 175487);

289 
	}
}

291 
	$¨9003_∑¥d_gë_gaö_èbÀ
(
©h_hw
 *
ah
)

293 
u32
 *
íåy
 = 
ah
->
∑¥d_gaö_èbÀ_íåõs
;

294 
u8
 *
ödex
 = 
ah
->
∑¥d_gaö_èbÀ_ödex
;

295 
u32
 
ªg
 = 
AR_PHY_TXGAIN_TABLE
;

296 
i
;

298 
i
 = 0; i < 
PAPRD_GAIN_TABLE_ENTRIES
; i++) {

299 
íåy
[
i
] = 
	`REG_READ
(
ah
, 
ªg
);

300 
ödex
[
i
] = (
íåy
[i] >> 24) & 0xff;

301 
ªg
 += 4;

303 
	}
}

305 
	$¨9003_gë_desúed_gaö
(
©h_hw
 *
ah
, 
chaö
,

306 
èrgë_powî
)

308 
ﬁpc_gaö_dñè
 = 0, 
˛_gaö_mod
;

309 
Æpha_thîm
, 
Æpha_vﬁt
;

310 
thîm_ˇl_vÆue
, 
vﬁt_ˇl_vÆue
;

311 
thîm_vÆue
, 
vﬁt_vÆue
;

312 
thîmÆ_gaö_c‹r
, 
vﬁège_gaö_c‹r
;

313 
desúed_sˇÀ
, 
desúed_gaö
 = 0;

314 
u32
 
ªg_ﬁpc
 = 0, 
ªg_˛_gaö
 = 0;

316 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_PAPRD_TRAINER_STAT1
,

317 
AR_PHY_PAPRD_TRAINER_STAT1_PAPRD_TRAIN_DONE
);

318 
desúed_sˇÀ
 = 
	`REG_READ_FIELD
(
ah
, 
AR_PHY_TPC_12
,

319 
AR_PHY_TPC_12_DESIRED_SCALE_HT40_5
);

320 
Æpha_thîm
 = 
	`REG_READ_FIELD
(
ah
, 
AR_PHY_TPC_19
,

321 
AR_PHY_TPC_19_ALPHA_THERM
);

322 
Æpha_vﬁt
 = 
	`REG_READ_FIELD
(
ah
, 
AR_PHY_TPC_19
,

323 
AR_PHY_TPC_19_ALPHA_VOLT
);

324 
thîm_ˇl_vÆue
 = 
	`REG_READ_FIELD
(
ah
, 
AR_PHY_TPC_18
,

325 
AR_PHY_TPC_18_THERM_CAL_VALUE
);

326 
vﬁt_ˇl_vÆue
 = 
	`REG_READ_FIELD
(
ah
, 
AR_PHY_TPC_18
,

327 
AR_PHY_TPC_18_VOLT_CAL_VALUE
);

328 
thîm_vÆue
 = 
	`REG_READ_FIELD
(
ah
, 
AR_PHY_BB_THERM_ADC_4
,

329 
AR_PHY_BB_THERM_ADC_4_LATEST_THERM_VALUE
);

330 
vﬁt_vÆue
 = 
	`REG_READ_FIELD
(
ah
, 
AR_PHY_BB_THERM_ADC_4
,

331 
AR_PHY_BB_THERM_ADC_4_LATEST_VOLT_VALUE
);

333 
chaö
) {

335 
ªg_ﬁpc
 = 
AR_PHY_TPC_11_B0
;

336 
ªg_˛_gaö
 = 
AR_PHY_CL_TAB_0
;

339 
ªg_ﬁpc
 = 
AR_PHY_TPC_11_B1
;

340 
ªg_˛_gaö
 = 
AR_PHY_CL_TAB_1
;

343 
ªg_ﬁpc
 = 
AR_PHY_TPC_11_B2
;

344 
ªg_˛_gaö
 = 
AR_PHY_CL_TAB_2
;

347 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
CALIBRATE
,

348 "InvÆid chaömask: %d\n", 
chaö
);

352 
ﬁpc_gaö_dñè
 = 
	`REG_READ_FIELD
(
ah
, 
ªg_ﬁpc
,

353 
AR_PHY_TPC_11_OLPC_GAIN_DELTA
);

354 
˛_gaö_mod
 = 
	`REG_READ_FIELD
(
ah
, 
ªg_˛_gaö
,

355 
AR_PHY_CL_TAB_CL_GAIN_MOD
);

357 i‡(
ﬁpc_gaö_dñè
 >= 128)

358 
ﬁpc_gaö_dñè
 = olpc_gain_delta - 256;

360 
thîmÆ_gaö_c‹r
 = (
Æpha_thîm
 * (
thîm_vÆue
 - 
thîm_ˇl_vÆue
) +

362 
vﬁège_gaö_c‹r
 = (
Æpha_vﬁt
 * (
vﬁt_vÆue
 - 
vﬁt_ˇl_vÆue
) +

364 
desúed_gaö
 = 
èrgë_powî
 - 
ﬁpc_gaö_dñè
 - 
thîmÆ_gaö_c‹r
 -

365 
vﬁège_gaö_c‹r
 + 
desúed_sˇÀ
 + 
˛_gaö_mod
;

367  
desúed_gaö
;

368 
	}
}

370 
	$¨9003_tx_f‹˚_gaö
(
©h_hw
 *
ah
, 
gaö_ödex
)

372 
£À˘ed_gaö_íåy
, 
txbb1dbgaö
, 
txbb6dbgaö
, 
txmxrgaö
;

373 
∑drvgnA
, 
∑drvgnB
, 
∑drvgnC
, 
∑drvgnD
;

374 
u32
 *
gaö_èbÀ_íåõs
 = 
ah
->
∑¥d_gaö_èbÀ_íåõs
;

376 
£À˘ed_gaö_íåy
 = 
gaö_èbÀ_íåõs
[
gaö_ödex
];

377 
txbb1dbgaö
 = 
£À˘ed_gaö_íåy
 & 0x7;

378 
txbb6dbgaö
 = (
£À˘ed_gaö_íåy
 >> 3) & 0x3;

379 
txmxrgaö
 = (
£À˘ed_gaö_íåy
 >> 5) & 0xf;

380 
∑drvgnA
 = (
£À˘ed_gaö_íåy
 >> 9) & 0xf;

381 
∑drvgnB
 = (
£À˘ed_gaö_íåy
 >> 13) & 0xf;

382 
∑drvgnC
 = (
£À˘ed_gaö_íåy
 >> 17) & 0xf;

383 
∑drvgnD
 = (
£À˘ed_gaö_íåy
 >> 21) & 0x3;

385 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TX_FORCED_GAIN
,

386 
AR_PHY_TX_FORCED_GAIN_FORCED_TXBB1DBGAIN
, 
txbb1dbgaö
);

387 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TX_FORCED_GAIN
,

388 
AR_PHY_TX_FORCED_GAIN_FORCED_TXBB6DBGAIN
, 
txbb6dbgaö
);

389 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TX_FORCED_GAIN
,

390 
AR_PHY_TX_FORCED_GAIN_FORCED_TXMXRGAIN
, 
txmxrgaö
);

391 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TX_FORCED_GAIN
,

392 
AR_PHY_TX_FORCED_GAIN_FORCED_PADRVGNA
, 
∑drvgnA
);

393 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TX_FORCED_GAIN
,

394 
AR_PHY_TX_FORCED_GAIN_FORCED_PADRVGNB
, 
∑drvgnB
);

395 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TX_FORCED_GAIN
,

396 
AR_PHY_TX_FORCED_GAIN_FORCED_PADRVGNC
, 
∑drvgnC
);

397 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TX_FORCED_GAIN
,

398 
AR_PHY_TX_FORCED_GAIN_FORCED_PADRVGND
, 
∑drvgnD
);

399 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TX_FORCED_GAIN
,

400 
AR_PHY_TX_FORCED_GAIN_FORCED_ENABLE_PAL
, 0);

401 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TX_FORCED_GAIN
,

402 
AR_PHY_TX_FORCED_GAIN_FORCE_TX_GAIN
, 0);

403 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TPC_1
, 
AR_PHY_TPC_1_FORCED_DAC_GAIN
, 0);

404 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TPC_1
, 
AR_PHY_TPC_1_FORCE_DAC_GAIN
, 0);

405 
	}
}

407 
ölöe
 
	$föd_ex≤
(
num
)

409  
	`Ês
(
num
) - 1;

410 
	}
}

412 
ölöe
 
	$föd_¥›î_sˇÀ
(
ex≤
, 
N
)

414  (
ex≤
 > 
N
) ?Éxpn - 10 : 0;

415 
	}
}

417 
	#NUM_BIN
 23

	)

419 
boﬁ
 
	$¸óã_∑_curve
(
u32
 *
d©a_L
, u32 *
d©a_U
, u32 *
∑_èbÀ
, 
u16
 *
gaö
)

421 
thªsh_accum_˙t
;

422 
x_e°
[
NUM_BIN
 + 1], 
Y
[NUM_BIN + 1], 
thëa
[NUM_BIN + 1];

423 
PA_ö
[
NUM_BIN
 + 1];

424 
B1_tmp
[
NUM_BIN
 + 1], 
B2_tmp
[NUM_BIN + 1];

425 
B1_abs_max
, 
B2_abs_max
;

426 
max_ödex
, 
sˇÀ_Á˘‹
;

427 
y_e°
[
NUM_BIN
 + 1];

428 
x_e°_fxp1_n⁄lö
, 
x_tûde
[
NUM_BIN
 + 1];

429 
x_tûde_abs
;

430 
G_fxp
, 
Y_öãr˚±
, 
‹dî_x_by_y
, 
M
, 
I
, 
L
, 
sum_y_sqr
, 
sum_y_quad
;

431 
Q_x
, 
Q_B1
, 
Q_B2
, 
bëa_øw
, 
Æpha_øw
, 
sˇÀ_B
;

432 
Q_sˇÀ_B
, 
Q_bëa
, 
Q_Æpha
, 
Æpha
, 
bëa
, 
‹dî_1
, 
‹dî_2
;

433 
‹dî1_5x
, 
‹dî2_3x
, 
‹dî1_5x_ªm
, 
‹dî2_3x_ªm
;

434 
y5
, 
y3
, 
tmp
;

435 
thëa_low_bö
 = 0;

436 
i
;

439 
thªsh_accum_˙t
 = 16;

440 
sˇÀ_Á˘‹
 = 5;

441 
max_ödex
 = 0;

442 
	`mem£t
(
thëa
, 0, (theta));

443 
	`mem£t
(
x_e°
, 0, (x_est));

444 
	`mem£t
(
Y
, 0, (Y));

445 
	`mem£t
(
y_e°
, 0, (y_est));

446 
	`mem£t
(
x_tûde
, 0, (x_tilde));

448 
i
 = 0; i < 
NUM_BIN
; i++) {

449 
s32
 
accum_˙t
, 
accum_tx
, 
accum_rx
, 
accum_™g
;

452 
accum_˙t
 = 
d©a_L
[
i
] & 0xffff;

454 i‡(
accum_˙t
 <
thªsh_accum_˙t
)

457 
max_ödex
++;

460 
accum_tx
 = ((
d©a_L
[
i
] >> 16) & 0xffff) |

461 ((
d©a_U
[
i
] & 0x7ff) << 16);

464 
accum_rx
 = ((
d©a_U
[
i
] >> 11) & 0x1f) |

465 ((
d©a_L
[
i
 + 23] & 0xffff) << 5);

468 
accum_™g
 = ((
d©a_L
[
i
 + 23] >> 16) & 0xffff) |

469 ((
d©a_U
[
i
 + 23] & 0x7ff) << 16);

471 
accum_tx
 <<
sˇÀ_Á˘‹
;

472 
accum_rx
 <<
sˇÀ_Á˘‹
;

473 
x_e°
[
max_ödex
] =

474 (((
accum_tx
 + 
accum_˙t
) /áccum_cnt) + 32) >>

475 
sˇÀ_Á˘‹
;

477 
Y
[
max_ödex
] =

478 ((((
accum_rx
 + 
accum_˙t
) /áccum_cnt) + 32) >>

479 
sˇÀ_Á˘‹
) +

480 (1 << 
sˇÀ_Á˘‹
Ë* 
i
 + 16;

482 i‡(
accum_™g
 >= (1 << 26))

483 
accum_™g
 -= 1 << 27;

485 
thëa
[
max_ödex
] =

486 ((
accum_™g
 * (1 << 
sˇÀ_Á˘‹
)Ë+ 
accum_˙t
) /

487 
accum_˙t
;

494 
i
 = 1; i < 6; i++)

495 
thëa_low_bö
 +
thëa
[
i
];

497 
thëa_low_bö
 =Åheta_low_bin / 5;

498 
i
 = 1; i < 6; i++)

499 
thëa
[
i
] = 
thëa_low_bö
;

502 
thëa
[0] = 
thëa_low_bö
;

503 
i
 = 0; i <
max_ödex
; i++)

504 
thëa
[
i
] -
thëa_low_bö
;

506 
x_e°
[0] = 0;

507 
Y
[0] = 0;

508 
sˇÀ_Á˘‹
 = 8;

511 i‡(
x_e°
[6] == x_est[3])

512  
Ál£
;

514 
G_fxp
 =

515 (((
Y
[6] - Y[3]Ë* 1 << 
sˇÀ_Á˘‹
) +

516 (
x_e°
[6] - x_est[3])) / (x_est[6] - x_est[3]);

519 i‡(
G_fxp
 == 0)

520  
Ál£
;

522 
Y_öãr˚±
 =

523 (
G_fxp
 * (
x_e°
[0] - x_est[3]) +

524 (1 << 
sˇÀ_Á˘‹
)Ë/ (1 << sˇÀ_Á˘‹Ë+ 
Y
[3];

526 
i
 = 0; i <
max_ödex
; i++)

527 
y_e°
[
i
] = 
Y
[i] - 
Y_öãr˚±
;

529 
i
 = 0; i <= 3; i++) {

530 
y_e°
[
i
] = i * 32;

531 
x_e°
[
i
] = ((
y_e°
[i] * 1 << 
sˇÀ_Á˘‹
Ë+ 
G_fxp
) / G_fxp;

534 i‡(
y_e°
[
max_ödex
] == 0)

535  
Ál£
;

537 
x_e°_fxp1_n⁄lö
 =

538 
x_e°
[
max_ödex
] - ((1 << 
sˇÀ_Á˘‹
Ë* 
y_e°
[max_index] +

539 
G_fxp
) / G_fxp;

541 
‹dî_x_by_y
 =

542 (
x_e°_fxp1_n⁄lö
 + 
y_e°
[
max_ödex
]) / y_est[max_index];

544 i‡(
‹dî_x_by_y
 == 0)

545 
M
 = 10;

546 i‡(
‹dî_x_by_y
 == 1)

547 
M
 = 9;

549 
M
 = 8;

551 
I
 = (
max_ödex
 > 15) ? 7 : max_index >> 1;

552 
L
 = 
max_ödex
 - 
I
;

553 
sˇÀ_Á˘‹
 = 8;

554 
sum_y_sqr
 = 0;

555 
sum_y_quad
 = 0;

556 
x_tûde_abs
 = 0;

558 
i
 = 0; i <
L
; i++) {

559 
y_sqr
;

560 
y_quad
;

561 
tmp_abs
;

564 i‡(
y_e°
[
i
 + 
I
] == 0)

565  
Ál£
;

567 
x_e°_fxp1_n⁄lö
 =

568 
x_e°
[
i
 + 
I
] - ((1 << 
sˇÀ_Á˘‹
Ë* 
y_e°
[i + I] +

569 
G_fxp
) / G_fxp;

571 
x_tûde
[
i
] =

572 (
x_e°_fxp1_n⁄lö
 * (1 << 
M
Ë+ 
y_e°
[
i
 + 
I
]) / y_est[i +

573 
I
];

574 
x_tûde
[
i
] =

575 (
x_tûde
[
i
] * (1 << 
M
Ë+ 
y_e°
[ò+ 
I
]) / y_est[i + I];

576 
x_tûde
[
i
] =

577 (
x_tûde
[
i
] * (1 << 
M
Ë+ 
y_e°
[ò+ 
I
]) / y_est[i + I];

578 
y_sqr
 =

579 (
y_e°
[
i
 + 
I
] * y_est[i + I] +

580 (
sˇÀ_Á˘‹
 * scale_factor)) / (scale_factor *

581 
sˇÀ_Á˘‹
);

582 
tmp_abs
 = 
	`abs
(
x_tûde
[
i
]);

583 i‡(
tmp_abs
 > 
x_tûde_abs
)

584 
x_tûde_abs
 = 
tmp_abs
;

586 
y_quad
 = 
y_sqr
 * y_sqr;

587 
sum_y_sqr
 = sum_y_sq∏+ 
y_sqr
;

588 
sum_y_quad
 = sum_y_quad + 
y_quad
;

589 
B1_tmp
[
i
] = 
y_sqr
 * (
L
 + 1);

590 
B2_tmp
[
i
] = 
y_sqr
;

593 
B1_abs_max
 = 0;

594 
B2_abs_max
 = 0;

595 
i
 = 0; i <
L
; i++) {

596 
abs_vÆ
;

598 
B1_tmp
[
i
] -
sum_y_sqr
;

599 
B2_tmp
[
i
] = 
sum_y_quad
 - 
sum_y_sqr
 * B2_tmp[i];

601 
abs_vÆ
 = 
	`abs
(
B1_tmp
[
i
]);

602 i‡(
abs_vÆ
 > 
B1_abs_max
)

603 
B1_abs_max
 = 
abs_vÆ
;

605 
abs_vÆ
 = 
	`abs
(
B2_tmp
[
i
]);

606 i‡(
abs_vÆ
 > 
B2_abs_max
)

607 
B2_abs_max
 = 
abs_vÆ
;

610 
Q_x
 = 
	`föd_¥›î_sˇÀ
(
	`föd_ex≤
(
x_tûde_abs
), 10);

611 
Q_B1
 = 
	`föd_¥›î_sˇÀ
(
	`föd_ex≤
(
B1_abs_max
), 10);

612 
Q_B2
 = 
	`föd_¥›î_sˇÀ
(
	`föd_ex≤
(
B2_abs_max
), 10);

614 
bëa_øw
 = 0;

615 
Æpha_øw
 = 0;

616 
i
 = 0; i <
L
; i++) {

617 
x_tûde
[
i
] = x_tûde[i] / (1 << 
Q_x
);

618 
B1_tmp
[
i
] = B1_tmp[i] / (1 << 
Q_B1
);

619 
B2_tmp
[
i
] = B2_tmp[i] / (1 << 
Q_B2
);

620 
bëa_øw
 = bëa_øw + 
B1_tmp
[
i
] * 
x_tûde
[i];

621 
Æpha_øw
 =áÕha_øw + 
B2_tmp
[
i
] * 
x_tûde
[i];

624 
sˇÀ_B
 =

625 ((
sum_y_quad
 / 
sˇÀ_Á˘‹
Ë* (
L
 + 1) -

626 (
sum_y_sqr
 / 
sˇÀ_Á˘‹
) * sum_y_sqr) * scale_factor;

628 
Q_sˇÀ_B
 = 
	`föd_¥›î_sˇÀ
(
	`föd_ex≤
(
	`abs
(
sˇÀ_B
)), 10);

629 
sˇÀ_B
 = sˇÀ_B / (1 << 
Q_sˇÀ_B
);

630 i‡(
sˇÀ_B
 == 0)

631  
Ál£
;

632 
Q_bëa
 = 
	`föd_¥›î_sˇÀ
(
	`föd_ex≤
(
	`abs
(
bëa_øw
)), 10);

633 
Q_Æpha
 = 
	`föd_¥›î_sˇÀ
(
	`föd_ex≤
(
	`abs
(
Æpha_øw
)), 10);

634 
bëa_øw
 = bëa_øw / (1 << 
Q_bëa
);

635 
Æpha_øw
 =áÕha_øw / (1 << 
Q_Æpha
);

636 
Æpha
 = (
Æpha_øw
 << 10Ë/ 
sˇÀ_B
;

637 
bëa
 = (
bëa_øw
 << 10Ë/ 
sˇÀ_B
;

638 
‹dî_1
 = 3 * 
M
 - 
Q_x
 - 
Q_B1
 - 
Q_bëa
 + 10 + 
Q_sˇÀ_B
;

639 
‹dî_2
 = 3 * 
M
 - 
Q_x
 - 
Q_B2
 - 
Q_Æpha
 + 10 + 
Q_sˇÀ_B
;

640 
‹dî1_5x
 = 
‹dî_1
 / 5;

641 
‹dî2_3x
 = 
‹dî_2
 / 3;

642 
‹dî1_5x_ªm
 = 
‹dî_1
 - 5 * 
‹dî1_5x
;

643 
‹dî2_3x_ªm
 = 
‹dî_2
 - 3 * 
‹dî2_3x
;

645 
i
 = 0; i < 
PAPRD_TABLE_SZ
; i++) {

646 
tmp
 = 
i
 * 32;

647 
y5
 = ((
bëa
 * 
tmp
Ë>> 6Ë>> 
‹dî1_5x
;

648 
y5
 = (y5 * 
tmp
Ë>> 
‹dî1_5x
;

649 
y5
 = (y5 * 
tmp
Ë>> 
‹dî1_5x
;

650 
y5
 = (y5 * 
tmp
Ë>> 
‹dî1_5x
;

651 
y5
 = (y5 * 
tmp
Ë>> 
‹dî1_5x
;

652 
y5
 = y5 >> 
‹dî1_5x_ªm
;

653 
y3
 = (
Æpha
 * 
tmp
Ë>> 
‹dî2_3x
;

654 
y3
 = (y3 * 
tmp
Ë>> 
‹dî2_3x
;

655 
y3
 = (y3 * 
tmp
Ë>> 
‹dî2_3x
;

656 
y3
 = y3 >> 
‹dî2_3x_ªm
;

657 
PA_ö
[
i
] = 
y5
 + 
y3
 + (256 * 
tmp
Ë/ 
G_fxp
;

659 i‡(
i
 >= 2) {

660 
tmp
 = 
PA_ö
[
i
] - PA_in[i - 1];

661 i‡(
tmp
 < 0)

662 
PA_ö
[
i
] =

663 
PA_ö
[
i
 - 1] + (PA_in[i - 1] -

664 
PA_ö
[
i
 - 2]);

667 
PA_ö
[
i
] = (PA_in[i] < 1400) ? PA_in[i] : 1400;

670 
bëa_øw
 = 0;

671 
Æpha_øw
 = 0;

673 
i
 = 0; i <
L
; i++) {

674 
thëa_tûde
 =

675 ((
thëa
[
i
 + 
I
] << 
M
Ë+ 
y_e°
[i + I]) / y_est[i + I];

676 
thëa_tûde
 =

677 ((
thëa_tûde
 << 
M
Ë+ 
y_e°
[
i
 + 
I
]) / y_est[i + I];

678 
thëa_tûde
 =

679 ((
thëa_tûde
 << 
M
Ë+ 
y_e°
[
i
 + 
I
]) / y_est[i + I];

680 
bëa_øw
 = bëa_øw + 
B1_tmp
[
i
] * 
thëa_tûde
;

681 
Æpha_øw
 =áÕha_øw + 
B2_tmp
[
i
] * 
thëa_tûde
;

684 
Q_bëa
 = 
	`föd_¥›î_sˇÀ
(
	`föd_ex≤
(
	`abs
(
bëa_øw
)), 10);

685 
Q_Æpha
 = 
	`föd_¥›î_sˇÀ
(
	`föd_ex≤
(
	`abs
(
Æpha_øw
)), 10);

686 
bëa_øw
 = bëa_øw / (1 << 
Q_bëa
);

687 
Æpha_øw
 =áÕha_øw / (1 << 
Q_Æpha
);

689 
Æpha
 = (
Æpha_øw
 << 10Ë/ 
sˇÀ_B
;

690 
bëa
 = (
bëa_øw
 << 10Ë/ 
sˇÀ_B
;

691 
‹dî_1
 = 3 * 
M
 - 
Q_x
 - 
Q_B1
 - 
Q_bëa
 + 10 + 
Q_sˇÀ_B
 + 5;

692 
‹dî_2
 = 3 * 
M
 - 
Q_x
 - 
Q_B2
 - 
Q_Æpha
 + 10 + 
Q_sˇÀ_B
 + 5;

693 
‹dî1_5x
 = 
‹dî_1
 / 5;

694 
‹dî2_3x
 = 
‹dî_2
 / 3;

695 
‹dî1_5x_ªm
 = 
‹dî_1
 - 5 * 
‹dî1_5x
;

696 
‹dî2_3x_ªm
 = 
‹dî_2
 - 3 * 
‹dî2_3x
;

698 
i
 = 0; i < 
PAPRD_TABLE_SZ
; i++) {

699 
PA_™gÀ
;

702 i‡(
i
 == 4)

705 
tmp
 = 
i
 * 32;

706 i‡(
bëa
 > 0)

707 
y5
 = (((
bëa
 * 
tmp
 - 64) >> 6) -

708 (1 << 
‹dî1_5x
)) / (1 << order1_5x);

710 
y5
 = ((((
bëa
 * 
tmp
 - 64) >> 6) +

711 (1 << 
‹dî1_5x
)) / (1 << order1_5x));

713 
y5
 = (y5 * 
tmp
Ë/ (1 << 
‹dî1_5x
);

714 
y5
 = (y5 * 
tmp
Ë/ (1 << 
‹dî1_5x
);

715 
y5
 = (y5 * 
tmp
Ë/ (1 << 
‹dî1_5x
);

716 
y5
 = (y5 * 
tmp
Ë/ (1 << 
‹dî1_5x
);

717 
y5
 = y5 / (1 << 
‹dî1_5x_ªm
);

719 i‡(
bëa
 > 0)

720 
y3
 = (
Æpha
 * 
tmp
 -

721 (1 << 
‹dî2_3x
)) / (1 << order2_3x);

723 
y3
 = (
Æpha
 * 
tmp
 +

724 (1 << 
‹dî2_3x
)) / (1 << order2_3x);

725 
y3
 = (y3 * 
tmp
Ë/ (1 << 
‹dî2_3x
);

726 
y3
 = (y3 * 
tmp
Ë/ (1 << 
‹dî2_3x
);

727 
y3
 = y3 / (1 << 
‹dî2_3x_ªm
);

729 i‡(
i
 < 4) {

730 
PA_™gÀ
 = 0;

732 
PA_™gÀ
 = 
y5
 + 
y3
;

733 i‡(
PA_™gÀ
 < -150)

734 
PA_™gÀ
 = -150;

735 i‡(
PA_™gÀ
 > 150)

736 
PA_™gÀ
 = 150;

739 
∑_èbÀ
[
i
] = ((
PA_ö
[i] & 0x7ffË<< 11Ë+ (
PA_™gÀ
 & 0x7ff);

740 i‡(
i
 == 5) {

741 
PA_™gÀ
 = (PA_angle + 2) >> 1;

742 
∑_èbÀ
[
i
 - 1] = ((
PA_ö
[i - 1] & 0x7ff) << 11) +

743 (
PA_™gÀ
 & 0x7ff);

747 *
gaö
 = 
G_fxp
;

748  
åue
;

749 
	}
}

751 
	$¨9003_∑¥d_p›uœã_sögÀ_èbÀ
(
©h_hw
 *
ah
,

752 
©h9k_hw_ˇl_d©a
 *
ˇld©a
,

753 
chaö
)

755 
u32
 *
∑¥d_èbÀ_vÆ
 = 
ˇld©a
->
∑_èbÀ
[
chaö
];

756 
u32
 
smÆl_sig«l_gaö
 = 
ˇld©a
->smÆl_sig«l_gaö[
chaö
];

757 
u32
 
åaöög_powî
 = 
ah
->
∑¥d_åaöög_powî
;

758 
u32
 
ªg
 = 0;

759 
i
;

761 i‡(
chaö
 == 0)

762 
ªg
 = 
AR_PHY_PAPRD_MEM_TAB_B0
;

763 i‡(
chaö
 == 1)

764 
ªg
 = 
AR_PHY_PAPRD_MEM_TAB_B1
;

765 i‡(
chaö
 == 2)

766 
ªg
 = 
AR_PHY_PAPRD_MEM_TAB_B2
;

768 
i
 = 0; i < 
PAPRD_TABLE_SZ
; i++) {

769 
	`REG_WRITE
(
ah
, 
ªg
, 
∑¥d_èbÀ_vÆ
[
i
]);

770 
ªg
 =Ñeg + 4;

773 i‡(
chaö
 == 0)

774 
ªg
 = 
AR_PHY_PA_GAIN123_B0
;

775 i‡(
chaö
 == 1)

776 
ªg
 = 
AR_PHY_PA_GAIN123_B1
;

778 
ªg
 = 
AR_PHY_PA_GAIN123_B2
;

780 
	`REG_RMW_FIELD
(
ah
, 
ªg
, 
AR_PHY_PA_GAIN123_PA_GAIN1
, 
smÆl_sig«l_gaö
);

782 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_CTRL1_B0
,

783 
AR_PHY_PAPRD_CTRL1_PAPRD_POWER_AT_AM2AM_CAL
,

784 
åaöög_powî
);

786 i‡(
ah
->
ˇps
.
tx_chaömask
 & 
	`BIT
(1))

787 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_CTRL1_B1
,

788 
AR_PHY_PAPRD_CTRL1_PAPRD_POWER_AT_AM2AM_CAL
,

789 
åaöög_powî
);

791 i‡(
ah
->
ˇps
.
tx_chaömask
 & 
	`BIT
(2))

793 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_CTRL1_B2
,

794 
AR_PHY_PAPRD_CTRL1_PAPRD_POWER_AT_AM2AM_CAL
,

795 
åaöög_powî
);

796 
	}
}

797 
EXPORT_SYMBOL
(
¨9003_∑¥d_p›uœã_sögÀ_èbÀ
);

799 
	$¨9003_∑¥d_£tup_gaö_èbÀ
(
©h_hw
 *
ah
, 
chaö
)

801 
i
, 
desúed_gaö
, 
gaö_ödex
;

802 
åaö_powî
 = 
ah
->
∑¥d_åaöög_powî
;

804 
desúed_gaö
 = 
	`¨9003_gë_desúed_gaö
(
ah
, 
chaö
, 
åaö_powî
);

806 
gaö_ödex
 = 0;

807 
i
 = 0; i < 
PAPRD_GAIN_TABLE_ENTRIES
; i++) {

808 i‡(
ah
->
∑¥d_gaö_èbÀ_ödex
[
i
] >
desúed_gaö
)

810 
gaö_ödex
++;

813 
	`¨9003_tx_f‹˚_gaö
(
ah
, 
gaö_ödex
);

815 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_PAPRD_TRAINER_STAT1
,

816 
AR_PHY_PAPRD_TRAINER_STAT1_PAPRD_TRAIN_DONE
);

817 
	}
}

818 
EXPORT_SYMBOL
(
¨9003_∑¥d_£tup_gaö_èbÀ
);

820 
boﬁ
 
	$¨9003_∑¥d_ªåaö_∑_ö
(
©h_hw
 *
ah
,

821 
©h9k_hw_ˇl_d©a
 *
ˇld©a
,

822 
chaö
)

824 
u32
 *
∑_ö
 = 
ˇld©a
->
∑_èbÀ
[
chaö
];

825 
ˇpdiv_off£t
, 
quick_dr›_off£t
;

826 
ˇpdiv2g
, 
quick_dr›
;

827 
cou¡
 = 0;

828 
i
;

830 i‡(!
	`AR_SREV_9485
(
ah
Ë&& !
	`AR_SREV_9330
(ah))

831  
Ál£
;

833 
ˇpdiv2g
 = 
	`REG_READ_FIELD
(
ah
, 
AR_PHY_65NM_CH0_TXRF3
,

834 
AR_PHY_65NM_CH0_TXRF3_CAPDIV2G
);

836 
quick_dr›
 = 
	`REG_READ_FIELD
(
ah
, 
AR_PHY_PAPRD_TRAINER_CNTL3
,

837 
AR_PHY_PAPRD_TRAINER_CNTL3_CF_PAPRD_QUICK_DROP
);

839 i‡(
quick_dr›
)

840 
quick_dr›
 -= 0x40;

842 
i
 = 0; i < 
NUM_BIN
 + 1; i++) {

843 i‡(
∑_ö
[
i
] == 1400)

844 
cou¡
++;

847 i‡(
	`AR_SREV_9485
(
ah
)) {

848 i‡(
∑_ö
[23] < 800) {

849 
ˇpdiv_off£t
 = ()((1000 - 
∑_ö
[23] + 75) / 150);

850 
ˇpdiv2g
 +
ˇpdiv_off£t
;

851 i‡(
ˇpdiv2g
 > 7) {

852 
ˇpdiv2g
 = 7;

853 i‡(
∑_ö
[23] < 600) {

854 
quick_dr›
++;

855 i‡(
quick_dr›
 > 0)

856 
quick_dr›
 = 0;

859 } i‡(
∑_ö
[23] == 1400) {

860 
quick_dr›_off£t
 = 
	`mö_t
(, 
cou¡
 / 3, 2);

861 
quick_dr›
 +
quick_dr›_off£t
;

862 
ˇpdiv2g
 +
quick_dr›_off£t
 / 2;

864 i‡(
ˇpdiv2g
 > 7)

865 
ˇpdiv2g
 = 7;

867 i‡(
quick_dr›
 > 0) {

868 
quick_dr›
 = 0;

869 
ˇpdiv2g
 -
quick_dr›_off£t
;

870 i‡(
ˇpdiv2g
 < 0)

871 
ˇpdiv2g
 = 0;

874  
Ál£
;

876 } i‡(
	`AR_SREV_9330
(
ah
)) {

877 i‡(
∑_ö
[23] < 1000) {

878 
ˇpdiv_off£t
 = (1000 - 
∑_ö
[23]) / 100;

879 
ˇpdiv2g
 +
ˇpdiv_off£t
;

880 i‡(
ˇpdiv_off£t
 > 3) {

881 
ˇpdiv_off£t
 = 1;

882 
quick_dr›
--;

885 
ˇpdiv2g
 +
ˇpdiv_off£t
;

886 i‡(
ˇpdiv2g
 > 6)

887 
ˇpdiv2g
 = 6;

888 i‡(
quick_dr›
 < -4)

889 
quick_dr›
 = -4;

890 } i‡(
∑_ö
[23] == 1400) {

891 i‡(
cou¡
 > 3) {

892 
quick_dr›
++;

893 
ˇpdiv2g
 -
cou¡
 / 4;

894 i‡(
quick_dr›
 > -2)

895 
quick_dr›
 = -2;

897 
ˇpdiv2g
--;

900 i‡(
ˇpdiv2g
 < 0)

901 
ˇpdiv2g
 = 0;

903  
Ál£
;

907 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_65NM_CH0_TXRF3
,

908 
AR_PHY_65NM_CH0_TXRF3_CAPDIV2G
, 
ˇpdiv2g
);

909 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PAPRD_TRAINER_CNTL3
,

910 
AR_PHY_PAPRD_TRAINER_CNTL3_CF_PAPRD_QUICK_DROP
,

911 
quick_dr›
);

913  
åue
;

914 
	}
}

916 
	$¨9003_∑¥d_¸óã_curve
(
©h_hw
 *
ah
,

917 
©h9k_hw_ˇl_d©a
 *
ˇld©a
, 
chaö
)

919 
u16
 *
smÆl_sig«l_gaö
 = &
ˇld©a
->smÆl_sig«l_gaö[
chaö
];

920 
u32
 *
∑_èbÀ
 = 
ˇld©a
->∑_èbÀ[
chaö
];

921 
u32
 *
d©a_L
, *
d©a_U
;

922 
i
, 
°©us
 = 0;

923 
u32
 *
buf
;

924 
u32
 
ªg
;

926 
	`mem£t
(
ˇld©a
->
∑_èbÀ
[
chaö
], 0, (caldata->pa_table[chain]));

928 
buf
 = 
	`kmÆloc
(2 * 48 * (
u32
), 
GFP_KERNEL
);

929 i‡(!
buf
)

930  -
ENOMEM
;

932 
d©a_L
 = &
buf
[0];

933 
d©a_U
 = &
buf
[48];

935 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_CHAN_INFO_MEMORY
,

936 
AR_PHY_CHAN_INFO_MEMORY_CHANINFOMEM_S2_READ
);

938 
ªg
 = 
AR_PHY_CHAN_INFO_TAB_0
;

939 
i
 = 0; i < 48; i++)

940 
d©a_L
[
i
] = 
	`REG_READ
(
ah
, 
ªg
 + (i << 2));

942 
	`REG_SET_BIT
(
ah
, 
AR_PHY_CHAN_INFO_MEMORY
,

943 
AR_PHY_CHAN_INFO_MEMORY_CHANINFOMEM_S2_READ
);

945 
i
 = 0; i < 48; i++)

946 
d©a_U
[
i
] = 
	`REG_READ
(
ah
, 
ªg
 + (i << 2));

948 i‡(!
	`¸óã_∑_curve
(
d©a_L
, 
d©a_U
, 
∑_èbÀ
, 
smÆl_sig«l_gaö
))

949 
°©us
 = -2;

951 i‡(
	`¨9003_∑¥d_ªåaö_∑_ö
(
ah
, 
ˇld©a
, 
chaö
))

952 
°©us
 = -
EINPROGRESS
;

954 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_PAPRD_TRAINER_STAT1
,

955 
AR_PHY_PAPRD_TRAINER_STAT1_PAPRD_TRAIN_DONE
);

957 
	`k‰ì
(
buf
);

959  
°©us
;

960 
	}
}

961 
EXPORT_SYMBOL
(
¨9003_∑¥d_¸óã_curve
);

963 
	$¨9003_∑¥d_öô_èbÀ
(
©h_hw
 *
ah
)

965 
ªt
;

967 
ªt
 = 
	`¨9003_∑¥d_£tup_sögÀ_èbÀ
(
ah
);

968 i‡(
ªt
 < 0)

969  
ªt
;

971 
	`¨9003_∑¥d_gë_gaö_èbÀ
(
ah
);

973 
	}
}

974 
EXPORT_SYMBOL
(
¨9003_∑¥d_öô_èbÀ
);

976 
boﬁ
 
	$¨9003_∑¥d_is_d⁄e
(
©h_hw
 *
ah
)

978 
∑¥d_d⁄e
, 
agc2_pwr
;

980 
∑¥d_d⁄e
 = 
	`REG_READ_FIELD
(
ah
, 
AR_PHY_PAPRD_TRAINER_STAT1
,

981 
AR_PHY_PAPRD_TRAINER_STAT1_PAPRD_TRAIN_DONE
);

983 i‡(
	`AR_SREV_9485
(
ah
))

984 
exô
;

986 i‡(
∑¥d_d⁄e
 == 0x1) {

987 
agc2_pwr
 = 
	`REG_READ_FIELD
(
ah
, 
AR_PHY_PAPRD_TRAINER_STAT1
,

988 
AR_PHY_PAPRD_TRAINER_STAT1_PAPRD_AGC2_PWR
);

990 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
CALIBRATE
,

992 
agc2_pwr
, 
∑¥d_d⁄e
);

998 i‡(
agc2_pwr
 <
PAPRD_IDEAL_AGC2_PWR_RANGE
)

999 
∑¥d_d⁄e
 = 0;

1001 
exô
:

1002  !!
∑¥d_d⁄e
;

1003 
	}
}

1004 
EXPORT_SYMBOL
(
¨9003_∑¥d_is_d⁄e
);

1006 
boﬁ
 
	$¨9003_is_∑¥d_íabÀd
(
©h_hw
 *
ah
)

1008 i‡((
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_PAPRD
Ë&&áh->
c⁄fig
.
íabÀ_∑¥d
)

1009  
åue
;

1011  
Ál£
;

1012 
	}
}

1013 
EXPORT_SYMBOL
(
¨9003_is_∑¥d_íabÀd
);

	@ar9003_phy.c

17 
	~<löux/exp‹t.h
>

18 
	~"hw.h
"

19 
	~"¨9003_phy.h
"

21 c⁄° 
	gfú°ï_èbÀ
[] =

25 c⁄° 
	gcy˝wrThr1_èbÀ
[] =

54 
	$¨9003_hw_£t_ch™√l
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
)

56 
u16
 
bMode
, 
‰acMode
 = 0, 
aModeRefSñ
 = 0;

57 
u32
 
‰eq
, 
ch™_‰ac
, 
div
, 
ch™√lSñ
 = 0, 
ªg32
 = 0;

58 
ch™_˚¡îs
 
˚¡îs
;

59 
lﬂdSy¡hCh™√l
;

61 
	`©h9k_hw_gë_ch™√l_˚¡îs
(
ah
, 
ch™
, &
˚¡îs
);

62 
‰eq
 = 
˚¡îs
.
sy¡h_˚¡î
;

64 i‡(
‰eq
 < 4800) {

65 i‡(
	`AR_SREV_9330
(
ah
)) {

66 i‡(
ah
->
is_˛k_25mhz
)

67 
div
 = 75;

69 
div
 = 120;

71 
ch™√lSñ
 = (
‰eq
 * 4Ë/ 
div
;

72 
ch™_‰ac
 = (((
‰eq
 * 4Ë% 
div
) * 0x20000) / div;

73 
ch™√lSñ
 = (ch™√lSñ << 17Ë| 
ch™_‰ac
;

74 } i‡(
	`AR_SREV_9485
(
ah
Ë|| 
	`AR_SREV_9565
(ah)) {

81 
ch™√lSñ
 = (
‰eq
 * 4) / 120;

82 
ch™_‰ac
 = (((
‰eq
 * 4) % 120) * 0x20000) / 120;

83 
ch™√lSñ
 = (ch™√lSñ << 17Ë| 
ch™_‰ac
;

84 } i‡(
	`AR_SREV_9340
(
ah
)) {

85 i‡(
ah
->
is_˛k_25mhz
) {

86 
ch™√lSñ
 = (
‰eq
 * 2) / 75;

87 
ch™_‰ac
 = (((
‰eq
 * 2) % 75) * 0x20000) / 75;

88 
ch™√lSñ
 = (ch™√lSñ << 17Ë| 
ch™_‰ac
;

90 
ch™√lSñ
 = 
	`CHANSEL_2G
(
‰eq
) >> 1;

92 } i‡(
	`AR_SREV_9550
(
ah
Ë|| 
	`AR_SREV_9531
(ah)) {

93 i‡(
ah
->
is_˛k_25mhz
)

94 
div
 = 75;

96 
div
 = 120;

98 
ch™√lSñ
 = (
‰eq
 * 4Ë/ 
div
;

99 
ch™_‰ac
 = (((
‰eq
 * 4Ë% 
div
) * 0x20000) / div;

100 
ch™√lSñ
 = (ch™√lSñ << 17Ë| 
ch™_‰ac
;

102 
ch™√lSñ
 = 
	`CHANSEL_2G
(
‰eq
);

105 
bMode
 = 1;

107 i‡((
	`AR_SREV_9340
(
ah
Ë|| 
	`AR_SREV_9550
◊hË|| 
	`AR_SREV_9531
(ah)) &&

108 
ah
->
is_˛k_25mhz
) {

109 
ch™√lSñ
 = 
‰eq
 / 75;

110 
ch™_‰ac
 = ((
‰eq
 % 75) * 0x20000) / 75;

111 
ch™√lSñ
 = (ch™√lSñ << 17Ë| 
ch™_‰ac
;

113 
ch™√lSñ
 = 
	`CHANSEL_5G
(
‰eq
);

115 
ch™√lSñ
 >>= 1;

118 
bMode
 = 0;

122 
‰acMode
 = 1;

123 
aModeRefSñ
 = 0;

124 
lﬂdSy¡hCh™√l
 = 0;

126 
ªg32
 = (
bMode
 << 29);

127 
	`REG_WRITE
(
ah
, 
AR_PHY_SYNTH_CONTROL
, 
ªg32
);

130 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_65NM_CH0_SYNTH4
,

131 
AR_PHY_SYNTH4_LONG_SHIFT_SELECT
, 1);

134 
ªg32
 = (
ch™√lSñ
 << 2Ë| (
‰acMode
 << 30) |

135 (
aModeRefSñ
 << 28Ë| (
lﬂdSy¡hCh™√l
 << 31);

136 
	`REG_WRITE
(
ah
, 
AR_PHY_65NM_CH0_SYNTH7
, 
ªg32
);

139 
lﬂdSy¡hCh™√l
 = 1;

140 
ªg32
 = (
ch™√lSñ
 << 2Ë| (
‰acMode
 << 30) |

141 (
aModeRefSñ
 << 28Ë| (
lﬂdSy¡hCh™√l
 << 31);

142 
	`REG_WRITE
(
ah
, 
AR_PHY_65NM_CH0_SYNTH7
, 
ªg32
);

144 
ah
->
curch™
 = 
ch™
;

147 
	}
}

159 
	$¨9003_hw_•ur_môig©e_mrc_cck
(
©h_hw
 *
ah
,

160 
©h9k_ch™√l
 *
ch™
)

162 c⁄° 
u32
 
•ur_‰eq
[4] = { 2420, 2440, 2464, 2480 };

163 
cur_bb_•ur
, 
√g©ive
 = 0, 
cck_•ur_‰eq
;

164 
i
;

165 
ønge
, 
max_•ur_˙ts
, 
sy¡h_‰eq
;

166 
u8
 *
•ur_fbö_±r
 = 
	`¨9003_gë_•ur_ch™_±r
(
ah
, 
	`IS_CHAN_2GHZ
(
ch™
));

173 i‡(
	`AR_SREV_9485
(
ah
Ë|| 
	`AR_SREV_9340
◊hË|| 
	`AR_SREV_9330
(ah) ||

174 
	`AR_SREV_9550
(
ah
)) {

175 i‡(
•ur_fbö_±r
[0] == 0)

177 
max_•ur_˙ts
 = 5;

178 i‡(
	`IS_CHAN_HT40
(
ch™
)) {

179 
ønge
 = 19;

180 i‡(
	`REG_READ_FIELD
(
ah
, 
AR_PHY_GEN_CTRL
,

181 
AR_PHY_GC_DYN2040_PRI_CH
) == 0)

182 
sy¡h_‰eq
 = 
ch™
->
ch™√l
 + 10;

184 
sy¡h_‰eq
 = 
ch™
->
ch™√l
 - 10;

186 
ønge
 = 10;

187 
sy¡h_‰eq
 = 
ch™
->
ch™√l
;

190 
ønge
 = 
	`AR_SREV_9462
(
ah
) ? 5 : 10;

191 
max_•ur_˙ts
 = 4;

192 
sy¡h_‰eq
 = 
ch™
->
ch™√l
;

195 
i
 = 0; i < 
max_•ur_˙ts
; i++) {

196 i‡(
	`AR_SREV_9462
(
ah
Ë&& (
i
 == 0 || i == 3))

199 
√g©ive
 = 0;

200 i‡(
	`AR_SREV_9485
(
ah
Ë|| 
	`AR_SREV_9340
◊hË|| 
	`AR_SREV_9330
(ah) ||

201 
	`AR_SREV_9550
(
ah
))

202 
cur_bb_•ur
 = 
	`©h9k_hw_fbö2‰eq
(
•ur_fbö_±r
[
i
],

203 
	`IS_CHAN_2GHZ
(
ch™
));

205 
cur_bb_•ur
 = 
•ur_‰eq
[
i
];

207 
cur_bb_•ur
 -
sy¡h_‰eq
;

208 i‡(
cur_bb_•ur
 < 0) {

209 
√g©ive
 = 1;

210 
cur_bb_•ur
 = -cur_bb_spur;

212 i‡(
cur_bb_•ur
 < 
ønge
) {

213 
cck_•ur_‰eq
 = ()((
cur_bb_•ur
 << 19) / 11);

215 i‡(
√g©ive
 == 1)

216 
cck_•ur_‰eq
 = -cck_spur_freq;

218 
cck_•ur_‰eq
 = cck_spur_freq & 0xfffff;

220 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_AGC_CONTROL
,

221 
AR_PHY_AGC_CONTROL_YCOK_MAX
, 0x7);

222 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_CCK_SPUR_MIT
,

223 
AR_PHY_CCK_SPUR_MIT_SPUR_RSSI_THR
, 0x7f);

224 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_CCK_SPUR_MIT
,

225 
AR_PHY_CCK_SPUR_MIT_SPUR_FILTER_TYPE
,

227 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_CCK_SPUR_MIT
,

228 
AR_PHY_CCK_SPUR_MIT_USE_CCK_SPUR_MIT
,

230 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_CCK_SPUR_MIT
,

231 
AR_PHY_CCK_SPUR_MIT_CCK_SPUR_FREQ
,

232 
cck_•ur_‰eq
);

238 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_AGC_CONTROL
,

239 
AR_PHY_AGC_CONTROL_YCOK_MAX
, 0x5);

240 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_CCK_SPUR_MIT
,

241 
AR_PHY_CCK_SPUR_MIT_USE_CCK_SPUR_MIT
, 0x0);

242 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_CCK_SPUR_MIT
,

243 
AR_PHY_CCK_SPUR_MIT_CCK_SPUR_FREQ
, 0x0);

244 
	}
}

247 
	$¨9003_hw_•ur_ofdm_˛ór
(
©h_hw
 *
ah
)

249 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TIMING4
,

250 
AR_PHY_TIMING4_ENABLE_SPUR_FILTER
, 0);

251 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TIMING11
,

252 
AR_PHY_TIMING11_SPUR_FREQ_SD
, 0);

253 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TIMING11
,

254 
AR_PHY_TIMING11_SPUR_DELTA_PHASE
, 0);

255 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SFCORR_EXT
,

256 
AR_PHY_SFCORR_EXT_SPUR_SUBCHANNEL_SD
, 0);

257 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TIMING11
,

258 
AR_PHY_TIMING11_USE_SPUR_FILTER_IN_AGC
, 0);

259 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TIMING11
,

260 
AR_PHY_TIMING11_USE_SPUR_FILTER_IN_SELFCOR
, 0);

261 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TIMING4
,

262 
AR_PHY_TIMING4_ENABLE_SPUR_RSSI
, 0);

263 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SPUR_REG
,

264 
AR_PHY_SPUR_REG_EN_VIT_SPUR_RSSI
, 0);

265 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SPUR_REG
,

266 
AR_PHY_SPUR_REG_ENABLE_NF_RSSI_SPUR_MIT
, 0);

268 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SPUR_REG
,

269 
AR_PHY_SPUR_REG_ENABLE_MASK_PPM
, 0);

270 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TIMING4
,

271 
AR_PHY_TIMING4_ENABLE_PILOT_MASK
, 0);

272 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TIMING4
,

273 
AR_PHY_TIMING4_ENABLE_CHAN_MASK
, 0);

274 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PILOT_SPUR_MASK
,

275 
AR_PHY_PILOT_SPUR_MASK_CF_PILOT_MASK_IDX_A
, 0);

276 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SPUR_MASK_A
,

277 
AR_PHY_SPUR_MASK_A_CF_PUNC_MASK_IDX_A
, 0);

278 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_CHAN_SPUR_MASK
,

279 
AR_PHY_CHAN_SPUR_MASK_CF_CHAN_MASK_IDX_A
, 0);

280 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PILOT_SPUR_MASK
,

281 
AR_PHY_PILOT_SPUR_MASK_CF_PILOT_MASK_A
, 0);

282 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_CHAN_SPUR_MASK
,

283 
AR_PHY_CHAN_SPUR_MASK_CF_CHAN_MASK_A
, 0);

284 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SPUR_MASK_A
,

285 
AR_PHY_SPUR_MASK_A_CF_PUNC_MASK_A
, 0);

286 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SPUR_REG
,

287 
AR_PHY_SPUR_REG_MASK_RATE_CNTL
, 0);

288 
	}
}

290 
	$¨9003_hw_•ur_ofdm
(
©h_hw
 *
ah
,

291 
‰eq_off£t
,

292 
•ur_‰eq_sd
,

293 
•ur_dñè_pha£
,

294 
•ur_subch™√l_sd
,

295 
ønge
,

296 
sy¡h_‰eq
)

298 
mask_ödex
 = 0;

301 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TIMING4
,

302 
AR_PHY_TIMING4_ENABLE_SPUR_FILTER
, 0x1);

303 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TIMING11
,

304 
AR_PHY_TIMING11_SPUR_FREQ_SD
, 
•ur_‰eq_sd
);

305 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TIMING11
,

306 
AR_PHY_TIMING11_SPUR_DELTA_PHASE
, 
•ur_dñè_pha£
);

307 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SFCORR_EXT
,

308 
AR_PHY_SFCORR_EXT_SPUR_SUBCHANNEL_SD
, 
•ur_subch™√l_sd
);

309 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TIMING11
,

310 
AR_PHY_TIMING11_USE_SPUR_FILTER_IN_AGC
, 0x1);

312 i‡(!(
	`AR_SREV_9565
(
ah
Ë&& 
ønge
 =10 && 
sy¡h_‰eq
 == 2437))

313 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TIMING11
,

314 
AR_PHY_TIMING11_USE_SPUR_FILTER_IN_SELFCOR
, 0x1);

316 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TIMING4
,

317 
AR_PHY_TIMING4_ENABLE_SPUR_RSSI
, 0x1);

318 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SPUR_REG
,

319 
AR_PHY_SPUR_REG_SPUR_RSSI_THRESH
, 34);

320 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SPUR_REG
,

321 
AR_PHY_SPUR_REG_EN_VIT_SPUR_RSSI
, 1);

323 i‡(!
	`AR_SREV_9340
(
ah
) &&

324 
	`REG_READ_FIELD
(
ah
, 
AR_PHY_MODE
,

325 
AR_PHY_MODE_DYNAMIC
) == 0x1)

326 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SPUR_REG
,

327 
AR_PHY_SPUR_REG_ENABLE_NF_RSSI_SPUR_MIT
, 1);

329 
mask_ödex
 = (
‰eq_off£t
 << 4) / 5;

330 i‡(
mask_ödex
 < 0)

331 
mask_ödex
 = mask_index - 1;

333 
mask_ödex
 = mask_index & 0x7f;

335 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SPUR_REG
,

336 
AR_PHY_SPUR_REG_ENABLE_MASK_PPM
, 0x1);

337 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TIMING4
,

338 
AR_PHY_TIMING4_ENABLE_PILOT_MASK
, 0x1);

339 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TIMING4
,

340 
AR_PHY_TIMING4_ENABLE_CHAN_MASK
, 0x1);

341 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PILOT_SPUR_MASK
,

342 
AR_PHY_PILOT_SPUR_MASK_CF_PILOT_MASK_IDX_A
, 
mask_ödex
);

343 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SPUR_MASK_A
,

344 
AR_PHY_SPUR_MASK_A_CF_PUNC_MASK_IDX_A
, 
mask_ödex
);

345 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_CHAN_SPUR_MASK
,

346 
AR_PHY_CHAN_SPUR_MASK_CF_CHAN_MASK_IDX_A
, 
mask_ödex
);

347 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PILOT_SPUR_MASK
,

348 
AR_PHY_PILOT_SPUR_MASK_CF_PILOT_MASK_A
, 0xc);

349 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_CHAN_SPUR_MASK
,

350 
AR_PHY_CHAN_SPUR_MASK_CF_CHAN_MASK_A
, 0xc);

351 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SPUR_MASK_A
,

352 
AR_PHY_SPUR_MASK_A_CF_PUNC_MASK_A
, 0xa0);

353 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SPUR_REG
,

354 
AR_PHY_SPUR_REG_MASK_RATE_CNTL
, 0xff);

355 
	}
}

357 
	$¨9003_hw_•ur_ofdm_9565
(
©h_hw
 *
ah
,

358 
‰eq_off£t
)

360 
mask_ödex
 = 0;

362 
mask_ödex
 = (
‰eq_off£t
 << 4) / 5;

363 i‡(
mask_ödex
 < 0)

364 
mask_ödex
 = mask_index - 1;

366 
mask_ödex
 = mask_index & 0x7f;

368 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PILOT_SPUR_MASK
,

369 
AR_PHY_PILOT_SPUR_MASK_CF_PILOT_MASK_IDX_B
,

370 
mask_ödex
);

373 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SPUR_MASK_B
,

374 
AR_PHY_SPUR_MASK_A_CF_PUNC_MASK_IDX_A
,

375 
mask_ödex
);

377 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_CHAN_SPUR_MASK
,

378 
AR_PHY_CHAN_SPUR_MASK_CF_CHAN_MASK_IDX_B
,

379 
mask_ödex
);

380 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_PILOT_SPUR_MASK
,

381 
AR_PHY_PILOT_SPUR_MASK_CF_PILOT_MASK_B
, 0xe);

382 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_CHAN_SPUR_MASK
,

383 
AR_PHY_CHAN_SPUR_MASK_CF_CHAN_MASK_B
, 0xe);

386 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SPUR_MASK_B
,

387 
AR_PHY_SPUR_MASK_A_CF_PUNC_MASK_A
, 0xa0);

388 
	}
}

390 
	$¨9003_hw_•ur_ofdm_w‹k
(
©h_hw
 *
ah
,

391 
©h9k_ch™√l
 *
ch™
,

392 
‰eq_off£t
,

393 
ønge
,

394 
sy¡h_‰eq
)

396 
•ur_‰eq_sd
 = 0;

397 
•ur_subch™√l_sd
 = 0;

398 
•ur_dñè_pha£
 = 0;

400 i‡(
	`IS_CHAN_HT40
(
ch™
)) {

401 i‡(
‰eq_off£t
 < 0) {

402 i‡(
	`REG_READ_FIELD
(
ah
, 
AR_PHY_GEN_CTRL
,

403 
AR_PHY_GC_DYN2040_PRI_CH
) == 0x0)

404 
•ur_subch™√l_sd
 = 1;

406 
•ur_subch™√l_sd
 = 0;

408 
•ur_‰eq_sd
 = ((
‰eq_off£t
 + 10) << 9) / 11;

411 i‡(
	`REG_READ_FIELD
(
ah
, 
AR_PHY_GEN_CTRL
,

412 
AR_PHY_GC_DYN2040_PRI_CH
) == 0x0)

413 
•ur_subch™√l_sd
 = 0;

415 
•ur_subch™√l_sd
 = 1;

417 
•ur_‰eq_sd
 = ((
‰eq_off£t
 - 10) << 9) / 11;

421 
•ur_dñè_pha£
 = (
‰eq_off£t
 << 17) / 5;

424 
•ur_subch™√l_sd
 = 0;

425 
•ur_‰eq_sd
 = (
‰eq_off£t
 << 9) /11;

426 
•ur_dñè_pha£
 = (
‰eq_off£t
 << 18) / 5;

429 
•ur_‰eq_sd
 = spur_freq_sd & 0x3ff;

430 
•ur_dñè_pha£
 = spur_delta_phase & 0xfffff;

432 
	`¨9003_hw_•ur_ofdm
(
ah
,

433 
‰eq_off£t
,

434 
•ur_‰eq_sd
,

435 
•ur_dñè_pha£
,

436 
•ur_subch™√l_sd
,

437 
ønge
, 
sy¡h_‰eq
);

438 
	}
}

441 
	$¨9003_hw_•ur_môig©e_ofdm
(
©h_hw
 *
ah
,

442 
©h9k_ch™√l
 *
ch™
)

444 
sy¡h_‰eq
;

445 
ønge
 = 10;

446 
‰eq_off£t
 = 0;

447 
mode
;

448 
u8
* 
•urCh™sPå
;

449 
i
;

450 
¨9300_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
¨9300_ìp
;

452 i‡(
	`IS_CHAN_5GHZ
(
ch™
)) {

453 
•urCh™sPå
 = &(
ìp
->
modÆHódî5G
.
•urCh™s
[0]);

454 
mode
 = 0;

457 
•urCh™sPå
 = &(
ìp
->
modÆHódî2G
.
•urCh™s
[0]);

458 
mode
 = 1;

461 i‡(
•urCh™sPå
[0] == 0)

464 i‡(
	`IS_CHAN_HT40
(
ch™
)) {

465 
ønge
 = 19;

466 i‡(
	`REG_READ_FIELD
(
ah
, 
AR_PHY_GEN_CTRL
,

467 
AR_PHY_GC_DYN2040_PRI_CH
) == 0x0)

468 
sy¡h_‰eq
 = 
ch™
->
ch™√l
 - 10;

470 
sy¡h_‰eq
 = 
ch™
->
ch™√l
 + 10;

472 
ønge
 = 10;

473 
sy¡h_‰eq
 = 
ch™
->
ch™√l
;

476 
	`¨9003_hw_•ur_ofdm_˛ór
(
ah
);

478 
i
 = 0; i < 
AR_EEPROM_MODAL_SPURS
 && 
•urCh™sPå
[i]; i++) {

479 
‰eq_off£t
 = 
	`©h9k_hw_fbö2‰eq
(
•urCh™sPå
[
i
], 
mode
);

480 
‰eq_off£t
 -
sy¡h_‰eq
;

481 i‡(
	`abs
(
‰eq_off£t
Ë< 
ønge
) {

482 
	`¨9003_hw_•ur_ofdm_w‹k
(
ah
, 
ch™
, 
‰eq_off£t
,

483 
ønge
, 
sy¡h_‰eq
);

485 i‡(
	`AR_SREV_9565
(
ah
Ë&& (
i
 < 4)) {

486 
‰eq_off£t
 = 
	`©h9k_hw_fbö2‰eq
(
•urCh™sPå
[
i
 + 1],

487 
mode
);

488 
‰eq_off£t
 -
sy¡h_‰eq
;

489 i‡(
	`abs
(
‰eq_off£t
Ë< 
ønge
)

490 
	`¨9003_hw_•ur_ofdm_9565
(
ah
, 
‰eq_off£t
);

496 
	}
}

498 
	$¨9003_hw_•ur_môig©e
(
©h_hw
 *
ah
,

499 
©h9k_ch™√l
 *
ch™
)

501 i‡(!
	`AR_SREV_9565
(
ah
))

502 
	`¨9003_hw_•ur_môig©e_mrc_cck
(
ah
, 
ch™
);

503 
	`¨9003_hw_•ur_môig©e_ofdm
(
ah
, 
ch™
);

504 
	}
}

506 
u32
 
	$¨9003_hw_compuã_∂l_c⁄åﬁ_soc
(
©h_hw
 *
ah
,

507 
©h9k_ch™√l
 *
ch™
)

509 
u32
 
∂l
;

511 
∂l
 = 
	`SM
(0x5, 
AR_RTC_9300_SOC_PLL_REFDIV
);

513 i‡(
ch™
 && 
	`IS_CHAN_HALF_RATE
(chan))

514 
∂l
 |
	`SM
(0x1, 
AR_RTC_9300_SOC_PLL_CLKSEL
);

515 i‡(
ch™
 && 
	`IS_CHAN_QUARTER_RATE
(chan))

516 
∂l
 |
	`SM
(0x2, 
AR_RTC_9300_SOC_PLL_CLKSEL
);

518 
∂l
 |
	`SM
(0x2c, 
AR_RTC_9300_SOC_PLL_DIV_INT
);

520  
∂l
;

521 
	}
}

523 
u32
 
	$¨9003_hw_compuã_∂l_c⁄åﬁ
(
©h_hw
 *
ah
,

524 
©h9k_ch™√l
 *
ch™
)

526 
u32
 
∂l
;

528 
∂l
 = 
	`SM
(0x5, 
AR_RTC_9300_PLL_REFDIV
);

530 i‡(
ch™
 && 
	`IS_CHAN_HALF_RATE
(chan))

531 
∂l
 |
	`SM
(0x1, 
AR_RTC_9300_PLL_CLKSEL
);

532 i‡(
ch™
 && 
	`IS_CHAN_QUARTER_RATE
(chan))

533 
∂l
 |
	`SM
(0x2, 
AR_RTC_9300_PLL_CLKSEL
);

535 
∂l
 |
	`SM
(0x2c, 
AR_RTC_9300_PLL_DIV
);

537  
∂l
;

538 
	}
}

540 
	$¨9003_hw_£t_ch™√l_ªgs
(
©h_hw
 *
ah
,

541 
©h9k_ch™√l
 *
ch™
)

543 
u32
 
phymode
;

544 
u32
 
íabÀDacFifo
 = 0;

546 
íabÀDacFifo
 =

547 (
	`REG_READ
(
ah
, 
AR_PHY_GEN_CTRL
Ë& 
AR_PHY_GC_ENABLE_DAC_FIFO
);

550 
phymode
 = 
AR_PHY_GC_HT_EN
 | 
AR_PHY_GC_SINGLE_HT_LTF1
 |

551 
AR_PHY_GC_SHORT_GI_40
 | 
íabÀDacFifo
;

554 i‡(
	`IS_CHAN_HT40
(
ch™
)) {

555 
phymode
 |
AR_PHY_GC_DYN2040_EN
;

557 i‡(
	`IS_CHAN_HT40PLUS
(
ch™
))

558 
phymode
 |
AR_PHY_GC_DYN2040_PRI_CH
;

563 
phymode
 |
	`REG_READ
(
ah
, 
AR_PHY_GEN_CTRL
);

565 
phymode
 &~
AR_PHY_GC_GF_DETECT_EN
;

567 
	`REG_WRITE
(
ah
, 
AR_PHY_GEN_CTRL
, 
phymode
);

570 
	`©h9k_hw_£t11nmac2040
(
ah
, 
ch™
);

573 
	`REG_WRITE
(
ah
, 
AR_GTXTO
, 25 << 
AR_GTXTO_TIMEOUT_LIMIT_S
);

575 
	`REG_WRITE
(
ah
, 
AR_CST
, 0xF << 
AR_CST_TIMEOUT_LIMIT_S
);

576 
	}
}

578 
	$¨9003_hw_öô_bb
(
©h_hw
 *
ah
,

579 
©h9k_ch™√l
 *
ch™
)

581 
u32
 
sy¡hDñay
;

588 
sy¡hDñay
 = 
	`REG_READ
(
ah
, 
AR_PHY_RX_DELAY
Ë& 
AR_PHY_RX_DELAY_DELAY
;

591 
	`REG_WRITE
(
ah
, 
AR_PHY_ACTIVE
, 
AR_PHY_ACTIVE_EN
);

592 
	`©h9k_hw_sy¡h_dñay
(
ah
, 
ch™
, 
sy¡hDñay
);

593 
	}
}

595 
	$¨9003_hw_£t_chaö_masks
(
©h_hw
 *
ah
, 
u8
 
rx
, u8 
tx
)

597 i‡(
ah
->
ˇps
.
tx_chaömask
 =5 ||áh->ˇps.
rx_chaömask
 == 5)

598 
	`REG_SET_BIT
(
ah
, 
AR_PHY_ANALOG_SWAP
,

599 
AR_PHY_SWAP_ALT_CHAIN
);

601 
	`REG_WRITE
(
ah
, 
AR_PHY_RX_CHAINMASK
, 
rx
);

602 
	`REG_WRITE
(
ah
, 
AR_PHY_CAL_CHAINMASK
, 
rx
);

604 i‡((
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_APM
Ë&& (
tx
 == 0x7))

605 
tx
 = 3;

607 
	`REG_WRITE
(
ah
, 
AR_SELFGEN_MASK
, 
tx
);

608 
	}
}

613 
	$¨9003_hw_ovîride_öi
(
©h_hw
 *
ah
)

615 
u32
 
vÆ
;

622 
	`REG_SET_BIT
(
ah
, 
AR_DIAG_SW
, (
AR_DIAG_RX_DIS
 | 
AR_DIAG_RX_ABORT
));

631 
vÆ
 = 
	`REG_READ
(
ah
, 
AR_PCU_MISC_MODE2
Ë& (~
AR_ADHOC_MCAST_KEYID_ENABLE
);

632 
vÆ
 |
AR_AGG_WEP_ENABLE_FIX
 |

633 
AR_AGG_WEP_ENABLE
 |

634 
AR_PCU_MISC_MODE2_CFP_IGNORE
;

635 
	`REG_WRITE
(
ah
, 
AR_PCU_MISC_MODE2
, 
vÆ
);

637 i‡(
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9565
(ah)) {

638 
	`REG_WRITE
(
ah
, 
AR_GLB_SWREG_DISCONT_MODE
,

639 
AR_GLB_SWREG_DISCONT_EN_BT_WLAN
);

641 i‡(
	`REG_READ_FIELD
(
ah
, 
AR_PHY_TX_IQCAL_CONTROL_0
,

642 
AR_PHY_TX_IQCAL_CONTROL_0_ENABLE_TXIQ_CAL
))

643 
ah
->
íabÀd_ˇls
 |
TX_IQ_CAL
;

645 
ah
->
íabÀd_ˇls
 &~
TX_IQ_CAL
;

649 i‡(
	`REG_READ
(
ah
, 
AR_PHY_CL_CAL_CTL
Ë& 
AR_PHY_CL_CAL_ENABLE
)

650 
ah
->
íabÀd_ˇls
 |
TX_CL_CAL
;

652 
ah
->
íabÀd_ˇls
 &~
TX_CL_CAL
;

654 i‡(
	`AR_SREV_9340
(
ah
Ë|| 
	`AR_SREV_9531
◊hË|| 
	`AR_SREV_9550
(ah)) {

655 i‡(
ah
->
is_˛k_25mhz
) {

656 
	`REG_WRITE
(
ah
, 
AR_RTC_DERIVED_CLK
, 0x17c << 1);

657 
	`REG_WRITE
(
ah
, 
AR_SLP32_MODE
, 0x0010f3d7);

658 
	`REG_WRITE
(
ah
, 
AR_SLP32_INC
, 0x0001e7ae);

660 
	`REG_WRITE
(
ah
, 
AR_RTC_DERIVED_CLK
, 0x261 << 1);

661 
	`REG_WRITE
(
ah
, 
AR_SLP32_MODE
, 0x0010f400);

662 
	`REG_WRITE
(
ah
, 
AR_SLP32_INC
, 0x0001e800);

664 
	`udñay
(100);

666 
	}
}

668 
	$¨9003_hw_¥og_öi
(
©h_hw
 *
ah
,

669 
¨5416IniAºay
 *
öiAº
,

670 
cﬁumn
)

672 
i
, 
ªgWrôes
 = 0;

675 i‡(!
öiAº
->
ü_¨øy
)

683 i‡(
cﬁumn
 >
öiAº
->
ü_cﬁumns
)

684 
cﬁumn
 = 1;

686 
i
 = 0; i < 
öiAº
->
ü_rows
; i++) {

687 
u32
 
ªg
 = 
	`INI_RA
(
öiAº
, 
i
, 0);

688 
u32
 
vÆ
 = 
	`INI_RA
(
öiAº
, 
i
, 
cﬁumn
);

690 
	`REG_WRITE
(
ah
, 
ªg
, 
vÆ
);

692 
	`DO_DELAY
(
ªgWrôes
);

694 
	}
}

696 
	$¨9550_hw_gë_modes_txgaö_ödex
(
©h_hw
 *
ah
,

697 
©h9k_ch™√l
 *
ch™
)

699 
ªt
;

701 i‡(
	`IS_CHAN_2GHZ
(
ch™
)) {

702 i‡(
	`IS_CHAN_HT40
(
ch™
))

708 i‡(
ch™
->
ch™√l
 <= 5350)

709 
ªt
 = 1;

710 i‡((
ch™
->
ch™√l
 > 5350) && (chan->channel <= 5600))

711 
ªt
 = 3;

713 
ªt
 = 5;

715 i‡(
	`IS_CHAN_HT40
(
ch™
))

716 
ªt
++;

718  
ªt
;

719 
	}
}

721 
	$¨9003_doubÀr_fix
(
©h_hw
 *
ah
)

723 i‡(
	`AR_SREV_9300
(
ah
Ë|| 
	`AR_SREV_9580
◊hË|| 
	`AR_SREV_9550
(ah)) {

724 
	`REG_RMW
(
ah
, 
AR_PHY_65NM_CH0_RXTX2
,

725 1 << 
AR_PHY_65NM_CH0_RXTX2_SYNTHON_MASK_S
 |

726 1 << 
AR_PHY_65NM_CH0_RXTX2_SYNTHOVR_MASK_S
, 0);

727 
	`REG_RMW
(
ah
, 
AR_PHY_65NM_CH1_RXTX2
,

728 1 << 
AR_PHY_65NM_CH0_RXTX2_SYNTHON_MASK_S
 |

729 1 << 
AR_PHY_65NM_CH0_RXTX2_SYNTHOVR_MASK_S
, 0);

730 
	`REG_RMW
(
ah
, 
AR_PHY_65NM_CH2_RXTX2
,

731 1 << 
AR_PHY_65NM_CH0_RXTX2_SYNTHON_MASK_S
 |

732 1 << 
AR_PHY_65NM_CH0_RXTX2_SYNTHOVR_MASK_S
, 0);

734 
	`udñay
(200);

736 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_65NM_CH0_RXTX2
,

737 
AR_PHY_65NM_CH0_RXTX2_SYNTHON_MASK
);

738 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_65NM_CH1_RXTX2
,

739 
AR_PHY_65NM_CH0_RXTX2_SYNTHON_MASK
);

740 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_65NM_CH2_RXTX2
,

741 
AR_PHY_65NM_CH0_RXTX2_SYNTHON_MASK
);

743 
	`udñay
(1);

745 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_65NM_CH0_RXTX2
,

746 
AR_PHY_65NM_CH0_RXTX2_SYNTHON_MASK
, 1);

747 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_65NM_CH1_RXTX2
,

748 
AR_PHY_65NM_CH0_RXTX2_SYNTHON_MASK
, 1);

749 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_65NM_CH2_RXTX2
,

750 
AR_PHY_65NM_CH0_RXTX2_SYNTHON_MASK
, 1);

752 
	`udñay
(200);

754 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_65NM_CH0_SYNTH12
,

755 
AR_PHY_65NM_CH0_SYNTH12_VREFMUL3
, 0xf);

757 
	`REG_RMW
(
ah
, 
AR_PHY_65NM_CH0_RXTX2
, 0,

758 1 << 
AR_PHY_65NM_CH0_RXTX2_SYNTHON_MASK_S
 |

759 1 << 
AR_PHY_65NM_CH0_RXTX2_SYNTHOVR_MASK_S
);

760 
	`REG_RMW
(
ah
, 
AR_PHY_65NM_CH1_RXTX2
, 0,

761 1 << 
AR_PHY_65NM_CH0_RXTX2_SYNTHON_MASK_S
 |

762 1 << 
AR_PHY_65NM_CH0_RXTX2_SYNTHOVR_MASK_S
);

763 
	`REG_RMW
(
ah
, 
AR_PHY_65NM_CH2_RXTX2
, 0,

764 1 << 
AR_PHY_65NM_CH0_RXTX2_SYNTHON_MASK_S
 |

765 1 << 
AR_PHY_65NM_CH0_RXTX2_SYNTHOVR_MASK_S
);

767 
	}
}

769 
	$¨9003_hw_¥o˚ss_öi
(
©h_hw
 *
ah
,

770 
©h9k_ch™√l
 *
ch™
)

772 
ªgWrôes
 = 0, 
i
;

773 
u32
 
modesIndex
;

775 i‡(
	`IS_CHAN_5GHZ
(
ch™
))

776 
modesIndex
 = 
	`IS_CHAN_HT40
(
ch™
) ? 2 : 1;

778 
modesIndex
 = 
	`IS_CHAN_HT40
(
ch™
) ? 3 : 4;

783 
i
 = 0; i < 
ATH_INI_NUM_SPLIT
; i++) {

784 
	`¨9003_hw_¥og_öi
(
ah
, &ah->
öiSOC
[
i
], 
modesIndex
);

785 
	`¨9003_hw_¥og_öi
(
ah
, &ah->
öiMac
[
i
], 
modesIndex
);

786 
	`¨9003_hw_¥og_öi
(
ah
, &ah->
öiBB
[
i
], 
modesIndex
);

787 
	`¨9003_hw_¥og_öi
(
ah
, &ah->
öiRadio
[
i
], 
modesIndex
);

788 i‡(
i
 =
ATH_INI_POST
 && 
	`AR_SREV_9462_20_OR_LATER
(
ah
))

789 
	`¨9003_hw_¥og_öi
(
ah
,

790 &
ah
->
öi_ødio_po°_sys2™t
,

791 
modesIndex
);

794 
	`¨9003_doubÀr_fix
(
ah
);

799 
	`REG_WRITE_ARRAY
(&
ah
->
öiModesRxGaö
, 1, 
ªgWrôes
);

801 i‡(
	`AR_SREV_9462_20_OR_LATER
(
ah
)) {

805 i‡(
	`¨9003_hw_gë_rx_gaö_idx
(
ah
) == 2) {

806 
	`REG_WRITE_ARRAY
(&
ah
->
öi_modes_rxgaö_bb_c‹e
,

807 1, 
ªgWrôes
);

808 
	`REG_WRITE_ARRAY
(&
ah
->
öi_modes_rxgaö_bb_po°ambÀ
,

809 
modesIndex
, 
ªgWrôes
);

815 i‡((
	`¨9003_hw_gë_rx_gaö_idx
(
ah
) == 2) ||

816 (
	`¨9003_hw_gë_rx_gaö_idx
(
ah
) == 3)) {

817 
	`REG_WRITE_ARRAY
(&
ah
->
öi_modes_rxgaö_5g_x a
,

818 
modesIndex
, 
ªgWrôes
);

822 i‡(
	`AR_SREV_9550
(
ah
))

823 
	`REG_WRITE_ARRAY
(&
ah
->
öi_modes_rx_gaö_bounds
, 
modesIndex
,

824 
ªgWrôes
);

829 i‡(
	`AR_SREV_9550
(
ah
Ë|| 
	`AR_SREV_9531
(ah)) {

830 
modes_txgaö_ödex
 = 1;

832 i‡(
	`AR_SREV_9550
(
ah
))

833 
modes_txgaö_ödex
 = 
	`¨9550_hw_gë_modes_txgaö_ödex
(
ah
, 
ch™
);

835 i‡(
modes_txgaö_ödex
 < 0)

836  -
EINVAL
;

838 
	`REG_WRITE_ARRAY
(&
ah
->
öiModesTxGaö
, 
modes_txgaö_ödex
,

839 
ªgWrôes
);

841 
	`REG_WRITE_ARRAY
(&
ah
->
öiModesTxGaö
, 
modesIndex
, 
ªgWrôes
);

848 i‡(
	`IS_CHAN_A_FAST_CLOCK
(
ah
, 
ch™
))

849 
	`REG_WRITE_ARRAY
(&
ah
->
öiModesFa°Clock
,

850 
modesIndex
, 
ªgWrôes
);

855 
	`REG_WRITE_ARRAY
(&
ah
->
öiAddôi⁄Æ
, 1, 
ªgWrôes
);

860 i‡(
ch™
->
ch™√l
 == 2484)

861 
	`¨9003_hw_¥og_öi
(
ah
, &ah->
öiCckfúJ≠™2484
, 1);

863 
ah
->
modes_ödex
 = 
modesIndex
;

864 
	`¨9003_hw_ovîride_öi
(
ah
);

865 
	`¨9003_hw_£t_ch™√l_ªgs
(
ah
, 
ch™
);

866 
	`¨9003_hw_£t_chaö_masks
(
ah
,áh->
rxchaömask
,áh->
txchaömask
);

867 
	`©h9k_hw_≠∂y_txpowî
(
ah
, 
ch™
, 
Ál£
);

870 
	}
}

872 
	$¨9003_hw_£t_rfmode
(
©h_hw
 *
ah
,

873 
©h9k_ch™√l
 *
ch™
)

875 
u32
 
rfMode
 = 0;

877 i‡(
ch™
 =
NULL
)

880 i‡(
	`IS_CHAN_2GHZ
(
ch™
))

881 
rfMode
 |
AR_PHY_MODE_DYNAMIC
;

883 
rfMode
 |
AR_PHY_MODE_OFDM
;

885 i‡(
	`IS_CHAN_A_FAST_CLOCK
(
ah
, 
ch™
))

886 
rfMode
 |(
AR_PHY_MODE_DYNAMIC
 | 
AR_PHY_MODE_DYN_CCK_DISABLE
);

888 i‡(
rfMode
 & (
AR_PHY_MODE_QUARTER
 | 
AR_PHY_MODE_HALF
))

889 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_FRAME_CTL
,

890 
AR_PHY_FRAME_CTL_CF_OVERLAP_WINDOW
, 3);

892 
	`REG_WRITE
(
ah
, 
AR_PHY_MODE
, 
rfMode
);

893 
	}
}

895 
	$¨9003_hw_m¨k_phy_öa˘ive
(
©h_hw
 *
ah
)

897 
	`REG_WRITE
(
ah
, 
AR_PHY_ACTIVE
, 
AR_PHY_ACTIVE_DIS
);

898 
	}
}

900 
	$¨9003_hw_£t_dñè_¶›e
(
©h_hw
 *
ah
,

901 
©h9k_ch™√l
 *
ch™
)

903 
u32
 
c€f_sˇÀd
, 
ds_c€f_exp
, 
ds_c€f_m™
;

904 
u32
 
˛ockMhzSˇÀd
 = 0x64000000;

905 
ch™_˚¡îs
 
˚¡îs
;

911 i‡(
	`IS_CHAN_HALF_RATE
(
ch™
))

912 
˛ockMhzSˇÀd
 = clockMhzScaled >> 1;

913 i‡(
	`IS_CHAN_QUARTER_RATE
(
ch™
))

914 
˛ockMhzSˇÀd
 = clockMhzScaled >> 2;

920 
	`©h9k_hw_gë_ch™√l_˚¡îs
(
ah
, 
ch™
, &
˚¡îs
);

921 
c€f_sˇÀd
 = 
˛ockMhzSˇÀd
 / 
˚¡îs
.
sy¡h_˚¡î
;

923 
	`©h9k_hw_gë_dñè_¶›e_vÆs
(
ah
, 
c€f_sˇÀd
, &
ds_c€f_m™
,

924 &
ds_c€f_exp
);

926 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TIMING3
,

927 
AR_PHY_TIMING3_DSC_MAN
, 
ds_c€f_m™
);

928 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TIMING3
,

929 
AR_PHY_TIMING3_DSC_EXP
, 
ds_c€f_exp
);

935 
c€f_sˇÀd
 = (9 * coef_scaled) / 10;

937 
	`©h9k_hw_gë_dñè_¶›e_vÆs
(
ah
, 
c€f_sˇÀd
, &
ds_c€f_m™
,

938 &
ds_c€f_exp
);

941 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SGI_DELTA
,

942 
AR_PHY_SGI_DSC_MAN
, 
ds_c€f_m™
);

943 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SGI_DELTA
,

944 
AR_PHY_SGI_DSC_EXP
, 
ds_c€f_exp
);

945 
	}
}

947 
boﬁ
 
	$¨9003_hw_rfbus_ªq
(
©h_hw
 *
ah
)

949 
	`REG_WRITE
(
ah
, 
AR_PHY_RFBUS_REQ
, 
AR_PHY_RFBUS_REQ_EN
);

950  
	`©h9k_hw_waô
(
ah
, 
AR_PHY_RFBUS_GRANT
, 
AR_PHY_RFBUS_GRANT_EN
,

951 
AR_PHY_RFBUS_GRANT_EN
, 
AH_WAIT_TIMEOUT
);

952 
	}
}

958 
	$¨9003_hw_rfbus_d⁄e
(
©h_hw
 *
ah
)

960 
u32
 
sy¡hDñay
 = 
	`REG_READ
(
ah
, 
AR_PHY_RX_DELAY
Ë& 
AR_PHY_RX_DELAY_DELAY
;

962 
	`©h9k_hw_sy¡h_dñay
(
ah
,áh->
curch™
, 
sy¡hDñay
);

964 
	`REG_WRITE
(
ah
, 
AR_PHY_RFBUS_REQ
, 0);

965 
	}
}

967 
boﬁ
 
	$¨9003_hw_™i_c⁄åﬁ
(
©h_hw
 *
ah
,

968 
©h9k_™i_cmd
 
cmd
, 
∑øm
)

970 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

971 
©h9k_ch™√l
 *
ch™
 = 
ah
->
curch™
;

972 
¨5416AniSèã
 *
™iSèã
 = &
ah
->
™i
;

973 
s32
 
vÆue
, 
vÆue2
;

975 
cmd
 & 
ah
->
™i_fun˘i⁄
) {

976 
ATH9K_ANI_OFDM_WEAK_SIGNAL_DETECTION
:{

984 
u32
 
⁄
 = 
∑øm
 ? 1 : 0;

986 i‡(
⁄
)

987 
	`REG_SET_BIT
(
ah
, 
AR_PHY_SFCORR_LOW
,

988 
AR_PHY_SFCORR_LOW_USE_SELF_CORR_LOW
);

990 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_SFCORR_LOW
,

991 
AR_PHY_SFCORR_LOW_USE_SELF_CORR_LOW
);

993 i‡(
⁄
 !
™iSèã
->
ofdmWókSigDëe˘
) {

994 
	`©h_dbg
(
comm⁄
, 
ANI
,

996 
ch™
->
ch™√l
,

997 
™iSèã
->
ofdmWókSigDëe˘
 ?

999 
⁄
 ? "on" : "off");

1000 i‡(
⁄
)

1001 
ah
->
°©s
.
a°_™i_ofdm⁄
++;

1003 
ah
->
°©s
.
a°_™i_ofdmoff
++;

1004 
™iSèã
->
ofdmWókSigDëe˘
 = 
⁄
;

1008 
ATH9K_ANI_FIRSTEP_LEVEL
:{

1009 
u32
 
Àvñ
 = 
∑øm
;

1011 i‡(
Àvñ
 >
	`ARRAY_SIZE
(
fú°ï_èbÀ
)) {

1012 
	`©h_dbg
(
comm⁄
, 
ANI
,

1014 
Àvñ
, 
	`ARRAY_SIZE
(
fú°ï_èbÀ
));

1015  
Ál£
;

1022 
vÆue
 = 
fú°ï_èbÀ
[
Àvñ
] -

1023 
fú°ï_èbÀ
[
ATH9K_ANI_FIRSTEP_LVL
] +

1024 
™iSèã
->
öiDef
.
fú°ï
;

1025 i‡(
vÆue
 < 
ATH9K_SIG_FIRSTEP_SETTING_MIN
)

1026 
vÆue
 = 
ATH9K_SIG_FIRSTEP_SETTING_MIN
;

1027 i‡(
vÆue
 > 
ATH9K_SIG_FIRSTEP_SETTING_MAX
)

1028 
vÆue
 = 
ATH9K_SIG_FIRSTEP_SETTING_MAX
;

1029 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_FIND_SIG
,

1030 
AR_PHY_FIND_SIG_FIRSTEP
,

1031 
vÆue
);

1037 
vÆue2
 = 
fú°ï_èbÀ
[
Àvñ
] -

1038 
fú°ï_èbÀ
[
ATH9K_ANI_FIRSTEP_LVL
] +

1039 
™iSèã
->
öiDef
.
fú°ïLow
;

1040 i‡(
vÆue2
 < 
ATH9K_SIG_FIRSTEP_SETTING_MIN
)

1041 
vÆue2
 = 
ATH9K_SIG_FIRSTEP_SETTING_MIN
;

1042 i‡(
vÆue2
 > 
ATH9K_SIG_FIRSTEP_SETTING_MAX
)

1043 
vÆue2
 = 
ATH9K_SIG_FIRSTEP_SETTING_MAX
;

1045 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_FIND_SIG_LOW
,

1046 
AR_PHY_FIND_SIG_LOW_FIRSTEP_LOW
, 
vÆue2
);

1048 i‡(
Àvñ
 !
™iSèã
->
fú°ïLevñ
) {

1049 
	`©h_dbg
(
comm⁄
, 
ANI
,

1051 
ch™
->
ch™√l
,

1052 
™iSèã
->
fú°ïLevñ
,

1053 
Àvñ
,

1054 
ATH9K_ANI_FIRSTEP_LVL
,

1055 
vÆue
,

1056 
™iSèã
->
öiDef
.
fú°ï
);

1057 
	`©h_dbg
(
comm⁄
, 
ANI
,

1059 
ch™
->
ch™√l
,

1060 
™iSèã
->
fú°ïLevñ
,

1061 
Àvñ
,

1062 
ATH9K_ANI_FIRSTEP_LVL
,

1063 
vÆue2
,

1064 
™iSèã
->
öiDef
.
fú°ïLow
);

1065 i‡(
Àvñ
 > 
™iSèã
->
fú°ïLevñ
)

1066 
ah
->
°©s
.
a°_™i_°ïup
++;

1067 i‡(
Àvñ
 < 
™iSèã
->
fú°ïLevñ
)

1068 
ah
->
°©s
.
a°_™i_°ïdown
++;

1069 
™iSèã
->
fú°ïLevñ
 = 
Àvñ
;

1073 
ATH9K_ANI_SPUR_IMMUNITY_LEVEL
:{

1074 
u32
 
Àvñ
 = 
∑øm
;

1076 i‡(
Àvñ
 >
	`ARRAY_SIZE
(
cy˝wrThr1_èbÀ
)) {

1077 
	`©h_dbg
(
comm⁄
, 
ANI
,

1079 
Àvñ
, 
	`ARRAY_SIZE
(
cy˝wrThr1_èbÀ
));

1080  
Ál£
;

1086 
vÆue
 = 
cy˝wrThr1_èbÀ
[
Àvñ
] -

1087 
cy˝wrThr1_èbÀ
[
ATH9K_ANI_SPUR_IMMUNE_LVL
] +

1088 
™iSèã
->
öiDef
.
cy˝wrThr1
;

1089 i‡(
vÆue
 < 
ATH9K_SIG_SPUR_IMM_SETTING_MIN
)

1090 
vÆue
 = 
ATH9K_SIG_SPUR_IMM_SETTING_MIN
;

1091 i‡(
vÆue
 > 
ATH9K_SIG_SPUR_IMM_SETTING_MAX
)

1092 
vÆue
 = 
ATH9K_SIG_SPUR_IMM_SETTING_MAX
;

1093 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TIMING5
,

1094 
AR_PHY_TIMING5_CYCPWR_THR1
,

1095 
vÆue
);

1102 
vÆue2
 = 
cy˝wrThr1_èbÀ
[
Àvñ
] -

1103 
cy˝wrThr1_èbÀ
[
ATH9K_ANI_SPUR_IMMUNE_LVL
] +

1104 
™iSèã
->
öiDef
.
cy˝wrThr1Ext
;

1105 i‡(
vÆue2
 < 
ATH9K_SIG_SPUR_IMM_SETTING_MIN
)

1106 
vÆue2
 = 
ATH9K_SIG_SPUR_IMM_SETTING_MIN
;

1107 i‡(
vÆue2
 > 
ATH9K_SIG_SPUR_IMM_SETTING_MAX
)

1108 
vÆue2
 = 
ATH9K_SIG_SPUR_IMM_SETTING_MAX
;

1109 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_EXT_CCA
,

1110 
AR_PHY_EXT_CYCPWR_THR1
, 
vÆue2
);

1112 i‡(
Àvñ
 !
™iSèã
->
•urImmunôyLevñ
) {

1113 
	`©h_dbg
(
comm⁄
, 
ANI
,

1115 
ch™
->
ch™√l
,

1116 
™iSèã
->
•urImmunôyLevñ
,

1117 
Àvñ
,

1118 
ATH9K_ANI_SPUR_IMMUNE_LVL
,

1119 
vÆue
,

1120 
™iSèã
->
öiDef
.
cy˝wrThr1
);

1121 
	`©h_dbg
(
comm⁄
, 
ANI
,

1123 
ch™
->
ch™√l
,

1124 
™iSèã
->
•urImmunôyLevñ
,

1125 
Àvñ
,

1126 
ATH9K_ANI_SPUR_IMMUNE_LVL
,

1127 
vÆue2
,

1128 
™iSèã
->
öiDef
.
cy˝wrThr1Ext
);

1129 i‡(
Àvñ
 > 
™iSèã
->
•urImmunôyLevñ
)

1130 
ah
->
°©s
.
a°_™i_•urup
++;

1131 i‡(
Àvñ
 < 
™iSèã
->
•urImmunôyLevñ
)

1132 
ah
->
°©s
.
a°_™i_•urdown
++;

1133 
™iSèã
->
•urImmunôyLevñ
 = 
Àvñ
;

1137 
ATH9K_ANI_MRC_CCK
:{

1142 
boﬁ
 
is_⁄
 = 
∑øm
 ? 1 : 0;

1144 i‡(
ah
->
ˇps
.
rx_chaömask
 == 1)

1147 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_MRC_CCK_CTRL
,

1148 
AR_PHY_MRC_CCK_ENABLE
, 
is_⁄
);

1149 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_MRC_CCK_CTRL
,

1150 
AR_PHY_MRC_CCK_MUX_REG
, 
is_⁄
);

1151 i‡(
is_⁄
 !
™iSèã
->
mrcCCK
) {

1152 
	`©h_dbg
(
comm⁄
, 
ANI
, "** ch %d: MRC CCK: %s=>%s\n",

1153 
ch™
->
ch™√l
,

1154 
™iSèã
->
mrcCCK
 ? "on" : "off",

1155 
is_⁄
 ? "on" : "off");

1156 i‡(
is_⁄
)

1157 
ah
->
°©s
.
a°_™i_ccklow
++;

1159 
ah
->
°©s
.
a°_™i_cckhigh
++;

1160 
™iSèã
->
mrcCCK
 = 
is_⁄
;

1165 
	`©h_dbg
(
comm⁄
, 
ANI
, "övÆid cmd %u\n", 
cmd
);

1166  
Ál£
;

1169 
	`©h_dbg
(
comm⁄
, 
ANI
,

1171 
™iSèã
->
•urImmunôyLevñ
,

1172 
™iSèã
->
ofdmWókSigDëe˘
 ? "on" : "off",

1173 
™iSèã
->
fú°ïLevñ
,

1174 
™iSèã
->
mrcCCK
 ? "on" : "off",

1175 
™iSèã
->
li°íTime
,

1176 
™iSèã
->
ofdmPhyEºCou¡
,

1177 
™iSèã
->
cckPhyEºCou¡
);

1178  
åue
;

1179 
	}
}

1181 
	$¨9003_hw_do_gënf
(
©h_hw
 *
ah
,

1182 
öt16_t
 
nÁºay
[
NUM_NF_READINGS
])

1184 
	#AR_PHY_CH_MINCCA_PWR
 0x1FF00000

	)

1185 
	#AR_PHY_CH_MINCCA_PWR_S
 20

	)

1186 
	#AR_PHY_CH_EXT_MINCCA_PWR
 0x01FF0000

	)

1187 
	#AR_PHY_CH_EXT_MINCCA_PWR_S
 16

	)

1189 
öt16_t
 
nf
;

1190 
i
;

1192 
i
 = 0; i < 
AR9300_MAX_CHAINS
; i++) {

1193 i‡(
ah
->
rxchaömask
 & 
	`BIT
(
i
)) {

1194 
nf
 = 
	`MS
(
	`REG_READ
(
ah
,áh->
nf_ªgs
[
i
]),

1195 
AR_PHY_CH_MINCCA_PWR
);

1196 
nÁºay
[
i
] = 
	`sign_exãnd32
(
nf
, 8);

1198 i‡(
	`IS_CHAN_HT40
(
ah
->
curch™
)) {

1199 
u8
 
ext_idx
 = 
AR9300_MAX_CHAINS
 + 
i
;

1201 
nf
 = 
	`MS
(
	`REG_READ
(
ah
,áh->
nf_ªgs
[
ext_idx
]),

1202 
AR_PHY_CH_EXT_MINCCA_PWR
);

1203 
nÁºay
[
ext_idx
] = 
	`sign_exãnd32
(
nf
, 8);

1207 
	}
}

1209 
	$¨9003_hw_£t_nf_limôs
(
©h_hw
 *
ah
)

1211 
ah
->
nf_2g
.
max
 = 
AR_PHY_CCA_MAX_GOOD_VAL_9300_2GHZ
;

1212 
ah
->
nf_2g
.
mö
 = 
AR_PHY_CCA_MIN_GOOD_VAL_9300_2GHZ
;

1213 
ah
->
nf_2g
.
nomöÆ
 = 
AR_PHY_CCA_NOM_VAL_9300_2GHZ
;

1214 
ah
->
nf_5g
.
max
 = 
AR_PHY_CCA_MAX_GOOD_VAL_9300_5GHZ
;

1215 
ah
->
nf_5g
.
mö
 = 
AR_PHY_CCA_MIN_GOOD_VAL_9300_5GHZ
;

1216 
ah
->
nf_5g
.
nomöÆ
 = 
AR_PHY_CCA_NOM_VAL_9300_5GHZ
;

1218 i‡(
	`AR_SREV_9330
(
ah
))

1219 
ah
->
nf_2g
.
nomöÆ
 = 
AR_PHY_CCA_NOM_VAL_9330_2GHZ
;

1221 i‡(
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9565
(ah)) {

1222 
ah
->
nf_2g
.
mö
 = 
AR_PHY_CCA_MIN_GOOD_VAL_9462_2GHZ
;

1223 
ah
->
nf_2g
.
nomöÆ
 = 
AR_PHY_CCA_NOM_VAL_9462_2GHZ
;

1224 
ah
->
nf_5g
.
mö
 = 
AR_PHY_CCA_MIN_GOOD_VAL_9462_5GHZ
;

1225 
ah
->
nf_5g
.
nomöÆ
 = 
AR_PHY_CCA_NOM_VAL_9462_5GHZ
;

1227 
	}
}

1234 
	$¨9003_hw_™i_ˇche_öi_ªgs
(
©h_hw
 *
ah
)

1236 
¨5416AniSèã
 *
™iSèã
;

1237 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1238 
©h9k_ch™√l
 *
ch™
 = 
ah
->
curch™
;

1239 
©h9k_™i_deÁu…
 *
öiDef
;

1240 
u32
 
vÆ
;

1242 
™iSèã
 = &
ah
->
™i
;

1243 
öiDef
 = &
™iSèã
->iniDef;

1245 
	`©h_dbg
(
comm⁄
, 
ANI
, "ver %d.%d opmode %u chan %d Mhz\n",

1246 
ah
->
hw_vîsi⁄
.
macVîsi⁄
,

1247 
ah
->
hw_vîsi⁄
.
macRev
,

1248 
ah
->
›mode
,

1249 
ch™
->
ch™√l
);

1251 
vÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_SFCORR
);

1252 
öiDef
->
m1Thªsh
 = 
	`MS
(
vÆ
, 
AR_PHY_SFCORR_M1_THRESH
);

1253 
öiDef
->
m2Thªsh
 = 
	`MS
(
vÆ
, 
AR_PHY_SFCORR_M2_THRESH
);

1254 
öiDef
->
m2Cou¡Thr
 = 
	`MS
(
vÆ
, 
AR_PHY_SFCORR_M2COUNT_THR
);

1256 
vÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_SFCORR_LOW
);

1257 
öiDef
->
m1ThªshLow
 = 
	`MS
(
vÆ
, 
AR_PHY_SFCORR_LOW_M1_THRESH_LOW
);

1258 
öiDef
->
m2ThªshLow
 = 
	`MS
(
vÆ
, 
AR_PHY_SFCORR_LOW_M2_THRESH_LOW
);

1259 
öiDef
->
m2Cou¡ThrLow
 = 
	`MS
(
vÆ
, 
AR_PHY_SFCORR_LOW_M2COUNT_THR_LOW
);

1261 
vÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_SFCORR_EXT
);

1262 
öiDef
->
m1ThªshExt
 = 
	`MS
(
vÆ
, 
AR_PHY_SFCORR_EXT_M1_THRESH
);

1263 
öiDef
->
m2ThªshExt
 = 
	`MS
(
vÆ
, 
AR_PHY_SFCORR_EXT_M2_THRESH
);

1264 
öiDef
->
m1ThªshLowExt
 = 
	`MS
(
vÆ
, 
AR_PHY_SFCORR_EXT_M1_THRESH_LOW
);

1265 
öiDef
->
m2ThªshLowExt
 = 
	`MS
(
vÆ
, 
AR_PHY_SFCORR_EXT_M2_THRESH_LOW
);

1266 
öiDef
->
fú°ï
 = 
	`REG_READ_FIELD
(
ah
,

1267 
AR_PHY_FIND_SIG
,

1268 
AR_PHY_FIND_SIG_FIRSTEP
);

1269 
öiDef
->
fú°ïLow
 = 
	`REG_READ_FIELD
(
ah
,

1270 
AR_PHY_FIND_SIG_LOW
,

1271 
AR_PHY_FIND_SIG_LOW_FIRSTEP_LOW
);

1272 
öiDef
->
cy˝wrThr1
 = 
	`REG_READ_FIELD
(
ah
,

1273 
AR_PHY_TIMING5
,

1274 
AR_PHY_TIMING5_CYCPWR_THR1
);

1275 
öiDef
->
cy˝wrThr1Ext
 = 
	`REG_READ_FIELD
(
ah
,

1276 
AR_PHY_EXT_CCA
,

1277 
AR_PHY_EXT_CYCPWR_THR1
);

1280 
™iSèã
->
•urImmunôyLevñ
 = 
ATH9K_ANI_SPUR_IMMUNE_LVL
;

1281 
™iSèã
->
fú°ïLevñ
 = 
ATH9K_ANI_FIRSTEP_LVL
;

1282 
™iSèã
->
ofdmWókSigDëe˘
 = 
åue
;

1283 
™iSèã
->
mrcCCK
 = 
åue
;

1284 
	}
}

1286 
	$¨9003_hw_£t_ød¨_∑øms
(
©h_hw
 *
ah
,

1287 
©h_hw_ød¨_c⁄f
 *
c⁄f
)

1289 
ªgWrôes
 = 0;

1290 
u32
 
ød¨_0
 = 0, 
ød¨_1
 = 0;

1292 i‡(!
c⁄f
) {

1293 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_RADAR_0
, 
AR_PHY_RADAR_0_ENA
);

1297 
ød¨_0
 |
AR_PHY_RADAR_0_ENA
 | 
AR_PHY_RADAR_0_FFT_ENA
;

1298 
ød¨_0
 |
	`SM
(
c⁄f
->
fú_powî
, 
AR_PHY_RADAR_0_FIRPWR
);

1299 
ød¨_0
 |
	`SM
(
c⁄f
->
ød¨_rssi
, 
AR_PHY_RADAR_0_RRSSI
);

1300 
ød¨_0
 |
	`SM
(
c⁄f
->
pul£_height
, 
AR_PHY_RADAR_0_HEIGHT
);

1301 
ød¨_0
 |
	`SM
(
c⁄f
->
pul£_rssi
, 
AR_PHY_RADAR_0_PRSSI
);

1302 
ød¨_0
 |
	`SM
(
c⁄f
->
pul£_öb™d
, 
AR_PHY_RADAR_0_INBAND
);

1304 
ød¨_1
 |
AR_PHY_RADAR_1_MAX_RRSSI
;

1305 
ød¨_1
 |
AR_PHY_RADAR_1_BLOCK_CHECK
;

1306 
ød¨_1
 |
	`SM
(
c⁄f
->
pul£_maxÀn
, 
AR_PHY_RADAR_1_MAXLEN
);

1307 
ød¨_1
 |
	`SM
(
c⁄f
->
pul£_öb™d_°ï
, 
AR_PHY_RADAR_1_RELSTEP_THRESH
);

1308 
ød¨_1
 |
	`SM
(
c⁄f
->
ød¨_öb™d
, 
AR_PHY_RADAR_1_RELPWR_THRESH
);

1310 
	`REG_WRITE
(
ah
, 
AR_PHY_RADAR_0
, 
ød¨_0
);

1311 
	`REG_WRITE
(
ah
, 
AR_PHY_RADAR_1
, 
ød¨_1
);

1312 i‡(
c⁄f
->
ext_ch™√l
)

1313 
	`REG_SET_BIT
(
ah
, 
AR_PHY_RADAR_EXT
, 
AR_PHY_RADAR_EXT_ENA
);

1315 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_RADAR_EXT
, 
AR_PHY_RADAR_EXT_ENA
);

1317 i‡(
	`AR_SREV_9300
(
ah
Ë|| 
	`AR_SREV_9340
◊hË|| 
	`AR_SREV_9580
(ah)) {

1318 
	`REG_WRITE_ARRAY
(&
ah
->
öi_dfs
,

1319 
	`IS_CHAN_HT40
(
ah
->
curch™
Ë? 2 : 1, 
ªgWrôes
);

1321 
	}
}

1323 
	$¨9003_hw_£t_ød¨_c⁄f
(
©h_hw
 *
ah
)

1325 
©h_hw_ød¨_c⁄f
 *
c⁄f
 = &
ah
->
ød¨_c⁄f
;

1327 
c⁄f
->
fú_powî
 = -28;

1328 
c⁄f
->
ød¨_rssi
 = 0;

1329 
c⁄f
->
pul£_height
 = 10;

1330 
c⁄f
->
pul£_rssi
 = 24;

1331 
c⁄f
->
pul£_öb™d
 = 8;

1332 
c⁄f
->
pul£_maxÀn
 = 255;

1333 
c⁄f
->
pul£_öb™d_°ï
 = 12;

1334 
c⁄f
->
ød¨_öb™d
 = 8;

1335 
	}
}

1337 
	$¨9003_hw_™tdiv_comb_c⁄f_gë
(
©h_hw
 *
ah
,

1338 
©h_hw_™tcomb_c⁄f
 *
™tc⁄f
)

1340 
u32
 
ªgvÆ
;

1342 
ªgvÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_MC_GAIN_CTRL
);

1343 
™tc⁄f
->
maö_ a_c⁄f
 = (
ªgvÆ
 & 
AR_PHY_ANT_DIV_MAIN_LNACONF
) >>

1344 
AR_PHY_ANT_DIV_MAIN_LNACONF_S
;

1345 
™tc⁄f
->
Æt_ a_c⁄f
 = (
ªgvÆ
 & 
AR_PHY_ANT_DIV_ALT_LNACONF
) >>

1346 
AR_PHY_ANT_DIV_ALT_LNACONF_S
;

1347 
™tc⁄f
->
Á°_div_büs
 = (
ªgvÆ
 & 
AR_PHY_ANT_FAST_DIV_BIAS
) >>

1348 
AR_PHY_ANT_FAST_DIV_BIAS_S
;

1350 i‡(
	`AR_SREV_9330_11
(
ah
)) {

1351 
™tc⁄f
->
 a1_ a2_swôch_dñè
 = -1;

1352 
™tc⁄f
->
 a1_ a2_dñè
 = -9;

1353 
™tc⁄f
->
div_group
 = 1;

1354 } i‡(
	`AR_SREV_9485
(
ah
)) {

1355 
™tc⁄f
->
 a1_ a2_swôch_dñè
 = -1;

1356 
™tc⁄f
->
 a1_ a2_dñè
 = -9;

1357 
™tc⁄f
->
div_group
 = 2;

1358 } i‡(
	`AR_SREV_9565
(
ah
)) {

1359 
™tc⁄f
->
 a1_ a2_swôch_dñè
 = 3;

1360 
™tc⁄f
->
 a1_ a2_dñè
 = -9;

1361 
™tc⁄f
->
div_group
 = 3;

1363 
™tc⁄f
->
 a1_ a2_swôch_dñè
 = -1;

1364 
™tc⁄f
->
 a1_ a2_dñè
 = -3;

1365 
™tc⁄f
->
div_group
 = 0;

1367 
	}
}

1369 
	$¨9003_hw_™tdiv_comb_c⁄f_£t
(
©h_hw
 *
ah
,

1370 
©h_hw_™tcomb_c⁄f
 *
™tc⁄f
)

1372 
u32
 
ªgvÆ
;

1374 
ªgvÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_MC_GAIN_CTRL
);

1375 
ªgvÆ
 &~(
AR_PHY_ANT_DIV_MAIN_LNACONF
 |

1376 
AR_PHY_ANT_DIV_ALT_LNACONF
 |

1377 
AR_PHY_ANT_FAST_DIV_BIAS
 |

1378 
AR_PHY_ANT_DIV_MAIN_GAINTB
 |

1379 
AR_PHY_ANT_DIV_ALT_GAINTB
);

1380 
ªgvÆ
 |((
™tc⁄f
->
maö_ a_c⁄f
 << 
AR_PHY_ANT_DIV_MAIN_LNACONF_S
)

1381 & 
AR_PHY_ANT_DIV_MAIN_LNACONF
);

1382 
ªgvÆ
 |((
™tc⁄f
->
Æt_ a_c⁄f
 << 
AR_PHY_ANT_DIV_ALT_LNACONF_S
)

1383 & 
AR_PHY_ANT_DIV_ALT_LNACONF
);

1384 
ªgvÆ
 |((
™tc⁄f
->
Á°_div_büs
 << 
AR_PHY_ANT_FAST_DIV_BIAS_S
)

1385 & 
AR_PHY_ANT_FAST_DIV_BIAS
);

1386 
ªgvÆ
 |((
™tc⁄f
->
maö_gaötb
 << 
AR_PHY_ANT_DIV_MAIN_GAINTB_S
)

1387 & 
AR_PHY_ANT_DIV_MAIN_GAINTB
);

1388 
ªgvÆ
 |((
™tc⁄f
->
Æt_gaötb
 << 
AR_PHY_ANT_DIV_ALT_GAINTB_S
)

1389 & 
AR_PHY_ANT_DIV_ALT_GAINTB
);

1391 
	`REG_WRITE
(
ah
, 
AR_PHY_MC_GAIN_CTRL
, 
ªgvÆ
);

1392 
	}
}

1394 #ifde‡
CPTCFG_ATH9K_BTCOEX_SUPPORT


1396 
	$¨9003_hw_£t_bt_™t_divîsôy
(
©h_hw
 *
ah
, 
boﬁ
 
íabÀ
)

1398 
©h9k_hw_ˇ∑bûôõs
 *
pC≠
 = &
ah
->
ˇps
;

1399 
u8
 
™t_div_˘l1
;

1400 
u32
 
ªgvÆ
;

1402 i‡(!
	`AR_SREV_9485
(
ah
Ë&& !
	`AR_SREV_9565
(ah))

1405 i‡(
	`AR_SREV_9485
(
ah
)) {

1406 
ªgvÆ
 = 
	`¨9003_hw_™t_˘æ_comm⁄_2_gë
(
ah
,

1407 
	`IS_CHAN_2GHZ
(
ah
->
curch™
));

1408 i‡(
íabÀ
) {

1409 
ªgvÆ
 &~
AR_SWITCH_TABLE_COM2_ALL
;

1410 
ªgvÆ
 |
ah
->
c⁄fig
.
™t_˘æ_comm2g_swôch_íabÀ
;

1412 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SWITCH_COM_2
,

1413 
AR_SWITCH_TABLE_COM2_ALL
, 
ªgvÆ
);

1416 
™t_div_˘l1
 = 
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_ANT_DIV_CTL1
);

1422 
ªgvÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_MC_GAIN_CTRL
);

1423 
ªgvÆ
 &(~
AR_ANT_DIV_CTRL_ALL
);

1424 
ªgvÆ
 |(
™t_div_˘l1
 & 0x3fË<< 
AR_ANT_DIV_CTRL_ALL_S
;

1425 
	`REG_WRITE
(
ah
, 
AR_PHY_MC_GAIN_CTRL
, 
ªgvÆ
);

1427 i‡(
	`AR_SREV_9485_11_OR_LATER
(
ah
)) {

1431 
ªgvÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_MC_GAIN_CTRL
);

1432 
ªgvÆ
 &~
AR_PHY_ANT_DIV_LNADIV
;

1433 
ªgvÆ
 |((
™t_div_˘l1
 >> 6Ë& 0x1Ë<< 
AR_PHY_ANT_DIV_LNADIV_S
;

1434 i‡(
íabÀ
)

1435 
ªgvÆ
 |
AR_ANT_DIV_ENABLE
;

1437 
	`REG_WRITE
(
ah
, 
AR_PHY_MC_GAIN_CTRL
, 
ªgvÆ
);

1442 
ªgvÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_CCK_DETECT
);

1443 
ªgvÆ
 &~
AR_FAST_DIV_ENABLE
;

1444 
ªgvÆ
 |((
™t_div_˘l1
 >> 7Ë& 0x1Ë<< 
AR_FAST_DIV_ENABLE_S
;

1445 i‡(
íabÀ
)

1446 
ªgvÆ
 |
AR_FAST_DIV_ENABLE
;

1448 
	`REG_WRITE
(
ah
, 
AR_PHY_CCK_DETECT
, 
ªgvÆ
);

1450 i‡(
pC≠
->
hw_ˇps
 & 
ATH9K_HW_CAP_ANT_DIV_COMB
) {

1451 
ªgvÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_MC_GAIN_CTRL
);

1452 
ªgvÆ
 &(~(
AR_PHY_ANT_DIV_MAIN_LNACONF
 |

1453 
AR_PHY_ANT_DIV_ALT_LNACONF
 |

1454 
AR_PHY_ANT_DIV_ALT_GAINTB
 |

1455 
AR_PHY_ANT_DIV_MAIN_GAINTB
));

1460 
ªgvÆ
 |(
ATH_ANT_DIV_COMB_LNA1
 <<

1461 
AR_PHY_ANT_DIV_MAIN_LNACONF_S
);

1462 
ªgvÆ
 |(
ATH_ANT_DIV_COMB_LNA2
 <<

1463 
AR_PHY_ANT_DIV_ALT_LNACONF_S
);

1464 
	`REG_WRITE
(
ah
, 
AR_PHY_MC_GAIN_CTRL
, 
ªgvÆ
);

1466 } i‡(
	`AR_SREV_9565
(
ah
)) {

1467 i‡(
íabÀ
) {

1468 
	`REG_SET_BIT
(
ah
, 
AR_PHY_MC_GAIN_CTRL
,

1469 
AR_ANT_DIV_ENABLE
);

1470 
	`REG_SET_BIT
(
ah
, 
AR_PHY_MC_GAIN_CTRL
,

1471 (1 << 
AR_PHY_ANT_SW_RX_PROT_S
));

1472 
	`REG_SET_BIT
(
ah
, 
AR_PHY_CCK_DETECT
,

1473 
AR_FAST_DIV_ENABLE
);

1474 
	`REG_SET_BIT
(
ah
, 
AR_PHY_RESTART
,

1475 
AR_PHY_RESTART_ENABLE_DIV_M2FLAG
);

1476 
	`REG_SET_BIT
(
ah
, 
AR_BTCOEX_WL_LNADIV
,

1477 
AR_BTCOEX_WL_LNADIV_FORCE_ON
);

1479 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_MC_GAIN_CTRL
,

1480 
AR_ANT_DIV_ENABLE
);

1481 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_MC_GAIN_CTRL
,

1482 (1 << 
AR_PHY_ANT_SW_RX_PROT_S
));

1483 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_CCK_DETECT
,

1484 
AR_FAST_DIV_ENABLE
);

1485 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_RESTART
,

1486 
AR_PHY_RESTART_ENABLE_DIV_M2FLAG
);

1487 
	`REG_CLR_BIT
(
ah
, 
AR_BTCOEX_WL_LNADIV
,

1488 
AR_BTCOEX_WL_LNADIV_FORCE_ON
);

1490 
ªgvÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_MC_GAIN_CTRL
);

1491 
ªgvÆ
 &~(
AR_PHY_ANT_DIV_MAIN_LNACONF
 |

1492 
AR_PHY_ANT_DIV_ALT_LNACONF
 |

1493 
AR_PHY_ANT_DIV_MAIN_GAINTB
 |

1494 
AR_PHY_ANT_DIV_ALT_GAINTB
);

1495 
ªgvÆ
 |(
ATH_ANT_DIV_COMB_LNA1
 <<

1496 
AR_PHY_ANT_DIV_MAIN_LNACONF_S
);

1497 
ªgvÆ
 |(
ATH_ANT_DIV_COMB_LNA2
 <<

1498 
AR_PHY_ANT_DIV_ALT_LNACONF_S
);

1499 
	`REG_WRITE
(
ah
, 
AR_PHY_MC_GAIN_CTRL
, 
ªgvÆ
);

1502 
	}
}

1506 
	$¨9003_hw_Á°_ch™_ch™ge
(
©h_hw
 *
ah
,

1507 
©h9k_ch™√l
 *
ch™
,

1508 
u8
 *
öi_ªlﬂded
)

1510 
ªgWrôes
 = 0;

1511 
u32
 
modesIndex
;

1513 i‡(
	`IS_CHAN_5GHZ
(
ch™
))

1514 
modesIndex
 = 
	`IS_CHAN_HT40
(
ch™
) ? 2 : 1;

1516 
modesIndex
 = 
	`IS_CHAN_HT40
(
ch™
) ? 3 : 4;

1518 i‡(
modesIndex
 =
ah
->
modes_ödex
) {

1519 *
öi_ªlﬂded
 = 
Ál£
;

1520 
£t_rfmode
;

1523 
	`¨9003_hw_¥og_öi
(
ah
, &ah->
öiSOC
[
ATH_INI_POST
], 
modesIndex
);

1524 
	`¨9003_hw_¥og_öi
(
ah
, &ah->
öiMac
[
ATH_INI_POST
], 
modesIndex
);

1525 
	`¨9003_hw_¥og_öi
(
ah
, &ah->
öiBB
[
ATH_INI_POST
], 
modesIndex
);

1526 
	`¨9003_hw_¥og_öi
(
ah
, &ah->
öiRadio
[
ATH_INI_POST
], 
modesIndex
);

1528 i‡(
	`AR_SREV_9462_20_OR_LATER
(
ah
))

1529 
	`¨9003_hw_¥og_öi
(
ah
, &ah->
öi_ødio_po°_sys2™t
,

1530 
modesIndex
);

1532 
	`REG_WRITE_ARRAY
(&
ah
->
öiModesTxGaö
, 
modesIndex
, 
ªgWrôes
);

1534 i‡(
	`AR_SREV_9462_20_OR_LATER
(
ah
)) {

1538 i‡(
	`¨9003_hw_gë_rx_gaö_idx
(
ah
) == 2) {

1539 
	`REG_WRITE_ARRAY
(&
ah
->
öi_modes_rxgaö_bb_c‹e
,

1540 1, 
ªgWrôes
);

1541 
	`REG_WRITE_ARRAY
(&
ah
->
öi_modes_rxgaö_bb_po°ambÀ
,

1542 
modesIndex
, 
ªgWrôes
);

1550 i‡(
	`IS_CHAN_A_FAST_CLOCK
(
ah
, 
ch™
))

1551 
	`REG_WRITE_ARRAY
(&
ah
->
öiModesFa°Clock
, 
modesIndex
, 
ªgWrôes
);

1553 i‡(
	`AR_SREV_9565
(
ah
))

1554 
	`REG_WRITE_ARRAY
(&
ah
->
öiModesFa°Clock
, 1, 
ªgWrôes
);

1559 i‡(
ch™
->
ch™√l
 == 2484)

1560 
	`¨9003_hw_¥og_öi
(
ah
, &ah->
öiCckfúJ≠™2484
, 1);

1562 
ah
->
modes_ödex
 = 
modesIndex
;

1563 *
öi_ªlﬂded
 = 
åue
;

1565 
£t_rfmode
:

1566 
	`¨9003_hw_£t_rfmode
(
ah
, 
ch™
);

1568 
	}
}

1570 
	$¨9003_hw_•e˘øl_sˇn_c⁄fig
(
©h_hw
 *
ah
,

1571 
©h_•ec_sˇn
 *
∑øm
)

1573 
u8
 
cou¡
;

1575 i‡(!
∑øm
->
íabÀd
) {

1576 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_SPECTRAL_SCAN
,

1577 
AR_PHY_SPECTRAL_SCAN_ENABLE
);

1581 
	`REG_SET_BIT
(
ah
, 
AR_PHY_RADAR_0
, 
AR_PHY_RADAR_0_FFT_ENA
);

1582 
	`REG_SET_BIT
(
ah
, 
AR_PHY_SPECTRAL_SCAN
, 
AR_PHY_SPECTRAL_SCAN_ENABLE
);

1588 
cou¡
 = 
∑øm
->count;

1589 i‡(
∑øm
->
ídÀss
)

1590 
cou¡
 = 0;

1591 i‡(
∑øm
->
cou¡
 == 0)

1592 
cou¡
 = 1;

1594 i‡(
∑øm
->
sh‹t_ª≥©
)

1595 
	`REG_SET_BIT
(
ah
, 
AR_PHY_SPECTRAL_SCAN
,

1596 
AR_PHY_SPECTRAL_SCAN_SHORT_REPEAT
);

1598 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_SPECTRAL_SCAN
,

1599 
AR_PHY_SPECTRAL_SCAN_SHORT_REPEAT
);

1601 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SPECTRAL_SCAN
,

1602 
AR_PHY_SPECTRAL_SCAN_COUNT
, 
cou¡
);

1603 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SPECTRAL_SCAN
,

1604 
AR_PHY_SPECTRAL_SCAN_PERIOD
, 
∑øm
->
≥riod
);

1605 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SPECTRAL_SCAN
,

1606 
AR_PHY_SPECTRAL_SCAN_FFT_PERIOD
, 
∑øm
->
f·_≥riod
);

1609 
	}
}

1611 
	$¨9003_hw_•e˘øl_sˇn_åiggî
(
©h_hw
 *
ah
)

1614 
	`REG_SET_BIT
(
ah
, 
AR_PHY_SPECTRAL_SCAN
,

1615 
AR_PHY_SPECTRAL_SCAN_ACTIVE
);

1616 
	}
}

1618 
	$¨9003_hw_•e˘øl_sˇn_waô
(
©h_hw
 *
ah
)

1620 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1623 i‡(!
	`©h9k_hw_waô
(
ah
, 
AR_PHY_SPECTRAL_SCAN
,

1624 
AR_PHY_SPECTRAL_SCAN_ACTIVE
,

1625 0, 
AH_WAIT_TIMEOUT
)) {

1626 
	`©h_îr
(
comm⁄
, "spectral scan wait failed\n");

1629 
	}
}

1631 
	$¨9003_hw_tx99_°¨t
(
©h_hw
 *
ah
, 
u32
 
qnum
)

1633 
	`REG_SET_BIT
(
ah
, 
AR_PHY_TEST
, 
PHY_AGC_CLR
);

1634 
	`REG_SET_BIT
(
ah
, 0x9864, 0x7f000);

1635 
	`REG_SET_BIT
(
ah
, 0x9924, 0x7f00fe);

1636 
	`REG_CLR_BIT
(
ah
, 
AR_DIAG_SW
, 
AR_DIAG_RX_DIS
);

1637 
	`REG_WRITE
(
ah
, 
AR_CR
, 
AR_CR_RXD
);

1638 
	`REG_WRITE
(
ah
, 
	`AR_DLCL_IFS
(
qnum
), 0);

1639 
	`REG_WRITE
(
ah
, 
AR_D_GBL_IFS_SIFS
, 20);

1640 
	`REG_WRITE
(
ah
, 
AR_D_GBL_IFS_EIFS
, 20);

1641 
	`REG_WRITE
(
ah
, 
AR_TIME_OUT
, 0x00000400);

1642 
	`REG_WRITE
(
ah
, 
	`AR_DRETRY_LIMIT
(
qnum
), 0xffffffff);

1643 
	`REG_SET_BIT
(
ah
, 
	`AR_QMISC
(
qnum
), 
AR_Q_MISC_DCU_EARLY_TERM_REQ
);

1644 
	}
}

1646 
	$¨9003_hw_tx99_°›
(
©h_hw
 *
ah
)

1648 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_TEST
, 
PHY_AGC_CLR
);

1649 
	`REG_SET_BIT
(
ah
, 
AR_DIAG_SW
, 
AR_DIAG_RX_DIS
);

1650 
	}
}

1652 
	$¨9003_hw_tx99_£t_txpowî
(
©h_hw
 *
ah
, 
u8
 
txpowî
)

1654 
s16
 
p_pwr_¨øy
[
¨9300R©eSize
] = { 0 };

1655 
i
;

1657 i‡(
txpowî
 <
MAX_RATE_POWER
) {

1658 
i
 = 0; i < 
¨9300R©eSize
; i++)

1659 
p_pwr_¨øy
[
i
] = 
txpowî
;

1661 
i
 = 0; i < 
¨9300R©eSize
; i++)

1662 
p_pwr_¨øy
[
i
] = 
MAX_RATE_POWER
;

1665 
	`REG_WRITE
(
ah
, 0xa458, 0);

1667 
	`REG_WRITE
(
ah
, 0xa3c0,

1668 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_LEGACY_6_24
], 24) |

1669 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_LEGACY_6_24
], 16) |

1670 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_LEGACY_6_24
], 8) |

1671 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_LEGACY_6_24
], 0));

1672 
	`REG_WRITE
(
ah
, 0xa3c4,

1673 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_LEGACY_54
], 24) |

1674 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_LEGACY_48
], 16) |

1675 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_LEGACY_36
], 8) |

1676 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_LEGACY_6_24
], 0));

1677 
	`REG_WRITE
(
ah
, 0xa3c8,

1678 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_LEGACY_1L_5L
], 24) |

1679 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_LEGACY_1L_5L
], 16) |

1680 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_LEGACY_1L_5L
], 0));

1681 
	`REG_WRITE
(
ah
, 0xa3cc,

1682 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_LEGACY_11S
], 24) |

1683 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_LEGACY_11L
], 16) |

1684 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_LEGACY_5S
], 8) |

1685 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_LEGACY_1L_5L
], 0));

1686 
	`REG_WRITE
(
ah
, 0xa3d0,

1687 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT20_5
], 24) |

1688 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT20_4
], 16) |

1689 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT20_1_3_9_11_17_19
], 8)|

1690 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT20_0_8_16
], 0));

1691 
	`REG_WRITE
(
ah
, 0xa3d4,

1692 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT20_13
], 24) |

1693 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT20_12
], 16) |

1694 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT20_7
], 8) |

1695 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT20_6
], 0));

1696 
	`REG_WRITE
(
ah
, 0xa3e4,

1697 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT20_21
], 24) |

1698 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT20_20
], 16) |

1699 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT20_15
], 8) |

1700 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT20_14
], 0));

1701 
	`REG_WRITE
(
ah
, 0xa3e8,

1702 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT40_23
], 24) |

1703 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT40_22
], 16) |

1704 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT20_23
], 8) |

1705 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT20_22
], 0));

1706 
	`REG_WRITE
(
ah
, 0xa3d8,

1707 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT40_5
], 24) |

1708 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT40_4
], 16) |

1709 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT40_1_3_9_11_17_19
], 8) |

1710 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT40_0_8_16
], 0));

1711 
	`REG_WRITE
(
ah
, 0xa3dc,

1712 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT40_13
], 24) |

1713 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT40_12
], 16) |

1714 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT40_7
], 8) |

1715 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT40_6
], 0));

1716 
	`REG_WRITE
(
ah
, 0xa3ec,

1717 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT40_21
], 24) |

1718 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT40_20
], 16) |

1719 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT40_15
], 8) |

1720 
	`ATH9K_POW_SM
(
p_pwr_¨øy
[
ALL_TARGET_HT40_14
], 0));

1721 
	}
}

1723 
	$¨9003_hw_gë_adc_íå›y
(
©h_hw
 *
ah
, 
u8
 *
buf
, 
size_t
 
Àn
)

1725 
i
, 
j
;

1727 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TEST
, 
AR_PHY_TEST_BBB_OBS_SEL
, 1);

1728 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_TEST
, 
AR_PHY_TEST_RX_OBS_SEL_BIT5
);

1729 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TEST_CTL_STATUS
, 
AR_PHY_TEST_CTL_RX_OBS_SEL
, 0);

1731 
	`mem£t
(
buf
, 0, 
Àn
);

1732 
i
 = 0; i < 
Àn
; i++) {

1733 
j
 = 0; j < 4; j++) {

1734 
u32
 
ªgvÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_TST_ADC
);

1736 
buf
[
i
] <<= 2;

1737 
buf
[
i
] |(
ªgvÆ
 & 1Ë| (‘egvÆ & 
	`BIT
(10)) >> 9);

1738 
	`udñay
(1);

1741 
	}
}

1743 
	$¨9003_hw_©èch_phy_›s
(
©h_hw
 *
ah
)

1745 
©h_hw_¥iv©e_›s
 *
¥iv_›s
 = 
	`©h9k_hw_¥iv©e_›s
(
ah
);

1746 
©h_hw_›s
 *
›s
 = 
	`©h9k_hw_›s
(
ah
);

1747 c⁄° 
u32
 
¨9300_cˇ_ªgs
[6] = {

1748 
AR_PHY_CCA_0
,

1749 
AR_PHY_CCA_1
,

1750 
AR_PHY_CCA_2
,

1751 
AR_PHY_EXT_CCA
,

1752 
AR_PHY_EXT_CCA_1
,

1753 
AR_PHY_EXT_CCA_2
,

1756 
¥iv_›s
->
rf_£t_‰eq
 = 
¨9003_hw_£t_ch™√l
;

1757 
¥iv_›s
->
•ur_môig©e_‰eq
 = 
¨9003_hw_•ur_môig©e
;

1759 i‡(
	`AR_SREV_9340
(
ah
Ë|| 
	`AR_SREV_9550
◊hË|| 
	`AR_SREV_9531
(ah))

1760 
¥iv_›s
->
compuã_∂l_c⁄åﬁ
 = 
¨9003_hw_compuã_∂l_c⁄åﬁ_soc
;

1762 
¥iv_›s
->
compuã_∂l_c⁄åﬁ
 = 
¨9003_hw_compuã_∂l_c⁄åﬁ
;

1764 
¥iv_›s
->
£t_ch™√l_ªgs
 = 
¨9003_hw_£t_ch™√l_ªgs
;

1765 
¥iv_›s
->
öô_bb
 = 
¨9003_hw_öô_bb
;

1766 
¥iv_›s
->
¥o˚ss_öi
 = 
¨9003_hw_¥o˚ss_öi
;

1767 
¥iv_›s
->
£t_rfmode
 = 
¨9003_hw_£t_rfmode
;

1768 
¥iv_›s
->
m¨k_phy_öa˘ive
 = 
¨9003_hw_m¨k_phy_öa˘ive
;

1769 
¥iv_›s
->
£t_dñè_¶›e
 = 
¨9003_hw_£t_dñè_¶›e
;

1770 
¥iv_›s
->
rfbus_ªq
 = 
¨9003_hw_rfbus_ªq
;

1771 
¥iv_›s
->
rfbus_d⁄e
 = 
¨9003_hw_rfbus_d⁄e
;

1772 
¥iv_›s
->
™i_c⁄åﬁ
 = 
¨9003_hw_™i_c⁄åﬁ
;

1773 
¥iv_›s
->
do_gënf
 = 
¨9003_hw_do_gënf
;

1774 
¥iv_›s
->
™i_ˇche_öi_ªgs
 = 
¨9003_hw_™i_ˇche_öi_ªgs
;

1775 
¥iv_›s
->
£t_ød¨_∑øms
 = 
¨9003_hw_£t_ød¨_∑øms
;

1776 
¥iv_›s
->
Á°_ch™_ch™ge
 = 
¨9003_hw_Á°_ch™_ch™ge
;

1778 
›s
->
gë_adc_íå›y
 = 
¨9003_hw_gë_adc_íå›y
;

1779 
›s
->
™tdiv_comb_c⁄f_gë
 = 
¨9003_hw_™tdiv_comb_c⁄f_gë
;

1780 
›s
->
™tdiv_comb_c⁄f_£t
 = 
¨9003_hw_™tdiv_comb_c⁄f_£t
;

1781 
›s
->
•e˘øl_sˇn_c⁄fig
 = 
¨9003_hw_•e˘øl_sˇn_c⁄fig
;

1782 
›s
->
•e˘øl_sˇn_åiggî
 = 
¨9003_hw_•e˘øl_sˇn_åiggî
;

1783 
›s
->
•e˘øl_sˇn_waô
 = 
¨9003_hw_•e˘øl_sˇn_waô
;

1785 #ifde‡
CPTCFG_ATH9K_BTCOEX_SUPPORT


1786 
›s
->
£t_bt_™t_divîsôy
 = 
¨9003_hw_£t_bt_™t_divîsôy
;

1788 
›s
->
tx99_°¨t
 = 
¨9003_hw_tx99_°¨t
;

1789 
›s
->
tx99_°›
 = 
¨9003_hw_tx99_°›
;

1790 
›s
->
tx99_£t_txpowî
 = 
¨9003_hw_tx99_£t_txpowî
;

1792 
	`¨9003_hw_£t_nf_limôs
(
ah
);

1793 
	`¨9003_hw_£t_ød¨_c⁄f
(
ah
);

1794 
	`mem˝y
(
ah
->
nf_ªgs
, 
¨9300_cˇ_ªgs
, (ah->nf_regs));

1795 
	}
}

1822 
boﬁ
 
	$¨9003_hw_bb_w©chdog_check
(
©h_hw
 *
ah
)

1824 
u32
 
vÆ
;

1826 
ah
->
bb_w©chdog_œ°_°©us
) {

1828 
vÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_RADAR_0
);

1829 
vÆ
 &(~
AR_PHY_RADAR_0_FIRPWR
);

1830 
vÆ
 |
	`SM
(0x7f, 
AR_PHY_RADAR_0_FIRPWR
);

1831 
	`REG_WRITE
(
ah
, 
AR_PHY_RADAR_0
, 
vÆ
);

1832 
	`udñay
(1);

1833 
vÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_RADAR_0
);

1834 
vÆ
 &~
AR_PHY_RADAR_0_FIRPWR
;

1835 
vÆ
 |
	`SM
(
AR9300_DFS_FIRPWR
, 
AR_PHY_RADAR_0_FIRPWR
);

1836 
	`REG_WRITE
(
ah
, 
AR_PHY_RADAR_0
, 
vÆ
);

1838  
Ál£
;

1840  
Ál£
;

1843  
åue
;

1845 i‡(
	`AR_SREV_9340
(
ah
Ë|| 
	`AR_SREV_9531
(ah))

1846  
Ál£
;

1848  
åue
;

1854  
åue
;

1856 
	}
}

1857 
EXPORT_SYMBOL
(
¨9003_hw_bb_w©chdog_check
);

1859 
	$¨9003_hw_bb_w©chdog_c⁄fig
(
©h_hw
 *
ah
)

1861 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1862 
u32
 
idÀ_tmo_ms
 = 
ah
->
bb_w©chdog_timeout_ms
;

1863 
u32
 
vÆ
, 
idÀ_cou¡
;

1865 i‡(!
idÀ_tmo_ms
) {

1867 
	`REG_WRITE
(
ah
, 
AR_PHY_WATCHDOG_CTL_2
,

1868 
	`REG_READ
(
ah
, 
AR_PHY_WATCHDOG_CTL_2
) &

1869 ~(
AR_PHY_WATCHDOG_RST_ENABLE
 |

1870 
AR_PHY_WATCHDOG_IRQ_ENABLE
));

1873 
	`REG_WRITE
(
ah
, 
AR_PHY_WATCHDOG_CTL_1
,

1874 
	`REG_READ
(
ah
, 
AR_PHY_WATCHDOG_CTL_1
) &

1875 ~(
AR_PHY_WATCHDOG_NON_IDLE_ENABLE
 |

1876 
AR_PHY_WATCHDOG_IDLE_ENABLE
));

1878 
	`©h_dbg
(
comm⁄
, 
RESET
, "Disabled BB Watchdog\n");

1883 
vÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_WATCHDOG_CTL_2
Ë& 
AR_PHY_WATCHDOG_CNTL2_MASK
;

1884 
	`REG_WRITE
(
ah
, 
AR_PHY_WATCHDOG_CTL_2
,

1885 (
vÆ
 | 
AR_PHY_WATCHDOG_IRQ_ENABLE
) &

1886 ~
AR_PHY_WATCHDOG_RST_ENABLE
);

1889 i‡(
idÀ_tmo_ms
 > 10000)

1890 
idÀ_tmo_ms
 = 10000;

1901 
idÀ_cou¡
 = (100 * 
idÀ_tmo_ms
) / 74;

1902 i‡(
ah
->
curch™
 && 
	`IS_CHAN_HT40
(ah->curchan))

1903 
idÀ_cou¡
 = (100 * 
idÀ_tmo_ms
) / 37;

1909 
	`REG_WRITE
(
ah
, 
AR_PHY_WATCHDOG_CTL_1
,

1910 
AR_PHY_WATCHDOG_NON_IDLE_ENABLE
 |

1911 
AR_PHY_WATCHDOG_IDLE_MASK
 |

1912 (
AR_PHY_WATCHDOG_NON_IDLE_MASK
 & (
idÀ_cou¡
 << 2)));

1914 
	`©h_dbg
(
comm⁄
, 
RESET
, "Enabled BB WatchdogÅimeout (%u ms)\n",

1915 
idÀ_tmo_ms
);

1916 
	}
}

1918 
	$¨9003_hw_bb_w©chdog_ªad
(
©h_hw
 *
ah
)

1924 
ah
->
bb_w©chdog_œ°_°©us
 = 
	`REG_READ
◊h, 
AR_PHY_WATCHDOG_STATUS
);

1930 
	`REG_WRITE
(
ah
, 
AR_PHY_WATCHDOG_STATUS
,

1931 
ah
->
bb_w©chdog_œ°_°©us
 & ~
AR_PHY_WATCHDOG_STATUS_CLR
);

1932 
	}
}

1934 
	$¨9003_hw_bb_w©chdog_dbg_öfo
(
©h_hw
 *
ah
)

1936 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1937 
u32
 
°©us
;

1939 i‡(
	`likñy
(!(
comm⁄
->
debug_mask
 & 
ATH_DBG_RESET
)))

1942 
°©us
 = 
ah
->
bb_w©chdog_œ°_°©us
;

1943 
	`©h_dbg
(
comm⁄
, 
RESET
,

1944 "\n===BB upd©e: BB sètus=0x%08x ====\n", 
°©us
);

1945 
	`©h_dbg
(
comm⁄
, 
RESET
,

1947 
	`MS
(
°©us
, 
AR_PHY_WATCHDOG_INFO
),

1948 
	`MS
(
°©us
, 
AR_PHY_WATCHDOG_DET_HANG
),

1949 
	`MS
(
°©us
, 
AR_PHY_WATCHDOG_RADAR_SM
),

1950 
	`MS
(
°©us
, 
AR_PHY_WATCHDOG_RX_OFDM_SM
),

1951 
	`MS
(
°©us
, 
AR_PHY_WATCHDOG_RX_CCK_SM
),

1952 
	`MS
(
°©us
, 
AR_PHY_WATCHDOG_TX_OFDM_SM
),

1953 
	`MS
(
°©us
, 
AR_PHY_WATCHDOG_TX_CCK_SM
),

1954 
	`MS
(
°©us
, 
AR_PHY_WATCHDOG_AGC_SM
),

1955 
	`MS
(
°©us
, 
AR_PHY_WATCHDOG_SRCH_SM
));

1957 
	`©h_dbg
(
comm⁄
, 
RESET
, "** BB WD cntl: cntl1=0x%08x cntl2=0x%08x **\n",

1958 
	`REG_READ
(
ah
, 
AR_PHY_WATCHDOG_CTL_1
),

1959 
	`REG_READ
(
ah
, 
AR_PHY_WATCHDOG_CTL_2
));

1960 
	`©h_dbg
(
comm⁄
, 
RESET
, "** BB mode: BB_gen_controls=0x%08x **\n",

1961 
	`REG_READ
(
ah
, 
AR_PHY_GEN_CTRL
));

1963 
	#PCT
(
_fõld
Ë(
comm⁄
->
cc_survey
._fõld * 100 / comm⁄->cc_survey.
cy˛es
)

	)

1964 i‡(
comm⁄
->
cc_survey
.
cy˛es
)

1965 
	`©h_dbg
(
comm⁄
, 
RESET
,

1967 
	`PCT
(
rx_busy
), PCT(
rx_‰ame
), PCT(
tx_‰ame
));

1969 
	`©h_dbg
(
comm⁄
, 
RESET
, "==== BB update: done ====\n\n");

1970 
	}
}

1971 
EXPORT_SYMBOL
(
¨9003_hw_bb_w©chdog_dbg_öfo
);

1973 
	$¨9003_hw_dißbÀ_phy_ª°¨t
(
©h_hw
 *
ah
)

1975 
u8
 
ªsu…
;

1976 
u32
 
vÆ
;

1983 
ªsu…
 = 
	`MS
(
ah
->
bb_w©chdog_œ°_°©us
, 
AR_PHY_WATCHDOG_RX_OFDM_SM
);

1985 i‡((
ªsu…
 =0xbË|| 
ah
->
bb_h™g_rx_ofdm
) {

1986 
ah
->
bb_h™g_rx_ofdm
 = 
åue
;

1987 
vÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_RESTART
);

1988 
vÆ
 &~
AR_PHY_RESTART_ENA
;

1989 
	`REG_WRITE
(
ah
, 
AR_PHY_RESTART
, 
vÆ
);

1991 
	}
}

1992 
EXPORT_SYMBOL
(
¨9003_hw_dißbÀ_phy_ª°¨t
);

	@ar9003_phy.h

17 #i‚de‡
AR9003_PHY_H


18 
	#AR9003_PHY_H


	)

23 
	#AR_CHAN_BASE
 0x9800

	)

25 
	#AR_PHY_TIMING1
 (
AR_CHAN_BASE
 + 0x0)

	)

26 
	#AR_PHY_TIMING2
 (
AR_CHAN_BASE
 + 0x4)

	)

27 
	#AR_PHY_TIMING3
 (
AR_CHAN_BASE
 + 0x8)

	)

28 
	#AR_PHY_TIMING4
 (
AR_CHAN_BASE
 + 0xc)

	)

29 
	#AR_PHY_TIMING5
 (
AR_CHAN_BASE
 + 0x10)

	)

30 
	#AR_PHY_TIMING6
 (
AR_CHAN_BASE
 + 0x14)

	)

31 
	#AR_PHY_TIMING11
 (
AR_CHAN_BASE
 + 0x18)

	)

32 
	#AR_PHY_SPUR_REG
 (
AR_CHAN_BASE
 + 0x1c)

	)

33 
	#AR_PHY_RX_IQCAL_CORR_B0
 (
AR_CHAN_BASE
 + 0xdc)

	)

34 
	#AR_PHY_TX_IQCAL_CONTROL_3
 (
AR_CHAN_BASE
 + 0xb0)

	)

35 
	#AR_PHY_TIMING_CONTROL4_DO_GAIN_DC_IQ_CAL_SHIFT
 16

	)

37 
	#AR_PHY_TIMING11_SPUR_FREQ_SD
 0x3FF00000

	)

38 
	#AR_PHY_TIMING11_SPUR_FREQ_SD_S
 20

	)

40 
	#AR_PHY_TIMING11_SPUR_DELTA_PHASE
 0x000FFFFF

	)

41 
	#AR_PHY_TIMING11_SPUR_DELTA_PHASE_S
 0

	)

43 
	#AR_PHY_TIMING11_USE_SPUR_FILTER_IN_AGC
 0x40000000

	)

44 
	#AR_PHY_TIMING11_USE_SPUR_FILTER_IN_AGC_S
 30

	)

46 
	#AR_PHY_TIMING11_USE_SPUR_FILTER_IN_SELFCOR
 0x80000000

	)

47 
	#AR_PHY_TIMING11_USE_SPUR_FILTER_IN_SELFCOR_S
 31

	)

49 
	#AR_PHY_SPUR_REG_ENABLE_NF_RSSI_SPUR_MIT
 0x4000000

	)

50 
	#AR_PHY_SPUR_REG_ENABLE_NF_RSSI_SPUR_MIT_S
 26

	)

52 
	#AR_PHY_SPUR_REG_ENABLE_MASK_PPM
 0x20000

	)

53 
	#AR_PHY_SPUR_REG_ENABLE_MASK_PPM_S
 17

	)

54 
	#AR_PHY_SPUR_REG_SPUR_RSSI_THRESH
 0x000000FF

	)

55 
	#AR_PHY_SPUR_REG_SPUR_RSSI_THRESH_S
 0

	)

56 
	#AR_PHY_SPUR_REG_EN_VIT_SPUR_RSSI
 0x00000100

	)

57 
	#AR_PHY_SPUR_REG_EN_VIT_SPUR_RSSI_S
 8

	)

58 
	#AR_PHY_SPUR_REG_MASK_RATE_CNTL
 0x03FC0000

	)

59 
	#AR_PHY_SPUR_REG_MASK_RATE_CNTL_S
 18

	)

61 
	#AR_PHY_RX_IQCAL_CORR_B0_LOOPBACK_IQCORR_EN
 0x20000000

	)

62 
	#AR_PHY_RX_IQCAL_CORR_B0_LOOPBACK_IQCORR_EN_S
 29

	)

64 
	#AR_PHY_TX_IQCAL_CONTROL_3_IQCORR_EN
 0x80000000

	)

65 
	#AR_PHY_TX_IQCAL_CONTROL_3_IQCORR_EN_S
 31

	)

67 
	#AR_PHY_FIND_SIG_LOW
 (
AR_CHAN_BASE
 + 0x20)

	)

69 
	#AR_PHY_SFCORR
 (
AR_CHAN_BASE
 + 0x24)

	)

70 
	#AR_PHY_SFCORR_LOW
 (
AR_CHAN_BASE
 + 0x28)

	)

71 
	#AR_PHY_SFCORR_EXT
 (
AR_CHAN_BASE
 + 0x2c)

	)

73 
	#AR_PHY_EXT_CCA
 (
AR_CHAN_BASE
 + 0x30)

	)

74 
	#AR_PHY_RADAR_0
 (
AR_CHAN_BASE
 + 0x34)

	)

75 
	#AR_PHY_RADAR_1
 (
AR_CHAN_BASE
 + 0x38)

	)

76 
	#AR_PHY_RADAR_EXT
 (
AR_CHAN_BASE
 + 0x3c)

	)

77 
	#AR_PHY_MULTICHAIN_CTRL
 (
AR_CHAN_BASE
 + 0x80)

	)

78 
	#AR_PHY_PERCHAIN_CSD
 (
AR_CHAN_BASE
 + 0x84)

	)

80 
	#AR_PHY_TX_PHASE_RAMP_0
 (
AR_CHAN_BASE
 + 0xd0)

	)

81 
	#AR_PHY_ADC_GAIN_DC_CORR_0
 (
AR_CHAN_BASE
 + 0xd4)

	)

82 
	#AR_PHY_IQ_ADC_MEAS_0_B0
 (
AR_CHAN_BASE
 + 0xc0)

	)

83 
	#AR_PHY_IQ_ADC_MEAS_1_B0
 (
AR_CHAN_BASE
 + 0xc4)

	)

84 
	#AR_PHY_IQ_ADC_MEAS_2_B0
 (
AR_CHAN_BASE
 + 0xc8)

	)

85 
	#AR_PHY_IQ_ADC_MEAS_3_B0
 (
AR_CHAN_BASE
 + 0xcc)

	)

88 
	#AR_PHY_TX_PHASE_RAMP_0_9300_10
 (
AR_CHAN_BASE
 + 0xd0 - 0x10)

	)

89 
	#AR_PHY_ADC_GAIN_DC_CORR_0_9300_10
 (
AR_CHAN_BASE
 + 0xd4 - 0x10)

	)

90 
	#AR_PHY_IQ_ADC_MEAS_0_B0_9300_10
 (
AR_CHAN_BASE
 + 0xc0 + 0x8)

	)

91 
	#AR_PHY_IQ_ADC_MEAS_1_B0_9300_10
 (
AR_CHAN_BASE
 + 0xc4 + 0x8)

	)

92 
	#AR_PHY_IQ_ADC_MEAS_2_B0_9300_10
 (
AR_CHAN_BASE
 + 0xc8 + 0x8)

	)

93 
	#AR_PHY_IQ_ADC_MEAS_3_B0_9300_10
 (
AR_CHAN_BASE
 + 0xc¯+ 0x8)

	)

95 
	#AR_PHY_TX_CRC
 (
AR_CHAN_BASE
 + 0xa0)

	)

96 
	#AR_PHY_TST_DAC_CONST
 (
AR_CHAN_BASE
 + 0xa4)

	)

97 
	#AR_PHY_SPUR_REPORT_0
 (
AR_CHAN_BASE
 + 0xa8)

	)

98 
	#AR_PHY_CHAN_INFO_TAB_0
 (
AR_CHAN_BASE
 + 0x300)

	)

103 
	#AR_PHY_TIMING2_USE_FORCE_PPM
 0x00001000

	)

104 
	#AR_PHY_TIMING2_FORCE_PPM_VAL
 0x00000fff

	)

105 
	#AR_PHY_TIMING3_DSC_MAN
 0xFFFE0000

	)

106 
	#AR_PHY_TIMING3_DSC_MAN_S
 17

	)

107 
	#AR_PHY_TIMING3_DSC_EXP
 0x0001E000

	)

108 
	#AR_PHY_TIMING3_DSC_EXP_S
 13

	)

109 
	#AR_PHY_TIMING4_IQCAL_LOG_COUNT_MAX
 0xF000

	)

110 
	#AR_PHY_TIMING4_IQCAL_LOG_COUNT_MAX_S
 12

	)

111 
	#AR_PHY_TIMING4_DO_CAL
 0x10000

	)

113 
	#AR_PHY_TIMING4_ENABLE_PILOT_MASK
 0x10000000

	)

114 
	#AR_PHY_TIMING4_ENABLE_PILOT_MASK_S
 28

	)

115 
	#AR_PHY_TIMING4_ENABLE_CHAN_MASK
 0x20000000

	)

116 
	#AR_PHY_TIMING4_ENABLE_CHAN_MASK_S
 29

	)

118 
	#AR_PHY_TIMING4_ENABLE_SPUR_FILTER
 0x40000000

	)

119 
	#AR_PHY_TIMING4_ENABLE_SPUR_FILTER_S
 30

	)

120 
	#AR_PHY_TIMING4_ENABLE_SPUR_RSSI
 0x80000000

	)

121 
	#AR_PHY_TIMING4_ENABLE_SPUR_RSSI_S
 31

	)

123 
	#AR_PHY_NEW_ADC_GAIN_CORR_ENABLE
 0x40000000

	)

124 
	#AR_PHY_NEW_ADC_DC_OFFSET_CORR_ENABLE
 0x80000000

	)

125 
	#AR_PHY_SFCORR_LOW_USE_SELF_CORR_LOW
 0x00000001

	)

126 
	#AR_PHY_SFCORR_LOW_M2COUNT_THR_LOW
 0x00003F00

	)

127 
	#AR_PHY_SFCORR_LOW_M2COUNT_THR_LOW_S
 8

	)

128 
	#AR_PHY_SFCORR_LOW_M1_THRESH_LOW
 0x001FC000

	)

129 
	#AR_PHY_SFCORR_LOW_M1_THRESH_LOW_S
 14

	)

130 
	#AR_PHY_SFCORR_LOW_M2_THRESH_LOW
 0x0FE00000

	)

131 
	#AR_PHY_SFCORR_LOW_M2_THRESH_LOW_S
 21

	)

132 
	#AR_PHY_SFCORR_M2COUNT_THR
 0x0000001F

	)

133 
	#AR_PHY_SFCORR_M2COUNT_THR_S
 0

	)

134 
	#AR_PHY_SFCORR_M1_THRESH
 0x00FE0000

	)

135 
	#AR_PHY_SFCORR_M1_THRESH_S
 17

	)

136 
	#AR_PHY_SFCORR_M2_THRESH
 0x7F000000

	)

137 
	#AR_PHY_SFCORR_M2_THRESH_S
 24

	)

138 
	#AR_PHY_SFCORR_EXT_M1_THRESH
 0x0000007F

	)

139 
	#AR_PHY_SFCORR_EXT_M1_THRESH_S
 0

	)

140 
	#AR_PHY_SFCORR_EXT_M2_THRESH
 0x00003F80

	)

141 
	#AR_PHY_SFCORR_EXT_M2_THRESH_S
 7

	)

142 
	#AR_PHY_SFCORR_EXT_M1_THRESH_LOW
 0x001FC000

	)

143 
	#AR_PHY_SFCORR_EXT_M1_THRESH_LOW_S
 14

	)

144 
	#AR_PHY_SFCORR_EXT_M2_THRESH_LOW
 0x0FE00000

	)

145 
	#AR_PHY_SFCORR_EXT_M2_THRESH_LOW_S
 21

	)

146 
	#AR_PHY_SFCORR_EXT_SPUR_SUBCHANNEL_SD
 0x10000000

	)

147 
	#AR_PHY_SFCORR_EXT_SPUR_SUBCHANNEL_SD_S
 28

	)

148 
	#AR_PHY_SFCORR_SPUR_SUBCHNL_SD_S
 28

	)

149 
	#AR_PHY_EXT_CCA_THRESH62
 0x007F0000

	)

150 
	#AR_PHY_EXT_CCA_THRESH62_S
 16

	)

151 
	#AR_PHY_EXTCHN_PWRTHR1_ANT_DIV_ALT_ANT_MINGAINIDX
 0x0000FF00

	)

152 
	#AR_PHY_EXTCHN_PWRTHR1_ANT_DIV_ALT_ANT_MINGAINIDX_S
 8

	)

153 
	#AR_PHY_EXT_MINCCA_PWR
 0x01FF0000

	)

154 
	#AR_PHY_EXT_MINCCA_PWR_S
 16

	)

155 
	#AR_PHY_EXT_CYCPWR_THR1
 0x0000FE00L

	)

156 
	#AR_PHY_EXT_CYCPWR_THR1_S
 9

	)

157 
	#AR_PHY_TIMING5_CYCPWR_THR1
 0x000000FE

	)

158 
	#AR_PHY_TIMING5_CYCPWR_THR1_S
 1

	)

159 
	#AR_PHY_TIMING5_CYCPWR_THR1_ENABLE
 0x00000001

	)

160 
	#AR_PHY_TIMING5_CYCPWR_THR1_ENABLE_S
 0

	)

161 
	#AR_PHY_TIMING5_CYCPWR_THR1A
 0x007F0000

	)

162 
	#AR_PHY_TIMING5_CYCPWR_THR1A_S
 16

	)

163 
	#AR_PHY_TIMING5_RSSI_THR1A
 (0x7F << 16)

	)

164 
	#AR_PHY_TIMING5_RSSI_THR1A_S
 16

	)

165 
	#AR_PHY_TIMING5_RSSI_THR1A_ENA
 (0x1 << 15)

	)

166 
	#AR_PHY_RADAR_0_ENA
 0x00000001

	)

167 
	#AR_PHY_RADAR_0_FFT_ENA
 0x80000000

	)

168 
	#AR_PHY_RADAR_0_INBAND
 0x0000003e

	)

169 
	#AR_PHY_RADAR_0_INBAND_S
 1

	)

170 
	#AR_PHY_RADAR_0_PRSSI
 0x00000FC0

	)

171 
	#AR_PHY_RADAR_0_PRSSI_S
 6

	)

172 
	#AR_PHY_RADAR_0_HEIGHT
 0x0003F000

	)

173 
	#AR_PHY_RADAR_0_HEIGHT_S
 12

	)

174 
	#AR_PHY_RADAR_0_RRSSI
 0x00FC0000

	)

175 
	#AR_PHY_RADAR_0_RRSSI_S
 18

	)

176 
	#AR_PHY_RADAR_0_FIRPWR
 0x7F000000

	)

177 
	#AR_PHY_RADAR_0_FIRPWR_S
 24

	)

178 
	#AR_PHY_RADAR_1_RELPWR_ENA
 0x00800000

	)

179 
	#AR_PHY_RADAR_1_USE_FIR128
 0x00400000

	)

180 
	#AR_PHY_RADAR_1_RELPWR_THRESH
 0x003F0000

	)

181 
	#AR_PHY_RADAR_1_RELPWR_THRESH_S
 16

	)

182 
	#AR_PHY_RADAR_1_BLOCK_CHECK
 0x00008000

	)

183 
	#AR_PHY_RADAR_1_MAX_RRSSI
 0x00004000

	)

184 
	#AR_PHY_RADAR_1_RELSTEP_CHECK
 0x00002000

	)

185 
	#AR_PHY_RADAR_1_RELSTEP_THRESH
 0x00001F00

	)

186 
	#AR_PHY_RADAR_1_RELSTEP_THRESH_S
 8

	)

187 
	#AR_PHY_RADAR_1_MAXLEN
 0x000000FF

	)

188 
	#AR_PHY_RADAR_1_MAXLEN_S
 0

	)

189 
	#AR_PHY_RADAR_EXT_ENA
 0x00004000

	)

190 
	#AR_PHY_RADAR_DC_PWR_THRESH
 0x007f8000

	)

191 
	#AR_PHY_RADAR_DC_PWR_THRESH_S
 15

	)

192 
	#AR_PHY_RADAR_LB_DC_CAP
 0x7f800000

	)

193 
	#AR_PHY_RADAR_LB_DC_CAP_S
 23

	)

194 
	#AR_PHY_FIND_SIG_LOW_FIRSTEP_LOW
 (0x3‡<< 6)

	)

195 
	#AR_PHY_FIND_SIG_LOW_FIRSTEP_LOW_S
 6

	)

196 
	#AR_PHY_FIND_SIG_LOW_FIRPWR
 (0x7‡<< 12)

	)

197 
	#AR_PHY_FIND_SIG_LOW_FIRPWR_S
 12

	)

198 
	#AR_PHY_FIND_SIG_LOW_FIRPWR_SIGN_BIT
 19

	)

199 
	#AR_PHY_FIND_SIG_LOW_RELSTEP
 0x1f

	)

200 
	#AR_PHY_FIND_SIG_LOW_RELSTEP_S
 0

	)

201 
	#AR_PHY_FIND_SIG_LOW_RELSTEP_SIGN_BIT
 5

	)

202 
	#AR_PHY_CHAN_INFO_TAB_S2_READ
 0x00000008

	)

203 
	#AR_PHY_CHAN_INFO_TAB_S2_READ_S
 3

	)

204 
	#AR_PHY_RX_IQCAL_CORR_IQCORR_Q_Q_COFF
 0x0000007F

	)

205 
	#AR_PHY_RX_IQCAL_CORR_IQCORR_Q_Q_COFF_S
 0

	)

206 
	#AR_PHY_RX_IQCAL_CORR_IQCORR_Q_I_COFF
 0x00003F80

	)

207 
	#AR_PHY_RX_IQCAL_CORR_IQCORR_Q_I_COFF_S
 7

	)

208 
	#AR_PHY_RX_IQCAL_CORR_IQCORR_ENABLE
 0x00004000

	)

209 
	#AR_PHY_RX_IQCAL_CORR_LOOPBACK_IQCORR_Q_Q_COFF
 0x003f8000

	)

210 
	#AR_PHY_RX_IQCAL_CORR_LOOPBACK_IQCORR_Q_Q_COFF_S
 15

	)

211 
	#AR_PHY_RX_IQCAL_CORR_LOOPBACK_IQCORR_Q_I_COFF
 0x1fc00000

	)

212 
	#AR_PHY_RX_IQCAL_CORR_LOOPBACK_IQCORR_Q_I_COFF_S
 22

	)

217 
	#AR_MRC_BASE
 0x9c00

	)

219 
	#AR_PHY_TIMING_3A
 (
AR_MRC_BASE
 + 0x0)

	)

220 
	#AR_PHY_LDPC_CNTL1
 (
AR_MRC_BASE
 + 0x4)

	)

221 
	#AR_PHY_LDPC_CNTL2
 (
AR_MRC_BASE
 + 0x8)

	)

222 
	#AR_PHY_PILOT_SPUR_MASK
 (
AR_MRC_BASE
 + 0xc)

	)

223 
	#AR_PHY_CHAN_SPUR_MASK
 (
AR_MRC_BASE
 + 0x10)

	)

224 
	#AR_PHY_SGI_DELTA
 (
AR_MRC_BASE
 + 0x14)

	)

225 
	#AR_PHY_ML_CNTL_1
 (
AR_MRC_BASE
 + 0x18)

	)

226 
	#AR_PHY_ML_CNTL_2
 (
AR_MRC_BASE
 + 0x1c)

	)

227 
	#AR_PHY_TST_ADC
 (
AR_MRC_BASE
 + 0x20)

	)

229 
	#AR_PHY_PILOT_SPUR_MASK_CF_PILOT_MASK_IDX_A
 0x00000FE0

	)

230 
	#AR_PHY_PILOT_SPUR_MASK_CF_PILOT_MASK_IDX_A_S
 5

	)

231 
	#AR_PHY_PILOT_SPUR_MASK_CF_PILOT_MASK_A
 0x1F

	)

232 
	#AR_PHY_PILOT_SPUR_MASK_CF_PILOT_MASK_A_S
 0

	)

233 
	#AR_PHY_PILOT_SPUR_MASK_CF_PILOT_MASK_IDX_B
 0x00FE0000

	)

234 
	#AR_PHY_PILOT_SPUR_MASK_CF_PILOT_MASK_IDX_B_S
 17

	)

235 
	#AR_PHY_PILOT_SPUR_MASK_CF_PILOT_MASK_B
 0x0001F000

	)

236 
	#AR_PHY_PILOT_SPUR_MASK_CF_PILOT_MASK_B_S
 12

	)

238 
	#AR_PHY_CHAN_SPUR_MASK_CF_CHAN_MASK_IDX_A
 0x00000FE0

	)

239 
	#AR_PHY_CHAN_SPUR_MASK_CF_CHAN_MASK_IDX_A_S
 5

	)

240 
	#AR_PHY_CHAN_SPUR_MASK_CF_CHAN_MASK_A
 0x1F

	)

241 
	#AR_PHY_CHAN_SPUR_MASK_CF_CHAN_MASK_A_S
 0

	)

242 
	#AR_PHY_CHAN_SPUR_MASK_CF_CHAN_MASK_IDX_B
 0x00FE0000

	)

243 
	#AR_PHY_CHAN_SPUR_MASK_CF_CHAN_MASK_IDX_B_S
 17

	)

244 
	#AR_PHY_CHAN_SPUR_MASK_CF_CHAN_MASK_B
 0x0001F000

	)

245 
	#AR_PHY_CHAN_SPUR_MASK_CF_CHAN_MASK_B_S
 12

	)

251 
	#AR_PHY_SGI_DSC_MAN
 0x0007FFF0

	)

252 
	#AR_PHY_SGI_DSC_MAN_S
 4

	)

253 
	#AR_PHY_SGI_DSC_EXP
 0x0000000F

	)

254 
	#AR_PHY_SGI_DSC_EXP_S
 0

	)

258 
	#AR_BBB_BASE
 0x9d00

	)

263 
	#AR_AGC_BASE
 0x9e00

	)

265 
	#AR_PHY_SETTLING
 (
AR_AGC_BASE
 + 0x0)

	)

266 
	#AR_PHY_FORCEMAX_GAINS_0
 (
AR_AGC_BASE
 + 0x4)

	)

267 
	#AR_PHY_GAINS_MINOFF0
 (
AR_AGC_BASE
 + 0x8)

	)

268 
	#AR_PHY_DESIRED_SZ
 (
AR_AGC_BASE
 + 0xc)

	)

269 
	#AR_PHY_FIND_SIG
 (
AR_AGC_BASE
 + 0x10)

	)

270 
	#AR_PHY_AGC
 (
AR_AGC_BASE
 + 0x14)

	)

271 
	#AR_PHY_EXT_ATTEN_CTL_0
 (
AR_AGC_BASE
 + 0x18)

	)

272 
	#AR_PHY_CCA_0
 (
AR_AGC_BASE
 + 0x1c)

	)

273 
	#AR_PHY_CCA_CTRL_0
 (
AR_AGC_BASE
 + 0x20)

	)

274 
	#AR_PHY_RESTART
 (
AR_AGC_BASE
 + 0x24)

	)

279 
	#AR_PHY_MC_GAIN_CTRL
 (
AR_AGC_BASE
 + 0x28)

	)

280 
	#AR_ANT_DIV_CTRL_ALL
 0x7e000000

	)

281 
	#AR_ANT_DIV_CTRL_ALL_S
 25

	)

282 
	#AR_ANT_DIV_ENABLE
 0x1000000

	)

283 
	#AR_ANT_DIV_ENABLE_S
 24

	)

286 
	#AR_PHY_ANT_FAST_DIV_BIAS
 0x00007e00

	)

287 
	#AR_PHY_ANT_FAST_DIV_BIAS_S
 9

	)

288 
	#AR_PHY_ANT_SW_RX_PROT
 0x00800000

	)

289 
	#AR_PHY_ANT_SW_RX_PROT_S
 23

	)

290 
	#AR_PHY_ANT_DIV_LNADIV
 0x01000000

	)

291 
	#AR_PHY_ANT_DIV_LNADIV_S
 24

	)

292 
	#AR_PHY_ANT_DIV_ALT_LNACONF
 0x06000000

	)

293 
	#AR_PHY_ANT_DIV_ALT_LNACONF_S
 25

	)

294 
	#AR_PHY_ANT_DIV_MAIN_LNACONF
 0x18000000

	)

295 
	#AR_PHY_ANT_DIV_MAIN_LNACONF_S
 27

	)

296 
	#AR_PHY_ANT_DIV_ALT_GAINTB
 0x20000000

	)

297 
	#AR_PHY_ANT_DIV_ALT_GAINTB_S
 29

	)

298 
	#AR_PHY_ANT_DIV_MAIN_GAINTB
 0x40000000

	)

299 
	#AR_PHY_ANT_DIV_MAIN_GAINTB_S
 30

	)

301 
	#AR_PHY_EXTCHN_PWRTHR1
 (
AR_AGC_BASE
 + 0x2c)

	)

302 
	#AR_PHY_EXT_CHN_WIN
 (
AR_AGC_BASE
 + 0x30)

	)

303 
	#AR_PHY_20_40_DET_THR
 (
AR_AGC_BASE
 + 0x34)

	)

304 
	#AR_PHY_RIFS_SRCH
 (
AR_AGC_BASE
 + 0x38)

	)

305 
	#AR_PHY_PEAK_DET_CTRL_1
 (
AR_AGC_BASE
 + 0x3c)

	)

306 
	#AR_PHY_PEAK_DET_CTRL_2
 (
AR_AGC_BASE
 + 0x40)

	)

307 
	#AR_PHY_RX_GAIN_BOUNDS_1
 (
AR_AGC_BASE
 + 0x44)

	)

308 
	#AR_PHY_RX_GAIN_BOUNDS_2
 (
AR_AGC_BASE
 + 0x48)

	)

309 
	#AR_PHY_RSSI_0
 (
AR_AGC_BASE
 + 0x180)

	)

310 
	#AR_PHY_SPUR_CCK_REP0
 (
AR_AGC_BASE
 + 0x184)

	)

312 
	#AR_PHY_CCK_DETECT
 (
AR_AGC_BASE
 + 0x1c0)

	)

313 
	#AR_FAST_DIV_ENABLE
 0x2000

	)

314 
	#AR_FAST_DIV_ENABLE_S
 13

	)

316 
	#AR_PHY_DAG_CTRLCCK
 (
AR_AGC_BASE
 + 0x1c4)

	)

317 
	#AR_PHY_IQCORR_CTRL_CCK
 (
AR_AGC_BASE
 + 0x1c8)

	)

319 
	#AR_PHY_CCK_SPUR_MIT
 (
AR_AGC_BASE
 + 0x1cc)

	)

320 
	#AR_PHY_CCK_SPUR_MIT_SPUR_RSSI_THR
 0x000001„

	)

321 
	#AR_PHY_CCK_SPUR_MIT_SPUR_RSSI_THR_S
 1

	)

322 
	#AR_PHY_CCK_SPUR_MIT_SPUR_FILTER_TYPE
 0x60000000

	)

323 
	#AR_PHY_CCK_SPUR_MIT_SPUR_FILTER_TYPE_S
 29

	)

324 
	#AR_PHY_CCK_SPUR_MIT_USE_CCK_SPUR_MIT
 0x00000001

	)

325 
	#AR_PHY_CCK_SPUR_MIT_USE_CCK_SPUR_MIT_S
 0

	)

326 
	#AR_PHY_CCK_SPUR_MIT_CCK_SPUR_FREQ
 0x1fff„00

	)

327 
	#AR_PHY_CCK_SPUR_MIT_CCK_SPUR_FREQ_S
 9

	)

329 
	#AR_PHY_MRC_CCK_CTRL
 (
AR_AGC_BASE
 + 0x1d0)

	)

330 
	#AR_PHY_MRC_CCK_ENABLE
 0x00000001

	)

331 
	#AR_PHY_MRC_CCK_ENABLE_S
 0

	)

332 
	#AR_PHY_MRC_CCK_MUX_REG
 0x00000002

	)

333 
	#AR_PHY_MRC_CCK_MUX_REG_S
 1

	)

335 
	#AR_PHY_RX_OCGAIN
 (
AR_AGC_BASE
 + 0x200)

	)

337 
	#AR_PHY_CCA_NOM_VAL_9300_2GHZ
 -110

	)

338 
	#AR_PHY_CCA_NOM_VAL_9300_5GHZ
 -115

	)

339 
	#AR_PHY_CCA_MIN_GOOD_VAL_9300_2GHZ
 -125

	)

340 
	#AR_PHY_CCA_MIN_GOOD_VAL_9300_5GHZ
 -125

	)

341 
	#AR_PHY_CCA_MAX_GOOD_VAL_9300_2GHZ
 -60

	)

342 
	#AR_PHY_CCA_MAX_GOOD_VAL_9300_5GHZ
 -60

	)

343 
	#AR_PHY_CCA_MAX_GOOD_VAL_9300_FCC_2GHZ
 -95

	)

344 
	#AR_PHY_CCA_MAX_GOOD_VAL_9300_FCC_5GHZ
 -100

	)

346 
	#AR_PHY_CCA_NOM_VAL_9462_2GHZ
 -127

	)

347 
	#AR_PHY_CCA_MIN_GOOD_VAL_9462_2GHZ
 -127

	)

348 
	#AR_PHY_CCA_MAX_GOOD_VAL_9462_2GHZ
 -60

	)

349 
	#AR_PHY_CCA_NOM_VAL_9462_5GHZ
 -127

	)

350 
	#AR_PHY_CCA_MIN_GOOD_VAL_9462_5GHZ
 -127

	)

351 
	#AR_PHY_CCA_MAX_GOOD_VAL_9462_5GHZ
 -60

	)

353 
	#AR_PHY_CCA_NOM_VAL_9330_2GHZ
 -118

	)

355 
	#AR9300_EXT_LNA_CTL_GPIO_AR9485
 9

	)

360 
	#AR_PHY_EXT_ATTEN_CTL_RXTX_MARGIN
 0x00FC0000

	)

361 
	#AR_PHY_EXT_ATTEN_CTL_RXTX_MARGIN_S
 18

	)

362 
	#AR_PHY_EXT_ATTEN_CTL_BSW_MARGIN
 0x00003C00

	)

363 
	#AR_PHY_EXT_ATTEN_CTL_BSW_MARGIN_S
 10

	)

364 
	#AR_PHY_EXT_ATTEN_CTL_BSW_ATTEN
 0x0000001F

	)

365 
	#AR_PHY_EXT_ATTEN_CTL_BSW_ATTEN_S
 0

	)

366 
	#AR_PHY_EXT_ATTEN_CTL_XATTEN2_MARGIN
 0x003E0000

	)

367 
	#AR_PHY_EXT_ATTEN_CTL_XATTEN2_MARGIN_S
 17

	)

368 
	#AR_PHY_EXT_ATTEN_CTL_XATTEN1_MARGIN
 0x0001F000

	)

369 
	#AR_PHY_EXT_ATTEN_CTL_XATTEN1_MARGIN_S
 12

	)

370 
	#AR_PHY_EXT_ATTEN_CTL_XATTEN2_DB
 0x00000FC0

	)

371 
	#AR_PHY_EXT_ATTEN_CTL_XATTEN2_DB_S
 6

	)

372 
	#AR_PHY_EXT_ATTEN_CTL_XATTEN1_DB
 0x0000003F

	)

373 
	#AR_PHY_EXT_ATTEN_CTL_XATTEN1_DB_S
 0

	)

374 
	#AR_PHY_RXGAIN_TXRX_ATTEN
 0x0003F000

	)

375 
	#AR_PHY_RXGAIN_TXRX_ATTEN_S
 12

	)

376 
	#AR_PHY_RXGAIN_TXRX_RF_MAX
 0x007C0000

	)

377 
	#AR_PHY_RXGAIN_TXRX_RF_MAX_S
 18

	)

378 
	#AR9280_PHY_RXGAIN_TXRX_ATTEN
 0x00003F80

	)

379 
	#AR9280_PHY_RXGAIN_TXRX_ATTEN_S
 7

	)

380 
	#AR9280_PHY_RXGAIN_TXRX_MARGIN
 0x001FC000

	)

381 
	#AR9280_PHY_RXGAIN_TXRX_MARGIN_S
 14

	)

382 
	#AR_PHY_SETTLING_SWITCH
 0x00003F80

	)

383 
	#AR_PHY_SETTLING_SWITCH_S
 7

	)

384 
	#AR_PHY_DESIRED_SZ_ADC
 0x000000FF

	)

385 
	#AR_PHY_DESIRED_SZ_ADC_S
 0

	)

386 
	#AR_PHY_DESIRED_SZ_PGA
 0x0000FF00

	)

387 
	#AR_PHY_DESIRED_SZ_PGA_S
 8

	)

388 
	#AR_PHY_DESIRED_SZ_TOT_DES
 0x0FF00000

	)

389 
	#AR_PHY_DESIRED_SZ_TOT_DES_S
 20

	)

390 
	#AR_PHY_MINCCA_PWR
 0x1FF00000

	)

391 
	#AR_PHY_MINCCA_PWR_S
 20

	)

392 
	#AR_PHY_CCA_THRESH62
 0x0007F000

	)

393 
	#AR_PHY_CCA_THRESH62_S
 12

	)

394 
	#AR9280_PHY_MINCCA_PWR
 0x1FF00000

	)

395 
	#AR9280_PHY_MINCCA_PWR_S
 20

	)

396 
	#AR9280_PHY_CCA_THRESH62
 0x000FF000

	)

397 
	#AR9280_PHY_CCA_THRESH62_S
 12

	)

398 
	#AR_PHY_EXT_CCA0_THRESH62
 0x000000FF

	)

399 
	#AR_PHY_EXT_CCA0_THRESH62_S
 0

	)

400 
	#AR_PHY_EXT_CCA0_THRESH62_1
 0x000001FF

	)

401 
	#AR_PHY_EXT_CCA0_THRESH62_1_S
 0

	)

402 
	#AR_PHY_CCK_DETECT_WEAK_SIG_THR_CCK
 0x0000003F

	)

403 
	#AR_PHY_CCK_DETECT_WEAK_SIG_THR_CCK_S
 0

	)

404 
	#AR_PHY_CCK_DETECT_ANT_SWITCH_TIME
 0x00001FC0

	)

405 
	#AR_PHY_CCK_DETECT_ANT_SWITCH_TIME_S
 6

	)

406 
	#AR_PHY_CCK_DETECT_BB_ENABLE_ANT_FAST_DIV
 0x2000

	)

408 
	#AR_PHY_DAG_CTRLCCK_EN_RSSI_THR
 0x00000200

	)

409 
	#AR_PHY_DAG_CTRLCCK_EN_RSSI_THR_S
 9

	)

410 
	#AR_PHY_DAG_CTRLCCK_RSSI_THR
 0x0001FC00

	)

411 
	#AR_PHY_DAG_CTRLCCK_RSSI_THR_S
 10

	)

413 
	#AR_PHY_RIFS_INIT_DELAY
 0x3ff0000

	)

414 
	#AR_PHY_AGC_QUICK_DROP
 0x03c00000

	)

415 
	#AR_PHY_AGC_QUICK_DROP_S
 22

	)

416 
	#AR_PHY_AGC_COARSE_LOW
 0x00007F80

	)

417 
	#AR_PHY_AGC_COARSE_LOW_S
 7

	)

418 
	#AR_PHY_AGC_COARSE_HIGH
 0x003F8000

	)

419 
	#AR_PHY_AGC_COARSE_HIGH_S
 15

	)

420 
	#AR_PHY_AGC_COARSE_PWR_CONST
 0x0000007F

	)

421 
	#AR_PHY_AGC_COARSE_PWR_CONST_S
 0

	)

422 
	#AR_PHY_FIND_SIG_FIRSTEP
 0x0003F000

	)

423 
	#AR_PHY_FIND_SIG_FIRSTEP_S
 12

	)

424 
	#AR_PHY_FIND_SIG_FIRPWR
 0x03FC0000

	)

425 
	#AR_PHY_FIND_SIG_FIRPWR_S
 18

	)

426 
	#AR_PHY_FIND_SIG_FIRPWR_SIGN_BIT
 25

	)

427 
	#AR_PHY_FIND_SIG_RELPWR
 (0x1‡<< 6)

	)

428 
	#AR_PHY_FIND_SIG_RELPWR_S
 6

	)

429 
	#AR_PHY_FIND_SIG_RELPWR_SIGN_BIT
 11

	)

430 
	#AR_PHY_FIND_SIG_RELSTEP
 0x1f

	)

431 
	#AR_PHY_FIND_SIG_RELSTEP_S
 0

	)

432 
	#AR_PHY_FIND_SIG_RELSTEP_SIGN_BIT
 5

	)

433 
	#AR_PHY_RESTART_ENABLE_DIV_M2FLAG
 0x00200000

	)

434 
	#AR_PHY_RESTART_ENABLE_DIV_M2FLAG_S
 21

	)

435 
	#AR_PHY_RESTART_DIV_GC
 0x001C0000

	)

436 
	#AR_PHY_RESTART_DIV_GC_S
 18

	)

437 
	#AR_PHY_RESTART_ENA
 0x01

	)

438 
	#AR_PHY_DC_RESTART_DIS
 0x40000000

	)

440 
	#AR_PHY_TPC_OLPC_GAIN_DELTA_PAL_ON
 0xFF000000

	)

441 
	#AR_PHY_TPC_OLPC_GAIN_DELTA_PAL_ON_S
 24

	)

442 
	#AR_PHY_TPC_OLPC_GAIN_DELTA
 0x00FF0000

	)

443 
	#AR_PHY_TPC_OLPC_GAIN_DELTA_S
 16

	)

445 
	#AR_PHY_TPC_6_ERROR_EST_MODE
 0x03000000

	)

446 
	#AR_PHY_TPC_6_ERROR_EST_MODE_S
 24

	)

451 
	#AR_SM_BASE
 0xa200

	)

453 
	#AR_PHY_D2_CHIP_ID
 (
AR_SM_BASE
 + 0x0)

	)

454 
	#AR_PHY_GEN_CTRL
 (
AR_SM_BASE
 + 0x4)

	)

455 
	#AR_PHY_MODE
 (
AR_SM_BASE
 + 0x8)

	)

456 
	#AR_PHY_ACTIVE
 (
AR_SM_BASE
 + 0xc)

	)

457 
	#AR_PHY_SPUR_MASK_A
 (
AR_SM_BASE
 + 0x20)

	)

458 
	#AR_PHY_SPUR_MASK_B
 (
AR_SM_BASE
 + 0x24)

	)

459 
	#AR_PHY_SPECTRAL_SCAN
 (
AR_SM_BASE
 + 0x28)

	)

460 
	#AR_PHY_RADAR_BW_FILTER
 (
AR_SM_BASE
 + 0x2c)

	)

461 
	#AR_PHY_SEARCH_START_DELAY
 (
AR_SM_BASE
 + 0x30)

	)

462 
	#AR_PHY_MAX_RX_LEN
 (
AR_SM_BASE
 + 0x34)

	)

463 
	#AR_PHY_FRAME_CTL
 (
AR_SM_BASE
 + 0x38)

	)

464 
	#AR_PHY_RFBUS_REQ
 (
AR_SM_BASE
 + 0x3c)

	)

465 
	#AR_PHY_RFBUS_GRANT
 (
AR_SM_BASE
 + 0x40)

	)

466 
	#AR_PHY_RIFS
 (
AR_SM_BASE
 + 0x44)

	)

467 
	#AR_PHY_RX_CLR_DELAY
 (
AR_SM_BASE
 + 0x50)

	)

468 
	#AR_PHY_RX_DELAY
 (
AR_SM_BASE
 + 0x54)

	)

470 
	#AR_PHY_XPA_TIMING_CTL
 (
AR_SM_BASE
 + 0x64)

	)

471 
	#AR_PHY_MISC_PA_CTL
 (
AR_SM_BASE
 + 0x80)

	)

472 
	#AR_PHY_SWITCH_CHAIN_0
 (
AR_SM_BASE
 + 0x84)

	)

473 
	#AR_PHY_SWITCH_COM
 (
AR_SM_BASE
 + 0x88)

	)

474 
	#AR_PHY_SWITCH_COM_2
 (
AR_SM_BASE
 + 0x8c)

	)

475 
	#AR_PHY_RX_CHAINMASK
 (
AR_SM_BASE
 + 0xa0)

	)

476 
	#AR_PHY_CAL_CHAINMASK
 (
AR_SM_BASE
 + 0xc0)

	)

477 
	#AR_PHY_CALMODE
 (
AR_SM_BASE
 + 0xc8)

	)

478 
	#AR_PHY_FCAL_1
 (
AR_SM_BASE
 + 0xcc)

	)

479 
	#AR_PHY_FCAL_2_0
 (
AR_SM_BASE
 + 0xd0)

	)

480 
	#AR_PHY_DFT_TONE_CTL_0
 (
AR_SM_BASE
 + 0xd4)

	)

481 
	#AR_PHY_CL_CAL_CTL
 (
AR_SM_BASE
 + 0xd8)

	)

482 
	#AR_PHY_CL_TAB_0
 (
AR_SM_BASE
 + 0x100)

	)

483 
	#AR_PHY_SYNTH_CONTROL
 (
AR_SM_BASE
 + 0x140)

	)

484 
	#AR_PHY_ADDAC_CLK_SEL
 (
AR_SM_BASE
 + 0x144)

	)

485 
	#AR_PHY_PLL_CTL
 (
AR_SM_BASE
 + 0x148)

	)

486 
	#AR_PHY_ANALOG_SWAP
 (
AR_SM_BASE
 + 0x14c)

	)

487 
	#AR_PHY_ADDAC_PARA_CTL
 (
AR_SM_BASE
 + 0x150)

	)

488 
	#AR_PHY_XPA_CFG
 (
AR_SM_BASE
 + 0x158)

	)

490 
	#AR_PHY_FRAME_CTL_CF_OVERLAP_WINDOW
 3

	)

491 
	#AR_PHY_FRAME_CTL_CF_OVERLAP_WINDOW_S
 0

	)

493 
	#AR_PHY_SPUR_MASK_A_CF_PUNC_MASK_IDX_A
 0x0001FC00

	)

494 
	#AR_PHY_SPUR_MASK_A_CF_PUNC_MASK_IDX_A_S
 10

	)

495 
	#AR_PHY_SPUR_MASK_A_CF_PUNC_MASK_A
 0x3FF

	)

496 
	#AR_PHY_SPUR_MASK_A_CF_PUNC_MASK_A_S
 0

	)

498 
	#AR_PHY_TEST
 (
AR_SM_BASE
 + 0x160)

	)

500 
	#AR_PHY_TEST_BBB_OBS_SEL
 0x780000

	)

501 
	#AR_PHY_TEST_BBB_OBS_SEL_S
 19

	)

503 
	#AR_PHY_TEST_RX_OBS_SEL_BIT5_S
 23

	)

504 
	#AR_PHY_TEST_RX_OBS_SEL_BIT5
 (1 << 
AR_PHY_TEST_RX_OBS_SEL_BIT5_S
)

	)

506 
	#AR_PHY_TEST_CHAIN_SEL
 0xC0000000

	)

507 
	#AR_PHY_TEST_CHAIN_SEL_S
 30

	)

509 
	#AR_PHY_TEST_CTL_STATUS
 (
AR_SM_BASE
 + 0x164)

	)

510 
	#AR_PHY_TEST_CTL_TSTDAC_EN
 0x1

	)

511 
	#AR_PHY_TEST_CTL_TSTDAC_EN_S
 0

	)

512 
	#AR_PHY_TEST_CTL_TX_OBS_SEL
 0x1C

	)

513 
	#AR_PHY_TEST_CTL_TX_OBS_SEL_S
 2

	)

514 
	#AR_PHY_TEST_CTL_TX_OBS_MUX_SEL
 0x60

	)

515 
	#AR_PHY_TEST_CTL_TX_OBS_MUX_SEL_S
 5

	)

516 
	#AR_PHY_TEST_CTL_TSTADC_EN
 0x100

	)

517 
	#AR_PHY_TEST_CTL_TSTADC_EN_S
 8

	)

518 
	#AR_PHY_TEST_CTL_RX_OBS_SEL
 0x3C00

	)

519 
	#AR_PHY_TEST_CTL_RX_OBS_SEL_S
 10

	)

520 
	#AR_PHY_TEST_CTL_DEBUGPORT_SEL
 0xe0000000

	)

521 
	#AR_PHY_TEST_CTL_DEBUGPORT_SEL_S
 29

	)

524 
	#AR_PHY_TSTDAC
 (
AR_SM_BASE
 + 0x168)

	)

526 
	#AR_PHY_CHAN_STATUS
 (
AR_SM_BASE
 + 0x16c)

	)

528 
	#AR_PHY_CHAN_INFO_MEMORY
 (
AR_SM_BASE
 + 0x170)

	)

529 
	#AR_PHY_CHAN_INFO_MEMORY_CHANINFOMEM_S2_READ
 0x00000008

	)

530 
	#AR_PHY_CHAN_INFO_MEMORY_CHANINFOMEM_S2_READ_S
 3

	)

532 
	#AR_PHY_CHNINFO_NOISEPWR
 (
AR_SM_BASE
 + 0x174)

	)

533 
	#AR_PHY_CHNINFO_GAINDIFF
 (
AR_SM_BASE
 + 0x178)

	)

534 
	#AR_PHY_CHNINFO_FINETIM
 (
AR_SM_BASE
 + 0x17c)

	)

535 
	#AR_PHY_CHAN_INFO_GAIN_0
 (
AR_SM_BASE
 + 0x180)

	)

536 
	#AR_PHY_SCRAMBLER_SEED
 (
AR_SM_BASE
 + 0x190)

	)

537 
	#AR_PHY_CCK_TX_CTRL
 (
AR_SM_BASE
 + 0x194)

	)

539 
	#AR_PHY_HEAVYCLIP_CTL
 (
AR_SM_BASE
 + 0x1a4)

	)

540 
	#AR_PHY_HEAVYCLIP_20
 (
AR_SM_BASE
 + 0x1a8)

	)

541 
	#AR_PHY_HEAVYCLIP_40
 (
AR_SM_BASE
 + 0x1ac)

	)

542 
	#AR_PHY_ILLEGAL_TXRATE
 (
AR_SM_BASE
 + 0x1b0)

	)

544 
	#AR_PHY_POWER_TX_RATE
(
_d
Ë(
AR_SM_BASE
 + 0x1c0 + ((_dË<< 2))

	)

546 
	#AR_PHY_PWRTX_MAX
 (
AR_SM_BASE
 + 0x1f0)

	)

547 
	#AR_PHY_POWER_TX_SUB
 (
AR_SM_BASE
 + 0x1f4)

	)

549 
	#AR_PHY_TPC_1
 (
AR_SM_BASE
 + 0x1f8)

	)

550 
	#AR_PHY_TPC_1_FORCED_DAC_GAIN
 0x0000003e

	)

551 
	#AR_PHY_TPC_1_FORCED_DAC_GAIN_S
 1

	)

552 
	#AR_PHY_TPC_1_FORCE_DAC_GAIN
 0x00000001

	)

553 
	#AR_PHY_TPC_1_FORCE_DAC_GAIN_S
 0

	)

555 
	#AR_PHY_TPC_4_B0
 (
AR_SM_BASE
 + 0x204)

	)

556 
	#AR_PHY_TPC_5_B0
 (
AR_SM_BASE
 + 0x208)

	)

557 
	#AR_PHY_TPC_6_B0
 (
AR_SM_BASE
 + 0x20c)

	)

559 
	#AR_PHY_TPC_11_B0
 (
AR_SM_BASE
 + 0x220)

	)

560 
	#AR_PHY_TPC_11_B1
 (
AR_SM1_BASE
 + 0x220)

	)

561 
	#AR_PHY_TPC_11_B2
 (
AR_SM2_BASE
 + 0x220)

	)

562 
	#AR_PHY_TPC_11_OLPC_GAIN_DELTA
 0x00ff0000

	)

563 
	#AR_PHY_TPC_11_OLPC_GAIN_DELTA_S
 16

	)

565 
	#AR_PHY_TPC_12
 (
AR_SM_BASE
 + 0x224)

	)

566 
	#AR_PHY_TPC_12_DESIRED_SCALE_HT40_5
 0x3e000000

	)

567 
	#AR_PHY_TPC_12_DESIRED_SCALE_HT40_5_S
 25

	)

569 
	#AR_PHY_TPC_18
 (
AR_SM_BASE
 + 0x23c)

	)

570 
	#AR_PHY_TPC_18_THERM_CAL_VALUE
 0x000000ff

	)

571 
	#AR_PHY_TPC_18_THERM_CAL_VALUE_S
 0

	)

572 
	#AR_PHY_TPC_18_VOLT_CAL_VALUE
 0x0000ff00

	)

573 
	#AR_PHY_TPC_18_VOLT_CAL_VALUE_S
 8

	)

575 
	#AR_PHY_TPC_19
 (
AR_SM_BASE
 + 0x240)

	)

576 
	#AR_PHY_TPC_19_ALPHA_VOLT
 0x001f0000

	)

577 
	#AR_PHY_TPC_19_ALPHA_VOLT_S
 16

	)

578 
	#AR_PHY_TPC_19_ALPHA_THERM
 0xff

	)

579 
	#AR_PHY_TPC_19_ALPHA_THERM_S
 0

	)

581 
	#AR_PHY_TX_FORCED_GAIN
 (
AR_SM_BASE
 + 0x258)

	)

582 
	#AR_PHY_TX_FORCED_GAIN_FORCE_TX_GAIN
 0x00000001

	)

583 
	#AR_PHY_TX_FORCED_GAIN_FORCE_TX_GAIN_S
 0

	)

584 
	#AR_PHY_TX_FORCED_GAIN_FORCED_TXBB1DBGAIN
 0x0000000e

	)

585 
	#AR_PHY_TX_FORCED_GAIN_FORCED_TXBB1DBGAIN_S
 1

	)

586 
	#AR_PHY_TX_FORCED_GAIN_FORCED_TXBB6DBGAIN
 0x00000030

	)

587 
	#AR_PHY_TX_FORCED_GAIN_FORCED_TXBB6DBGAIN_S
 4

	)

588 
	#AR_PHY_TX_FORCED_GAIN_FORCED_TXMXRGAIN
 0x000003c0

	)

589 
	#AR_PHY_TX_FORCED_GAIN_FORCED_TXMXRGAIN_S
 6

	)

590 
	#AR_PHY_TX_FORCED_GAIN_FORCED_PADRVGNA
 0x00003c00

	)

591 
	#AR_PHY_TX_FORCED_GAIN_FORCED_PADRVGNA_S
 10

	)

592 
	#AR_PHY_TX_FORCED_GAIN_FORCED_PADRVGNB
 0x0003c000

	)

593 
	#AR_PHY_TX_FORCED_GAIN_FORCED_PADRVGNB_S
 14

	)

594 
	#AR_PHY_TX_FORCED_GAIN_FORCED_PADRVGNC
 0x003c0000

	)

595 
	#AR_PHY_TX_FORCED_GAIN_FORCED_PADRVGNC_S
 18

	)

596 
	#AR_PHY_TX_FORCED_GAIN_FORCED_PADRVGND
 0x00c00000

	)

597 
	#AR_PHY_TX_FORCED_GAIN_FORCED_PADRVGND_S
 22

	)

598 
	#AR_PHY_TX_FORCED_GAIN_FORCED_ENABLE_PAL
 0x01000000

	)

599 
	#AR_PHY_TX_FORCED_GAIN_FORCED_ENABLE_PAL_S
 24

	)

602 
	#AR_PHY_PDADC_TAB_0
 (
AR_SM_BASE
 + 0x280)

	)

604 
	#AR_PHY_TXGAIN_TABLE
 (
AR_SM_BASE
 + 0x300)

	)

606 
	#AR_PHY_TX_IQCAL_CONTROL_0
 (
AR_SM_BASE
 + (
	`AR_SREV_9485
(
ah
) ? \

607 0x3c4 : 0x444))

	)

608 
	#AR_PHY_TX_IQCAL_CONTROL_1
 (
AR_SM_BASE
 + (
	`AR_SREV_9485
(
ah
) ? \

609 0x3c8 : 0x448))

	)

610 
	#AR_PHY_TX_IQCAL_START
 (
AR_SM_BASE
 + (
	`AR_SREV_9485
(
ah
) ? \

611 0x3c4 : 0x440))

	)

612 
	#AR_PHY_TX_IQCAL_STATUS_B0
 (
AR_SM_BASE
 + (
	`AR_SREV_9485
(
ah
) ? \

613 0x3f0 : 0x48c))

	)

614 
	#AR_PHY_TX_IQCAL_CORR_COEFF_B0
(
_i
Ë(
AR_SM_BASE
 + \

615 (
	`AR_SREV_9485
(
ah
) ? \

616 0x3d0 : 0x450Ë+ ((
_i
Ë<< 2))

	)

617 
	#AR_PHY_RTT_CTRL
 (
AR_SM_BASE
 + 0x380)

	)

619 
	#AR_PHY_WATCHDOG_STATUS
 (
AR_SM_BASE
 + 0x5c0)

	)

620 
	#AR_PHY_WATCHDOG_CTL_1
 (
AR_SM_BASE
 + 0x5c4)

	)

621 
	#AR_PHY_WATCHDOG_CTL_2
 (
AR_SM_BASE
 + 0x5c8)

	)

622 
	#AR_PHY_WATCHDOG_CTL
 (
AR_SM_BASE
 + 0x5cc)

	)

623 
	#AR_PHY_ONLY_WARMRESET
 (
AR_SM_BASE
 + 0x5d0)

	)

624 
	#AR_PHY_ONLY_CTL
 (
AR_SM_BASE
 + 0x5d4)

	)

625 
	#AR_PHY_ECO_CTRL
 (
AR_SM_BASE
 + 0x5dc)

	)

627 
	#AR_PHY_BB_THERM_ADC_1
 (
AR_SM_BASE
 + 0x248)

	)

628 
	#AR_PHY_BB_THERM_ADC_1_INIT_THERM
 0x000000ff

	)

629 
	#AR_PHY_BB_THERM_ADC_1_INIT_THERM_S
 0

	)

631 
	#AR_PHY_BB_THERM_ADC_3
 (
AR_SM_BASE
 + 0x250)

	)

632 
	#AR_PHY_BB_THERM_ADC_3_THERM_ADC_SCALE_GAIN
 0x0001ff00

	)

633 
	#AR_PHY_BB_THERM_ADC_3_THERM_ADC_SCALE_GAIN_S
 8

	)

634 
	#AR_PHY_BB_THERM_ADC_3_THERM_ADC_OFFSET
 0x000000ff

	)

635 
	#AR_PHY_BB_THERM_ADC_3_THERM_ADC_OFFSET_S
 0

	)

637 
	#AR_PHY_BB_THERM_ADC_4
 (
AR_SM_BASE
 + 0x254)

	)

638 
	#AR_PHY_BB_THERM_ADC_4_LATEST_THERM_VALUE
 0x000000ff

	)

639 
	#AR_PHY_BB_THERM_ADC_4_LATEST_THERM_VALUE_S
 0

	)

640 
	#AR_PHY_BB_THERM_ADC_4_LATEST_VOLT_VALUE
 0x0000ff00

	)

641 
	#AR_PHY_BB_THERM_ADC_4_LATEST_VOLT_VALUE_S
 8

	)

644 
	#AR_PHY_AIC_CTRL_0_B0
 (
AR_SM_BASE
 + 0x4b0)

	)

645 
	#AR_PHY_AIC_CTRL_1_B0
 (
AR_SM_BASE
 + 0x4b4)

	)

646 
	#AR_PHY_AIC_CTRL_2_B0
 (
AR_SM_BASE
 + 0x4b8)

	)

647 
	#AR_PHY_AIC_CTRL_3_B0
 (
AR_SM_BASE
 + 0x4bc)

	)

648 
	#AR_PHY_AIC_STAT_0_B0
 (
AR_SM_BASE
 + 0x4c4))

	)

649 
	#AR_PHY_AIC_STAT_1_B0
 (
AR_SM_BASE
 + 0x4c8))

	)

650 
	#AR_PHY_AIC_CTRL_4_B0
 (
AR_SM_BASE
 + 0x4c0)

	)

651 
	#AR_PHY_AIC_STAT_2_B0
 (
AR_SM_BASE
 + 0x4cc)

	)

653 
	#AR_PHY_65NM_CH0_TXRF3
 0x16048

	)

654 
	#AR_PHY_65NM_CH0_TXRF3_CAPDIV2G
 0x0000001e

	)

655 
	#AR_PHY_65NM_CH0_TXRF3_CAPDIV2G_S
 1

	)

657 
	#AR_PHY_65NM_CH0_SYNTH4
 0x1608c

	)

658 
	#AR_PHY_SYNTH4_LONG_SHIFT_SELECT
 ((
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9565
◊h)Ë? 0x00000001 : 0x00000002)

	)

659 
	#AR_PHY_SYNTH4_LONG_SHIFT_SELECT_S
 ((
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9565
◊h)Ë? 0 : 1)

	)

660 
	#AR_PHY_65NM_CH0_SYNTH7
 0x16098

	)

661 
	#AR_PHY_65NM_CH0_SYNTH12
 0x160ac

	)

662 
	#AR_PHY_65NM_CH0_BIAS1
 0x160c0

	)

663 
	#AR_PHY_65NM_CH0_BIAS2
 0x160c4

	)

664 
	#AR_PHY_65NM_CH0_BIAS4
 0x160cc

	)

665 
	#AR_PHY_65NM_CH0_RXTX2
 0x16104

	)

666 
	#AR_PHY_65NM_CH1_RXTX2
 0x16504

	)

667 
	#AR_PHY_65NM_CH2_RXTX2
 0x16904

	)

668 
	#AR_PHY_65NM_CH0_RXTX4
 0x1610c

	)

669 
	#AR_PHY_65NM_CH1_RXTX4
 0x1650c

	)

670 
	#AR_PHY_65NM_CH2_RXTX4
 0x1690c

	)

672 
	#AR_PHY_65NM_CH0_BB1
 0x16140

	)

673 
	#AR_PHY_65NM_CH0_BB2
 0x16144

	)

674 
	#AR_PHY_65NM_CH0_BB3
 0x16148

	)

675 
	#AR_PHY_65NM_CH1_BB1
 0x16540

	)

676 
	#AR_PHY_65NM_CH1_BB2
 0x16544

	)

677 
	#AR_PHY_65NM_CH1_BB3
 0x16548

	)

678 
	#AR_PHY_65NM_CH2_BB1
 0x16940

	)

679 
	#AR_PHY_65NM_CH2_BB2
 0x16944

	)

680 
	#AR_PHY_65NM_CH2_BB3
 0x16948

	)

682 
	#AR_PHY_65NM_CH0_SYNTH12_VREFMUL3
 0x00780000

	)

683 
	#AR_PHY_65NM_CH0_SYNTH12_VREFMUL3_S
 19

	)

684 
	#AR_PHY_65NM_CH0_RXTX2_SYNTHON_MASK
 0x00000004

	)

685 
	#AR_PHY_65NM_CH0_RXTX2_SYNTHON_MASK_S
 2

	)

686 
	#AR_PHY_65NM_CH0_RXTX2_SYNTHOVR_MASK
 0x00000008

	)

687 
	#AR_PHY_65NM_CH0_RXTX2_SYNTHOVR_MASK_S
 3

	)

689 
	#AR_CH0_TOP
 (
	`AR_SREV_9300
(
ah
) ? 0x16288 : \

690 (((
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9565
◊h)Ë? 0x1628¯: 0x16280)))

	)

691 
	#AR_CH0_TOP_XPABIASLVL
 (
	`AR_SREV_9550
(
ah
Ë? 0x3c0 : 0x300)

	)

692 
	#AR_CH0_TOP_XPABIASLVL_S
 (
	`AR_SREV_9550
(
ah
Ë? 6 : 8)

	)

694 
	#AR_CH0_THERM
 (
	`AR_SREV_9300
(
ah
) ? 0x16290 : \

695 ((
	`AR_SREV_9485
(
ah
Ë? 0x1628¯: 0x16294)))

	)

696 
	#AR_CH0_THERM_XPABIASLVL_MSB
 0x3

	)

697 
	#AR_CH0_THERM_XPABIASLVL_MSB_S
 0

	)

698 
	#AR_CH0_THERM_XPASHORT2GND
 0x4

	)

699 
	#AR_CH0_THERM_XPASHORT2GND_S
 2

	)

701 
	#AR_SWITCH_TABLE_COM_ALL
 (0xffff)

	)

702 
	#AR_SWITCH_TABLE_COM_ALL_S
 (0)

	)

703 
	#AR_SWITCH_TABLE_COM_AR9462_ALL
 (0xffffff)

	)

704 
	#AR_SWITCH_TABLE_COM_AR9462_ALL_S
 (0)

	)

705 
	#AR_SWITCH_TABLE_COM_AR9550_ALL
 (0xffffff)

	)

706 
	#AR_SWITCH_TABLE_COM_AR9550_ALL_S
 (0)

	)

707 
	#AR_SWITCH_TABLE_COM_SPDT
 (0x00f00000)

	)

708 
	#AR_SWITCH_TABLE_COM_SPDT_ALL
 (0x0000fff0)

	)

709 
	#AR_SWITCH_TABLE_COM_SPDT_ALL_S
 (4)

	)

711 
	#AR_SWITCH_TABLE_COM2_ALL
 (0xffffff)

	)

712 
	#AR_SWITCH_TABLE_COM2_ALL_S
 (0)

	)

714 
	#AR_SWITCH_TABLE_ALL
 (0xfff)

	)

715 
	#AR_SWITCH_TABLE_ALL_S
 (0)

	)

717 
	#AR_PHY_65NM_CH0_THERM
 (
	`AR_SREV_9300
(
ah
) ? 0x16290 :\

718 ((
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9565
◊h)Ë? 0x16294 : 0x1628c))

	)

720 
	#AR_PHY_65NM_CH0_THERM_LOCAL
 0x80000000

	)

721 
	#AR_PHY_65NM_CH0_THERM_LOCAL_S
 31

	)

722 
	#AR_PHY_65NM_CH0_THERM_START
 0x20000000

	)

723 
	#AR_PHY_65NM_CH0_THERM_START_S
 29

	)

724 
	#AR_PHY_65NM_CH0_THERM_SAR_ADC_OUT
 0x0000ff00

	)

725 
	#AR_PHY_65NM_CH0_THERM_SAR_ADC_OUT_S
 8

	)

727 
	#AR_CH0_TOP2
 (
	`AR_SREV_9300
(
ah
) ? 0x1628c : \

728 (
	`AR_SREV_9462
(
ah
Ë? 0x16290 : 0x16284))

	)

729 
	#AR_CH0_TOP2_XPABIASLVL
 0xf000

	)

730 
	#AR_CH0_TOP2_XPABIASLVL_S
 12

	)

732 
	#AR_CH0_XTAL
 (
	`AR_SREV_9300
(
ah
) ? 0x16294 : \

733 ((
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9565
◊h)Ë? 0x16298 : 0x16290))

	)

734 
	#AR_CH0_XTAL_CAPINDAC
 0x7f000000

	)

735 
	#AR_CH0_XTAL_CAPINDAC_S
 24

	)

736 
	#AR_CH0_XTAL_CAPOUTDAC
 0x00„0000

	)

737 
	#AR_CH0_XTAL_CAPOUTDAC_S
 17

	)

739 
	#AR_PHY_PMU1
 ((
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9565
◊h)Ë? 0x16340 : 0x16c40)

	)

740 
	#AR_PHY_PMU1_PWD
 0x1

	)

741 
	#AR_PHY_PMU1_PWD_S
 0

	)

743 
	#AR_PHY_PMU2
 ((
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9565
◊h)Ë? 0x16344 : 0x16c44)

	)

744 
	#AR_PHY_PMU2_PGM
 0x00200000

	)

745 
	#AR_PHY_PMU2_PGM_S
 21

	)

747 
	#AR_PHY_RX1DB_BIQUAD_LONG_SHIFT
 0x00380000

	)

748 
	#AR_PHY_RX1DB_BIQUAD_LONG_SHIFT_S
 19

	)

749 
	#AR_PHY_RX6DB_BIQUAD_LONG_SHIFT
 0x00c00000

	)

750 
	#AR_PHY_RX6DB_BIQUAD_LONG_SHIFT_S
 22

	)

751 
	#AR_PHY_LNAGAIN_LONG_SHIFT
 0xe0000000

	)

752 
	#AR_PHY_LNAGAIN_LONG_SHIFT_S
 29

	)

753 
	#AR_PHY_MXRGAIN_LONG_SHIFT
 0x03000000

	)

754 
	#AR_PHY_MXRGAIN_LONG_SHIFT_S
 24

	)

755 
	#AR_PHY_VGAGAIN_LONG_SHIFT
 0x1c000000

	)

756 
	#AR_PHY_VGAGAIN_LONG_SHIFT_S
 26

	)

757 
	#AR_PHY_SCFIR_GAIN_LONG_SHIFT
 0x00000001

	)

758 
	#AR_PHY_SCFIR_GAIN_LONG_SHIFT_S
 0

	)

759 
	#AR_PHY_MANRXGAIN_LONG_SHIFT
 0x00000002

	)

760 
	#AR_PHY_MANRXGAIN_LONG_SHIFT_S
 1

	)

765 
	#AR_PHY_CL_CAL_ENABLE
 0x00000002

	)

766 
	#AR_PHY_PARALLEL_CAL_ENABLE
 0x00000001

	)

767 
	#AR_PHY_TPCRG1_PD_CAL_ENABLE
 0x00400000

	)

768 
	#AR_PHY_TPCRG1_PD_CAL_ENABLE_S
 22

	)

770 
	#AR_PHY_ADDAC_PARACTL_OFF_PWDADC
 0x00008000

	)

772 
	#AR_PHY_FCAL20_CAP_STATUS_0
 0x01f00000

	)

773 
	#AR_PHY_FCAL20_CAP_STATUS_0_S
 20

	)

775 
	#AR_PHY_RFBUS_REQ_EN
 0x00000001

	)

776 
	#AR_PHY_RFBUS_GRANT_EN
 0x00000001

	)

777 
	#AR_PHY_GC_TURBO_MODE
 0x00000001

	)

778 
	#AR_PHY_GC_TURBO_SHORT
 0x00000002

	)

779 
	#AR_PHY_GC_DYN2040_EN
 0x00000004

	)

780 
	#AR_PHY_GC_DYN2040_PRI_ONLY
 0x00000008

	)

781 
	#AR_PHY_GC_DYN2040_PRI_CH
 0x00000010

	)

782 
	#AR_PHY_GC_DYN2040_PRI_CH_S
 4

	)

783 
	#AR_PHY_GC_DYN2040_EXT_CH
 0x00000020

	)

784 
	#AR_PHY_GC_HT_EN
 0x00000040

	)

785 
	#AR_PHY_GC_SHORT_GI_40
 0x00000080

	)

786 
	#AR_PHY_GC_WALSH
 0x00000100

	)

787 
	#AR_PHY_GC_SINGLE_HT_LTF1
 0x00000200

	)

788 
	#AR_PHY_GC_GF_DETECT_EN
 0x00000400

	)

789 
	#AR_PHY_GC_ENABLE_DAC_FIFO
 0x00000800

	)

790 
	#AR_PHY_RX_DELAY_DELAY
 0x00003FFF

	)

792 
	#AR_PHY_CALMODE_IQ
 0x00000000

	)

793 
	#AR_PHY_CALMODE_ADC_GAIN
 0x00000001

	)

794 
	#AR_PHY_CALMODE_ADC_DC_PER
 0x00000002

	)

795 
	#AR_PHY_CALMODE_ADC_DC_INIT
 0x00000003

	)

796 
	#AR_PHY_SWAP_ALT_CHAIN
 0x00000040

	)

797 
	#AR_PHY_MODE_OFDM
 0x00000000

	)

798 
	#AR_PHY_MODE_CCK
 0x00000001

	)

799 
	#AR_PHY_MODE_DYNAMIC
 0x00000004

	)

800 
	#AR_PHY_MODE_DYNAMIC_S
 2

	)

801 
	#AR_PHY_MODE_HALF
 0x00000020

	)

802 
	#AR_PHY_MODE_QUARTER
 0x00000040

	)

803 
	#AR_PHY_MAC_CLK_MODE
 0x00000080

	)

804 
	#AR_PHY_MODE_DYN_CCK_DISABLE
 0x00000100

	)

805 
	#AR_PHY_MODE_SVD_HALF
 0x00000200

	)

806 
	#AR_PHY_ACTIVE_EN
 0x00000001

	)

807 
	#AR_PHY_ACTIVE_DIS
 0x00000000

	)

808 
	#AR_PHY_FORCE_XPA_CFG
 0x000000001

	)

809 
	#AR_PHY_FORCE_XPA_CFG_S
 0

	)

810 
	#AR_PHY_XPA_TIMING_CTL_TX_END_XPAB_OFF
 0xFF000000

	)

811 
	#AR_PHY_XPA_TIMING_CTL_TX_END_XPAB_OFF_S
 24

	)

812 
	#AR_PHY_XPA_TIMING_CTL_TX_END_XPAA_OFF
 0x00FF0000

	)

813 
	#AR_PHY_XPA_TIMING_CTL_TX_END_XPAA_OFF_S
 16

	)

814 
	#AR_PHY_XPA_TIMING_CTL_FRAME_XPAB_ON
 0x0000FF00

	)

815 
	#AR_PHY_XPA_TIMING_CTL_FRAME_XPAB_ON_S
 8

	)

816 
	#AR_PHY_XPA_TIMING_CTL_FRAME_XPAA_ON
 0x000000FF

	)

817 
	#AR_PHY_XPA_TIMING_CTL_FRAME_XPAA_ON_S
 0

	)

818 
	#AR_PHY_TX_END_TO_A2_RX_ON
 0x00FF0000

	)

819 
	#AR_PHY_TX_END_TO_A2_RX_ON_S
 16

	)

820 
	#AR_PHY_TX_END_DATA_START
 0x000000FF

	)

821 
	#AR_PHY_TX_END_DATA_START_S
 0

	)

822 
	#AR_PHY_TX_END_PA_ON
 0x0000FF00

	)

823 
	#AR_PHY_TX_END_PA_ON_S
 8

	)

824 
	#AR_PHY_TPCRG5_PD_GAIN_OVERLAP
 0x0000000F

	)

825 
	#AR_PHY_TPCRG5_PD_GAIN_OVERLAP_S
 0

	)

826 
	#AR_PHY_TPCRG5_PD_GAIN_BOUNDARY_1
 0x000003F0

	)

827 
	#AR_PHY_TPCRG5_PD_GAIN_BOUNDARY_1_S
 4

	)

828 
	#AR_PHY_TPCRG5_PD_GAIN_BOUNDARY_2
 0x0000FC00

	)

829 
	#AR_PHY_TPCRG5_PD_GAIN_BOUNDARY_2_S
 10

	)

830 
	#AR_PHY_TPCRG5_PD_GAIN_BOUNDARY_3
 0x003F0000

	)

831 
	#AR_PHY_TPCRG5_PD_GAIN_BOUNDARY_3_S
 16

	)

832 
	#AR_PHY_TPCRG5_PD_GAIN_BOUNDARY_4
 0x0FC00000

	)

833 
	#AR_PHY_TPCRG5_PD_GAIN_BOUNDARY_4_S
 22

	)

834 
	#AR_PHY_TPCRG1_NUM_PD_GAIN
 0x0000c000

	)

835 
	#AR_PHY_TPCRG1_NUM_PD_GAIN_S
 14

	)

836 
	#AR_PHY_TPCRG1_PD_GAIN_1
 0x00030000

	)

837 
	#AR_PHY_TPCRG1_PD_GAIN_1_S
 16

	)

838 
	#AR_PHY_TPCRG1_PD_GAIN_2
 0x000C0000

	)

839 
	#AR_PHY_TPCRG1_PD_GAIN_2_S
 18

	)

840 
	#AR_PHY_TPCRG1_PD_GAIN_3
 0x00300000

	)

841 
	#AR_PHY_TPCRG1_PD_GAIN_3_S
 20

	)

842 
	#AR_PHY_TPCGR1_FORCED_DAC_GAIN
 0x0000003e

	)

843 
	#AR_PHY_TPCGR1_FORCED_DAC_GAIN_S
 1

	)

844 
	#AR_PHY_TPCGR1_FORCE_DAC_GAIN
 0x00000001

	)

845 
	#AR_PHY_TXGAIN_FORCE
 0x00000001

	)

846 
	#AR_PHY_TXGAIN_FORCE_S
 0

	)

847 
	#AR_PHY_TXGAIN_FORCED_PADVGNRA
 0x00003c00

	)

848 
	#AR_PHY_TXGAIN_FORCED_PADVGNRA_S
 10

	)

849 
	#AR_PHY_TXGAIN_FORCED_PADVGNRB
 0x0003c000

	)

850 
	#AR_PHY_TXGAIN_FORCED_PADVGNRB_S
 14

	)

851 
	#AR_PHY_TXGAIN_FORCED_PADVGNRD
 0x00c00000

	)

852 
	#AR_PHY_TXGAIN_FORCED_PADVGNRD_S
 22

	)

853 
	#AR_PHY_TXGAIN_FORCED_TXMXRGAIN
 0x000003c0

	)

854 
	#AR_PHY_TXGAIN_FORCED_TXMXRGAIN_S
 6

	)

855 
	#AR_PHY_TXGAIN_FORCED_TXBB1DBGAIN
 0x0000000e

	)

856 
	#AR_PHY_TXGAIN_FORCED_TXBB1DBGAIN_S
 1

	)

858 
	#AR_PHY_POWER_TX_RATE1
 0x9934

	)

859 
	#AR_PHY_POWER_TX_RATE2
 0x9938

	)

860 
	#AR_PHY_POWER_TX_RATE_MAX
 0x993c

	)

861 
	#AR_PHY_POWER_TX_RATE_MAX_TPC_ENABLE
 0x00000040

	)

862 
	#PHY_AGC_CLR
 0x10000000

	)

863 
	#RFSILENT_BB
 0x00002000

	)

864 
	#AR_PHY_CHAN_INFO_GAIN_DIFF_PPM_MASK
 0xFFF

	)

865 
	#AR_PHY_CHAN_INFO_GAIN_DIFF_PPM_SIGNED_BIT
 0x800

	)

866 
	#AR_PHY_CHAN_INFO_GAIN_DIFF_UPPER_LIMIT
 320

	)

867 
	#AR_PHY_CHAN_INFO_MEMORY_CAPTURE_MASK
 0x0001

	)

868 
	#AR_PHY_RX_DELAY_DELAY
 0x00003FFF

	)

869 
	#AR_PHY_CCK_TX_CTRL_JAPAN
 0x00000010

	)

871 
	#AR_PHY_SPECTRAL_SCAN_ENABLE
 0x00000001

	)

872 
	#AR_PHY_SPECTRAL_SCAN_ENABLE_S
 0

	)

873 
	#AR_PHY_SPECTRAL_SCAN_ACTIVE
 0x00000002

	)

874 
	#AR_PHY_SPECTRAL_SCAN_ACTIVE_S
 1

	)

875 
	#AR_PHY_SPECTRAL_SCAN_FFT_PERIOD
 0x000000F0

	)

876 
	#AR_PHY_SPECTRAL_SCAN_FFT_PERIOD_S
 4

	)

877 
	#AR_PHY_SPECTRAL_SCAN_PERIOD
 0x0000FF00

	)

878 
	#AR_PHY_SPECTRAL_SCAN_PERIOD_S
 8

	)

879 
	#AR_PHY_SPECTRAL_SCAN_COUNT
 0x0FFF0000

	)

880 
	#AR_PHY_SPECTRAL_SCAN_COUNT_S
 16

	)

881 
	#AR_PHY_SPECTRAL_SCAN_SHORT_REPEAT
 0x10000000

	)

882 
	#AR_PHY_SPECTRAL_SCAN_SHORT_REPEAT_S
 28

	)

883 
	#AR_PHY_SPECTRAL_SCAN_PRIORITY
 0x20000000

	)

884 
	#AR_PHY_SPECTRAL_SCAN_PRIORITY_S
 29

	)

885 
	#AR_PHY_SPECTRAL_SCAN_USE_ERR5
 0x40000000

	)

886 
	#AR_PHY_SPECTRAL_SCAN_USE_ERR5_S
 30

	)

887 
	#AR_PHY_SPECTRAL_SCAN_COMPRESSED_RPT
 0x80000000

	)

888 
	#AR_PHY_SPECTRAL_SCAN_COMPRESSED_RPT_S
 31

	)

890 
	#AR_PHY_CHANNEL_STATUS_RX_CLEAR
 0x00000004

	)

891 
	#AR_PHY_RTT_CTRL_ENA_RADIO_RETENTION
 0x00000001

	)

892 
	#AR_PHY_RTT_CTRL_ENA_RADIO_RETENTION_S
 0

	)

893 
	#AR_PHY_RTT_CTRL_RESTORE_MASK
 0x0000007E

	)

894 
	#AR_PHY_RTT_CTRL_RESTORE_MASK_S
 1

	)

895 
	#AR_PHY_RTT_CTRL_FORCE_RADIO_RESTORE
 0x00000080

	)

896 
	#AR_PHY_RTT_CTRL_FORCE_RADIO_RESTORE_S
 7

	)

897 
	#AR_PHY_RTT_SW_RTT_TABLE_ACCESS
 0x00000001

	)

898 
	#AR_PHY_RTT_SW_RTT_TABLE_ACCESS_S
 0

	)

899 
	#AR_PHY_RTT_SW_RTT_TABLE_WRITE
 0x00000002

	)

900 
	#AR_PHY_RTT_SW_RTT_TABLE_WRITE_S
 1

	)

901 
	#AR_PHY_RTT_SW_RTT_TABLE_ADDR
 0x0000001C

	)

902 
	#AR_PHY_RTT_SW_RTT_TABLE_ADDR_S
 2

	)

903 
	#AR_PHY_RTT_SW_RTT_TABLE_DATA
 0xFFFFFFF0

	)

904 
	#AR_PHY_RTT_SW_RTT_TABLE_DATA_S
 4

	)

905 
	#AR_PHY_TX_IQCAL_CONTROL_0_ENABLE_TXIQ_CAL
 0x80000000

	)

906 
	#AR_PHY_TX_IQCAL_CONTROL_0_ENABLE_TXIQ_CAL_S
 31

	)

907 
	#AR_PHY_TX_IQCAL_CONTROL_1_IQCORR_I_Q_COFF_DELPT
 0x01fc0000

	)

908 
	#AR_PHY_TX_IQCAL_CONTROL_1_IQCORR_I_Q_COFF_DELPT_S
 18

	)

909 
	#AR_PHY_TX_IQCAL_START_DO_CAL
 0x00000001

	)

910 
	#AR_PHY_TX_IQCAL_START_DO_CAL_S
 0

	)

912 
	#AR_PHY_TX_IQCAL_STATUS_FAILED
 0x00000001

	)

913 
	#AR_PHY_CALIBRATED_GAINS_0
 0x3e

	)

914 
	#AR_PHY_CALIBRATED_GAINS_0_S
 1

	)

916 
	#AR_PHY_TX_IQCAL_CORR_COEFF_00_COEFF_TABLE
 0x00003fff

	)

917 
	#AR_PHY_TX_IQCAL_CORR_COEFF_00_COEFF_TABLE_S
 0

	)

918 
	#AR_PHY_TX_IQCAL_CORR_COEFF_01_COEFF_TABLE
 0x0fffc000

	)

919 
	#AR_PHY_TX_IQCAL_CORR_COEFF_01_COEFF_TABLE_S
 14

	)

921 
	#AR_PHY_65NM_CH0_RXTX4_THERM_ON
 0x10000000

	)

922 
	#AR_PHY_65NM_CH0_RXTX4_THERM_ON_S
 28

	)

923 
	#AR_PHY_65NM_CH0_RXTX4_THERM_ON_OVR
 0x20000000

	)

924 
	#AR_PHY_65NM_CH0_RXTX4_THERM_ON_OVR_S
 29

	)

926 
	#AR_PHY_65NM_RXTX4_XLNA_BIAS
 0xC0000000

	)

927 
	#AR_PHY_65NM_RXTX4_XLNA_BIAS_S
 30

	)

932 
	#AR_CHAN1_BASE
 0xa800

	)

934 
	#AR_PHY_EXT_CCA_1
 (
AR_CHAN1_BASE
 + 0x30)

	)

935 
	#AR_PHY_TX_PHASE_RAMP_1
 (
AR_CHAN1_BASE
 + 0xd0)

	)

936 
	#AR_PHY_ADC_GAIN_DC_CORR_1
 (
AR_CHAN1_BASE
 + 0xd4)

	)

938 
	#AR_PHY_SPUR_REPORT_1
 (
AR_CHAN1_BASE
 + 0xa8)

	)

939 
	#AR_PHY_CHAN_INFO_TAB_1
 (
AR_CHAN1_BASE
 + 0x300)

	)

940 
	#AR_PHY_RX_IQCAL_CORR_B1
 (
AR_CHAN1_BASE
 + 0xdc)

	)

945 
	#AR_PHY_CH1_EXT_MINCCA_PWR
 0x01FF0000

	)

946 
	#AR_PHY_CH1_EXT_MINCCA_PWR_S
 16

	)

951 
	#AR_AGC1_BASE
 0x´00

	)

953 
	#AR_PHY_FORCEMAX_GAINS_1
 (
AR_AGC1_BASE
 + 0x4)

	)

954 
	#AR_PHY_EXT_ATTEN_CTL_1
 (
AR_AGC1_BASE
 + 0x18)

	)

955 
	#AR_PHY_CCA_1
 (
AR_AGC1_BASE
 + 0x1c)

	)

956 
	#AR_PHY_CCA_CTRL_1
 (
AR_AGC1_BASE
 + 0x20)

	)

957 
	#AR_PHY_RSSI_1
 (
AR_AGC1_BASE
 + 0x180)

	)

958 
	#AR_PHY_SPUR_CCK_REP_1
 (
AR_AGC1_BASE
 + 0x184)

	)

959 
	#AR_PHY_RX_OCGAIN_2
 (
AR_AGC1_BASE
 + 0x200)

	)

964 
	#AR_PHY_CH1_MINCCA_PWR
 0x1FF00000

	)

965 
	#AR_PHY_CH1_MINCCA_PWR_S
 20

	)

970 
	#AR_SM1_BASE
 0xb200

	)

972 
	#AR_PHY_SWITCH_CHAIN_1
 (
AR_SM1_BASE
 + 0x84)

	)

973 
	#AR_PHY_FCAL_2_1
 (
AR_SM1_BASE
 + 0xd0)

	)

974 
	#AR_PHY_DFT_TONE_CTL_1
 (
AR_SM1_BASE
 + 0xd4)

	)

975 
	#AR_PHY_CL_TAB_1
 (
AR_SM1_BASE
 + 0x100)

	)

976 
	#AR_PHY_CHAN_INFO_GAIN_1
 (
AR_SM1_BASE
 + 0x180)

	)

977 
	#AR_PHY_TPC_4_B1
 (
AR_SM1_BASE
 + 0x204)

	)

978 
	#AR_PHY_TPC_5_B1
 (
AR_SM1_BASE
 + 0x208)

	)

979 
	#AR_PHY_TPC_6_B1
 (
AR_SM1_BASE
 + 0x20c)

	)

980 
	#AR_PHY_TPC_11_B1
 (
AR_SM1_BASE
 + 0x220)

	)

981 
	#AR_PHY_PDADC_TAB_1
 (
AR_SM1_BASE
 + (
	`AR_SREV_9462_20_OR_LATER
(
ah
) ? \

982 0x280 : 0x240))

	)

983 
	#AR_PHY_TPC_19_B1
 (
AR_SM1_BASE
 + 0x240)

	)

984 
	#AR_PHY_TPC_19_B1_ALPHA_THERM
 0xff

	)

985 
	#AR_PHY_TPC_19_B1_ALPHA_THERM_S
 0

	)

986 
	#AR_PHY_TX_IQCAL_STATUS_B1
 (
AR_SM1_BASE
 + 0x48c)

	)

987 
	#AR_PHY_TX_IQCAL_CORR_COEFF_B1
(
_i
Ë(
AR_SM1_BASE
 + 0x450 + ((_iË<< 2))

	)

991 
	#AR_PHY_AIC_CTRL_0_B1
 (
AR_SM1_BASE
 + 0x4b0)

	)

992 
	#AR_PHY_AIC_CTRL_1_B1
 (
AR_SM1_BASE
 + 0x4b4)

	)

993 
	#AR_PHY_AIC_CTRL_2_B1
 (
AR_SM1_BASE
 + 0x4b8)

	)

994 
	#AR_PHY_AIC_STAT_0_B1
 (
AR_SM1_BASE
 + (
	`AR_SREV_9462_10
(
ah
) ? \

995 0x4c0 : 0x4c4))

	)

996 
	#AR_PHY_AIC_STAT_1_B1
 (
AR_SM1_BASE
 + (
	`AR_SREV_9462_10
(
ah
) ? \

997 0x4c4 : 0x4c8))

	)

998 
	#AR_PHY_AIC_CTRL_4_B1
 (
AR_SM1_BASE
 + 0x4c0)

	)

999 
	#AR_PHY_AIC_STAT_2_B1
 (
AR_SM1_BASE
 + 0x4cc)

	)

1001 
	#AR_PHY_AIC_SRAM_ADDR_B1
 (
AR_SM1_BASE
 + 0x5f0)

	)

1002 
	#AR_PHY_AIC_SRAM_DATA_B1
 (
AR_SM1_BASE
 + 0x5f4)

	)

1004 
	#AR_PHY_RTT_TABLE_SW_INTF_B
(
i
) (0x384 + ((i) ? \

1005 
AR_SM1_BASE
 : 
AR_SM_BASE
))

	)

1006 
	#AR_PHY_RTT_TABLE_SW_INTF_1_B
(
i
) (0x388 + ((i) ? \

1007 
AR_SM1_BASE
 : 
AR_SM_BASE
))

	)

1011 
	#AR_CHAN2_BASE
 0xb800

	)

1013 
	#AR_PHY_EXT_CCA_2
 (
AR_CHAN2_BASE
 + 0x30)

	)

1014 
	#AR_PHY_TX_PHASE_RAMP_2
 (
AR_CHAN2_BASE
 + 0xd0)

	)

1015 
	#AR_PHY_ADC_GAIN_DC_CORR_2
 (
AR_CHAN2_BASE
 + 0xd4)

	)

1017 
	#AR_PHY_SPUR_REPORT_2
 (
AR_CHAN2_BASE
 + 0xa8)

	)

1018 
	#AR_PHY_CHAN_INFO_TAB_2
 (
AR_CHAN2_BASE
 + 0x300)

	)

1019 
	#AR_PHY_RX_IQCAL_CORR_B2
 (
AR_CHAN2_BASE
 + 0xdc)

	)

1024 
	#AR_PHY_CH2_EXT_MINCCA_PWR
 0x01FF0000

	)

1025 
	#AR_PHY_CH2_EXT_MINCCA_PWR_S
 16

	)

1029 
	#AR_AGC2_BASE
 0xbe00

	)

1031 
	#AR_PHY_FORCEMAX_GAINS_2
 (
AR_AGC2_BASE
 + 0x4)

	)

1032 
	#AR_PHY_EXT_ATTEN_CTL_2
 (
AR_AGC2_BASE
 + 0x18)

	)

1033 
	#AR_PHY_CCA_2
 (
AR_AGC2_BASE
 + 0x1c)

	)

1034 
	#AR_PHY_CCA_CTRL_2
 (
AR_AGC2_BASE
 + 0x20)

	)

1035 
	#AR_PHY_RSSI_2
 (
AR_AGC2_BASE
 + 0x180)

	)

1040 
	#AR_PHY_CH2_MINCCA_PWR
 0x1FF00000

	)

1041 
	#AR_PHY_CH2_MINCCA_PWR_S
 20

	)

1046 
	#AR_SM2_BASE
 0xc200

	)

1048 
	#AR_PHY_SWITCH_CHAIN_2
 (
AR_SM2_BASE
 + 0x84)

	)

1049 
	#AR_PHY_FCAL_2_2
 (
AR_SM2_BASE
 + 0xd0)

	)

1050 
	#AR_PHY_DFT_TONE_CTL_2
 (
AR_SM2_BASE
 + 0xd4)

	)

1051 
	#AR_PHY_CL_TAB_2
 (
AR_SM2_BASE
 + 0x100)

	)

1052 
	#AR_PHY_CHAN_INFO_GAIN_2
 (
AR_SM2_BASE
 + 0x180)

	)

1053 
	#AR_PHY_TPC_4_B2
 (
AR_SM2_BASE
 + 0x204)

	)

1054 
	#AR_PHY_TPC_5_B2
 (
AR_SM2_BASE
 + 0x208)

	)

1055 
	#AR_PHY_TPC_6_B2
 (
AR_SM2_BASE
 + 0x20c)

	)

1056 
	#AR_PHY_TPC_11_B2
 (
AR_SM2_BASE
 + 0x220)

	)

1057 
	#AR_PHY_TPC_19_B2
 (
AR_SM2_BASE
 + 0x240)

	)

1058 
	#AR_PHY_TX_IQCAL_STATUS_B2
 (
AR_SM2_BASE
 + 0x48c)

	)

1059 
	#AR_PHY_TX_IQCAL_CORR_COEFF_B2
(
_i
Ë(
AR_SM2_BASE
 + 0x450 + ((_iË<< 2))

	)

1061 
	#AR_PHY_TX_IQCAL_STATUS_B2_FAILED
 0x00000001

	)

1066 
	#AR_AGC3_BASE
 0x˚00

	)

1068 
	#AR_PHY_RSSI_3
 (
AR_AGC3_BASE
 + 0x180)

	)

1071 
	#AR_GLB_BASE
 0x20000

	)

1072 
	#AR_GLB_GPIO_CONTROL
 (
AR_GLB_BASE
)

	)

1073 
	#AR_PHY_GLB_CONTROL
 (
AR_GLB_BASE
 + 0x44)

	)

1074 
	#AR_GLB_SCRATCH
(
_ah
Ë(
AR_GLB_BASE
 + \

1075 (
	`AR_SREV_9462_20_OR_LATER
(
_ah
Ë? 0x4¯: 0x50))

	)

1076 
	#AR_GLB_STATUS
 (
AR_GLB_BASE
 + 0x48)

	)

1081 
	#AR_PHY_CHAIN_OFFSET
 (
AR_CHAN1_BASE
 - 
AR_CHAN_BASE
)

	)

1083 
	#AR_PHY_NEW_ADC_DC_GAIN_CORR
(
_i
Ë(
AR_PHY_ADC_GAIN_DC_CORR_0
 + (
AR_PHY_CHAIN_OFFSET
 * (_i)))

	)

1084 
	#AR_PHY_NEW_ADC_DC_GAIN_CORR_9300_10
(
_i
Ë(
AR_PHY_ADC_GAIN_DC_CORR_0_9300_10
 + (
AR_PHY_CHAIN_OFFSET
 * (_i)))

	)

1085 
	#AR_PHY_SWITCH_CHAIN
(
_i
Ë(
AR_PHY_SWITCH_CHAIN_0
 + (
AR_PHY_CHAIN_OFFSET
 * (_i)))

	)

1086 
	#AR_PHY_EXT_ATTEN_CTL
(
_i
Ë(
AR_PHY_EXT_ATTEN_CTL_0
 + (
AR_PHY_CHAIN_OFFSET
 * (_i)))

	)

1088 
	#AR_PHY_RXGAIN
(
_i
Ë(
AR_PHY_FORCEMAX_GAINS_0
 + (
AR_PHY_CHAIN_OFFSET
 * (_i)))

	)

1089 
	#AR_PHY_TPCRG5
(
_i
Ë(
AR_PHY_TPC_5_B0
 + (
AR_PHY_CHAIN_OFFSET
 * (_i)))

	)

1090 
	#AR_PHY_PDADC_TAB
(
_i
Ë(
AR_PHY_PDADC_TAB_0
 + (
AR_PHY_CHAIN_OFFSET
 * (_i)))

	)

1092 
	#AR_PHY_CAL_MEAS_0
(
_i
Ë(
AR_PHY_IQ_ADC_MEAS_0_B0
 + (
AR_PHY_CHAIN_OFFSET
 * (_i)))

	)

1093 
	#AR_PHY_CAL_MEAS_1
(
_i
Ë(
AR_PHY_IQ_ADC_MEAS_1_B0
 + (
AR_PHY_CHAIN_OFFSET
 * (_i)))

	)

1094 
	#AR_PHY_CAL_MEAS_2
(
_i
Ë(
AR_PHY_IQ_ADC_MEAS_2_B0
 + (
AR_PHY_CHAIN_OFFSET
 * (_i)))

	)

1095 
	#AR_PHY_CAL_MEAS_3
(
_i
Ë(
AR_PHY_IQ_ADC_MEAS_3_B0
 + (
AR_PHY_CHAIN_OFFSET
 * (_i)))

	)

1096 
	#AR_PHY_CAL_MEAS_0_9300_10
(
_i
Ë(
AR_PHY_IQ_ADC_MEAS_0_B0_9300_10
 + (
AR_PHY_CHAIN_OFFSET
 * (_i)))

	)

1097 
	#AR_PHY_CAL_MEAS_1_9300_10
(
_i
Ë(
AR_PHY_IQ_ADC_MEAS_1_B0_9300_10
 + (
AR_PHY_CHAIN_OFFSET
 * (_i)))

	)

1098 
	#AR_PHY_CAL_MEAS_2_9300_10
(
_i
Ë(
AR_PHY_IQ_ADC_MEAS_2_B0_9300_10
 + (
AR_PHY_CHAIN_OFFSET
 * (_i)))

	)

1099 
	#AR_PHY_CAL_MEAS_3_9300_10
(
_i
Ë(
AR_PHY_IQ_ADC_MEAS_3_B0_9300_10
 + (
AR_PHY_CHAIN_OFFSET
 * (_i)))

	)

1101 
	#AR_PHY_WATCHDOG_NON_IDLE_ENABLE
 0x00000001

	)

1102 
	#AR_PHY_WATCHDOG_IDLE_ENABLE
 0x00000002

	)

1103 
	#AR_PHY_WATCHDOG_IDLE_MASK
 0xFFFF0000

	)

1104 
	#AR_PHY_WATCHDOG_NON_IDLE_MASK
 0x0000FFFC

	)

1106 
	#AR_PHY_WATCHDOG_RST_ENABLE
 0x00000002

	)

1107 
	#AR_PHY_WATCHDOG_IRQ_ENABLE
 0x00000004

	)

1108 
	#AR_PHY_WATCHDOG_CNTL2_MASK
 0xFFFFFFF9

	)

1110 
	#AR_PHY_WATCHDOG_INFO
 0x00000007

	)

1111 
	#AR_PHY_WATCHDOG_INFO_S
 0

	)

1112 
	#AR_PHY_WATCHDOG_DET_HANG
 0x00000008

	)

1113 
	#AR_PHY_WATCHDOG_DET_HANG_S
 3

	)

1114 
	#AR_PHY_WATCHDOG_RADAR_SM
 0x000000F0

	)

1115 
	#AR_PHY_WATCHDOG_RADAR_SM_S
 4

	)

1116 
	#AR_PHY_WATCHDOG_RX_OFDM_SM
 0x00000F00

	)

1117 
	#AR_PHY_WATCHDOG_RX_OFDM_SM_S
 8

	)

1118 
	#AR_PHY_WATCHDOG_RX_CCK_SM
 0x0000F000

	)

1119 
	#AR_PHY_WATCHDOG_RX_CCK_SM_S
 12

	)

1120 
	#AR_PHY_WATCHDOG_TX_OFDM_SM
 0x000F0000

	)

1121 
	#AR_PHY_WATCHDOG_TX_OFDM_SM_S
 16

	)

1122 
	#AR_PHY_WATCHDOG_TX_CCK_SM
 0x00F00000

	)

1123 
	#AR_PHY_WATCHDOG_TX_CCK_SM_S
 20

	)

1124 
	#AR_PHY_WATCHDOG_AGC_SM
 0x0F000000

	)

1125 
	#AR_PHY_WATCHDOG_AGC_SM_S
 24

	)

1126 
	#AR_PHY_WATCHDOG_SRCH_SM
 0xF0000000

	)

1127 
	#AR_PHY_WATCHDOG_SRCH_SM_S
 28

	)

1129 
	#AR_PHY_WATCHDOG_STATUS_CLR
 0x00000008

	)

1134 
	#AR_PHY_XPA_TIMING_CTL
 (
AR_SM_BASE
 + 0x64)

	)

1136 
	#AR_PHY_PAPRD_AM2AM
 (
AR_CHAN_BASE
 + 0xe4)

	)

1137 
	#AR_PHY_PAPRD_AM2AM_MASK
 0x01ffffff

	)

1138 
	#AR_PHY_PAPRD_AM2AM_MASK_S
 0

	)

1140 
	#AR_PHY_PAPRD_AM2PM
 (
AR_CHAN_BASE
 + 0xe8)

	)

1141 
	#AR_PHY_PAPRD_AM2PM_MASK
 0x01ffffff

	)

1142 
	#AR_PHY_PAPRD_AM2PM_MASK_S
 0

	)

1144 
	#AR_PHY_PAPRD_HT40
 (
AR_CHAN_BASE
 + 0xec)

	)

1145 
	#AR_PHY_PAPRD_HT40_MASK
 0x01ffffff

	)

1146 
	#AR_PHY_PAPRD_HT40_MASK_S
 0

	)

1148 
	#AR_PHY_PAPRD_CTRL0_B0
 (
AR_CHAN_BASE
 + 0xf0)

	)

1149 
	#AR_PHY_PAPRD_CTRL0_B1
 (
AR_CHAN1_BASE
 + 0xf0)

	)

1150 
	#AR_PHY_PAPRD_CTRL0_B2
 (
AR_CHAN2_BASE
 + 0xf0)

	)

1151 
	#AR_PHY_PAPRD_CTRL0_PAPRD_ENABLE
 0x00000001

	)

1152 
	#AR_PHY_PAPRD_CTRL0_PAPRD_ENABLE_S
 0

	)

1153 
	#AR_PHY_PAPRD_CTRL0_USE_SINGLE_TABLE_MASK
 0x00000002

	)

1154 
	#AR_PHY_PAPRD_CTRL0_USE_SINGLE_TABLE_MASK_S
 1

	)

1155 
	#AR_PHY_PAPRD_CTRL0_PAPRD_MAG_THRSH
 0xf8000000

	)

1156 
	#AR_PHY_PAPRD_CTRL0_PAPRD_MAG_THRSH_S
 27

	)

1158 
	#AR_PHY_PAPRD_CTRL1_B0
 (
AR_CHAN_BASE
 + 0xf4)

	)

1159 
	#AR_PHY_PAPRD_CTRL1_B1
 (
AR_CHAN1_BASE
 + 0xf4)

	)

1160 
	#AR_PHY_PAPRD_CTRL1_B2
 (
AR_CHAN2_BASE
 + 0xf4)

	)

1161 
	#AR_PHY_PAPRD_CTRL1_ADAPTIVE_SCALING_ENA
 0x00000001

	)

1162 
	#AR_PHY_PAPRD_CTRL1_ADAPTIVE_SCALING_ENA_S
 0

	)

1163 
	#AR_PHY_PAPRD_CTRL1_ADAPTIVE_AM2AM_ENABLE
 0x00000002

	)

1164 
	#AR_PHY_PAPRD_CTRL1_ADAPTIVE_AM2AM_ENABLE_S
 1

	)

1165 
	#AR_PHY_PAPRD_CTRL1_ADAPTIVE_AM2PM_ENABLE
 0x00000004

	)

1166 
	#AR_PHY_PAPRD_CTRL1_ADAPTIVE_AM2PM_ENABLE_S
 2

	)

1167 
	#AR_PHY_PAPRD_CTRL1_PAPRD_POWER_AT_AM2AM_CAL
 0x000001f8

	)

1168 
	#AR_PHY_PAPRD_CTRL1_PAPRD_POWER_AT_AM2AM_CAL_S
 3

	)

1169 
	#AR_PHY_PAPRD_CTRL1_PA_GAIN_SCALE_FACT_MASK
 0x0001„00

	)

1170 
	#AR_PHY_PAPRD_CTRL1_PA_GAIN_SCALE_FACT_MASK_S
 9

	)

1171 
	#AR_PHY_PAPRD_CTRL1_PAPRD_MAG_SCALE_FACT
 0x0f„0000

	)

1172 
	#AR_PHY_PAPRD_CTRL1_PAPRD_MAG_SCALE_FACT_S
 17

	)

1174 
	#AR_PHY_PAPRD_TRAINER_CNTL1
 (
AR_SM_BASE
 + (
	`AR_SREV_9485
(
ah
Ë? 0x580 : 0x490))

	)

1176 
	#AR_PHY_PAPRD_TRAINER_CNTL1_CF_CF_PAPRD_TRAIN_ENABLE
 0x00000001

	)

1177 
	#AR_PHY_PAPRD_TRAINER_CNTL1_CF_CF_PAPRD_TRAIN_ENABLE_S
 0

	)

1178 
	#AR_PHY_PAPRD_TRAINER_CNTL1_CF_PAPRD_AGC2_SETTLING
 0x0000007e

	)

1179 
	#AR_PHY_PAPRD_TRAINER_CNTL1_CF_PAPRD_AGC2_SETTLING_S
 1

	)

1180 
	#AR_PHY_PAPRD_TRAINER_CNTL1_CF_PAPRD_IQCORR_ENABLE
 0x00000100

	)

1181 
	#AR_PHY_PAPRD_TRAINER_CNTL1_CF_PAPRD_IQCORR_ENABLE_S
 8

	)

1182 
	#AR_PHY_PAPRD_TRAINER_CNTL1_CF_PAPRD_RX_BB_GAIN_FORCE
 0x00000200

	)

1183 
	#AR_PHY_PAPRD_TRAINER_CNTL1_CF_PAPRD_RX_BB_GAIN_FORCE_S
 9

	)

1184 
	#AR_PHY_PAPRD_TRAINER_CNTL1_CF_PAPRD_TX_GAIN_FORCE
 0x00000400

	)

1185 
	#AR_PHY_PAPRD_TRAINER_CNTL1_CF_PAPRD_TX_GAIN_FORCE_S
 10

	)

1186 
	#AR_PHY_PAPRD_TRAINER_CNTL1_CF_PAPRD_LB_ENABLE
 0x00000800

	)

1187 
	#AR_PHY_PAPRD_TRAINER_CNTL1_CF_PAPRD_LB_ENABLE_S
 11

	)

1188 
	#AR_PHY_PAPRD_TRAINER_CNTL1_CF_PAPRD_LB_SKIP
 0x0003f000

	)

1189 
	#AR_PHY_PAPRD_TRAINER_CNTL1_CF_PAPRD_LB_SKIP_S
 12

	)

1191 
	#AR_PHY_PAPRD_TRAINER_CNTL2
 (
AR_SM_BASE
 + (
	`AR_SREV_9485
(
ah
Ë? 0x584 : 0x494))

	)

1193 
	#AR_PHY_PAPRD_TRAINER_CNTL2_CF_PAPRD_INIT_RX_BB_GAIN
 0xFFFFFFFF

	)

1194 
	#AR_PHY_PAPRD_TRAINER_CNTL2_CF_PAPRD_INIT_RX_BB_GAIN_S
 0

	)

1196 
	#AR_PHY_PAPRD_TRAINER_CNTL3
 (
AR_SM_BASE
 + (
	`AR_SREV_9485
(
ah
Ë? 0x588 : 0x498))

	)

1198 
	#AR_PHY_PAPRD_TRAINER_CNTL3_CF_PAPRD_ADC_DESIRED_SIZE
 0x0000003f

	)

1199 
	#AR_PHY_PAPRD_TRAINER_CNTL3_CF_PAPRD_ADC_DESIRED_SIZE_S
 0

	)

1200 
	#AR_PHY_PAPRD_TRAINER_CNTL3_CF_PAPRD_QUICK_DROP
 0x00000fc0

	)

1201 
	#AR_PHY_PAPRD_TRAINER_CNTL3_CF_PAPRD_QUICK_DROP_S
 6

	)

1202 
	#AR_PHY_PAPRD_TRAINER_CNTL3_CF_PAPRD_MIN_LOOPBACK_DEL
 0x0001f000

	)

1203 
	#AR_PHY_PAPRD_TRAINER_CNTL3_CF_PAPRD_MIN_LOOPBACK_DEL_S
 12

	)

1204 
	#AR_PHY_PAPRD_TRAINER_CNTL3_CF_PAPRD_NUM_CORR_STAGES
 0x000e0000

	)

1205 
	#AR_PHY_PAPRD_TRAINER_CNTL3_CF_PAPRD_NUM_CORR_STAGES_S
 17

	)

1206 
	#AR_PHY_PAPRD_TRAINER_CNTL3_CF_PAPRD_COARSE_CORR_LEN
 0x00f00000

	)

1207 
	#AR_PHY_PAPRD_TRAINER_CNTL3_CF_PAPRD_COARSE_CORR_LEN_S
 20

	)

1208 
	#AR_PHY_PAPRD_TRAINER_CNTL3_CF_PAPRD_FINE_CORR_LEN
 0x0f000000

	)

1209 
	#AR_PHY_PAPRD_TRAINER_CNTL3_CF_PAPRD_FINE_CORR_LEN_S
 24

	)

1210 
	#AR_PHY_PAPRD_TRAINER_CNTL3_CF_PAPRD_BBTXMIX_DISABLE
 0x20000000

	)

1211 
	#AR_PHY_PAPRD_TRAINER_CNTL3_CF_PAPRD_BBTXMIX_DISABLE_S
 29

	)

1213 
	#AR_PHY_PAPRD_TRAINER_CNTL4
 (
AR_SM_BASE
 + (
	`AR_SREV_9485
(
ah
Ë? 0x58¯: 0x49c))

	)

1215 
	#AR_PHY_PAPRD_TRAINER_CNTL4_CF_PAPRD_NUM_TRAIN_SAMPLES
 0x03ff0000

	)

1216 
	#AR_PHY_PAPRD_TRAINER_CNTL4_CF_PAPRD_NUM_TRAIN_SAMPLES_S
 16

	)

1217 
	#AR_PHY_PAPRD_TRAINER_CNTL4_CF_PAPRD_SAFETY_DELTA
 0x0000f000

	)

1218 
	#AR_PHY_PAPRD_TRAINER_CNTL4_CF_PAPRD_SAFETY_DELTA_S
 12

	)

1219 
	#AR_PHY_PAPRD_TRAINER_CNTL4_CF_PAPRD_MIN_CORR
 0x00000fff

	)

1220 
	#AR_PHY_PAPRD_TRAINER_CNTL4_CF_PAPRD_MIN_CORR_S
 0

	)

1222 
	#AR_PHY_PAPRD_PRE_POST_SCALE_0_B0
 (
AR_CHAN_BASE
 + 0x100)

	)

1223 
	#AR_PHY_PAPRD_PRE_POST_SCALE_1_B0
 (
AR_CHAN_BASE
 + 0x104)

	)

1224 
	#AR_PHY_PAPRD_PRE_POST_SCALE_2_B0
 (
AR_CHAN_BASE
 + 0x108)

	)

1225 
	#AR_PHY_PAPRD_PRE_POST_SCALE_3_B0
 (
AR_CHAN_BASE
 + 0x10c)

	)

1226 
	#AR_PHY_PAPRD_PRE_POST_SCALE_4_B0
 (
AR_CHAN_BASE
 + 0x110)

	)

1227 
	#AR_PHY_PAPRD_PRE_POST_SCALE_5_B0
 (
AR_CHAN_BASE
 + 0x114)

	)

1228 
	#AR_PHY_PAPRD_PRE_POST_SCALE_6_B0
 (
AR_CHAN_BASE
 + 0x118)

	)

1229 
	#AR_PHY_PAPRD_PRE_POST_SCALE_7_B0
 (
AR_CHAN_BASE
 + 0x11c)

	)

1230 
	#AR_PHY_PAPRD_PRE_POST_SCALING
 0x3FFFF

	)

1231 
	#AR_PHY_PAPRD_PRE_POST_SCALING_S
 0

	)

1233 
	#AR_PHY_PAPRD_TRAINER_STAT1
 (
AR_SM_BASE
 + (
	`AR_SREV_9485
(
ah
Ë? 0x590 : 0x4a0))

	)

1235 
	#AR_PHY_PAPRD_TRAINER_STAT1_PAPRD_TRAIN_DONE
 0x00000001

	)

1236 
	#AR_PHY_PAPRD_TRAINER_STAT1_PAPRD_TRAIN_DONE_S
 0

	)

1237 
	#AR_PHY_PAPRD_TRAINER_STAT1_PAPRD_TRAIN_INCOMPLETE
 0x00000002

	)

1238 
	#AR_PHY_PAPRD_TRAINER_STAT1_PAPRD_TRAIN_INCOMPLETE_S
 1

	)

1239 
	#AR_PHY_PAPRD_TRAINER_STAT1_PAPRD_CORR_ERR
 0x00000004

	)

1240 
	#AR_PHY_PAPRD_TRAINER_STAT1_PAPRD_CORR_ERR_S
 2

	)

1241 
	#AR_PHY_PAPRD_TRAINER_STAT1_PAPRD_TRAIN_ACTIVE
 0x00000008

	)

1242 
	#AR_PHY_PAPRD_TRAINER_STAT1_PAPRD_TRAIN_ACTIVE_S
 3

	)

1243 
	#AR_PHY_PAPRD_TRAINER_STAT1_PAPRD_RX_GAIN_IDX
 0x000001f0

	)

1244 
	#AR_PHY_PAPRD_TRAINER_STAT1_PAPRD_RX_GAIN_IDX_S
 4

	)

1245 
	#AR_PHY_PAPRD_TRAINER_STAT1_PAPRD_AGC2_PWR
 0x0001„00

	)

1246 
	#AR_PHY_PAPRD_TRAINER_STAT1_PAPRD_AGC2_PWR_S
 9

	)

1248 
	#AR_PHY_PAPRD_TRAINER_STAT2
 (
AR_SM_BASE
 + (
	`AR_SREV_9485
(
ah
Ë? 0x594 : 0x4a4))

	)

1250 
	#AR_PHY_PAPRD_TRAINER_STAT2_PAPRD_FINE_VAL
 0x0000ffff

	)

1251 
	#AR_PHY_PAPRD_TRAINER_STAT2_PAPRD_FINE_VAL_S
 0

	)

1252 
	#AR_PHY_PAPRD_TRAINER_STAT2_PAPRD_COARSE_IDX
 0x001f0000

	)

1253 
	#AR_PHY_PAPRD_TRAINER_STAT2_PAPRD_COARSE_IDX_S
 16

	)

1254 
	#AR_PHY_PAPRD_TRAINER_STAT2_PAPRD_FINE_IDX
 0x00600000

	)

1255 
	#AR_PHY_PAPRD_TRAINER_STAT2_PAPRD_FINE_IDX_S
 21

	)

1257 
	#AR_PHY_PAPRD_TRAINER_STAT3
 (
AR_SM_BASE
 + (
	`AR_SREV_9485
(
ah
Ë? 0x598 : 0x4a8))

	)

1259 
	#AR_PHY_PAPRD_TRAINER_STAT3_PAPRD_TRAIN_SAMPLES_CNT
 0x000fffff

	)

1260 
	#AR_PHY_PAPRD_TRAINER_STAT3_PAPRD_TRAIN_SAMPLES_CNT_S
 0

	)

1262 
	#AR_PHY_PAPRD_MEM_TAB_B0
 (
AR_CHAN_BASE
 + 0x120)

	)

1263 
	#AR_PHY_PAPRD_MEM_TAB_B1
 (
AR_CHAN1_BASE
 + 0x120)

	)

1264 
	#AR_PHY_PAPRD_MEM_TAB_B2
 (
AR_CHAN2_BASE
 + 0x120)

	)

1266 
	#AR_PHY_PA_GAIN123_B0
 (
AR_CHAN_BASE
 + 0xf8)

	)

1267 
	#AR_PHY_PA_GAIN123_B1
 (
AR_CHAN1_BASE
 + 0xf8)

	)

1268 
	#AR_PHY_PA_GAIN123_B2
 (
AR_CHAN2_BASE
 + 0xf8)

	)

1269 
	#AR_PHY_PA_GAIN123_PA_GAIN1
 0x3FF

	)

1270 
	#AR_PHY_PA_GAIN123_PA_GAIN1_S
 0

	)

1272 
	#AR_PHY_POWERTX_RATE5
 (
AR_SM_BASE
 + 0x1d0)

	)

1273 
	#AR_PHY_POWERTX_RATE5_POWERTXHT20_0
 0x3F

	)

1274 
	#AR_PHY_POWERTX_RATE5_POWERTXHT20_0_S
 0

	)

1276 
	#AR_PHY_POWERTX_RATE6
 (
AR_SM_BASE
 + 0x1d4)

	)

1277 
	#AR_PHY_POWERTX_RATE6_POWERTXHT20_5
 0x3F00

	)

1278 
	#AR_PHY_POWERTX_RATE6_POWERTXHT20_5_S
 8

	)

1280 
	#AR_PHY_POWERTX_RATE8
 (
AR_SM_BASE
 + 0x1dc)

	)

1281 
	#AR_PHY_POWERTX_RATE8_POWERTXHT40_5
 0x3F00

	)

1282 
	#AR_PHY_POWERTX_RATE8_POWERTXHT40_5_S
 8

	)

1284 
	#AR_PHY_CL_TAB_CL_GAIN_MOD
 0x1f

	)

1285 
	#AR_PHY_CL_TAB_CL_GAIN_MOD_S
 0

	)

1287 
	#AR_BTCOEX_WL_LNADIV
 0x1a64

	)

1288 
	#AR_BTCOEX_WL_LNADIV_PREDICTED_PERIOD
 0x00003FFF

	)

1289 
	#AR_BTCOEX_WL_LNADIV_PREDICTED_PERIOD_S
 0

	)

1290 
	#AR_BTCOEX_WL_LNADIV_DPDT_IGNORE_PRIORITY
 0x00004000

	)

1291 
	#AR_BTCOEX_WL_LNADIV_DPDT_IGNORE_PRIORITY_S
 14

	)

1292 
	#AR_BTCOEX_WL_LNADIV_FORCE_ON
 0x00008000

	)

1293 
	#AR_BTCOEX_WL_LNADIV_FORCE_ON_S
 15

	)

1294 
	#AR_BTCOEX_WL_LNADIV_MODE_OPTION
 0x00030000

	)

1295 
	#AR_BTCOEX_WL_LNADIV_MODE_OPTION_S
 16

	)

1296 
	#AR_BTCOEX_WL_LNADIV_MODE
 0x007c0000

	)

1297 
	#AR_BTCOEX_WL_LNADIV_MODE_S
 18

	)

1298 
	#AR_BTCOEX_WL_LNADIV_ALLOWED_TX_ANTDIV_WL_TX_REQ
 0x00800000

	)

1299 
	#AR_BTCOEX_WL_LNADIV_ALLOWED_TX_ANTDIV_WL_TX_REQ_S
 23

	)

1300 
	#AR_BTCOEX_WL_LNADIV_DISABLE_TX_ANTDIV_ENABLE
 0x01000000

	)

1301 
	#AR_BTCOEX_WL_LNADIV_DISABLE_TX_ANTDIV_ENABLE_S
 24

	)

1302 
	#AR_BTCOEX_WL_LNADIV_CONTINUOUS_BT_ACTIVE_PROTECT
 0x02000000

	)

1303 
	#AR_BTCOEX_WL_LNADIV_CONTINUOUS_BT_ACTIVE_PROTECT_S
 25

	)

1304 
	#AR_BTCOEX_WL_LNADIV_BT_INACTIVE_THRESHOLD
 0xFC000000

	)

1305 
	#AR_BTCOEX_WL_LNADIV_BT_INACTIVE_THRESHOLD_S
 26

	)

1308 
	#AR_PHY_65NM_BASE
 0x16000

	)

1309 
	#AR_PHY_65NM_RXRF_GAINSTAGES
(
i
Ë(
AR_PHY_65NM_BASE
 + \

1310 (
i
 * 0x400Ë+ 0x8)

	)

1311 
	#AR_PHY_65NM_RXRF_GAINSTAGES_RX_OVERRIDE
 0x80000000

	)

1312 
	#AR_PHY_65NM_RXRF_GAINSTAGES_RX_OVERRIDE_S
 31

	)

1313 
	#AR_PHY_65NM_RXRF_GAINSTAGES_LNAON_CALDC
 0x00000002

	)

1314 
	#AR_PHY_65NM_RXRF_GAINSTAGES_LNAON_CALDC_S
 1

	)

1315 
	#AR_PHY_65NM_RXRF_GAINSTAGES_LNA2G_GAIN_OVR
 0x70000000

	)

1316 
	#AR_PHY_65NM_RXRF_GAINSTAGES_LNA2G_GAIN_OVR_S
 28

	)

1317 
	#AR_PHY_65NM_RXRF_GAINSTAGES_LNA5G_GAIN_OVR
 0x03800000

	)

1318 
	#AR_PHY_65NM_RXRF_GAINSTAGES_LNA5G_GAIN_OVR_S
 23

	)

1320 
	#AR_PHY_65NM_RXTX2
(
i
Ë(
AR_PHY_65NM_BASE
 + \

1321 (
i
 * 0x400Ë+ 0x104)

	)

1322 
	#AR_PHY_65NM_RXTX2_RXON_OVR
 0x00001000

	)

1323 
	#AR_PHY_65NM_RXTX2_RXON_OVR_S
 12

	)

1324 
	#AR_PHY_65NM_RXTX2_RXON
 0x00000800

	)

1325 
	#AR_PHY_65NM_RXTX2_RXON_S
 11

	)

1327 
	#AR_PHY_65NM_RXRF_AGC
(
i
Ë(
AR_PHY_65NM_BASE
 + \

1328 (
i
 * 0x400Ë+ 0xc)

	)

1329 
	#AR_PHY_65NM_RXRF_AGC_AGC_OVERRIDE
 0x80000000

	)

1330 
	#AR_PHY_65NM_RXRF_AGC_AGC_OVERRIDE_S
 31

	)

1331 
	#AR_PHY_65NM_RXRF_AGC_AGC_ON_OVR
 0x40000000

	)

1332 
	#AR_PHY_65NM_RXRF_AGC_AGC_ON_OVR_S
 30

	)

1333 
	#AR_PHY_65NM_RXRF_AGC_AGC_CAL_OVR
 0x20000000

	)

1334 
	#AR_PHY_65NM_RXRF_AGC_AGC_CAL_OVR_S
 29

	)

1335 
	#AR_PHY_65NM_RXRF_AGC_AGC2G_DBDAC_OVR
 0x1E000000

	)

1336 
	#AR_PHY_65NM_RXRF_AGC_AGC2G_DBDAC_OVR_S
 25

	)

1337 
	#AR_PHY_65NM_RXRF_AGC_AGC5G_DBDAC_OVR
 0x00078000

	)

1338 
	#AR_PHY_65NM_RXRF_AGC_AGC5G_DBDAC_OVR_S
 15

	)

1339 
	#AR_PHY_65NM_RXRF_AGC_AGC2G_CALDAC_OVR
 0x01F80000

	)

1340 
	#AR_PHY_65NM_RXRF_AGC_AGC2G_CALDAC_OVR_S
 19

	)

1341 
	#AR_PHY_65NM_RXRF_AGC_AGC5G_CALDAC_OVR
 0x00007e00

	)

1342 
	#AR_PHY_65NM_RXRF_AGC_AGC5G_CALDAC_OVR_S
 9

	)

1343 
	#AR_PHY_65NM_RXRF_AGC_AGC_OUT
 0x00000004

	)

1344 
	#AR_PHY_65NM_RXRF_AGC_AGC_OUT_S
 2

	)

1346 
	#AR9300_DFS_FIRPWR
 -28

	)

	@ar9003_rtt.c

17 
	~"hw.h
"

18 
	~"hw-›s.h
"

19 
	~"¨9003_phy.h
"

20 
	~"¨9003_πt.h
"

22 
	#RTT_RESTORE_TIMEOUT
 1000

	)

23 
	#RTT_ACCESS_TIMEOUT
 100

	)

24 
	#RTT_BAD_VALUE
 0x0bad0bad

	)

38 
	$¨9003_hw_πt_íabÀ
(
©h_hw
 *
ah
)

40 
	`REG_WRITE
(
ah
, 
AR_PHY_RTT_CTRL
, 1);

41 
	}
}

43 
	$¨9003_hw_πt_dißbÀ
(
©h_hw
 *
ah
)

45 
	`REG_WRITE
(
ah
, 
AR_PHY_RTT_CTRL
, 0);

46 
	}
}

48 
	$¨9003_hw_πt_£t_mask
(
©h_hw
 *
ah
, 
u32
 
πt_mask
)

50 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_RTT_CTRL
,

51 
AR_PHY_RTT_CTRL_RESTORE_MASK
, 
πt_mask
);

52 
	}
}

54 
boﬁ
 
	$¨9003_hw_πt_f‹˚_ª°‹e
(
©h_hw
 *
ah
)

56 i‡(!
	`©h9k_hw_waô
(
ah
, 
AR_PHY_RTT_CTRL
,

57 
AR_PHY_RTT_CTRL_FORCE_RADIO_RESTORE
,

58 0, 
RTT_RESTORE_TIMEOUT
))

59  
Ál£
;

61 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_RTT_CTRL
,

62 
AR_PHY_RTT_CTRL_FORCE_RADIO_RESTORE
, 1);

64 i‡(!
	`©h9k_hw_waô
(
ah
, 
AR_PHY_RTT_CTRL
,

65 
AR_PHY_RTT_CTRL_FORCE_RADIO_RESTORE
,

66 0, 
RTT_RESTORE_TIMEOUT
))

67  
Ál£
;

69  
åue
;

70 
	}
}

72 
	$¨9003_hw_πt_lﬂd_hi°_íåy
(
©h_hw
 *
ah
, 
u8
 
chaö
,

73 
u32
 
ödex
, u32 
d©a28
)

75 
u32
 
vÆ
;

77 
vÆ
 = 
	`SM
(
d©a28
, 
AR_PHY_RTT_SW_RTT_TABLE_DATA
);

78 
	`REG_WRITE
(
ah
, 
	`AR_PHY_RTT_TABLE_SW_INTF_1_B
(
chaö
), 
vÆ
);

80 
vÆ
 = 
	`SM
(0, 
AR_PHY_RTT_SW_RTT_TABLE_ACCESS
) |

81 
	`SM
(1, 
AR_PHY_RTT_SW_RTT_TABLE_WRITE
) |

82 
	`SM
(
ödex
, 
AR_PHY_RTT_SW_RTT_TABLE_ADDR
);

83 
	`REG_WRITE
(
ah
, 
	`AR_PHY_RTT_TABLE_SW_INTF_B
(
chaö
), 
vÆ
);

84 
	`udñay
(1);

86 
vÆ
 |
	`SM
(1, 
AR_PHY_RTT_SW_RTT_TABLE_ACCESS
);

87 
	`REG_WRITE
(
ah
, 
	`AR_PHY_RTT_TABLE_SW_INTF_B
(
chaö
), 
vÆ
);

88 
	`udñay
(1);

90 i‡(!
	`©h9k_hw_waô
(
ah
, 
	`AR_PHY_RTT_TABLE_SW_INTF_B
(
chaö
),

91 
AR_PHY_RTT_SW_RTT_TABLE_ACCESS
, 0,

92 
RTT_ACCESS_TIMEOUT
))

95 
vÆ
 &~
	`SM
(1, 
AR_PHY_RTT_SW_RTT_TABLE_WRITE
);

96 
	`REG_WRITE
(
ah
, 
	`AR_PHY_RTT_TABLE_SW_INTF_B
(
chaö
), 
vÆ
);

97 
	`udñay
(1);

99 
	`©h9k_hw_waô
(
ah
, 
	`AR_PHY_RTT_TABLE_SW_INTF_B
(
chaö
),

100 
AR_PHY_RTT_SW_RTT_TABLE_ACCESS
, 0,

101 
RTT_ACCESS_TIMEOUT
);

102 
	}
}

104 
	$¨9003_hw_πt_lﬂd_hi°
(
©h_hw
 *
ah
)

106 
chaö
, 
i
;

108 
chaö
 = 0; chaö < 
AR9300_MAX_CHAINS
; chain++) {

109 i‡(!(
ah
->
rxchaömask
 & (1 << 
chaö
)))

111 
i
 = 0; i < 
MAX_RTT_TABLE_ENTRY
; i++) {

112 
	`¨9003_hw_πt_lﬂd_hi°_íåy
(
ah
, 
chaö
, 
i
,

113 
ah
->
ˇld©a
->
πt_èbÀ
[
chaö
][
i
]);

114 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
CALIBRATE
,

116 
i
, 
chaö
, 
ah
->
ˇld©a
->
πt_èbÀ
[chain][i]);

119 
	}
}

121 
	$¨9003_hw_∑tch_πt
(
©h_hw
 *
ah
, 
ödex
, 
chaö
)

123 
agc
, 
ˇldac
;

125 i‡(!
	`ã°_bô
(
SW_PKDET_DONE
, &
ah
->
ˇld©a
->
ˇl_Êags
))

128 i‡((
ödex
 !5Ë|| (
chaö
 >= 2))

131 
agc
 = 
	`REG_READ_FIELD
(
ah
, 
	`AR_PHY_65NM_RXRF_AGC
(
chaö
),

132 
AR_PHY_65NM_RXRF_AGC_AGC_OVERRIDE
);

133 i‡(!
agc
)

136 
ˇldac
 = 
ah
->
ˇld©a
->ˇldac[
chaö
];

137 
ah
->
ˇld©a
->
πt_èbÀ
[
chaö
][
ödex
] &= 0xFFFF05FF;

138 
ˇldac
 = (caldac & 0x20) | ((caldac & 0x1F) << 7);

139 
ah
->
ˇld©a
->
πt_èbÀ
[
chaö
][
ödex
] |(
ˇldac
 << 4);

140 
	}
}

142 
	$¨9003_hw_πt_fûl_hi°_íåy
(
©h_hw
 *
ah
, 
u8
 
chaö
, 
u32
 
ödex
)

144 
u32
 
vÆ
;

146 
vÆ
 = 
	`SM
(0, 
AR_PHY_RTT_SW_RTT_TABLE_ACCESS
) |

147 
	`SM
(0, 
AR_PHY_RTT_SW_RTT_TABLE_WRITE
) |

148 
	`SM
(
ödex
, 
AR_PHY_RTT_SW_RTT_TABLE_ADDR
);

150 
	`REG_WRITE
(
ah
, 
	`AR_PHY_RTT_TABLE_SW_INTF_B
(
chaö
), 
vÆ
);

151 
	`udñay
(1);

153 
vÆ
 |
	`SM
(1, 
AR_PHY_RTT_SW_RTT_TABLE_ACCESS
);

154 
	`REG_WRITE
(
ah
, 
	`AR_PHY_RTT_TABLE_SW_INTF_B
(
chaö
), 
vÆ
);

155 
	`udñay
(1);

157 i‡(!
	`©h9k_hw_waô
(
ah
, 
	`AR_PHY_RTT_TABLE_SW_INTF_B
(
chaö
),

158 
AR_PHY_RTT_SW_RTT_TABLE_ACCESS
, 0,

159 
RTT_ACCESS_TIMEOUT
))

160  
RTT_BAD_VALUE
;

162 
vÆ
 = 
	`MS
(
	`REG_READ
(
ah
, 
	`AR_PHY_RTT_TABLE_SW_INTF_1_B
(
chaö
)),

163 
AR_PHY_RTT_SW_RTT_TABLE_DATA
);

166  
vÆ
;

167 
	}
}

169 
	$¨9003_hw_πt_fûl_hi°
(
©h_hw
 *
ah
)

171 
chaö
, 
i
;

173 
chaö
 = 0; chaö < 
AR9300_MAX_CHAINS
; chain++) {

174 i‡(!(
ah
->
rxchaömask
 & (1 << 
chaö
)))

176 
i
 = 0; i < 
MAX_RTT_TABLE_ENTRY
; i++) {

177 
ah
->
ˇld©a
->
πt_èbÀ
[
chaö
][
i
] =

178 
	`¨9003_hw_πt_fûl_hi°_íåy
(
ah
, 
chaö
, 
i
);

180 
	`¨9003_hw_∑tch_πt
(
ah
, 
i
, 
chaö
);

182 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
CALIBRATE
,

184 
i
, 
chaö
, 
ah
->
ˇld©a
->
πt_èbÀ
[chain][i]);

188 
	`£t_bô
(
RTT_DONE
, &
ah
->
ˇld©a
->
ˇl_Êags
);

189 
	}
}

191 
	$¨9003_hw_πt_˛ór_hi°
(
©h_hw
 *
ah
)

193 
chaö
, 
i
;

195 
chaö
 = 0; chaö < 
AR9300_MAX_CHAINS
; chain++) {

196 i‡(!(
ah
->
rxchaömask
 & (1 << 
chaö
)))

198 
i
 = 0; i < 
MAX_RTT_TABLE_ENTRY
; i++)

199 
	`¨9003_hw_πt_lﬂd_hi°_íåy
(
ah
, 
chaö
, 
i
, 0);

202 i‡(
ah
->
ˇld©a
)

203 
	`˛ór_bô
(
RTT_DONE
, &
ah
->
ˇld©a
->
ˇl_Êags
);

204 
	}
}

206 
boﬁ
 
	$¨9003_hw_πt_ª°‹e
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
)

208 
boﬁ
 
ª°‹e
;

210 i‡(!
ah
->
ˇld©a
)

211  
Ál£
;

213 i‡(
	`ã°_bô
(
SW_PKDET_DONE
, &
ah
->
ˇld©a
->
ˇl_Êags
)) {

214 i‡(
	`IS_CHAN_2GHZ
(
ch™
)){

215 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_65NM_RXRF_AGC
(0),

216 
AR_PHY_65NM_RXRF_AGC_AGC2G_CALDAC_OVR
,

217 
ah
->
ˇld©a
->
ˇldac
[0]);

218 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_65NM_RXRF_AGC
(1),

219 
AR_PHY_65NM_RXRF_AGC_AGC2G_CALDAC_OVR
,

220 
ah
->
ˇld©a
->
ˇldac
[1]);

222 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_65NM_RXRF_AGC
(0),

223 
AR_PHY_65NM_RXRF_AGC_AGC5G_CALDAC_OVR
,

224 
ah
->
ˇld©a
->
ˇldac
[0]);

225 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_65NM_RXRF_AGC
(1),

226 
AR_PHY_65NM_RXRF_AGC_AGC5G_CALDAC_OVR
,

227 
ah
->
ˇld©a
->
ˇldac
[1]);

229 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_65NM_RXRF_AGC
(1),

230 
AR_PHY_65NM_RXRF_AGC_AGC_OVERRIDE
, 0x1);

231 
	`REG_RMW_FIELD
(
ah
, 
	`AR_PHY_65NM_RXRF_AGC
(0),

232 
AR_PHY_65NM_RXRF_AGC_AGC_OVERRIDE
, 0x1);

235 i‡(!
	`ã°_bô
(
RTT_DONE
, &
ah
->
ˇld©a
->
ˇl_Êags
))

236  
Ál£
;

238 
	`¨9003_hw_πt_íabÀ
(
ah
);

240 i‡(
	`ã°_bô
(
SW_PKDET_DONE
, &
ah
->
ˇld©a
->
ˇl_Êags
))

241 
	`¨9003_hw_πt_£t_mask
(
ah
, 0x30);

243 
	`¨9003_hw_πt_£t_mask
(
ah
, 0x10);

245 i‡(!
	`©h9k_hw_rfbus_ªq
(
ah
)) {

246 
	`©h_îr
(
	`©h9k_hw_comm⁄
(
ah
), "CouldÇot stop baseband\n");

247 
ª°‹e
 = 
Ál£
;

248 
Áû
;

251 
	`¨9003_hw_πt_lﬂd_hi°
(
ah
);

252 
ª°‹e
 = 
	`¨9003_hw_πt_f‹˚_ª°‹e
(
ah
);

254 
Áû
:

255 
	`©h9k_hw_rfbus_d⁄e
(
ah
);

256 
	`¨9003_hw_πt_dißbÀ
(
ah
);

257  
ª°‹e
;

258 
	}
}

	@ar9003_rtt.h

17 #i‚de‡
AR9003_RTT_H


18 
	#AR9003_RTT_H


	)

20 #ifde‡
CPTCFG_ATH9K_PCOEM


21 
¨9003_hw_πt_íabÀ
(
©h_hw
 *
ah
);

22 
¨9003_hw_πt_dißbÀ
(
©h_hw
 *
ah
);

23 
¨9003_hw_πt_£t_mask
(
©h_hw
 *
ah
, 
u32
 
πt_mask
);

24 
boﬁ
 
¨9003_hw_πt_f‹˚_ª°‹e
(
©h_hw
 *
ah
);

25 
¨9003_hw_πt_lﬂd_hi°
(
©h_hw
 *
ah
);

26 
¨9003_hw_πt_fûl_hi°
(
©h_hw
 *
ah
);

27 
¨9003_hw_πt_˛ór_hi°
(
©h_hw
 *
ah
);

28 
boﬁ
 
¨9003_hw_πt_ª°‹e
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
);

30 
ölöe
 
	$¨9003_hw_πt_íabÀ
(
©h_hw
 *
ah
)

32 
	}
}

34 
ölöe
 
	$¨9003_hw_πt_dißbÀ
(
©h_hw
 *
ah
)

36 
	}
}

38 
ölöe
 
	$¨9003_hw_πt_£t_mask
(
©h_hw
 *
ah
, 
u32
 
πt_mask
)

40 
	}
}

42 
ölöe
 
boﬁ
 
	$¨9003_hw_πt_f‹˚_ª°‹e
(
©h_hw
 *
ah
)

44  
Ál£
;

45 
	}
}

47 
ölöe
 
	$¨9003_hw_πt_lﬂd_hi°
(
©h_hw
 *
ah
)

49 
	}
}

51 
ölöe
 
	$¨9003_hw_πt_fûl_hi°
(
©h_hw
 *
ah
)

53 
	}
}

55 
ölöe
 
	$¨9003_hw_πt_˛ór_hi°
(
©h_hw
 *
ah
)

57 
	}
}

59 
ölöe
 
boﬁ
 
	$¨9003_hw_πt_ª°‹e
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
)

61  
Ál£
;

62 
	}
}

	@ar9003_wow.c

17 
	~<löux/exp‹t.h
>

18 
	~"©h9k.h
"

19 
	~"ªg.h
"

20 
	~"hw-›s.h
"

22 c⁄° *
	$©h9k_hw_wow_evít_to_°rög
(
u32
 
wow_evít
)

24 i‡(
wow_evít
 & 
AH_WOW_MAGIC_PATTERN_EN
)

26 i‡(
wow_evít
 & 
AH_WOW_USER_PATTERN_EN
)

28 i‡(
wow_evít
 & 
AH_WOW_LINK_CHANGE
)

30 i‡(
wow_evít
 & 
AH_WOW_BEACON_MISS
)

34 
	}
}

35 
EXPORT_SYMBOL
(
©h9k_hw_wow_evít_to_°rög
);

37 
	$©h9k_hw_£t_powîmode_wow_¶ìp
(
©h_hw
 *
ah
)

39 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

41 
	`REG_SET_BIT
(
ah
, 
AR_STA_ID1
, 
AR_STA_ID1_PWR_SAV
);

44 
	`REG_WRITE
(
ah
, 
AR_CR
, 
AR_CR_RXD
);

46 i‡(!
	`©h9k_hw_waô
(
ah
, 
AR_CR
, 
AR_CR_RXE
, 0, 
AH_WAIT_TIMEOUT
)) {

47 
	`©h_îr
(
comm⁄
, "FailedÅo stop Rx DMA in 10ms AR_CR=0x%08x AR_DIAG_SW=0x%08x\n",

48 
	`REG_READ
(
ah
, 
AR_CR
), REG_READ◊h, 
AR_DIAG_SW
));

52 
	`REG_WRITE
(
ah
, 
AR_RTC_FORCE_WAKE
, 
AR_RTC_FORCE_WAKE_ON_INT
);

53 
	}
}

55 
	$©h9k_wow_¸óã_kìp_Æive_∑âîn
(
©h_hw
 *
ah
)

57 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

58 
u8
 
°a_mac_addr
[
ETH_ALEN
], 
≠_mac_addr
[ETH_ALEN];

59 
u32
 
˘l
[13] = {0};

60 
u32
 
d©a_w‹d
[
KAL_NUM_DATA_WORDS
];

61 
u8
 
i
;

62 
u32
 
wow_ka_d©a_w‹d0
;

64 
	`mem˝y
(
°a_mac_addr
, 
comm⁄
->
maˇddr
, 
ETH_ALEN
);

65 
	`mem˝y
(
≠_mac_addr
, 
comm⁄
->
curbssid
, 
ETH_ALEN
);

68 
˘l
[0] = (
KAL_FRAME_LEN
 | (
MAX_RATE_POWER
 << 16));

69 
˘l
[1] = 0;

70 
˘l
[3] = 0xb;

71 
˘l
[4] = 0;

72 
˘l
[7] = (
ah
->
txchaömask
) << 2;

73 
˘l
[2] = 0xf << 16;

75 
i
 = 0; i < 
KAL_NUM_DESC_WORDS
; i++)

76 
	`REG_WRITE
(
ah
, (
AR_WOW_KA_DESC_WORD2
 + 
i
 * 4), 
˘l
[i]);

78 
	`REG_WRITE
(
ah
, (
AR_WOW_KA_DESC_WORD2
 + 
i
 * 4), 
˘l
[i]);

80 
d©a_w‹d
[0] = (
KAL_FRAME_TYPE
 << 2Ë| (
KAL_FRAME_SUB_TYPE
 << 4) |

81 (
KAL_TO_DS
 << 8Ë| (
KAL_DURATION_ID
 << 16);

82 
d©a_w‹d
[1] = (
≠_mac_addr
[3] << 24) | (ap_mac_addr[2] << 16) |

83 (
≠_mac_addr
[1] << 8) | (ap_mac_addr[0]);

84 
d©a_w‹d
[2] = (
°a_mac_addr
[1] << 24) | (sta_mac_addr[0] << 16) |

85 (
≠_mac_addr
[5] << 8) | (ap_mac_addr[4]);

86 
d©a_w‹d
[3] = (
°a_mac_addr
[5] << 24) | (sta_mac_addr[4] << 16) |

87 (
°a_mac_addr
[3] << 8) | (sta_mac_addr[2]);

88 
d©a_w‹d
[4] = (
≠_mac_addr
[3] << 24) | (ap_mac_addr[2] << 16) |

89 (
≠_mac_addr
[1] << 8) | (ap_mac_addr[0]);

90 
d©a_w‹d
[5] = (
≠_mac_addr
[5] << 8) | (ap_mac_addr[4]);

92 i‡(
	`AR_SREV_9462_20
(
ah
)) {

95 
	`REG_WRITE
(
ah
, (
AR_WOW_KA_DESC_WORD2
 + (12 * 4)), 0);

96 
wow_ka_d©a_w‹d0
 = 
	`AR_WOW_TXBUF
(13);

98 
wow_ka_d©a_w‹d0
 = 
	`AR_WOW_TXBUF
(12);

101 
i
 = 0; i < 
KAL_NUM_DATA_WORDS
; i++)

102 
	`REG_WRITE
(
ah
, (
wow_ka_d©a_w‹d0
 + 
i
*4), 
d©a_w‹d
[i]);

104 
	}
}

106 
	$©h9k_hw_wow_≠∂y_∑âîn
(
©h_hw
 *
ah
, 
u8
 *
u£r_∑âîn
,

107 
u8
 *
u£r_mask
, 
∑âîn_cou¡
,

108 
∑âîn_Àn
)

110 
i
;

111 
u32
 
∑âîn_vÆ
, 
mask_vÆ
;

112 
u32
 
£t
, 
˛r
;

115 i‡(
∑âîn_cou¡
 >
MAX_NUM_PATTERN
)

118 
	`REG_SET_BIT
(
ah
, 
AR_WOW_PATTERN
, 
	`BIT
(
∑âîn_cou¡
));

121 
i
 = 0; i < 
MAX_PATTERN_SIZE
; i += 4) {

122 
	`mem˝y
(&
∑âîn_vÆ
, 
u£r_∑âîn
, 4);

123 
	`REG_WRITE
(
ah
, (
	`AR_WOW_TB_PATTERN
(
∑âîn_cou¡
Ë+ 
i
),

124 
∑âîn_vÆ
);

125 
u£r_∑âîn
 += 4;

129 
i
 = 0; i < 
MAX_PATTERN_MASK_SIZE
; i += 4) {

130 
	`mem˝y
(&
mask_vÆ
, 
u£r_mask
, 4);

131 
	`REG_WRITE
(
ah
, (
	`AR_WOW_TB_MASK
(
∑âîn_cou¡
Ë+ 
i
), 
mask_vÆ
);

132 
u£r_mask
 += 4;

155 
ah
->
wow_evít_mask
 |
	`BIT
(
∑âîn_cou¡
 + 
AR_WOW_PAT_FOUND_SHIFT
);

157 i‡(
∑âîn_cou¡
 < 4) {

159 
£t
 = (
∑âîn_Àn
 & 
AR_WOW_LENGTH_MAX
) <<

160 
	`AR_WOW_LEN1_SHIFT
(
∑âîn_cou¡
);

161 
˛r
 = 
	`AR_WOW_LENGTH1_MASK
(
∑âîn_cou¡
);

162 
	`REG_RMW
(
ah
, 
AR_WOW_LENGTH1
, 
£t
, 
˛r
);

165 
£t
 = (
∑âîn_Àn
 & 
AR_WOW_LENGTH_MAX
) <<

166 
	`AR_WOW_LEN2_SHIFT
(
∑âîn_cou¡
);

167 
˛r
 = 
	`AR_WOW_LENGTH2_MASK
(
∑âîn_cou¡
);

168 
	`REG_RMW
(
ah
, 
AR_WOW_LENGTH2
, 
£t
, 
˛r
);

171 
	}
}

172 
EXPORT_SYMBOL
(
©h9k_hw_wow_≠∂y_∑âîn
);

174 
u32
 
	$©h9k_hw_wow_wakeup
(
©h_hw
 *
ah
)

176 
u32
 
wow_°©us
 = 0;

177 
u32
 
vÆ
 = 0, 
rvÆ
;

183 
rvÆ
 = 
	`REG_READ
(
ah
, 
AR_WOW_PATTERN
);

184 
vÆ
 = 
	`AR_WOW_STATUS
(
rvÆ
);

192 
vÆ
 &
ah
->
wow_evít_mask
;

194 i‡(
vÆ
) {

195 i‡(
vÆ
 & 
AR_WOW_MAGIC_PAT_FOUND
)

196 
wow_°©us
 |
AH_WOW_MAGIC_PATTERN_EN
;

197 i‡(
	`AR_WOW_PATTERN_FOUND
(
vÆ
))

198 
wow_°©us
 |
AH_WOW_USER_PATTERN_EN
;

199 i‡(
vÆ
 & 
AR_WOW_KEEP_ALIVE_FAIL
)

200 
wow_°©us
 |
AH_WOW_LINK_CHANGE
;

201 i‡(
vÆ
 & 
AR_WOW_BEACON_FAIL
)

202 
wow_°©us
 |
AH_WOW_BEACON_MISS
;

212 
	`REG_RMW
(
ah
, 
AR_PCIE_PM_CTRL
, 
AR_PMCTRL_WOW_PME_CLR
,

213 
AR_PMCTRL_PWR_STATE_D1D3
);

218 
	`REG_WRITE
(
ah
, 
AR_WOW_PATTERN
,

219 
	`AR_WOW_CLEAR_EVENTS
(
	`REG_READ
(
ah
, 
AR_WOW_PATTERN
)));

224 
	`REG_WRITE
(
ah
, 
AR_RSSI_THR
, 
INIT_RSSI_THR
);

233 i‡(
ah
->
is_pcõx¥ess
)

234 
	`©h9k_hw_c⁄figpcùowîßve
(
ah
, 
Ál£
);

236 
ah
->
wow_evít_mask
 = 0;

238  
wow_°©us
;

239 
	}
}

240 
EXPORT_SYMBOL
(
©h9k_hw_wow_wakeup
);

242 
	$©h9k_hw_wow_íabÀ
(
©h_hw
 *
ah
, 
u32
 
∑âîn_íabÀ
)

244 
u32
 
wow_evít_mask
;

245 
u32
 
£t
, 
˛r
;

253 
wow_evít_mask
 = 
ah
->wow_event_mask;

260 i‡(
ah
->
is_pcõx¥ess
) {

266 
£t
 = 
AR_WA_RESET_EN
 | 
AR_WA_POR_SHORT
;

267 
˛r
 = 
AR_WA_UNTIE_RESET_EN
 | 
AR_WA_D3_L1_DISABLE
;

268 
	`REG_RMW
(
ah
, 
AR_WA
, 
£t
, 
˛r
);

274 
£t
 = 
AR_PMCTRL_HOST_PME_EN
 | 
AR_PMCTRL_PWR_PM_CTRL_ENA
 |

275 
AR_PMCTRL_AUX_PWR_DET
 | 
AR_PMCTRL_WOW_PME_CLR
;

281 
	`REG_SET_BIT
(
ah
, 
AR_PCIE_PM_CTRL
, 
£t
);

282 
˛r
 = 
AR_PMCTRL_WOW_PME_CLR
;

283 
	`REG_CLR_BIT
(
ah
, 
AR_PCIE_PM_CTRL
, 
˛r
);

297 
£t
 = 
	`AR_WOW_BACK_OFF_SHIFT
(
AR_WOW_PAT_BACKOFF
);

298 
	`REG_SET_BIT
(
ah
, 
AR_WOW_PATTERN
, 
£t
);

300 
£t
 = 
	`AR_WOW_AIFS_CNT
(
AR_WOW_CNT_AIFS_CNT
) |

301 
	`AR_WOW_SLOT_CNT
(
AR_WOW_CNT_SLOT_CNT
) |

302 
	`AR_WOW_KEEP_ALIVE_CNT
(
AR_WOW_CNT_KA_CNT
);

303 
	`REG_SET_BIT
(
ah
, 
AR_WOW_COUNT
, 
£t
);

305 i‡(
∑âîn_íabÀ
 & 
AH_WOW_BEACON_MISS
)

306 
£t
 = 
AR_WOW_BEACON_TIMO
;

309 
£t
 = 
AR_WOW_BEACON_TIMO_MAX
;

311 
	`REG_WRITE
(
ah
, 
AR_WOW_BCN_TIMO
, 
£t
);

316 i‡(!
∑âîn_íabÀ
)

317 
£t
 = 
AR_WOW_KEEP_ALIVE_NEVER
;

319 
£t
 = 
KAL_TIMEOUT
 * 32;

321 
	`REG_WRITE
(
ah
, 
AR_WOW_KEEP_ALIVE_TIMO
, 
£t
);

327 
£t
 = 
KAL_DELAY
 * 1000;

328 
	`REG_WRITE
(
ah
, 
AR_WOW_KEEP_ALIVE_DELAY
, 
£t
);

333 
	`©h9k_wow_¸óã_kìp_Æive_∑âîn
(
ah
);

338 
£t
 = 0;

340 
˛r
 = 
AR_WOW_KEEP_ALIVE_AUTO_DIS
;

342 i‡(
∑âîn_íabÀ
 & 
AH_WOW_LINK_CHANGE
)

343 
wow_evít_mask
 |
AR_WOW_KEEP_ALIVE_FAIL
;

345 
£t
 = 
AR_WOW_KEEP_ALIVE_FAIL_DIS
;

347 
£t
 = 
AR_WOW_KEEP_ALIVE_FAIL_DIS
;

348 
	`REG_RMW
(
ah
, 
AR_WOW_KEEP_ALIVE
, 
£t
, 
˛r
);

354 
	`REG_RMW_FIELD
(
ah
, 
AR_RSSI_THR
, 
AR_RSSI_THR_BM_THR
,

355 
AR_WOW_BMISSTHRESHOLD
);

357 
£t
 = 0;

358 
˛r
 = 0;

360 i‡(
∑âîn_íabÀ
 & 
AH_WOW_BEACON_MISS
) {

361 
£t
 = 
AR_WOW_BEACON_FAIL_EN
;

362 
wow_evít_mask
 |
AR_WOW_BEACON_FAIL
;

364 
˛r
 = 
AR_WOW_BEACON_FAIL_EN
;

367 
	`REG_RMW
(
ah
, 
AR_WOW_BCN_EN
, 
£t
, 
˛r
);

369 
£t
 = 0;

370 
˛r
 = 0;

374 i‡(
∑âîn_íabÀ
 & 
AH_WOW_MAGIC_PATTERN_EN
) {

375 
£t
 = 
AR_WOW_MAGIC_EN
;

376 
wow_evít_mask
 |
AR_WOW_MAGIC_PAT_FOUND
;

378 
˛r
 = 
AR_WOW_MAGIC_EN
;

380 
£t
 |
AR_WOW_MAC_INTR_EN
;

381 
	`REG_RMW
(
ah
, 
AR_WOW_PATTERN
, 
£t
, 
˛r
);

383 
	`REG_WRITE
(
ah
, 
AR_WOW_PATTERN_MATCH_LT_256B
,

384 
AR_WOW_PATTERN_SUPPORTED
);

389 
˛r
 = 0;

390 
£t
 = 
AR_PMCTRL_PWR_STATE_D1D3
 | 
AR_PMCTRL_HOST_PME_EN
 |

391 
AR_PMCTRL_PWR_PM_CTRL_ENA
;

393 
˛r
 = 
AR_PCIE_PM_CTRL_ENA
;

394 
	`REG_RMW
(
ah
, 
AR_PCIE_PM_CTRL
, 
£t
, 
˛r
);

404 
˛r
 = 
AR_PMCTRL_PWR_STATE_D1D3
;

405 
	`REG_CLR_BIT
(
ah
, 
AR_PCIE_PM_CTRL
, 
˛r
);

407 
£t
 = 
AR_PMCTRL_PWR_STATE_D1D3_REAL
;

408 
	`REG_SET_BIT
(
ah
, 
AR_PCIE_PM_CTRL
, 
£t
);

410 
	`REG_CLR_BIT
(
ah
, 
AR_STA_ID1
, 
AR_STA_ID1_PRESERVE_SEQNUM
);

413 
£t
 = 
	`BIT
(13);

414 
	`REG_SET_BIT
(
ah
, 
AR_PCIE_PHY_REG3
, 
£t
);

416 
˛r
 = 
	`BIT
(5);

417 
	`REG_CLR_BIT
(
ah
, 
AR_PCU_MISC_MODE3
, 
˛r
);

419 
	`©h9k_hw_£t_powîmode_wow_¶ìp
(
ah
);

420 
ah
->
wow_evít_mask
 = wow_event_mask;

421 
	}
}

422 
EXPORT_SYMBOL
(
©h9k_hw_wow_íabÀ
);

	@ar9330_1p1_initvals.h

18 #i‚de‡
INITVALS_9330_1P1_H


19 
	#INITVALS_9330_1P1_H


	)

21 
	#¨9331_1p1_ba£b™d_c‹e_txfú_c€ff_j≠™_2484
 
¨9300_2p2_ba£b™d_c‹e_txfú_c€ff_j≠™_2484


	)

23 
	#¨9331_modes_high_powî_tx_gaö_1p1
 
¨9331_modes_lowe°_ob_db_tx_gaö_1p1


	)

25 c⁄° 
u32
 
	g¨9331_1p1_ba£b™d_po°ambÀ
[][5] = {

70 c⁄° 
u32
 
	g¨9331_modes_lowe°_ob_db_tx_gaö_1p1
[][5] = {

162 c⁄° 
u32
 
	g¨9331_modes_high_ob_db_tx_gaö_1p1
[][5] = {

252 c⁄° 
u32
 
	g¨9331_modes_low_ob_db_tx_gaö_1p1
[][5] = {

344 c⁄° 
u32
 
	g¨9331_1p1_xèl_25M
[][2] = {

352 c⁄° 
u32
 
	g¨9331_1p1_ødio_c‹e
[][2] = {

417 c⁄° 
u32
 
	g¨9331_1p1_soc_po°ambÀ
[][5] = {

422 c⁄° 
u32
 
	g¨9331_comm⁄_wo_x a_rx_gaö_1p1
[][2] = {

554 c⁄° 
u32
 
	g¨9331_1p1_ba£b™d_c‹e
[][2] = {

691 c⁄° 
u32
 
	g¨9331_1p1_mac_po°ambÀ
[][5] = {

703 c⁄° 
u32
 
	g¨9331_1p1_soc_¥ómbÀ
[][2] = {

710 c⁄° 
u32
 
	g¨9331_1p1_xèl_40M
[][2] = {

718 c⁄° 
u32
 
	g¨9331_1p1_mac_c‹e
[][2] = {

880 c⁄° 
u32
 
	g¨9331_comm⁄_rx_gaö_1p1
[][2] = {

1013 c⁄° 
u32
 
	g¨9331_comm⁄_tx_gaö_off£t1_1
[][1] = {

	@ar9330_1p2_initvals.h

18 #i‚de‡
INITVALS_9330_1P2_H


19 
	#INITVALS_9330_1P2_H


	)

21 
	#¨9331_modes_high_powî_tx_gaö_1p2
 
¨9331_modes_high_ob_db_tx_gaö_1p2


	)

23 
	#¨9331_modes_low_ob_db_tx_gaö_1p2
 
¨9331_modes_high_ob_db_tx_gaö_1p2


	)

25 
	#¨9331_modes_lowe°_ob_db_tx_gaö_1p2
 
¨9331_modes_high_ob_db_tx_gaö_1p2


	)

27 
	#¨9331_1p2_ba£b™d_c‹e_txfú_c€ff_j≠™_2484
 
¨9331_1p1_ba£b™d_c‹e_txfú_c€ff_j≠™_2484


	)

29 
	#¨9331_1p2_xèl_25M
 
¨9331_1p1_xèl_25M


	)

31 
	#¨9331_1p2_xèl_40M
 
¨9331_1p1_xèl_40M


	)

33 
	#¨9331_1p2_soc_po°ambÀ
 
¨9331_1p1_soc_po°ambÀ


	)

35 
	#¨9331_1p2_mac_po°ambÀ
 
¨9331_1p1_mac_po°ambÀ


	)

37 
	#¨9331_1p2_soc_¥ómbÀ
 
¨9331_1p1_soc_¥ómbÀ


	)

39 
	#¨9331_1p2_mac_c‹e
 
¨9331_1p1_mac_c‹e


	)

41 
	#¨9331_comm⁄_wo_x a_rx_gaö_1p2
 
¨9331_comm⁄_wo_x a_rx_gaö_1p1


	)

43 c⁄° 
u32
 
	g¨9331_modes_high_ob_db_tx_gaö_1p2
[][5] = {

128 c⁄° 
u32
 
	g¨9331_1p2_ødio_c‹e
[][2] = {

193 c⁄° 
u32
 
	g¨9331_1p2_ba£b™d_c‹e
[][2] = {

330 c⁄° 
u32
 
	g¨9331_1p2_ba£b™d_po°ambÀ
[][5] = {

375 c⁄° 
u32
 
	g¨9331_comm⁄_rx_gaö_1p2
[][2] = {

	@ar9340_initvals.h

18 #i‚de‡
INITVALS_9340_H


19 
	#INITVALS_9340_H


	)

21 
	#¨9340_1p0_mac_po°ambÀ
 
¨9300_2p2_mac_po°ambÀ


	)

23 
	#¨9340_1p0_soc_po°ambÀ
 
¨9300_2p2_soc_po°ambÀ


	)

25 
	#¨9340Modes_Á°_˛ock_1p0
 
¨9300Modes_Á°_˛ock_2p2


	)

27 
	#¨9340Comm⁄_rx_gaö_èbÀ_1p0
 
¨9300Comm⁄_rx_gaö_èbÀ_2p2


	)

29 
	#¨9340Comm⁄_wo_x a_rx_gaö_èbÀ_1p0
 
¨9300Comm⁄_wo_x a_rx_gaö_èbÀ_2p2


	)

31 
	#¨9340_1p0_ba£b™d_c‹e_txfú_c€ff_j≠™_2484
 
¨9300_2p2_ba£b™d_c‹e_txfú_c€ff_j≠™_2484


	)

33 
	#¨9340_1p0_ba£b™d_po°ambÀ_dfs_ch™√l
 
¨9300_2p2_ba£b™d_po°ambÀ_dfs_ch™√l


	)

35 c⁄° 
u32
 
	g¨9340_1p0_ødio_po°ambÀ
[][5] = {

44 c⁄° 
u32
 
	g¨9340Modes_lowe°_ob_db_tx_gaö_èbÀ_1p0
[][5] = {

117 c⁄° 
u32
 
	g¨9340_1p0_ødio_c‹e
[][2] = {

221 c⁄° 
u32
 
	g¨9340_1p0_ødio_c‹e_40M
[][2] = {

230 c⁄° 
u32
 
	g¨9340_1p0_ba£b™d_po°ambÀ
[][5] = {

280 c⁄° 
u32
 
	g¨9340_1p0_ba£b™d_c‹e
[][2] = {

429 c⁄° 
u32
 
	g¨9340Modes_high_powî_tx_gaö_èbÀ_1p0
[][5] = {

526 c⁄° 
u32
 
	g¨9340Modes_high_ob_db_tx_gaö_èbÀ_1p0
[][5] = {

624 c⁄° 
u32
 
	g¨9340Modes_ub124_tx_gaö_èbÀ_1p0
[][5] = {

725 c⁄° 
u32
 
	g¨9340Modes_low_ob_db_tx_gaö_èbÀ_1p0
[][5] = {

824 c⁄° 
u32
 
	g¨9340Modes_mixed_ob_db_tx_gaö_èbÀ_1p0
[][5] = {

923 c⁄° 
u32
 
	g¨9340Modes_low_ob_db_™d_•ur_tx_gaö_èbÀ_1p0
[][5] = {

1023 c⁄° 
u32
 
	g¨9340_1p0_mac_c‹e
[][2] = {

1188 c⁄° 
u32
 
	g¨9340_1p0_soc_¥ómbÀ
[][2] = {

1196 c⁄° 
u32
 
	g¨9340_cus227_tx_gaö_èbÀ_1p0
[][5] = {

	@ar9462_2p0_initvals.h

18 #i‚de‡
INITVALS_9462_2P0_H


19 
	#INITVALS_9462_2P0_H


	)

23 
	#¨9462_2p0_mac_po°ambÀ
 
¨9331_1p1_mac_po°ambÀ


	)

25 
	#¨9462_2p0_comm⁄_wo_x a_rx_gaö
 
¨9300Comm⁄_wo_x a_rx_gaö_èbÀ_2p2


	)

27 
	#¨9462_2p0_comm⁄_5g_x a_⁄ly_rxgaö
 
¨9462_2p0_comm⁄_mixed_rx_gaö


	)

29 
	#¨9462_2p0_ba£b™d_c‹e_txfú_c€ff_j≠™_2484
 
¨9300_2p2_ba£b™d_c‹e_txfú_c€ff_j≠™_2484


	)

31 c⁄° 
u32
 
	g¨9462_2p0_modes_Á°_˛ock
[][3] = {

44 c⁄° 
u32
 
	g¨9462_2p0_ba£b™d_po°ambÀ
[][5] = {

103 c⁄° 
u32
 
	g¨9462_2p0_comm⁄_rx_gaö
[][2] = {

363 c⁄° 
u32
 
	g¨9462_2p0_pcõphy_˛kªq_dißbÀ_L1
[][2] = {

370 c⁄° 
u32
 
	g¨9462_2p0_ødio_po°ambÀ_sys2™t
[][5] = {

377 c⁄° 
u32
 
	g¨9462_2p0_modes_low_ob_db_tx_gaö
[][5] = {

446 c⁄° 
u32
 
	g¨9462_2p0_soc_po°ambÀ
[][5] = {

451 c⁄° 
u32
 
	g¨9462_2p0_ba£b™d_c‹e
[][2] = {

601 c⁄° 
u32
 
	g¨9462_2p0_ødio_po°ambÀ
[][5] = {

609 c⁄° 
u32
 
	g¨9462_2p0_modes_mix_ob_db_tx_gaö
[][5] = {

672 c⁄° 
u32
 
	g¨9462_2p0_modes_high_ob_db_tx_gaö
[][5] = {

741 c⁄° 
u32
 
	g¨9462_2p0_ødio_c‹e
[][2] = {

799 c⁄° 
u32
 
	g¨9462_2p0_soc_¥ómbÀ
[][2] = {

807 c⁄° 
u32
 
	g¨9462_2p0_mac_c‹e
[][2] = {

970 c⁄° 
u32
 
	g¨9462_2p0_comm⁄_mixed_rx_gaö
[][2] = {

1230 c⁄° 
u32
 
	g¨9462_2p0_ba£b™d_po°ambÀ_5g_x a
[][5] = {

1235 c⁄° 
u32
 
	g¨9462_2p0_ba£b™d_c‹e_mix_rxgaö
[][2] = {

1240 c⁄° 
u32
 
	g¨9462_2p0_ba£b™d_po°ambÀ_mix_rxgaö
[][5] = {

	@ar9462_2p1_initvals.h

18 #i‚de‡
INITVALS_9462_2P1_H


19 
	#INITVALS_9462_2P1_H


	)

23 
	#¨9462_2p1_mac_po°ambÀ
 
¨9462_2p0_mac_po°ambÀ


	)

25 
	#¨9462_2p1_ba£b™d_c‹e
 
¨9462_2p0_ba£b™d_c‹e


	)

27 
	#¨9462_2p1_ødio_c‹e
 
¨9462_2p0_ødio_c‹e


	)

29 
	#¨9462_2p1_ødio_po°ambÀ
 
¨9462_2p0_ødio_po°ambÀ


	)

31 
	#¨9462_2p1_soc_po°ambÀ
 
¨9462_2p0_soc_po°ambÀ


	)

33 
	#¨9462_2p1_ødio_po°ambÀ_sys2™t
 
¨9462_2p0_ødio_po°ambÀ_sys2™t


	)

35 
	#¨9462_2p1_comm⁄_rx_gaö
 
¨9462_2p0_comm⁄_rx_gaö


	)

37 
	#¨9462_2p1_comm⁄_mixed_rx_gaö
 
¨9462_2p0_comm⁄_mixed_rx_gaö


	)

39 
	#¨9462_2p1_comm⁄_5g_x a_⁄ly_rxgaö
 
¨9462_2p0_comm⁄_5g_x a_⁄ly_rxgaö


	)

41 
	#¨9462_2p1_ba£b™d_c‹e_mix_rxgaö
 
¨9462_2p0_ba£b™d_c‹e_mix_rxgaö


	)

43 
	#¨9462_2p1_ba£b™d_po°ambÀ_mix_rxgaö
 
¨9462_2p0_ba£b™d_po°ambÀ_mix_rxgaö


	)

45 
	#¨9462_2p1_ba£b™d_po°ambÀ_5g_x a
 
¨9462_2p0_ba£b™d_po°ambÀ_5g_x a


	)

47 
	#¨9462_2p1_comm⁄_wo_x a_rx_gaö
 
¨9462_2p0_comm⁄_wo_x a_rx_gaö


	)

49 
	#¨9462_2p1_modes_low_ob_db_tx_gaö
 
¨9462_2p0_modes_low_ob_db_tx_gaö


	)

51 
	#¨9462_2p1_modes_high_ob_db_tx_gaö
 
¨9462_2p0_modes_high_ob_db_tx_gaö


	)

53 
	#¨9462_2p1_modes_mix_ob_db_tx_gaö
 
¨9462_2p0_modes_mix_ob_db_tx_gaö


	)

55 
	#¨9462_2p1_modes_Á°_˛ock
 
¨9462_2p0_modes_Á°_˛ock


	)

57 
	#¨9462_2p1_ba£b™d_c‹e_txfú_c€ff_j≠™_2484
 
¨9462_2p0_ba£b™d_c‹e_txfú_c€ff_j≠™_2484


	)

59 
	#¨9462_2p1_pcõphy_˛kªq_dißbÀ_L1
 
¨9462_2p0_pcõphy_˛kªq_dißbÀ_L1


	)

61 c⁄° 
u32
 
	g¨9462_2p1_mac_c‹e
[][2] = {

224 c⁄° 
u32
 
	g¨9462_2p1_ba£b™d_po°ambÀ
[][5] = {

283 c⁄° 
u32
 
	g¨9462_2p1_soc_¥ómbÀ
[][2] = {

	@ar9485_initvals.h

18 #i‚de‡
INITVALS_9485_H


19 
	#INITVALS_9485_H


	)

23 
	#¨9485_modes_lowe°_ob_db_tx_gaö_1_1
 
¨9485Modes_low_ob_db_tx_gaö_1_1


	)

25 
	#¨9485_1_1_mac_po°ambÀ
 
¨9331_1p1_mac_po°ambÀ


	)

27 
	#¨9485_1_1_ba£b™d_c‹e_txfú_c€ff_j≠™_2484
 
¨9300_2p2_ba£b™d_c‹e_txfú_c€ff_j≠™_2484


	)

29 c⁄° 
u32
 
	g¨9485Comm⁄_wo_x a_rx_gaö_1_1
[][2] = {

167 c⁄° 
u32
 
	g¨9485Modes_high_powî_tx_gaö_1_1
[][5] = {

261 c⁄° 
u32
 
	g¨9485Modes_gªí_ob_db_tx_gaö_1_1
[][5] = {

355 c⁄° 
u32
 
	g¨9485Modes_high_ob_db_tx_gaö_1_1
[][5] = {

449 c⁄° 
u32
 
	g¨9485Modes_low_ob_db_tx_gaö_1_1
[][5] = {

543 c⁄° 
u32
 
	g¨9485Modes_gªí_•ur_ob_db_tx_gaö_1_1
[][5] = {

637 c⁄° 
u32
 
	g¨9485_1_1
[][2] = {

657 c⁄° 
u32
 
	g¨9485_1_1_ødio_c‹e
[][2] = {

722 c⁄° 
u32
 
	g¨9485_1_1_ba£b™d_c‹e
[][2] = {

859 c⁄° 
u32
 
	g¨9485_comm⁄_rx_gaö_1_1
[][2] = {

997 c⁄° 
u32
 
	g¨9485_1_1_soc_¥ómbÀ
[][2] = {

1009 c⁄° 
u32
 
	g¨9485_Á°_˛ock_1_1_ba£b™d_po°ambÀ
[][3] = {

1016 c⁄° 
u32
 
	g¨9485_1_1_ba£b™d_po°ambÀ
[][5] = {

1055 c⁄° 
u32
 
	g¨9485_1_1_ødio_po°ambÀ
[][2] = {

1064 c⁄° 
u32
 
	g¨9485_1_1_mac_c‹e
[][2] = {

1226 c⁄° 
u32
 
	g¨9485_1_1_pcõ_phy_˛kªq_dißbÀ_L1
[][2] = {

1233 c⁄° 
u32
 
	g¨9485_1_1_∂l_⁄_cdr_⁄_˛kªq_dißbÀ_L1
[][2] = {

	@ar953x_initvals.h

18 #i‚de‡
INITVALS_953X_H


19 
	#INITVALS_953X_H


	)

21 
	#qˇ953x_1p0_mac_po°ambÀ
 
¨9300_2p2_mac_po°ambÀ


	)

23 
	#qˇ953x_1p0_soc_po°ambÀ
 
¨9300_2p2_soc_po°ambÀ


	)

25 
	#qˇ953x_1p0_comm⁄_rx_gaö_èbÀ
 
¨9300Comm⁄_rx_gaö_èbÀ_2p2


	)

27 
	#qˇ953x_1p0_comm⁄_wo_x a_rx_gaö_èbÀ
 
¨9300Comm⁄_wo_x a_rx_gaö_èbÀ_2p2


	)

29 
	#qˇ953x_1p0_modes_Á°_˛ock
 
¨9300Modes_Á°_˛ock_2p2


	)

31 c⁄° 
u32
 
	gqˇ953x_1p0_mac_c‹e
[][2] = {

189 c⁄° 
u32
 
	gqˇ953x_1p0_ba£b™d_c‹e
[][2] = {

337 c⁄° 
u32
 
	gqˇ953x_1p0_ba£b™d_po°ambÀ
[][5] = {

388 c⁄° 
u32
 
	gqˇ953x_1p0_ødio_c‹e
[][2] = {

479 c⁄° 
u32
 
	gqˇ953x_1p0_ødio_po°ambÀ
[][5] = {

493 c⁄° 
u32
 
	gqˇ953x_1p0_soc_¥ómbÀ
[][2] = {

510 c⁄° 
u32
 
	gqˇ953x_1p0_comm⁄_rx_gaö_bounds
[][5] = {

516 c⁄° 
u32
 
	gqˇ953x_1p0_comm⁄_wo_x a_rx_gaö_bounds
[][5] = {

522 c⁄° 
u32
 
	gqˇ953x_1p0_modes_x∑_tx_gaö_èbÀ
[][2] = {

588 c⁄° 
u32
 
	gqˇ953x_1p0_modes_no_x∑_tx_gaö_èbÀ
[][2] = {

653 c⁄° 
u32
 
	gqˇ953x_1p1_modes_no_x∑_tx_gaö_èbÀ
[][2] = {

	@ar955x_1p0_initvals.h

18 #i‚de‡
INITVALS_955X_1P0_H


19 
	#INITVALS_955X_1P0_H


	)

23 
	#¨955x_1p0_soc_po°ambÀ
 
¨9300_2p2_soc_po°ambÀ


	)

25 
	#¨955x_1p0_comm⁄_rx_gaö_èbÀ
 
¨9300Comm⁄_rx_gaö_èbÀ_2p2


	)

27 
	#¨955x_1p0_comm⁄_wo_x a_rx_gaö_èbÀ
 
¨9300Comm⁄_wo_x a_rx_gaö_èbÀ_2p2


	)

29 
	#¨955x_1p0_ba£b™d_c‹e_txfú_c€ff_j≠™_2484
 
¨9300_2p2_ba£b™d_c‹e_txfú_c€ff_j≠™_2484


	)

31 c⁄° 
u32
 
	g¨955x_1p0_ødio_po°ambÀ
[][5] = {

48 c⁄° 
u32
 
	g¨955x_1p0_ba£b™d_po°ambÀ
[][5] = {

105 c⁄° 
u32
 
	g¨955x_1p0_ødio_c‹e
[][2] = {

247 c⁄° 
u32
 
	g¨955x_1p0_modes_x∑_tx_gaö_èbÀ
[][9] = {

319 c⁄° 
u32
 
	g¨955x_1p0_mac_c‹e
[][2] = {

477 c⁄° 
u32
 
	g¨955x_1p0_ba£b™d_c‹e
[][2] = {

635 c⁄° 
u32
 
	g¨955x_1p0_soc_¥ómbÀ
[][2] = {

652 c⁄° 
u32
 
	g¨955x_1p0_comm⁄_wo_x a_rx_gaö_bounds
[][5] = {

658 c⁄° 
u32
 
	g¨955x_1p0_mac_po°ambÀ
[][5] = {

670 c⁄° 
u32
 
	g¨955x_1p0_comm⁄_rx_gaö_bounds
[][5] = {

676 c⁄° 
u32
 
	g¨955x_1p0_modes_no_x∑_tx_gaö_èbÀ
[][9] = {

747 c⁄° 
u32
 
	g¨955x_1p0_modes_Á°_˛ock
[][3] = {

	@ar9565_1p0_initvals.h

18 #i‚de‡
INITVALS_9565_1P0_H


19 
	#INITVALS_9565_1P0_H


	)

23 
	#¨9565_1p0_mac_po°ambÀ
 
¨9331_1p1_mac_po°ambÀ


	)

25 
	#¨9565_1p0_Modes_lowe°_ob_db_tx_gaö_èbÀ
 
¨9565_1p0_modes_low_ob_db_tx_gaö_èbÀ


	)

27 
	#¨9565_1p0_ba£b™d_c‹e_txfú_c€ff_j≠™_2484
 
¨9300_2p2_ba£b™d_c‹e_txfú_c€ff_j≠™_2484


	)

29 c⁄° 
u32
 
	g¨9565_1p0_mac_c‹e
[][2] = {

191 c⁄° 
u32
 
	g¨9565_1p0_ba£b™d_c‹e
[][2] = {

332 c⁄° 
u32
 
	g¨9565_1p0_ba£b™d_po°ambÀ
[][5] = {

378 c⁄° 
u32
 
	g¨9565_1p0_ødio_c‹e
[][2] = {

422 c⁄° 
u32
 
	g¨9565_1p0_ødio_po°ambÀ
[][5] = {

431 c⁄° 
u32
 
	g¨9565_1p0_soc_¥ómbÀ
[][2] = {

440 c⁄° 
u32
 
	g¨9565_1p0_soc_po°ambÀ
[][5] = {

445 c⁄° 
u32
 
	g¨9565_1p0_Comm⁄_rx_gaö_èbÀ
[][2] = {

708 c⁄° 
u32
 
	g¨9565_1p0_pcõphy_˛kªq_dißbÀ_L1
[][2] = {

715 c⁄° 
u32
 
	g¨9565_1p0_modes_Á°_˛ock
[][3] = {

728 c⁄° 
u32
 
	g¨9565_1p0_comm⁄_wo_x a_rx_gaö_èbÀ
[][2] = {

988 c⁄° 
u32
 
	g¨9565_1p0_modes_low_ob_db_tx_gaö_èbÀ
[][5] = {

1048 c⁄° 
u32
 
	g¨9565_1p0_modes_high_ob_db_tx_gaö_èbÀ
[][5] = {

1108 c⁄° 
u32
 
	g¨9565_1p0_modes_high_powî_tx_gaö_èbÀ
[][5] = {

	@ar9565_1p1_initvals.h

18 #i‚de‡
INITVALS_9565_1P1_H


19 
	#INITVALS_9565_1P1_H


	)

23 
	#¨9565_1p1_mac_c‹e
 
¨9565_1p0_mac_c‹e


	)

25 
	#¨9565_1p1_mac_po°ambÀ
 
¨9565_1p0_mac_po°ambÀ


	)

27 
	#¨9565_1p1_ba£b™d_c‹e
 
¨9565_1p0_ba£b™d_c‹e


	)

29 
	#¨9565_1p1_ba£b™d_po°ambÀ
 
¨9565_1p0_ba£b™d_po°ambÀ


	)

31 
	#¨9565_1p1_ødio_c‹e
 
¨9565_1p0_ødio_c‹e


	)

33 
	#¨9565_1p1_soc_¥ómbÀ
 
¨9565_1p0_soc_¥ómbÀ


	)

35 
	#¨9565_1p1_soc_po°ambÀ
 
¨9565_1p0_soc_po°ambÀ


	)

37 
	#¨9565_1p1_Comm⁄_rx_gaö_èbÀ
 
¨9565_1p0_Comm⁄_rx_gaö_èbÀ


	)

39 
	#¨9565_1p1_Modes_lowe°_ob_db_tx_gaö_èbÀ
 
¨9565_1p0_Modes_lowe°_ob_db_tx_gaö_èbÀ


	)

41 
	#¨9565_1p1_pcõphy_˛kªq_dißbÀ_L1
 
¨9565_1p0_pcõphy_˛kªq_dißbÀ_L1


	)

43 
	#¨9565_1p1_modes_Á°_˛ock
 
¨9565_1p0_modes_Á°_˛ock


	)

45 
	#¨9565_1p1_comm⁄_wo_x a_rx_gaö_èbÀ
 
¨9565_1p0_comm⁄_wo_x a_rx_gaö_èbÀ


	)

47 
	#¨9565_1p1_modes_low_ob_db_tx_gaö_èbÀ
 
¨9565_1p0_modes_low_ob_db_tx_gaö_èbÀ


	)

49 
	#¨9565_1p1_modes_high_ob_db_tx_gaö_èbÀ
 
¨9565_1p0_modes_high_ob_db_tx_gaö_èbÀ


	)

51 
	#¨9565_1p1_modes_high_powî_tx_gaö_èbÀ
 
¨9565_1p0_modes_high_powî_tx_gaö_èbÀ


	)

53 
	#¨9565_1p1_ba£b™d_c‹e_txfú_c€ff_j≠™_2484
 
¨9565_1p0_ba£b™d_c‹e_txfú_c€ff_j≠™_2484


	)

55 c⁄° 
u32
 
	g¨9565_1p1_ødio_po°ambÀ
[][5] = {

	@ar9580_1p0_initvals.h

18 #i‚de‡
INITVALS_9580_1P0_H


19 
	#INITVALS_9580_1P0_H


	)

23 
	#¨9580_1p0_soc_¥ómbÀ
 
¨9300_2p2_soc_¥ómbÀ


	)

25 
	#¨9580_1p0_soc_po°ambÀ
 
¨9300_2p2_soc_po°ambÀ


	)

27 
	#¨9580_1p0_ødio_c‹e
 
¨9300_2p2_ødio_c‹e


	)

29 
	#¨9580_1p0_mac_po°ambÀ
 
¨9300_2p2_mac_po°ambÀ


	)

31 
	#¨9580_1p0_wo_x a_rx_gaö_èbÀ
 
¨9300Comm⁄_wo_x a_rx_gaö_èbÀ_2p2


	)

33 
	#¨9580_1p0_ty≥5_tx_gaö_èbÀ
 
¨9300Modes_ty≥5_tx_gaö_èbÀ_2p2


	)

35 
	#¨9580_1p0_high_ob_db_tx_gaö_èbÀ
 
¨9300Modes_high_ob_db_tx_gaö_èbÀ_2p2


	)

37 
	#¨9580_1p0_modes_Á°_˛ock
 
¨9300Modes_Á°_˛ock_2p2


	)

39 
	#¨9580_1p0_ba£b™d_c‹e_txfú_c€ff_j≠™_2484
 
¨9300_2p2_ba£b™d_c‹e_txfú_c€ff_j≠™_2484


	)

41 c⁄° 
u32
 
	g¨9580_1p0_ødio_po°ambÀ
[][5] = {

54 c⁄° 
u32
 
	g¨9580_1p0_ba£b™d_c‹e
[][2] = {

215 c⁄° 
u32
 
	g¨9580_1p0_low_ob_db_tx_gaö_èbÀ
[][5] = {

321 c⁄° 
u32
 
	g¨9580_1p0_high_powî_tx_gaö_èbÀ
[][5] = {

428 c⁄° 
u32
 
	g¨9580_1p0_lowe°_ob_db_tx_gaö_èbÀ
[][5] = {

534 c⁄° 
u32
 
	g¨9580_1p0_mac_c‹e
[][2] = {

691 c⁄° 
u32
 
	g¨9580_1p0_mixed_ob_db_tx_gaö_èbÀ
[][5] = {

797 c⁄° 
u32
 
	g¨9580_1p0_ty≥6_tx_gaö_èbÀ
[][5] = {

871 c⁄° 
u32
 
	g¨9580_1p0_rx_gaö_èbÀ
[][2] = {

1131 c⁄° 
u32
 
	g¨9580_1p0_ba£b™d_po°ambÀ
[][5] = {

1189 c⁄° 
u32
 
	g¨9580_1p0_pcõ_phy_˛kªq_íabÀ_L1
[][2] = {

1196 c⁄° 
u32
 
	g¨9580_1p0_pcõ_phy_˛kªq_dißbÀ_L1
[][2] = {

1203 c⁄° 
u32
 
	g¨9580_1p0_pcõ_phy_∂l_⁄_˛kªq
[][2] = {

1210 c⁄° 
u32
 
	g¨9580_1p0_ba£b™d_po°ambÀ_dfs_ch™√l
[][3] = {

	@ath9k.h

17 #i‚de‡
ATH9K_H


18 
	#ATH9K_H


	)

20 
	~<löux/ëhîdevi˚.h
>

21 
	~<löux/devi˚.h
>

22 
	~<löux/öãºu±.h
>

23 
	~<löux/Àds.h
>

24 
	~<löux/com∂ëi⁄.h
>

26 
	~"comm⁄.h
"

27 
	~"debug.h
"

28 
	~"mci.h
"

29 
	~"dfs.h
"

30 
	~"•e˘øl.h
"

32 
	g©h_node
;

34 
õì80211_›s
 
©h9k_›s
;

35 
©h9k_mod∑øm_nohw¸y±
;

36 
Àd_blök
;

37 
boﬁ
 
is_©h9k_u∆ﬂded
;

39 
	s©h_c⁄fig
 {

40 
u16
 
	mtxpowlimô
;

47 
	#ATH_TXSTATUS_RING_SIZE
 512

	)

50 
	#ôo64
(
x
) ((x) == 1) ? \

51 ((()(
x
)) & (0xff)) : \

52 ((
x
) == 2) ? \

53 ((()(
x
)) & 0xffff) : \

54 (((
x
) == 4) ? \

55 ((()(
x
)) & 0xffffffff) : \

56 ()(
x
))

	)

58 
	#ATH_TXBUF_RESET
(
_bf
) do { \

59 (
_bf
)->
bf_œ°bf
 = 
NULL
; \

60 (
_bf
)->
bf_√xt
 = 
NULL
; \

61 
	`mem£t
(&((
_bf
)->
bf_°©e
), 0, \

62 (
©h_buf_°©e
)); \

63 } 0)

	)

65 
	#DS2PHYS
(
_dd
, 
_ds
) \

66 ((
_dd
)->
dd_desc_∑ddr
 + ((
ˇddr_t
)(
_ds
Ë- (ˇddr_t)(_dd)->
dd_desc
))

	)

67 
	#ATH_DESC_4KB_BOUND_CHECK
(
_daddr
Ë((((_daddrË& 0xFFFË> 0xF7FË? 1 : 0)

	)

68 
	#ATH_DESC_4KB_BOUND_NUM_SKIPPED
(
_Àn
Ë((_ÀnË/ 4096)

	)

70 
	s©h_descdma
 {

71 *
	mdd_desc
;

72 
dma_addr_t
 
	mdd_desc_∑ddr
;

73 
u32
 
	mdd_desc_Àn
;

76 
©h_descdma_£tup
(
©h_so·c
 *
sc
, 
©h_descdma
 *
dd
,

77 
li°_hód
 *
hód
, c⁄° *
«me
,

78 
nbuf
, 
ndesc
, 
boﬁ
 
is_tx
);

84 
	#ATH_TXQ_SETUP
(
sc
, 
i
Ë((sc)->
tx
.
txq£tup
 & (1<<i))

	)

87 
	#INCR
(
_l
, 
_sz
) do { \

88 (
_l
)++; \

89 (
_l
Ë&((
_sz
) - 1); \

90 } 0)

	)

92 
	#ATH_RXBUF
 256

	)

93 
	#ATH_TXBUF
 512

	)

94 
	#ATH_TXBUF_RESERVE
 5

	)

95 
	#ATH_MAX_QDEPTH
 (
ATH_TXBUF
 / 4 - 
ATH_TXBUF_RESERVE
)

	)

96 
	#ATH_TXMAXTRY
 13

	)

97 
	#ATH_MAX_SW_RETRIES
 30

	)

99 
	#TID_TO_WME_AC
(
_tid
) \

100 ((((
_tid
Ë=0Ë|| ((_tidË=3)Ë? 
IEEE80211_AC_BE
 : \

101 (((
_tid
Ë=1Ë|| ((_tidË=2)Ë? 
IEEE80211_AC_BK
 : \

102 (((
_tid
Ë=4Ë|| ((_tidË=5)Ë? 
IEEE80211_AC_VI
 : \

103 
IEEE80211_AC_VO
)

	)

105 
	#ATH_AGGR_DELIM_SZ
 4

	)

106 
	#ATH_AGGR_MINPLEN
 256

	)

108 
	#ATH_AGGR_ENCRYPTDELIM
 10

	)

110 
	#ATH_AGGR_MIN_QDEPTH
 2

	)

112 
	#ATH_NON_AGGR_MIN_QDEPTH
 8

	)

113 
	#ATH_TX_COMPLETE_POLL_INT
 1000

	)

114 
	#ATH_TXFIFO_DEPTH
 8

	)

115 
	#ATH_TX_ERROR
 0x01

	)

118 
	#ATH_P2P_PS_STOP_TIME
 1000

	)

120 
	#IEEE80211_SEQ_SEQ_SHIFT
 4

	)

121 
	#IEEE80211_SEQ_MAX
 4096

	)

122 
	#IEEE80211_WEP_IVLEN
 3

	)

123 
	#IEEE80211_WEP_KIDLEN
 1

	)

124 
	#IEEE80211_WEP_CRCLEN
 4

	)

125 
	#IEEE80211_MAX_MPDU_LEN
 (3840 + 
FCS_LEN
 + \

126 (
IEEE80211_WEP_IVLEN
 + \

127 
IEEE80211_WEP_KIDLEN
 + \

128 
IEEE80211_WEP_CRCLEN
))

	)

132 
	#ATH_BA_ISSET
(
_bm
, 
_n
Ë(((_nË< (
WME_BA_BMP_SIZE
)) && \

133 ((
_bm
)[(
_n
Ë>> 5] & (1 << ((_nË& 31))))

	)

136 
	#ATH_BA_INDEX
(
_°
, 
_£q
Ë(((_£qË- (_°)Ë& (
IEEE80211_SEQ_MAX
 - 1))

	)

139 
	#ATH_BA_INDEX2SEQ
(
_£q
, 
_off£t
Ë(((_£qË+ (_off£t)Ë& (
IEEE80211_SEQ_MAX
 - 1))

	)

142 
	#ATH_AGGR_GET_NDELIM
(
_Àn
) \

143 (((
_Àn
Ë>
ATH_AGGR_MINPLEN
) ? 0 : \

144 
	`DIV_ROUND_UP
(
ATH_AGGR_MINPLEN
 - (
_Àn
), 
ATH_AGGR_DELIM_SZ
))

	)

146 
	#BAW_WITHIN
(
_°¨t
, 
_bawsz
, 
_£qno
) \

147 ((((
_£qno
Ë- (
_°¨t
)Ë& 4095Ë< (
_bawsz
))

	)

149 
	#ATH_AN_2_TID
(
_™
, 
_tidno
Ë(&(_™)->
tid
[(_tidno)])

	)

151 
	#IS_HT_RATE
(
øã
Ë‘©ê& 0x80)

	)

152 
	#IS_CCK_RATE
(
øã
Ë(‘©ê>0x18Ë&& (øã <0x1e))

	)

153 
	#IS_OFDM_RATE
(
øã
Ë(‘©ê>0x8Ë&& (øã <0xf))

	)

156 
	mWLAN_RC_PHY_OFDM
,

157 
	mWLAN_RC_PHY_CCK
,

160 
	s©h_txq
 {

161 
	mmac80211_qnum
;

162 
u32
 
	maxq_qnum
;

163 *
	maxq_lök
;

164 
li°_hód
 
	maxq_q
;

165 
•ölock_t
 
	maxq_lock
;

166 
u32
 
	maxq_dïth
;

167 
u32
 
	maxq_ampdu_dïth
;

168 
boﬁ
 
	m°›≥d
;

169 
boﬁ
 
	maxq_tx_ö¥ogªss
;

170 
li°_hód
 
	maxq_acq
;

171 
li°_hód
 
	mtxq_fifo
[
ATH_TXFIFO_DEPTH
];

172 
u8
 
	mtxq_hódidx
;

173 
u8
 
	mtxq_èûidx
;

174 
	m≥ndög_‰ames
;

175 
sk_buff_hód
 
	mcom∂ëe_q
;

178 
	s©h_©x_ac
 {

179 
©h_txq
 *
	mtxq
;

180 
li°_hód
 
	mli°
;

181 
li°_hód
 
	mtid_q
;

182 
boﬁ
 
	m˛ór_ps_fûãr
;

183 
boﬁ
 
	msched
;

186 
	s©h_‰ame_öfo
 {

187 
©h_buf
 *
	mbf
;

188 
u16
 
	m‰amñí
;

189 
s8
 
	mtxq
;

190 
©h9k_key_ty≥
 
	mkeyty≥
;

191 
u8
 
	mkeyix
;

192 
u8
 
	mπs˘s_øã
;

193 
u8
 
	mªåõs
 : 7;

194 
u8
 
	mbaw_åacked
 : 1;

197 
	s©h_rxbuf
 {

198 
li°_hód
 
	mli°
;

199 
sk_buff
 *
	mbf_mpdu
;

200 *
	mbf_desc
;

201 
dma_addr_t
 
	mbf_daddr
;

202 
dma_addr_t
 
	mbf_buf_addr
;

212 
	ebuf„r_ty≥
 {

213 
	mBUF_AMPDU
 = 
BIT
(0),

214 
	mBUF_AGGR
 = 
BIT
(1),

217 
	#bf_ißmpdu
(
bf
Ë(bf->
bf_°©e
.
bf_ty≥
 & 
BUF_AMPDU
)

	)

218 
	#bf_ißggr
(
bf
Ë(bf->
bf_°©e
.
bf_ty≥
 & 
BUF_AGGR
)

	)

220 
	s©h_buf_°©e
 {

221 
u8
 
	mbf_ty≥
;

222 
u8
 
	mbfs_∑¥d
;

223 
u8
 
	mndñim
;

224 
boﬁ
 
	m°Æe
;

225 
u16
 
	m£qno
;

226 
	mbfs_∑¥d_time°amp
;

229 
	s©h_buf
 {

230 
li°_hód
 
	mli°
;

231 
©h_buf
 *
	mbf_œ°bf
;

233 
©h_buf
 *
	mbf_√xt
;

234 
sk_buff
 *
	mbf_mpdu
;

235 *
	mbf_desc
;

236 
dma_addr_t
 
	mbf_daddr
;

237 
dma_addr_t
 
	mbf_buf_addr
;

238 
õì80211_tx_øã
 
	møãs
[4];

239 
©h_buf_°©e
 
	mbf_°©e
;

242 
	s©h_©x_tid
 {

243 
li°_hód
 
	mli°
;

244 
sk_buff_hód
 
	mbuf_q
;

245 
sk_buff_hód
 
	mªåy_q
;

246 
©h_node
 *
	m™
;

247 
©h_©x_ac
 *
	mac
;

248 
	mtx_buf
[
BITS_TO_LONGS
(
ATH_TID_MAX_BUFS
)];

249 
u16
 
	m£q_°¨t
;

250 
u16
 
	m£q_√xt
;

251 
u16
 
	mbaw_size
;

252 
u8
 
	mtidno
;

253 
	mbaw_hód
;

254 
	mbaw_èû
;

256 
s8
 
	mb¨_ödex
;

257 
boﬁ
 
	msched
;

258 
boﬁ
 
	ma˘ive
;

261 
	s©h_node
 {

262 
©h_so·c
 *
	msc
;

263 
õì80211_°a
 *
	m°a
;

264 
õì80211_vif
 *
	mvif
;

265 
©h_©x_tid
 
	mtid
[
IEEE80211_NUM_TIDS
];

266 
©h_©x_ac
 
	mac
[
IEEE80211_NUM_ACS
];

268 
u16
 
	mmaxampdu
;

269 
u8
 
	mmpdudísôy
;

270 
s8
 
	mps_key
;

272 
boﬁ
 
	m¶ìpög
;

273 
boﬁ
 
	mno_ps_fûãr
;

275 #ifde‡
CPTCFG_ATH9K_STATION_STATISTICS


276 
©h_rx_øã_°©s
 
	mrx_øã_°©s
;

278 
u8
 
	mkey_idx
[4];

281 
	s©h_tx_c⁄åﬁ
 {

282 
©h_txq
 *
	mtxq
;

283 
©h_node
 *
	m™
;

284 
u8
 
	m∑¥d
;

285 
õì80211_°a
 *
	m°a
;

294 
	s©h_tx
 {

295 
u16
 
	m£q_no
;

296 
u32
 
	mtxq£tup
;

297 
•ölock_t
 
	mtxbuÊock
;

298 
li°_hód
 
	mtxbuf
;

299 
©h_txq
 
	mtxq
[
ATH9K_NUM_TX_QUEUES
];

300 
©h_descdma
 
	mtxdma
;

301 
©h_txq
 *
	mtxq_m≠
[
IEEE80211_NUM_ACS
];

302 
©h_txq
 *
	mu≠sdq
;

303 
u32
 
	mtxq_max_≥ndög
[
IEEE80211_NUM_ACS
];

304 
u16
 
	mmax_aggr_‰amñí
[
IEEE80211_NUM_ACS
][4][32];

307 
	s©h_rx_edma
 {

308 
sk_buff_hód
 
	mrx_fifo
;

309 
u32
 
	mrx_fifo_hwsize
;

312 
	s©h_rx
 {

313 
u8
 
	mdeÁ¡
;

314 
u8
 
	mrxŸhî™t
;

315 
boﬁ
 
	mdisˇrd_√xt
;

316 
u32
 *
	mrxlök
;

317 
u32
 
	mnum_pkts
;

318 
	mrxfûãr
;

319 
li°_hód
 
	mrxbuf
;

320 
©h_descdma
 
	mrxdma
;

321 
©h_rx_edma
 
	mrx_edma
[
ATH9K_RX_QUEUE_MAX
];

323 
©h_rxbuf
 *
	mbuf_hﬁd
;

324 
sk_buff
 *
	m‰ag
;

326 
u32
 
	mampdu_ªf
;

329 
©h_°¨åecv
(
©h_so·c
 *
sc
);

330 
boﬁ
 
©h_°›ªcv
(
©h_so·c
 *
sc
);

331 
u32
 
©h_ˇl¸xfûãr
(
©h_so·c
 *
sc
);

332 
©h_rx_öô
(
©h_so·c
 *
sc
, 
nbufs
);

333 
©h_rx_˛ónup
(
©h_so·c
 *
sc
);

334 
©h_rx_èskÀt
(
©h_so·c
 *
sc
, 
Êush
, 
boﬁ
 
hp
);

335 
©h_txq
 *
©h_txq_£tup
(
©h_so·c
 *
sc
, 
qty≥
, 
subty≥
);

336 
©h_txq_lock
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
);

337 
©h_txq_u∆ock
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
);

338 
©h_txq_u∆ock_com∂ëe
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
);

339 
©h_tx_˛ónupq
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
);

340 
boﬁ
 
©h_døö_Æl_txq
(
©h_so·c
 *
sc
);

341 
©h_døötxq
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
);

342 
©h_tx_node_öô
(
©h_so·c
 *
sc
, 
©h_node
 *
™
);

343 
©h_tx_node_˛ónup
(
©h_so·c
 *
sc
, 
©h_node
 *
™
);

344 
©h_txq_scheduÀ
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
);

345 
©h_tx_öô
(
©h_so·c
 *
sc
, 
nbufs
);

346 
©h_txq_upd©e
(
©h_so·c
 *
sc
, 
qnum
,

347 
©h9k_tx_queue_öfo
 *
q
);

348 
©h_upd©e_max_aggr_‰amñí
(
©h_so·c
 *
sc
, 
queue
, 
tx›
);

349 
©h_tx_°¨t
(
õì80211_hw
 *
hw
, 
sk_buff
 *
skb
,

350 
©h_tx_c⁄åﬁ
 *
tx˘l
);

351 
©h_tx_ˇbq
(
õì80211_hw
 *
hw
, 
õì80211_vif
 *
vif
,

352 
sk_buff
 *
skb
);

353 
©h_tx_èskÀt
(
©h_so·c
 *
sc
);

354 
©h_tx_edma_èskÀt
(
©h_so·c
 *
sc
);

355 
©h_tx_aggr_°¨t
(
©h_so·c
 *
sc
, 
õì80211_°a
 *
°a
,

356 
u16
 
tid
, u16 *
s¢
);

357 
©h_tx_aggr_°›
(
©h_so·c
 *
sc
, 
õì80211_°a
 *
°a
, 
u16
 
tid
);

358 
©h_tx_aggr_ªsume
(
©h_so·c
 *
sc
, 
õì80211_°a
 *
°a
, 
u16
 
tid
);

360 
©h_tx_aggr_wakeup
(
©h_so·c
 *
sc
, 
©h_node
 *
™
);

361 
©h_tx_aggr_¶ìp
(
õì80211_°a
 *
°a
, 
©h_so·c
 *
sc
,

362 
©h_node
 *
™
);

363 
©h9k_ªÀa£_buf„ªd_‰ames
(
õì80211_hw
 *
hw
,

364 
õì80211_°a
 *
°a
,

365 
u16
 
tids
, 
n‰ames
,

366 
õì80211_‰ame_ªÀa£_ty≥
 
ªas⁄
,

367 
boﬁ
 
m‹e_d©a
);

373 
	s©h_vif
 {

374 
õì80211_vif
 *
	mvif
;

375 
©h_node
 
	mmˇ°_node
;

376 
	mav_b¶Ÿ
;

377 
boﬁ
 
	m¥im¨y_°a_vif
;

378 
__À64
 
	mtsf_adju°
;

379 
©h_buf
 *
	mav_bcbuf
;

382 
õì80211_nﬂ_d©a
 
	mnﬂ
;

385 
	s©h9k_vif_ôî_d©a
 {

386 
u8
 
	mhw_maˇddr
[
ETH_ALEN
];

387 
u8
 
	mmask
[
ETH_ALEN
];

388 
boﬁ
 
	mhas_hw_maˇddr
;

390 
	m«ps
;

391 
	mnmeshes
;

392 
	mn°©i⁄s
;

393 
	mnwds
;

394 
	m«dhocs
;

397 
©h9k_ˇlcuœã_ôî_d©a
(
õì80211_hw
 *
hw
,

398 
õì80211_vif
 *
vif
,

399 
©h9k_vif_ôî_d©a
 *
ôî_d©a
);

410 
	#BSTUCK_THRESH
 9

	)

411 
	#ATH_BCBUF
 8

	)

412 
	#ATH_DEFAULT_BINTVAL
 100

	)

413 
	#ATH_DEFAULT_BMISS_LIMIT
 10

	)

415 
	#TSF_TO_TU
(
_h
,
_l
) \

416 ((((
u32
)(
_h
)Ë<< 22Ë| (((u32)(
_l
)Ë>> 10))

	)

418 
	s©h_bóc⁄
 {

420 
	mOK
,

421 
	mUPDATE
,

422 
	mCOMMIT


423 } 
	mupd©e¶Ÿ
;

425 
u32
 
	mbóc⁄q
;

426 
u32
 
	mbmiss˙t
;

427 
õì80211_vif
 *
	mb¶Ÿ
[
ATH_BCBUF
];

428 
	m¶Ÿtime
;

429 
	m¶Ÿupd©e
;

430 
©h_descdma
 
	mbdma
;

431 
©h_txq
 *
	mˇbq
;

432 
li°_hód
 
	mbbuf
;

434 
boﬁ
 
	mtx_¥o˚s£d
;

435 
boﬁ
 
	mtx_œ°
;

438 
©h9k_bóc⁄_èskÀt
(
d©a
);

439 
©h9k_bóc⁄_c⁄fig
(
©h_so·c
 *
sc
, 
õì80211_vif
 *
vif
,

440 
u32
 
ch™ged
);

441 
©h9k_bóc⁄_assign_¶Ÿ
(
©h_so·c
 *
sc
, 
õì80211_vif
 *
vif
);

442 
©h9k_bóc⁄_ªmove_¶Ÿ
(
©h_so·c
 *
sc
, 
õì80211_vif
 *
vif
);

443 
©h9k_£t_bóc⁄
(
©h_so·c
 *
sc
);

444 
boﬁ
 
©h9k_cß_is_föished
(
©h_so·c
 *
sc
, 
õì80211_vif
 *
vif
);

445 
©h9k_cß_upd©e
(
©h_so·c
 *
sc
);

451 
	#ATH_STA_SHORT_CALINTERVAL
 1000

	)

452 
	#ATH_AP_SHORT_CALINTERVAL
 100

	)

453 
	#ATH_ANI_POLLINTERVAL_OLD
 100

	)

454 
	#ATH_ANI_POLLINTERVAL_NEW
 1000

	)

455 
	#ATH_LONG_CALINTERVAL_INT
 1000

	)

456 
	#ATH_LONG_CALINTERVAL
 30000

	)

457 
	#ATH_RESTART_CALINTERVAL
 1200000

	)

458 
	#ATH_ANI_MAX_SKIP_COUNT
 10

	)

459 
	#ATH_PAPRD_TIMEOUT
 100

	)

460 
	#ATH_PLL_WORK_INTERVAL
 100

	)

462 
©h_tx_com∂ëe_pﬁl_w‹k
(
w‹k_°ru˘
 *
w‹k
);

463 
©h_ª£t_w‹k
(
w‹k_°ru˘
 *
w‹k
);

464 
boﬁ
 
©h_hw_check
(
©h_so·c
 *
sc
);

465 
©h_hw_∂l_w‹k
(
w‹k_°ru˘
 *
w‹k
);

466 
©h_∑¥d_ˇlibøã
(
w‹k_°ru˘
 *
w‹k
);

467 
©h_™i_ˇlibøã
(
d©a
);

468 
©h_°¨t_™i
(
©h_so·c
 *
sc
);

469 
©h_°›_™i
(
©h_so·c
 *
sc
);

470 
©h_check_™i
(
©h_so·c
 *
sc
);

471 
©h_upd©e_survey_°©s
(
©h_so·c
 *
sc
);

472 
©h_upd©e_survey_nf
(
©h_so·c
 *
sc
, 
ch™√l
);

473 
©h9k_queue_ª£t
(
©h_so·c
 *
sc
, 
©h_ª£t_ty≥
 
ty≥
);

474 
©h_ps_fuŒ_¶ìp
(
d©a
);

475 
©h9k_p2p_ps_timî
(*
¥iv
);

476 
©h9k_upd©e_p2p_ps
(
©h_so·c
 *
sc
, 
õì80211_vif
 *
vif
);

482 
	#ATH_DUMP_BTCOEX
(
_s
, 
_vÆ
) \

484 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, \

485 "%20†: %10d\n", 
_s
, (
_vÆ
)); \

486 } 0)

	)

488 
	ebt_›_Êags
 {

489 
	mBT_OP_PRIORITY_DETECTED
,

490 
	mBT_OP_SCAN
,

493 
	s©h_btc€x
 {

494 
•ölock_t
 
	mbtc€x_lock
;

495 
timî_li°
 
	m≥riod_timî
;

496 
timî_li°
 
	mno_°omp_timî
;

497 
u32
 
	mbt_¥i‹ôy_˙t
;

498 
	mbt_¥i‹ôy_time
;

499 
	m›_Êags
;

500 
	mbt_°omp_ty≥
;

501 
u32
 
	mbtc€x_no_°omp
;

502 
u32
 
	mbtc€x_≥riod
;

503 
u32
 
	mbtsˇn_no_°omp
;

504 
u32
 
	mduty_cy˛e
;

505 
u32
 
	mbt_waô_time
;

506 
	mrssi_cou¡
;

507 
©h_mci_¥ofûe
 
	mmci
;

508 
u8
 
	m°omp_audio
;

511 #ifde‡
CPTCFG_ATH9K_BTCOEX_SUPPORT


512 
©h9k_öô_btc€x
(
©h_so·c
 *
sc
);

513 
©h9k_deöô_btc€x
(
©h_so·c
 *
sc
);

514 
©h9k_°¨t_btc€x
(
©h_so·c
 *
sc
);

515 
©h9k_°›_btc€x
(
©h_so·c
 *
sc
);

516 
©h9k_btc€x_timî_ªsume
(
©h_so·c
 *
sc
);

517 
©h9k_btc€x_timî_∑u£
(
©h_so·c
 *
sc
);

518 
©h9k_btc€x_h™dÀ_öãºu±
(
©h_so·c
 *
sc
, 
u32
 
°©us
);

519 
u16
 
©h9k_btc€x_aggr_limô
(
©h_so·c
 *
sc
, 
u32
 
max_4ms_‰amñí
);

520 
©h9k_btc€x_°›_gí_timî
(
©h_so·c
 *
sc
);

521 
©h9k_dump_btc€x
(
©h_so·c
 *
sc
, 
u8
 *
buf
, 
u32
 
size
);

523 
ölöe
 
	$©h9k_öô_btc€x
(
©h_so·c
 *
sc
)

526 
	}
}

527 
ölöe
 
	$©h9k_deöô_btc€x
(
©h_so·c
 *
sc
)

529 
	}
}

530 
ölöe
 
	$©h9k_°¨t_btc€x
(
©h_so·c
 *
sc
)

532 
	}
}

533 
ölöe
 
	$©h9k_°›_btc€x
(
©h_so·c
 *
sc
)

535 
	}
}

536 
ölöe
 
	$©h9k_btc€x_h™dÀ_öãºu±
(
©h_so·c
 *
sc
,

537 
u32
 
°©us
)

539 
	}
}

540 
ölöe
 
u16
 
	$©h9k_btc€x_aggr_limô
(
©h_so·c
 *
sc
,

541 
u32
 
max_4ms_‰amñí
)

544 
	}
}

545 
ölöe
 
	$©h9k_btc€x_°›_gí_timî
(
©h_so·c
 *
sc
)

547 
	}
}

548 
ölöe
 
	$©h9k_dump_btc€x
(
©h_so·c
 *
sc
, 
u8
 *
buf
, 
u32
 
size
)

551 
	}
}

558 
	#ATH_LED_PIN_DEF
 1

	)

559 
	#ATH_LED_PIN_9287
 8

	)

560 
	#ATH_LED_PIN_9300
 10

	)

561 
	#ATH_LED_PIN_9485
 6

	)

562 
	#ATH_LED_PIN_9462
 4

	)

564 #ifde‡
CPTCFG_MAC80211_LEDS


565 
©h_öô_Àds
(
©h_so·c
 *
sc
);

566 
©h_deöô_Àds
(
©h_so·c
 *
sc
);

567 
©h_fûl_Àd_pö
(
©h_so·c
 *
sc
);

568 
©h_¸óã_gpio_Àd
(
©h_so·c
 *
sc
, 
gpio
, c⁄° *
«me
,

569 c⁄° *
åiggî
, 
boﬁ
 
a˘ive_low
);

572 
ölöe
 
	$©h_öô_Àds
(
©h_so·c
 *
sc
)

574 
	}
}

576 
ölöe
 
	$©h_deöô_Àds
(
©h_so·c
 *
sc
)

578 
	}
}

579 
ölöe
 
	$©h_fûl_Àd_pö
(
©h_so·c
 *
sc
)

581 
	}
}

588 
	s©h9k_wow_∑âîn
 {

589 
u8
 
	m∑âîn_byãs
[
MAX_PATTERN_SIZE
];

590 
u8
 
	mmask_byãs
[
MAX_PATTERN_SIZE
];

591 
u32
 
	m∑âîn_Àn
;

594 #ifde‡
CPTCFG_ATH9K_WOW


595 
©h9k_öô_wow
(
õì80211_hw
 *
hw
);

596 
©h9k_su•íd
(
õì80211_hw
 *
hw
,

597 
cfg80211_wowœn
 *
wowœn
);

598 
©h9k_ªsume
(
õì80211_hw
 *
hw
);

599 
©h9k_£t_wakeup
(
õì80211_hw
 *
hw
, 
boﬁ
 
íabÀd
);

601 
ölöe
 
	$©h9k_öô_wow
(
õì80211_hw
 *
hw
)

603 
	}
}

604 
ölöe
 
	$©h9k_su•íd
(
õì80211_hw
 *
hw
,

605 
cfg80211_wowœn
 *
wowœn
)

608 
	}
}

609 
ölöe
 
	$©h9k_ªsume
(
õì80211_hw
 *
hw
)

612 
	}
}

613 
ölöe
 
	$©h9k_£t_wakeup
(
õì80211_hw
 *
hw
, 
boﬁ
 
íabÀd
)

615 
	}
}

622 
	#ATH_ANT_RX_CURRENT_SHIFT
 4

	)

623 
	#ATH_ANT_RX_MAIN_SHIFT
 2

	)

624 
	#ATH_ANT_RX_MASK
 0x3

	)

626 
	#ATH_ANT_DIV_COMB_SHORT_SCAN_INTR
 50

	)

627 
	#ATH_ANT_DIV_COMB_SHORT_SCAN_PKTCOUNT
 0x100

	)

628 
	#ATH_ANT_DIV_COMB_MAX_PKTCOUNT
 0x200

	)

629 
	#ATH_ANT_DIV_COMB_INIT_COUNT
 95

	)

630 
	#ATH_ANT_DIV_COMB_MAX_COUNT
 100

	)

631 
	#ATH_ANT_DIV_COMB_ALT_ANT_RATIO
 30

	)

632 
	#ATH_ANT_DIV_COMB_ALT_ANT_RATIO2
 20

	)

633 
	#ATH_ANT_DIV_COMB_ALT_ANT_RATIO_LOW_RSSI
 50

	)

634 
	#ATH_ANT_DIV_COMB_ALT_ANT_RATIO2_LOW_RSSI
 50

	)

636 
	#ATH_ANT_DIV_COMB_LNA1_DELTA_HI
 -4

	)

637 
	#ATH_ANT_DIV_COMB_LNA1_DELTA_MID
 -2

	)

638 
	#ATH_ANT_DIV_COMB_LNA1_DELTA_LOW
 2

	)

640 
	s©h_™t_comb
 {

641 
u16
 
	mcou¡
;

642 
u16
 
	mtŸÆ_pkt_cou¡
;

643 
boﬁ
 
	msˇn
;

644 
boﬁ
 
	msˇn_nŸ_°¨t
;

645 
	mmaö_tŸÆ_rssi
;

646 
	mÆt_tŸÆ_rssi
;

647 
	mÆt_ªcv_˙t
;

648 
	mmaö_ªcv_˙t
;

649 
	mrssi_ a1
;

650 
	mrssi_ a2
;

651 
	mrssi_add
;

652 
	mrssi_sub
;

653 
	mrssi_fú°
;

654 
	mrssi_£c⁄d
;

655 
	mrssi_thúd
;

656 
	m™t_øtio
;

657 
	m™t_øtio2
;

658 
boﬁ
 
	mÆt_good
;

659 
	mquick_sˇn_˙t
;

660 
©h9k_™t_div_comb_ a_c⁄f
 
	mmaö_c⁄f
;

661 
©h9k_™t_div_comb_ a_c⁄f
 
	mfú°_quick_sˇn_c⁄f
;

662 
©h9k_™t_div_comb_ a_c⁄f
 
	m£c⁄d_quick_sˇn_c⁄f
;

663 
boﬁ
 
	mfú°_øtio
;

664 
boﬁ
 
	m£c⁄d_øtio
;

665 
	msˇn_°¨t_time
;

670 
	mlow_rssi_thªsh
;

671 
	mÁ°_div_büs
;

674 
©h_™t_comb_sˇn
(
©h_so·c
 *
sc
, 
©h_rx_°©us
 *
rs
);

680 
	#ATH9K_PCI_CUS198
 0x0001

	)

681 
	#ATH9K_PCI_CUS230
 0x0002

	)

682 
	#ATH9K_PCI_CUS217
 0x0004

	)

683 
	#ATH9K_PCI_CUS252
 0x0008

	)

684 
	#ATH9K_PCI_WOW
 0x0010

	)

685 
	#ATH9K_PCI_BT_ANT_DIV
 0x0020

	)

686 
	#ATH9K_PCI_D3_L1_WAR
 0x0040

	)

687 
	#ATH9K_PCI_AR9565_1ANT
 0x0080

	)

688 
	#ATH9K_PCI_AR9565_2ANT
 0x0100

	)

689 
	#ATH9K_PCI_NO_PLL_PWRSAVE
 0x0200

	)

690 
	#ATH9K_PCI_KILLER
 0x0400

	)

696 
	#DEFAULT_CACHELINE
 32

	)

697 
	#ATH_CABQ_READY_TIME
 80

	)

698 
	#ATH_TXPOWER_MAX
 100

	)

699 
	#MAX_GTT_CNT
 5

	)

702 
	#PS_WAIT_FOR_BEACON
 
	`BIT
(0)

	)

703 
	#PS_WAIT_FOR_CAB
 
	`BIT
(1)

	)

704 
	#PS_WAIT_FOR_PSPOLL_DATA
 
	`BIT
(2)

	)

705 
	#PS_WAIT_FOR_TX_ACK
 
	`BIT
(3)

	)

706 
	#PS_BEACON_SYNC
 
	`BIT
(4)

	)

707 
	#PS_WAIT_FOR_ANI
 
	`BIT
(5)

	)

709 
	s©h_Àd
 {

710 
li°_hód
 
	mli°
;

711 
©h_so·c
 *
	msc
;

712 c⁄° 
gpio_Àd
 *
	mgpio
;

713 
Àd_˛assdev
 
	mcdev
;

716 
	s©h_so·c
 {

717 
õì80211_hw
 *
	mhw
;

718 
devi˚
 *
	mdev
;

720 
survey_öfo
 *
	mcur_survey
;

721 
survey_öfo
 
	msurvey
[
ATH9K_NUM_CHANNELS
];

723 
èskÀt_°ru˘
 
	möå_tq
;

724 
èskÀt_°ru˘
 
	mbc⁄_èskÀt
;

725 
©h_hw
 *
	msc_ah
;

726 
__iomem
 *
	mmem
;

727 
	múq
;

728 
•ölock_t
 
	msc_£rül_rw
;

729 
•ölock_t
 
	msc_pm_lock
;

730 
•ölock_t
 
	msc_pcu_lock
;

731 
muãx
 
	mmuãx
;

732 
w‹k_°ru˘
 
	m∑¥d_w‹k
;

733 
w‹k_°ru˘
 
	mhw_ª£t_w‹k
;

734 
com∂ëi⁄
 
	m∑¥d_com∂ëe
;

735 
waô_queue_hód_t
 
	mtx_waô
;

737 
©h_gí_timî
 *
	mp2p_ps_timî
;

738 
©h_vif
 *
	mp2p_ps_vif
;

740 
	mdrivî_d©a
;

742 
u8
 
	mgâ_˙t
;

743 
u32
 
	möå°©us
;

744 
u16
 
	mps_Êags
;

745 
u16
 
	mcuπxpow
;

746 
boﬁ
 
	mps_íabÀd
;

747 
boﬁ
 
	mps_idÀ
;

748 
	mnb˙vifs
;

749 
	mnvifs
;

750 
	mps_u£cou¡
;

752 
©h_c⁄fig
 
	mc⁄fig
;

753 
©h_rx
 
	mrx
;

754 
©h_tx
 
	mtx
;

755 
©h_bóc⁄
 
	mbóc⁄
;

757 #ifde‡
CPTCFG_MAC80211_LEDS


758 c⁄° *
	mÀd_deÁu…_åiggî
;

759 
li°_hód
 
	mÀds
;

762 
©h9k_hw_ˇl_d©a
 
	mˇld©a
;

764 #ifde‡
CPTCFG_ATH9K_DEBUGFS


765 
©h9k_debug
 
	mdebug
;

767 
©h_bóc⁄_c⁄fig
 
	mcur_bóc⁄_c⁄f
;

768 
dñayed_w‹k
 
	mtx_com∂ëe_w‹k
;

769 
dñayed_w‹k
 
	mhw_∂l_w‹k
;

770 
timî_li°
 
	m¶ìp_timî
;

772 #ifde‡
CPTCFG_ATH9K_BTCOEX_SUPPORT


773 
©h_btc€x
 
	mbtc€x
;

774 
©h_mci_c€x
 
	mmci_c€x
;

775 
w‹k_°ru˘
 
	mmci_w‹k
;

778 
©h_descdma
 
	mtxsdma
;

780 
©h_™t_comb
 
	m™t_comb
;

781 
u8
 
	m™t_tx
, 
	m™t_rx
;

782 
dfs_∑âîn_dëe˘‹
 *
	mdfs_dëe˘‹
;

783 
u32
 
	mwow_íabÀd
;

785 
rch™
 *
	mrfs_ch™_•ec_sˇn
;

786 
•e˘øl_mode
 
	m•e˘øl_mode
;

787 
©h_•ec_sˇn
 
	m•ec_c⁄fig
;

789 
õì80211_vif
 *
	mtx99_vif
;

790 
sk_buff
 *
	mtx99_skb
;

791 
boﬁ
 
	mtx99_°©e
;

792 
s16
 
	mtx99_powî
;

794 #ifde‡
CPTCFG_ATH9K_WOW


795 
©omic_t
 
	mwow_gŸ_bmiss_öå
;

796 
©omic_t
 
	mwow_¶ìp_¥oc_öå
;

797 
u32
 
	mwow_öå_bef‹e_¶ìp
;

805 #ifde‡
CPTCFG_ATH9K_TX99


806 
©h9k_tx99_öô_debug
(
©h_so·c
 *
sc
);

807 
©h9k_tx99_£nd
(
©h_so·c
 *
sc
, 
sk_buff
 *
skb
,

808 
©h_tx_c⁄åﬁ
 *
tx˘l
);

810 
ölöe
 
	$©h9k_tx99_öô_debug
(
©h_so·c
 *
sc
)

812 
	}
}

813 
ölöe
 
	$©h9k_tx99_£nd
(
©h_so·c
 *
sc
,

814 
sk_buff
 *
skb
,

815 
©h_tx_c⁄åﬁ
 *
tx˘l
)

818 
	}
}

821 
ölöe
 
	$©h_ªad_ˇchesize
(
©h_comm⁄
 *
comm⁄
, *
csz
)

823 
comm⁄
->
bus_›s
->
	`ªad_ˇchesize
(comm⁄, 
csz
);

824 
	}
}

826 
©h9k_èskÀt
(
d©a
);

827 
©h_ˇbq_upd©e
(
©h_so·c
 *);

828 
u8
 
©h9k_∑r£_mpdudísôy
(u8 
mpdudísôy
);

829 
úqªtu∫_t
 
©h_i§
(
úq
, *
dev
);

830 
©h_ª£t
(
©h_so·c
 *
sc
);

831 
©h_ˇn˚l_w‹k
(
©h_so·c
 *
sc
);

832 
©h_ª°¨t_w‹k
(
©h_so·c
 *
sc
);

833 
©h9k_öô_devi˚
(
u16
 
devid
, 
©h_so·c
 *
sc
,

834 c⁄° 
©h_bus_›s
 *
bus_›s
);

835 
©h9k_deöô_devi˚
(
©h_so·c
 *
sc
);

836 
©h9k_ªlﬂd_chaömask_£âögs
(
©h_so·c
 *
sc
);

837 
u8
 
©h_txchaömask_ªdu˘i⁄
(
©h_so·c
 *
sc
, u8 
chaömask
, 
u32
 
øã
);

838 
©h_°¨t_rfkûl_pﬁl
(
©h_so·c
 *
sc
);

839 
©h9k_rfkûl_pﬁl_°©e
(
õì80211_hw
 *
hw
);

840 
©h9k_ps_wakeup
(
©h_so·c
 *
sc
);

841 
©h9k_ps_ª°‹e
(
©h_so·c
 *
sc
);

843 #ifde‡
CPTCFG_ATH9K_PCI


844 
©h_pci_öô
();

845 
©h_pci_exô
();

847 
ölöe
 
	$©h_pci_öô
(Ë{  0; 
	}
};

848 
ölöe
 
	$©h_pci_exô
(Ë{
	}
};

851 #ifde‡
CPTCFG_ATH9K_AHB


852 
©h_ahb_öô
();

853 
©h_ahb_exô
();

855 
ölöe
 
	$©h_ahb_öô
(Ë{  0; 
	}
};

856 
ölöe
 
	$©h_ahb_exô
(Ë{
	}
};

	@ath9k.mod.c

1 
	~<löux/moduÀ.h
>

2 
	~<löux/vîmagic.h
>

3 
	~<löux/compûî.h
>

6 
moduÀ
 
__this_moduÀ


7 
__©åibuã__
((
£˘i⁄
(".gnu.linkonce.this_module"))) = {

8 .
«me
 = 
KBUILD_MODNAME
,

9 .
	göô
 = 
öô_moduÀ
,

10 #ifde‡
CONFIG_MODULE_UNLOAD


11 .
	gexô
 = 
˛ónup_moduÀ
,

13 .
	g¨ch
 = 
MODULE_ARCH_INIT
,

16 c⁄° 
	g__moduÀ_dïíds
[]

17 
__u£d


18 
__©åibuã__
((
£˘i⁄
(".modinfo"))) =

	@ath9k_common.mod.c

1 
	~<löux/moduÀ.h
>

2 
	~<löux/vîmagic.h
>

3 
	~<löux/compûî.h
>

6 
moduÀ
 
__this_moduÀ


7 
__©åibuã__
((
£˘i⁄
(".gnu.linkonce.this_module"))) = {

8 .
«me
 = 
KBUILD_MODNAME
,

9 .
	göô
 = 
öô_moduÀ
,

10 #ifde‡
CONFIG_MODULE_UNLOAD


11 .
	gexô
 = 
˛ónup_moduÀ
,

13 .
	g¨ch
 = 
MODULE_ARCH_INIT
,

16 c⁄° 
	g__moduÀ_dïíds
[]

17 
__u£d


18 
__©åibuã__
((
£˘i⁄
(".modinfo"))) =

	@ath9k_hw.mod.c

1 
	~<löux/moduÀ.h
>

2 
	~<löux/vîmagic.h
>

3 
	~<löux/compûî.h
>

6 
moduÀ
 
__this_moduÀ


7 
__©åibuã__
((
£˘i⁄
(".gnu.linkonce.this_module"))) = {

8 .
«me
 = 
KBUILD_MODNAME
,

9 .
	g¨ch
 = 
MODULE_ARCH_INIT
,

12 c⁄° 
	g__moduÀ_dïíds
[]

13 
__u£d


14 
__©åibuã__
((
£˘i⁄
(".modinfo"))) =

	@beacon.c

17 
	~<löux/dma-m≠pög.h
>

18 
	~"©h9k.h
"

20 
	#FUDGE
 2

	)

22 
	$©h9k_ª£t_bóc⁄_°©us
(
©h_so·c
 *
sc
)

24 
sc
->
bóc⁄
.
tx_¥o˚s£d
 = 
Ál£
;

25 
sc
->
bóc⁄
.
tx_œ°
 = 
Ál£
;

26 
	}
}

33 
	$©h9k_bóc⁄q_c⁄fig
(
©h_so·c
 *
sc
)

35 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

36 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

37 
©h9k_tx_queue_öfo
 
qi
, 
qi_be
;

38 
©h_txq
 *
txq
;

40 
	`©h9k_hw_gë_txq_¥›s
(
ah
, 
sc
->
bóc⁄
.
bóc⁄q
, &
qi
);

42 i‡(
sc
->
sc_ah
->
›mode
 =
NL80211_IFTYPE_AP
 ||

43 
sc
->
sc_ah
->
›mode
 =
NL80211_IFTYPE_MESH_POINT
) {

45 
qi
.
tqi_aifs
 = 1;

46 
qi
.
tqi_cwmö
 = 0;

47 
qi
.
tqi_cwmax
 = 0;

50 
txq
 = 
sc
->
tx
.
txq_m≠
[
IEEE80211_AC_BE
];

51 
	`©h9k_hw_gë_txq_¥›s
(
ah
, 
txq
->
axq_qnum
, &
qi_be
);

52 
qi
.
tqi_aifs
 = 
qi_be
.tqi_aifs;

53 i‡(
ah
->
¶Ÿtime
 =
ATH9K_SLOT_TIME_20
)

54 
qi
.
tqi_cwmö
 = 2*
qi_be
.tqi_cwmin;

56 
qi
.
tqi_cwmö
 = 4*
qi_be
.tqi_cwmin;

57 
qi
.
tqi_cwmax
 = 
qi_be
.tqi_cwmax;

60 i‡(!
	`©h9k_hw_£t_txq_¥›s
(
ah
, 
sc
->
bóc⁄
.
bóc⁄q
, &
qi
)) {

61 
	`©h_îr
(
comm⁄
, "UnableÅo update h/w beacon queueÖarameters\n");

63 
	`©h9k_hw_ª£âxqueue
(
ah
, 
sc
->
bóc⁄
.
bóc⁄q
);

65 
	}
}

72 
	$©h9k_bóc⁄_£tup
(
©h_so·c
 *
sc
, 
õì80211_vif
 *
vif
,

73 
©h_buf
 *
bf
, 
øãidx
)

75 
sk_buff
 *
skb
 = 
bf
->
bf_mpdu
;

76 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

77 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

78 
©h_tx_öfo
 
öfo
;

79 
õì80211_suµ‹ãd_b™d
 *
sb™d
;

80 
u8
 
chaömask
 = 
ah
->
txchaömask
;

81 
u8
 
øã
 = 0;

83 
sb™d
 = &
comm⁄
->
sb™ds
[comm⁄->
hw
->
c⁄f
.
ch™def
.
ch™
->
b™d
];

84 
øã
 = 
sb™d
->
bôøãs
[
øãidx
].
hw_vÆue
;

85 i‡(
vif
->
bss_c⁄f
.
u£_sh‹t_¥ómbÀ
)

86 
øã
 |
sb™d
->
bôøãs
[
øãidx
].
hw_vÆue_sh‹t
;

88 
	`mem£t
(&
öfo
, 0, (info));

89 
öfo
.
pkt_Àn
 = 
skb
->
Àn
 + 
FCS_LEN
;

90 
öfo
.
ty≥
 = 
ATH9K_PKT_TYPE_BEACON
;

91 
öfo
.
txpowî
 = 
MAX_RATE_POWER
;

92 
öfo
.
keyix
 = 
ATH9K_TXKEYIX_INVALID
;

93 
öfo
.
keyty≥
 = 
ATH9K_KEY_TYPE_CLEAR
;

94 
öfo
.
Êags
 = 
ATH9K_TXDESC_NOACK
 | 
ATH9K_TXDESC_CLRDMASK
;

96 
öfo
.
buf_addr
[0] = 
bf
->
bf_buf_addr
;

97 
öfo
.
buf_Àn
[0] = 
	`roundup
(
skb
->
Àn
, 4);

99 
öfo
.
is_fú°
 = 
åue
;

100 
öfo
.
is_œ°
 = 
åue
;

102 
öfo
.
qcu
 = 
sc
->
bóc⁄
.
bóc⁄q
;

104 
öfo
.
øãs
[0].
Trõs
 = 1;

105 
öfo
.
øãs
[0].
R©e
 = 
øã
;

106 
öfo
.
øãs
[0].
ChSñ
 = 
	`©h_txchaömask_ªdu˘i⁄
(
sc
, 
chaömask
, 
øã
);

108 
	`©h9k_hw_£t_txdesc
(
ah
, 
bf
->
bf_desc
, &
öfo
);

109 
	}
}

111 
©h_buf
 *
	$©h9k_bóc⁄_gíî©e
(
õì80211_hw
 *
hw
,

112 
õì80211_vif
 *
vif
)

114 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

115 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

116 
©h_buf
 *
bf
;

117 
©h_vif
 *
avp
 = (*)
vif
->
drv_¥iv
;

118 
sk_buff
 *
skb
;

119 
©h_txq
 *
ˇbq
 = 
sc
->
bóc⁄
.cabq;

120 
õì80211_tx_öfo
 *
öfo
;

121 
õì80211_mgmt
 *
mgmt_hdr
;

122 
ˇbq_dïth
;

124 i‡(
avp
->
av_bcbuf
 =
NULL
)

125  
NULL
;

127 
bf
 = 
avp
->
av_bcbuf
;

128 
skb
 = 
bf
->
bf_mpdu
;

129 i‡(
skb
) {

130 
	`dma_unm≠_sögÀ
(
sc
->
dev
, 
bf
->
bf_buf_addr
,

131 
skb
->
Àn
, 
DMA_TO_DEVICE
);

132 
	`dev_k‰ì_skb_™y
(
skb
);

133 
bf
->
bf_buf_addr
 = 0;

134 
bf
->
bf_mpdu
 = 
NULL
;

137 
skb
 = 
	`õì80211_bóc⁄_gë
(
hw
, 
vif
);

138 i‡(
skb
 =
NULL
)

139  
NULL
;

141 
bf
->
bf_mpdu
 = 
skb
;

143 
mgmt_hdr
 = (
õì80211_mgmt
 *)
skb
->
d©a
;

144 
mgmt_hdr
->
u
.
bóc⁄
.
time°amp
 = 
avp
->
tsf_adju°
;

146 
öfo
 = 
	`IEEE80211_SKB_CB
(
skb
);

147 i‡(
öfo
->
Êags
 & 
IEEE80211_TX_CTL_ASSIGN_SEQ
) {

152 
õì80211_hdr
 *
hdr
 = (õì80211_hd∏*)
skb
->
d©a
;

153 
sc
->
tx
.
£q_no
 += 0x10;

154 
hdr
->
£q_˘æ
 &
	`˝u_to_À16
(
IEEE80211_SCTL_FRAG
);

155 
hdr
->
£q_˘æ
 |
	`˝u_to_À16
(
sc
->
tx
.
£q_no
);

158 
bf
->
bf_buf_addr
 = 
	`dma_m≠_sögÀ
(
sc
->
dev
, 
skb
->
d©a
,

159 
skb
->
Àn
, 
DMA_TO_DEVICE
);

160 i‡(
	`u∆ikñy
(
	`dma_m≠pög_îr‹
(
sc
->
dev
, 
bf
->
bf_buf_addr
))) {

161 
	`dev_k‰ì_skb_™y
(
skb
);

162 
bf
->
bf_mpdu
 = 
NULL
;

163 
bf
->
bf_buf_addr
 = 0;

164 
	`©h_îr
(
comm⁄
, "dma_mapping_error on beaconing\n");

165  
NULL
;

168 
skb
 = 
	`õì80211_gë_buf„ªd_bc
(
hw
, 
vif
);

178 
	`•ö_lock_bh
(&
ˇbq
->
axq_lock
);

179 
ˇbq_dïth
 = 
ˇbq
->
axq_dïth
;

180 
	`•ö_u∆ock_bh
(&
ˇbq
->
axq_lock
);

182 i‡(
skb
 && 
ˇbq_dïth
) {

183 i‡(
sc
->
nvifs
 > 1) {

184 
	`©h_dbg
(
comm⁄
, 
BEACON
,

186 
	`©h_døötxq
(
sc
, 
ˇbq
);

190 
	`©h9k_bóc⁄_£tup
(
sc
, 
vif
, 
bf
, 
öfo
->
c⁄åﬁ
.
øãs
[0].
idx
);

192 i‡(
skb
)

193 
	`©h_tx_ˇbq
(
hw
, 
vif
, 
skb
);

195  
bf
;

196 
	}
}

198 
	$©h9k_bóc⁄_assign_¶Ÿ
(
©h_so·c
 *
sc
, 
õì80211_vif
 *
vif
)

200 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

201 
©h_vif
 *
avp
 = (*)
vif
->
drv_¥iv
;

202 
¶Ÿ
;

204 
avp
->
av_bcbuf
 = 
	`li°_fú°_íåy
(&
sc
->
bóc⁄
.
bbuf
, 
©h_buf
, 
li°
);

205 
	`li°_dñ
(&
avp
->
av_bcbuf
->
li°
);

207 
¶Ÿ
 = 0; slŸ < 
ATH_BCBUF
; slot++) {

208 i‡(
sc
->
bóc⁄
.
b¶Ÿ
[
¶Ÿ
] =
NULL
) {

209 
avp
->
av_b¶Ÿ
 = 
¶Ÿ
;

214 
sc
->
bóc⁄
.
b¶Ÿ
[
avp
->
av_b¶Ÿ
] = 
vif
;

215 
sc
->
nb˙vifs
++;

217 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "Added interfaceát beacon slot: %d\n",

218 
avp
->
av_b¶Ÿ
);

219 
	}
}

221 
	$©h9k_bóc⁄_ªmove_¶Ÿ
(
©h_so·c
 *
sc
, 
õì80211_vif
 *
vif
)

223 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

224 
©h_vif
 *
avp
 = (*)
vif
->
drv_¥iv
;

225 
©h_buf
 *
bf
 = 
avp
->
av_bcbuf
;

226 
©h_bóc⁄_c⁄fig
 *
cur_c⁄f
 = &
sc
->
cur_bóc⁄_c⁄f
;

228 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "Removing interfaceát beacon slot: %d\n",

229 
avp
->
av_b¶Ÿ
);

231 
	`èskÀt_dißbÀ
(&
sc
->
bc⁄_èskÀt
);

233 
cur_c⁄f
->
íabÀ_bóc⁄
 &~
	`BIT
(
avp
->
av_b¶Ÿ
);

235 i‡(
bf
 && bf->
bf_mpdu
) {

236 
sk_buff
 *
skb
 = 
bf
->
bf_mpdu
;

237 
	`dma_unm≠_sögÀ
(
sc
->
dev
, 
bf
->
bf_buf_addr
,

238 
skb
->
Àn
, 
DMA_TO_DEVICE
);

239 
	`dev_k‰ì_skb_™y
(
skb
);

240 
bf
->
bf_mpdu
 = 
NULL
;

241 
bf
->
bf_buf_addr
 = 0;

244 
avp
->
av_bcbuf
 = 
NULL
;

245 
sc
->
bóc⁄
.
b¶Ÿ
[
avp
->
av_b¶Ÿ
] = 
NULL
;

246 
sc
->
nb˙vifs
--;

247 
	`li°_add_èû
(&
bf
->
li°
, &
sc
->
bóc⁄
.
bbuf
);

249 
	`èskÀt_íabÀ
(&
sc
->
bc⁄_èskÀt
);

250 
	}
}

252 
	$©h9k_bóc⁄_choo£_¶Ÿ
(
©h_so·c
 *
sc
)

254 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

255 
©h_bóc⁄_c⁄fig
 *
cur_c⁄f
 = &
sc
->
cur_bóc⁄_c⁄f
;

256 
u16
 
ötvÆ
;

257 
u32
 
ts·u
;

258 
u64
 
tsf
;

259 
¶Ÿ
;

261 i‡(
sc
->
sc_ah
->
›mode
 !
NL80211_IFTYPE_AP
 &&

262 
sc
->
sc_ah
->
›mode
 !
NL80211_IFTYPE_MESH_POINT
) {

263 
	`©h_dbg
(
comm⁄
, 
BEACON
, "slot 0,Åsf: %llu\n",

264 
	`©h9k_hw_gëtsf64
(
sc
->
sc_ah
));

268 
ötvÆ
 = 
cur_c⁄f
->
bóc⁄_öãrvÆ
 ? : 
ATH_DEFAULT_BINTVAL
;

269 
tsf
 = 
	`©h9k_hw_gëtsf64
(
sc
->
sc_ah
);

270 
tsf
 +
	`TU_TO_USEC
(
sc
->
sc_ah
->
c⁄fig
.
sw_bóc⁄_ª•⁄£_time
);

271 
ts·u
 = 
	`TSF_TO_TU
((
tsf
 * 
ATH_BCBUF
) >>32,Åsf * ATH_BCBUF);

272 
¶Ÿ
 = (
ts·u
 % (
ötvÆ
 * 
ATH_BCBUF
)) / intval;

274 
	`©h_dbg
(
comm⁄
, 
BEACON
, "slot: %dÅsf: %lluÅsftu: %u\n",

275 
¶Ÿ
, 
tsf
, 
ts·u
 / 
ATH_BCBUF
);

277  
¶Ÿ
;

278 
	}
}

280 
	$©h9k_£t_tsÁdju°
(
©h_so·c
 *
sc
, 
õì80211_vif
 *
vif
)

282 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

283 
©h_bóc⁄_c⁄fig
 *
cur_c⁄f
 = &
sc
->
cur_bóc⁄_c⁄f
;

284 
©h_vif
 *
avp
 = (*)
vif
->
drv_¥iv
;

285 
u32
 
tsÁdju°
;

287 i‡(
avp
->
av_b¶Ÿ
 == 0)

290 
tsÁdju°
 = 
cur_c⁄f
->
bóc⁄_öãrvÆ
 * 
avp
->
av_b¶Ÿ
;

291 
tsÁdju°
 = 
	`TU_TO_USEC
—sÁdju°Ë/ 
ATH_BCBUF
;

292 
avp
->
tsf_adju°
 = 
	`˝u_to_À64
(
tsÁdju°
);

294 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "tsfadjust is: %llu for bslot: %d\n",

295 ()
tsÁdju°
, 
avp
->
av_b¶Ÿ
);

296 
	}
}

298 
boﬁ
 
	$©h9k_cß_is_föished
(
©h_so·c
 *
sc
, 
õì80211_vif
 *
vif
)

300 i‡(!
vif
 || !vif->
cß_a˘ive
)

301  
Ál£
;

303 i‡(!
	`õì80211_cß_is_com∂ëe
(
vif
))

304  
Ál£
;

306 
	`õì80211_cß_föish
(
vif
);

307  
åue
;

308 
	}
}

310 
	$©h9k_cß_upd©e_vif
(*
d©a
, 
u8
 *
mac
, 
õì80211_vif
 *
vif
)

312 
©h_so·c
 *
sc
 = 
d©a
;

313 
	`©h9k_cß_is_föished
(
sc
, 
vif
);

314 
	}
}

316 
	$©h9k_cß_upd©e
(
©h_so·c
 *
sc
)

318 
	`õì80211_ôî©e_a˘ive_öãrÁ˚s_©omic
(
sc
->
hw
,

319 
IEEE80211_IFACE_ITER_NORMAL
,

320 
©h9k_cß_upd©e_vif
, 
sc
);

321 
	}
}

323 
	$©h9k_bóc⁄_èskÀt
(
d©a
)

325 
©h_so·c
 *
sc
 = (©h_so·¯*)
d©a
;

326 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

327 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

328 
©h_buf
 *
bf
 = 
NULL
;

329 
õì80211_vif
 *
vif
;

330 
boﬁ
 
edma
 = !!(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_EDMA
);

331 
¶Ÿ
;

333 i‡(
	`ã°_bô
(
ATH_OP_HW_RESET
, &
comm⁄
->
›_Êags
)) {

334 
	`©h_dbg
(
comm⁄
, 
RESET
,

346 i‡(
	`©h9k_hw_numtx≥ndög
(
ah
, 
sc
->
bóc⁄
.
bóc⁄q
) != 0) {

347 
sc
->
bóc⁄
.
bmiss˙t
++;

349 
	`©h9k_hw_check_«v
(
ah
);

357 i‡(!
	`©h_hw_check
(
sc
))

360 i‡(
sc
->
bóc⁄
.
bmiss˙t
 < 
BSTUCK_THRESH
 * sc->
nb˙vifs
) {

361 
	`©h_dbg
(
comm⁄
, 
BSTUCK
,

363 
sc
->
bóc⁄
.
bmiss˙t
);

364 
	`©h9k_hw_°›_dma_queue
(
ah
, 
sc
->
bóc⁄
.
bóc⁄q
);

365 i‡(
sc
->
bóc⁄
.
bmiss˙t
 > 3)

366 
	`©h9k_hw_b°uck_nfˇl
(
ah
);

367 } i‡(
sc
->
bóc⁄
.
bmiss˙t
 >
BSTUCK_THRESH
) {

368 
	`©h_dbg
(
comm⁄
, 
BSTUCK
, "beacon is officially stuck\n");

369 
sc
->
bóc⁄
.
bmiss˙t
 = 0;

370 
	`©h9k_queue_ª£t
(
sc
, 
RESET_TYPE_BEACON_STUCK
);

376 
¶Ÿ
 = 
	`©h9k_bóc⁄_choo£_¶Ÿ
(
sc
);

377 
vif
 = 
sc
->
bóc⁄
.
b¶Ÿ
[
¶Ÿ
];

380 i‡(!
edma
 && 
	`©h9k_cß_is_föished
(
sc
, 
vif
))

383 i‡(!
vif
 || !vif->
bss_c⁄f
.
íabÀ_bóc⁄
)

386 
bf
 = 
	`©h9k_bóc⁄_gíî©e
(
sc
->
hw
, 
vif
);

388 i‡(
sc
->
bóc⁄
.
bmiss˙t
 != 0) {

389 
	`©h_dbg
(
comm⁄
, 
BSTUCK
, "resume beacon xmitáfter %u misses\n",

390 
sc
->
bóc⁄
.
bmiss˙t
);

391 
sc
->
bóc⁄
.
bmiss˙t
 = 0;

410 i‡(
sc
->
bóc⁄
.
upd©e¶Ÿ
 =
UPDATE
) {

411 
sc
->
bóc⁄
.
upd©e¶Ÿ
 = 
COMMIT
;

412 
sc
->
bóc⁄
.
¶Ÿupd©e
 = 
¶Ÿ
;

413 } i‡(
sc
->
bóc⁄
.
upd©e¶Ÿ
 =
COMMIT
 &&

414 
sc
->
bóc⁄
.
¶Ÿupd©e
 =
¶Ÿ
) {

415 
ah
->
¶Ÿtime
 = 
sc
->
bóc⁄
.slottime;

416 
	`©h9k_hw_öô_globÆ_£âögs
(
ah
);

417 
sc
->
bóc⁄
.
upd©e¶Ÿ
 = 
OK
;

420 i‡(
bf
) {

421 
	`©h9k_ª£t_bóc⁄_°©us
(
sc
);

423 
	`©h_dbg
(
comm⁄
, 
BEACON
,

424 "Tønsmôtög bóc⁄ f‹ slŸ: %d\n", 
¶Ÿ
);

427 
	`©h9k_hw_puâxbuf
(
ah
, 
sc
->
bóc⁄
.
bóc⁄q
, 
bf
->
bf_daddr
);

429 i‡(!
edma
)

430 
	`©h9k_hw_tx°¨t
(
ah
, 
sc
->
bóc⁄
.
bóc⁄q
);

432 
	}
}

437 
	$©h9k_bóc⁄_öô
(
©h_so·c
 *
sc
, 
u32
 
√xâbâ
,

438 
u32
 
ötvÆ
, 
boﬁ
 
ª£t_tsf
)

440 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

442 
	`©h9k_hw_dißbÀ_öãºu±s
(
ah
);

443 i‡(
ª£t_tsf
)

444 
	`©h9k_hw_ª£t_tsf
(
ah
);

445 
	`©h9k_bóc⁄q_c⁄fig
(
sc
);

446 
	`©h9k_hw_bóc⁄öô
(
ah
, 
√xâbâ
, 
ötvÆ
);

447 
sc
->
bóc⁄
.
bmiss˙t
 = 0;

448 
	`©h9k_hw_£t_öãºu±s
(
ah
);

449 
	`©h9k_hw_íabÀ_öãºu±s
(
ah
);

450 
	}
}

457 
	$©h9k_bóc⁄_c⁄fig_≠
(
©h_so·c
 *
sc
,

458 
©h_bóc⁄_c⁄fig
 *
c⁄f
)

460 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

462 
	`©h9k_cmn_bóc⁄_c⁄fig_≠
(
ah
, 
c⁄f
, 
ATH_BCBUF
);

463 
	`©h9k_bóc⁄_öô
(
sc
, 
c⁄f
->
√xâbâ
, c⁄f->
ötvÆ
, 
Ál£
);

464 
	}
}

466 
	$©h9k_bóc⁄_c⁄fig_°a
(
©h_hw
 *
ah
,

467 
©h_bóc⁄_c⁄fig
 *
c⁄f
)

469 
©h9k_bóc⁄_°©e
 
bs
;

471 i‡(
	`©h9k_cmn_bóc⁄_c⁄fig_°a
(
ah
, 
c⁄f
, &
bs
Ë=-
EPERM
)

474 
	`©h9k_hw_dißbÀ_öãºu±s
(
ah
);

475 
	`©h9k_hw_£t_°a_bóc⁄_timîs
(
ah
, &
bs
);

476 
ah
->
imask
 |
ATH9K_INT_BMISS
;

478 
	`©h9k_hw_£t_öãºu±s
(
ah
);

479 
	`©h9k_hw_íabÀ_öãºu±s
(
ah
);

480 
	}
}

482 
	$©h9k_bóc⁄_c⁄fig_adhoc
(
©h_so·c
 *
sc
,

483 
©h_bóc⁄_c⁄fig
 *
c⁄f
)

485 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

486 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

488 
	`©h9k_ª£t_bóc⁄_°©us
(
sc
);

490 
	`©h9k_cmn_bóc⁄_c⁄fig_adhoc
(
ah
, 
c⁄f
);

492 
	`©h9k_bóc⁄_öô
(
sc
, 
c⁄f
->
√xâbâ
, c⁄f->
ötvÆ
, c⁄f->
ibss_¸ót‹
);

498 i‡(!
c⁄f
->
ibss_¸ót‹
 && c⁄f->
íabÀ_bóc⁄
)

499 
	`£t_bô
(
ATH_OP_BEACONS
, &
comm⁄
->
›_Êags
);

500 
	}
}

502 
boﬁ
 
	$©h9k_Ælow_bóc⁄_c⁄fig
(
©h_so·c
 *
sc
,

503 
õì80211_vif
 *
vif
)

505 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

506 
©h_vif
 *
avp
 = (*)
vif
->
drv_¥iv
;

508 i‡(
sc
->
sc_ah
->
›mode
 =
NL80211_IFTYPE_AP
) {

509 i‡(
vif
->
ty≥
 !
NL80211_IFTYPE_AP
) {

510 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

512  
Ál£
;

516 i‡(
sc
->
sc_ah
->
›mode
 =
NL80211_IFTYPE_STATION
) {

517 i‡((
vif
->
ty≥
 =
NL80211_IFTYPE_STATION
) &&

518 
	`ã°_bô
(
ATH_OP_BEACONS
, &
comm⁄
->
›_Êags
) &&

519 !
avp
->
¥im¨y_°a_vif
) {

520 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

522  
Ál£
;

526  
åue
;

527 
	}
}

529 
	$©h9k_ˇche_bóc⁄_c⁄fig
(
©h_so·c
 *
sc
,

530 
õì80211_bss_c⁄f
 *
bss_c⁄f
)

532 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

533 
©h_bóc⁄_c⁄fig
 *
cur_c⁄f
 = &
sc
->
cur_bóc⁄_c⁄f
;

535 
	`©h_dbg
(
comm⁄
, 
BEACON
,

536 "Cachög bóc⁄ d©®f‹ BSS: %pM\n", 
bss_c⁄f
->
bssid
);

538 
cur_c⁄f
->
bóc⁄_öãrvÆ
 = 
bss_c⁄f
->
bóc⁄_öt
;

539 
cur_c⁄f
->
dtim_≥riod
 = 
bss_c⁄f
->dtim_period;

540 
cur_c⁄f
->
dtim_cou¡
 = 1;

541 
cur_c⁄f
->
ibss_¸ót‹
 = 
bss_c⁄f
->ibss_creator;

549 i‡(
cur_c⁄f
->
bóc⁄_öãrvÆ
 == 0)

550 
cur_c⁄f
->
bóc⁄_öãrvÆ
 = 100;

552 
cur_c⁄f
->
bmiss_timeout
 =

553 
ATH_DEFAULT_BMISS_LIMIT
 * 
cur_c⁄f
->
bóc⁄_öãrvÆ
;

560 i‡(
cur_c⁄f
->
dtim_≥riod
 == 0)

561 
cur_c⁄f
->
dtim_≥riod
 = 1;

563 
	}
}

565 
	$©h9k_bóc⁄_c⁄fig
(
©h_so·c
 *
sc
, 
õì80211_vif
 *
vif
,

566 
u32
 
ch™ged
)

568 
õì80211_bss_c⁄f
 *
bss_c⁄f
 = &
vif
->bss_conf;

569 
©h_bóc⁄_c⁄fig
 *
cur_c⁄f
 = &
sc
->
cur_bóc⁄_c⁄f
;

570 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

571 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

572 
©h_vif
 *
avp
 = (*)
vif
->
drv_¥iv
;

573 
Êags
;

574 
boﬁ
 
skù_bóc⁄
 = 
Ál£
;

576 i‡(
vif
->
ty≥
 =
NL80211_IFTYPE_AP
)

577 
	`©h9k_£t_tsÁdju°
(
sc
, 
vif
);

579 i‡(!
	`©h9k_Ælow_bóc⁄_c⁄fig
(
sc
, 
vif
))

582 i‡(
sc
->
sc_ah
->
›mode
 =
NL80211_IFTYPE_STATION
) {

583 
	`©h9k_ˇche_bóc⁄_c⁄fig
(
sc
, 
bss_c⁄f
);

584 
	`©h9k_£t_bóc⁄
(
sc
);

585 
	`£t_bô
(
ATH_OP_BEACONS
, &
comm⁄
->
›_Êags
);

593 i‡(
ch™ged
 & 
BSS_CHANGED_BEACON_ENABLED
) {

594 
boﬁ
 
íabÀd
 = 
cur_c⁄f
->
íabÀ_bóc⁄
;

596 i‡(!
bss_c⁄f
->
íabÀ_bóc⁄
) {

597 
cur_c⁄f
->
íabÀ_bóc⁄
 &~
	`BIT
(
avp
->
av_b¶Ÿ
);

599 
cur_c⁄f
->
íabÀ_bóc⁄
 |
	`BIT
(
avp
->
av_b¶Ÿ
);

600 i‡(!
íabÀd
)

601 
	`©h9k_ˇche_bóc⁄_c⁄fig
(
sc
, 
bss_c⁄f
);

609 i‡(
cur_c⁄f
->
bóc⁄_öãrvÆ
) {

615 i‡((
ch™ged
 & 
BSS_CHANGED_IBSS
Ë&& !
bss_c⁄f
->
ibss_¸ót‹
 &&

616 
bss_c⁄f
->
íabÀ_bóc⁄
) {

617 
	`•ö_lock_úqßve
(&
sc
->
sc_pm_lock
, 
Êags
);

618 
sc
->
ps_Êags
 |
PS_BEACON_SYNC
 | 
PS_WAIT_FOR_BEACON
;

619 
	`•ö_u∆ock_úqª°‹e
(&
sc
->
sc_pm_lock
, 
Êags
);

620 
skù_bóc⁄
 = 
åue
;

622 
	`©h9k_£t_bóc⁄
(
sc
);

629 i‡(
cur_c⁄f
->
íabÀ_bóc⁄
 && !
skù_bóc⁄
)

630 
	`£t_bô
(
ATH_OP_BEACONS
, &
comm⁄
->
›_Êags
);

632 
	`˛ór_bô
(
ATH_OP_BEACONS
, &
comm⁄
->
›_Êags
);

634 
	}
}

636 
	$©h9k_£t_bóc⁄
(
©h_so·c
 *
sc
)

638 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

639 
©h_bóc⁄_c⁄fig
 *
cur_c⁄f
 = &
sc
->
cur_bóc⁄_c⁄f
;

641 
sc
->
sc_ah
->
›mode
) {

642 
NL80211_IFTYPE_AP
:

643 
NL80211_IFTYPE_MESH_POINT
:

644 
	`©h9k_bóc⁄_c⁄fig_≠
(
sc
, 
cur_c⁄f
);

646 
NL80211_IFTYPE_ADHOC
:

647 
	`©h9k_bóc⁄_c⁄fig_adhoc
(
sc
, 
cur_c⁄f
);

649 
NL80211_IFTYPE_STATION
:

650 
	`©h9k_bóc⁄_c⁄fig_°a
(
sc
->
sc_ah
, 
cur_c⁄f
);

653 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "Unsupported beaconing mode\n");

656 
	}
}

	@btcoex.c

17 
	~<löux/exp‹t.h
>

18 
	~"hw.h
"

20 
	e©h_bt_mode
 {

21 
	mATH_BT_COEX_MODE_LEGACY
,

22 
	mATH_BT_COEX_MODE_UNSLOTTED
,

23 
	mATH_BT_COEX_MODE_SLOTTED
,

24 
	mATH_BT_COEX_MODE_DISABLED
,

27 
	s©h_btc€x_c⁄fig
 {

28 
u8
 
	mbt_time_exãnd
;

29 
boﬁ
 
	mbt_tx°©e_exãnd
;

30 
boﬁ
 
	mbt_tx‰ame_exãnd
;

31 
©h_bt_mode
 
	mbt_mode
;

32 
boﬁ
 
	mbt_quõt_cﬁlisi⁄
;

33 
boﬁ
 
	mbt_rx˛ór_pﬁ¨ôy
;

34 
u8
 
	mbt_¥i‹ôy_time
;

35 
u8
 
	mbt_fú°_¶Ÿ_time
;

36 
boﬁ
 
	mbt_hﬁd_rx_˛ór
;

39 c⁄° 
u32
 
	g¨9003_wœn_weights
[
ATH_BTCOEX_STOMP_MAX
]

40 [
AR9300_NUM_WLAN_WEIGHTS
] = {

46 c⁄° 
u32
 
	gmci_wœn_weights
[
ATH_BTCOEX_STOMP_MAX
]

47 [
AR9300_NUM_WLAN_WEIGHTS
] = {

55 
	$©h9k_hw_öô_btc€x_hw
(
©h_hw
 *
ah
, 
qnum
)

57 
©h_btc€x_hw
 *
btc€x_hw
 = &
ah
->btcoex_hw;

58 c⁄° 
©h_btc€x_c⁄fig
 
©h_bt_c⁄fig
 = {

59 .
bt_time_exãnd
 = 0,

60 .
bt_tx°©e_exãnd
 = 
åue
,

61 .
bt_tx‰ame_exãnd
 = 
åue
,

62 .
bt_mode
 = 
ATH_BT_COEX_MODE_SLOTTED
,

63 .
bt_quõt_cﬁlisi⁄
 = 
åue
,

64 .
bt_rx˛ór_pﬁ¨ôy
 = 
åue
,

65 .
bt_¥i‹ôy_time
 = 2,

66 .
bt_fú°_¶Ÿ_time
 = 5,

67 .
bt_hﬁd_rx_˛ór
 = 
åue
,

69 
boﬁ
 
rx˛ór_pﬁ¨ôy
 = 
©h_bt_c⁄fig
.
bt_rx˛ór_pﬁ¨ôy
;

71 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
))

72 
rx˛ór_pﬁ¨ôy
 = !
©h_bt_c⁄fig
.
bt_rx˛ór_pﬁ¨ôy
;

74 
btc€x_hw
->
bt_c€x_mode
 =

75 (
btc€x_hw
->
bt_c€x_mode
 & 
AR_BT_QCU_THRESH
) |

76 
	`SM
(
©h_bt_c⁄fig
.
bt_time_exãnd
, 
AR_BT_TIME_EXTEND
) |

77 
	`SM
(
©h_bt_c⁄fig
.
bt_tx°©e_exãnd
, 
AR_BT_TXSTATE_EXTEND
) |

78 
	`SM
(
©h_bt_c⁄fig
.
bt_tx‰ame_exãnd
, 
AR_BT_TX_FRAME_EXTEND
) |

79 
	`SM
(
©h_bt_c⁄fig
.
bt_mode
, 
AR_BT_MODE
) |

80 
	`SM
(
©h_bt_c⁄fig
.
bt_quõt_cﬁlisi⁄
, 
AR_BT_QUIET
) |

81 
	`SM
(
rx˛ór_pﬁ¨ôy
, 
AR_BT_RX_CLEAR_POLARITY
) |

82 
	`SM
(
©h_bt_c⁄fig
.
bt_¥i‹ôy_time
, 
AR_BT_PRIORITY_TIME
) |

83 
	`SM
(
©h_bt_c⁄fig
.
bt_fú°_¶Ÿ_time
, 
AR_BT_FIRST_SLOT_TIME
) |

84 
	`SM
(
qnum
, 
AR_BT_QCU_THRESH
);

86 
btc€x_hw
->
bt_c€x_mode2
 =

87 
	`SM
(
©h_bt_c⁄fig
.
bt_hﬁd_rx_˛ór
, 
AR_BT_HOLD_RX_CLEAR
) |

88 
	`SM
(
ATH_BTCOEX_BMISS_THRESH
, 
AR_BT_BCN_MISS_THRESH
) |

89 
AR_BT_DISABLE_BT_ANT
;

90 
	}
}

91 
EXPORT_SYMBOL
(
©h9k_hw_öô_btc€x_hw
);

93 
	$©h9k_hw_btc€x_öô_scheme
(
©h_hw
 *
ah
)

95 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

96 
©h_btc€x_hw
 *
btc€x_hw
 = &
ah
->btcoex_hw;

101 i‡(!
comm⁄
->
btc€x_íabÀd
) {

102 
btc€x_hw
->
scheme
 = 
ATH_BTCOEX_CFG_NONE
;

106 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
)) {

107 
btc€x_hw
->
scheme
 = 
ATH_BTCOEX_CFG_3WIRE
;

108 
btc€x_hw
->
bè˘ive_gpio
 = 
ATH_BTACTIVE_GPIO_9300
;

109 
btc€x_hw
->
wœ«˘ive_gpio
 = 
ATH_WLANACTIVE_GPIO_9300
;

110 
btc€x_hw
->
bçri‹ôy_gpio
 = 
ATH_BTPRIORITY_GPIO_9300
;

111 } i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
)) {

112 
btc€x_hw
->
bè˘ive_gpio
 = 
ATH_BTACTIVE_GPIO_9280
;

113 
btc€x_hw
->
wœ«˘ive_gpio
 = 
ATH_WLANACTIVE_GPIO_9280
;

115 i‡(
	`AR_SREV_9285
(
ah
)) {

116 
btc€x_hw
->
scheme
 = 
ATH_BTCOEX_CFG_3WIRE
;

117 
btc€x_hw
->
bçri‹ôy_gpio
 = 
ATH_BTPRIORITY_GPIO_9285
;

119 
btc€x_hw
->
scheme
 = 
ATH_BTCOEX_CFG_2WIRE
;

122 
	}
}

123 
EXPORT_SYMBOL
(
©h9k_hw_btc€x_öô_scheme
);

125 
	$©h9k_hw_btc€x_öô_2wúe
(
©h_hw
 *
ah
)

127 
©h_btc€x_hw
 *
btc€x_hw
 = &
ah
->btcoex_hw;

130 
	`REG_CLR_BIT
(
ah
, 
AR_GPIO_INPUT_EN_VAL
,

131 (
AR_GPIO_INPUT_EN_VAL_BT_PRIORITY_DEF
 |

132 
AR_GPIO_INPUT_EN_VAL_BT_FREQUENCY_DEF
));

134 
	`REG_SET_BIT
(
ah
, 
AR_GPIO_INPUT_EN_VAL
,

135 
AR_GPIO_INPUT_EN_VAL_BT_ACTIVE_BB
);

138 
	`REG_RMW_FIELD
(
ah
, 
AR_GPIO_INPUT_MUX1
,

139 
AR_GPIO_INPUT_MUX1_BT_ACTIVE
,

140 
btc€x_hw
->
bè˘ive_gpio
);

143 
	`©h9k_hw_cfg_gpio_öput
(
ah
, 
btc€x_hw
->
bè˘ive_gpio
);

144 
	}
}

145 
EXPORT_SYMBOL
(
©h9k_hw_btc€x_öô_2wúe
);

147 
	$©h9k_hw_btc€x_öô_3wúe
(
©h_hw
 *
ah
)

149 
©h_btc€x_hw
 *
btc€x_hw
 = &
ah
->btcoex_hw;

152 
	`REG_SET_BIT
(
ah
, 
AR_GPIO_INPUT_EN_VAL
,

153 (
AR_GPIO_INPUT_EN_VAL_BT_PRIORITY_BB
 |

154 
AR_GPIO_INPUT_EN_VAL_BT_ACTIVE_BB
));

158 
	`REG_RMW_FIELD
(
ah
, 
AR_GPIO_INPUT_MUX1
,

159 
AR_GPIO_INPUT_MUX1_BT_ACTIVE
,

160 
btc€x_hw
->
bè˘ive_gpio
);

162 
	`REG_RMW_FIELD
(
ah
, 
AR_GPIO_INPUT_MUX1
,

163 
AR_GPIO_INPUT_MUX1_BT_PRIORITY
,

164 
btc€x_hw
->
bçri‹ôy_gpio
);

168 
	`©h9k_hw_cfg_gpio_öput
(
ah
, 
btc€x_hw
->
bè˘ive_gpio
);

169 
	`©h9k_hw_cfg_gpio_öput
(
ah
, 
btc€x_hw
->
bçri‹ôy_gpio
);

170 
	}
}

171 
EXPORT_SYMBOL
(
©h9k_hw_btc€x_öô_3wúe
);

173 
	$©h9k_hw_btc€x_öô_mci
(
©h_hw
 *
ah
)

175 
ah
->
btc€x_hw
.
mci
.
ªady
 = 
Ál£
;

176 
ah
->
btc€x_hw
.
mci
.
bt_°©e
 = 0;

177 
ah
->
btc€x_hw
.
mci
.
bt_vî_maj‹
 = 3;

178 
ah
->
btc€x_hw
.
mci
.
bt_vî_mö‹
 = 0;

179 
ah
->
btc€x_hw
.
mci
.
bt_vîsi⁄_known
 = 
Ál£
;

180 
ah
->
btc€x_hw
.
mci
.
upd©e_2g5g
 = 
åue
;

181 
ah
->
btc€x_hw
.
mci
.
is_2g
 = 
åue
;

182 
ah
->
btc€x_hw
.
mci
.
wœn_ch™√ls_upd©e
 = 
Ál£
;

183 
ah
->
btc€x_hw
.
mci
.
wœn_ch™√ls
[0] = 0x00000000;

184 
ah
->
btc€x_hw
.
mci
.
wœn_ch™√ls
[1] = 0xffffffff;

185 
ah
->
btc€x_hw
.
mci
.
wœn_ch™√ls
[2] = 0xffffffff;

186 
ah
->
btc€x_hw
.
mci
.
wœn_ch™√ls
[3] = 0x7fffffff;

187 
ah
->
btc€x_hw
.
mci
.
quîy_bt
 = 
åue
;

188 
ah
->
btc€x_hw
.
mci
.
unhÆt_bt_gpm
 = 
åue
;

189 
ah
->
btc€x_hw
.
mci
.
hÆãd_bt_gpm
 = 
Ál£
;

190 
ah
->
btc€x_hw
.
mci
.
√ed_Êush_btöfo
 = 
Ál£
;

191 
ah
->
btc€x_hw
.
mci
.
wœn_ˇl_£q
 = 0;

192 
ah
->
btc€x_hw
.
mci
.
wœn_ˇl_d⁄e
 = 0;

193 
ah
->
btc€x_hw
.
mci
.
c⁄fig
 = (
	`AR_SREV_9462
(ah)) ? 0x2201 : 0xa4c1;

194 
	}
}

195 
EXPORT_SYMBOL
(
©h9k_hw_btc€x_öô_mci
);

197 
	$©h9k_hw_btc€x_íabÀ_2wúe
(
©h_hw
 *
ah
)

199 
©h_btc€x_hw
 *
btc€x_hw
 = &
ah
->btcoex_hw;

202 
	`©h9k_hw_cfg_ouçut
(
ah
, 
btc€x_hw
->
wœ«˘ive_gpio
,

203 
AR_GPIO_OUTPUT_MUX_AS_TX_FRAME
);

204 
	}
}

210 
	$©h9k_hw_btc€x_£t_weight
(
©h_hw
 *
ah
,

211 
u32
 
bt_weight
,

212 
u32
 
wœn_weight
,

213 
©h_°omp_ty≥
 
°omp_ty≥
)

215 
©h_btc€x_hw
 *
btc€x_hw
 = &
ah
->btcoex_hw;

216 
©h9k_hw_mci
 *
mci_hw
 = &
ah
->
btc€x_hw
.
mci
;

217 
u8
 
tx¥io_shi·
[] = { 24, 16, 16, 0 };

218 
boﬁ
 
c⁄cur_tx
 = (
mci_hw
->c⁄cur_tx && 
btc€x_hw
->
tx_¥io
[
°omp_ty≥
]);

219 c⁄° 
u32
 *
weight
 = 
¨9003_wœn_weights
[
°omp_ty≥
];

220 
i
;

222 i‡(!
	`AR_SREV_9300_20_OR_LATER
(
ah
)) {

223 
btc€x_hw
->
bt_c€x_weights
 =

224 
	`SM
(
bt_weight
, 
AR_BTCOEX_BT_WGHT
) |

225 
	`SM
(
wœn_weight
, 
AR_BTCOEX_WL_WGHT
);

229 i‡(
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9565
(ah)) {

230 
©h_°omp_ty≥
 
°y≥
 =

231 ((
°omp_ty≥
 =
ATH_BTCOEX_STOMP_LOW
) &&

232 
btc€x_hw
->
mci
.
°omp_·p
) ?

233 
ATH_BTCOEX_STOMP_LOW_FTP
 : 
°omp_ty≥
;

234 
weight
 = 
mci_wœn_weights
[
°y≥
];

237 
i
 = 0; i < 
AR9300_NUM_WLAN_WEIGHTS
; i++) {

238 
btc€x_hw
->
bt_weight
[
i
] = 
AR9300_BT_WGHT
;

239 
btc€x_hw
->
wœn_weight
[
i
] = 
weight
[i];

240 i‡(
c⁄cur_tx
 && 
i
) {

241 
btc€x_hw
->
wœn_weight
[
i
] &=

242 ~(0xf‡<< 
tx¥io_shi·
[
i
-1]);

243 
btc€x_hw
->
wœn_weight
[
i
] |=

244 (
btc€x_hw
->
tx_¥io
[
°omp_ty≥
] <<

245 
tx¥io_shi·
[
i
-1]);

249 i‡(
c⁄cur_tx
) {

250 
btc€x_hw
->
wœn_weight
[
i
-1] &~(0xf‡<< 
tx¥io_shi·
[i-1]);

251 
btc€x_hw
->
wœn_weight
[
i
-1] |(btc€x_hw->
tx_¥io
[
°omp_ty≥
]

252 << 
tx¥io_shi·
[
i
-1]);

255 
	}
}

256 
EXPORT_SYMBOL
(
©h9k_hw_btc€x_£t_weight
);

259 
	$©h9k_hw_btc€x_íabÀ_3wúe
(
©h_hw
 *
ah
)

261 
©h_btc€x_hw
 *
btc€x
 = &
ah
->
btc€x_hw
;

262 
u32
 
vÆ
;

263 
i
;

269 
	`REG_WRITE
(
ah
, 
AR_BT_COEX_MODE
, 
btc€x
->
bt_c€x_mode
);

270 
	`REG_WRITE
(
ah
, 
AR_BT_COEX_MODE2
, 
btc€x
->
bt_c€x_mode2
);

273 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
)) {

274 
	`REG_WRITE
(
ah
, 
AR_BT_COEX_WL_WEIGHTS0
, 
btc€x
->
wœn_weight
[0]);

275 
	`REG_WRITE
(
ah
, 
AR_BT_COEX_WL_WEIGHTS1
, 
btc€x
->
wœn_weight
[1]);

276 
i
 = 0; i < 
AR9300_NUM_BT_WEIGHTS
; i++)

277 
	`REG_WRITE
(
ah
, 
	`AR_BT_COEX_BT_WEIGHTS
(
i
),

278 
btc€x
->
bt_weight
[
i
]);

280 
	`REG_WRITE
(
ah
, 
AR_BT_COEX_WEIGHT
, 
btc€x
->
bt_c€x_weights
);

284 i‡(
	`AR_SREV_9271
(
ah
)) {

285 
vÆ
 = 
	`REG_READ
(
ah
, 0x50040);

286 
vÆ
 &= 0xFFFFFEFF;

287 
	`REG_WRITE
(
ah
, 0x50040, 
vÆ
);

290 
	`REG_RMW_FIELD
(
ah
, 
AR_QUIET1
, 
AR_QUIET1_QUIET_ACK_CTS_ENABLE
, 1);

291 
	`REG_RMW_FIELD
(
ah
, 
AR_PCU_MISC
, 
AR_PCU_BT_ANT_PREVENT_RX
, 0);

293 
	`©h9k_hw_cfg_ouçut
(
ah
, 
btc€x
->
wœ«˘ive_gpio
,

294 
AR_GPIO_OUTPUT_MUX_AS_RX_CLEAR_EXTERNAL
);

295 
	}
}

297 
	$©h9k_hw_btc€x_íabÀ_mci
(
©h_hw
 *
ah
)

299 
©h_btc€x_hw
 *
btc€x
 = &
ah
->
btc€x_hw
;

300 
i
;

302 
i
 = 0; i < 
AR9300_NUM_BT_WEIGHTS
; i++)

303 
	`REG_WRITE
(
ah
, 
	`AR_MCI_COEX_WL_WEIGHTS
(
i
),

304 
btc€x
->
wœn_weight
[
i
]);

306 
	`REG_RMW_FIELD
(
ah
, 
AR_QUIET1
, 
AR_QUIET1_QUIET_ACK_CTS_ENABLE
, 1);

307 
btc€x
->
íabÀd
 = 
åue
;

308 
	}
}

310 
	$©h9k_hw_btc€x_íabÀ
(
©h_hw
 *
ah
)

312 
©h_btc€x_hw
 *
btc€x_hw
 = &
ah
->btcoex_hw;

314 
	`©h9k_hw_gë_btc€x_scheme
(
ah
)) {

315 
ATH_BTCOEX_CFG_NONE
:

317 
ATH_BTCOEX_CFG_2WIRE
:

318 
	`©h9k_hw_btc€x_íabÀ_2wúe
(
ah
);

320 
ATH_BTCOEX_CFG_3WIRE
:

321 i‡(
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9565
(ah)) {

322 
	`©h9k_hw_btc€x_íabÀ_mci
(
ah
);

325 
	`©h9k_hw_btc€x_íabÀ_3wúe
(
ah
);

329 
	`REG_RMW
(
ah
, 
AR_GPIO_PDPU
,

330 (0x2 << (
btc€x_hw
->
bè˘ive_gpio
 * 2)),

331 (0x3 << (
btc€x_hw
->
bè˘ive_gpio
 * 2)));

333 
ah
->
btc€x_hw
.
íabÀd
 = 
åue
;

334 
	}
}

335 
EXPORT_SYMBOL
(
©h9k_hw_btc€x_íabÀ
);

337 
	$©h9k_hw_btc€x_dißbÀ
(
©h_hw
 *
ah
)

339 
©h_btc€x_hw
 *
btc€x_hw
 = &
ah
->btcoex_hw;

340 
i
;

342 
btc€x_hw
->
íabÀd
 = 
Ál£
;

343 i‡(
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9565
(ah)) {

344 
	`©h9k_hw_btc€x_bt_°omp
(
ah
, 
ATH_BTCOEX_STOMP_NONE
);

345 
i
 = 0; i < 
AR9300_NUM_BT_WEIGHTS
; i++)

346 
	`REG_WRITE
(
ah
, 
	`AR_MCI_COEX_WL_WEIGHTS
(
i
),

347 
btc€x_hw
->
wœn_weight
[
i
]);

350 
	`©h9k_hw_£t_gpio
(
ah
, 
btc€x_hw
->
wœ«˘ive_gpio
, 0);

352 
	`©h9k_hw_cfg_ouçut
(
ah
, 
btc€x_hw
->
wœ«˘ive_gpio
,

353 
AR_GPIO_OUTPUT_MUX_AS_OUTPUT
);

355 i‡(
btc€x_hw
->
scheme
 =
ATH_BTCOEX_CFG_3WIRE
) {

356 
	`REG_WRITE
(
ah
, 
AR_BT_COEX_MODE
, 
AR_BT_QUIET
 | 
AR_BT_MODE
);

357 
	`REG_WRITE
(
ah
, 
AR_BT_COEX_MODE2
, 0);

359 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
)) {

360 
	`REG_WRITE
(
ah
, 
AR_BT_COEX_WL_WEIGHTS0
, 0);

361 
	`REG_WRITE
(
ah
, 
AR_BT_COEX_WL_WEIGHTS1
, 0);

362 
i
 = 0; i < 
AR9300_NUM_BT_WEIGHTS
; i++)

363 
	`REG_WRITE
(
ah
, 
	`AR_BT_COEX_BT_WEIGHTS
(
i
), 0);

365 
	`REG_WRITE
(
ah
, 
AR_BT_COEX_WEIGHT
, 0);

368 
	}
}

369 
EXPORT_SYMBOL
(
©h9k_hw_btc€x_dißbÀ
);

374 
	$©h9k_hw_btc€x_bt_°omp
(
©h_hw
 *
ah
,

375 
©h_°omp_ty≥
 
°omp_ty≥
)

377 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
)) {

378 
	`©h9k_hw_btc€x_£t_weight
(
ah
, 0, 0, 
°omp_ty≥
);

382 
°omp_ty≥
) {

383 
ATH_BTCOEX_STOMP_ALL
:

384 
	`©h9k_hw_btc€x_£t_weight
(
ah
, 
AR_BT_COEX_WGHT
,

385 
AR_STOMP_ALL_WLAN_WGHT
, 0);

387 
ATH_BTCOEX_STOMP_LOW
:

388 
	`©h9k_hw_btc€x_£t_weight
(
ah
, 
AR_BT_COEX_WGHT
,

389 
AR_STOMP_LOW_WLAN_WGHT
, 0);

391 
ATH_BTCOEX_STOMP_NONE
:

392 
	`©h9k_hw_btc€x_£t_weight
(
ah
, 
AR_BT_COEX_WGHT
,

393 
AR_STOMP_NONE_WLAN_WGHT
, 0);

396 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
BTCOEX
, "Invalid Stomptype\n");

399 
	}
}

400 
EXPORT_SYMBOL
(
©h9k_hw_btc€x_bt_°omp
);

402 
	$©h9k_hw_btc€x_£t_c⁄cur_tx¥io
(
©h_hw
 *
ah
, 
u8
 *
°omp_tx¥io
)

404 
©h_btc€x_hw
 *
btc€x
 = &
ah
->
btc€x_hw
;

405 
i
;

407 
i
 = 0; i < 
ATH_BTCOEX_STOMP_MAX
; i++)

408 
btc€x
->
tx_¥io
[
i
] = 
°omp_tx¥io
[i];

409 
	}
}

410 
EXPORT_SYMBOL
(
©h9k_hw_btc€x_£t_c⁄cur_tx¥io
);

	@btcoex.h

17 #i‚de‡
BTCOEX_H


18 
	#BTCOEX_H


	)

20 
	~"hw.h
"

22 
	#ATH_WLANACTIVE_GPIO_9280
 5

	)

23 
	#ATH_BTACTIVE_GPIO_9280
 6

	)

24 
	#ATH_BTPRIORITY_GPIO_9285
 7

	)

26 
	#ATH_WLANACTIVE_GPIO_9300
 5

	)

27 
	#ATH_BTACTIVE_GPIO_9300
 4

	)

28 
	#ATH_BTPRIORITY_GPIO_9300
 8

	)

30 
	#ATH_BTCOEX_DEF_BT_PERIOD
 45

	)

31 
	#ATH_BTCOEX_DEF_DUTY_CYCLE
 55

	)

32 
	#ATH_BTCOEX_BTSCAN_DUTY_CYCLE
 90

	)

33 
	#ATH_BTCOEX_BMISS_THRESH
 50

	)

35 
	#ATH_BT_PRIORITY_TIME_THRESHOLD
 1000

	)

36 
	#ATH_BT_CNT_THRESHOLD
 3

	)

37 
	#ATH_BT_CNT_SCAN_THRESHOLD
 15

	)

39 
	#ATH_BTCOEX_RX_WAIT_TIME
 100

	)

40 
	#ATH_BTCOEX_STOMP_FTP_THRESH
 5

	)

42 
	#ATH_BTCOEX_HT20_MAX_TXPOWER
 0x14

	)

43 
	#ATH_BTCOEX_HT40_MAX_TXPOWER
 0x10

	)

45 
	#AR9300_NUM_BT_WEIGHTS
 4

	)

46 
	#AR9300_NUM_WLAN_WEIGHTS
 4

	)

48 
	e©h_°omp_ty≥
 {

49 
	mATH_BTCOEX_STOMP_ALL
,

50 
	mATH_BTCOEX_STOMP_LOW
,

51 
	mATH_BTCOEX_STOMP_NONE
,

52 
	mATH_BTCOEX_STOMP_LOW_FTP
,

53 
	mATH_BTCOEX_STOMP_AUDIO
,

54 
	mATH_BTCOEX_STOMP_MAX


57 
	e©h_btc€x_scheme
 {

58 
	mATH_BTCOEX_CFG_NONE
,

59 
	mATH_BTCOEX_CFG_2WIRE
,

60 
	mATH_BTCOEX_CFG_3WIRE
,

63 
	s©h9k_hw_mci
 {

64 
u32
 
	møw_öå
;

65 
u32
 
	mrx_msg_öå
;

66 
u32
 
	mc⁄t_°©us
;

67 
u32
 
	mgpm_addr
;

68 
u32
 
	mgpm_Àn
;

69 
u32
 
	mgpm_idx
;

70 
u32
 
	msched_addr
;

71 
u32
 
	mwœn_ch™√ls
[4];

72 
u32
 
	mwœn_ˇl_£q
;

73 
u32
 
	mwœn_ˇl_d⁄e
;

74 
u32
 
	mc⁄fig
;

75 
u8
 *
	mgpm_buf
;

76 
boﬁ
 
	mªady
;

77 
boﬁ
 
	mupd©e_2g5g
;

78 
boﬁ
 
	mis_2g
;

79 
boﬁ
 
	mquîy_bt
;

80 
boﬁ
 
	munhÆt_bt_gpm
;

81 
boﬁ
 
	mhÆãd_bt_gpm
;

82 
boﬁ
 
	m√ed_Êush_btöfo
;

83 
boﬁ
 
	mbt_vîsi⁄_known
;

84 
boﬁ
 
	mwœn_ch™√ls_upd©e
;

85 
u8
 
	mwœn_vî_maj‹
;

86 
u8
 
	mwœn_vî_mö‹
;

87 
u8
 
	mbt_vî_maj‹
;

88 
u8
 
	mbt_vî_mö‹
;

89 
u8
 
	mbt_°©e
;

90 
u8
 
	m°omp_·p
;

91 
boﬁ
 
	mc⁄cur_tx
;

92 
u32
 
	mœ°_ªcovîy
;

95 
	s©h_btc€x_hw
 {

96 
©h_btc€x_scheme
 
	mscheme
;

97 
©h9k_hw_mci
 
	mmci
;

98 
boﬁ
 
	míabÀd
;

99 
u8
 
	mwœ«˘ive_gpio
;

100 
u8
 
	mbè˘ive_gpio
;

101 
u8
 
	mbçri‹ôy_gpio
;

102 
u32
 
	mbt_c€x_mode
;

103 
u32
 
	mbt_c€x_weights
;

104 
u32
 
	mbt_c€x_mode2
;

105 
u32
 
	mbt_weight
[
AR9300_NUM_BT_WEIGHTS
];

106 
u32
 
	mwœn_weight
[
AR9300_NUM_WLAN_WEIGHTS
];

107 
u8
 
	mtx_¥io
[
ATH_BTCOEX_STOMP_MAX
];

110 
©h9k_hw_btc€x_öô_scheme
(
©h_hw
 *
ah
);

111 
©h9k_hw_btc€x_öô_2wúe
(
©h_hw
 *
ah
);

112 
©h9k_hw_btc€x_öô_3wúe
(
©h_hw
 *
ah
);

113 
©h9k_hw_btc€x_öô_mci
(
©h_hw
 *
ah
);

114 
©h9k_hw_öô_btc€x_hw
(
©h_hw
 *
ah
, 
qnum
);

115 
©h9k_hw_btc€x_£t_weight
(
©h_hw
 *
ah
,

116 
u32
 
bt_weight
,

117 
u32
 
wœn_weight
,

118 
©h_°omp_ty≥
 
°omp_ty≥
);

119 
©h9k_hw_btc€x_dißbÀ
(
©h_hw
 *
ah
);

120 
©h9k_hw_btc€x_bt_°omp
(
©h_hw
 *
ah
,

121 
©h_°omp_ty≥
 
°omp_ty≥
);

122 
©h9k_hw_btc€x_£t_c⁄cur_tx¥io
(
©h_hw
 *
ah
, 
u8
 *
°omp_tx¥io
);

	@calib.c

17 
	~"hw.h
"

18 
	~"hw-›s.h
"

19 
	~<löux/exp‹t.h
>

24 
öt16_t
 
	$©h9k_hw_gë_nf_hi°_mid
(
öt16_t
 *
nfCÆBuf„r
)

26 
öt16_t
 
nfvÆ
;

27 
öt16_t
 
s‹t
[
ATH9K_NF_CAL_HIST_MAX
];

28 
i
, 
j
;

30 
i
 = 0; i < 
ATH9K_NF_CAL_HIST_MAX
; i++)

31 
s‹t
[
i
] = 
nfCÆBuf„r
[i];

33 
i
 = 0; i < 
ATH9K_NF_CAL_HIST_MAX
 - 1; i++) {

34 
j
 = 1; j < 
ATH9K_NF_CAL_HIST_MAX
 - 
i
; j++) {

35 i‡(
s‹t
[
j
] > sort[j - 1]) {

36 
nfvÆ
 = 
s‹t
[
j
];

37 
s‹t
[
j
] = sort[j - 1];

38 
s‹t
[
j
 - 1] = 
nfvÆ
;

42 
nfvÆ
 = 
s‹t
[(
ATH9K_NF_CAL_HIST_MAX
 - 1) >> 1];

44  
nfvÆ
;

45 
	}
}

47 
©h_nf_limôs
 *
	$©h9k_hw_gë_nf_limôs
(
©h_hw
 *
ah
,

48 
©h9k_ch™√l
 *
ch™
)

50 
©h_nf_limôs
 *
limô
;

52 i‡(!
ch™
 || 
	`IS_CHAN_2GHZ
(chan))

53 
limô
 = &
ah
->
nf_2g
;

55 
limô
 = &
ah
->
nf_5g
;

57  
limô
;

58 
	}
}

60 
s16
 
	$©h9k_hw_gë_deÁu…_nf
(
©h_hw
 *
ah
,

61 
©h9k_ch™√l
 *
ch™
)

63  
	`©h9k_hw_gë_nf_limôs
(
ah
, 
ch™
)->
nomöÆ
;

64 
	}
}

66 
s16
 
	$©h9k_hw_gëch™_noi£
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
,

67 
s16
 
nf
)

69 
s8
 
noi£
 = 
ATH_DEFAULT_NOISE_FLOOR
;

71 i‡(
nf
) {

72 
s8
 
dñè
 = 
nf
 - 
ATH9K_NF_CAL_NOISE_THRESH
 -

73 
	`©h9k_hw_gë_deÁu…_nf
(
ah
, 
ch™
);

74 i‡(
dñè
 > 0)

75 
noi£
 +
dñè
;

77  
noi£
;

78 
	}
}

79 
EXPORT_SYMBOL
(
©h9k_hw_gëch™_noi£
);

81 
	$©h9k_hw_upd©e_nfˇl_hi°_buf„r
(
©h_hw
 *
ah
,

82 
©h9k_hw_ˇl_d©a
 *
ˇl
,

83 
öt16_t
 *
nÁºay
)

85 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

86 
©h_nf_limôs
 *
limô
;

87 
©h9k_nfˇl_hi°
 *
h
;

88 
boﬁ
 
high_nf_mid
 = 
Ál£
;

89 
u8
 
chaömask
 = (
ah
->
rxchaömask
 << 3) |áh->rxchainmask;

90 
i
;

92 
h
 = 
ˇl
->
nfCÆHi°
;

93 
limô
 = 
	`©h9k_hw_gë_nf_limôs
(
ah
,áh->
curch™
);

95 
i
 = 0; i < 
NUM_NF_READINGS
; i++) {

96 i‡(!(
chaömask
 & (1 << 
i
)) ||

97 ((
i
 >
AR5416_MAX_CHAINS
Ë&& !
	`IS_CHAN_HT40
(
ah
->
curch™
)))

100 
h
[
i
].
nfCÆBuf„r
[h[i].
cuºIndex
] = 
nÁºay
[i];

102 i‡(++
h
[
i
].
cuºIndex
 >
ATH9K_NF_CAL_HIST_MAX
)

103 
h
[
i
].
cuºIndex
 = 0;

105 i‡(
h
[
i
].
övÆidNFcou¡
 > 0) {

106 
h
[
i
].
övÆidNFcou¡
--;

107 
h
[
i
].
¥ivNF
 = 
nÁºay
[i];

109 
h
[
i
].
¥ivNF
 =

110 
	`©h9k_hw_gë_nf_hi°_mid
(
h
[
i
].
nfCÆBuf„r
);

113 i‡(!
h
[
i
].
¥ivNF
)

116 i‡(
h
[
i
].
¥ivNF
 > 
limô
->
max
) {

117 
high_nf_mid
 = 
åue
;

119 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

121 
i
, 
h
[i].
¥ivNF
, 
limô
->
max
,

122 (
	`ã°_bô
(
NFCAL_INTF
, &
ˇl
->
ˇl_Êags
) ?

133 i‡(!
	`ã°_bô
(
NFCAL_INTF
, &
ˇl
->
ˇl_Êags
))

134 
h
[
i
].
¥ivNF
 = 
limô
->
max
;

143 i‡(!
high_nf_mid
)

144 
	`˛ór_bô
(
NFCAL_INTF
, &
ˇl
->
ˇl_Êags
);

145 
	}
}

147 
boﬁ
 
	$©h9k_hw_gë_nf_thªsh
(
©h_hw
 *
ah
,

148 
õì80211_b™d
 
b™d
,

149 
öt16_t
 *
n·
)

151 
b™d
) {

152 
IEEE80211_BAND_5GHZ
:

153 *
n·
 = (
öt8_t
)
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_NFTHRESH_5
);

155 
IEEE80211_BAND_2GHZ
:

156 *
n·
 = (
öt8_t
)
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_NFTHRESH_2
);

159 
	`BUG_ON
(1);

160  
Ál£
;

163  
åue
;

164 
	}
}

166 
	$©h9k_hw_ª£t_ˇlibøti⁄
(
©h_hw
 *
ah
,

167 
©h9k_ˇl_li°
 *
cuºCÆ
)

169 
i
;

171 
	`©h9k_hw_£tup_ˇlibøti⁄
(
ah
, 
cuºCÆ
);

173 
cuºCÆ
->
ˇlSèã
 = 
CAL_RUNNING
;

175 
i
 = 0; i < 
AR5416_MAX_CHAINS
; i++) {

176 
ah
->
mós0
.
sign
[
i
] = 0;

177 
ah
->
mós1
.
sign
[
i
] = 0;

178 
ah
->
mós2
.
sign
[
i
] = 0;

179 
ah
->
mós3
.
sign
[
i
] = 0;

182 
ah
->
ˇl_ßm∂es
 = 0;

183 
	}
}

186 
boﬁ
 
	$©h9k_hw_ª£t_ˇlvÆid
(
©h_hw
 *
ah
)

188 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

189 
©h9k_ˇl_li°
 *
cuºCÆ
 = 
ah
->
ˇl_li°_cuº
;

191 i‡(!
ah
->
ˇld©a
)

192  
åue
;

194 i‡(!
	`AR_SREV_9100
(
ah
Ë&& !
	`AR_SREV_9160_10_OR_LATER
(ah))

195  
åue
;

197 i‡(
cuºCÆ
 =
NULL
)

198  
åue
;

200 i‡(
cuºCÆ
->
ˇlSèã
 !
CAL_DONE
) {

201 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "Calibration state incorrect, %d\n",

202 
cuºCÆ
->
ˇlSèã
);

203  
åue
;

206 i‡(!(
ah
->
suµ_ˇls
 & 
cuºCÆ
->
ˇlD©a
->
ˇlTy≥
))

207  
åue
;

209 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "Resetting Cal %d state for channel %u\n",

210 
cuºCÆ
->
ˇlD©a
->
ˇlTy≥
, 
ah
->
curch™
->
ch™
->
˚¡î_‰eq
);

212 
ah
->
ˇld©a
->
CÆVÆid
 &~
cuºCÆ
->
ˇlD©a
->
ˇlTy≥
;

213 
cuºCÆ
->
ˇlSèã
 = 
CAL_WAITING
;

215  
Ál£
;

216 
	}
}

217 
EXPORT_SYMBOL
(
©h9k_hw_ª£t_ˇlvÆid
);

219 
	$©h9k_hw_°¨t_nfˇl
(
©h_hw
 *
ah
, 
boﬁ
 
upd©e
)

221 i‡(
ah
->
ˇld©a
)

222 
	`£t_bô
(
NFCAL_PENDING
, &
ah
->
ˇld©a
->
ˇl_Êags
);

224 
	`REG_SET_BIT
(
ah
, 
AR_PHY_AGC_CONTROL
,

225 
AR_PHY_AGC_CONTROL_ENABLE_NF
);

227 i‡(
upd©e
)

228 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_AGC_CONTROL
,

229 
AR_PHY_AGC_CONTROL_NO_UPDATE_NF
);

231 
	`REG_SET_BIT
(
ah
, 
AR_PHY_AGC_CONTROL
,

232 
AR_PHY_AGC_CONTROL_NO_UPDATE_NF
);

234 
	`REG_SET_BIT
(
ah
, 
AR_PHY_AGC_CONTROL
, 
AR_PHY_AGC_CONTROL_NF
);

235 
	}
}

237 
	$©h9k_hw_lﬂdnf
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
)

239 
©h9k_nfˇl_hi°
 *
h
 = 
NULL
;

240 
i
, 
j
;

241 
öt32_t
 
vÆ
;

242 
u8
 
chaömask
 = (
ah
->
rxchaömask
 << 3) |áh->rxchainmask;

243 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

244 
s16
 
deÁu…_nf
 = 
	`©h9k_hw_gë_deÁu…_nf
(
ah
, 
ch™
);

246 i‡(
ah
->
ˇld©a
)

247 
h
 = 
ah
->
ˇld©a
->
nfCÆHi°
;

249 
i
 = 0; i < 
NUM_NF_READINGS
; i++) {

250 i‡(
chaömask
 & (1 << 
i
)) {

251 
s16
 
nfvÆ
;

253 i‡((
i
 >
AR5416_MAX_CHAINS
Ë&& !
	`IS_CHAN_HT40
(
ch™
))

256 i‡(
h
)

257 
nfvÆ
 = 
h
[
i
].
¥ivNF
;

259 
nfvÆ
 = 
deÁu…_nf
;

261 
vÆ
 = 
	`REG_READ
(
ah
,áh->
nf_ªgs
[
i
]);

262 
vÆ
 &= 0xFFFFFE00;

263 
vÆ
 |(((
u32
Ë
nfvÆ
 << 1) & 0x1ff);

264 
	`REG_WRITE
(
ah
,áh->
nf_ªgs
[
i
], 
vÆ
);

272 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_AGC_CONTROL
,

273 
AR_PHY_AGC_CONTROL_ENABLE_NF
);

274 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_AGC_CONTROL
,

275 
AR_PHY_AGC_CONTROL_NO_UPDATE_NF
);

276 
	`REG_SET_BIT
(
ah
, 
AR_PHY_AGC_CONTROL
, 
AR_PHY_AGC_CONTROL_NF
);

284 
j
 = 0; j < 10000; j++) {

285 i‡((
	`REG_READ
(
ah
, 
AR_PHY_AGC_CONTROL
) &

286 
AR_PHY_AGC_CONTROL_NF
) == 0)

288 
	`udñay
(10);

300 i‡(
j
 == 10000) {

301 
	`©h_dbg
(
comm⁄
, 
ANY
,

303 
	`REG_READ
(
ah
, 
AR_PHY_AGC_CONTROL
));

304  -
ETIMEDOUT
;

312 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

313 
i
 = 0; i < 
NUM_NF_READINGS
; i++) {

314 i‡(
chaömask
 & (1 << 
i
)) {

315 i‡((
i
 >
AR5416_MAX_CHAINS
Ë&& !
	`IS_CHAN_HT40
(
ch™
))

318 
vÆ
 = 
	`REG_READ
(
ah
,áh->
nf_ªgs
[
i
]);

319 
vÆ
 &= 0xFFFFFE00;

320 
vÆ
 |(((
u32
) (-50) << 1) & 0x1ff);

321 
	`REG_WRITE
(
ah
,áh->
nf_ªgs
[
i
], 
vÆ
);

324 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

327 
	}
}

330 
	$©h9k_hw_nf_ßnôize
(
©h_hw
 *
ah
, 
s16
 *
nf
)

332 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

333 
©h_nf_limôs
 *
limô
;

334 
i
;

336 i‡(
	`IS_CHAN_2GHZ
(
ah
->
curch™
))

337 
limô
 = &
ah
->
nf_2g
;

339 
limô
 = &
ah
->
nf_5g
;

341 
i
 = 0; i < 
NUM_NF_READINGS
; i++) {

342 i‡(!
nf
[
i
])

345 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

347 (
i
 >3 ? "ext" : "˘l"), i % 3, 
nf
[i]);

349 i‡(
nf
[
i
] > 
limô
->
max
) {

350 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

352 
i
, 
nf
[i], 
limô
->
max
);

353 
nf
[
i
] = 
limô
->
max
;

354 } i‡(
nf
[
i
] < 
limô
->
mö
) {

355 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

357 
i
, 
nf
[i], 
limô
->
mö
);

358 
nf
[
i
] = 
limô
->
nomöÆ
;

361 
	}
}

363 
boﬁ
 
	$©h9k_hw_gënf
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
)

365 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

366 
öt16_t
 
nf
, 
nfThªsh
;

367 
öt16_t
 
nÁºay
[
NUM_NF_READINGS
] = { 0 };

368 
©h9k_nfˇl_hi°
 *
h
;

369 
õì80211_ch™√l
 *
c
 = 
ch™
->chan;

370 
©h9k_hw_ˇl_d©a
 *
ˇld©a
 = 
ah
->caldata;

372 i‡(
	`REG_READ
(
ah
, 
AR_PHY_AGC_CONTROL
Ë& 
AR_PHY_AGC_CONTROL_NF
) {

373 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

375  
Ál£
;

378 
	`©h9k_hw_do_gënf
(
ah
, 
nÁºay
);

379 
	`©h9k_hw_nf_ßnôize
(
ah
, 
nÁºay
);

380 
nf
 = 
nÁºay
[0];

381 i‡(
	`©h9k_hw_gë_nf_thªsh
(
ah
, 
c
->
b™d
, &
nfThªsh
)

382 && 
nf
 > 
nfThªsh
) {

383 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

385 
nf
, 
nfThªsh
);

388 i‡(!
ˇld©a
) {

389 
ch™
->
noi£Êo‹
 = 
nf
;

390  
Ál£
;

393 
h
 = 
ˇld©a
->
nfCÆHi°
;

394 
	`˛ór_bô
(
NFCAL_PENDING
, &
ˇld©a
->
ˇl_Êags
);

395 
	`©h9k_hw_upd©e_nfˇl_hi°_buf„r
(
ah
, 
ˇld©a
, 
nÁºay
);

396 
ch™
->
noi£Êo‹
 = 
h
[0].
¥ivNF
;

397 
ah
->
noi£
 = 
	`©h9k_hw_gëch™_noi£
◊h, 
ch™
, ch™->
noi£Êo‹
);

398  
åue
;

399 
	}
}

400 
EXPORT_SYMBOL
(
©h9k_hw_gënf
);

402 
	$©h9k_öô_nfˇl_hi°_buf„r
(
©h_hw
 *
ah
,

403 
©h9k_ch™√l
 *
ch™
)

405 
©h9k_nfˇl_hi°
 *
h
;

406 
s16
 
deÁu…_nf
;

407 
i
, 
j
;

409 
ah
->
ˇld©a
->
ch™√l
 = 
ch™
->channel;

410 
ah
->
ˇld©a
->
ch™√lFœgs
 = 
ch™
->channelFlags;

411 
h
 = 
ah
->
ˇld©a
->
nfCÆHi°
;

412 
deÁu…_nf
 = 
	`©h9k_hw_gë_deÁu…_nf
(
ah
, 
ch™
);

413 
i
 = 0; i < 
NUM_NF_READINGS
; i++) {

414 
h
[
i
].
cuºIndex
 = 0;

415 
h
[
i
].
¥ivNF
 = 
deÁu…_nf
;

416 
h
[
i
].
övÆidNFcou¡
 = 
AR_PHY_CCA_FILTERWINDOW_LENGTH
;

417 
j
 = 0; j < 
ATH9K_NF_CAL_HIST_MAX
; j++) {

418 
h
[
i
].
nfCÆBuf„r
[
j
] = 
deÁu…_nf
;

421 
	}
}

424 
	$©h9k_hw_b°uck_nfˇl
(
©h_hw
 *
ah
)

426 
©h9k_hw_ˇl_d©a
 *
ˇld©a
 = 
ah
->caldata;

428 i‡(
	`u∆ikñy
(!
ˇld©a
))

439 i‡(!
	`ã°_bô
(
NFCAL_PENDING
, &
ˇld©a
->
ˇl_Êags
))

440 
	`©h9k_hw_°¨t_nfˇl
(
ah
, 
åue
);

441 i‡(!(
	`REG_READ
(
ah
, 
AR_PHY_AGC_CONTROL
Ë& 
AR_PHY_AGC_CONTROL_NF
))

442 
	`©h9k_hw_gënf
(
ah
,áh->
curch™
);

444 
	`£t_bô
(
NFCAL_INTF
, &
ˇld©a
->
ˇl_Êags
);

445 
	}
}

446 
EXPORT_SYMBOL
(
©h9k_hw_b°uck_nfˇl
);

	@calib.h

17 #i‚de‡
CALIB_H


18 
	#CALIB_H


	)

20 
	~"hw.h
"

22 
	#AR_PHY_CCA_FILTERWINDOW_LENGTH
 5

	)

25 
	#ATH9K_NF_CAL_NOISE_THRESH
 6

	)

27 
	#NUM_NF_READINGS
 6

	)

28 
	#ATH9K_NF_CAL_HIST_MAX
 5

	)

30 
	s¨5416IniAºay
 {

31 
u32
 *
	mü_¨øy
;

32 
u32
 
	mü_rows
;

33 
u32
 
	mü_cﬁumns
;

36 
	#STATIC_INI_ARRAY
(
¨øy
) { \

37 .
ü_¨øy
 = (
u32
 *)(
¨øy
), \

38 .
ü_rows
 = 
	`ARRAY_SIZE
(
¨øy
), \

39 .
ü_cﬁumns
 = 
	`ARRAY_SIZE
(
¨øy
[0]), \

40 }

	)

42 
	#INIT_INI_ARRAY
(
öüºay
, 
¨øy
) do { \

43 (
öüºay
)->
ü_¨øy
 = (
u32
 *)(
¨øy
); \

44 (
öüºay
)->
ü_rows
 = 
	`ARRAY_SIZE
(
¨øy
); \

45 (
öüºay
)->
ü_cﬁumns
 = 
	`ARRAY_SIZE
(
¨øy
[0]); \

46 } 0)

	)

48 
	#INI_RA
(
öüºay
, 
row
, 
cﬁumn
) \

49 (((
öüºay
)->
ü_¨øy
)[(
row
Ë* ((öüºay)->
ü_cﬁumns
Ë+ (
cﬁumn
)])

	)

51 
	#INIT_CAL
(
_≥rCÆ
) do { \

52 (
_≥rCÆ
)->
ˇlSèã
 = 
CAL_WAITING
; \

53 (
_≥rCÆ
)->
ˇlNext
 = 
NULL
; \

54 } 0)

	)

56 
	#INSERT_CAL
(
_ahp
, 
_≥rCÆ
) \

58 i‡((
_ahp
)->
ˇl_li°_œ°
 =
NULL
) { \

59 (
_ahp
)->
ˇl_li°
 = \

60 (
_ahp
)->
ˇl_li°_œ°
 = (
_≥rCÆ
); \

61 ((
_ahp
)->
ˇl_li°_œ°
)->
ˇlNext
 = (
_≥rCÆ
); \

63 ((
_ahp
)->
ˇl_li°_œ°
)->
ˇlNext
 = (
_≥rCÆ
); \

64 (
_ahp
)->
ˇl_li°_œ°
 = (
_≥rCÆ
); \

65 (
_≥rCÆ
)->
ˇlNext
 = (
_ahp
)->
ˇl_li°
; \

67 } 0)

	)

69 
	e©h9k_ˇl_°©e
 {

70 
	mCAL_INACTIVE
,

71 
	mCAL_WAITING
,

72 
	mCAL_RUNNING
,

73 
	mCAL_DONE


76 
	#MIN_CAL_SAMPLES
 1

	)

77 
	#MAX_CAL_SAMPLES
 64

	)

78 
	#INIT_LOG_COUNT
 5

	)

79 
	#PER_MIN_LOG_COUNT
 2

	)

80 
	#PER_MAX_LOG_COUNT
 10

	)

82 
	s©h9k_≥rˇl_d©a
 {

83 
u32
 
	mˇlTy≥
;

84 
u32
 
	mˇlNumSam∂es
;

85 
u32
 
	mˇlCou¡Max
;

86 (*
	mˇlCﬁÀ˘
Ë(
	m©h_hw
 *);

87 (*
	mˇlPo°Proc
Ë(
	m©h_hw
 *, 
	mu8
);

90 
	s©h9k_ˇl_li°
 {

91 c⁄° 
©h9k_≥rˇl_d©a
 *
	mˇlD©a
;

92 
©h9k_ˇl_°©e
 
	mˇlSèã
;

93 
©h9k_ˇl_li°
 *
	mˇlNext
;

96 
	s©h9k_nfˇl_hi°
 {

97 
öt16_t
 
	mnfCÆBuf„r
[
ATH9K_NF_CAL_HIST_MAX
];

98 
u8
 
	mcuºIndex
;

99 
öt16_t
 
	m¥ivNF
;

100 
u8
 
	mövÆidNFcou¡
;

103 
	#MAX_PACAL_SKIPCOUNT
 8

	)

104 
	s©h9k_∑ˇl_öfo
{

105 
öt32_t
 
	m¥ev_off£t
;

106 
öt8_t
 
	mmax_skùcou¡
;

107 
öt8_t
 
	mskùcou¡
;

110 
boﬁ
 
©h9k_hw_ª£t_ˇlvÆid
(
©h_hw
 *
ah
);

111 
©h9k_hw_°¨t_nfˇl
(
©h_hw
 *
ah
, 
boﬁ
 
upd©e
);

112 
©h9k_hw_lﬂdnf
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
);

113 
boﬁ
 
©h9k_hw_gënf
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
);

114 
©h9k_öô_nfˇl_hi°_buf„r
(
©h_hw
 *
ah
,

115 
©h9k_ch™√l
 *
ch™
);

116 
©h9k_hw_b°uck_nfˇl
(
©h_hw
 *
ah
);

117 
©h9k_hw_ª£t_ˇlibøti⁄
(
©h_hw
 *
ah
,

118 
©h9k_ˇl_li°
 *
cuºCÆ
);

119 
s16
 
©h9k_hw_gëch™_noi£
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
,

120 
s16
 
nf
);

	@common-beacon.c

17 
	~"comm⁄.h
"

19 
	#FUDGE
 2

	)

22 
u32
 
	$©h9k_mod_tsf64_tu
(
u64
 
tsf
, 
u32
 
div_tu
)

24 
u32
 
tsf_mod
, 
tsf_hi
, 
tsf_lo
, 
mod_hi
, 
mod_lo
;

26 
tsf_mod
 = 
tsf
 & (
	`BIT
(10) - 1);

27 
tsf_hi
 = 
tsf
 >> 32;

28 
tsf_lo
 = ((
u32
Ë
tsf
) >> 10;

30 
mod_hi
 = 
tsf_hi
 % 
div_tu
;

31 
mod_lo
 = ((
mod_hi
 << 22Ë+ 
tsf_lo
Ë% 
div_tu
;

33  (
mod_lo
 << 10Ë| 
tsf_mod
;

34 
	}
}

36 
u32
 
	$©h9k_gë_√xt_tbâ
(
©h_hw
 *
ah
, 
u64
 
tsf
,

37 
öãrvÆ
)

39 
off£t
;

41 
tsf
 +
	`TU_TO_USEC
(
FUDGE
 + 
ah
->
c⁄fig
.
sw_bóc⁄_ª•⁄£_time
);

42 
off£t
 = 
	`©h9k_mod_tsf64_tu
(
tsf
, 
öãrvÆ
);

44  (
u32
Ë
tsf
 + 
	`TU_TO_USEC
(
öãrvÆ
Ë- 
off£t
;

45 
	}
}

55 
	$©h9k_cmn_bóc⁄_c⁄fig_°a
(
©h_hw
 *
ah
,

56 
©h_bóc⁄_c⁄fig
 *
c⁄f
,

57 
©h9k_bóc⁄_°©e
 *
bs
)

59 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

60 
dtim_ötvÆ
;

61 
u64
 
tsf
;

64 i‡(!
	`ã°_bô
(
ATH_OP_PRIM_STA_VIF
, &
comm⁄
->
›_Êags
)) {

65 
	`©h_dbg
(
comm⁄
, 
BEACON
,

67  -
EPERM
;

70 
	`mem£t
(
bs
, 0, (*bs));

71 
c⁄f
->
ötvÆ
 = c⁄f->
bóc⁄_öãrvÆ
;

77 
dtim_ötvÆ
 = 
c⁄f
->
ötvÆ
 * c⁄f->
dtim_≥riod
;

83 
tsf
 = 
	`©h9k_hw_gëtsf64
(
ah
);

84 
c⁄f
->
√xâbâ
 = 
	`©h9k_gë_√xt_tbâ
(
ah
, 
tsf
, c⁄f->
ötvÆ
);

86 
bs
->
bs_ötvÆ
 = 
	`TU_TO_USEC
(
c⁄f
->
ötvÆ
);

87 
bs
->
bs_dtim≥riod
 = 
c⁄f
->
dtim_≥riod
 * bs->
bs_ötvÆ
;

88 
bs
->
bs_√xâbâ
 = 
c⁄f
->
√xâbâ
;

89 
bs
->
bs_√xtdtim
 = 
c⁄f
->
√xâbâ
;

90 i‡(
c⁄f
->
dtim_≥riod
 > 1)

91 
bs
->
bs_√xtdtim
 = 
	`©h9k_gë_√xt_tbâ
(
ah
, 
tsf
, 
dtim_ötvÆ
);

99 
bs
->
bs_bmis°hªshﬁd
 = 
	`DIV_ROUND_UP
(
c⁄f
->
bmiss_timeout
, c⁄f->
ötvÆ
);

100 i‡(
bs
->
bs_bmis°hªshﬁd
 > 15)

101 
bs
->
bs_bmis°hªshﬁd
 = 15;

102 i‡(
bs
->
bs_bmis°hªshﬁd
 <= 0)

103 
bs
->
bs_bmis°hªshﬁd
 = 1;

114 
bs
->
bs_¶ìpduøti⁄
 = 
	`TU_TO_USEC
(
	`roundup
(
	`IEEE80211_MS_TO_TU
(100),

115 
c⁄f
->
ötvÆ
));

116 i‡(
bs
->
bs_¶ìpduøti⁄
 > bs->
bs_dtim≥riod
)

117 
bs
->
bs_¶ìpduøti⁄
 = bs->
bs_dtim≥riod
;

120 
bs
->
bs_tsfo‹_thªshﬁd
 = 
ATH9K_TSFOOR_THRESHOLD
;

122 
	`©h_dbg
(
comm⁄
, 
BEACON
, "bmiss: %u sleep: %u\n",

123 
bs
->
bs_bmis°hªshﬁd
, bs->
bs_¶ìpduøti⁄
);

125 
	}
}

126 
EXPORT_SYMBOL
(
©h9k_cmn_bóc⁄_c⁄fig_°a
);

128 
	$©h9k_cmn_bóc⁄_c⁄fig_adhoc
(
©h_hw
 *
ah
,

129 
©h_bóc⁄_c⁄fig
 *
c⁄f
)

131 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

133 
c⁄f
->
ötvÆ
 = 
	`TU_TO_USEC
(c⁄f->
bóc⁄_öãrvÆ
);

135 i‡(
c⁄f
->
ibss_¸ót‹
)

136 
c⁄f
->
√xâbâ
 = c⁄f->
ötvÆ
;

138 
c⁄f
->
√xâbâ
 = 
	`©h9k_gë_√xt_tbâ
(
ah
, 
	`©h9k_hw_gëtsf64
(ah),

139 
c⁄f
->
bóc⁄_öãrvÆ
);

141 i‡(
c⁄f
->
íabÀ_bóc⁄
)

142 
ah
->
imask
 |
ATH9K_INT_SWBA
;

144 
ah
->
imask
 &~
ATH9K_INT_SWBA
;

146 
	`©h_dbg
(
comm⁄
, 
BEACON
,

148 (
c⁄f
->
íabÀ_bóc⁄
) ? "Enable" : "Disable",

149 
c⁄f
->
√xâbâ
, c⁄f->
ötvÆ
, c⁄f->
bóc⁄_öãrvÆ
);

150 
	}
}

151 
EXPORT_SYMBOL
(
©h9k_cmn_bóc⁄_c⁄fig_adhoc
);

158 
	$©h9k_cmn_bóc⁄_c⁄fig_≠
(
©h_hw
 *
ah
,

159 
©h_bóc⁄_c⁄fig
 *
c⁄f
,

160 
bc_buf
)

162 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

165 
c⁄f
->
ötvÆ
 = 
	`TU_TO_USEC
(c⁄f->
bóc⁄_öãrvÆ
);

166 
c⁄f
->
ötvÆ
 /
bc_buf
;

167 
c⁄f
->
√xâbâ
 = 
	`©h9k_gë_√xt_tbâ
(
ah
, 
	`©h9k_hw_gëtsf64
(ah),

168 
c⁄f
->
bóc⁄_öãrvÆ
);

170 i‡(
c⁄f
->
íabÀ_bóc⁄
)

171 
ah
->
imask
 |
ATH9K_INT_SWBA
;

173 
ah
->
imask
 &~
ATH9K_INT_SWBA
;

175 
	`©h_dbg
(
comm⁄
, 
BEACON
,

177 (
c⁄f
->
íabÀ_bóc⁄
) ? "Enable" : "Disable",

178 
c⁄f
->
√xâbâ
, c⁄f->
ötvÆ
, c⁄f->
bóc⁄_öãrvÆ
);

179 
	}
}

180 
EXPORT_SYMBOL
(
©h9k_cmn_bóc⁄_c⁄fig_≠
);

	@common-beacon.h

17 
	g©h_bóc⁄_c⁄fig
;

19 
©h9k_cmn_bóc⁄_c⁄fig_°a
(
©h_hw
 *
ah
,

20 
©h_bóc⁄_c⁄fig
 *
c⁄f
,

21 
©h9k_bóc⁄_°©e
 *
bs
);

22 
©h9k_cmn_bóc⁄_c⁄fig_adhoc
(
©h_hw
 *
ah
,

23 
©h_bóc⁄_c⁄fig
 *
c⁄f
);

24 
©h9k_cmn_bóc⁄_c⁄fig_≠
(
©h_hw
 *
ah
,

25 
©h_bóc⁄_c⁄fig
 *
c⁄f
,

26 
bc_buf
);

	@common-debug.c

17 
	~"comm⁄.h
"

19 
ssize_t
 
	$ªad_fûe_modÆ_ì¥om
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

20 
size_t
 
cou¡
, 
loff_t
 *
µos
)

22 
©h_hw
 *
ah
 = 
fûe
->
¥iv©e_d©a
;

23 
u32
 
Àn
 = 0, 
size
 = 6000;

24 *
buf
;

25 
size_t
 
ªtvÆ
;

27 
buf
 = 
	`kzÆloc
(
size
, 
GFP_KERNEL
);

28 i‡(
buf
 =
NULL
)

29  -
ENOMEM
;

31 
Àn
 = 
ah
->
ìp_›s
->
	`dump_ì¥om
◊h, 
Ál£
, 
buf
,Üí, 
size
);

33 
ªtvÆ
 = 
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

34 
	`k‰ì
(
buf
);

36  
ªtvÆ
;

37 
	}
}

39 c⁄° 
fûe_›î©i⁄s
 
	gf›s_modÆ_ì¥om
 = {

40 .
ªad
 = 
ªad_fûe_modÆ_ì¥om
,

41 .
	g›í
 = 
sim∂e_›í
,

42 .
	gow√r
 = 
THIS_MODULE
,

43 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

47 
	$©h9k_cmn_debug_modÆ_ì¥om
(
díåy
 *
debugfs_phy
,

48 
©h_hw
 *
ah
)

50 
	`debugfs_¸óã_fûe
("modÆ_ì¥om", 
S_IRUSR
, 
debugfs_phy
, 
ah
,

51 &
f›s_modÆ_ì¥om
);

52 
	}
}

53 
EXPORT_SYMBOL
(
©h9k_cmn_debug_modÆ_ì¥om
);

55 
ssize_t
 
	$ªad_fûe_ba£_ì¥om
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

56 
size_t
 
cou¡
, 
loff_t
 *
µos
)

58 
©h_hw
 *
ah
 = 
fûe
->
¥iv©e_d©a
;

59 
u32
 
Àn
 = 0, 
size
 = 1500;

60 
ssize_t
 
ªtvÆ
 = 0;

61 *
buf
;

63 
buf
 = 
	`kzÆloc
(
size
, 
GFP_KERNEL
);

64 i‡(!
buf
)

65  -
ENOMEM
;

67 
Àn
 = 
ah
->
ìp_›s
->
	`dump_ì¥om
◊h, 
åue
, 
buf
,Üí, 
size
);

69 
ªtvÆ
 = 
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

70 
	`k‰ì
(
buf
);

72  
ªtvÆ
;

73 
	}
}

75 c⁄° 
fûe_›î©i⁄s
 
	gf›s_ba£_ì¥om
 = {

76 .
ªad
 = 
ªad_fûe_ba£_ì¥om
,

77 .
	g›í
 = 
sim∂e_›í
,

78 .
	gow√r
 = 
THIS_MODULE
,

79 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

82 
	$©h9k_cmn_debug_ba£_ì¥om
(
díåy
 *
debugfs_phy
,

83 
©h_hw
 *
ah
)

85 
	`debugfs_¸óã_fûe
("ba£_ì¥om", 
S_IRUSR
, 
debugfs_phy
, 
ah
,

86 &
f›s_ba£_ì¥om
);

87 
	}
}

88 
EXPORT_SYMBOL
(
©h9k_cmn_debug_ba£_ì¥om
);

90 
	$©h9k_cmn_debug_°©_rx
(
©h_rx_°©s
 *
rx°©s
,

91 
©h_rx_°©us
 *
rs
)

93 
	#RX_PHY_ERR_INC
(
c
Ë
rx°©s
->
phy_îr_°©s
[c]++

	)

94 
	#RX_CMN_STAT_INC
(
c
Ë(
rx°©s
->c++)

	)

96 
	`RX_CMN_STAT_INC
(
rx_pkts_Æl
);

97 
rx°©s
->
rx_byãs_Æl
 +
rs
->
rs_d©Æí
;

99 i‡(
rs
->
rs_°©us
 & 
ATH9K_RXERR_CRC
)

100 
	`RX_CMN_STAT_INC
(
¸c_îr
);

101 i‡(
rs
->
rs_°©us
 & 
ATH9K_RXERR_DECRYPT
)

102 
	`RX_CMN_STAT_INC
(
de¸y±_¸c_îr
);

103 i‡(
rs
->
rs_°©us
 & 
ATH9K_RXERR_MIC
)

104 
	`RX_CMN_STAT_INC
(
mic_îr
);

105 i‡(
rs
->
rs_°©us
 & 
ATH9K_RX_DELIM_CRC_PRE
)

106 
	`RX_CMN_STAT_INC
(
¥e_dñim_¸c_îr
);

107 i‡(
rs
->
rs_°©us
 & 
ATH9K_RX_DELIM_CRC_POST
)

108 
	`RX_CMN_STAT_INC
(
po°_dñim_¸c_îr
);

109 i‡(
rs
->
rs_°©us
 & 
ATH9K_RX_DECRYPT_BUSY
)

110 
	`RX_CMN_STAT_INC
(
de¸y±_busy_îr
);

112 i‡(
rs
->
rs_°©us
 & 
ATH9K_RXERR_PHY
) {

113 
	`RX_CMN_STAT_INC
(
phy_îr
);

114 i‡(
rs
->
rs_phyîr
 < 
ATH9K_PHYERR_MAX
)

115 
	`RX_PHY_ERR_INC
(
rs
->
rs_phyîr
);

118 #unde‡
RX_CMN_STAT_INC


119 #unde‡
RX_PHY_ERR_INC


120 
	}
}

121 
EXPORT_SYMBOL
(
©h9k_cmn_debug_°©_rx
);

123 
ssize_t
 
	$ªad_fûe_ªcv
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

124 
size_t
 
cou¡
, 
loff_t
 *
µos
)

126 
	#RXS_ERR
(
s
, 
e
) \

128 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, \

129 "%18†: %10u\n", 
s
, \

130 
rx°©s
->
e
); \

131 } 0)

	)

133 
©h_rx_°©s
 *
rx°©s
 = 
fûe
->
¥iv©e_d©a
;

134 *
buf
;

135 
Àn
 = 0, 
size
 = 1600;

136 
ssize_t
 
ªtvÆ
 = 0;

138 
buf
 = 
	`kzÆloc
(
size
, 
GFP_KERNEL
);

139 i‡(
buf
 =
NULL
)

140  -
ENOMEM
;

142 
	`RXS_ERR
("PKTS-ALL", 
rx_pkts_Æl
);

143 
	`RXS_ERR
("BYTES-ALL", 
rx_byãs_Æl
);

144 
	`RXS_ERR
("BEACONS", 
rx_bóc⁄s
);

145 
	`RXS_ERR
("FRAGS", 
rx_‰ags
);

146 
	`RXS_ERR
("SPECTRAL", 
rx_•e˘øl
);

148 
	`RXS_ERR
("CRC ERR", 
¸c_îr
);

149 
	`RXS_ERR
("DECRYPT CRC ERR", 
de¸y±_¸c_îr
);

150 
	`RXS_ERR
("PHY ERR", 
phy_îr
);

151 
	`RXS_ERR
("MIC ERR", 
mic_îr
);

152 
	`RXS_ERR
("PRE-DELIM CRC ERR", 
¥e_dñim_¸c_îr
);

153 
	`RXS_ERR
("POST-DELIM CRC ERR", 
po°_dñim_¸c_îr
);

154 
	`RXS_ERR
("DECRYPT BUSY ERR", 
de¸y±_busy_îr
);

155 
	`RXS_ERR
("LENGTH-ERR", 
rx_Àn_îr
);

156 
	`RXS_ERR
("OOM-ERR", 
rx_oom_îr
);

157 
	`RXS_ERR
("RATE-ERR", 
rx_øã_îr
);

158 
	`RXS_ERR
("TOO-MANY-FRAGS", 
rx_too_m™y_‰ags_îr
);

160 i‡(
Àn
 > 
size
)

161 
Àn
 = 
size
;

163 
ªtvÆ
 = 
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

164 
	`k‰ì
(
buf
);

166  
ªtvÆ
;

168 #unde‡
RXS_ERR


169 
	}
}

171 c⁄° 
fûe_›î©i⁄s
 
	gf›s_ªcv
 = {

172 .
ªad
 = 
ªad_fûe_ªcv
,

173 .
	g›í
 = 
sim∂e_›í
,

174 .
	gow√r
 = 
THIS_MODULE
,

175 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

178 
	$©h9k_cmn_debug_ªcv
(
díåy
 *
debugfs_phy
,

179 
©h_rx_°©s
 *
rx°©s
)

181 
	`debugfs_¸óã_fûe
("ªcv", 
S_IRUSR
, 
debugfs_phy
, 
rx°©s
,

182 &
f›s_ªcv
);

183 
	}
}

184 
EXPORT_SYMBOL
(
©h9k_cmn_debug_ªcv
);

186 
ssize_t
 
	$ªad_fûe_phy_îr
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

187 
size_t
 
cou¡
, 
loff_t
 *
µos
)

189 
	#PHY_ERR
(
s
, 
p
) \

190 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üí, "%22†: %10u\n", 
s
, \

191 
rx°©s
->
phy_îr_°©s
[
p
]);

	)

193 
©h_rx_°©s
 *
rx°©s
 = 
fûe
->
¥iv©e_d©a
;

194 *
buf
;

195 
Àn
 = 0, 
size
 = 1600;

196 
ssize_t
 
ªtvÆ
 = 0;

198 
buf
 = 
	`kzÆloc
(
size
, 
GFP_KERNEL
);

199 i‡(
buf
 =
NULL
)

200  -
ENOMEM
;

202 
	`PHY_ERR
("UNDERRUN ERR", 
ATH9K_PHYERR_UNDERRUN
);

203 
	`PHY_ERR
("TIMING ERR", 
ATH9K_PHYERR_TIMING
);

204 
	`PHY_ERR
("PARITY ERR", 
ATH9K_PHYERR_PARITY
);

205 
	`PHY_ERR
("RATE ERR", 
ATH9K_PHYERR_RATE
);

206 
	`PHY_ERR
("LENGTH ERR", 
ATH9K_PHYERR_LENGTH
);

207 
	`PHY_ERR
("RADAR ERR", 
ATH9K_PHYERR_RADAR
);

208 
	`PHY_ERR
("SERVICE ERR", 
ATH9K_PHYERR_SERVICE
);

209 
	`PHY_ERR
("TOR ERR", 
ATH9K_PHYERR_TOR
);

210 
	`PHY_ERR
("OFDM-TIMING ERR", 
ATH9K_PHYERR_OFDM_TIMING
);

211 
	`PHY_ERR
("OFDM-SIGNAL-PARITY ERR", 
ATH9K_PHYERR_OFDM_SIGNAL_PARITY
);

212 
	`PHY_ERR
("OFDM-RATE ERR", 
ATH9K_PHYERR_OFDM_RATE_ILLEGAL
);

213 
	`PHY_ERR
("OFDM-LENGTH ERR", 
ATH9K_PHYERR_OFDM_LENGTH_ILLEGAL
);

214 
	`PHY_ERR
("OFDM-POWER-DROP ERR", 
ATH9K_PHYERR_OFDM_POWER_DROP
);

215 
	`PHY_ERR
("OFDM-SERVICE ERR", 
ATH9K_PHYERR_OFDM_SERVICE
);

216 
	`PHY_ERR
("OFDM-RESTART ERR", 
ATH9K_PHYERR_OFDM_RESTART
);

217 
	`PHY_ERR
("FALSE-RADAR-EXT ERR", 
ATH9K_PHYERR_FALSE_RADAR_EXT
);

218 
	`PHY_ERR
("CCK-TIMING ERR", 
ATH9K_PHYERR_CCK_TIMING
);

219 
	`PHY_ERR
("CCK-HEADER-CRC ERR", 
ATH9K_PHYERR_CCK_HEADER_CRC
);

220 
	`PHY_ERR
("CCK-RATE ERR", 
ATH9K_PHYERR_CCK_RATE_ILLEGAL
);

221 
	`PHY_ERR
("CCK-SERVICE ERR", 
ATH9K_PHYERR_CCK_SERVICE
);

222 
	`PHY_ERR
("CCK-RESTART ERR", 
ATH9K_PHYERR_CCK_RESTART
);

223 
	`PHY_ERR
("CCK-LENGTH ERR", 
ATH9K_PHYERR_CCK_LENGTH_ILLEGAL
);

224 
	`PHY_ERR
("CCK-POWER-DROP ERR", 
ATH9K_PHYERR_CCK_POWER_DROP
);

225 
	`PHY_ERR
("HT-CRC ERR", 
ATH9K_PHYERR_HT_CRC_ERROR
);

226 
	`PHY_ERR
("HT-LENGTH ERR", 
ATH9K_PHYERR_HT_LENGTH_ILLEGAL
);

227 
	`PHY_ERR
("HT-RATE ERR", 
ATH9K_PHYERR_HT_RATE_ILLEGAL
);

229 i‡(
Àn
 > 
size
)

230 
Àn
 = 
size
;

232 
ªtvÆ
 = 
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

233 
	`k‰ì
(
buf
);

235  
ªtvÆ
;

237 #unde‡
PHY_ERR


238 
	}
}

240 c⁄° 
fûe_›î©i⁄s
 
	gf›s_phy_îr
 = {

241 .
ªad
 = 
ªad_fûe_phy_îr
,

242 .
	g›í
 = 
sim∂e_›í
,

243 .
	gow√r
 = 
THIS_MODULE
,

244 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

247 
	$©h9k_cmn_debug_phy_îr
(
díåy
 *
debugfs_phy
,

248 
©h_rx_°©s
 *
rx°©s
)

250 
	`debugfs_¸óã_fûe
("phy_îr", 
S_IRUSR
, 
debugfs_phy
, 
rx°©s
,

251 &
f›s_phy_îr
);

252 
	}
}

253 
EXPORT_SYMBOL
(
©h9k_cmn_debug_phy_îr
);

	@common-debug.h

43 
	s©h_rx_°©s
 {

44 
u32
 
	mrx_pkts_Æl
;

45 
u32
 
	mrx_byãs_Æl
;

46 
u32
 
	m¸c_îr
;

47 
u32
 
	mde¸y±_¸c_îr
;

48 
u32
 
	mphy_îr
;

49 
u32
 
	mmic_îr
;

50 
u32
 
	m¥e_dñim_¸c_îr
;

51 
u32
 
	mpo°_dñim_¸c_îr
;

52 
u32
 
	mde¸y±_busy_îr
;

53 
u32
 
	mphy_îr_°©s
[
ATH9K_PHYERR_MAX
];

54 
u32
 
	mrx_Àn_îr
;

55 
u32
 
	mrx_oom_îr
;

56 
u32
 
	mrx_øã_îr
;

57 
u32
 
	mrx_too_m™y_‰ags_îr
;

58 
u32
 
	mrx_bóc⁄s
;

59 
u32
 
	mrx_‰ags
;

60 
u32
 
	mrx_•e˘øl
;

63 
©h9k_cmn_debug_modÆ_ì¥om
(
díåy
 *
debugfs_phy
,

64 
©h_hw
 *
ah
);

65 
©h9k_cmn_debug_ba£_ì¥om
(
díåy
 *
debugfs_phy
,

66 
©h_hw
 *
ah
);

67 
©h9k_cmn_debug_°©_rx
(
©h_rx_°©s
 *
rx°©s
,

68 
©h_rx_°©us
 *
rs
);

69 
©h9k_cmn_debug_ªcv
(
díåy
 *
debugfs_phy
,

70 
©h_rx_°©s
 *
rx°©s
);

71 
©h9k_cmn_debug_phy_îr
(
díåy
 *
debugfs_phy
,

72 
©h_rx_°©s
 *
rx°©s
);

	@common-init.c

19 
	~"comm⁄.h
"

21 
	#CHAN2G
(
_‰eq
, 
_idx
) { \

22 .
b™d
 = 
IEEE80211_BAND_2GHZ
, \

23 .
˚¡î_‰eq
 = (
_‰eq
), \

24 .
hw_vÆue
 = (
_idx
), \

25 .
max_powî
 = 20, \

26 }

	)

28 
	#CHAN5G
(
_‰eq
, 
_idx
) { \

29 .
b™d
 = 
IEEE80211_BAND_5GHZ
, \

30 .
˚¡î_‰eq
 = (
_‰eq
), \

31 .
hw_vÆue
 = (
_idx
), \

32 .
max_powî
 = 20, \

33 }

	)

39 c⁄° 
õì80211_ch™√l
 
	g©h9k_2ghz_ch™èbÀ
[] = {

40 
CHAN2G
(2412, 0),

41 
CHAN2G
(2417, 1),

42 
CHAN2G
(2422, 2),

43 
CHAN2G
(2427, 3),

44 
CHAN2G
(2432, 4),

45 
CHAN2G
(2437, 5),

46 
CHAN2G
(2442, 6),

47 
CHAN2G
(2447, 7),

48 
CHAN2G
(2452, 8),

49 
CHAN2G
(2457, 9),

50 
CHAN2G
(2462, 10),

51 
CHAN2G
(2467, 11),

52 
CHAN2G
(2472, 12),

53 
CHAN2G
(2484, 13),

60 c⁄° 
õì80211_ch™√l
 
	g©h9k_5ghz_ch™èbÀ
[] = {

62 
CHAN5G
(5180, 14),

63 
CHAN5G
(5200, 15),

64 
CHAN5G
(5220, 16),

65 
CHAN5G
(5240, 17),

67 
CHAN5G
(5260, 18),

68 
CHAN5G
(5280, 19),

69 
CHAN5G
(5300, 20),

70 
CHAN5G
(5320, 21),

72 
CHAN5G
(5500, 22),

73 
CHAN5G
(5520, 23),

74 
CHAN5G
(5540, 24),

75 
CHAN5G
(5560, 25),

76 
CHAN5G
(5580, 26),

77 
CHAN5G
(5600, 27),

78 
CHAN5G
(5620, 28),

79 
CHAN5G
(5640, 29),

80 
CHAN5G
(5660, 30),

81 
CHAN5G
(5680, 31),

82 
CHAN5G
(5700, 32),

84 
CHAN5G
(5745, 33),

85 
CHAN5G
(5765, 34),

86 
CHAN5G
(5785, 35),

87 
CHAN5G
(5805, 36),

88 
CHAN5G
(5825, 37),

92 
	#SHPCHECK
(
__hw_øã
, 
__Êags
) \

93 ((
__Êags
 & 
IEEE80211_RATE_SHORT_PREAMBLE
Ë? (
__hw_øã
 | 0x04 ) : 0)

	)

95 
	#RATE
(
_bôøã
, 
_hw_øã
, 
_Êags
) { \

96 .
bôøã
 = (
_bôøã
), \

97 .
Êags
 = (
_Êags
), \

98 .
hw_vÆue
 = (
_hw_øã
), \

99 .
hw_vÆue_sh‹t
 = (
	`SHPCHECK
(
_hw_øã
, 
_Êags
)) \

100 }

	)

102 
õì80211_øã
 
	g©h9k_Àgacy_øãs
[] = {

103 
RATE
(10, 0x1b, 0),

104 
RATE
(20, 0x1a, 
IEEE80211_RATE_SHORT_PREAMBLE
),

105 
RATE
(55, 0x19, 
IEEE80211_RATE_SHORT_PREAMBLE
),

106 
RATE
(110, 0x18, 
IEEE80211_RATE_SHORT_PREAMBLE
),

107 
RATE
(60, 0x0b, (
IEEE80211_RATE_SUPPORTS_5MHZ
 |

108 
IEEE80211_RATE_SUPPORTS_10MHZ
)),

109 
RATE
(90, 0x0f, (
IEEE80211_RATE_SUPPORTS_5MHZ
 |

110 
IEEE80211_RATE_SUPPORTS_10MHZ
)),

111 
RATE
(120, 0x0a, (
IEEE80211_RATE_SUPPORTS_5MHZ
 |

112 
IEEE80211_RATE_SUPPORTS_10MHZ
)),

113 
RATE
(180, 0x0e, (
IEEE80211_RATE_SUPPORTS_5MHZ
 |

114 
IEEE80211_RATE_SUPPORTS_10MHZ
)),

115 
RATE
(240, 0x09, (
IEEE80211_RATE_SUPPORTS_5MHZ
 |

116 
IEEE80211_RATE_SUPPORTS_10MHZ
)),

117 
RATE
(360, 0x0d, (
IEEE80211_RATE_SUPPORTS_5MHZ
 |

118 
IEEE80211_RATE_SUPPORTS_10MHZ
)),

119 
RATE
(480, 0x08, (
IEEE80211_RATE_SUPPORTS_5MHZ
 |

120 
IEEE80211_RATE_SUPPORTS_10MHZ
)),

121 
RATE
(540, 0x0c, (
IEEE80211_RATE_SUPPORTS_5MHZ
 |

122 
IEEE80211_RATE_SUPPORTS_10MHZ
)),

125 
	$©h9k_cmn_öô_ch™√ls_øãs
(
©h_comm⁄
 *
comm⁄
)

127 
©h_hw
 *
ah
 = (©h_hw *)
comm⁄
->ah;

128 *
ch™√ls
;

130 
	`BUILD_BUG_ON
(
	`ARRAY_SIZE
(
©h9k_2ghz_ch™èbÀ
) +

131 
	`ARRAY_SIZE
(
©h9k_5ghz_ch™èbÀ
) !=

132 
ATH9K_NUM_CHANNELS
);

134 i‡(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_2GHZ
) {

135 
ch™√ls
 = 
	`devm_kzÆloc
(
ah
->
dev
,

136 (
©h9k_2ghz_ch™èbÀ
), 
GFP_KERNEL
);

137 i‡(!
ch™√ls
)

138  -
ENOMEM
;

140 
	`mem˝y
(
ch™√ls
, 
©h9k_2ghz_ch™èbÀ
,

141 (
©h9k_2ghz_ch™èbÀ
));

142 
comm⁄
->
sb™ds
[
IEEE80211_BAND_2GHZ
].
ch™√ls
 = channels;

143 
comm⁄
->
sb™ds
[
IEEE80211_BAND_2GHZ
].
b™d
 = IEEE80211_BAND_2GHZ;

144 
comm⁄
->
sb™ds
[
IEEE80211_BAND_2GHZ
].
n_ch™√ls
 =

145 
	`ARRAY_SIZE
(
©h9k_2ghz_ch™èbÀ
);

146 
comm⁄
->
sb™ds
[
IEEE80211_BAND_2GHZ
].
bôøãs
 = 
©h9k_Àgacy_øãs
;

147 
comm⁄
->
sb™ds
[
IEEE80211_BAND_2GHZ
].
n_bôøãs
 =

148 
	`ARRAY_SIZE
(
©h9k_Àgacy_øãs
);

151 i‡(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_5GHZ
) {

152 
ch™√ls
 = 
	`devm_kzÆloc
(
ah
->
dev
,

153 (
©h9k_5ghz_ch™èbÀ
), 
GFP_KERNEL
);

154 i‡(!
ch™√ls
)

155  -
ENOMEM
;

157 
	`mem˝y
(
ch™√ls
, 
©h9k_5ghz_ch™èbÀ
,

158 (
©h9k_5ghz_ch™èbÀ
));

159 
comm⁄
->
sb™ds
[
IEEE80211_BAND_5GHZ
].
ch™√ls
 = channels;

160 
comm⁄
->
sb™ds
[
IEEE80211_BAND_5GHZ
].
b™d
 = IEEE80211_BAND_5GHZ;

161 
comm⁄
->
sb™ds
[
IEEE80211_BAND_5GHZ
].
n_ch™√ls
 =

162 
	`ARRAY_SIZE
(
©h9k_5ghz_ch™èbÀ
);

163 
comm⁄
->
sb™ds
[
IEEE80211_BAND_5GHZ
].
bôøãs
 =

164 
©h9k_Àgacy_øãs
 + 4;

165 
comm⁄
->
sb™ds
[
IEEE80211_BAND_5GHZ
].
n_bôøãs
 =

166 
	`ARRAY_SIZE
(
©h9k_Àgacy_øãs
) - 4;

169 
	}
}

170 
EXPORT_SYMBOL
(
©h9k_cmn_öô_ch™√ls_øãs
);

172 
	$©h9k_cmn_£tup_ht_ˇp
(
©h_hw
 *
ah
,

173 
õì80211_°a_ht_ˇp
 *
ht_öfo
)

175 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

176 
u8
 
tx_°ªams
, 
rx_°ªams
;

177 
i
, 
max_°ªams
;

179 
ht_öfo
->
ht_suµ‹ãd
 = 
åue
;

180 
ht_öfo
->
ˇp
 = 
IEEE80211_HT_CAP_SUP_WIDTH_20_40
 |

181 
IEEE80211_HT_CAP_SM_PS
 |

182 
IEEE80211_HT_CAP_SGI_40
 |

183 
IEEE80211_HT_CAP_DSSSCCK40
;

185 i‡(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_LDPC
)

186 
ht_öfo
->
ˇp
 |
IEEE80211_HT_CAP_LDPC_CODING
;

188 i‡(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_SGI_20
)

189 
ht_öfo
->
ˇp
 |
IEEE80211_HT_CAP_SGI_20
;

191 
ht_öfo
->
ampdu_Á˘‹
 = 
IEEE80211_HT_MAX_AMPDU_64K
;

192 
ht_öfo
->
ampdu_dísôy
 = 
IEEE80211_HT_MPDU_DENSITY_8
;

194 i‡(
	`AR_SREV_9271
(
ah
Ë|| 
	`AR_SREV_9330
◊hË|| 
	`AR_SREV_9485
◊hË|| 
	`AR_SREV_9565
(ah))

195 
max_°ªams
 = 1;

196 i‡(
	`AR_SREV_9462
(
ah
))

197 
max_°ªams
 = 2;

198 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
))

199 
max_°ªams
 = 3;

201 
max_°ªams
 = 2;

203 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
)) {

204 i‡(
max_°ªams
 >= 2)

205 
ht_öfo
->
ˇp
 |
IEEE80211_HT_CAP_TX_STBC
;

206 
ht_öfo
->
ˇp
 |(1 << 
IEEE80211_HT_CAP_RX_STBC_SHIFT
);

210 
	`mem£t
(&
ht_öfo
->
mcs
, 0, (ht_info->mcs));

211 
tx_°ªams
 = 
	`©h9k_cmn_cou¡_°ªams
(
ah
->
txchaömask
, 
max_°ªams
);

212 
rx_°ªams
 = 
	`©h9k_cmn_cou¡_°ªams
(
ah
->
rxchaömask
, 
max_°ªams
);

214 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "TX streams %d, RX streams: %d\n",

215 
tx_°ªams
, 
rx_°ªams
);

217 i‡(
tx_°ªams
 !
rx_°ªams
) {

218 
ht_öfo
->
mcs
.
tx_∑øms
 |
IEEE80211_HT_MCS_TX_RX_DIFF
;

219 
ht_öfo
->
mcs
.
tx_∑øms
 |((
tx_°ªams
 - 1) <<

220 
IEEE80211_HT_MCS_TX_MAX_STREAMS_SHIFT
);

223 
i
 = 0; i < 
rx_°ªams
; i++)

224 
ht_öfo
->
mcs
.
rx_mask
[
i
] = 0xff;

226 
ht_öfo
->
mcs
.
tx_∑øms
 |
IEEE80211_HT_MCS_TX_DEFINED
;

227 
	}
}

228 
EXPORT_SYMBOL
(
©h9k_cmn_£tup_ht_ˇp
);

230 
	$©h9k_cmn_ªlﬂd_chaömask
(
©h_hw
 *
ah
)

232 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

234 i‡(!(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_HT
))

237 i‡(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_2GHZ
)

238 
	`©h9k_cmn_£tup_ht_ˇp
(
ah
,

239 &
comm⁄
->
sb™ds
[
IEEE80211_BAND_2GHZ
].
ht_ˇp
);

240 i‡(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_5GHZ
)

241 
	`©h9k_cmn_£tup_ht_ˇp
(
ah
,

242 &
comm⁄
->
sb™ds
[
IEEE80211_BAND_5GHZ
].
ht_ˇp
);

243 
	}
}

244 
EXPORT_SYMBOL
(
©h9k_cmn_ªlﬂd_chaömask
);

	@common-init.h

17 
©h9k_cmn_öô_ch™√ls_øãs
(
©h_comm⁄
 *
comm⁄
);

18 
©h9k_cmn_£tup_ht_ˇp
(
©h_hw
 *
ah
,

19 
õì80211_°a_ht_ˇp
 *
ht_öfo
);

20 
©h9k_cmn_ªlﬂd_chaömask
(
©h_hw
 *
ah
);

	@common.c

21 
	~<löux/kî√l.h
>

22 
	~<löux/moduÀ.h
>

24 
	~"comm⁄.h
"

26 
MODULE_AUTHOR
("Atheros Communications");

27 
MODULE_DESCRIPTION
("SharedÜibrary for Atheros wireless 802.11n LAN cards.");

28 
MODULE_LICENSE
("Dual BSD/GPL");

31 
boﬁ
 
	$©h9k_cmn_rx_ac˚±
(
©h_comm⁄
 *
comm⁄
,

32 
õì80211_hdr
 *
hdr
,

33 
õì80211_rx_°©us
 *
rxs
,

34 
©h_rx_°©us
 *
rx_°©s
,

35 
boﬁ
 *
de¸y±_îr‹
,

36 
rxfûãr
)

38 
©h_hw
 *
ah
 = 
comm⁄
->ah;

39 
boﬁ
 
is_mc
, 
is_vÆid_tkù
, 
°rù_mic
, 
mic_îr‹
;

40 
__À16
 
fc
;

42 
fc
 = 
hdr
->
‰ame_c⁄åﬁ
;

44 
is_mc
 = !!
	`is_mu…iˇ°_ëhî_addr
(
hdr
->
addr1
);

45 
is_vÆid_tkù
 = 
rx_°©s
->
rs_keyix
 !
ATH9K_RXKEYIX_INVALID
 &&

46 
	`ã°_bô
(
rx_°©s
->
rs_keyix
, 
comm⁄
->
tkù_keym≠
);

47 
°rù_mic
 = 
is_vÆid_tkù
 && 
	`õì80211_is_d©a
(
fc
) &&

48 
	`õì80211_has_¥Ÿe˘ed
(
fc
) &&

49 !(
rx_°©s
->
rs_°©us
 &

50 (
ATH9K_RXERR_DECRYPT
 | 
ATH9K_RXERR_CRC
 | 
ATH9K_RXERR_MIC
 |

51 
ATH9K_RXERR_KEYMISS
));

58 i‡(
rx_°©s
->
rs_keyix
 =
ATH9K_RXKEYIX_INVALID
 ||

59 !
	`ã°_bô
(
rx_°©s
->
rs_keyix
, 
comm⁄
->
ccmp_keym≠
))

60 
rx_°©s
->
rs_°©us
 &~
ATH9K_RXERR_KEYMISS
;

62 
mic_îr‹
 = 
is_vÆid_tkù
 && !
	`õì80211_is_˘l
(
fc
) &&

63 !
	`õì80211_has_m‹e‰ags
(
fc
) &&

64 !(
	`À16_to_˝u
(
hdr
->
£q_˘æ
Ë& 
IEEE80211_SCTL_FRAG
) &&

65 (
rx_°©s
->
rs_°©us
 & 
ATH9K_RXERR_MIC
);

73 i‡(
rx_°©s
->
rs_°©us
 != 0) {

74 
u8
 
°©us_mask
;

76 i‡(
rx_°©s
->
rs_°©us
 & 
ATH9K_RXERR_CRC
) {

77 
rxs
->
Êag
 |
RX_FLAG_FAILED_FCS_CRC
;

78 
mic_îr‹
 = 
Ál£
;

81 i‡((
rx_°©s
->
rs_°©us
 & 
ATH9K_RXERR_DECRYPT
) ||

82 (!
is_mc
 && (
rx_°©s
->
rs_°©us
 & 
ATH9K_RXERR_KEYMISS
))) {

83 *
de¸y±_îr‹
 = 
åue
;

84 
mic_îr‹
 = 
Ál£
;

93 
°©us_mask
 = 
ATH9K_RXERR_DECRYPT
 | 
ATH9K_RXERR_MIC
 |

94 
ATH9K_RXERR_KEYMISS
;

96 i‡(
ah
->
is_m⁄ô‹ög
 && (
rxfûãr
 & 
FIF_FCSFAIL
))

97 
°©us_mask
 |
ATH9K_RXERR_CRC
;

99 i‡(
rx_°©s
->
rs_°©us
 & ~
°©us_mask
)

100  
Ál£
;

109 i‡(
°rù_mic
)

110 
rxs
->
Êag
 |
RX_FLAG_MMIC_STRIPPED
;

111 i‡(
is_mc
 && 
mic_îr‹
)

112 
rxs
->
Êag
 |
RX_FLAG_MMIC_ERROR
;

114  
åue
;

115 
	}
}

116 
EXPORT_SYMBOL
(
©h9k_cmn_rx_ac˚±
);

118 
	$©h9k_cmn_rx_skb_po°¥o˚ss
(
©h_comm⁄
 *
comm⁄
,

119 
sk_buff
 *
skb
,

120 
©h_rx_°©us
 *
rx_°©s
,

121 
õì80211_rx_°©us
 *
rxs
,

122 
boﬁ
 
de¸y±_îr‹
)

124 
©h_hw
 *
ah
 = 
comm⁄
->ah;

125 
õì80211_hdr
 *
hdr
;

126 
hdæí
, 
∑dpos
, 
∑dsize
;

127 
u8
 
keyix
;

128 
__À16
 
fc
;

131 
hdr
 = (
õì80211_hdr
 *Ë
skb
->
d©a
;

132 
hdæí
 = 
	`õì80211_gë_hdæí_‰om_skb
(
skb
);

133 
fc
 = 
hdr
->
‰ame_c⁄åﬁ
;

134 
∑dpos
 = 
	`õì80211_hdæí
(
fc
);

144 
∑dsize
 = 
∑dpos
 & 3;

145 i‡(
∑dsize
 && 
skb
->
Àn
>=
∑dpos
+∑dsize+
FCS_LEN
) {

146 
	`memmove
(
skb
->
d©a
 + 
∑dsize
, skb->d©a, 
∑dpos
);

147 
	`skb_puŒ
(
skb
, 
∑dsize
);

150 
keyix
 = 
rx_°©s
->
rs_keyix
;

152 i‡(!(
keyix
 =
ATH9K_RXKEYIX_INVALID
Ë&& !
de¸y±_îr‹
 &&

153 
	`õì80211_has_¥Ÿe˘ed
(
fc
)) {

154 
rxs
->
Êag
 |
RX_FLAG_DECRYPTED
;

155 } i‡(
	`õì80211_has_¥Ÿe˘ed
(
fc
)

156 && !
de¸y±_îr‹
 && 
skb
->
Àn
 >
hdæí
 + 4) {

157 
keyix
 = 
skb
->
d©a
[
hdæí
 + 3] >> 6;

159 i‡(
	`ã°_bô
(
keyix
, 
comm⁄
->
keym≠
))

160 
rxs
->
Êag
 |
RX_FLAG_DECRYPTED
;

162 i‡(
ah
->
sw_mgmt_¸y±o
 &&

163 (
rxs
->
Êag
 & 
RX_FLAG_DECRYPTED
) &&

164 
	`õì80211_is_mgmt
(
fc
))

166 
rxs
->
Êag
 &~
RX_FLAG_DECRYPTED
;

167 
	}
}

168 
EXPORT_SYMBOL
(
©h9k_cmn_rx_skb_po°¥o˚ss
);

170 
	$©h9k_cmn_¥o˚ss_øã
(
©h_comm⁄
 *
comm⁄
,

171 
õì80211_hw
 *
hw
,

172 
©h_rx_°©us
 *
rx_°©s
,

173 
õì80211_rx_°©us
 *
rxs
)

175 
õì80211_suµ‹ãd_b™d
 *
sb™d
;

176 
õì80211_b™d
 
b™d
;

177 
i
 = 0;

178 
©h_hw
 *
ah
 = 
comm⁄
->ah;

180 
b™d
 = 
ah
->
curch™
->
ch™
->band;

181 
sb™d
 = 
hw
->
wùhy
->
b™ds
[
b™d
];

183 i‡(
	`IS_CHAN_QUARTER_RATE
(
ah
->
curch™
))

184 
rxs
->
Êag
 |
RX_FLAG_5MHZ
;

185 i‡(
	`IS_CHAN_HALF_RATE
(
ah
->
curch™
))

186 
rxs
->
Êag
 |
RX_FLAG_10MHZ
;

188 i‡(
rx_°©s
->
rs_øã
 & 0x80) {

190 
rxs
->
Êag
 |
RX_FLAG_HT
;

191 
rxs
->
Êag
 |
rx_°©s
->flag;

192 
rxs
->
øã_idx
 = 
rx_°©s
->
rs_øã
 & 0x7f;

196 
i
 = 0; i < 
sb™d
->
n_bôøãs
; i++) {

197 i‡(
sb™d
->
bôøãs
[
i
].
hw_vÆue
 =
rx_°©s
->
rs_øã
) {

198 
rxs
->
øã_idx
 = 
i
;

201 i‡(
sb™d
->
bôøãs
[
i
].
hw_vÆue_sh‹t
 =
rx_°©s
->
rs_øã
) {

202 
rxs
->
Êag
 |
RX_FLAG_SHORTPRE
;

203 
rxs
->
øã_idx
 = 
i
;

208  -
EINVAL
;

209 
	}
}

210 
EXPORT_SYMBOL
(
©h9k_cmn_¥o˚ss_øã
);

212 
	$©h9k_cmn_¥o˚ss_rssi
(
©h_comm⁄
 *
comm⁄
,

213 
õì80211_hw
 *
hw
,

214 
©h_rx_°©us
 *
rx_°©s
,

215 
õì80211_rx_°©us
 *
rxs
)

217 
©h_hw
 *
ah
 = 
comm⁄
->ah;

218 
œ°_rssi
;

219 
rssi
 = 
rx_°©s
->
rs_rssi
;

220 
i
, 
j
;

225 i‡(
rx_°©s
->
rs_m‹óggr
) {

226 
rxs
->
Êag
 |
RX_FLAG_NO_SIGNAL_VAL
;

234 i‡(
rx_°©s
->
rs_rssi
 =
ATH9K_RSSI_BAD
) {

235 
rxs
->
Êag
 |
RX_FLAG_NO_SIGNAL_VAL
;

239 
i
 = 0, 
j
 = 0; i < 
	`ARRAY_SIZE
(
rx_°©s
->
rs_rssi_˘l
); i++) {

240 
s8
 
rssi
;

242 i‡(!(
ah
->
rxchaömask
 & 
	`BIT
(
i
)))

245 
rssi
 = 
rx_°©s
->
rs_rssi_˘l
[
i
];

246 i‡(
rssi
 !
ATH9K_RSSI_BAD
) {

247 
rxs
->
chaös
 |
	`BIT
(
j
);

248 
rxs
->
chaö_sig«l
[
j
] = 
ah
->
noi£
 + 
rssi
;

250 
j
++;

256 i‡(
rx_°©s
->
is_mybóc⁄
 &&

257 ((
ah
->
›mode
 =
NL80211_IFTYPE_STATION
) ||

258 (
ah
->
›mode
 =
NL80211_IFTYPE_ADHOC
))) {

259 
	`ATH_RSSI_LPF
(
comm⁄
->
œ°_rssi
, 
rx_°©s
->
rs_rssi
);

260 
œ°_rssi
 = 
comm⁄
->last_rssi;

262 i‡(
	`likñy
(
œ°_rssi
 !
ATH_RSSI_DUMMY_MARKER
))

263 
rssi
 = 
	`ATH_EP_RND
(
œ°_rssi
, 
ATH_RSSI_EP_MULTIPLIER
);

264 i‡(
rssi
 < 0)

265 
rssi
 = 0;

267 
ah
->
°©s
.
avgbrssi
 = 
rssi
;

270 
rxs
->
sig«l
 = 
ah
->
noi£
 + 
rx_°©s
->
rs_rssi
;

271 
	}
}

272 
EXPORT_SYMBOL
(
©h9k_cmn_¥o˚ss_rssi
);

274 
	$©h9k_cmn_gë_hw_¸y±o_keyty≥
(
sk_buff
 *
skb
)

276 
õì80211_tx_öfo
 *
tx_öfo
 = 
	`IEEE80211_SKB_CB
(
skb
);

278 i‡(
tx_öfo
->
c⁄åﬁ
.
hw_key
) {

279 
tx_öfo
->
c⁄åﬁ
.
hw_key
->
cùhî
) {

280 
WLAN_CIPHER_SUITE_WEP40
:

281 
WLAN_CIPHER_SUITE_WEP104
:

282  
ATH9K_KEY_TYPE_WEP
;

283 
WLAN_CIPHER_SUITE_TKIP
:

284  
ATH9K_KEY_TYPE_TKIP
;

285 
WLAN_CIPHER_SUITE_CCMP
:

286  
ATH9K_KEY_TYPE_AES
;

292  
ATH9K_KEY_TYPE_CLEAR
;

293 
	}
}

294 
EXPORT_SYMBOL
(
©h9k_cmn_gë_hw_¸y±o_keyty≥
);

299 
	$©h9k_cmn_upd©e_ich™√l
(
©h_comm⁄
 *
comm⁄
,

300 
©h9k_ch™√l
 *
ich™
,

301 
cfg80211_ch™_def
 *
ch™def
)

303 
õì80211_ch™√l
 *
ch™
 = 
ch™def
->chan;

304 
u16
 
Êags
 = 0;

305 
width
;

307 
ich™
->
ch™√l
 = 
ch™
->
˚¡î_‰eq
;

308 
ich™
->
ch™
 = chan;

310 i‡(
ch™
->
b™d
 =
IEEE80211_BAND_5GHZ
)

311 
Êags
 |
CHANNEL_5GHZ
;

313 
comm⁄
->
ch™_bw
) {

315 
width
 = 
NL80211_CHAN_WIDTH_5
;

318 
width
 = 
NL80211_CHAN_WIDTH_10
;

321 
width
 = 
ch™def
->width;

325 
width
) {

326 
NL80211_CHAN_WIDTH_5
:

327 
Êags
 |
CHANNEL_QUARTER
;

329 
NL80211_CHAN_WIDTH_10
:

330 
Êags
 |
CHANNEL_HALF
;

332 
NL80211_CHAN_WIDTH_20_NOHT
:

334 
NL80211_CHAN_WIDTH_20
:

335 
Êags
 |
CHANNEL_HT
;

337 
NL80211_CHAN_WIDTH_40
:

338 i‡(
ch™def
->
˚¡î_‰eq1
 > ch™def->
ch™
->
˚¡î_‰eq
)

339 
Êags
 |
CHANNEL_HT40PLUS
 | 
CHANNEL_HT
;

341 
Êags
 |
CHANNEL_HT40MINUS
 | 
CHANNEL_HT
;

344 
	`WARN_ON
(1);

347 
ich™
->
ch™√lFœgs
 = 
Êags
;

348 
	}
}

353 
©h9k_ch™√l
 *
	$©h9k_cmn_gë_ch™√l
(
õì80211_hw
 *
hw
,

354 
©h_hw
 *
ah
,

355 
cfg80211_ch™_def
 *
ch™def
)

357 
õì80211_ch™√l
 *
curch™
 = 
ch™def
->
ch™
;

358 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

359 
©h9k_ch™√l
 *
ch™√l
;

361 
ch™√l
 = &
ah
->
ch™√ls
[
curch™
->
hw_vÆue
];

362 
	`©h9k_cmn_upd©e_ich™√l
(
comm⁄
, 
ch™√l
, 
ch™def
);

364  
ch™√l
;

365 
	}
}

366 
EXPORT_SYMBOL
(
©h9k_cmn_gë_ch™√l
);

368 
	$©h9k_cmn_cou¡_°ªams
(
chaömask
, 
max
)

370 
°ªams
 = 0;

373 i‡(++
°ªams
 =
max
)

375 } (
chaömask
 = chainmask & (chainmask - 1)));

377  
°ªams
;

378 
	}
}

379 
EXPORT_SYMBOL
(
©h9k_cmn_cou¡_°ªams
);

381 
	$©h9k_cmn_upd©e_txpow
(
©h_hw
 *
ah
, 
u16
 
cur_txpow
,

382 
u16
 
√w_txpow
, u16 *
txpowî
)

384 
©h_ªguœt‹y
 *
ªg
 = 
	`©h9k_hw_ªguœt‹y
(
ah
);

386 i‡(
ªg
->
powî_limô
 !
√w_txpow
)

387 
	`©h9k_hw_£t_txpowîlimô
(
ah
, 
√w_txpow
, 
Ál£
);

390 *
txpowî
 = 
ªg
->
max_powî_Àvñ
;

391 
	}
}

392 
EXPORT_SYMBOL
(
©h9k_cmn_upd©e_txpow
);

394 
	$©h9k_cmn_öô_¸y±o
(
©h_hw
 *
ah
)

396 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

397 
i
 = 0;

400 
comm⁄
->
keymax
 = 
AR_KEYTABLE_SIZE
;

408 i‡(
ah
->
misc_mode
 & 
AR_PCU_MIC_NEW_LOC_ENA
)

409 
comm⁄
->
¸y±_ˇps
 |
ATH_CRYPT_CAP_MIC_COMBINED
;

415 
i
 = 0; i < 
comm⁄
->
keymax
; i++)

416 
	`©h_hw_keyª£t
(
comm⁄
, (
u16
Ë
i
);

417 
	}
}

418 
EXPORT_SYMBOL
(
©h9k_cmn_öô_¸y±o
);

420 
__öô
 
	$©h9k_cmn_öô
()

423 
	}
}

424 
moduÀ_öô
(
©h9k_cmn_öô
);

426 
__exô
 
	$©h9k_cmn_exô
()

429 
	}
}

430 
moduÀ_exô
(
©h9k_cmn_exô
);

	@common.h

17 
	~<√t/mac80211.h
>

19 
	~"../©h.h
"

21 
	~"hw.h
"

22 
	~"hw-›s.h
"

24 
	~"comm⁄-öô.h
"

25 
	~"comm⁄-bóc⁄.h
"

26 
	~"comm⁄-debug.h
"

30 
	#WME_BA_BMP_SIZE
 64

	)

31 
	#WME_MAX_BA
 
WME_BA_BMP_SIZE


	)

32 
	#ATH_TID_MAX_BUFS
 (2 * 
WME_MAX_BA
)

	)

34 
	#ATH_RSSI_DUMMY_MARKER
 127

	)

35 
	#ATH_RSSI_LPF_LEN
 10

	)

36 
	#RSSI_LPF_THRESHOLD
 -20

	)

37 
	#ATH_RSSI_EP_MULTIPLIER
 (1<<7)

	)

38 
	#ATH_EP_MUL
(
x
, 
mul
Ë((xË* (mul))

	)

39 
	#ATH_RSSI_IN
(
x
Ë(
	`ATH_EP_MUL
((x), 
ATH_RSSI_EP_MULTIPLIER
))

	)

40 
	#ATH_LPF_RSSI
(
x
, 
y
, 
Àn
) \

41 ((
x
 !
ATH_RSSI_DUMMY_MARKER
Ë? (((xË* ((
Àn
Ë- 1Ë+ (
y
)Ë/ (Àn)Ë: (y))

	)

42 
	#ATH_RSSI_LPF
(
x
, 
y
) do { \

43 i‡((
y
Ë>
RSSI_LPF_THRESHOLD
) \

44 
x
 = 
	`ATH_LPF_RSSI
((x), 
	`ATH_RSSI_IN
((
y
)), 
ATH_RSSI_LPF_LEN
); \

45 } 0)

	)

46 
	#ATH_EP_RND
(
x
, 
mul
) \

47 (((
x
Ë+ ((
mul
)/2)Ë/ (mul))

	)

49 
	#IEEE80211_MS_TO_TU
(
x
Ë(((xË* 1000Ë/ 1024)

	)

51 
	s©h_bóc⁄_c⁄fig
 {

52 
	mbóc⁄_öãrvÆ
;

53 
u16
 
	mdtim_≥riod
;

54 
u16
 
	mbmiss_timeout
;

55 
u8
 
	mdtim_cou¡
;

56 
u8
 
	míabÀ_bóc⁄
;

57 
boﬁ
 
	mibss_¸ót‹
;

58 
u32
 
	m√xâbâ
;

59 
u32
 
	mötvÆ
;

62 
boﬁ
 
©h9k_cmn_rx_ac˚±
(
©h_comm⁄
 *
comm⁄
,

63 
õì80211_hdr
 *
hdr
,

64 
õì80211_rx_°©us
 *
rxs
,

65 
©h_rx_°©us
 *
rx_°©s
,

66 
boﬁ
 *
de¸y±_îr‹
,

67 
rxfûãr
);

68 
©h9k_cmn_rx_skb_po°¥o˚ss
(
©h_comm⁄
 *
comm⁄
,

69 
sk_buff
 *
skb
,

70 
©h_rx_°©us
 *
rx_°©s
,

71 
õì80211_rx_°©us
 *
rxs
,

72 
boﬁ
 
de¸y±_îr‹
);

73 
©h9k_cmn_¥o˚ss_øã
(
©h_comm⁄
 *
comm⁄
,

74 
õì80211_hw
 *
hw
,

75 
©h_rx_°©us
 *
rx_°©s
,

76 
õì80211_rx_°©us
 *
rxs
);

77 
©h9k_cmn_¥o˚ss_rssi
(
©h_comm⁄
 *
comm⁄
,

78 
õì80211_hw
 *
hw
,

79 
©h_rx_°©us
 *
rx_°©s
,

80 
õì80211_rx_°©us
 *
rxs
);

81 
©h9k_cmn_gë_hw_¸y±o_keyty≥
(
sk_buff
 *
skb
);

82 
©h9k_ch™√l
 *
©h9k_cmn_gë_ch™√l
(
õì80211_hw
 *
hw
,

83 
©h_hw
 *
ah
,

84 
cfg80211_ch™_def
 *
ch™def
);

85 
©h9k_cmn_cou¡_°ªams
(
chaömask
, 
max
);

86 
©h9k_cmn_btc€x_bt_°omp
(
©h_comm⁄
 *
comm⁄
,

87 
©h_°omp_ty≥
 
°omp_ty≥
);

88 
©h9k_cmn_upd©e_txpow
(
©h_hw
 *
ah
, 
u16
 
cur_txpow
,

89 
u16
 
√w_txpow
, u16 *
txpowî
);

90 
©h9k_cmn_öô_¸y±o
(
©h_hw
 *
ah
);

	@debug.c

17 
	~<löux/¶ab.h
>

18 
	~<löux/vmÆloc.h
>

19 
	~<löux/exp‹t.h
>

20 
	~<asm/u«lig√d.h
>

22 
	~"©h9k.h
"

24 
	#REG_WRITE_D
(
_ah
, 
_ªg
, 
_vÆ
) \

25 
	`©h9k_hw_comm⁄
(
_ah
)->
›s
->
	`wrôe
((_ah), (
_vÆ
), (
_ªg
))

	)

26 
	#REG_READ_D
(
_ah
, 
_ªg
) \

27 
	`©h9k_hw_comm⁄
(
_ah
)->
›s
->
	`ªad
((_ah), (
_ªg
))

	)

29 
	$©h9k_debug_sync_ˇu£
(
©h_so·c
 *
sc
, 
u32
 
sync_ˇu£
)

31 i‡(
sync_ˇu£
)

32 
sc
->
debug
.
°©s
.
i°©s
.
sync_ˇu£_Æl
++;

33 i‡(
sync_ˇu£
 & 
AR_INTR_SYNC_RTC_IRQ
)

34 
sc
->
debug
.
°©s
.
i°©s
.
sync_πc_úq
++;

35 i‡(
sync_ˇu£
 & 
AR_INTR_SYNC_MAC_IRQ
)

36 
sc
->
debug
.
°©s
.
i°©s
.
sync_mac_úq
++;

37 i‡(
sync_ˇu£
 & 
AR_INTR_SYNC_EEPROM_ILLEGAL_ACCESS
)

38 
sc
->
debug
.
°©s
.
i°©s
.
ì¥om_ûÀgÆ_ac˚ss
++;

39 i‡(
sync_ˇu£
 & 
AR_INTR_SYNC_APB_TIMEOUT
)

40 
sc
->
debug
.
°©s
.
i°©s
.
≠b_timeout
++;

41 i‡(
sync_ˇu£
 & 
AR_INTR_SYNC_PCI_MODE_CONFLICT
)

42 
sc
->
debug
.
°©s
.
i°©s
.
pci_mode_c⁄Êi˘
++;

43 i‡(
sync_ˇu£
 & 
AR_INTR_SYNC_HOST1_FATAL
)

44 
sc
->
debug
.
°©s
.
i°©s
.
ho°1_Áèl
++;

45 i‡(
sync_ˇu£
 & 
AR_INTR_SYNC_HOST1_PERR
)

46 
sc
->
debug
.
°©s
.
i°©s
.
ho°1_≥º
++;

47 i‡(
sync_ˇu£
 & 
AR_INTR_SYNC_TRCV_FIFO_PERR
)

48 
sc
->
debug
.
°©s
.
i°©s
.
åcv_fifo_≥º
++;

49 i‡(
sync_ˇu£
 & 
AR_INTR_SYNC_RADM_CPL_EP
)

50 
sc
->
debug
.
°©s
.
i°©s
.
ødm_˝l_ï
++;

51 i‡(
sync_ˇu£
 & 
AR_INTR_SYNC_RADM_CPL_DLLP_ABORT
)

52 
sc
->
debug
.
°©s
.
i°©s
.
ødm_˝l_dŒp_ab‹t
++;

53 i‡(
sync_ˇu£
 & 
AR_INTR_SYNC_RADM_CPL_TLP_ABORT
)

54 
sc
->
debug
.
°©s
.
i°©s
.
ødm_˝l_ép_ab‹t
++;

55 i‡(
sync_ˇu£
 & 
AR_INTR_SYNC_RADM_CPL_ECRC_ERR
)

56 
sc
->
debug
.
°©s
.
i°©s
.
ødm_˝l_e¸c_îr
++;

57 i‡(
sync_ˇu£
 & 
AR_INTR_SYNC_RADM_CPL_TIMEOUT
)

58 
sc
->
debug
.
°©s
.
i°©s
.
ødm_˝l_timeout
++;

59 i‡(
sync_ˇu£
 & 
AR_INTR_SYNC_LOCAL_TIMEOUT
)

60 
sc
->
debug
.
°©s
.
i°©s
.
loˇl_timeout
++;

61 i‡(
sync_ˇu£
 & 
AR_INTR_SYNC_PM_ACCESS
)

62 
sc
->
debug
.
°©s
.
i°©s
.
pm_ac˚ss
++;

63 i‡(
sync_ˇu£
 & 
AR_INTR_SYNC_MAC_AWAKE
)

64 
sc
->
debug
.
°©s
.
i°©s
.
mac_awake
++;

65 i‡(
sync_ˇu£
 & 
AR_INTR_SYNC_MAC_ASLEEP
)

66 
sc
->
debug
.
°©s
.
i°©s
.
mac_a¶ìp
++;

67 i‡(
sync_ˇu£
 & 
AR_INTR_SYNC_MAC_SLEEP_ACCESS
)

68 
sc
->
debug
.
°©s
.
i°©s
.
mac_¶ìp_ac˚ss
++;

69 
	}
}

71 
ssize_t
 
	$©h9k_debugfs_ªad_buf
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

72 
size_t
 
cou¡
, 
loff_t
 *
µos
)

74 
u8
 *
buf
 = 
fûe
->
¥iv©e_d©a
;

75  
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
	`°æí
(buf));

76 
	}
}

78 
	$©h9k_debugfs_ªÀa£_buf
(
öode
 *öode, 
fûe
 *file)

80 
	`v‰ì
(
fûe
->
¥iv©e_d©a
);

82 
	}
}

84 #ifde‡
CPTCFG_ATH_DEBUG


86 
ssize_t
 
	$ªad_fûe_debug
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

87 
size_t
 
cou¡
, 
loff_t
 *
µos
)

89 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

90 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

91 
buf
[32];

92 
Àn
;

94 
Àn
 = 
	`•rötf
(
buf
, "0x%08x\n", 
comm⁄
->
debug_mask
);

95  
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

96 
	}
}

98 
ssize_t
 
	$wrôe_fûe_debug
(
fûe
 *fûe, c⁄° 
__u£r
 *
u£r_buf
,

99 
size_t
 
cou¡
, 
loff_t
 *
µos
)

101 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

102 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

103 
mask
;

104 
buf
[32];

105 
ssize_t
 
Àn
;

107 
Àn
 = 
	`mö
(
cou¡
, (
buf
) - 1);

108 i‡(
	`c›y_‰om_u£r
(
buf
, 
u£r_buf
, 
Àn
))

109  -
EFAULT
;

111 
buf
[
Àn
] = '\0';

112 i‡(
	`k°πoul
(
buf
, 0, &
mask
))

113  -
EINVAL
;

115 
comm⁄
->
debug_mask
 = 
mask
;

116  
cou¡
;

117 
	}
}

119 c⁄° 
fûe_›î©i⁄s
 
	gf›s_debug
 = {

120 .
ªad
 = 
ªad_fûe_debug
,

121 .
	gwrôe
 = 
wrôe_fûe_debug
,

122 .
	g›í
 = 
sim∂e_›í
,

123 .
	gow√r
 = 
THIS_MODULE
,

124 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

129 
	#DMA_BUF_LEN
 1024

	)

132 
ssize_t
 
	$ªad_fûe_™i
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

133 
size_t
 
cou¡
, 
loff_t
 *
µos
)

135 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

136 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

137 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

138 
Àn
 = 0;

139 c⁄° 
size
 = 1024;

140 
ssize_t
 
ªtvÆ
 = 0;

141 *
buf
;

142 
i
;

144 c⁄° *
«me
;

145 
vÆ
;

146 } 
™i_öfo
[] = {

147 { "ANI RESET", 
ah
->
°©s
.
a°_™i_ª£t
 },

148 { "OFDM LEVEL", 
ah
->
™i
.
ofdmNoi£ImmunôyLevñ
 },

149 { "CCK LEVEL", 
ah
->
™i
.
cckNoi£ImmunôyLevñ
 },

150 { "SPUR UP", 
ah
->
°©s
.
a°_™i_•urup
 },

151 { "SPUR DOWN", 
ah
->
°©s
.
a°_™i_•urup
 },

152 { "OFDM WS-DET ON", 
ah
->
°©s
.
a°_™i_ofdm⁄
 },

153 { "OFDM WS-DET OFF", 
ah
->
°©s
.
a°_™i_ofdmoff
 },

154 { "MRC-CCK ON", 
ah
->
°©s
.
a°_™i_ccklow
 },

155 { "MRC-CCK OFF", 
ah
->
°©s
.
a°_™i_cckhigh
 },

156 { "FIR-STEP UP", 
ah
->
°©s
.
a°_™i_°ïup
 },

157 { "FIR-STEP DOWN", 
ah
->
°©s
.
a°_™i_°ïdown
 },

158 { "INV LISTENTIME", 
ah
->
°©s
.
a°_™i_ eg_‹_lzîo
 },

159 { "OFDM ERRORS", 
ah
->
°©s
.
a°_™i_ofdmîrs
 },

160 { "CCK ERRORS", 
ah
->
°©s
.
a°_™i_cckîrs
 },

163 
buf
 = 
	`kzÆloc
(
size
, 
GFP_KERNEL
);

164 i‡(
buf
 =
NULL
)

165  -
ENOMEM
;

167 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%15s: %s\n", "ANI",

168 
comm⁄
->
dißbÀ_™i
 ? "DISABLED" : "ENABLED");

170 i‡(
comm⁄
->
dißbÀ_™i
)

171 
exô
;

173 
i
 = 0; i < 
	`ARRAY_SIZE
(
™i_öfo
); i++)

174 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%15s: %u\n",

175 
™i_öfo
[
i
].
«me
,áni_öfo[i].
vÆ
);

177 
exô
:

178 i‡(
Àn
 > 
size
)

179 
Àn
 = 
size
;

181 
ªtvÆ
 = 
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

182 
	`k‰ì
(
buf
);

184  
ªtvÆ
;

185 
	}
}

187 
ssize_t
 
	$wrôe_fûe_™i
(
fûe
 *file,

188 c⁄° 
__u£r
 *
u£r_buf
,

189 
size_t
 
cou¡
, 
loff_t
 *
µos
)

191 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

192 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

193 
™i
;

194 
buf
[32];

195 
ssize_t
 
Àn
;

197 
Àn
 = 
	`mö
(
cou¡
, (
buf
) - 1);

198 i‡(
	`c›y_‰om_u£r
(
buf
, 
u£r_buf
, 
Àn
))

199  -
EFAULT
;

201 
buf
[
Àn
] = '\0';

202 i‡(
	`k°πoul
(
buf
, 0, &
™i
))

203  -
EINVAL
;

205 i‡(
™i
 < 0 ||áni > 1)

206  -
EINVAL
;

208 
comm⁄
->
dißbÀ_™i
 = !
™i
;

210 i‡(
comm⁄
->
dißbÀ_™i
) {

211 
	`˛ór_bô
(
ATH_OP_ANI_RUN
, &
comm⁄
->
›_Êags
);

212 
	`©h_°›_™i
(
sc
);

214 
	`©h_check_™i
(
sc
);

217  
cou¡
;

218 
	}
}

220 c⁄° 
fûe_›î©i⁄s
 
	gf›s_™i
 = {

221 .
ªad
 = 
ªad_fûe_™i
,

222 .
	gwrôe
 = 
wrôe_fûe_™i
,

223 .
	g›í
 = 
sim∂e_›í
,

224 .
	gow√r
 = 
THIS_MODULE
,

225 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

228 #ifde‡
CPTCFG_ATH9K_BTCOEX_SUPPORT


230 
ssize_t
 
	$ªad_fûe_bt_™t_divîsôy
(
fûe
 *file,

231 
__u£r
 *
u£r_buf
,

232 
size_t
 
cou¡
, 
loff_t
 *
µos
)

234 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

235 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

236 
buf
[32];

237 
Àn
;

239 
Àn
 = 
	`•rötf
(
buf
, "%d\n", 
comm⁄
->
bt_™t_divîsôy
);

240  
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

241 
	}
}

243 
ssize_t
 
	$wrôe_fûe_bt_™t_divîsôy
(
fûe
 *file,

244 c⁄° 
__u£r
 *
u£r_buf
,

245 
size_t
 
cou¡
, 
loff_t
 *
µos
)

247 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

248 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

249 
©h9k_hw_ˇ∑bûôõs
 *
pC≠
 = &
sc
->
sc_ah
->
ˇps
;

250 
bt_™t_divîsôy
;

251 
buf
[32];

252 
ssize_t
 
Àn
;

254 
Àn
 = 
	`mö
(
cou¡
, (
buf
) - 1);

255 i‡(
	`c›y_‰om_u£r
(
buf
, 
u£r_buf
, 
Àn
))

256  -
EFAULT
;

258 i‡(!(
pC≠
->
hw_ˇps
 & 
ATH9K_HW_CAP_BT_ANT_DIV
))

259 
exô
;

261 
buf
[
Àn
] = '\0';

262 i‡(
	`k°πoul
(
buf
, 0, &
bt_™t_divîsôy
))

263  -
EINVAL
;

265 
comm⁄
->
bt_™t_divîsôy
 = !!bt_ant_diversity;

266 
	`©h9k_ps_wakeup
(
sc
);

267 
	`©h9k_hw_£t_bt_™t_divîsôy
(
sc
->
sc_ah
, 
comm⁄
->
bt_™t_divîsôy
);

268 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "Enable WLAN/BT RX Antenna diversity: %d\n",

269 
comm⁄
->
bt_™t_divîsôy
);

270 
	`©h9k_ps_ª°‹e
(
sc
);

271 
exô
:

272  
cou¡
;

273 
	}
}

275 c⁄° 
fûe_›î©i⁄s
 
	gf›s_bt_™t_divîsôy
 = {

276 .
ªad
 = 
ªad_fûe_bt_™t_divîsôy
,

277 .
	gwrôe
 = 
wrôe_fûe_bt_™t_divîsôy
,

278 .
	g›í
 = 
sim∂e_›í
,

279 .
	gow√r
 = 
THIS_MODULE
,

280 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

285 
	$©h9k_debug_°©_™t
(
©h_so·c
 *
sc
,

286 
©h_hw_™tcomb_c⁄f
 *
div_™t_c⁄f
,

287 
maö_rssi_avg
, 
Æt_rssi_avg
)

289 
©h_™ã¬a_°©s
 *
as_maö
 = &
sc
->
debug
.
°©s
.
™t_°©s
[
ANT_MAIN
];

290 
©h_™ã¬a_°©s
 *
as_Æt
 = &
sc
->
debug
.
°©s
.
™t_°©s
[
ANT_ALT
];

292 
as_maö
->
 a_©ãm±_˙t
[
div_™t_c⁄f
->
maö_ a_c⁄f
]++;

293 
as_Æt
->
 a_©ãm±_˙t
[
div_™t_c⁄f
->
Æt_ a_c⁄f
]++;

295 
as_maö
->
rssi_avg
 = 
maö_rssi_avg
;

296 
as_Æt
->
rssi_avg
 = 
Æt_rssi_avg
;

297 
	}
}

299 
ssize_t
 
	$ªad_fûe_™ã¬a_divîsôy
(
fûe
 *file,

300 
__u£r
 *
u£r_buf
,

301 
size_t
 
cou¡
, 
loff_t
 *
µos
)

303 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

304 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

305 
©h9k_hw_ˇ∑bûôõs
 *
pC≠
 = &
ah
->
ˇps
;

306 
©h_™ã¬a_°©s
 *
as_maö
 = &
sc
->
debug
.
°©s
.
™t_°©s
[
ANT_MAIN
];

307 
©h_™ã¬a_°©s
 *
as_Æt
 = &
sc
->
debug
.
°©s
.
™t_°©s
[
ANT_ALT
];

308 
©h_hw_™tcomb_c⁄f
 
div_™t_c⁄f
;

309 
Àn
 = 0;

310 c⁄° 
size
 = 1024;

311 
ssize_t
 
ªtvÆ
 = 0;

312 *
buf
;

313 c⁄° *
 a_c⁄f_°r
[4] = {

317 
buf
 = 
	`kzÆloc
(
size
, 
GFP_KERNEL
);

318 i‡(
buf
 =
NULL
)

319  -
ENOMEM
;

321 i‡(!(
pC≠
->
hw_ˇps
 & 
ATH9K_HW_CAP_ANT_DIV_COMB
)) {

322 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%s\n",

324 
exô
;

327 
	`©h9k_ps_wakeup
(
sc
);

328 
	`©h9k_hw_™tdiv_comb_c⁄f_gë
(
ah
, &
div_™t_c⁄f
);

329 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "Current MAIN config : %s\n",

330 
 a_c⁄f_°r
[
div_™t_c⁄f
.
maö_ a_c⁄f
]);

331 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "Current ALT config : %s\n",

332 
 a_c⁄f_°r
[
div_™t_c⁄f
.
Æt_ a_c⁄f
]);

333 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "Average MAIN RSSI : %d\n",

334 
as_maö
->
rssi_avg
);

335 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "Average ALT RSSI : %d\n\n",

336 
as_Æt
->
rssi_avg
);

337 
	`©h9k_ps_ª°‹e
(
sc
);

339 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "Packet Receive Cnt:\n");

340 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "-------------------\n");

342 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%30s%15s\n",

344 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%-14s:%15d%15d\n",

346 
as_maö
->
ªcv_˙t
,

347 
as_Æt
->
ªcv_˙t
);

348 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%-14s:%15d%15d\n",

350 
as_maö
->
 a_ªcv_˙t
[
ATH_ANT_DIV_COMB_LNA1
],

351 
as_Æt
->
 a_ªcv_˙t
[
ATH_ANT_DIV_COMB_LNA1
]);

352 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%-14s:%15d%15d\n",

354 
as_maö
->
 a_ªcv_˙t
[
ATH_ANT_DIV_COMB_LNA2
],

355 
as_Æt
->
 a_ªcv_˙t
[
ATH_ANT_DIV_COMB_LNA2
]);

356 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%-14s:%15d%15d\n",

358 
as_maö
->
 a_ªcv_˙t
[
ATH_ANT_DIV_COMB_LNA1_PLUS_LNA2
],

359 
as_Æt
->
 a_ªcv_˙t
[
ATH_ANT_DIV_COMB_LNA1_PLUS_LNA2
]);

360 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%-14s:%15d%15d\n",

362 
as_maö
->
 a_ªcv_˙t
[
ATH_ANT_DIV_COMB_LNA1_MINUS_LNA2
],

363 
as_Æt
->
 a_ªcv_˙t
[
ATH_ANT_DIV_COMB_LNA1_MINUS_LNA2
]);

365 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "\nLNA Config Attempts:\n");

366 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "--------------------\n");

368 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%30s%15s\n",

370 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%-14s:%15d%15d\n",

372 
as_maö
->
 a_©ãm±_˙t
[
ATH_ANT_DIV_COMB_LNA1
],

373 
as_Æt
->
 a_©ãm±_˙t
[
ATH_ANT_DIV_COMB_LNA1
]);

374 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%-14s:%15d%15d\n",

376 
as_maö
->
 a_©ãm±_˙t
[
ATH_ANT_DIV_COMB_LNA2
],

377 
as_Æt
->
 a_©ãm±_˙t
[
ATH_ANT_DIV_COMB_LNA2
]);

378 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%-14s:%15d%15d\n",

380 
as_maö
->
 a_©ãm±_˙t
[
ATH_ANT_DIV_COMB_LNA1_PLUS_LNA2
],

381 
as_Æt
->
 a_©ãm±_˙t
[
ATH_ANT_DIV_COMB_LNA1_PLUS_LNA2
]);

382 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%-14s:%15d%15d\n",

384 
as_maö
->
 a_©ãm±_˙t
[
ATH_ANT_DIV_COMB_LNA1_MINUS_LNA2
],

385 
as_Æt
->
 a_©ãm±_˙t
[
ATH_ANT_DIV_COMB_LNA1_MINUS_LNA2
]);

387 
exô
:

388 i‡(
Àn
 > 
size
)

389 
Àn
 = 
size
;

391 
ªtvÆ
 = 
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

392 
	`k‰ì
(
buf
);

394  
ªtvÆ
;

395 
	}
}

397 c⁄° 
fûe_›î©i⁄s
 
	gf›s_™ã¬a_divîsôy
 = {

398 .
ªad
 = 
ªad_fûe_™ã¬a_divîsôy
,

399 .
	g›í
 = 
sim∂e_›í
,

400 .
	gow√r
 = 
THIS_MODULE
,

401 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

404 
ssize_t
 
	$ªad_fûe_dma
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

405 
size_t
 
cou¡
, 
loff_t
 *
µos
)

407 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

408 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

409 *
buf
;

410 
ªtvÆ
;

411 
Àn
 = 0;

412 
u32
 
vÆ
[
ATH9K_NUM_DMA_DEBUG_REGS
];

413 
i
, 
qcuOff£t
 = 0, 
dcuOff£t
 = 0;

414 
u32
 *
qcuBa£
 = &
vÆ
[0], *
dcuBa£
 = &val[4];

416 
buf
 = 
	`kmÆloc
(
DMA_BUF_LEN
, 
GFP_KERNEL
);

417 i‡(!
buf
)

418  -
ENOMEM
;

420 
	`©h9k_ps_wakeup
(
sc
);

422 
	`REG_WRITE_D
(
ah
, 
AR_MACMISC
,

423 ((
AR_MACMISC_DMA_OBS_LINE_8
 << 
AR_MACMISC_DMA_OBS_S
) |

424 (
AR_MACMISC_MISC_OBS_BUS_1
 <<

425 
AR_MACMISC_MISC_OBS_BUS_MSB_S
)));

427 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
DMA_BUF_LEN
 -Üen,

430 
i
 = 0; i < 
ATH9K_NUM_DMA_DEBUG_REGS
; i++) {

431 i‡(
i
 % 4 == 0)

432 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
DMA_BUF_LEN
 -Üen, "\n");

434 
vÆ
[
i
] = 
	`REG_READ_D
(
ah
, 
AR_DMADBG_0
 + (ò* (
u32
)));

435 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
DMA_BUF_LEN
 -Üen, "%d: %08x ",

436 
i
, 
vÆ
[i]);

439 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
DMA_BUF_LEN
 -Üen, "\n\n");

440 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
DMA_BUF_LEN
 -Üen,

443 
i
 = 0; i < 
ATH9K_NUM_QUEUES
; i++, 
qcuOff£t
 +4, 
dcuOff£t
 += 5) {

444 i‡(
i
 == 8) {

445 
qcuOff£t
 = 0;

446 
qcuBa£
++;

449 i‡(
i
 == 6) {

450 
dcuOff£t
 = 0;

451 
dcuBa£
++;

454 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
DMA_BUF_LEN
 -Üen,

456 
i
, (*
qcuBa£
 & (0x7 << 
qcuOff£t
)) >> qcuOffset,

457 (*
qcuBa£
 & (0x8 << 
qcuOff£t
)) >> (qcuOffset + 3),

458 
vÆ
[2] & (0x7 << (
i
 * 3)) >> (i * 3),

459 (*
dcuBa£
 & (0x1‡<< 
dcuOff£t
)) >> dcuOffset);

462 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
DMA_BUF_LEN
 -Üen, "\n");

464 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
DMA_BUF_LEN
 -Üen,

466 (
vÆ
[3] & 0x003c0000) >> 18, (val[3] & 0x03c00000) >> 22);

467 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
DMA_BUF_LEN
 -Üen,

469 (
vÆ
[3] & 0x1c000000) >> 26, (val[6] & 0x3));

470 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
DMA_BUF_LEN
 -Üen,

472 (
vÆ
[5] & 0x06000000) >> 25, (val[5] & 0x38000000) >> 27);

473 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
DMA_BUF_LEN
 -Üen,

475 (
vÆ
[6] & 0x000003fc) >> 2, (val[6] & 0x00000400) >> 10);

476 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
DMA_BUF_LEN
 -Üen,

478 (
vÆ
[6] & 0x00000800) >> 11, (val[6] & 0x00001000) >> 12);

479 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
DMA_BUF_LEN
 -Üen,

481 (
vÆ
[6] & 0x0001e000) >> 13, (val[6] & 0x001e0000) >> 17);

483 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
DMA_BUF_LEN
 -Üen, "pcu observe: 0x%x\n",

484 
	`REG_READ_D
(
ah
, 
AR_OBS_BUS_1
));

485 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
DMA_BUF_LEN
 -Üen,

486 "AR_CR: 0x%x\n", 
	`REG_READ_D
(
ah
, 
AR_CR
));

488 
	`©h9k_ps_ª°‹e
(
sc
);

490 i‡(
Àn
 > 
DMA_BUF_LEN
)

491 
Àn
 = 
DMA_BUF_LEN
;

493 
ªtvÆ
 = 
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

494 
	`k‰ì
(
buf
);

495  
ªtvÆ
;

496 
	}
}

498 c⁄° 
fûe_›î©i⁄s
 
	gf›s_dma
 = {

499 .
ªad
 = 
ªad_fûe_dma
,

500 .
	g›í
 = 
sim∂e_›í
,

501 .
	gow√r
 = 
THIS_MODULE
,

502 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

506 
	$©h_debug_°©_öãºu±
(
©h_so·c
 *
sc
, 
©h9k_öt
 
°©us
)

508 i‡(
°©us
)

509 
sc
->
debug
.
°©s
.
i°©s
.
tŸÆ
++;

510 i‡(
sc
->
sc_ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_EDMA
) {

511 i‡(
°©us
 & 
ATH9K_INT_RXLP
)

512 
sc
->
debug
.
°©s
.
i°©s
.
rxÕ
++;

513 i‡(
°©us
 & 
ATH9K_INT_RXHP
)

514 
sc
->
debug
.
°©s
.
i°©s
.
rxhp
++;

515 i‡(
°©us
 & 
ATH9K_INT_BB_WATCHDOG
)

516 
sc
->
debug
.
°©s
.
i°©s
.
bb_w©chdog
++;

518 i‡(
°©us
 & 
ATH9K_INT_RX
)

519 
sc
->
debug
.
°©s
.
i°©s
.
rxok
++;

521 i‡(
°©us
 & 
ATH9K_INT_RXEOL
)

522 
sc
->
debug
.
°©s
.
i°©s
.
rxeﬁ
++;

523 i‡(
°©us
 & 
ATH9K_INT_RXORN
)

524 
sc
->
debug
.
°©s
.
i°©s
.
rx‹n
++;

525 i‡(
°©us
 & 
ATH9K_INT_TX
)

526 
sc
->
debug
.
°©s
.
i°©s
.
txok
++;

527 i‡(
°©us
 & 
ATH9K_INT_TXURN
)

528 
sc
->
debug
.
°©s
.
i°©s
.
txu∫
++;

529 i‡(
°©us
 & 
ATH9K_INT_RXPHY
)

530 
sc
->
debug
.
°©s
.
i°©s
.
rxphyîr
++;

531 i‡(
°©us
 & 
ATH9K_INT_RXKCM
)

532 
sc
->
debug
.
°©s
.
i°©s
.
rx_keyˇche_miss
++;

533 i‡(
°©us
 & 
ATH9K_INT_SWBA
)

534 
sc
->
debug
.
°©s
.
i°©s
.
swba
++;

535 i‡(
°©us
 & 
ATH9K_INT_BMISS
)

536 
sc
->
debug
.
°©s
.
i°©s
.
bmiss
++;

537 i‡(
°©us
 & 
ATH9K_INT_BNR
)

538 
sc
->
debug
.
°©s
.
i°©s
.
bƒ
++;

539 i‡(
°©us
 & 
ATH9K_INT_CST
)

540 
sc
->
debug
.
°©s
.
i°©s
.
c°
++;

541 i‡(
°©us
 & 
ATH9K_INT_GTT
)

542 
sc
->
debug
.
°©s
.
i°©s
.
gâ
++;

543 i‡(
°©us
 & 
ATH9K_INT_TIM
)

544 
sc
->
debug
.
°©s
.
i°©s
.
tim
++;

545 i‡(
°©us
 & 
ATH9K_INT_CABEND
)

546 
sc
->
debug
.
°©s
.
i°©s
.
ˇbíd
++;

547 i‡(
°©us
 & 
ATH9K_INT_DTIMSYNC
)

548 
sc
->
debug
.
°©s
.
i°©s
.
dtimsync
++;

549 i‡(
°©us
 & 
ATH9K_INT_DTIM
)

550 
sc
->
debug
.
°©s
.
i°©s
.
dtim
++;

551 i‡(
°©us
 & 
ATH9K_INT_TSFOOR
)

552 
sc
->
debug
.
°©s
.
i°©s
.
tsfo‹
++;

553 i‡(
°©us
 & 
ATH9K_INT_MCI
)

554 
sc
->
debug
.
°©s
.
i°©s
.
mci
++;

555 i‡(
°©us
 & 
ATH9K_INT_GENTIMER
)

556 
sc
->
debug
.
°©s
.
i°©s
.
gí_timî
++;

557 
	}
}

559 
ssize_t
 
	$ªad_fûe_öãºu±
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

560 
size_t
 
cou¡
, 
loff_t
 *
µos
)

562 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

563 
Àn
 = 0;

564 
rv
;

565 
mxÀn
 = 4000;

566 *
buf
 = 
	`kmÆloc
(
mxÀn
, 
GFP_KERNEL
);

567 i‡(!
buf
)

568  -
ENOMEM
;

570 
	#PR_IS
(
a
, 
s
) \

572 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
mxÀn
 -Üen, \

573 "%21s: %10u\n", 
a
, \

574 
sc
->
debug
.
°©s
.
i°©s
.
s
); \

575 } 0)

	)

577 i‡(
sc
->
sc_ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_EDMA
) {

578 
	`PR_IS
("RXLP", 
rxÕ
);

579 
	`PR_IS
("RXHP", 
rxhp
);

580 
	`PR_IS
("WATHDOG", 
bb_w©chdog
);

582 
	`PR_IS
("RX", 
rxok
);

584 
	`PR_IS
("RXEOL", 
rxeﬁ
);

585 
	`PR_IS
("RXORN", 
rx‹n
);

586 
	`PR_IS
("TX", 
txok
);

587 
	`PR_IS
("TXURN", 
txu∫
);

588 
	`PR_IS
("MIB", 
mib
);

589 
	`PR_IS
("RXPHY", 
rxphyîr
);

590 
	`PR_IS
("RXKCM", 
rx_keyˇche_miss
);

591 
	`PR_IS
("SWBA", 
swba
);

592 
	`PR_IS
("BMISS", 
bmiss
);

593 
	`PR_IS
("BNR", 
bƒ
);

594 
	`PR_IS
("CST", 
c°
);

595 
	`PR_IS
("GTT", 
gâ
);

596 
	`PR_IS
("TIM", 
tim
);

597 
	`PR_IS
("CABEND", 
ˇbíd
);

598 
	`PR_IS
("DTIMSYNC", 
dtimsync
);

599 
	`PR_IS
("DTIM", 
dtim
);

600 
	`PR_IS
("TSFOOR", 
tsfo‹
);

601 
	`PR_IS
("MCI", 
mci
);

602 
	`PR_IS
("GENTIMER", 
gí_timî
);

603 
	`PR_IS
("TOTAL", 
tŸÆ
);

605 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
mxÀn
 -Üen,

608 
	`PR_IS
("Sync-AŒ", 
sync_ˇu£_Æl
);

609 
	`PR_IS
("RTC-IRQ", 
sync_πc_úq
);

610 
	`PR_IS
("MAC-IRQ", 
sync_mac_úq
);

611 
	`PR_IS
("EEPROM-IŒegÆ-Ac˚ss", 
ì¥om_ûÀgÆ_ac˚ss
);

612 
	`PR_IS
("APB-Timeout", 
≠b_timeout
);

613 
	`PR_IS
("PCI-Mode-C⁄Êi˘", 
pci_mode_c⁄Êi˘
);

614 
	`PR_IS
("HOST1-F©Æ", 
ho°1_Áèl
);

615 
	`PR_IS
("HOST1-Pîr", 
ho°1_≥º
);

616 
	`PR_IS
("TRCV-FIFO-Pîr", 
åcv_fifo_≥º
);

617 
	`PR_IS
("RADM-CPL-EP", 
ødm_˝l_ï
);

618 
	`PR_IS
("RADM-CPL-DLLP-Ab‹t", 
ødm_˝l_dŒp_ab‹t
);

619 
	`PR_IS
("RADM-CPL-TLP-Ab‹t", 
ødm_˝l_ép_ab‹t
);

620 
	`PR_IS
("RADM-CPL-ECRC-Eº", 
ødm_˝l_e¸c_îr
);

621 
	`PR_IS
("RADM-CPL-Timeout", 
ødm_˝l_timeout
);

622 
	`PR_IS
("Loˇl-Bus-Timeout", 
loˇl_timeout
);

623 
	`PR_IS
("PM-Ac˚ss", 
pm_ac˚ss
);

624 
	`PR_IS
("MAC-Awake", 
mac_awake
);

625 
	`PR_IS
("MAC-A¶ìp", 
mac_a¶ìp
);

626 
	`PR_IS
("MAC-SÀï-Ac˚ss", 
mac_¶ìp_ac˚ss
);

628 i‡(
Àn
 > 
mxÀn
)

629 
Àn
 = 
mxÀn
;

631 
rv
 = 
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

632 
	`k‰ì
(
buf
);

633  
rv
;

634 
	}
}

636 c⁄° 
fûe_›î©i⁄s
 
	gf›s_öãºu±
 = {

637 .
ªad
 = 
ªad_fûe_öãºu±
,

638 .
	g›í
 = 
sim∂e_›í
,

639 .
	gow√r
 = 
THIS_MODULE
,

640 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

643 
ssize_t
 
	$ªad_fûe_xmô
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

644 
size_t
 
cou¡
, 
loff_t
 *
µos
)

646 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

647 *
buf
;

648 
Àn
 = 0, 
size
 = 2048;

649 
ssize_t
 
ªtvÆ
 = 0;

651 
buf
 = 
	`kzÆloc
(
size
, 
GFP_KERNEL
);

652 i‡(
buf
 =
NULL
)

653  -
ENOMEM
;

655 
Àn
 +
	`•rötf
(
buf
, "%30s %10s%10s%10s\n\n",

658 
	`PR
("MPDU†Queued: ", 
queued
);

659 
	`PR
("MPDU†Com∂ëed: ", 
com∂ëed
);

660 
	`PR
("MPDU†XRërõd: ", 
xªåõs
);

661 
	`PR
("Aggªg©es: ", 
a_aggr
);

662 
	`PR
("AMPDU†Queued HW:", 
a_queued_hw
);

663 
	`PR
("AMPDU†Queued SW:", 
a_queued_sw
);

664 
	`PR
("AMPDU†Com∂ëed:", 
a_com∂ëed
);

665 
	`PR
("AMPDU†Rërõd: ", 
a_ªåõs
);

666 
	`PR
("AMPDU†XRërõd: ", 
a_xªåõs
);

667 
	`PR
("TXERR Fûãªd: ", 
txîr_fûãªd
);

668 
	`PR
("FIFO Undîrun: ", 
fifo_undîrun
);

669 
	`PR
("TXOP Ex˚eded: ", 
xtx›
);

670 
	`PR
("TXTIMER Expúy: ", 
timî_exp
);

671 
	`PR
("DESC CFG Eº‹: ", 
desc_cfg_îr
);

672 
	`PR
("DATA Undîrun: ", 
d©a_undîrun
);

673 
	`PR
("DELIM Undîrun: ", 
dñim_undîrun
);

674 
	`PR
("TX-Pkts-AŒ: ", 
tx_pkts_Æl
);

675 
	`PR
("TX-Byãs-AŒ: ", 
tx_byãs_Æl
);

676 
	`PR
("HW-put-tx-buf: ", 
puâxbuf
);

677 
	`PR
("HW-tx-°¨t: ", 
tx°¨t
);

678 
	`PR
("HW-tx-¥oc-desc: ", 
tx¥ocdesc
);

679 
	`PR
("TX-Faûed: ", 
txÁûed
);

681 i‡(
Àn
 > 
size
)

682 
Àn
 = 
size
;

684 
ªtvÆ
 = 
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

685 
	`k‰ì
(
buf
);

687  
ªtvÆ
;

688 
	}
}

690 
ssize_t
 
	$¥öt_queue
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
,

691 *
buf
, 
ssize_t
 
size
)

693 
ssize_t
 
Àn
 = 0;

695 
	`©h_txq_lock
(
sc
, 
txq
);

697 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%s: %d ",

698 "qnum", 
txq
->
axq_qnum
);

699 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%s: %2d ",

700 "qdïth", 
txq
->
axq_dïth
);

701 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%s: %2d ",

702 "ampdu-dïth", 
txq
->
axq_ampdu_dïth
);

703 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%s: %3d ",

704 "≥ndög", 
txq
->
≥ndög_‰ames
);

705 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%s: %d\n",

706 "°›≥d", 
txq
->
°›≥d
);

708 
	`©h_txq_u∆ock
(
sc
, 
txq
);

709  
Àn
;

710 
	}
}

712 
ssize_t
 
	$ªad_fûe_queues
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

713 
size_t
 
cou¡
, 
loff_t
 *
µos
)

715 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

716 
©h_txq
 *
txq
;

717 *
buf
;

718 
Àn
 = 0;

719 c⁄° 
size
 = 1024;

720 
ssize_t
 
ªtvÆ
 = 0;

721 
i
;

722 c⁄° *
q«me
[4] = {

726 
buf
 = 
	`kzÆloc
(
size
, 
GFP_KERNEL
);

727 i‡(
buf
 =
NULL
)

728  -
ENOMEM
;

730 
i
 = 0; i < 
IEEE80211_NUM_ACS
; i++) {

731 
txq
 = 
sc
->
tx
.
txq_m≠
[
i
];

732 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üí, "(%s): ", 
q«me
[
i
]);

733 
Àn
 +
	`¥öt_queue
(
sc
, 
txq
, 
buf
 +Üí, 
size
 -Üen);

736 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "(CAB): ");

737 
Àn
 +
	`¥öt_queue
(
sc
, sc->
bóc⁄
.
ˇbq
, 
buf
 +Üí, 
size
 -Üen);

739 i‡(
Àn
 > 
size
)

740 
Àn
 = 
size
;

742 
ªtvÆ
 = 
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

743 
	`k‰ì
(
buf
);

745  
ªtvÆ
;

746 
	}
}

748 
ssize_t
 
	$ªad_fûe_misc
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

749 
size_t
 
cou¡
, 
loff_t
 *
µos
)

751 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

752 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

753 
õì80211_hw
 *
hw
 = 
sc
->hw;

754 
©h9k_vif_ôî_d©a
 
ôî_d©a
;

755 
buf
[512];

756 
Àn
 = 0;

757 
ssize_t
 
ªtvÆ
 = 0;

758 
ªg
;

759 
u32
 
rxfûãr
;

761 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

762 "BSSID: %pM\n", 
comm⁄
->
curbssid
);

763 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

764 "BSSID-MASK: %pM\n", 
comm⁄
->
bssidmask
);

765 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

767 
	`©h_›mode_to_°rög
(
sc
->
sc_ah
->
›mode
));

769 
	`©h9k_ps_wakeup
(
sc
);

770 
rxfûãr
 = 
	`©h9k_hw_gërxfûãr
(
sc
->
sc_ah
);

771 
	`©h9k_ps_ª°‹e
(
sc
);

773 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

774 "RXFILTER: 0x%x", 
rxfûãr
);

776 i‡(
rxfûãr
 & 
ATH9K_RX_FILTER_UCAST
)

777 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, " UCAST");

778 i‡(
rxfûãr
 & 
ATH9K_RX_FILTER_MCAST
)

779 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, " MCAST");

780 i‡(
rxfûãr
 & 
ATH9K_RX_FILTER_BCAST
)

781 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, " BCAST");

782 i‡(
rxfûãr
 & 
ATH9K_RX_FILTER_CONTROL
)

783 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, " CONTROL");

784 i‡(
rxfûãr
 & 
ATH9K_RX_FILTER_BEACON
)

785 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, " BEACON");

786 i‡(
rxfûãr
 & 
ATH9K_RX_FILTER_PROM
)

787 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, " PROM");

788 i‡(
rxfûãr
 & 
ATH9K_RX_FILTER_PROBEREQ
)

789 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, " PROBEREQ");

790 i‡(
rxfûãr
 & 
ATH9K_RX_FILTER_PHYERR
)

791 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, " PHYERR");

792 i‡(
rxfûãr
 & 
ATH9K_RX_FILTER_MYBEACON
)

793 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, " MYBEACON");

794 i‡(
rxfûãr
 & 
ATH9K_RX_FILTER_COMP_BAR
)

795 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, " COMP_BAR");

796 i‡(
rxfûãr
 & 
ATH9K_RX_FILTER_PSPOLL
)

797 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, " PSPOLL");

798 i‡(
rxfûãr
 & 
ATH9K_RX_FILTER_PHYRADAR
)

799 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, " PHYRADAR");

800 i‡(
rxfûãr
 & 
ATH9K_RX_FILTER_MCAST_BCAST_ALL
)

801 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, " MCAST_BCAST_ALL");

802 i‡(
rxfûãr
 & 
ATH9K_RX_FILTER_CONTROL_WRAPPER
)

803 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, " CONTROL_WRAPPER");

805 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, "\n");

807 
ªg
 = 
sc
->
sc_ah
->
imask
;

809 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

810 "INTERRUPT-MASK: 0x%x", 
ªg
);

812 i‡(
ªg
 & 
ATH9K_INT_SWBA
)

813 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, " SWBA");

814 i‡(
ªg
 & 
ATH9K_INT_BMISS
)

815 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, " BMISS");

816 i‡(
ªg
 & 
ATH9K_INT_CST
)

817 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, " CST");

818 i‡(
ªg
 & 
ATH9K_INT_RX
)

819 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, " RX");

820 i‡(
ªg
 & 
ATH9K_INT_RXHP
)

821 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, " RXHP");

822 i‡(
ªg
 & 
ATH9K_INT_RXLP
)

823 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, " RXLP");

824 i‡(
ªg
 & 
ATH9K_INT_BB_WATCHDOG
)

825 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, " BB_WATCHDOG");

827 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, "\n");

829 
	`©h9k_ˇlcuœã_ôî_d©a
(
hw
, 
NULL
, &
ôî_d©a
);

831 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

834 
ôî_d©a
.
«ps
, iãr_d©a.
n°©i⁄s
, iãr_d©a.
nmeshes
,

835 
ôî_d©a
.
nwds
, iãr_d©a.
«dhocs
,

836 
sc
->
nvifs
, sc->
nb˙vifs
);

838 i‡(
Àn
 > (
buf
))

839 
Àn
 = (
buf
);

841 
ªtvÆ
 = 
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

842  
ªtvÆ
;

843 
	}
}

845 
ssize_t
 
	$ªad_fûe_ª£t
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

846 
size_t
 
cou¡
, 
loff_t
 *
µos
)

848 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

849 c⁄° * c⁄° 
ª£t_ˇu£
[
__RESET_TYPE_MAX
] = {

850 [
RESET_TYPE_BB_HANG
] = "Baseband Hang",

851 [
RESET_TYPE_BB_WATCHDOG
] = "Baseband Watchdog",

852 [
RESET_TYPE_FATAL_INT
] = "Fatal HW Error",

853 [
RESET_TYPE_TX_ERROR
] = "TX HWÉrror",

854 [
RESET_TYPE_TX_GTT
] = "TransmitÅimeout",

855 [
RESET_TYPE_TX_HANG
] = "TX Path Hang",

856 [
RESET_TYPE_PLL_HANG
] = "PLL RX Hang",

857 [
RESET_TYPE_MAC_HANG
] = "MAC Hang",

858 [
RESET_TYPE_BEACON_STUCK
] = "Stuck Beacon",

859 [
RESET_TYPE_MCI
] = "MCI Reset",

860 [
RESET_TYPE_CALIBRATION
] = "CalibrationÉrror",

862 
buf
[512];

863 
Àn
 = 0;

864 
i
;

866 
i
 = 0; i < 
	`ARRAY_SIZE
(
ª£t_ˇu£
); i++) {

867 i‡(!
ª£t_ˇu£
[
i
])

870 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

871 "%17s: %2d\n", 
ª£t_ˇu£
[
i
],

872 
sc
->
debug
.
°©s
.
ª£t
[
i
]);

875 i‡(
Àn
 > (
buf
))

876 
Àn
 = (
buf
);

878  
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

879 
	}
}

881 
	$©h_debug_°©_tx
(
©h_so·c
 *
sc
, 
©h_buf
 *
bf
,

882 
©h_tx_°©us
 *
ts
, 
©h_txq
 *
txq
,

883 
Êags
)

885 
qnum
 = 
txq
->
axq_qnum
;

887 
	`TX_STAT_INC
(
qnum
, 
tx_pkts_Æl
);

888 
sc
->
debug
.
°©s
.
tx°©s
[
qnum
].
tx_byãs_Æl
 +
bf
->
bf_mpdu
->
Àn
;

890 i‡(
	`bf_ißmpdu
(
bf
)) {

891 i‡(
Êags
 & 
ATH_TX_ERROR
)

892 
	`TX_STAT_INC
(
qnum
, 
a_xªåõs
);

894 
	`TX_STAT_INC
(
qnum
, 
a_com∂ëed
);

896 i‡(
ts
->
ts_°©us
 & 
ATH9K_TXERR_XRETRY
)

897 
	`TX_STAT_INC
(
qnum
, 
xªåõs
);

899 
	`TX_STAT_INC
(
qnum
, 
com∂ëed
);

902 i‡(
ts
->
ts_°©us
 & 
ATH9K_TXERR_FILT
)

903 
	`TX_STAT_INC
(
qnum
, 
txîr_fûãªd
);

904 i‡(
ts
->
ts_°©us
 & 
ATH9K_TXERR_FIFO
)

905 
	`TX_STAT_INC
(
qnum
, 
fifo_undîrun
);

906 i‡(
ts
->
ts_°©us
 & 
ATH9K_TXERR_XTXOP
)

907 
	`TX_STAT_INC
(
qnum
, 
xtx›
);

908 i‡(
ts
->
ts_°©us
 & 
ATH9K_TXERR_TIMER_EXPIRED
)

909 
	`TX_STAT_INC
(
qnum
, 
timî_exp
);

910 i‡(
ts
->
ts_Êags
 & 
ATH9K_TX_DESC_CFG_ERR
)

911 
	`TX_STAT_INC
(
qnum
, 
desc_cfg_îr
);

912 i‡(
ts
->
ts_Êags
 & 
ATH9K_TX_DATA_UNDERRUN
)

913 
	`TX_STAT_INC
(
qnum
, 
d©a_undîrun
);

914 i‡(
ts
->
ts_Êags
 & 
ATH9K_TX_DELIM_UNDERRUN
)

915 
	`TX_STAT_INC
(
qnum
, 
dñim_undîrun
);

916 
	}
}

918 c⁄° 
fûe_›î©i⁄s
 
	gf›s_xmô
 = {

919 .
ªad
 = 
ªad_fûe_xmô
,

920 .
	g›í
 = 
sim∂e_›í
,

921 .
	gow√r
 = 
THIS_MODULE
,

922 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

925 c⁄° 
fûe_›î©i⁄s
 
	gf›s_queues
 = {

926 .
ªad
 = 
ªad_fûe_queues
,

927 .
	g›í
 = 
sim∂e_›í
,

928 .
	gow√r
 = 
THIS_MODULE
,

929 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

932 c⁄° 
fûe_›î©i⁄s
 
	gf›s_misc
 = {

933 .
ªad
 = 
ªad_fûe_misc
,

934 .
	g›í
 = 
sim∂e_›í
,

935 .
	gow√r
 = 
THIS_MODULE
,

936 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

939 c⁄° 
fûe_›î©i⁄s
 
	gf›s_ª£t
 = {

940 .
ªad
 = 
ªad_fûe_ª£t
,

941 .
	g›í
 = 
sim∂e_›í
,

942 .
	gow√r
 = 
THIS_MODULE
,

943 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

946 
	$©h_debug_°©_rx
(
©h_so·c
 *
sc
, 
©h_rx_°©us
 *
rs
)

948 
	`©h9k_cmn_debug_°©_rx
(&
sc
->
debug
.
°©s
.
rx°©s
, 
rs
);

949 
	}
}

951 
ssize_t
 
	$ªad_fûe_ªgidx
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

952 
size_t
 
cou¡
, 
loff_t
 *
µos
)

954 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

955 
buf
[32];

956 
Àn
;

958 
Àn
 = 
	`•rötf
(
buf
, "0x%08x\n", 
sc
->
debug
.
ªgidx
);

959  
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

960 
	}
}

962 
ssize_t
 
	$wrôe_fûe_ªgidx
(
fûe
 *fûe, c⁄° 
__u£r
 *
u£r_buf
,

963 
size_t
 
cou¡
, 
loff_t
 *
µos
)

965 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

966 
ªgidx
;

967 
buf
[32];

968 
ssize_t
 
Àn
;

970 
Àn
 = 
	`mö
(
cou¡
, (
buf
) - 1);

971 i‡(
	`c›y_‰om_u£r
(
buf
, 
u£r_buf
, 
Àn
))

972  -
EFAULT
;

974 
buf
[
Àn
] = '\0';

975 i‡(
	`k°πoul
(
buf
, 0, &
ªgidx
))

976  -
EINVAL
;

978 
sc
->
debug
.
ªgidx
 =Ñegidx;

979  
cou¡
;

980 
	}
}

982 c⁄° 
fûe_›î©i⁄s
 
	gf›s_ªgidx
 = {

983 .
ªad
 = 
ªad_fûe_ªgidx
,

984 .
	gwrôe
 = 
wrôe_fûe_ªgidx
,

985 .
	g›í
 = 
sim∂e_›í
,

986 .
	gow√r
 = 
THIS_MODULE
,

987 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

990 
ssize_t
 
	$ªad_fûe_ªgvÆ
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

991 
size_t
 
cou¡
, 
loff_t
 *
µos
)

993 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

994 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

995 
buf
[32];

996 
Àn
;

997 
u32
 
ªgvÆ
;

999 
	`©h9k_ps_wakeup
(
sc
);

1000 
ªgvÆ
 = 
	`REG_READ_D
(
ah
, 
sc
->
debug
.
ªgidx
);

1001 
	`©h9k_ps_ª°‹e
(
sc
);

1002 
Àn
 = 
	`•rötf
(
buf
, "0x%08x\n", 
ªgvÆ
);

1003  
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

1004 
	}
}

1006 
ssize_t
 
	$wrôe_fûe_ªgvÆ
(
fûe
 *fûe, c⁄° 
__u£r
 *
u£r_buf
,

1007 
size_t
 
cou¡
, 
loff_t
 *
µos
)

1009 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

1010 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

1011 
ªgvÆ
;

1012 
buf
[32];

1013 
ssize_t
 
Àn
;

1015 
Àn
 = 
	`mö
(
cou¡
, (
buf
) - 1);

1016 i‡(
	`c›y_‰om_u£r
(
buf
, 
u£r_buf
, 
Àn
))

1017  -
EFAULT
;

1019 
buf
[
Àn
] = '\0';

1020 i‡(
	`k°πoul
(
buf
, 0, &
ªgvÆ
))

1021  -
EINVAL
;

1023 
	`©h9k_ps_wakeup
(
sc
);

1024 
	`REG_WRITE_D
(
ah
, 
sc
->
debug
.
ªgidx
, 
ªgvÆ
);

1025 
	`©h9k_ps_ª°‹e
(
sc
);

1026  
cou¡
;

1027 
	}
}

1029 c⁄° 
fûe_›î©i⁄s
 
	gf›s_ªgvÆ
 = {

1030 .
ªad
 = 
ªad_fûe_ªgvÆ
,

1031 .
	gwrôe
 = 
wrôe_fûe_ªgvÆ
,

1032 .
	g›í
 = 
sim∂e_›í
,

1033 .
	gow√r
 = 
THIS_MODULE
,

1034 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

1037 
	#REGDUMP_LINE_SIZE
 20

	)

1039 
	$›í_fûe_ªgdump
(
öode
 *öode, 
fûe
 *file)

1041 
©h_so·c
 *
sc
 = 
öode
->
i_¥iv©e
;

1042 
Àn
 = 0;

1043 
u8
 *
buf
;

1044 
i
;

1045 
num_ªgs
, 
ªgdump_Àn
, 
max_ªg_off£t
;

1047 
max_ªg_off£t
 = 
	`AR_SREV_9300_20_OR_LATER
(
sc
->
sc_ah
) ? 0x16bd4 : 0xb500;

1048 
num_ªgs
 = 
max_ªg_off£t
 / 4 + 1;

1049 
ªgdump_Àn
 = 
num_ªgs
 * 
REGDUMP_LINE_SIZE
 + 1;

1050 
buf
 = 
	`vmÆloc
(
ªgdump_Àn
);

1051 i‡(!
buf
)

1052  -
ENOMEM
;

1054 
	`©h9k_ps_wakeup
(
sc
);

1055 
i
 = 0; i < 
num_ªgs
; i++)

1056 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
ªgdump_Àn
 -Üen,

1057 "0x%06x 0x%08x\n", 
i
 << 2, 
	`REG_READ
(
sc
->
sc_ah
, i << 2));

1058 
	`©h9k_ps_ª°‹e
(
sc
);

1060 
fûe
->
¥iv©e_d©a
 = 
buf
;

1063 
	}
}

1065 c⁄° 
fûe_›î©i⁄s
 
	gf›s_ªgdump
 = {

1066 .
›í
 = 
›í_fûe_ªgdump
,

1067 .
	gªad
 = 
©h9k_debugfs_ªad_buf
,

1068 .
	gªÀa£
 = 
©h9k_debugfs_ªÀa£_buf
,

1069 .
	gow√r
 = 
THIS_MODULE
,

1070 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

1073 
ssize_t
 
	$ªad_fûe_dump_nfˇl
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

1074 
size_t
 
cou¡
, 
loff_t
 *
µos
)

1076 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

1077 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

1078 
©h9k_nfˇl_hi°
 *
h
 = 
sc
->
ˇld©a
.
nfCÆHi°
;

1079 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1080 
õì80211_c⁄f
 *
c⁄f
 = &
comm⁄
->
hw
->conf;

1081 
u32
 
Àn
 = 0, 
size
 = 1500;

1082 
u32
 
i
, 
j
;

1083 
ssize_t
 
ªtvÆ
 = 0;

1084 *
buf
;

1085 
u8
 
chaömask
 = (
ah
->
rxchaömask
 << 3) |áh->rxchainmask;

1086 
u8
 
ƒód
;

1088 
buf
 = 
	`kzÆloc
(
size
, 
GFP_KERNEL
);

1089 i‡(!
buf
)

1090  -
ENOMEM
;

1092 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen,

1093 "Ch™√»Noi£ Flo‹ : %d\n", 
ah
->
noi£
);

1094 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen,

1096 
i
 = 0; i < 
NUM_NF_READINGS
; i++) {

1097 i‡(!(
chaömask
 & (1 << 
i
)) ||

1098 ((
i
 >
AR5416_MAX_CHAINS
Ë&& !
	`c⁄f_is_ht40
(
c⁄f
)))

1101 
ƒód
 = 
AR_PHY_CCA_FILTERWINDOW_LENGTH
 - 
h
[
i
].
övÆidNFcou¡
;

1102 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, " %d\t %d\t %d\t\t",

1103 
i
, 
h
[i].
¥ivNF
, 
ƒód
);

1104 
j
 = 0; j < 
ƒód
; j++)

1105 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen,

1106 " %d", 
h
[
i
].
nfCÆBuf„r
[
j
]);

1107 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "\n");

1110 i‡(
Àn
 > 
size
)

1111 
Àn
 = 
size
;

1113 
ªtvÆ
 = 
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

1114 
	`k‰ì
(
buf
);

1116  
ªtvÆ
;

1117 
	}
}

1119 c⁄° 
fûe_›î©i⁄s
 
	gf›s_dump_nfˇl
 = {

1120 .
ªad
 = 
ªad_fûe_dump_nfˇl
,

1121 .
	g›í
 = 
sim∂e_›í
,

1122 .
	gow√r
 = 
THIS_MODULE
,

1123 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

1126 #ifde‡
CPTCFG_ATH9K_BTCOEX_SUPPORT


1127 
ssize_t
 
	$ªad_fûe_btc€x
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

1128 
size_t
 
cou¡
, 
loff_t
 *
µos
)

1130 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

1131 
u32
 
Àn
 = 0, 
size
 = 1500;

1132 *
buf
;

1133 
size_t
 
ªtvÆ
;

1135 
buf
 = 
	`kzÆloc
(
size
, 
GFP_KERNEL
);

1136 i‡(
buf
 =
NULL
)

1137  -
ENOMEM
;

1139 i‡(!
sc
->
sc_ah
->
comm⁄
.
btc€x_íabÀd
) {

1140 
Àn
 = 
	`s˙¥ötf
(
buf
, 
size
, "%s\n",

1142 
exô
;

1145 
Àn
 = 
	`©h9k_dump_btc€x
(
sc
, 
buf
, 
size
);

1146 
exô
:

1147 
ªtvÆ
 = 
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

1148 
	`k‰ì
(
buf
);

1150  
ªtvÆ
;

1151 
	}
}

1153 c⁄° 
fûe_›î©i⁄s
 
	gf›s_btc€x
 = {

1154 .
ªad
 = 
ªad_fûe_btc€x
,

1155 .
	g›í
 = 
sim∂e_›í
,

1156 .
	gow√r
 = 
THIS_MODULE
,

1157 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

1163 
	#AMKSTR
(
nm
Ë#nm "_BE", #nm "_BK", #nm "_VI", #nm "_VO"

	)

1164 c⁄° 
	g©h9k_g°rögs_°©s
[][
ETH_GSTRING_LEN
] = {

1169 
AMKSTR
(
d_tx_pkts
),

1170 
AMKSTR
(
d_tx_byãs
),

1171 
AMKSTR
(
d_tx_mpdus_queued
),

1172 
AMKSTR
(
d_tx_mpdus_com∂ëed
),

1173 
AMKSTR
(
d_tx_mpdu_xªåõs
),

1174 
AMKSTR
(
d_tx_aggªg©es
),

1175 
AMKSTR
(
d_tx_ampdus_queued_hw
),

1176 
AMKSTR
(
d_tx_ampdus_queued_sw
),

1177 
AMKSTR
(
d_tx_ampdus_com∂ëed
),

1178 
AMKSTR
(
d_tx_ampdu_ªåõs
),

1179 
AMKSTR
(
d_tx_ampdu_xªåõs
),

1180 
AMKSTR
(
d_tx_fifo_undîrun
),

1181 
AMKSTR
(
d_tx_›_ex˚eded
),

1182 
AMKSTR
(
d_tx_timî_expúy
),

1183 
AMKSTR
(
d_tx_desc_cfg_îr
),

1184 
AMKSTR
(
d_tx_d©a_undîrun
),

1185 
AMKSTR
(
d_tx_dñim_undîrun
),

1199 
	#ATH9K_SSTATS_LEN
 
	`ARRAY_SIZE
(
©h9k_g°rögs_°©s
)

	)

1201 
	$©h9k_gë_ë_°rögs
(
õì80211_hw
 *
hw
,

1202 
õì80211_vif
 *
vif
,

1203 
u32
 
s£t
, 
u8
 *
d©a
)

1205 i‡(
s£t
 =
ETH_SS_STATS
)

1206 
	`mem˝y
(
d©a
, *
©h9k_g°rögs_°©s
,

1207 (
©h9k_g°rögs_°©s
));

1208 
	}
}

1210 
	$©h9k_gë_ë_s£t_cou¡
(
õì80211_hw
 *
hw
,

1211 
õì80211_vif
 *
vif
, 
s£t
)

1213 i‡(
s£t
 =
ETH_SS_STATS
)

1214  
ATH9K_SSTATS_LEN
;

1216 
	}
}

1218 
	#AWDATA
(
ñem
) \

1220 
d©a
[
i
++] = 
sc
->
debug
.
°©s
.
tx°©s
[
	`PR_QNUM
(
IEEE80211_AC_BE
)].
ñem
; \

1221 
d©a
[
i
++] = 
sc
->
debug
.
°©s
.
tx°©s
[
	`PR_QNUM
(
IEEE80211_AC_BK
)].
ñem
; \

1222 
d©a
[
i
++] = 
sc
->
debug
.
°©s
.
tx°©s
[
	`PR_QNUM
(
IEEE80211_AC_VI
)].
ñem
; \

1223 
d©a
[
i
++] = 
sc
->
debug
.
°©s
.
tx°©s
[
	`PR_QNUM
(
IEEE80211_AC_VO
)].
ñem
; \

1224 } 0)

	)

1226 
	#AWDATA_RX
(
ñem
) \

1228 
d©a
[
i
++] = 
sc
->
debug
.
°©s
.
rx°©s
.
ñem
; \

1229 } 0)

	)

1231 
	$©h9k_gë_ë_°©s
(
õì80211_hw
 *
hw
,

1232 
õì80211_vif
 *
vif
,

1233 
ëhtoﬁ_°©s
 *
°©s
, 
u64
 *
d©a
)

1235 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

1236 
i
 = 0;

1238 
d©a
[
i
++] = (
sc
->
debug
.
°©s
.
tx°©s
[
	`PR_QNUM
(
IEEE80211_AC_BE
)].
tx_pkts_Æl
 +

1239 
sc
->
debug
.
°©s
.
tx°©s
[
	`PR_QNUM
(
IEEE80211_AC_BK
)].
tx_pkts_Æl
 +

1240 
sc
->
debug
.
°©s
.
tx°©s
[
	`PR_QNUM
(
IEEE80211_AC_VI
)].
tx_pkts_Æl
 +

1241 
sc
->
debug
.
°©s
.
tx°©s
[
	`PR_QNUM
(
IEEE80211_AC_VO
)].
tx_pkts_Æl
);

1242 
d©a
[
i
++] = (
sc
->
debug
.
°©s
.
tx°©s
[
	`PR_QNUM
(
IEEE80211_AC_BE
)].
tx_byãs_Æl
 +

1243 
sc
->
debug
.
°©s
.
tx°©s
[
	`PR_QNUM
(
IEEE80211_AC_BK
)].
tx_byãs_Æl
 +

1244 
sc
->
debug
.
°©s
.
tx°©s
[
	`PR_QNUM
(
IEEE80211_AC_VI
)].
tx_byãs_Æl
 +

1245 
sc
->
debug
.
°©s
.
tx°©s
[
	`PR_QNUM
(
IEEE80211_AC_VO
)].
tx_byãs_Æl
);

1246 
	`AWDATA_RX
(
rx_pkts_Æl
);

1247 
	`AWDATA_RX
(
rx_byãs_Æl
);

1249 
	`AWDATA
(
tx_pkts_Æl
);

1250 
	`AWDATA
(
tx_byãs_Æl
);

1251 
	`AWDATA
(
queued
);

1252 
	`AWDATA
(
com∂ëed
);

1253 
	`AWDATA
(
xªåõs
);

1254 
	`AWDATA
(
a_aggr
);

1255 
	`AWDATA
(
a_queued_hw
);

1256 
	`AWDATA
(
a_queued_sw
);

1257 
	`AWDATA
(
a_com∂ëed
);

1258 
	`AWDATA
(
a_ªåõs
);

1259 
	`AWDATA
(
a_xªåõs
);

1260 
	`AWDATA
(
fifo_undîrun
);

1261 
	`AWDATA
(
xtx›
);

1262 
	`AWDATA
(
timî_exp
);

1263 
	`AWDATA
(
desc_cfg_îr
);

1264 
	`AWDATA
(
d©a_undîrun
);

1265 
	`AWDATA
(
dñim_undîrun
);

1267 
	`AWDATA_RX
(
¸c_îr
);

1268 
	`AWDATA_RX
(
de¸y±_¸c_îr
);

1269 
	`AWDATA_RX
(
phy_îr
);

1270 
	`AWDATA_RX
(
mic_îr
);

1271 
	`AWDATA_RX
(
¥e_dñim_¸c_îr
);

1272 
	`AWDATA_RX
(
po°_dñim_¸c_îr
);

1273 
	`AWDATA_RX
(
de¸y±_busy_îr
);

1275 
	`AWDATA_RX
(
phy_îr_°©s
[
ATH9K_PHYERR_RADAR
]);

1276 
	`AWDATA_RX
(
phy_îr_°©s
[
ATH9K_PHYERR_OFDM_TIMING
]);

1277 
	`AWDATA_RX
(
phy_îr_°©s
[
ATH9K_PHYERR_CCK_TIMING
]);

1279 
	`WARN_ON
(
i
 !
ATH9K_SSTATS_LEN
);

1280 
	}
}

1282 
	$©h9k_deöô_debug
(
©h_so·c
 *
sc
)

1284 
	`©h9k_•e˘øl_deöô_debug
(
sc
);

1285 
	}
}

1287 
ssize_t
 
	$ªad_fûe_ì¥om
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

1288 
size_t
 
cou¡
, 
loff_t
 *
µos
)

1290 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

1291 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

1292 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1293 
byãs
 = 0;

1294 
pos
 = *
µos
;

1295 
size
 = 4096;

1296 
u16
 
vÆ
;

1297 
i
;

1299 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
))

1300 
size
 = 16384;

1302 i‡(*
µos
 < 0)

1303  -
EINVAL
;

1305 i‡(
cou¡
 > 
size
 - *
µos
)

1306 
cou¡
 = 
size
 - *
µos
;

1308 
i
 = *
µos
 / 2; 
cou¡
 > 0; cou¡ -
byãs
, *ppos += bytes, i++) {

1309 *
‰om
 = &
vÆ
;

1311 i‡(!
comm⁄
->
bus_›s
->
	`ì¥om_ªad
(comm⁄, 
i
, &
vÆ
))

1312 
vÆ
 = 0xffff;

1314 i‡(*
µos
 % 2) {

1315 
‰om
++;

1316 
byãs
 = 1;

1317 } i‡(
cou¡
 == 1) {

1318 
byãs
 = 1;

1320 
byãs
 = 2;

1322 
	`c›y_to_u£r
(
u£r_buf
, 
‰om
, 
byãs
);

1323 
u£r_buf
 +
byãs
;

1325  *
µos
 - 
pos
;

1326 
	}
}

1328 c⁄° 
fûe_›î©i⁄s
 
	gf›s_ì¥om
 = {

1329 .
ªad
 = 
ªad_fûe_ì¥om
,

1330 .
	g›í
 = 
sim∂e_›í
,

1331 .
	gow√r
 = 
THIS_MODULE


1335 
ssize_t
 
	$ªad_fûe_ch™_bw
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

1336 
size_t
 
cou¡
, 
loff_t
 *
µos
)

1338 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

1339 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

1340 
buf
[32];

1341 
Àn
;

1343 
Àn
 = 
	`•rötf
(
buf
, "0x%08x\n", 
comm⁄
->
ch™_bw
);

1344  
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

1345 
	}
}

1347 
ssize_t
 
	$wrôe_fûe_ch™_bw
(
fûe
 *fûe, c⁄° 
__u£r
 *
u£r_buf
,

1348 
size_t
 
cou¡
, 
loff_t
 *
µos
)

1350 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

1351 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

1352 
ch™_bw
;

1353 
buf
[32];

1354 
ssize_t
 
Àn
;

1356 
Àn
 = 
	`mö
(
cou¡
, (
buf
) - 1);

1357 i‡(
	`c›y_‰om_u£r
(
buf
, 
u£r_buf
, 
Àn
))

1358  -
EFAULT
;

1360 
buf
[
Àn
] = '\0';

1361 i‡(
	`k°πoul
(
buf
, 0, &
ch™_bw
))

1362  -
EINVAL
;

1364 
comm⁄
->
ch™_bw
 = chan_bw;

1365 i‡(!
	`ã°_bô
(
ATH_OP_INVALID
, &
comm⁄
->
›_Êags
))

1366 
©h9k_›s
.
	`c⁄fig
(
sc
->
hw
, 
IEEE80211_CONF_CHANGE_CHANNEL
);

1368  
cou¡
;

1369 
	}
}

1371 c⁄° 
fûe_›î©i⁄s
 
	gf›s_ch™bw
 = {

1372 .
ªad
 = 
ªad_fûe_ch™_bw
,

1373 .
	gwrôe
 = 
wrôe_fûe_ch™_bw
,

1374 .
	g›í
 = 
sim∂e_›í
,

1375 .
	gow√r
 = 
THIS_MODULE
,

1376 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

1379 #ifde‡
CONFIG_MAC80211_LEDS


1381 
ssize_t
 
	$wrôe_fûe_gpio_Àd
(
fûe
 *fûe, c⁄° 
__u£r
 *
ubuf
,

1382 
size_t
 
cou¡
, 
loff_t
 *
µos
)

1384 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

1385 
buf
[32], *
°r
, *
«me
, *
c
;

1386 
ssize_t
 
Àn
;

1387 
gpio
;

1388 
boﬁ
 
a˘ive_low
 = 
Ál£
;

1390 
Àn
 = 
	`mö
(
cou¡
, (
buf
) - 1);

1391 i‡(
	`c›y_‰om_u£r
(
buf
, 
ubuf
, 
Àn
))

1392  -
EFAULT
;

1394 
buf
[
Àn
] = '\0';

1395 
«me
 = 
	`°rchr
(
buf
, ',');

1396 i‡(!
«me
)

1397  -
EINVAL
;

1399 *(
«me
++) = 0;

1400 i‡(!*
«me
)

1401  -
EINVAL
;

1403 
c
 = 
	`°rchr
(
«me
, '\n');

1404 i‡(
c
)

1405 *
c
 = 0;

1407 
°r
 = 
buf
;

1408 i‡(*
°r
 == '!') {

1409 
°r
++;

1410 
a˘ive_low
 = 
åue
;

1413 i‡(
	`k°πouöt
(
°r
, 0, &
gpio
) < 0)

1414  -
EINVAL
;

1416 i‡(
gpio
 >
sc
->
sc_ah
->
ˇps
.
num_gpio_pös
)

1417  -
EINVAL
;

1419 i‡(
	`©h_¸óã_gpio_Àd
(
sc
, 
gpio
, 
«me
, 
NULL
, 
a˘ive_low
) < 0)

1420  -
EINVAL
;

1422  
cou¡
;

1423 
	}
}

1425 c⁄° 
fûe_›î©i⁄s
 
	gf›s_gpio_Àd
 = {

1426 .
wrôe
 = 
wrôe_fûe_gpio_Àd
,

1427 .
	g›í
 = 
sim∂e_›í
,

1428 .
	gow√r
 = 
THIS_MODULE
,

1429 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

1435 
ssize_t
 
	$ªad_fûe_düg
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

1436 
size_t
 
cou¡
, 
loff_t
 *
µos
)

1438 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

1439 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

1440 
buf
[32];

1441 
Àn
;

1443 
Àn
 = 
	`•rötf
(
buf
, "0x%08lx\n", 
ah
->
düg
);

1444  
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

1445 
	}
}

1447 
ssize_t
 
	$wrôe_fûe_düg
(
fûe
 *fûe, c⁄° 
__u£r
 *
u£r_buf
,

1448 
size_t
 
cou¡
, 
loff_t
 *
µos
)

1450 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

1451 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

1452 
düg
;

1453 
buf
[32];

1454 
ssize_t
 
Àn
;

1456 
Àn
 = 
	`mö
(
cou¡
, (
buf
) - 1);

1457 i‡(
	`c›y_‰om_u£r
(
buf
, 
u£r_buf
, 
Àn
))

1458  -
EFAULT
;

1460 
buf
[
Àn
] = '\0';

1461 i‡(
	`k°πoul
(
buf
, 0, &
düg
))

1462  -
EINVAL
;

1464 
ah
->
düg
 = diag;

1465 
	`©h9k_hw_upd©e_düg
(
ah
);

1467  
cou¡
;

1468 
	}
}

1470 c⁄° 
fûe_›î©i⁄s
 
	gf›s_düg
 = {

1471 .
ªad
 = 
ªad_fûe_düg
,

1472 .
	gwrôe
 = 
wrôe_fûe_düg
,

1473 .
	g›í
 = 
sim∂e_›í
,

1474 .
	gow√r
 = 
THIS_MODULE
,

1475 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

1479 
	$©h9k_öô_debug
(
©h_hw
 *
ah
)

1481 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1482 
©h_so·c
 *
sc
 = (©h_so·¯*Ë
comm⁄
->
¥iv
;

1484 
sc
->
debug
.
debugfs_phy
 = 
	`debugfs_¸óã_dú
("ath9k",

1485 
sc
->
hw
->
wùhy
->
debugfsdú
);

1486 i‡(!
sc
->
debug
.
debugfs_phy
)

1487  -
ENOMEM
;

1489 #ifde‡
CPTCFG_ATH_DEBUG


1490 
	`debugfs_¸óã_fûe
("debug", 
S_IRUSR
 | 
S_IWUSR
, 
sc
->
debug
.
debugfs_phy
,

1491 
sc
, &
f›s_debug
);

1494 
	`©h9k_dfs_öô_debug
(
sc
);

1495 
	`©h9k_tx99_öô_debug
(
sc
);

1496 
	`©h9k_•e˘øl_öô_debug
(
sc
);

1498 
	`debugfs_¸óã_fûe
("ì¥om", 
S_IRUSR
, 
sc
->
debug
.
debugfs_phy
, sc,

1499 &
f›s_ì¥om
);

1500 
	`debugfs_¸óã_fûe
("ch™bw", 
S_IRUSR
 | 
S_IWUSR
, 
sc
->
debug
.
debugfs_phy
,

1501 
sc
, &
f›s_ch™bw
);

1502 #ifde‡
CONFIG_MAC80211_LEDS


1503 
	`debugfs_¸óã_fûe
("gpio_Àd", 
S_IWUSR
,

1504 
sc
->
debug
.
debugfs_phy
, sc, &
f›s_gpio_Àd
);

1506 
	`debugfs_¸óã_fûe
("düg", 
S_IRUSR
 | 
S_IWUSR
, 
sc
->
debug
.
debugfs_phy
,

1507 
sc
, &
f›s_düg
);

1508 
	`debugfs_¸óã_fûe
("dma", 
S_IRUSR
, 
sc
->
debug
.
debugfs_phy
, sc,

1509 &
f›s_dma
);

1510 
	`debugfs_¸óã_fûe
("öãºu±", 
S_IRUSR
, 
sc
->
debug
.
debugfs_phy
, sc,

1511 &
f›s_öãºu±
);

1512 
	`debugfs_¸óã_fûe
("xmô", 
S_IRUSR
, 
sc
->
debug
.
debugfs_phy
, sc,

1513 &
f›s_xmô
);

1514 
	`debugfs_¸óã_fûe
("queues", 
S_IRUSR
, 
sc
->
debug
.
debugfs_phy
, sc,

1515 &
f›s_queues
);

1516 
	`debugfs_¸óã_u32
("qÀn_bk", 
S_IRUSR
 | 
S_IWUSR
, 
sc
->
debug
.
debugfs_phy
,

1517 &
sc
->
tx
.
txq_max_≥ndög
[
IEEE80211_AC_BK
]);

1518 
	`debugfs_¸óã_u32
("qÀn_be", 
S_IRUSR
 | 
S_IWUSR
, 
sc
->
debug
.
debugfs_phy
,

1519 &
sc
->
tx
.
txq_max_≥ndög
[
IEEE80211_AC_BE
]);

1520 
	`debugfs_¸óã_u32
("qÀn_vi", 
S_IRUSR
 | 
S_IWUSR
, 
sc
->
debug
.
debugfs_phy
,

1521 &
sc
->
tx
.
txq_max_≥ndög
[
IEEE80211_AC_VI
]);

1522 
	`debugfs_¸óã_u32
("qÀn_vo", 
S_IRUSR
 | 
S_IWUSR
, 
sc
->
debug
.
debugfs_phy
,

1523 &
sc
->
tx
.
txq_max_≥ndög
[
IEEE80211_AC_VO
]);

1524 
	`debugfs_¸óã_fûe
("misc", 
S_IRUSR
, 
sc
->
debug
.
debugfs_phy
, sc,

1525 &
f›s_misc
);

1526 
	`debugfs_¸óã_fûe
("ª£t", 
S_IRUSR
, 
sc
->
debug
.
debugfs_phy
, sc,

1527 &
f›s_ª£t
);

1529 
	`©h9k_cmn_debug_ªcv
(
sc
->
debug
.
debugfs_phy
, &sc->debug.
°©s
.
rx°©s
);

1530 
	`©h9k_cmn_debug_phy_îr
(
sc
->
debug
.
debugfs_phy
, &sc->debug.
°©s
.
rx°©s
);

1532 
	`debugfs_¸óã_u8
("rx_chaömask", 
S_IRUSR
, 
sc
->
debug
.
debugfs_phy
,

1533 &
ah
->
rxchaömask
);

1534 
	`debugfs_¸óã_u8
("tx_chaömask", 
S_IRUSR
, 
sc
->
debug
.
debugfs_phy
,

1535 &
ah
->
txchaömask
);

1536 
	`debugfs_¸óã_fûe
("™i", 
S_IRUSR
 | 
S_IWUSR
,

1537 
sc
->
debug
.
debugfs_phy
, sc, &
f›s_™i
);

1538 
	`debugfs_¸óã_boﬁ
("∑¥d", 
S_IRUSR
 | 
S_IWUSR
, 
sc
->
debug
.
debugfs_phy
,

1539 &
sc
->
sc_ah
->
c⁄fig
.
íabÀ_∑¥d
);

1540 
	`debugfs_¸óã_fûe
("ªgidx", 
S_IRUSR
 | 
S_IWUSR
, 
sc
->
debug
.
debugfs_phy
,

1541 
sc
, &
f›s_ªgidx
);

1542 
	`debugfs_¸óã_fûe
("ªgvÆ", 
S_IRUSR
 | 
S_IWUSR
, 
sc
->
debug
.
debugfs_phy
,

1543 
sc
, &
f›s_ªgvÆ
);

1544 
	`debugfs_¸óã_boﬁ
("ign‹e_extcˇ", 
S_IRUSR
 | 
S_IWUSR
,

1545 
sc
->
debug
.
debugfs_phy
,

1546 &
ah
->
c⁄fig
.
cwm_ign‹e_extcˇ
);

1547 
	`debugfs_¸óã_fûe
("ªgdump", 
S_IRUSR
, 
sc
->
debug
.
debugfs_phy
, sc,

1548 &
f›s_ªgdump
);

1549 
	`debugfs_¸óã_fûe
("dump_nfˇl", 
S_IRUSR
, 
sc
->
debug
.
debugfs_phy
, sc,

1550 &
f›s_dump_nfˇl
);

1552 
	`©h9k_cmn_debug_ba£_ì¥om
(
sc
->
debug
.
debugfs_phy
, sc->
sc_ah
);

1553 
	`©h9k_cmn_debug_modÆ_ì¥om
(
sc
->
debug
.
debugfs_phy
, sc->
sc_ah
);

1555 
	`debugfs_¸óã_u32
("gpio_mask", 
S_IRUSR
 | 
S_IWUSR
,

1556 
sc
->
debug
.
debugfs_phy
, &sc->
sc_ah
->
gpio_mask
);

1557 
	`debugfs_¸óã_u32
("gpio_vÆ", 
S_IRUSR
 | 
S_IWUSR
,

1558 
sc
->
debug
.
debugfs_phy
, &sc->
sc_ah
->
gpio_vÆ
);

1559 
	`debugfs_¸óã_fûe
("™ã¬a_divîsôy", 
S_IRUSR
,

1560 
sc
->
debug
.
debugfs_phy
, sc, &
f›s_™ã¬a_divîsôy
);

1561 #ifde‡
CPTCFG_ATH9K_BTCOEX_SUPPORT


1562 
	`debugfs_¸óã_fûe
("bt_™t_divîsôy", 
S_IRUSR
 | 
S_IWUSR
,

1563 
sc
->
debug
.
debugfs_phy
, sc, &
f›s_bt_™t_divîsôy
);

1564 
	`debugfs_¸óã_fûe
("btc€x", 
S_IRUSR
, 
sc
->
debug
.
debugfs_phy
, sc,

1565 &
f›s_btc€x
);

1569 
	}
}

	@debug.h

17 #i‚de‡
DEBUG_H


18 
	#DEBUG_H


	)

20 
	~"hw.h
"

21 
	~"dfs_debug.h
"

23 
	g©h_txq
;

24 
	g©h_buf
;

25 
	gf·_ßm∂e_év
;

27 #ifde‡
CPTCFG_ATH9K_DEBUGFS


28 
	#TX_STAT_INC
(
q
, 
c
Ë
sc
->
debug
.
°©s
.
tx°©s
[q].c++

	)

29 
	#RX_STAT_INC
(
c
Ë(
sc
->
debug
.
°©s
.
rx°©s
.c++)

	)

30 
	#RESET_STAT_INC
(
sc
, 
ty≥
Ësc->
debug
.
°©s
.
ª£t
[ty≥]++

	)

31 
	#ANT_STAT_INC
(
i
, 
c
Ë
sc
->
debug
.
°©s
.
™t_°©s
[i].c++

	)

32 
	#ANT_LNA_INC
(
i
, 
c
Ë
sc
->
debug
.
°©s
.
™t_°©s
[i].
 a_ªcv_˙t
[c]++;

	)

34 
	#TX_STAT_INC
(
q
, 
c
Ëdÿ{ } 0)

	)

35 
	#RX_STAT_INC
(
c
)

	)

36 
	#RESET_STAT_INC
(
sc
, 
ty≥
Ëdÿ{ } 0)

	)

37 
	#ANT_STAT_INC
(
i
, 
c
Ëdÿ{ } 0)

	)

38 
	#ANT_LNA_INC
(
i
, 
c
Ëdÿ{ } 0)

	)

41 
	e©h_ª£t_ty≥
 {

42 
	mRESET_TYPE_BB_HANG
,

43 
	mRESET_TYPE_BB_WATCHDOG
,

44 
	mRESET_TYPE_FATAL_INT
,

45 
	mRESET_TYPE_TX_ERROR
,

46 
	mRESET_TYPE_TX_GTT
,

47 
	mRESET_TYPE_TX_HANG
,

48 
	mRESET_TYPE_PLL_HANG
,

49 
	mRESET_TYPE_MAC_HANG
,

50 
	mRESET_TYPE_BEACON_STUCK
,

51 
	mRESET_TYPE_MCI
,

52 
	mRESET_TYPE_CALIBRATION
,

53 
	m__RESET_TYPE_MAX


56 #ifde‡
CPTCFG_ATH9K_DEBUGFS


88 
	s©h_öãºu±_°©s
 {

89 
u32
 
	mtŸÆ
;

90 
u32
 
	mrxok
;

91 
u32
 
	mrxÕ
;

92 
u32
 
	mrxhp
;

93 
u32
 
	mrxeﬁ
;

94 
u32
 
	mrx‹n
;

95 
u32
 
	mtxok
;

96 
u32
 
	mtxeﬁ
;

97 
u32
 
	mtxu∫
;

98 
u32
 
	mmib
;

99 
u32
 
	mrxphyîr
;

100 
u32
 
	mrx_keyˇche_miss
;

101 
u32
 
	mswba
;

102 
u32
 
	mbmiss
;

103 
u32
 
	mbƒ
;

104 
u32
 
	mc°
;

105 
u32
 
	mgâ
;

106 
u32
 
	mtim
;

107 
u32
 
	mˇbíd
;

108 
u32
 
	mdtimsync
;

109 
u32
 
	mdtim
;

110 
u32
 
	mbb_w©chdog
;

111 
u32
 
	mtsfo‹
;

112 
u32
 
	mmci
;

113 
u32
 
	mgí_timî
;

116 
u32
 
	msync_ˇu£_Æl
;

117 
u32
 
	msync_πc_úq
;

118 
u32
 
	msync_mac_úq
;

119 
u32
 
	mì¥om_ûÀgÆ_ac˚ss
;

120 
u32
 
	m≠b_timeout
;

121 
u32
 
	mpci_mode_c⁄Êi˘
;

122 
u32
 
	mho°1_Áèl
;

123 
u32
 
	mho°1_≥º
;

124 
u32
 
	måcv_fifo_≥º
;

125 
u32
 
	mødm_˝l_ï
;

126 
u32
 
	mødm_˝l_dŒp_ab‹t
;

127 
u32
 
	mødm_˝l_ép_ab‹t
;

128 
u32
 
	mødm_˝l_e¸c_îr
;

129 
u32
 
	mødm_˝l_timeout
;

130 
u32
 
	mloˇl_timeout
;

131 
u32
 
	mpm_ac˚ss
;

132 
u32
 
	mmac_awake
;

133 
u32
 
	mmac_a¶ìp
;

134 
u32
 
	mmac_¶ìp_ac˚ss
;

167 
	s©h_tx_°©s
 {

168 
u32
 
	mtx_pkts_Æl
;

169 
u32
 
	mtx_byãs_Æl
;

170 
u32
 
	mqueued
;

171 
u32
 
	mcom∂ëed
;

172 
u32
 
	mxªåõs
;

173 
u32
 
	ma_aggr
;

174 
u32
 
	ma_queued_hw
;

175 
u32
 
	ma_queued_sw
;

176 
u32
 
	ma_com∂ëed
;

177 
u32
 
	ma_ªåõs
;

178 
u32
 
	ma_xªåõs
;

179 
u32
 
	mtxîr_fûãªd
;

180 
u32
 
	mfifo_undîrun
;

181 
u32
 
	mxtx›
;

182 
u32
 
	mtimî_exp
;

183 
u32
 
	mdesc_cfg_îr
;

184 
u32
 
	md©a_undîrun
;

185 
u32
 
	mdñim_undîrun
;

186 
u32
 
	mpuâxbuf
;

187 
u32
 
	mtx°¨t
;

188 
u32
 
	mtx¥ocdesc
;

189 
u32
 
	mtxÁûed
;

195 
	#PR_QNUM
(
_n
Ë
sc
->
tx
.
txq_m≠
[_n]->
axq_qnum


	)

196 
	#TXSTATS
 
sc
->
debug
.
°©s
.
tx°©s


	)

197 
	#PR
(
°r
, 
ñem
) \

199 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, \

200 "%s%13u%11u%10u%10u\n", 
°r
, \

201 
TXSTATS
[
	`PR_QNUM
(
IEEE80211_AC_BE
)].
ñem
,\

202 
TXSTATS
[
	`PR_QNUM
(
IEEE80211_AC_BK
)].
ñem
,\

203 
TXSTATS
[
	`PR_QNUM
(
IEEE80211_AC_VI
)].
ñem
,\

204 
TXSTATS
[
	`PR_QNUM
(
IEEE80211_AC_VO
)].
ñem
); \

205 } 0)

	)

207 
	s©h_rx_øã_°©s
 {

209 
u32
 
	mht20_˙t
;

210 
u32
 
	mht40_˙t
;

211 
u32
 
	msgi_˙t
;

212 
u32
 
	mlgi_˙t
;

213 } 
	mht_°©s
[24];

216 
u32
 
	mofdm_˙t
;

217 } 
	mofdm_°©s
[8];

220 
u32
 
	mcck_Õ_˙t
;

221 
u32
 
	mcck_•_˙t
;

222 } 
	mcck_°©s
[4];

225 
	#ANT_MAIN
 0

	)

226 
	#ANT_ALT
 1

	)

228 
	s©h_™ã¬a_°©s
 {

229 
u32
 
	mªcv_˙t
;

230 
u32
 
	mrssi_avg
;

231 
u32
 
	m a_ªcv_˙t
[4];

232 
u32
 
	m a_©ãm±_˙t
[4];

235 
	s©h_°©s
 {

236 
©h_öãºu±_°©s
 
	mi°©s
;

237 
©h_tx_°©s
 
	mtx°©s
[
ATH9K_NUM_TX_QUEUES
];

238 
©h_rx_°©s
 
	mrx°©s
;

239 
©h_dfs_°©s
 
	mdfs_°©s
;

240 
©h_™ã¬a_°©s
 
	m™t_°©s
[2];

241 
u32
 
	mª£t
[
__RESET_TYPE_MAX
];

244 
	s©h9k_debug
 {

245 
díåy
 *
	mdebugfs_phy
;

246 
u32
 
	mªgidx
;

247 
©h_°©s
 
	m°©s
;

250 
©h9k_öô_debug
(
©h_hw
 *
ah
);

251 
©h9k_deöô_debug
(
©h_so·c
 *
sc
);

253 
©h_debug_°©_öãºu±
(
©h_so·c
 *
sc
, 
©h9k_öt
 
°©us
);

254 
©h_debug_°©_tx
(
©h_so·c
 *
sc
, 
©h_buf
 *
bf
,

255 
©h_tx_°©us
 *
ts
, 
©h_txq
 *
txq
,

256 
Êags
);

257 
©h_debug_°©_rx
(
©h_so·c
 *
sc
, 
©h_rx_°©us
 *
rs
);

258 
©h9k_gë_ë_s£t_cou¡
(
õì80211_hw
 *
hw
,

259 
õì80211_vif
 *
vif
, 
s£t
);

260 
©h9k_gë_ë_°©s
(
õì80211_hw
 *
hw
,

261 
õì80211_vif
 *
vif
,

262 
ëhtoﬁ_°©s
 *
°©s
, 
u64
 *
d©a
);

263 
©h9k_gë_ë_°rögs
(
õì80211_hw
 *
hw
,

264 
õì80211_vif
 *
vif
,

265 
u32
 
s£t
, 
u8
 *
d©a
);

266 
©h9k_°a_add_debugfs
(
õì80211_hw
 *
hw
,

267 
õì80211_vif
 *
vif
,

268 
õì80211_°a
 *
°a
,

269 
díåy
 *
dú
);

270 
©h9k_debug_°©_™t
(
©h_so·c
 *
sc
,

271 
©h_hw_™tcomb_c⁄f
 *
div_™t_c⁄f
,

272 
maö_rssi_avg
, 
Æt_rssi_avg
);

273 
©h9k_debug_sync_ˇu£
(
©h_so·c
 *
sc
, 
u32
 
sync_ˇu£
);

277 
ölöe
 
	$©h9k_öô_debug
(
©h_hw
 *
ah
)

280 
	}
}

282 
ölöe
 
	$©h9k_deöô_debug
(
©h_so·c
 *
sc
)

284 
	}
}

285 
ölöe
 
	$©h_debug_°©_öãºu±
(
©h_so·c
 *
sc
,

286 
©h9k_öt
 
°©us
)

288 
	}
}

289 
ölöe
 
	$©h_debug_°©_tx
(
©h_so·c
 *
sc
,

290 
©h_buf
 *
bf
,

291 
©h_tx_°©us
 *
ts
,

292 
©h_txq
 *
txq
,

293 
Êags
)

295 
	}
}

296 
ölöe
 
	$©h_debug_°©_rx
(
©h_so·c
 *
sc
,

297 
©h_rx_°©us
 *
rs
)

299 
	}
}

300 
ölöe
 
	$©h9k_debug_°©_™t
(
©h_so·c
 *
sc
,

301 
©h_hw_™tcomb_c⁄f
 *
div_™t_c⁄f
,

302 
maö_rssi_avg
, 
Æt_rssi_avg
)

305 
	}
}

307 
ölöe
 

308 
	$©h9k_debug_sync_ˇu£
(
©h_so·c
 *
sc
, 
u32
 
sync_ˇu£
)

310 
	}
}

314 #ifde‡
CPTCFG_ATH9K_STATION_STATISTICS


315 
©h_debug_øã_°©s
(
©h_so·c
 *
sc
,

316 
©h_rx_°©us
 *
rs
,

317 
sk_buff
 *
skb
);

319 
ölöe
 
	$©h_debug_øã_°©s
(
©h_so·c
 *
sc
,

320 
©h_rx_°©us
 *
rs
,

321 
sk_buff
 *
skb
)

323 
	}
}

	@debug_sta.c

17 
	~"©h9k.h
"

23 
ssize_t
 
	$ªad_fûe_node_aggr
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

24 
size_t
 
cou¡
, 
loff_t
 *
µos
)

26 
©h_node
 *
™
 = 
fûe
->
¥iv©e_d©a
;

27 
©h_so·c
 *
sc
 = 
™
->sc;

28 
©h_©x_tid
 *
tid
;

29 
©h_©x_ac
 *
ac
;

30 
©h_txq
 *
txq
;

31 
u32
 
Àn
 = 0, 
size
 = 4096;

32 *
buf
;

33 
size_t
 
ªtvÆ
;

34 
tidno
, 
a˙o
;

36 
buf
 = 
	`kzÆloc
(
size
, 
GFP_KERNEL
);

37 i‡(
buf
 =
NULL
)

38  -
ENOMEM
;

40 i‡(!
™
->
°a
->
ht_ˇp
.
ht_suµ‹ãd
) {

41 
Àn
 = 
	`s˙¥ötf
(
buf
, 
size
, "%s\n",

43 
exô
;

46 
Àn
 = 
	`s˙¥ötf
(
buf
, 
size
, "Max-AMPDU: %d\n",

47 
™
->
maxampdu
);

48 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "MPDU Density: %d\n\n",

49 
™
->
mpdudísôy
);

51 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen,

54 
a˙o
 = 0, 
ac
 = &
™
->ac[acno];

55 
a˙o
 < 
IEEE80211_NUM_ACS
;á˙o++, 
ac
++) {

56 
txq
 = 
ac
->txq;

57 
	`©h_txq_lock
(
sc
, 
txq
);

58 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen,

60 
a˙o
, 
ac
->
sched
);

61 
	`©h_txq_u∆ock
(
sc
, 
txq
);

64 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen,

69 
tidno
 = 0, 
tid
 = &
™
->tid[tidno];

70 
tidno
 < 
IEEE80211_NUM_TIDS
;Åidno++, 
tid
++) {

71 
txq
 = 
tid
->
ac
->txq;

72 
	`©h_txq_lock
(
sc
, 
txq
);

73 i‡(
tid
->
a˘ive
) {

74 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen,

76 
tid
->
tidno
,

77 
tid
->
£q_°¨t
,

78 
tid
->
£q_√xt
,

79 
tid
->
baw_size
,

80 
tid
->
baw_hód
,

81 
tid
->
baw_èû
,

82 
tid
->
b¨_ödex
,

83 
tid
->
sched
);

85 
	`©h_txq_u∆ock
(
sc
, 
txq
);

87 
exô
:

88 
ªtvÆ
 = 
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

89 
	`k‰ì
(
buf
);

91  
ªtvÆ
;

92 
	}
}

94 c⁄° 
fûe_›î©i⁄s
 
	gf›s_node_aggr
 = {

95 .
ªad
 = 
ªad_fûe_node_aggr
,

96 .
	g›í
 = 
sim∂e_›í
,

97 .
	gow√r
 = 
THIS_MODULE
,

98 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

105 
	$©h_debug_øã_°©s
(
©h_so·c
 *
sc
,

106 
©h_rx_°©us
 *
rs
,

107 
sk_buff
 *
skb
)

109 
õì80211_hdr
 *
hdr
 = (õì80211_hd∏*Ë
skb
->
d©a
;

110 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

111 
õì80211_rx_°©us
 *
rxs
;

112 
©h_rx_øã_°©s
 *
r°©s
;

113 
õì80211_°a
 *
°a
;

114 
©h_node
 *
™
;

116 i‡(!
	`õì80211_is_d©a
(
hdr
->
‰ame_c⁄åﬁ
))

119 
	`rcu_ªad_lock
();

121 
°a
 = 
	`õì80211_föd_°a_by_iÁddr
(
sc
->
hw
, 
hdr
->
addr2
, 
NULL
);

122 i‡(!
°a
)

123 
exô
;

125 
™
 = (
©h_node
 *Ë
°a
->
drv_¥iv
;

126 
r°©s
 = &
™
->
rx_øã_°©s
;

127 
rxs
 = 
	`IEEE80211_SKB_RXCB
(
skb
);

129 i‡(
	`IS_HT_RATE
(
rs
->
rs_øã
)) {

130 i‡(
rxs
->
øã_idx
 >
	`ARRAY_SIZE
(
r°©s
->
ht_°©s
))

131 
exô
;

133 i‡(
rxs
->
Êag
 & 
RX_FLAG_40MHZ
)

134 
r°©s
->
ht_°©s
[
rxs
->
øã_idx
].
ht40_˙t
++;

136 
r°©s
->
ht_°©s
[
rxs
->
øã_idx
].
ht20_˙t
++;

138 i‡(
rxs
->
Êag
 & 
RX_FLAG_SHORT_GI
)

139 
r°©s
->
ht_°©s
[
rxs
->
øã_idx
].
sgi_˙t
++;

141 
r°©s
->
ht_°©s
[
rxs
->
øã_idx
].
lgi_˙t
++;

143 
exô
;

146 i‡(
	`IS_CCK_RATE
(
rs
->
rs_øã
)) {

147 i‡(
rxs
->
Êag
 & 
RX_FLAG_SHORTPRE
)

148 
r°©s
->
cck_°©s
[
rxs
->
øã_idx
].
cck_•_˙t
++;

150 
r°©s
->
cck_°©s
[
rxs
->
øã_idx
].
cck_Õ_˙t
++;

152 
exô
;

155 i‡(
	`IS_OFDM_RATE
(
rs
->
rs_øã
)) {

156 i‡(
ah
->
curch™
->
ch™
->
b™d
 =
IEEE80211_BAND_2GHZ
)

157 
r°©s
->
ofdm_°©s
[
rxs
->
øã_idx
 - 4].
ofdm_˙t
++;

159 
r°©s
->
ofdm_°©s
[
rxs
->
øã_idx
].
ofdm_˙t
++;

161 
exô
:

162 
	`rcu_ªad_u∆ock
();

163 
	}
}

165 
	#PRINT_CCK_RATE
(
°r
, 
i
, 
•
) \

167 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, \

169 
°r
, \

170 (
•
Ë? 
r°©s
->
cck_°©s
[
i
].
cck_•_˙t
 : \

171 
r°©s
->
cck_°©s
[
i
].
cck_Õ_˙t
); \

172 } 0)

	)

174 
	#PRINT_OFDM_RATE
(
°r
, 
i
) \

176 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, \

178 
°r
, \

179 
r°©s
->
ofdm_°©s
[
i
].
ofdm_˙t
); \

180 } 0)

	)

182 
ssize_t
 
	$ªad_fûe_node_ªcv
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

183 
size_t
 
cou¡
, 
loff_t
 *
µos
)

185 
©h_node
 *
™
 = 
fûe
->
¥iv©e_d©a
;

186 
©h_so·c
 *
sc
 = 
™
->sc;

187 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

188 
©h_rx_øã_°©s
 *
r°©s
;

189 
õì80211_°a
 *
°a
 = 
™
->sta;

190 
õì80211_b™d
 
b™d
;

191 
u32
 
Àn
 = 0, 
size
 = 4096;

192 *
buf
;

193 
size_t
 
ªtvÆ
;

194 
i
;

196 
buf
 = 
	`kzÆloc
(
size
, 
GFP_KERNEL
);

197 i‡(
buf
 =
NULL
)

198  -
ENOMEM
;

200 
b™d
 = 
ah
->
curch™
->
ch™
->band;

201 
r°©s
 = &
™
->
rx_øã_°©s
;

203 i‡(!
°a
->
ht_ˇp
.
ht_suµ‹ãd
)

204 
Àgacy
;

206 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen,

210 
i
 = 0; i < 24; i++) {

211 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen,

213 "MCS", 
i
,

214 
r°©s
->
ht_°©s
[
i
].
ht20_˙t
,

215 
r°©s
->
ht_°©s
[
i
].
ht40_˙t
,

216 
r°©s
->
ht_°©s
[
i
].
sgi_˙t
,

217 
r°©s
->
ht_°©s
[
i
].
lgi_˙t
);

220 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "\n");

222 
Àgacy
:

223 i‡(
b™d
 =
IEEE80211_BAND_2GHZ
) {

224 
	`PRINT_CCK_RATE
("CCK-1M/LP", 0, 
Ál£
);

225 
	`PRINT_CCK_RATE
("CCK-2M/LP", 1, 
Ál£
);

226 
	`PRINT_CCK_RATE
("CCK-5.5M/LP", 2, 
Ál£
);

227 
	`PRINT_CCK_RATE
("CCK-11M/LP", 3, 
Ál£
);

229 
	`PRINT_CCK_RATE
("CCK-2M/SP", 1, 
åue
);

230 
	`PRINT_CCK_RATE
("CCK-5.5M/SP", 2, 
åue
);

231 
	`PRINT_CCK_RATE
("CCK-11M/SP", 3, 
åue
);

234 
	`PRINT_OFDM_RATE
("OFDM-6M", 0);

235 
	`PRINT_OFDM_RATE
("OFDM-9M", 1);

236 
	`PRINT_OFDM_RATE
("OFDM-12M", 2);

237 
	`PRINT_OFDM_RATE
("OFDM-18M", 3);

238 
	`PRINT_OFDM_RATE
("OFDM-24M", 4);

239 
	`PRINT_OFDM_RATE
("OFDM-36M", 5);

240 
	`PRINT_OFDM_RATE
("OFDM-48M", 6);

241 
	`PRINT_OFDM_RATE
("OFDM-54M", 7);

243 
ªtvÆ
 = 
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

244 
	`k‰ì
(
buf
);

246  
ªtvÆ
;

247 
	}
}

249 #unde‡
PRINT_OFDM_RATE


250 #unde‡
PRINT_CCK_RATE


252 c⁄° 
fûe_›î©i⁄s
 
	gf›s_node_ªcv
 = {

253 .
ªad
 = 
ªad_fûe_node_ªcv
,

254 .
	g›í
 = 
sim∂e_›í
,

255 .
	gow√r
 = 
THIS_MODULE
,

256 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

259 
	$©h9k_°a_add_debugfs
(
õì80211_hw
 *
hw
,

260 
õì80211_vif
 *
vif
,

261 
õì80211_°a
 *
°a
,

262 
díåy
 *
dú
)

264 
©h_node
 *
™
 = (©h_nodê*)
°a
->
drv_¥iv
;

266 
	`debugfs_¸óã_fûe
("node_aggr", 
S_IRUGO
, 
dú
, 
™
, &
f›s_node_aggr
);

267 
	`debugfs_¸óã_fûe
("node_ªcv", 
S_IRUGO
, 
dú
, 
™
, &
f›s_node_ªcv
);

268 
	}
}

	@dfs.c

18 
	~"hw.h
"

19 
	~"hw-›s.h
"

20 
	~"©h9k.h
"

21 
	~"dfs.h
"

22 
	~"dfs_debug.h
"

25 
	s©h_ød¨_d©a
 {

26 
u8
 
	mpul£_bw_öfo
;

27 
u8
 
	mrssi
;

28 
u8
 
	mext_rssi
;

29 
u8
 
	mpul£_Àngth_ext
;

30 
u8
 
	mpul£_Àngth_¥i
;

34 
u32
 
	$dur_to_u£cs
(
©h_hw
 *
ah
, 
u32
 
dur
)

36 c⁄° 
u32
 
AR93X_NSECS_PER_DUR
 = 800;

37 c⁄° 
u32
 
AR93X_NSECS_PER_DUR_FAST
 = (8000 / 11);

38 
u32
 
n£cs
;

40 i‡(
	`IS_CHAN_A_FAST_CLOCK
(
ah
,áh->
curch™
))

41 
n£cs
 = 
dur
 * 
AR93X_NSECS_PER_DUR_FAST
;

43 
n£cs
 = 
dur
 * 
AR93X_NSECS_PER_DUR
;

45  (
n£cs
 + 500) / 1000;

46 
	}
}

48 
	#PRI_CH_RADAR_FOUND
 0x01

	)

49 
	#EXT_CH_RADAR_FOUND
 0x02

	)

50 
boﬁ


51 
	$©h9k_po°¥o˚ss_ød¨_evít
(
©h_so·c
 *
sc
,

52 
©h_ød¨_d©a
 *
¨d
,

53 
pul£_evít
 *
≥
)

55 
u8
 
rssi
;

56 
u16
 
dur
;

62 
¨d
->
pul£_bw_öfo
 &= 0x03;

64 
¨d
->
pul£_bw_öfo
) {

65 
PRI_CH_RADAR_FOUND
:

67 
dur
 = 
¨d
->
pul£_Àngth_¥i
;

68 
	`DFS_STAT_INC
(
sc
, 
¥i_phy_îr‹s
);

73 
rssi
 = (
¨d
->
ext_rssi
 >= (ard->rssi + 3)) ? 0 :árd->rssi;

75 
EXT_CH_RADAR_FOUND
:

77 
dur
 = 
¨d
->
pul£_Àngth_ext
;

78 
	`DFS_STAT_INC
(
sc
, 
ext_phy_îr‹s
);

83 
rssi
 = (
¨d
->rssò>◊rd->
ext_rssi
 + 12)) ? 0 :árd->ext_rssi;

85 (
PRI_CH_RADAR_FOUND
 | 
EXT_CH_RADAR_FOUND
):

93 i‡(
¨d
->
pul£_Àngth_ext
 >¨d->
pul£_Àngth_¥i
)

94 
dur
 = 
¨d
->
pul£_Àngth_ext
;

96 
dur
 = 
¨d
->
pul£_Àngth_¥i
;

97 
	`DFS_STAT_INC
(
sc
, 
dc_phy_îr‹s
);

100 
rssi
 = (
¨d
->rssò<árd->
ext_rssi
) ?árd->ext_rssi :árd->rssi;

107 
	`DFS_STAT_INC
(
sc
, 
bwöfo_disˇrds
);

108  
Ál£
;

111 i‡(
rssi
 == 0) {

112 
	`DFS_STAT_INC
(
sc
, 
rssi_disˇrds
);

113  
Ál£
;

123 
≥
->
width
 = 
	`dur_to_u£cs
(
sc
->
sc_ah
, 
dur
);

124 
≥
->
rssi
 =Ñssi;

126 
	`DFS_STAT_INC
(
sc
, 
pul£s_dëe˘ed
);

127  
åue
;

128 
	}
}

129 #unde‡
PRI_CH_RADAR_FOUND


130 #unde‡
EXT_CH_RADAR_FOUND


135 
	$©h9k_dfs_¥o˚ss_phyîr
(
©h_so·c
 *
sc
, *
d©a
,

136 
©h_rx_°©us
 *
rs
, 
u64
 
ma˘ime
)

138 
©h_ød¨_d©a
 
¨d
;

139 
u16
 
d©Æí
;

140 *
vd©a_íd
;

141 
pul£_evít
 
≥
;

142 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

143 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

145 
	`DFS_STAT_INC
(
sc
, 
pul£s_tŸÆ
);

146 i‡((
rs
->
rs_phyîr
 !
ATH9K_PHYERR_RADAR
) &&

147 (
rs
->
rs_phyîr
 !
ATH9K_PHYERR_FALSE_RADAR_EXT
)) {

148 
	`©h_dbg
(
comm⁄
, 
DFS
,

150 
rs
->
rs_phyîr
);

151 
	`DFS_STAT_INC
(
sc
, 
pul£s_no_dfs
);

155 
d©Æí
 = 
rs
->
rs_d©Æí
;

156 i‡(
d©Æí
 == 0) {

157 
	`DFS_STAT_INC
(
sc
, 
d©Æí_disˇrds
);

161 
¨d
.
rssi
 = 
rs
->
rs_rssi_˘l
[0];

162 
¨d
.
ext_rssi
 = 
rs
->
rs_rssi_ext
[0];

168 i‡(
¨d
.
rssi
 & 0x80)

169 
¨d
.
rssi
 = 0;

170 i‡(
¨d
.
ext_rssi
 & 0x80)

171 
¨d
.
ext_rssi
 = 0;

173 
vd©a_íd
 = (*)
d©a
 + 
d©Æí
;

174 
¨d
.
pul£_bw_öfo
 = 
vd©a_íd
[-1];

175 
¨d
.
pul£_Àngth_ext
 = 
vd©a_íd
[-2];

176 
¨d
.
pul£_Àngth_¥i
 = 
vd©a_íd
[-3];

177 
≥
.
‰eq
 = 
ah
->
curch™
->
ch™√l
;

178 
≥
.
ts
 = 
ma˘ime
;

179 i‡(
	`©h9k_po°¥o˚ss_ød¨_evít
(
sc
, &
¨d
, &
≥
)) {

180 
dfs_∑âîn_dëe˘‹
 *
pd
 = 
sc
->
dfs_dëe˘‹
;

181 #ifde‡
CPTCFG_ATH9K_DEBUGFS


182 
	`©h_dbg
(
comm⁄
, 
DFS
,

185 
≥
.
‰eq
,Öe.
ts
,Öe.
width
,Öe.
rssi
,

186 
≥
.
ts
 - 
sc
->
debug
.
°©s
.
dfs_°©s
.
œ°_ts
);

187 
sc
->
debug
.
°©s
.
dfs_°©s
.
œ°_ts
 = 
≥
.
ts
;

189 
	`DFS_STAT_INC
(
sc
, 
pul£s_¥o˚s£d
);

190 i‡(
pd
 !
NULL
 &&Öd->
	`add_pul£
’d, &
≥
)) {

191 
	`DFS_STAT_INC
(
sc
, 
ød¨_dëe˘ed
);

192 
	`õì80211_ød¨_dëe˘ed
(
sc
->
hw
);

195 
	}
}

	@dfs.h

18 #i‚de‡
ATH9K_DFS_H


19 
	#ATH9K_DFS_H


	)

20 
	~"../dfs_∑âîn_dëe˘‹.h
"

22 #i‡
deföed
(
CPTCFG_ATH9K_DFS_CERTIFIED
)

37 
©h9k_dfs_¥o˚ss_phyîr
(
©h_so·c
 *
sc
, *
d©a
,

38 
©h_rx_°©us
 *
rs
, 
u64
 
ma˘ime
);

40 
ölöe
 

41 
	$©h9k_dfs_¥o˚ss_phyîr
(
©h_so·c
 *
sc
, *
d©a
,

42 
©h_rx_°©us
 *
rs
, 
u64
 
ma˘ime
Ë{ 
	}
}

	@dfs_debug.c

18 
	~<löux/debugfs.h
>

19 
	~<löux/exp‹t.h
>

21 
	~"©h9k.h
"

22 
	~"dfs_debug.h
"

23 
	~"../dfs_∑âîn_dëe˘‹.h
"

25 
©h_dfs_poﬁ_°©s
 
	gdfs_poﬁ_°©s
 = { 0 };

27 
	#ATH9K_DFS_STAT
(
s
, 
p
) \

28 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üí, "%28†: %10u\n", 
s
, \

29 
sc
->
debug
.
°©s
.
dfs_°©s
.
p
);

	)

30 
	#ATH9K_DFS_POOL_STAT
(
s
, 
p
) \

31 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üí, "%28†: %10u\n", 
s
, \

32 
dfs_poﬁ_°©s
.
p
);

	)

34 
ssize_t
 
	$ªad_fûe_dfs
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

35 
size_t
 
cou¡
, 
loff_t
 *
µos
)

37 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

38 
©h9k_hw_vîsi⁄
 *
hw_vî
 = &
sc
->
sc_ah
->
hw_vîsi⁄
;

39 *
buf
;

40 
Àn
 = 0, 
size
 = 8000;

41 
ssize_t
 
ªtvÆ
 = 0;

43 
buf
 = 
	`kzÆloc
(
size
, 
GFP_KERNEL
);

44 i‡(
buf
 =
NULL
)

45  -
ENOMEM
;

47 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "DFS support for "

49 
hw_vî
->
macVîsi⁄
, hw_vî->
macRev
,

50 (
sc
->
sc_ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_DFS
) ?

53 i‡(!
sc
->
dfs_dëe˘‹
) {

54 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen,

56 
exô
;

59 
dfs_poﬁ_°©s
 = 
sc
->
dfs_dëe˘‹
->
	`gë_°©s
(sc->dfs_detector);

61 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "Pulse detector statistics:\n");

62 
	`ATH9K_DFS_STAT
("pul£Évít†ªp‹ãd ", 
pul£s_tŸÆ
);

63 
	`ATH9K_DFS_STAT
("övÆidÖul£Évít† ", 
pul£s_no_dfs
);

64 
	`ATH9K_DFS_STAT
("DFSÖul£†dëe˘ed ", 
pul£s_dëe˘ed
);

65 
	`ATH9K_DFS_STAT
("D©Æí disˇrd† ", 
d©Æí_disˇrds
);

66 
	`ATH9K_DFS_STAT
("RSSI disˇrd† ", 
rssi_disˇrds
);

67 
	`ATH9K_DFS_STAT
("BW infÿdisˇrd† ", 
bwöfo_disˇrds
);

68 
	`ATH9K_DFS_STAT
("Prim¨y ch™√»pul£† ", 
¥i_phy_îr‹s
);

69 
	`ATH9K_DFS_STAT
("Sec⁄d¨y ch™√»pul£s", 
ext_phy_îr‹s
);

70 
	`ATH9K_DFS_STAT
("DuÆ ch™√»pul£† ", 
dc_phy_îr‹s
);

71 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "Radar detector statistics "

73 
sc
->
dfs_dëe˘‹
->
ªgi⁄
);

74 
	`ATH9K_DFS_STAT
("Pul£Évít†¥o˚s£d ", 
pul£s_¥o˚s£d
);

75 
	`ATH9K_DFS_STAT
("Rad¨†dëe˘ed ", 
ød¨_dëe˘ed
);

76 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "Global Pool statistics:\n");

77 
	`ATH9K_DFS_POOL_STAT
("PoﬁÑe„ªn˚† ", 
poﬁ_ª„ªn˚
);

78 
	`ATH9K_DFS_POOL_STAT
("Pul£†Æloˇãd ", 
pul£_Æloˇãd
);

79 
	`ATH9K_DFS_POOL_STAT
("Pul£†Ælo¯îr‹ ", 
pul£_Æloc_îr‹
);

80 
	`ATH9K_DFS_POOL_STAT
("Pul£†ö u£ ", 
pul£_u£d
);

81 
	`ATH9K_DFS_POOL_STAT
("Seqs.áŒoˇãd ", 
p£q_Æloˇãd
);

82 
	`ATH9K_DFS_POOL_STAT
("Seqs.áŒo¯îr‹ ", 
p£q_Æloc_îr‹
);

83 
	`ATH9K_DFS_POOL_STAT
("Seqs. i¿u£ ", 
p£q_u£d
);

85 
exô
:

86 i‡(
Àn
 > 
size
)

87 
Àn
 = 
size
;

89 
ªtvÆ
 = 
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

90 
	`k‰ì
(
buf
);

92  
ªtvÆ
;

93 
	}
}

96 
	#DFS_STATS_RESET_MAGIC
 0x80000000

	)

97 
ssize_t
 
	$wrôe_fûe_dfs
(
fûe
 *fûe, c⁄° 
__u£r
 *
u£r_buf
,

98 
size_t
 
cou¡
, 
loff_t
 *
µos
)

100 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

101 
vÆ
;

102 
buf
[32];

103 
ssize_t
 
Àn
;

105 
Àn
 = 
	`mö
(
cou¡
, (
buf
) - 1);

106 i‡(
	`c›y_‰om_u£r
(
buf
, 
u£r_buf
, 
Àn
))

107  -
EFAULT
;

109 
buf
[
Àn
] = '\0';

110 i‡(
	`k°πoul
(
buf
, 0, &
vÆ
))

111  -
EINVAL
;

113 i‡(
vÆ
 =
DFS_STATS_RESET_MAGIC
)

114 
	`mem£t
(&
sc
->
debug
.
°©s
.
dfs_°©s
, 0,

115 (
sc
->
debug
.
°©s
.
dfs_°©s
));

116  
cou¡
;

117 
	}
}

119 
ssize_t
 
	$wrôe_fûe_simuœã_ød¨
(
fûe
 *file,

120 c⁄° 
__u£r
 *
u£r_buf
,

121 
size_t
 
cou¡
, 
loff_t
 *
µos
)

123 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

125 
	`õì80211_ød¨_dëe˘ed
(
sc
->
hw
);

127  
cou¡
;

128 
	}
}

130 c⁄° 
fûe_›î©i⁄s
 
	gf›s_simuœã_ød¨
 = {

131 .
wrôe
 = 
wrôe_fûe_simuœã_ød¨
,

132 .
	g›í
 = 
sim∂e_›í
,

133 .
	gow√r
 = 
THIS_MODULE
,

134 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

137 c⁄° 
fûe_›î©i⁄s
 
	gf›s_dfs_°©s
 = {

138 .
ªad
 = 
ªad_fûe_dfs
,

139 .
	gwrôe
 = 
wrôe_fûe_dfs
,

140 .
	g›í
 = 
sim∂e_›í
,

141 .
	gow√r
 = 
THIS_MODULE
,

142 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

145 
	$©h9k_dfs_öô_debug
(
©h_so·c
 *
sc
)

147 
	`debugfs_¸óã_fûe
("dfs_°©s", 
S_IRUSR
,

148 
sc
->
debug
.
debugfs_phy
, sc, &
f›s_dfs_°©s
);

149 
	`debugfs_¸óã_fûe
("dfs_simuœã_ød¨", 
S_IWUSR
,

150 
sc
->
debug
.
debugfs_phy
, sc, &
f›s_simuœã_ød¨
);

151 
	}
}

	@dfs_debug.h

19 #i‚de‡
ATH9K_DFS_DEBUG_H


20 
	#ATH9K_DFS_DEBUG_H


	)

22 
	~"hw.h
"

24 
	g©h_so·c
;

40 
	s©h_dfs_°©s
 {

42 
u32
 
	mpul£s_tŸÆ
;

43 
u32
 
	mpul£s_no_dfs
;

44 
u32
 
	mpul£s_dëe˘ed
;

45 
u32
 
	md©Æí_disˇrds
;

46 
u32
 
	mrssi_disˇrds
;

47 
u32
 
	mbwöfo_disˇrds
;

48 
u32
 
	m¥i_phy_îr‹s
;

49 
u32
 
	mext_phy_îr‹s
;

50 
u32
 
	mdc_phy_îr‹s
;

52 
u32
 
	mpul£s_¥o˚s£d
;

53 
u32
 
	mød¨_dëe˘ed
;

54 
u64
 
	mœ°_ts
;

57 #i‡
deföed
(
CPTCFG_ATH9K_DFS_DEBUGFS
)

59 
	#DFS_STAT_INC
(
sc
, 
c
Ë(sc->
debug
.
°©s
.
dfs_°©s
.c++)

	)

60 
©h9k_dfs_öô_debug
(
©h_so·c
 *
sc
);

62 
©h_dfs_poﬁ_°©s
 
globÆ_dfs_poﬁ_°©s
;

66 
	#DFS_STAT_INC
(
sc
, 
c
Ëdÿ{ } 0)

	)

67 
ölöe
 
	$©h9k_dfs_öô_debug
(
©h_so·c
 *
sc
Ë{ 
	}
}

	@eeprom.c

17 
	~"hw.h
"

19 
	$©h9k_hw_™Æog_shi·_ªgwrôe
(
©h_hw
 *
ah
, 
u32
 
ªg
, u32 
vÆ
)

21 
	`REG_WRITE
(
ah
, 
ªg
, 
vÆ
);

23 i‡(
ah
->
c⁄fig
.
™Æog_shi·ªg
)

24 
	`udñay
(100);

25 
	}
}

27 
	$©h9k_hw_™Æog_shi·_rmw
(
©h_hw
 *
ah
, 
u32
 
ªg
, u32 
mask
,

28 
u32
 
shi·
, u32 
vÆ
)

30 
u32
 
ªgVÆ
;

32 
ªgVÆ
 = 
	`REG_READ
(
ah
, 
ªg
Ë& ~
mask
;

33 
ªgVÆ
 |(
vÆ
 << 
shi·
Ë& 
mask
;

35 
	`REG_WRITE
(
ah
, 
ªg
, 
ªgVÆ
);

37 i‡(
ah
->
c⁄fig
.
™Æog_shi·ªg
)

38 
	`udñay
(100);

39 
	}
}

41 
öt16_t
 
	$©h9k_hw_öãΩﬁ©e
(
u16
 
èrgë
, u16 
§cLe·
, u16 
§cRight
,

42 
öt16_t
 
èrgëLe·
, i¡16_à
èrgëRight
)

44 
öt16_t
 
rv
;

46 i‡(
§cRight
 =
§cLe·
) {

47 
rv
 = 
èrgëLe·
;

49 
rv
 = (
öt16_t
Ë(((
èrgë
 - 
§cLe·
Ë* 
èrgëRight
 +

50 (
§cRight
 - 
èrgë
Ë* 
èrgëLe·
) /

51 (
§cRight
 - 
§cLe·
));

53  
rv
;

54 
	}
}

56 
boﬁ
 
	$©h9k_hw_gë_lowî_uµî_ödex
(
u8
 
èrgë
, u8 *
pLi°
, 
u16
 
li°Size
,

57 
u16
 *
ödexL
, u16 *
ödexR
)

59 
u16
 
i
;

61 i‡(
èrgë
 <
pLi°
[0]) {

62 *
ödexL
 = *
ödexR
 = 0;

63  
åue
;

65 i‡(
èrgë
 >
pLi°
[
li°Size
 - 1]) {

66 *
ödexL
 = *
ödexR
 = (
u16
Ë(
li°Size
 - 1);

67  
åue
;

70 
i
 = 0; i < 
li°Size
 - 1; i++) {

71 i‡(
pLi°
[
i
] =
èrgë
) {

72 *
ödexL
 = *
ödexR
 = 
i
;

73  
åue
;

75 i‡(
èrgë
 < 
pLi°
[
i
 + 1]) {

76 *
ödexL
 = 
i
;

77 *
ödexR
 = (
u16
Ë(
i
 + 1);

78  
Ál£
;

81  
Ál£
;

82 
	}
}

84 
	$©h9k_hw_usb_gí_fûl_ì¥om
(
©h_hw
 *
ah
, 
u16
 *
ìp_d©a
,

85 
ìp_°¨t_loc
, 
size
)

87 
i
 = 0, 
j
, 
addr
;

88 
u32
 
addrd©a
[8];

89 
u32
 
d©a
[8];

91 
addr
 = 0;ádd∏< 
size
;áddr++) {

92 
addrd©a
[
i
] = 
AR5416_EEPROM_OFFSET
 +

93 ((
addr
 + 
ìp_°¨t_loc
Ë<< 
AR5416_EEPROM_S
);

94 
i
++;

95 i‡(
i
 == 8) {

96 
	`REG_READ_MULTI
(
ah
, 
addrd©a
, 
d©a
, 
i
);

98 
j
 = 0; j < 
i
; j++) {

99 *
ìp_d©a
 = 
d©a
[
j
];

100 
ìp_d©a
++;

102 
i
 = 0;

106 i‡(
i
 != 0) {

107 
	`REG_READ_MULTI
(
ah
, 
addrd©a
, 
d©a
, 
i
);

109 
j
 = 0; j < 
i
; j++) {

110 *
ìp_d©a
 = 
d©a
[
j
];

111 
ìp_d©a
++;

114 
	}
}

116 
boﬁ
 
	$©h9k_hw_nvøm_ªad_blob
(
©h_hw
 *
ah
, 
u32
 
off
,

117 
u16
 *
d©a
)

119 
u16
 *
blob_d©a
;

121 i‡(
off
 * (
u16
Ë> 
ah
->
ì¥om_blob
->
size
)

122  
Ál£
;

124 
blob_d©a
 = (
u16
 *)
ah
->
ì¥om_blob
->
d©a
;

125 *
d©a
 = 
blob_d©a
[
off
];

126  
åue
;

127 
	}
}

129 
boﬁ
 
	$©h9k_hw_nvøm_ªad
(
©h_hw
 *
ah
, 
u32
 
off
, 
u16
 *
d©a
)

131 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

132 
boﬁ
 
ªt
;

134 i‡(
ah
->
ì¥om_blob
)

135 
ªt
 = 
	`©h9k_hw_nvøm_ªad_blob
(
ah
, 
off
, 
d©a
);

137 
ªt
 = 
comm⁄
->
bus_›s
->
	`ì¥om_ªad
(comm⁄, 
off
, 
d©a
);

139 i‡(!
ªt
)

140 
	`©h_dbg
(
comm⁄
, 
EEPROM
,

141 "u«bÀÅÿªadÉïromÑegi⁄áàoff£à%u\n", 
off
);

143  
ªt
;

144 
	}
}

146 
	$©h9k_hw_fûl_vpd_èbÀ
(
u8
 
pwrMö
, u8 
pwrMax
, u8 *
pPwrLi°
,

147 
u8
 *
pVpdLi°
, 
u16
 
numI¡î˚±s
,

148 
u8
 *
pRëVpdLi°
)

150 
u16
 
i
, 
k
;

151 
u8
 
cuºPwr
 = 
pwrMö
;

152 
u16
 
idxL
 = 0, 
idxR
 = 0;

154 
i
 = 0; i <(
pwrMax
 - 
pwrMö
) / 2; i++) {

155 
	`©h9k_hw_gë_lowî_uµî_ödex
(
cuºPwr
, 
pPwrLi°
,

156 
numI¡î˚±s
, &(
idxL
),

157 &(
idxR
));

158 i‡(
idxR
 < 1)

159 
idxR
 = 1;

160 i‡(
idxL
 =
numI¡î˚±s
 - 1)

161 
idxL
 = (
u16
Ë(
numI¡î˚±s
 - 2);

162 i‡(
pPwrLi°
[
idxL
] =pPwrLi°[
idxR
])

163 
k
 = 
pVpdLi°
[
idxL
];

165 
k
 = (
u16
)(((
cuºPwr
 - 
pPwrLi°
[
idxL
]Ë* 
pVpdLi°
[
idxR
] +

166 (
pPwrLi°
[
idxR
] - 
cuºPwr
Ë* 
pVpdLi°
[
idxL
]) /

167 (
pPwrLi°
[
idxR
] -ÖPwrLi°[
idxL
]));

168 
pRëVpdLi°
[
i
] = (
u8
Ë
k
;

169 
cuºPwr
 += 2;

171 
	}
}

173 
	$©h9k_hw_gë_Àgacy_èrgë_powîs
(
©h_hw
 *
ah
,

174 
©h9k_ch™√l
 *
ch™
,

175 
ˇl_èrgë_powî_Àg
 *
powInfo
,

176 
u16
 
numCh™√ls
,

177 
ˇl_èrgë_powî_Àg
 *
pNewPowî
,

178 
u16
 
numR©es
, 
boﬁ
 
isExtT¨gë
)

180 
ch™_˚¡îs
 
˚¡îs
;

181 
u16
 
˛o
, 
chi
;

182 
i
;

183 
m©chIndex
 = -1, 
lowIndex
 = -1;

184 
u16
 
‰eq
;

186 
	`©h9k_hw_gë_ch™√l_˚¡îs
(
ah
, 
ch™
, &
˚¡îs
);

187 
‰eq
 = (
isExtT¨gë
Ë? 
˚¡îs
.
ext_˚¡î
 : cíãrs.
˘l_˚¡î
;

189 i‡(
‰eq
 <
	`©h9k_hw_fbö2‰eq
(
powInfo
[0].
bCh™√l
,

190 
	`IS_CHAN_2GHZ
(
ch™
))) {

191 
m©chIndex
 = 0;

193 
i
 = 0; (ò< 
numCh™√ls
) &&

194 (
powInfo
[
i
].
bCh™√l
 !
AR5416_BCHAN_UNUSED
); i++) {

195 i‡(
‰eq
 =
	`©h9k_hw_fbö2‰eq
(
powInfo
[
i
].
bCh™√l
,

196 
	`IS_CHAN_2GHZ
(
ch™
))) {

197 
m©chIndex
 = 
i
;

199 } i‡(
‰eq
 < 
	`©h9k_hw_fbö2‰eq
(
powInfo
[
i
].
bCh™√l
,

200 
	`IS_CHAN_2GHZ
(
ch™
)Ë&& 
i
 > 0 &&

201 
‰eq
 > 
	`©h9k_hw_fbö2‰eq
(
powInfo
[
i
 - 1].
bCh™√l
,

202 
	`IS_CHAN_2GHZ
(
ch™
))) {

203 
lowIndex
 = 
i
 - 1;

207 i‡((
m©chIndex
 =-1Ë&& (
lowIndex
 == -1))

208 
m©chIndex
 = 
i
 - 1;

211 i‡(
m©chIndex
 != -1) {

212 *
pNewPowî
 = 
powInfo
[
m©chIndex
];

214 
˛o
 = 
	`©h9k_hw_fbö2‰eq
(
powInfo
[
lowIndex
].
bCh™√l
,

215 
	`IS_CHAN_2GHZ
(
ch™
));

216 
chi
 = 
	`©h9k_hw_fbö2‰eq
(
powInfo
[
lowIndex
 + 1].
bCh™√l
,

217 
	`IS_CHAN_2GHZ
(
ch™
));

219 
i
 = 0; i < 
numR©es
; i++) {

220 
pNewPowî
->
tPow2x
[
i
] =

221 (
u8
)
	`©h9k_hw_öãΩﬁ©e
(
‰eq
, 
˛o
, 
chi
,

222 
powInfo
[
lowIndex
].
tPow2x
[
i
],

223 
powInfo
[
lowIndex
 + 1].
tPow2x
[
i
]);

226 
	}
}

228 
	$©h9k_hw_gë_èrgë_powîs
(
©h_hw
 *
ah
,

229 
©h9k_ch™√l
 *
ch™
,

230 
ˇl_èrgë_powî_ht
 *
powInfo
,

231 
u16
 
numCh™√ls
,

232 
ˇl_èrgë_powî_ht
 *
pNewPowî
,

233 
u16
 
numR©es
, 
boﬁ
 
isHt40T¨gë
)

235 
ch™_˚¡îs
 
˚¡îs
;

236 
u16
 
˛o
, 
chi
;

237 
i
;

238 
m©chIndex
 = -1, 
lowIndex
 = -1;

239 
u16
 
‰eq
;

241 
	`©h9k_hw_gë_ch™√l_˚¡îs
(
ah
, 
ch™
, &
˚¡îs
);

242 
‰eq
 = 
isHt40T¨gë
 ? 
˚¡îs
.
sy¡h_˚¡î
 : cíãrs.
˘l_˚¡î
;

244 i‡(
‰eq
 <
	`©h9k_hw_fbö2‰eq
(
powInfo
[0].
bCh™√l
, 
	`IS_CHAN_2GHZ
(
ch™
))) {

245 
m©chIndex
 = 0;

247 
i
 = 0; (ò< 
numCh™√ls
) &&

248 (
powInfo
[
i
].
bCh™√l
 !
AR5416_BCHAN_UNUSED
); i++) {

249 i‡(
‰eq
 =
	`©h9k_hw_fbö2‰eq
(
powInfo
[
i
].
bCh™√l
,

250 
	`IS_CHAN_2GHZ
(
ch™
))) {

251 
m©chIndex
 = 
i
;

254 i‡(
‰eq
 < 
	`©h9k_hw_fbö2‰eq
(
powInfo
[
i
].
bCh™√l
,

255 
	`IS_CHAN_2GHZ
(
ch™
)Ë&& 
i
 > 0 &&

256 
‰eq
 > 
	`©h9k_hw_fbö2‰eq
(
powInfo
[
i
 - 1].
bCh™√l
,

257 
	`IS_CHAN_2GHZ
(
ch™
))) {

258 
lowIndex
 = 
i
 - 1;

262 i‡((
m©chIndex
 =-1Ë&& (
lowIndex
 == -1))

263 
m©chIndex
 = 
i
 - 1;

266 i‡(
m©chIndex
 != -1) {

267 *
pNewPowî
 = 
powInfo
[
m©chIndex
];

269 
˛o
 = 
	`©h9k_hw_fbö2‰eq
(
powInfo
[
lowIndex
].
bCh™√l
,

270 
	`IS_CHAN_2GHZ
(
ch™
));

271 
chi
 = 
	`©h9k_hw_fbö2‰eq
(
powInfo
[
lowIndex
 + 1].
bCh™√l
,

272 
	`IS_CHAN_2GHZ
(
ch™
));

274 
i
 = 0; i < 
numR©es
; i++) {

275 
pNewPowî
->
tPow2x
[
i
] = (
u8
)
	`©h9k_hw_öãΩﬁ©e
(
‰eq
,

276 
˛o
, 
chi
,

277 
powInfo
[
lowIndex
].
tPow2x
[
i
],

278 
powInfo
[
lowIndex
 + 1].
tPow2x
[
i
]);

281 
	}
}

283 
u16
 
	$©h9k_hw_gë_max_edge_powî
(
u16
 
‰eq
, 
ˇl_˘l_edges
 *
pRdEdgesPowî
,

284 
boﬁ
 
is2GHz
, 
num_b™d_edges
)

286 
u16
 
twi˚MaxEdgePowî
 = 
MAX_RATE_POWER
;

287 
i
;

289 
i
 = 0; (ò< 
num_b™d_edges
) &&

290 (
pRdEdgesPowî
[
i
].
bCh™√l
 !
AR5416_BCHAN_UNUSED
); i++) {

291 i‡(
‰eq
 =
	`©h9k_hw_fbö2‰eq
(
pRdEdgesPowî
[
i
].
bCh™√l
, 
is2GHz
)) {

292 
twi˚MaxEdgePowî
 = 
	`CTL_EDGE_TPOWER
(
pRdEdgesPowî
[
i
].
˘l
);

294 } i‡((
i
 > 0) &&

295 (
‰eq
 < 
	`©h9k_hw_fbö2‰eq
(
pRdEdgesPowî
[
i
].
bCh™√l
,

296 
is2GHz
))) {

297 i‡(
	`©h9k_hw_fbö2‰eq
(
pRdEdgesPowî
[
i
 - 1].
bCh™√l
,

298 
is2GHz
Ë< 
‰eq
 &&

299 
	`CTL_EDGE_FLAGS
(
pRdEdgesPowî
[
i
 - 1].
˘l
)) {

300 
twi˚MaxEdgePowî
 =

301 
	`CTL_EDGE_TPOWER
(
pRdEdgesPowî
[
i
 - 1].
˘l
);

307  
twi˚MaxEdgePowî
;

308 
	}
}

310 
u16
 
	$©h9k_hw_gë_sˇÀd_powî
(
©h_hw
 *
ah
, 
u16
 
powî_limô
,

311 
u8
 
™ã¬a_ªdu˘i⁄
)

313 
u16
 
ªdu˘i⁄
 = 
™ã¬a_ªdu˘i⁄
;

319 
	`¨5416_gë_¡xchaös
(
ah
->
txchaömask
)) {

323 
ªdu˘i⁄
 +
POWER_CORRECTION_FOR_TWO_CHAIN
;

326 
ªdu˘i⁄
 +
POWER_CORRECTION_FOR_THREE_CHAIN
;

330 i‡(
powî_limô
 > 
ªdu˘i⁄
)

331 
powî_limô
 -
ªdu˘i⁄
;

333 
powî_limô
 = 0;

335  
powî_limô
;

336 
	}
}

338 
	$©h9k_hw_upd©e_ªguœt‹y_maxpowî
(
©h_hw
 *
ah
)

340 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

341 
©h_ªguœt‹y
 *
ªguœt‹y
 = 
	`©h9k_hw_ªguœt‹y
(
ah
);

343 
	`¨5416_gë_¡xchaös
(
ah
->
txchaömask
)) {

347 
ªguœt‹y
->
max_powî_Àvñ
 +
POWER_CORRECTION_FOR_TWO_CHAIN
;

350 
ªguœt‹y
->
max_powî_Àvñ
 +
POWER_CORRECTION_FOR_THREE_CHAIN
;

353 
	`©h_dbg
(
comm⁄
, 
EEPROM
, "Invalid chainmask configuration\n");

356 
	}
}

358 
	$©h9k_hw_gë_gaö_bound¨õs_pdadcs
(
©h_hw
 *
ah
,

359 
©h9k_ch™√l
 *
ch™
,

360 *
pRawD©aSë
,

361 
u8
 *
bCh™s
, 
u16
 
avaûPõrs
,

362 
u16
 
tPdGaöOvîœp
,

363 
u16
 *
pPdGaöBound¨õs
, 
u8
 *
pPDADCVÆues
,

364 
u16
 
numXpdGaös
)

366 
i
, 
j
, 
k
;

367 
öt16_t
 
ss
;

368 
u16
 
idxL
 = 0, 
idxR
 = 0, 
numPõrs
;

369 
u8
 
vpdTabÀL
[
AR5416_NUM_PD_GAINS
]

370 [
AR5416_MAX_PWR_RANGE_IN_HALF_DB
];

371 
u8
 
vpdTabÀR
[
AR5416_NUM_PD_GAINS
]

372 [
AR5416_MAX_PWR_RANGE_IN_HALF_DB
];

373 
u8
 
vpdTabÀI
[
AR5416_NUM_PD_GAINS
]

374 [
AR5416_MAX_PWR_RANGE_IN_HALF_DB
];

376 
u8
 *
pVpdL
, *
pVpdR
, *
pPwrL
, *
pPwrR
;

377 
u8
 
möPwrT4
[
AR5416_NUM_PD_GAINS
];

378 
u8
 
maxPwrT4
[
AR5416_NUM_PD_GAINS
];

379 
öt16_t
 
vpdSãp
;

380 
öt16_t
 
tmpVÆ
;

381 
u16
 
sizeCuºVpdTabÀ
, 
maxIndex
, 
tgtIndex
;

382 
boﬁ
 
m©ch
;

383 
öt16_t
 
möDñè
 = 0;

384 
ch™_˚¡îs
 
˚¡îs
;

385 
pdgaö_bound¨y_deÁu…
;

386 
ˇl_d©a_≥r_‰eq
 *
d©a_def
 = 
pRawD©aSë
;

387 
ˇl_d©a_≥r_‰eq_4k
 *
d©a_4k
 = 
pRawD©aSë
;

388 
ˇl_d©a_≥r_‰eq_¨9287
 *
d©a_9287
 = 
pRawD©aSë
;

389 
boﬁ
 
ì¥om_4k
 = 
	`AR_SREV_9285
(
ah
Ë|| 
	`AR_SREV_9271
(ah);

390 
öãr˚±s
;

392 i‡(
	`AR_SREV_9287
(
ah
))

393 
öãr˚±s
 = 
AR9287_PD_GAIN_ICEPTS
;

395 
öãr˚±s
 = 
AR5416_PD_GAIN_ICEPTS
;

397 
	`mem£t
(&
möPwrT4
, 0, 
AR5416_NUM_PD_GAINS
);

398 
	`©h9k_hw_gë_ch™√l_˚¡îs
(
ah
, 
ch™
, &
˚¡îs
);

400 
numPõrs
 = 0;ÇumPõr†< 
avaûPõrs
;ÇumPiers++) {

401 i‡(
bCh™s
[
numPõrs
] =
AR5416_BCHAN_UNUSED
)

405 
m©ch
 = 
	`©h9k_hw_gë_lowî_uµî_ödex
((
u8
)
	`FREQ2FBIN
(
˚¡îs
.
sy¡h_˚¡î
,

406 
	`IS_CHAN_2GHZ
(
ch™
)),

407 
bCh™s
, 
numPõrs
, &
idxL
, &
idxR
);

409 i‡(
m©ch
) {

410 i‡(
	`AR_SREV_9287
(
ah
)) {

412 
i
 = 0; i < 
numXpdGaös
; i++) {

413 
möPwrT4
[
i
] = 
d©a_9287
[
idxL
].
pwrPdg
[i][0];

414 
maxPwrT4
[
i
] = 
d©a_9287
[
idxL
].
pwrPdg
[i][4];

415 
	`©h9k_hw_fûl_vpd_èbÀ
(
möPwrT4
[
i
], 
maxPwrT4
[i],

416 
d©a_9287
[
idxL
].
pwrPdg
[
i
],

417 
d©a_9287
[
idxL
].
vpdPdg
[
i
],

418 
öãr˚±s
,

419 
vpdTabÀI
[
i
]);

421 } i‡(
ì¥om_4k
) {

422 
i
 = 0; i < 
numXpdGaös
; i++) {

423 
möPwrT4
[
i
] = 
d©a_4k
[
idxL
].
pwrPdg
[i][0];

424 
maxPwrT4
[
i
] = 
d©a_4k
[
idxL
].
pwrPdg
[i][4];

425 
	`©h9k_hw_fûl_vpd_èbÀ
(
möPwrT4
[
i
], 
maxPwrT4
[i],

426 
d©a_4k
[
idxL
].
pwrPdg
[
i
],

427 
d©a_4k
[
idxL
].
vpdPdg
[
i
],

428 
öãr˚±s
,

429 
vpdTabÀI
[
i
]);

432 
i
 = 0; i < 
numXpdGaös
; i++) {

433 
möPwrT4
[
i
] = 
d©a_def
[
idxL
].
pwrPdg
[i][0];

434 
maxPwrT4
[
i
] = 
d©a_def
[
idxL
].
pwrPdg
[i][4];

435 
	`©h9k_hw_fûl_vpd_èbÀ
(
möPwrT4
[
i
], 
maxPwrT4
[i],

436 
d©a_def
[
idxL
].
pwrPdg
[
i
],

437 
d©a_def
[
idxL
].
vpdPdg
[
i
],

438 
öãr˚±s
,

439 
vpdTabÀI
[
i
]);

443 
i
 = 0; i < 
numXpdGaös
; i++) {

444 i‡(
	`AR_SREV_9287
(
ah
)) {

445 
pVpdL
 = 
d©a_9287
[
idxL
].
vpdPdg
[
i
];

446 
pPwrL
 = 
d©a_9287
[
idxL
].
pwrPdg
[
i
];

447 
pVpdR
 = 
d©a_9287
[
idxR
].
vpdPdg
[
i
];

448 
pPwrR
 = 
d©a_9287
[
idxR
].
pwrPdg
[
i
];

449 } i‡(
ì¥om_4k
) {

450 
pVpdL
 = 
d©a_4k
[
idxL
].
vpdPdg
[
i
];

451 
pPwrL
 = 
d©a_4k
[
idxL
].
pwrPdg
[
i
];

452 
pVpdR
 = 
d©a_4k
[
idxR
].
vpdPdg
[
i
];

453 
pPwrR
 = 
d©a_4k
[
idxR
].
pwrPdg
[
i
];

455 
pVpdL
 = 
d©a_def
[
idxL
].
vpdPdg
[
i
];

456 
pPwrL
 = 
d©a_def
[
idxL
].
pwrPdg
[
i
];

457 
pVpdR
 = 
d©a_def
[
idxR
].
vpdPdg
[
i
];

458 
pPwrR
 = 
d©a_def
[
idxR
].
pwrPdg
[
i
];

461 
möPwrT4
[
i
] = 
	`max
(
pPwrL
[0], 
pPwrR
[0]);

463 
maxPwrT4
[
i
] =

464 
	`mö
(
pPwrL
[
öãr˚±s
 - 1],

465 
pPwrR
[
öãr˚±s
 - 1]);

468 
	`©h9k_hw_fûl_vpd_èbÀ
(
möPwrT4
[
i
], 
maxPwrT4
[i],

469 
pPwrL
, 
pVpdL
,

470 
öãr˚±s
,

471 
vpdTabÀL
[
i
]);

472 
	`©h9k_hw_fûl_vpd_èbÀ
(
möPwrT4
[
i
], 
maxPwrT4
[i],

473 
pPwrR
, 
pVpdR
,

474 
öãr˚±s
,

475 
vpdTabÀR
[
i
]);

477 
j
 = 0; j <(
maxPwrT4
[
i
] - 
möPwrT4
[i]) / 2; j++) {

478 
vpdTabÀI
[
i
][
j
] =

479 (
u8
)(
	`©h9k_hw_öãΩﬁ©e
((
u16
)

480 
	`FREQ2FBIN
(
˚¡îs
.

481 
sy¡h_˚¡î
,

482 
IS_CHAN_2GHZ


483 (
ch™
)),

484 
bCh™s
[
idxL
], bCh™s[
idxR
],

485 
vpdTabÀL
[
i
][
j
], 
vpdTabÀR
[i][j]));

490 
k
 = 0;

492 
i
 = 0; i < 
numXpdGaös
; i++) {

493 i‡(
i
 =(
numXpdGaös
 - 1))

494 
pPdGaöBound¨õs
[
i
] =

495 (
u16
)(
maxPwrT4
[
i
] / 2);

497 
pPdGaöBound¨õs
[
i
] =

498 (
u16
)((
maxPwrT4
[
i
] + 
möPwrT4
[i + 1]) / 4);

500 
pPdGaöBound¨õs
[
i
] =

501 
	`mö
((
u16
)
MAX_RATE_POWER
, 
pPdGaöBound¨õs
[
i
]);

503 
möDñè
 = 0;

505 i‡(
i
 == 0) {

506 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
))

507 
ss
 = (
öt16_t
)(0 - (
möPwrT4
[
i
] / 2));

509 
ss
 = 0;

511 
ss
 = (
öt16_t
)((
pPdGaöBound¨õs
[
i
 - 1] -

512 (
möPwrT4
[
i
] / 2)) -

513 
tPdGaöOvîœp
 + 1 + 
möDñè
);

515 
vpdSãp
 = (
öt16_t
)(
vpdTabÀI
[
i
][1] - vpdTableI[i][0]);

516 
vpdSãp
 = (
öt16_t
)((vpdStep < 1) ? 1 : vpdStep);

518 (
ss
 < 0Ë&& (
k
 < (
AR5416_NUM_PDADC_VALUES
 - 1))) {

519 
tmpVÆ
 = (
öt16_t
)(
vpdTabÀI
[
i
][0] + 
ss
 * 
vpdSãp
);

520 
pPDADCVÆues
[
k
++] = (
u8
)((
tmpVÆ
 < 0) ? 0 :ÅmpVal);

521 
ss
++;

524 
sizeCuºVpdTabÀ
 = (
u8
Ë((
maxPwrT4
[
i
] - 
möPwrT4
[i]) / 2 + 1);

525 
tgtIndex
 = (
u8
)(
pPdGaöBound¨õs
[
i
] + 
tPdGaöOvîœp
 -

526 (
möPwrT4
[
i
] / 2));

527 
maxIndex
 = (
tgtIndex
 < 
sizeCuºVpdTabÀ
) ?

528 
tgtIndex
 : 
sizeCuºVpdTabÀ
;

530 (
ss
 < 
maxIndex
Ë&& (
k
 < (
AR5416_NUM_PDADC_VALUES
 - 1))) {

531 
pPDADCVÆues
[
k
++] = 
vpdTabÀI
[
i
][
ss
++];

534 
vpdSãp
 = (
öt16_t
)(
vpdTabÀI
[
i
][
sizeCuºVpdTabÀ
 - 1] -

535 
vpdTabÀI
[
i
][
sizeCuºVpdTabÀ
 - 2]);

536 
vpdSãp
 = (
öt16_t
)((vpdStep < 1) ? 1 : vpdStep);

538 i‡(
tgtIndex
 >
maxIndex
) {

539 (
ss
 <
tgtIndex
) &&

540 (
k
 < (
AR5416_NUM_PDADC_VALUES
 - 1))) {

541 
tmpVÆ
 = (
öt16_t
)((
vpdTabÀI
[
i
][
sizeCuºVpdTabÀ
 - 1] +

542 (
ss
 - 
maxIndex
 + 1Ë* 
vpdSãp
));

543 
pPDADCVÆues
[
k
++] = (
u8
)((
tmpVÆ
 > 255) ?

544 255 : 
tmpVÆ
);

545 
ss
++;

550 i‡(
ì¥om_4k
)

551 
pdgaö_bound¨y_deÁu…
 = 58;

553 
pdgaö_bound¨y_deÁu…
 = 
pPdGaöBound¨õs
[
i
 - 1];

555 
i
 < 
AR5416_PD_GAINS_IN_MASK
) {

556 
pPdGaöBound¨õs
[
i
] = 
pdgaö_bound¨y_deÁu…
;

557 
i
++;

560 
k
 < 
AR5416_NUM_PDADC_VALUES
) {

561 
pPDADCVÆues
[
k
] =ÖPDADCValues[k - 1];

562 
k
++;

564 
	}
}

566 
	$©h9k_hw_ì¥om_öô
(
©h_hw
 *
ah
)

568 
°©us
;

570 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
))

571 
ah
->
ìp_›s
 = &
ìp_¨9300_›s
;

572 i‡(
	`AR_SREV_9287
(
ah
)) {

573 
ah
->
ìp_›s
 = &
ìp_¨9287_›s
;

574 } i‡(
	`AR_SREV_9285
(
ah
Ë|| 
	`AR_SREV_9271
(ah)) {

575 
ah
->
ìp_›s
 = &
ìp_4k_›s
;

577 
ah
->
ìp_›s
 = &
ìp_def_›s
;

580 i‡(!
ah
->
ìp_›s
->
	`fûl_ì¥om
(ah))

581  -
EIO
;

583 
°©us
 = 
ah
->
ìp_›s
->
	`check_ì¥om
(ah);

585  
°©us
;

586 
	}
}

	@eeprom.h

17 #i‚de‡
EEPROM_H


18 
	#EEPROM_H


	)

20 
	#AR_EEPROM_MODAL_SPURS
 5

	)

22 
	~"../©h.h
"

23 
	~<√t/cfg80211.h
>

24 
	~"¨9003_ì¥om.h
"

26 #ifde‡
__BIG_ENDIAN


27 
	#AR5416_EEPROM_MAGIC
 0x5Ø5

	)

29 
	#AR5416_EEPROM_MAGIC
 0xa55a

	)

32 
	#CTRY_DEBUG
 0x1ff

	)

33 
	#CTRY_DEFAULT
 0

	)

35 
	#AR_EEPROM_EEPCAP_COMPRESS_DIS
 0x0001

	)

36 
	#AR_EEPROM_EEPCAP_AES_DIS
 0x0002

	)

37 
	#AR_EEPROM_EEPCAP_FASTFRAME_DIS
 0x0004

	)

38 
	#AR_EEPROM_EEPCAP_BURST_DIS
 0x0008

	)

39 
	#AR_EEPROM_EEPCAP_MAXQCU
 0x01F0

	)

40 
	#AR_EEPROM_EEPCAP_MAXQCU_S
 4

	)

41 
	#AR_EEPROM_EEPCAP_HEAVY_CLIP_EN
 0x0200

	)

42 
	#AR_EEPROM_EEPCAP_KC_ENTRIES
 0xF000

	)

43 
	#AR_EEPROM_EEPCAP_KC_ENTRIES_S
 12

	)

45 
	#AR_EEPROM_EEREGCAP_EN_FCC_MIDBAND
 0x0040

	)

46 
	#AR_EEPROM_EEREGCAP_EN_KK_U1_EVEN
 0x0080

	)

47 
	#AR_EEPROM_EEREGCAP_EN_KK_U2
 0x0100

	)

48 
	#AR_EEPROM_EEREGCAP_EN_KK_MIDBAND
 0x0200

	)

49 
	#AR_EEPROM_EEREGCAP_EN_KK_U1_ODD
 0x0400

	)

50 
	#AR_EEPROM_EEREGCAP_EN_KK_NEW_11A
 0x0800

	)

52 
	#AR_EEPROM_EEREGCAP_EN_KK_U1_ODD_PRE4_0
 0x4000

	)

53 
	#AR_EEPROM_EEREGCAP_EN_KK_NEW_11A_PRE4_0
 0x8000

	)

55 
	#AR5416_EEPROM_MAGIC_OFFSET
 0x0

	)

56 
	#AR5416_EEPROM_S
 2

	)

57 
	#AR5416_EEPROM_OFFSET
 0x2000

	)

58 
	#AR5416_EEPROM_MAX
 0x´0

	)

60 
	#AR5416_EEPROM_START_ADDR
 \

61 (
	`AR_SREV_9100
(
ah
)Ë? 0x1fff1000 : 0x503f1200

	)

63 
	#SD_NO_CTL
 0xE0

	)

64 
	#NO_CTL
 0xff

	)

65 
	#CTL_MODE_M
 0xf

	)

66 
	#CTL_11A
 0

	)

67 
	#CTL_11B
 1

	)

68 
	#CTL_11G
 2

	)

69 
	#CTL_2GHT20
 5

	)

70 
	#CTL_5GHT20
 6

	)

71 
	#CTL_2GHT40
 7

	)

72 
	#CTL_5GHT40
 8

	)

74 
	#EXT_ADDITIVE
 (0x8000)

	)

75 
	#CTL_11A_EXT
 (
CTL_11A
 | 
EXT_ADDITIVE
)

	)

76 
	#CTL_11G_EXT
 (
CTL_11G
 | 
EXT_ADDITIVE
)

	)

77 
	#CTL_11B_EXT
 (
CTL_11B
 | 
EXT_ADDITIVE
)

	)

79 
	#SUB_NUM_CTL_MODES_AT_5G_40
 2

	)

80 
	#SUB_NUM_CTL_MODES_AT_2G_40
 3

	)

82 
	#POWER_CORRECTION_FOR_TWO_CHAIN
 6

	)

83 
	#POWER_CORRECTION_FOR_THREE_CHAIN
 10

	)

95 
	#AR9285_RDEXT_DEFAULT
 0x1F

	)

97 
	#ATH9K_POW_SM
(
_r
, 
_s
Ë(((_rË& 0x3fË<< (_s))

	)

98 
	#FREQ2FBIN
(
x
, 
y
Ë((yË? ((xË- 2300Ë: (((xË- 4800Ë/ 5))

	)

99 
	#FBIN2FREQ
(
x
, 
y
Ë((yË? (2300 + xË: (4800 + 5 * x))

	)

100 
	#©h9k_hw_u£_Êash
(
_ah
Ë(!(_ah->
ah_Êags
 & 
AH_USE_EEPROM
))

	)

102 
	#AR5416_VER_MASK
 (
ìp
->
ba£EïHódî
.
vîsi⁄
 & 
AR5416_EEP_VER_MINOR_MASK
)

	)

103 
	#OLC_FOR_AR9280_20_LATER
 (
	`AR_SREV_9280_20_OR_LATER
(
ah
) && \

104 
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_OL_PWRCTRL
))

	)

105 
	#OLC_FOR_AR9287_10_LATER
 (
	`AR_SREV_9287_11_OR_LATER
(
ah
) && \

106 
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_OL_PWRCTRL
))

	)

108 
	#EEP_RFSILENT_ENABLED
 0x0001

	)

109 
	#EEP_RFSILENT_ENABLED_S
 0

	)

110 
	#EEP_RFSILENT_POLARITY
 0x0002

	)

111 
	#EEP_RFSILENT_POLARITY_S
 1

	)

112 
	#EEP_RFSILENT_GPIO_SEL
 ((
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9565
◊h)Ë? 0x00f¯: 0x001c)

	)

113 
	#EEP_RFSILENT_GPIO_SEL_S
 2

	)

115 
	#AR5416_OPFLAGS_11A
 0x01

	)

116 
	#AR5416_OPFLAGS_11G
 0x02

	)

117 
	#AR5416_OPFLAGS_N_5G_HT40
 0x04

	)

118 
	#AR5416_OPFLAGS_N_2G_HT40
 0x08

	)

119 
	#AR5416_OPFLAGS_N_5G_HT20
 0x10

	)

120 
	#AR5416_OPFLAGS_N_2G_HT20
 0x20

	)

122 
	#AR5416_EEP_NO_BACK_VER
 0x1

	)

123 
	#AR5416_EEP_VER
 0xE

	)

124 
	#AR5416_EEP_VER_MINOR_MASK
 0x0FFF

	)

125 
	#AR5416_EEP_MINOR_VER_2
 0x2

	)

126 
	#AR5416_EEP_MINOR_VER_3
 0x3

	)

127 
	#AR5416_EEP_MINOR_VER_7
 0x7

	)

128 
	#AR5416_EEP_MINOR_VER_9
 0x9

	)

129 
	#AR5416_EEP_MINOR_VER_16
 0x10

	)

130 
	#AR5416_EEP_MINOR_VER_17
 0x11

	)

131 
	#AR5416_EEP_MINOR_VER_19
 0x13

	)

132 
	#AR5416_EEP_MINOR_VER_20
 0x14

	)

133 
	#AR5416_EEP_MINOR_VER_21
 0x15

	)

134 
	#AR5416_EEP_MINOR_VER_22
 0x16

	)

136 
	#AR5416_NUM_5G_CAL_PIERS
 8

	)

137 
	#AR5416_NUM_2G_CAL_PIERS
 4

	)

138 
	#AR5416_NUM_5G_20_TARGET_POWERS
 8

	)

139 
	#AR5416_NUM_5G_40_TARGET_POWERS
 8

	)

140 
	#AR5416_NUM_2G_CCK_TARGET_POWERS
 3

	)

141 
	#AR5416_NUM_2G_20_TARGET_POWERS
 4

	)

142 
	#AR5416_NUM_2G_40_TARGET_POWERS
 4

	)

143 
	#AR5416_NUM_CTLS
 24

	)

144 
	#AR5416_NUM_BAND_EDGES
 8

	)

145 
	#AR5416_NUM_PD_GAINS
 4

	)

146 
	#AR5416_PD_GAINS_IN_MASK
 4

	)

147 
	#AR5416_PD_GAIN_ICEPTS
 5

	)

148 
	#AR5416_NUM_PDADC_VALUES
 128

	)

149 
	#AR5416_BCHAN_UNUSED
 0xFF

	)

150 
	#AR5416_MAX_PWR_RANGE_IN_HALF_DB
 64

	)

151 
	#AR5416_MAX_CHAINS
 3

	)

152 
	#AR9300_MAX_CHAINS
 3

	)

153 
	#AR5416_PWR_TABLE_OFFSET_DB
 -5

	)

156 
	#AR5416_EEP_RXGAIN_23DB_BACKOFF
 0

	)

157 
	#AR5416_EEP_RXGAIN_13DB_BACKOFF
 1

	)

158 
	#AR5416_EEP_RXGAIN_ORIG
 2

	)

161 
	#AR5416_EEP_TXGAIN_ORIGINAL
 0

	)

162 
	#AR5416_EEP_TXGAIN_HIGH_POWER
 1

	)

164 
	#AR5416_EEP4K_START_LOC
 64

	)

165 
	#AR5416_EEP4K_NUM_2G_CAL_PIERS
 3

	)

166 
	#AR5416_EEP4K_NUM_2G_CCK_TARGET_POWERS
 3

	)

167 
	#AR5416_EEP4K_NUM_2G_20_TARGET_POWERS
 3

	)

168 
	#AR5416_EEP4K_NUM_2G_40_TARGET_POWERS
 3

	)

169 
	#AR5416_EEP4K_NUM_CTLS
 12

	)

170 
	#AR5416_EEP4K_NUM_BAND_EDGES
 4

	)

171 
	#AR5416_EEP4K_NUM_PD_GAINS
 2

	)

172 
	#AR5416_EEP4K_MAX_CHAINS
 1

	)

174 
	#AR9280_TX_GAIN_TABLE_SIZE
 22

	)

176 
	#AR9287_EEP_VER
 0xE

	)

177 
	#AR9287_EEP_VER_MINOR_MASK
 0xFFF

	)

178 
	#AR9287_EEP_MINOR_VER_1
 0x1

	)

179 
	#AR9287_EEP_MINOR_VER_2
 0x2

	)

180 
	#AR9287_EEP_MINOR_VER_3
 0x3

	)

181 
	#AR9287_EEP_MINOR_VER
 
AR9287_EEP_MINOR_VER_3


	)

182 
	#AR9287_EEP_MINOR_VER_b
 
AR9287_EEP_MINOR_VER


	)

183 
	#AR9287_EEP_NO_BACK_VER
 
AR9287_EEP_MINOR_VER_1


	)

185 
	#AR9287_EEP_START_LOC
 128

	)

186 
	#AR9287_HTC_EEP_START_LOC
 256

	)

187 
	#AR9287_NUM_2G_CAL_PIERS
 3

	)

188 
	#AR9287_NUM_2G_CCK_TARGET_POWERS
 3

	)

189 
	#AR9287_NUM_2G_20_TARGET_POWERS
 3

	)

190 
	#AR9287_NUM_2G_40_TARGET_POWERS
 3

	)

191 
	#AR9287_NUM_CTLS
 12

	)

192 
	#AR9287_NUM_BAND_EDGES
 4

	)

193 
	#AR9287_PD_GAIN_ICEPTS
 1

	)

194 
	#AR9287_EEPMISC_BIG_ENDIAN
 0x01

	)

195 
	#AR9287_EEPMISC_WOW
 0x02

	)

196 
	#AR9287_MAX_CHAINS
 2

	)

197 
	#AR9287_ANT_16S
 32

	)

199 
	#AR9287_DATA_SZ
 32

	)

201 
	#AR9287_PWR_TABLE_OFFSET_DB
 -5

	)

203 
	#AR9287_CHECKSUM_LOCATION
 (
AR9287_EEP_START_LOC
 + 1)

	)

205 
	#CTL_EDGE_TPOWER
(
_˘l
Ë((_˘lË& 0x3f)

	)

206 
	#CTL_EDGE_FLAGS
(
_˘l
Ë(((_˘lË>> 6Ë& 0x03)

	)

208 
	#LNA_CTL_BUF_MODE
 
	`BIT
(0)

	)

209 
	#LNA_CTL_ISEL_LO
 
	`BIT
(1)

	)

210 
	#LNA_CTL_ISEL_HI
 
	`BIT
(2)

	)

211 
	#LNA_CTL_BUF_IN
 
	`BIT
(3)

	)

212 
	#LNA_CTL_FEM_BAND
 
	`BIT
(4)

	)

213 
	#LNA_CTL_LOCAL_BIAS
 
	`BIT
(5)

	)

214 
	#LNA_CTL_FORCE_XPA
 
	`BIT
(6)

	)

215 
	#LNA_CTL_USE_ANT1
 
	`BIT
(7)

	)

217 
	eì¥om_∑øm
 {

218 
	mEEP_NFTHRESH_5
,

219 
	mEEP_NFTHRESH_2
,

220 
	mEEP_MAC_MSW
,

221 
	mEEP_MAC_MID
,

222 
	mEEP_MAC_LSW
,

223 
	mEEP_REG_0
,

224 
	mEEP_OP_CAP
,

225 
	mEEP_OP_MODE
,

226 
	mEEP_RF_SILENT
,

227 
	mEEP_OB_5
,

228 
	mEEP_DB_5
,

229 
	mEEP_OB_2
,

230 
	mEEP_DB_2
,

231 
	mEEP_MINOR_REV
,

232 
	mEEP_TX_MASK
,

233 
	mEEP_RX_MASK
,

234 
	mEEP_FSTCLK_5G
,

235 
	mEEP_RXGAIN_TYPE
,

236 
	mEEP_OL_PWRCTRL
,

237 
	mEEP_TXGAIN_TYPE
,

238 
	mEEP_RC_CHAIN_MASK
,

239 
	mEEP_DAC_HPWR_5G
,

240 
	mEEP_FRAC_N_5G
,

241 
	mEEP_DEV_TYPE
,

242 
	mEEP_TEMPSENSE_SLOPE
,

243 
	mEEP_TEMPSENSE_SLOPE_PAL_ON
,

244 
	mEEP_PWR_TABLE_OFFSET
,

245 
	mEEP_PAPRD
,

246 
	mEEP_MODAL_VER
,

247 
	mEEP_ANT_DIV_CTL1
,

248 
	mEEP_CHAIN_MASK_REDUCE
,

249 
	mEEP_ANTENNA_GAIN_2G
,

250 
	mEEP_ANTENNA_GAIN_5G
,

253 
	e¨5416_øãs
 {

254 
	møã6mb
, 
	møã9mb
, 
	møã12mb
, 
	møã18mb
,

255 
	møã24mb
, 
	møã36mb
, 
	møã48mb
, 
	møã54mb
,

256 
	møã1l
, 
	møã2l
, 
	møã2s
, 
	møã5_5l
,

257 
	møã5_5s
, 
	møã11l
, 
	møã11s
, 
	møãXr
,

258 
	møãHt20_0
, 
	møãHt20_1
, 
	møãHt20_2
, 
	møãHt20_3
,

259 
	møãHt20_4
, 
	møãHt20_5
, 
	møãHt20_6
, 
	møãHt20_7
,

260 
	møãHt40_0
, 
	møãHt40_1
, 
	møãHt40_2
, 
	møãHt40_3
,

261 
	møãHt40_4
, 
	møãHt40_5
, 
	møãHt40_6
, 
	møãHt40_7
,

262 
	møãDupCck
, 
	møãDupOfdm
, 
	møãExtCck
, 
	møãExtOfdm
,

263 
	mAr5416R©eSize


266 
	e©h9k_hÆ_‰eq_b™d
 {

267 
	mATH9K_HAL_FREQ_BAND_5GHZ
 = 0,

268 
	mATH9K_HAL_FREQ_BAND_2GHZ
 = 1

271 
	sba£_ìp_hódî
 {

272 
u16
 
	mÀngth
;

273 
u16
 
	mchecksum
;

274 
u16
 
	mvîsi⁄
;

275 
u8
 
	m›C≠Fœgs
;

276 
u8
 
	mìpMisc
;

277 
u16
 
	mªgDmn
[2];

278 
u8
 
	mmacAddr
[6];

279 
u8
 
	mrxMask
;

280 
u8
 
	mtxMask
;

281 
u16
 
	mrfSûít
;

282 
u16
 
	mblueToŸhO±i⁄s
;

283 
u16
 
	mdevi˚C≠
;

284 
u32
 
	mböBuûdNumbî
;

285 
u8
 
	mdevi˚Ty≥
;

286 
u8
 
	mpwd˛köd
;

287 
u8
 
	mÁ°Clk5g
;

288 
u8
 
	mdivChaö
;

289 
u8
 
	mrxGaöTy≥
;

290 
u8
 
	mdacHiPwrMode_5G
;

291 
u8
 
	m›íLo›PwrC¡l
;

292 
u8
 
	mdacLpMode
;

293 
u8
 
	mtxGaöTy≥
;

294 
u8
 
	mrcChaöMask
;

295 
u8
 
	mdesúedSˇÀCCK
;

296 
u8
 
	mpwr_èbÀ_off£t
;

297 
u8
 
	m‰ac_n_5g
;

298 
u8
 
	mfutuªBa£_3
[21];

299 } 
	g__∑cked
;

301 
	sba£_ìp_hódî_4k
 {

302 
u16
 
	mÀngth
;

303 
u16
 
	mchecksum
;

304 
u16
 
	mvîsi⁄
;

305 
u8
 
	m›C≠Fœgs
;

306 
u8
 
	mìpMisc
;

307 
u16
 
	mªgDmn
[2];

308 
u8
 
	mmacAddr
[6];

309 
u8
 
	mrxMask
;

310 
u8
 
	mtxMask
;

311 
u16
 
	mrfSûít
;

312 
u16
 
	mblueToŸhO±i⁄s
;

313 
u16
 
	mdevi˚C≠
;

314 
u32
 
	mböBuûdNumbî
;

315 
u8
 
	mdevi˚Ty≥
;

316 
u8
 
	mtxGaöTy≥
;

317 } 
	g__∑cked
;

320 
	s•ur_ch™
 {

321 
u16
 
	m•urCh™
;

322 
u8
 
	m•urR™geLow
;

323 
u8
 
	m•urR™geHigh
;

324 } 
	g__∑cked
;

326 
	smodÆ_ìp_hódî
 {

327 
u32
 
	m™tCålChaö
[
AR5416_MAX_CHAINS
];

328 
u32
 
	m™tCålComm⁄
;

329 
u8
 
	m™ã¬aGaöCh
[
AR5416_MAX_CHAINS
];

330 
u8
 
	mswôchSëéög
;

331 
u8
 
	mtxRxAâíCh
[
AR5416_MAX_CHAINS
];

332 
u8
 
	mrxTxM¨göCh
[
AR5416_MAX_CHAINS
];

333 
u8
 
	madcDesúedSize
;

334 
u8
 
	mpgaDesúedSize
;

335 
u8
 
	mx aGaöCh
[
AR5416_MAX_CHAINS
];

336 
u8
 
	mtxEndToX∑Off
;

337 
u8
 
	mtxEndToRxOn
;

338 
u8
 
	mtxFømeToX∑On
;

339 
u8
 
	mthªsh62
;

340 
u8
 
	mnoi£Flo‹ThªshCh
[
AR5416_MAX_CHAINS
];

341 
u8
 
	mxpdGaö
;

342 
u8
 
	mxpd
;

343 
u8
 
	miqCÆICh
[
AR5416_MAX_CHAINS
];

344 
u8
 
	miqCÆQCh
[
AR5416_MAX_CHAINS
];

345 
u8
 
	mpdGaöOvîœp
;

346 
u8
 
	mob
;

347 
u8
 
	mdb
;

348 
u8
 
	mx∑BüsLvl
;

349 
u8
 
	mpwrDe¸ó£F‹2Chaö
;

350 
u8
 
	mpwrDe¸ó£F‹3Chaö
;

351 
u8
 
	mtxFømeToD©aSèπ
;

352 
u8
 
	mtxFømeToPaOn
;

353 
u8
 
	mht40PowîIncF‹Pdadc
;

354 
u8
 
	mbswAâí
[
AR5416_MAX_CHAINS
];

355 
u8
 
	mbswM¨gö
[
AR5416_MAX_CHAINS
];

356 
u8
 
	mswSëéeHt40
;

357 
u8
 
	mx©ãn2Db
[
AR5416_MAX_CHAINS
];

358 
u8
 
	mx©ãn2M¨gö
[
AR5416_MAX_CHAINS
];

359 
u8
 
	mob_ch1
;

360 
u8
 
	mdb_ch1
;

361 
u8
 
	m a_˘l
;

362 
u8
 
	mmiscBôs
;

363 
u16
 
	mx∑BüsLvlFªq
[3];

364 
u8
 
	mfutuªModÆ
[6];

366 
•ur_ch™
 
	m•urCh™s
[
AR_EEPROM_MODAL_SPURS
];

367 } 
	g__∑cked
;

369 
	sˇlD©aPîFªqOpLo›
 {

370 
u8
 
	mpwrPdg
[2][5];

371 
u8
 
	mvpdPdg
[2][5];

372 
u8
 
	mpcdac
[2][5];

373 
u8
 
	mem±y
[2][5];

374 } 
	g__∑cked
;

376 
	smodÆ_ìp_4k_hódî
 {

377 
u32
 
	m™tCålChaö
[
AR5416_EEP4K_MAX_CHAINS
];

378 
u32
 
	m™tCålComm⁄
;

379 
u8
 
	m™ã¬aGaöCh
[
AR5416_EEP4K_MAX_CHAINS
];

380 
u8
 
	mswôchSëéög
;

381 
u8
 
	mtxRxAâíCh
[
AR5416_EEP4K_MAX_CHAINS
];

382 
u8
 
	mrxTxM¨göCh
[
AR5416_EEP4K_MAX_CHAINS
];

383 
u8
 
	madcDesúedSize
;

384 
u8
 
	mpgaDesúedSize
;

385 
u8
 
	mx aGaöCh
[
AR5416_EEP4K_MAX_CHAINS
];

386 
u8
 
	mtxEndToX∑Off
;

387 
u8
 
	mtxEndToRxOn
;

388 
u8
 
	mtxFømeToX∑On
;

389 
u8
 
	mthªsh62
;

390 
u8
 
	mnoi£Flo‹ThªshCh
[
AR5416_EEP4K_MAX_CHAINS
];

391 
u8
 
	mxpdGaö
;

392 
u8
 
	mxpd
;

393 
u8
 
	miqCÆICh
[
AR5416_EEP4K_MAX_CHAINS
];

394 
u8
 
	miqCÆQCh
[
AR5416_EEP4K_MAX_CHAINS
];

395 
u8
 
	mpdGaöOvîœp
;

396 #ifde‡
__BIG_ENDIAN_BITFIELD


397 
u8
 
	mob_1
:4, 
	mob_0
:4;

398 
u8
 
	mdb1_1
:4, 
	mdb1_0
:4;

400 
u8
 
	mob_0
:4, 
	mob_1
:4;

401 
u8
 
	mdb1_0
:4, 
	mdb1_1
:4;

403 
u8
 
	mx∑BüsLvl
;

404 
u8
 
	mtxFømeToD©aSèπ
;

405 
u8
 
	mtxFømeToPaOn
;

406 
u8
 
	mht40PowîIncF‹Pdadc
;

407 
u8
 
	mbswAâí
[
AR5416_EEP4K_MAX_CHAINS
];

408 
u8
 
	mbswM¨gö
[
AR5416_EEP4K_MAX_CHAINS
];

409 
u8
 
	mswSëéeHt40
;

410 
u8
 
	mx©ãn2Db
[
AR5416_EEP4K_MAX_CHAINS
];

411 
u8
 
	mx©ãn2M¨gö
[
AR5416_EEP4K_MAX_CHAINS
];

412 #ifde‡
__BIG_ENDIAN_BITFIELD


413 
u8
 
	mdb2_1
:4, 
	mdb2_0
:4;

415 
u8
 
	mdb2_0
:4, 
	mdb2_1
:4;

417 
u8
 
	mvîsi⁄
;

418 #ifde‡
__BIG_ENDIAN_BITFIELD


419 
u8
 
	mob_3
:4, 
	mob_2
:4;

420 
u8
 
	m™tdiv_˘l1
:4, 
	mob_4
:4;

421 
u8
 
	mdb1_3
:4, 
	mdb1_2
:4;

422 
u8
 
	m™tdiv_˘l2
:4, 
	mdb1_4
:4;

423 
u8
 
	mdb2_2
:4, 
	mdb2_3
:4;

424 
u8
 
	mª£rved
:4, 
	mdb2_4
:4;

426 
u8
 
	mob_2
:4, 
	mob_3
:4;

427 
u8
 
	mob_4
:4, 
	m™tdiv_˘l1
:4;

428 
u8
 
	mdb1_2
:4, 
	mdb1_3
:4;

429 
u8
 
	mdb1_4
:4, 
	m™tdiv_˘l2
:4;

430 
u8
 
	mdb2_2
:4, 
	mdb2_3
:4;

431 
u8
 
	mdb2_4
:4, 
	mª£rved
:4;

433 
u8
 
	mtx_divîsôy
;

434 
u8
 
	mÊc_pwr_thªsh
;

435 
u8
 
	mbb_sˇÀ_smπ_™ã¬a
;

436 
	#EEP_4K_BB_DESIRED_SCALE_MASK
 0x1f

	)

437 
u8
 
	mfutuªModÆ
[1];

438 
•ur_ch™
 
	m•urCh™s
[
AR_EEPROM_MODAL_SPURS
];

439 } 
	g__∑cked
;

441 
	sba£_ìp_¨9287_hódî
 {

442 
u16
 
	mÀngth
;

443 
u16
 
	mchecksum
;

444 
u16
 
	mvîsi⁄
;

445 
u8
 
	m›C≠Fœgs
;

446 
u8
 
	mìpMisc
;

447 
u16
 
	mªgDmn
[2];

448 
u8
 
	mmacAddr
[6];

449 
u8
 
	mrxMask
;

450 
u8
 
	mtxMask
;

451 
u16
 
	mrfSûít
;

452 
u16
 
	mblueToŸhO±i⁄s
;

453 
u16
 
	mdevi˚C≠
;

454 
u32
 
	mböBuûdNumbî
;

455 
u8
 
	mdevi˚Ty≥
;

456 
u8
 
	m›íLo›PwrC¡l
;

457 
öt8_t
 
	mpwrTabÀOff£t
;

458 
öt8_t
 
	mãmpSísSl›e
;

459 
öt8_t
 
	mãmpSísSl›ePÆOn
;

460 
u8
 
	mfutuªBa£
[29];

461 } 
	g__∑cked
;

463 
	smodÆ_ìp_¨9287_hódî
 {

464 
u32
 
	m™tCålChaö
[
AR9287_MAX_CHAINS
];

465 
u32
 
	m™tCålComm⁄
;

466 
öt8_t
 
	m™ã¬aGaöCh
[
AR9287_MAX_CHAINS
];

467 
u8
 
	mswôchSëéög
;

468 
u8
 
	mtxRxAâíCh
[
AR9287_MAX_CHAINS
];

469 
u8
 
	mrxTxM¨göCh
[
AR9287_MAX_CHAINS
];

470 
öt8_t
 
	madcDesúedSize
;

471 
u8
 
	mtxEndToX∑Off
;

472 
u8
 
	mtxEndToRxOn
;

473 
u8
 
	mtxFømeToX∑On
;

474 
u8
 
	mthªsh62
;

475 
öt8_t
 
	mnoi£Flo‹ThªshCh
[
AR9287_MAX_CHAINS
];

476 
u8
 
	mxpdGaö
;

477 
u8
 
	mxpd
;

478 
öt8_t
 
	miqCÆICh
[
AR9287_MAX_CHAINS
];

479 
öt8_t
 
	miqCÆQCh
[
AR9287_MAX_CHAINS
];

480 
u8
 
	mpdGaöOvîœp
;

481 
u8
 
	mx∑BüsLvl
;

482 
u8
 
	mtxFømeToD©aSèπ
;

483 
u8
 
	mtxFømeToPaOn
;

484 
u8
 
	mht40PowîIncF‹Pdadc
;

485 
u8
 
	mbswAâí
[
AR9287_MAX_CHAINS
];

486 
u8
 
	mbswM¨gö
[
AR9287_MAX_CHAINS
];

487 
u8
 
	mswSëéeHt40
;

488 
u8
 
	mvîsi⁄
;

489 
u8
 
	mdb1
;

490 
u8
 
	mdb2
;

491 
u8
 
	mob_cck
;

492 
u8
 
	mob_psk
;

493 
u8
 
	mob_qam
;

494 
u8
 
	mob_∑l_off
;

495 
u8
 
	mfutuªModÆ
[30];

496 
•ur_ch™
 
	m•urCh™s
[
AR_EEPROM_MODAL_SPURS
];

497 } 
	g__∑cked
;

499 
	sˇl_d©a_≥r_‰eq
 {

500 
u8
 
	mpwrPdg
[
AR5416_NUM_PD_GAINS
][
AR5416_PD_GAIN_ICEPTS
];

501 
u8
 
	mvpdPdg
[
AR5416_NUM_PD_GAINS
][
AR5416_PD_GAIN_ICEPTS
];

502 } 
	g__∑cked
;

504 
	sˇl_d©a_≥r_‰eq_4k
 {

505 
u8
 
	mpwrPdg
[
AR5416_EEP4K_NUM_PD_GAINS
][
AR5416_PD_GAIN_ICEPTS
];

506 
u8
 
	mvpdPdg
[
AR5416_EEP4K_NUM_PD_GAINS
][
AR5416_PD_GAIN_ICEPTS
];

507 } 
	g__∑cked
;

509 
	sˇl_èrgë_powî_Àg
 {

510 
u8
 
	mbCh™√l
;

511 
u8
 
	mtPow2x
[4];

512 } 
	g__∑cked
;

514 
	sˇl_èrgë_powî_ht
 {

515 
u8
 
	mbCh™√l
;

516 
u8
 
	mtPow2x
[8];

517 } 
	g__∑cked
;

519 
	sˇl_˘l_edges
 {

520 
u8
 
	mbCh™√l
;

521 
u8
 
	m˘l
;

522 } 
	g__∑cked
;

524 
	sˇl_d©a_›_lo›_¨9287
 {

525 
u8
 
	mpwrPdg
[2][5];

526 
u8
 
	mvpdPdg
[2][5];

527 
u8
 
	mpcdac
[2][5];

528 
u8
 
	mem±y
[2][5];

529 } 
	g__∑cked
;

531 
	sˇl_d©a_≥r_‰eq_¨9287
 {

532 
u8
 
	mpwrPdg
[
AR5416_NUM_PD_GAINS
][
AR9287_PD_GAIN_ICEPTS
];

533 
u8
 
	mvpdPdg
[
AR5416_NUM_PD_GAINS
][
AR9287_PD_GAIN_ICEPTS
];

534 } 
	g__∑cked
;

536 
	uˇl_d©a_≥r_‰eq_¨9287_u
 {

537 
ˇl_d©a_›_lo›_¨9287
 
	mˇlD©aO≥n
;

538 
ˇl_d©a_≥r_‰eq_¨9287
 
	mˇlD©aClo£
;

539 } 
	g__∑cked
;

541 
	sˇl_˘l_d©a_¨9287
 {

542 
ˇl_˘l_edges


543 
	m˘lEdges
[
AR9287_MAX_CHAINS
][
AR9287_NUM_BAND_EDGES
];

544 } 
	g__∑cked
;

546 
	sˇl_˘l_d©a
 {

547 
ˇl_˘l_edges


548 
	m˘lEdges
[
AR5416_MAX_CHAINS
][
AR5416_NUM_BAND_EDGES
];

549 } 
	g__∑cked
;

551 
	sˇl_˘l_d©a_4k
 {

552 
ˇl_˘l_edges


553 
	m˘lEdges
[
AR5416_EEP4K_MAX_CHAINS
][
AR5416_EEP4K_NUM_BAND_EDGES
];

554 } 
	g__∑cked
;

556 
	s¨5416_ì¥om_def
 {

557 
ba£_ìp_hódî
 
	mba£EïHódî
;

558 
u8
 
	mcu°D©a
[64];

559 
modÆ_ìp_hódî
 
	mmodÆHódî
[2];

560 
u8
 
	mˇlFªqPõr5G
[
AR5416_NUM_5G_CAL_PIERS
];

561 
u8
 
	mˇlFªqPõr2G
[
AR5416_NUM_2G_CAL_PIERS
];

562 
ˇl_d©a_≥r_‰eq


563 
	mˇlPõrD©a5G
[
AR5416_MAX_CHAINS
][
AR5416_NUM_5G_CAL_PIERS
];

564 
ˇl_d©a_≥r_‰eq


565 
	mˇlPõrD©a2G
[
AR5416_MAX_CHAINS
][
AR5416_NUM_2G_CAL_PIERS
];

566 
ˇl_èrgë_powî_Àg


567 
	mˇlT¨gëPowî5G
[
AR5416_NUM_5G_20_TARGET_POWERS
];

568 
ˇl_èrgë_powî_ht


569 
	mˇlT¨gëPowî5GHT20
[
AR5416_NUM_5G_20_TARGET_POWERS
];

570 
ˇl_èrgë_powî_ht


571 
	mˇlT¨gëPowî5GHT40
[
AR5416_NUM_5G_40_TARGET_POWERS
];

572 
ˇl_èrgë_powî_Àg


573 
	mˇlT¨gëPowîCck
[
AR5416_NUM_2G_CCK_TARGET_POWERS
];

574 
ˇl_èrgë_powî_Àg


575 
	mˇlT¨gëPowî2G
[
AR5416_NUM_2G_20_TARGET_POWERS
];

576 
ˇl_èrgë_powî_ht


577 
	mˇlT¨gëPowî2GHT20
[
AR5416_NUM_2G_20_TARGET_POWERS
];

578 
ˇl_èrgë_powî_ht


579 
	mˇlT¨gëPowî2GHT40
[
AR5416_NUM_2G_40_TARGET_POWERS
];

580 
u8
 
	m˘lIndex
[
AR5416_NUM_CTLS
];

581 
ˇl_˘l_d©a
 
	m˘lD©a
[
AR5416_NUM_CTLS
];

582 
u8
 
	m∑ddög
;

583 } 
	g__∑cked
;

585 
	s¨5416_ì¥om_4k
 {

586 
ba£_ìp_hódî_4k
 
	mba£EïHódî
;

587 
u8
 
	mcu°D©a
[20];

588 
modÆ_ìp_4k_hódî
 
	mmodÆHódî
;

589 
u8
 
	mˇlFªqPõr2G
[
AR5416_EEP4K_NUM_2G_CAL_PIERS
];

590 
ˇl_d©a_≥r_‰eq_4k


591 
	mˇlPõrD©a2G
[
AR5416_EEP4K_MAX_CHAINS
][
AR5416_EEP4K_NUM_2G_CAL_PIERS
];

592 
ˇl_èrgë_powî_Àg


593 
	mˇlT¨gëPowîCck
[
AR5416_EEP4K_NUM_2G_CCK_TARGET_POWERS
];

594 
ˇl_èrgë_powî_Àg


595 
	mˇlT¨gëPowî2G
[
AR5416_EEP4K_NUM_2G_20_TARGET_POWERS
];

596 
ˇl_èrgë_powî_ht


597 
	mˇlT¨gëPowî2GHT20
[
AR5416_EEP4K_NUM_2G_20_TARGET_POWERS
];

598 
ˇl_èrgë_powî_ht


599 
	mˇlT¨gëPowî2GHT40
[
AR5416_EEP4K_NUM_2G_40_TARGET_POWERS
];

600 
u8
 
	m˘lIndex
[
AR5416_EEP4K_NUM_CTLS
];

601 
ˇl_˘l_d©a_4k
 
	m˘lD©a
[
AR5416_EEP4K_NUM_CTLS
];

602 
u8
 
	m∑ddög
;

603 } 
	g__∑cked
;

605 
	s¨9287_ì¥om
 {

606 
ba£_ìp_¨9287_hódî
 
	mba£EïHódî
;

607 
u8
 
	mcu°D©a
[
AR9287_DATA_SZ
];

608 
modÆ_ìp_¨9287_hódî
 
	mmodÆHódî
;

609 
u8
 
	mˇlFªqPõr2G
[
AR9287_NUM_2G_CAL_PIERS
];

610 
ˇl_d©a_≥r_‰eq_¨9287_u


611 
	mˇlPõrD©a2G
[
AR9287_MAX_CHAINS
][
AR9287_NUM_2G_CAL_PIERS
];

612 
ˇl_èrgë_powî_Àg


613 
	mˇlT¨gëPowîCck
[
AR9287_NUM_2G_CCK_TARGET_POWERS
];

614 
ˇl_èrgë_powî_Àg


615 
	mˇlT¨gëPowî2G
[
AR9287_NUM_2G_20_TARGET_POWERS
];

616 
ˇl_èrgë_powî_ht


617 
	mˇlT¨gëPowî2GHT20
[
AR9287_NUM_2G_20_TARGET_POWERS
];

618 
ˇl_èrgë_powî_ht


619 
	mˇlT¨gëPowî2GHT40
[
AR9287_NUM_2G_40_TARGET_POWERS
];

620 
u8
 
	m˘lIndex
[
AR9287_NUM_CTLS
];

621 
ˇl_˘l_d©a_¨9287
 
	m˘lD©a
[
AR9287_NUM_CTLS
];

622 
u8
 
	m∑ddög
;

623 } 
	g__∑cked
;

625 
	eªg_ext_bôm≠
 {

626 
	mREG_EXT_FCC_MIDBAND
 = 0,

627 
	mREG_EXT_JAPAN_MIDBAND
 = 1,

628 
	mREG_EXT_FCC_DFS_HT40
 = 2,

629 
	mREG_EXT_JAPAN_NONDFS_HT40
 = 3,

630 
	mREG_EXT_JAPAN_DFS_HT40
 = 4

633 
	s©h9k_cou¡ry_íåy
 {

634 
u16
 
	mcou¡ryCode
;

635 
u16
 
	mªgDmnEnum
;

636 
u16
 
	mªgDmn5G
;

637 
u16
 
	mªgDmn2G
;

638 
u8
 
	misMu…idomaö
;

639 
u8
 
	miso
[3];

642 
	sì¥om_›s
 {

643 (*
	mcheck_ì¥om
)(
©h_hw
 *
	mhw
);

644 
u32
 (*
gë_ì¥om
)(
©h_hw
 *
	mhw
, 
ì¥om_∑øm
 
	m∑øm
);

645 
boﬁ
 (*
fûl_ì¥om
)(
©h_hw
 *
	mhw
);

646 
u32
 (*
dump_ì¥om
)(
©h_hw
 *
	mhw
, 
boﬁ
 
	mdump_ba£_hdr
, 
u8
 *
	mbuf
,

647 
u32
 
	mÀn
, u32 
	msize
);

648 (*
	mgë_ì¥om_vî
)(
©h_hw
 *
	mhw
);

649 (*
	mgë_ì¥om_ªv
)(
©h_hw
 *
	mhw
);

650 (*
	m£t_bﬂrd_vÆues
)(
©h_hw
 *
	mhw
, 
©h9k_ch™√l
 *
	mch™
);

651 (*
	m£t_addac
)(
©h_hw
 *
	mhw
, 
©h9k_ch™√l
 *
	mch™
);

652 (*
	m£t_txpowî
)(
©h_hw
 *
	mhw
, 
©h9k_ch™√l
 *
	mch™
,

653 
u16
 
	mcfgCé
, 
u8
 
	mtwi˚A¡í«Redu˘i⁄
,

654 
u8
 
	mpowîLimô
, 
boﬁ
 
	mã°
);

655 
u16
 (*
gë_•ur_ch™√l
)(
©h_hw
 *
	mah
, u16 
	mi
, 
boﬁ
 
	mis2GHz
);

658 
©h9k_hw_™Æog_shi·_ªgwrôe
(
©h_hw
 *
ah
, 
u32
 
ªg
, u32 
vÆ
);

659 
©h9k_hw_™Æog_shi·_rmw
(
©h_hw
 *
ah
, 
u32
 
ªg
, u32 
mask
,

660 
u32
 
shi·
, u32 
vÆ
);

661 
öt16_t
 
©h9k_hw_öãΩﬁ©e
(
u16
 
èrgë
, u16 
§cLe·
, u16 
§cRight
,

662 
öt16_t
 
èrgëLe·
,

663 
öt16_t
 
èrgëRight
);

664 
boﬁ
 
©h9k_hw_gë_lowî_uµî_ödex
(
u8
 
èrgë
, u8 *
pLi°
, 
u16
 
li°Size
,

665 
u16
 *
ödexL
, u16 *
ödexR
);

666 
boﬁ
 
©h9k_hw_nvøm_ªad
(
©h_hw
 *
ah
, 
u32
 
off
, 
u16
 *
d©a
);

667 
©h9k_hw_usb_gí_fûl_ì¥om
(
©h_hw
 *
ah
, 
u16
 *
ìp_d©a
,

668 
ìp_°¨t_loc
, 
size
);

669 
©h9k_hw_fûl_vpd_èbÀ
(
u8
 
pwrMö
, u8 
pwrMax
, u8 *
pPwrLi°
,

670 
u8
 *
pVpdLi°
, 
u16
 
numI¡î˚±s
,

671 
u8
 *
pRëVpdLi°
);

672 
©h9k_hw_gë_Àgacy_èrgë_powîs
(
©h_hw
 *
ah
,

673 
©h9k_ch™√l
 *
ch™
,

674 
ˇl_èrgë_powî_Àg
 *
powInfo
,

675 
u16
 
numCh™√ls
,

676 
ˇl_èrgë_powî_Àg
 *
pNewPowî
,

677 
u16
 
numR©es
, 
boﬁ
 
isExtT¨gë
);

678 
©h9k_hw_gë_èrgë_powîs
(
©h_hw
 *
ah
,

679 
©h9k_ch™√l
 *
ch™
,

680 
ˇl_èrgë_powî_ht
 *
powInfo
,

681 
u16
 
numCh™√ls
,

682 
ˇl_èrgë_powî_ht
 *
pNewPowî
,

683 
u16
 
numR©es
, 
boﬁ
 
isHt40T¨gë
);

684 
u16
 
©h9k_hw_gë_max_edge_powî
(u16 
‰eq
, 
ˇl_˘l_edges
 *
pRdEdgesPowî
,

685 
boﬁ
 
is2GHz
, 
num_b™d_edges
);

686 
u16
 
©h9k_hw_gë_sˇÀd_powî
(
©h_hw
 *
ah
, u16 
powî_limô
,

687 
u8
 
™ã¬a_ªdu˘i⁄
);

688 
©h9k_hw_upd©e_ªguœt‹y_maxpowî
(
©h_hw
 *
ah
);

689 
©h9k_hw_ì¥om_öô
(
©h_hw
 *
ah
);

691 
©h9k_hw_gë_gaö_bound¨õs_pdadcs
(
©h_hw
 *
ah
,

692 
©h9k_ch™√l
 *
ch™
,

693 *
pRawD©aSë
,

694 
u8
 *
bCh™s
, 
u16
 
avaûPõrs
,

695 
u16
 
tPdGaöOvîœp
,

696 
u16
 *
pPdGaöBound¨õs
, 
u8
 *
pPDADCVÆues
,

697 
u16
 
numXpdGaös
);

699 
ölöe
 
u16
 
	$©h9k_hw_fbö2‰eq
(
u8
 
fbö
, 
boﬁ
 
is2GHz
)

701 i‡(
fbö
 =
AR5416_BCHAN_UNUSED
)

702  
fbö
;

704  (
u16
Ë((
is2GHz
Ë? (2300 + 
fbö
) : (4800 + 5 * fbin));

705 
	}
}

707 
	#¨5416_gë_¡xchaös
(
_txchaömask
) \

708 (((
_txchaömask
 >> 2) & 1) + \

709 ((
_txchaömask
 >> 1Ë& 1Ë+ (_txchaömask & 1))

	)

711 c⁄° 
ì¥om_›s
 
ìp_def_›s
;

712 c⁄° 
ì¥om_›s
 
ìp_4k_›s
;

713 c⁄° 
ì¥om_›s
 
ìp_¨9287_›s
;

714 c⁄° 
ì¥om_›s
 
ìp_¨9287_›s
;

715 c⁄° 
ì¥om_›s
 
ìp_¨9300_›s
;

	@eeprom_4k.c

17 
	~<asm/u«lig√d.h
>

18 
	~"hw.h
"

19 
	~"¨9002_phy.h
"

21 
	$©h9k_hw_4k_gë_ì¥om_vî
(
©h_hw
 *
ah
)

23  ((
ah
->
ì¥om
.
m≠4k
.
ba£EïHódî
.
vîsi⁄
 >> 12) & 0xF);

24 
	}
}

26 
	$©h9k_hw_4k_gë_ì¥om_ªv
(
©h_hw
 *
ah
)

28  ((
ah
->
ì¥om
.
m≠4k
.
ba£EïHódî
.
vîsi⁄
) & 0xFFF);

29 
	}
}

31 
	#SIZE_EEPROM_4K
 ((
¨5416_ì¥om_4k
Ë/ (
u16
))

	)

33 
boﬁ
 
	$__©h9k_hw_4k_fûl_ì¥om
(
©h_hw
 *
ah
)

35 
u16
 *
ìp_d©a
 = (u16 *)&
ah
->
ì¥om
.
m≠4k
;

36 
addr
, 
ìp_°¨t_loc
 = 64;

38 
addr
 = 0;ádd∏< 
SIZE_EEPROM_4K
;áddr++) {

39 i‡(!
	`©h9k_hw_nvøm_ªad
(
ah
, 
addr
 + 
ìp_°¨t_loc
, 
ìp_d©a
))

40  
Ál£
;

41 
ìp_d©a
++;

44  
åue
;

45 
	}
}

47 
boﬁ
 
	$__©h9k_hw_usb_4k_fûl_ì¥om
(
©h_hw
 *
ah
)

49 
u16
 *
ìp_d©a
 = (u16 *)&
ah
->
ì¥om
.
m≠4k
;

51 
	`©h9k_hw_usb_gí_fûl_ì¥om
(
ah
, 
ìp_d©a
, 64, 
SIZE_EEPROM_4K
);

53  
åue
;

54 
	}
}

56 
boﬁ
 
	$©h9k_hw_4k_fûl_ì¥om
(
©h_hw
 *
ah
)

58 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

60 i‡(!(
ah
->
ah_Êags
 & 
AH_NO_EEP_SWAP
)) {

61 
	`©h_dbg
(
comm⁄
, 
EEPROM
, "Reading from EEPROM,Çot flash\n");

64 i‡(
comm⁄
->
bus_›s
->
©h_bus_ty≥
 =
ATH_USB
)

65  
	`__©h9k_hw_usb_4k_fûl_ì¥om
(
ah
);

67  
	`__©h9k_hw_4k_fûl_ì¥om
(
ah
);

68 
	}
}

70 #i‡
deföed
(
CPTCFG_ATH9K_DEBUGFS
Ë|| deföed(
CPTCFG_ATH9K_HTC_DEBUGFS
)

71 
u32
 
	$©h9k_dump_4k_modÆ_ì¥om
(*
buf
, 
u32
 
Àn
, u32 
size
,

72 
modÆ_ìp_4k_hódî
 *
modÆ_hdr
)

74 
	`PR_EEP
("Chaö0 A¡. C⁄åﬁ", 
modÆ_hdr
->
™tCålChaö
[0]);

75 
	`PR_EEP
("A¡. Comm⁄ C⁄åﬁ", 
modÆ_hdr
->
™tCålComm⁄
);

76 
	`PR_EEP
("Chaö0 A¡. Gaö", 
modÆ_hdr
->
™ã¬aGaöCh
[0]);

77 
	`PR_EEP
("Swôch Sëée", 
modÆ_hdr
->
swôchSëéög
);

78 
	`PR_EEP
("Chaö0 TxRxAâí", 
modÆ_hdr
->
txRxAâíCh
[0]);

79 
	`PR_EEP
("Chaö0 RxTxM¨gö", 
modÆ_hdr
->
rxTxM¨göCh
[0]);

80 
	`PR_EEP
("ADC Desúed size", 
modÆ_hdr
->
adcDesúedSize
);

81 
	`PR_EEP
("PGA Desúed size", 
modÆ_hdr
->
pgaDesúedSize
);

82 
	`PR_EEP
("Chaö0 x ®Gaö", 
modÆ_hdr
->
x aGaöCh
[0]);

83 
	`PR_EEP
("txEndToX∑Off", 
modÆ_hdr
->
txEndToX∑Off
);

84 
	`PR_EEP
("txEndToRxOn", 
modÆ_hdr
->
txEndToRxOn
);

85 
	`PR_EEP
("txFømeToX∑On", 
modÆ_hdr
->
txFømeToX∑On
);

86 
	`PR_EEP
("CCA Thªshﬁd)", 
modÆ_hdr
->
thªsh62
);

87 
	`PR_EEP
("Chaö0 NF Thªshﬁd", 
modÆ_hdr
->
noi£Flo‹ThªshCh
[0]);

88 
	`PR_EEP
("xpdGaö", 
modÆ_hdr
->
xpdGaö
);

89 
	`PR_EEP
("Exã∫Æ PD", 
modÆ_hdr
->
xpd
);

90 
	`PR_EEP
("Chaö0 I C€fficõ¡", 
modÆ_hdr
->
iqCÆICh
[0]);

91 
	`PR_EEP
("Chaö0 Q C€fficõ¡", 
modÆ_hdr
->
iqCÆQCh
[0]);

92 
	`PR_EEP
("pdGaöOvîœp", 
modÆ_hdr
->
pdGaöOvîœp
);

93 
	`PR_EEP
("O/D Bü†Vîsi⁄", 
modÆ_hdr
->
vîsi⁄
);

94 
	`PR_EEP
("CCK OuçutBüs", 
modÆ_hdr
->
ob_0
);

95 
	`PR_EEP
("BPSK OuçutBüs", 
modÆ_hdr
->
ob_1
);

96 
	`PR_EEP
("QPSK OuçutBüs", 
modÆ_hdr
->
ob_2
);

97 
	`PR_EEP
("16QAM OuçutBüs", 
modÆ_hdr
->
ob_3
);

98 
	`PR_EEP
("64QAM OuçutBüs", 
modÆ_hdr
->
ob_4
);

99 
	`PR_EEP
("CCK Drivî1_Büs", 
modÆ_hdr
->
db1_0
);

100 
	`PR_EEP
("BPSK Drivî1_Büs", 
modÆ_hdr
->
db1_1
);

101 
	`PR_EEP
("QPSK Drivî1_Büs", 
modÆ_hdr
->
db1_2
);

102 
	`PR_EEP
("16QAM Drivî1_Büs", 
modÆ_hdr
->
db1_3
);

103 
	`PR_EEP
("64QAM Drivî1_Büs", 
modÆ_hdr
->
db1_4
);

104 
	`PR_EEP
("CCK Drivî2_Büs", 
modÆ_hdr
->
db2_0
);

105 
	`PR_EEP
("BPSK Drivî2_Büs", 
modÆ_hdr
->
db2_1
);

106 
	`PR_EEP
("QPSK Drivî2_Büs", 
modÆ_hdr
->
db2_2
);

107 
	`PR_EEP
("16QAM Drivî2_Büs", 
modÆ_hdr
->
db2_3
);

108 
	`PR_EEP
("64QAM Drivî2_Büs", 
modÆ_hdr
->
db2_4
);

109 
	`PR_EEP
("xPA Bü†Levñ", 
modÆ_hdr
->
x∑BüsLvl
);

110 
	`PR_EEP
("txFømeToD©aSèπ", 
modÆ_hdr
->
txFømeToD©aSèπ
);

111 
	`PR_EEP
("txFømeToPaOn", 
modÆ_hdr
->
txFømeToPaOn
);

112 
	`PR_EEP
("HT40 Powî Inc.", 
modÆ_hdr
->
ht40PowîIncF‹Pdadc
);

113 
	`PR_EEP
("Chaö0 bswAâí", 
modÆ_hdr
->
bswAâí
[0]);

114 
	`PR_EEP
("Chaö0 bswM¨gö", 
modÆ_hdr
->
bswM¨gö
[0]);

115 
	`PR_EEP
("HT40 Swôch Sëée", 
modÆ_hdr
->
swSëéeHt40
);

116 
	`PR_EEP
("Chaö0 x©ãn2Db", 
modÆ_hdr
->
x©ãn2Db
[0]);

117 
	`PR_EEP
("Chaö0 x©ãn2M¨gö", 
modÆ_hdr
->
x©ãn2M¨gö
[0]);

118 
	`PR_EEP
("A¡. Divîsôy cé1", 
modÆ_hdr
->
™tdiv_˘l1
);

119 
	`PR_EEP
("A¡. Divîsôy cé2", 
modÆ_hdr
->
™tdiv_˘l2
);

120 
	`PR_EEP
("TX Divîsôy", 
modÆ_hdr
->
tx_divîsôy
);

122  
Àn
;

123 
	}
}

125 
u32
 
	$©h9k_hw_4k_dump_ì¥om
(
©h_hw
 *
ah
, 
boﬁ
 
dump_ba£_hdr
,

126 
u8
 *
buf
, 
u32
 
Àn
, u32 
size
)

128 
¨5416_ì¥om_4k
 *
ìp
 = &
ah
->
ì¥om
.
m≠4k
;

129 
ba£_ìp_hódî_4k
 *
pBa£
 = &
ìp
->
ba£EïHódî
;

131 i‡(!
dump_ba£_hdr
) {

132 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen,

134 
Àn
 = 
	`©h9k_dump_4k_modÆ_ì¥om
(
buf
,Üí, 
size
,

135 &
ìp
->
modÆHódî
);

136 
out
;

139 
	`PR_EEP
("Maj‹ Vîsi⁄", 
pBa£
->
vîsi⁄
 >> 12);

140 
	`PR_EEP
("Mö‹ Vîsi⁄", 
pBa£
->
vîsi⁄
 & 0xFFF);

141 
	`PR_EEP
("Checksum", 
pBa£
->
checksum
);

142 
	`PR_EEP
("Lígth", 
pBa£
->
Àngth
);

143 
	`PR_EEP
("RegDomaö1", 
pBa£
->
ªgDmn
[0]);

144 
	`PR_EEP
("RegDomaö2", 
pBa£
->
ªgDmn
[1]);

145 
	`PR_EEP
("TX Mask", 
pBa£
->
txMask
);

146 
	`PR_EEP
("RX Mask", 
pBa£
->
rxMask
);

147 
	`PR_EEP
("AŒow 5GHz", !!(
pBa£
->
›C≠Fœgs
 & 
AR5416_OPFLAGS_11A
));

148 
	`PR_EEP
("AŒow 2GHz", !!(
pBa£
->
›C≠Fœgs
 & 
AR5416_OPFLAGS_11G
));

149 
	`PR_EEP
("DißbÀ 2GHz HT20", !!(
pBa£
->
›C≠Fœgs
 &

150 
AR5416_OPFLAGS_N_2G_HT20
));

151 
	`PR_EEP
("DißbÀ 2GHz HT40", !!(
pBa£
->
›C≠Fœgs
 &

152 
AR5416_OPFLAGS_N_2G_HT40
));

153 
	`PR_EEP
("DißbÀ 5Ghz HT20", !!(
pBa£
->
›C≠Fœgs
 &

154 
AR5416_OPFLAGS_N_5G_HT20
));

155 
	`PR_EEP
("DißbÀ 5Ghz HT40", !!(
pBa£
->
›C≠Fœgs
 &

156 
AR5416_OPFLAGS_N_5G_HT40
));

157 
	`PR_EEP
("Big Endün", !!(
pBa£
->
ìpMisc
 & 0x01));

158 
	`PR_EEP
("CÆ Bö Maj‹ Vî", (
pBa£
->
böBuûdNumbî
 >> 24) & 0xFF);

159 
	`PR_EEP
("CÆ Bö Mö‹ Vî", (
pBa£
->
böBuûdNumbî
 >> 16) & 0xFF);

160 
	`PR_EEP
("CÆ Bö Buûd", (
pBa£
->
böBuûdNumbî
 >> 8) & 0xFF);

161 
	`PR_EEP
("TX GaöÅy≥", 
pBa£
->
txGaöTy≥
);

163 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%20s : %pM\n", "MacAddress",

164 
pBa£
->
macAddr
);

166 
out
:

167 i‡(
Àn
 > 
size
)

168 
Àn
 = 
size
;

170  
Àn
;

171 
	}
}

173 
u32
 
	$©h9k_hw_4k_dump_ì¥om
(
©h_hw
 *
ah
, 
boﬁ
 
dump_ba£_hdr
,

174 
u8
 *
buf
, 
u32
 
Àn
, u32 
size
)

177 
	}
}

181 #unde‡
SIZE_EEPROM_4K


183 
	$©h9k_hw_4k_check_ì¥om
(
©h_hw
 *
ah
)

185 
	#EEPROM_4K_SIZE
 ((
¨5416_ì¥om_4k
Ë/ (
u16
))

	)

186 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

187 
¨5416_ì¥om_4k
 *
ìp
 = &
ah
->
ì¥om
.
m≠4k
;

188 
u16
 *
ìpd©a
, 
ãmp
, 
magic
, 
magic2
;

189 
u32
 
sum
 = 0, 
ñ
;

190 
boﬁ
 
√ed_sw≠
 = 
Ál£
;

191 
i
, 
addr
;

194 i‡(!
	`©h9k_hw_u£_Êash
(
ah
)) {

195 i‡(!
	`©h9k_hw_nvøm_ªad
(
ah
, 
AR5416_EEPROM_MAGIC_OFFSET
,

196 &
magic
)) {

197 
	`©h_îr
(
comm⁄
, "Reading Magic # failed\n");

198  
Ál£
;

201 
	`©h_dbg
(
comm⁄
, 
EEPROM
, "Ród Magi¯0x%04X\n", 
magic
);

203 i‡(
magic
 !
AR5416_EEPROM_MAGIC
) {

204 
magic2
 = 
	`swab16
(
magic
);

206 i‡(
magic2
 =
AR5416_EEPROM_MAGIC
) {

207 
√ed_sw≠
 = 
åue
;

208 
ìpd©a
 = (
u16
 *Ë(&
ah
->
ì¥om
);

210 
addr
 = 0;ádd∏< 
EEPROM_4K_SIZE
;áddr++) {

211 
ãmp
 = 
	`swab16
(*
ìpd©a
);

212 *
ìpd©a
 = 
ãmp
;

213 
ìpd©a
++;

216 
	`©h_îr
(
comm⁄
,

218  -
EINVAL
;

223 
	`©h_dbg
(
comm⁄
, 
EEPROM
, "need_swap = %s\n",

224 
√ed_sw≠
 ? "True" : "False");

226 i‡(
√ed_sw≠
)

227 
ñ
 = 
	`swab16
(
ah
->
ì¥om
.
m≠4k
.
ba£EïHódî
.
Àngth
);

229 
ñ
 = 
ah
->
ì¥om
.
m≠4k
.
ba£EïHódî
.
Àngth
;

231 i‡(
ñ
 > (
¨5416_ì¥om_4k
))

232 
ñ
 = (
¨5416_ì¥om_4k
Ë/ (
u16
);

234 
ñ
 =É»/ (
u16
);

236 
ìpd©a
 = (
u16
 *)(&
ah
->
ì¥om
);

238 
i
 = 0; i < 
ñ
; i++)

239 
sum
 ^*
ìpd©a
++;

241 i‡(
√ed_sw≠
) {

242 
u32
 
öãgî
;

243 
u16
 
w‹d
;

245 
	`©h_dbg
(
comm⁄
, 
EEPROM
,

248 
w‹d
 = 
	`swab16
(
ìp
->
ba£EïHódî
.
Àngth
);

249 
ìp
->
ba£EïHódî
.
Àngth
 = 
w‹d
;

251 
w‹d
 = 
	`swab16
(
ìp
->
ba£EïHódî
.
checksum
);

252 
ìp
->
ba£EïHódî
.
checksum
 = 
w‹d
;

254 
w‹d
 = 
	`swab16
(
ìp
->
ba£EïHódî
.
vîsi⁄
);

255 
ìp
->
ba£EïHódî
.
vîsi⁄
 = 
w‹d
;

257 
w‹d
 = 
	`swab16
(
ìp
->
ba£EïHódî
.
ªgDmn
[0]);

258 
ìp
->
ba£EïHódî
.
ªgDmn
[0] = 
w‹d
;

260 
w‹d
 = 
	`swab16
(
ìp
->
ba£EïHódî
.
ªgDmn
[1]);

261 
ìp
->
ba£EïHódî
.
ªgDmn
[1] = 
w‹d
;

263 
w‹d
 = 
	`swab16
(
ìp
->
ba£EïHódî
.
rfSûít
);

264 
ìp
->
ba£EïHódî
.
rfSûít
 = 
w‹d
;

266 
w‹d
 = 
	`swab16
(
ìp
->
ba£EïHódî
.
blueToŸhO±i⁄s
);

267 
ìp
->
ba£EïHódî
.
blueToŸhO±i⁄s
 = 
w‹d
;

269 
w‹d
 = 
	`swab16
(
ìp
->
ba£EïHódî
.
devi˚C≠
);

270 
ìp
->
ba£EïHódî
.
devi˚C≠
 = 
w‹d
;

272 
öãgî
 = 
	`swab32
(
ìp
->
modÆHódî
.
™tCålComm⁄
);

273 
ìp
->
modÆHódî
.
™tCålComm⁄
 = 
öãgî
;

275 
i
 = 0; i < 
AR5416_EEP4K_MAX_CHAINS
; i++) {

276 
öãgî
 = 
	`swab32
(
ìp
->
modÆHódî
.
™tCålChaö
[
i
]);

277 
ìp
->
modÆHódî
.
™tCålChaö
[
i
] = 
öãgî
;

280 
i
 = 0; i < 
AR_EEPROM_MODAL_SPURS
; i++) {

281 
w‹d
 = 
	`swab16
(
ìp
->
modÆHódî
.
•urCh™s
[
i
].
•urCh™
);

282 
ìp
->
modÆHódî
.
•urCh™s
[
i
].
•urCh™
 = 
w‹d
;

286 i‡(
sum
 !0xfff‡|| 
ah
->
ìp_›s
->
	`gë_ì¥om_vî
◊hË!
AR5416_EEP_VER
 ||

287 
ah
->
ìp_›s
->
	`gë_ì¥om_ªv
◊hË< 
AR5416_EEP_NO_BACK_VER
) {

288 
	`©h_îr
(
comm⁄
, "Bad EEPROM checksum 0x%x orÑevision 0x%04x\n",

289 
sum
, 
ah
->
ìp_›s
->
	`gë_ì¥om_vî
(ah));

290  -
EINVAL
;

294 #unde‡
EEPROM_4K_SIZE


295 
	}
}

297 
u32
 
	$©h9k_hw_4k_gë_ì¥om
(
©h_hw
 *
ah
,

298 
ì¥om_∑øm
 
∑øm
)

300 
¨5416_ì¥om_4k
 *
ìp
 = &
ah
->
ì¥om
.
m≠4k
;

301 
modÆ_ìp_4k_hódî
 *
pModÆ
 = &
ìp
->
modÆHódî
;

302 
ba£_ìp_hódî_4k
 *
pBa£
 = &
ìp
->
ba£EïHódî
;

303 
u16
 
vî_mö‹
;

305 
vî_mö‹
 = 
pBa£
->
vîsi⁄
 & 
AR5416_EEP_VER_MINOR_MASK
;

307 
∑øm
) {

308 
EEP_NFTHRESH_2
:

309  
pModÆ
->
noi£Flo‹ThªshCh
[0];

310 
EEP_MAC_LSW
:

311  
	`gë_u«lig√d_be16
(
pBa£
->
macAddr
);

312 
EEP_MAC_MID
:

313  
	`gë_u«lig√d_be16
(
pBa£
->
macAddr
 + 2);

314 
EEP_MAC_MSW
:

315  
	`gë_u«lig√d_be16
(
pBa£
->
macAddr
 + 4);

316 
EEP_REG_0
:

317  
pBa£
->
ªgDmn
[0];

318 
EEP_OP_CAP
:

319  
pBa£
->
devi˚C≠
;

320 
EEP_OP_MODE
:

321  
pBa£
->
›C≠Fœgs
;

322 
EEP_RF_SILENT
:

323  
pBa£
->
rfSûít
;

324 
EEP_OB_2
:

325  
pModÆ
->
ob_0
;

326 
EEP_DB_2
:

327  
pModÆ
->
db1_1
;

328 
EEP_MINOR_REV
:

329  
vî_mö‹
;

330 
EEP_TX_MASK
:

331  
pBa£
->
txMask
;

332 
EEP_RX_MASK
:

333  
pBa£
->
rxMask
;

334 
EEP_FRAC_N_5G
:

336 
EEP_PWR_TABLE_OFFSET
:

337  
AR5416_PWR_TABLE_OFFSET_DB
;

338 
EEP_MODAL_VER
:

339  
pModÆ
->
vîsi⁄
;

340 
EEP_ANT_DIV_CTL1
:

341  
pModÆ
->
™tdiv_˘l1
;

342 
EEP_TXGAIN_TYPE
:

343  
pBa£
->
txGaöTy≥
;

344 
EEP_ANTENNA_GAIN_2G
:

345  
pModÆ
->
™ã¬aGaöCh
[0];

349 
	}
}

351 
	$©h9k_hw_£t_4k_powî_ˇl_èbÀ
(
©h_hw
 *
ah
,

352 
©h9k_ch™√l
 *
ch™
)

354 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

355 
¨5416_ì¥om_4k
 *
pEïD©a
 = &
ah
->
ì¥om
.
m≠4k
;

356 
ˇl_d©a_≥r_‰eq_4k
 *
pRawD©a£t
;

357 
u8
 *
pCÆBCh™s
 = 
NULL
;

358 
u16
 
pdGaöOvîœp_t2
;

359 
u8
 
pdadcVÆues
[
AR5416_NUM_PDADC_VALUES
];

360 
u16
 
gaöBound¨õs
[
AR5416_PD_GAINS_IN_MASK
];

361 
u16
 
numPõrs
, 
i
, 
j
;

362 
u16
 
numXpdGaö
, 
xpdMask
;

363 
u16
 
xpdGaöVÆues
[
AR5416_EEP4K_NUM_PD_GAINS
] = { 0, 0 };

364 
u32
 
ªg32
, 
ªgOff£t
, 
ªgChaöOff£t
;

366 
xpdMask
 = 
pEïD©a
->
modÆHódî
.
xpdGaö
;

368 i‡((
pEïD©a
->
ba£EïHódî
.
vîsi⁄
 & 
AR5416_EEP_VER_MINOR_MASK
) >=

369 
AR5416_EEP_MINOR_VER_2
) {

370 
pdGaöOvîœp_t2
 =

371 
pEïD©a
->
modÆHódî
.
pdGaöOvîœp
;

373 
pdGaöOvîœp_t2
 = (
u16
)(
	`MS
(
	`REG_READ
(
ah
, 
AR_PHY_TPCRG5
),

374 
AR_PHY_TPCRG5_PD_GAIN_OVERLAP
));

377 
pCÆBCh™s
 = 
pEïD©a
->
ˇlFªqPõr2G
;

378 
numPõrs
 = 
AR5416_EEP4K_NUM_2G_CAL_PIERS
;

380 
numXpdGaö
 = 0;

382 
i
 = 1; i <
AR5416_PD_GAINS_IN_MASK
; i++) {

383 i‡((
xpdMask
 >> (
AR5416_PD_GAINS_IN_MASK
 - 
i
)) & 1) {

384 i‡(
numXpdGaö
 >
AR5416_EEP4K_NUM_PD_GAINS
)

386 
xpdGaöVÆues
[
numXpdGaö
] =

387 (
u16
)(
AR5416_PD_GAINS_IN_MASK
 - 
i
);

388 
numXpdGaö
++;

392 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TPCRG1
, 
AR_PHY_TPCRG1_NUM_PD_GAIN
,

393 (
numXpdGaö
 - 1) & 0x3);

394 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TPCRG1
, 
AR_PHY_TPCRG1_PD_GAIN_1
,

395 
xpdGaöVÆues
[0]);

396 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TPCRG1
, 
AR_PHY_TPCRG1_PD_GAIN_2
,

397 
xpdGaöVÆues
[1]);

398 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TPCRG1
, 
AR_PHY_TPCRG1_PD_GAIN_3
, 0);

400 
i
 = 0; i < 
AR5416_EEP4K_MAX_CHAINS
; i++) {

401 
ªgChaöOff£t
 = 
i
 * 0x1000;

403 i‡(
pEïD©a
->
ba£EïHódî
.
txMask
 & (1 << 
i
)) {

404 
pRawD©a£t
 = 
pEïD©a
->
ˇlPõrD©a2G
[
i
];

406 
	`©h9k_hw_gë_gaö_bound¨õs_pdadcs
(
ah
, 
ch™
,

407 
pRawD©a£t
, 
pCÆBCh™s
,

408 
numPõrs
, 
pdGaöOvîœp_t2
,

409 
gaöBound¨õs
,

410 
pdadcVÆues
, 
numXpdGaö
);

412 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

414 
	`REG_WRITE
(
ah
, 
AR_PHY_TPCRG5
 + 
ªgChaöOff£t
,

415 
	`SM
(
pdGaöOvîœp_t2
,

416 
AR_PHY_TPCRG5_PD_GAIN_OVERLAP
)

417 | 
	`SM
(
gaöBound¨õs
[0],

418 
AR_PHY_TPCRG5_PD_GAIN_BOUNDARY_1
)

419 | 
	`SM
(
gaöBound¨õs
[1],

420 
AR_PHY_TPCRG5_PD_GAIN_BOUNDARY_2
)

421 | 
	`SM
(
gaöBound¨õs
[2],

422 
AR_PHY_TPCRG5_PD_GAIN_BOUNDARY_3
)

423 | 
	`SM
(
gaöBound¨õs
[3],

424 
AR_PHY_TPCRG5_PD_GAIN_BOUNDARY_4
));

426 
ªgOff£t
 = 
AR_PHY_BASE
 + (672 << 2Ë+ 
ªgChaöOff£t
;

427 
j
 = 0; j < 32; j++) {

428 
ªg32
 = 
	`gë_u«lig√d_À32
(&
pdadcVÆues
[4 * 
j
]);

429 
	`REG_WRITE
(
ah
, 
ªgOff£t
, 
ªg32
);

431 
	`©h_dbg
(
comm⁄
, 
EEPROM
,

433 
i
, 
ªgChaöOff£t
, 
ªgOff£t
,

434 
ªg32
);

435 
	`©h_dbg
(
comm⁄
, 
EEPROM
,

441 
i
, 4 * 
j
, 
pdadcVÆues
[4 * j],

442 4 * 
j
 + 1, 
pdadcVÆues
[4 * j + 1],

443 4 * 
j
 + 2, 
pdadcVÆues
[4 * j + 2],

444 4 * 
j
 + 3, 
pdadcVÆues
[4 * j + 3]);

446 
ªgOff£t
 += 4;

449 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

452 
	}
}

454 
	$©h9k_hw_£t_4k_powî_≥r_øã_èbÀ
(
©h_hw
 *
ah
,

455 
©h9k_ch™√l
 *
ch™
,

456 
öt16_t
 *
øãsAºay
,

457 
u16
 
cfgCé
,

458 
u16
 
™ã¬a_ªdu˘i⁄
,

459 
u16
 
powîLimô
)

461 
	#CMP_TEST_GRP
 \

462 (((
cfgCé
 & ~
CTL_MODE_M
)| (
pCéMode
[
˘lMode
] & CTL_MODE_M)) == \

463 
pEïD©a
->
˘lIndex
[
i
]) \

464 || (((
cfgCé
 & ~
CTL_MODE_M
Ë| (
pCéMode
[
˘lMode
] & CTL_MODE_M)) == \

465 ((
pEïD©a
->
˘lIndex
[
i
] & 
CTL_MODE_M
Ë| 
SD_NO_CTL
))

	)

467 
i
;

468 
u16
 
twi˚MöEdgePowî
;

469 
u16
 
twi˚MaxEdgePowî
;

470 
u16
 
sˇÀdPowî
 = 0, 
möCéPowî
;

471 
u16
 
numCéModes
;

472 c⁄° 
u16
 *
pCéMode
;

473 
u16
 
˘lMode
, 
‰eq
;

474 
ch™_˚¡îs
 
˚¡îs
;

475 
ˇl_˘l_d©a_4k
 *
ªp
;

476 
¨5416_ì¥om_4k
 *
pEïD©a
 = &
ah
->
ì¥om
.
m≠4k
;

477 
ˇl_èrgë_powî_Àg
 
èrgëPowîOfdm
, 
èrgëPowîCck
 = {

480 
ˇl_èrgë_powî_Àg
 
èrgëPowîOfdmExt
 = {

481 0, { 0, 0, 0, 0} }, 
èrgëPowîCckExt
 = {

484 
ˇl_èrgë_powî_ht
 
èrgëPowîHt20
, 
èrgëPowîHt40
 = {

487 c⁄° 
u16
 
˘lModesF‹11g
[] = {

488 
CTL_11B
, 
CTL_11G
, 
CTL_2GHT20
,

489 
CTL_11B_EXT
, 
CTL_11G_EXT
, 
CTL_2GHT40


492 
	`©h9k_hw_gë_ch™√l_˚¡îs
(
ah
, 
ch™
, &
˚¡îs
);

494 
sˇÀdPowî
 = 
powîLimô
 - 
™ã¬a_ªdu˘i⁄
;

495 
numCéModes
 = 
	`ARRAY_SIZE
(
˘lModesF‹11g
Ë- 
SUB_NUM_CTL_MODES_AT_2G_40
;

496 
pCéMode
 = 
˘lModesF‹11g
;

498 
	`©h9k_hw_gë_Àgacy_èrgë_powîs
(
ah
, 
ch™
,

499 
pEïD©a
->
ˇlT¨gëPowîCck
,

500 
AR5416_NUM_2G_CCK_TARGET_POWERS
,

501 &
èrgëPowîCck
, 4, 
Ál£
);

502 
	`©h9k_hw_gë_Àgacy_èrgë_powîs
(
ah
, 
ch™
,

503 
pEïD©a
->
ˇlT¨gëPowî2G
,

504 
AR5416_NUM_2G_20_TARGET_POWERS
,

505 &
èrgëPowîOfdm
, 4, 
Ál£
);

506 
	`©h9k_hw_gë_èrgë_powîs
(
ah
, 
ch™
,

507 
pEïD©a
->
ˇlT¨gëPowî2GHT20
,

508 
AR5416_NUM_2G_20_TARGET_POWERS
,

509 &
èrgëPowîHt20
, 8, 
Ál£
);

511 i‡(
	`IS_CHAN_HT40
(
ch™
)) {

512 
numCéModes
 = 
	`ARRAY_SIZE
(
˘lModesF‹11g
);

513 
	`©h9k_hw_gë_èrgë_powîs
(
ah
, 
ch™
,

514 
pEïD©a
->
ˇlT¨gëPowî2GHT40
,

515 
AR5416_NUM_2G_40_TARGET_POWERS
,

516 &
èrgëPowîHt40
, 8, 
åue
);

517 
	`©h9k_hw_gë_Àgacy_èrgë_powîs
(
ah
, 
ch™
,

518 
pEïD©a
->
ˇlT¨gëPowîCck
,

519 
AR5416_NUM_2G_CCK_TARGET_POWERS
,

520 &
èrgëPowîCckExt
, 4, 
åue
);

521 
	`©h9k_hw_gë_Àgacy_èrgë_powîs
(
ah
, 
ch™
,

522 
pEïD©a
->
ˇlT¨gëPowî2G
,

523 
AR5416_NUM_2G_20_TARGET_POWERS
,

524 &
èrgëPowîOfdmExt
, 4, 
åue
);

527 
˘lMode
 = 0; céModê< 
numCéModes
; ctlMode++) {

528 
boﬁ
 
isHt40CéMode
 = (
pCéMode
[
˘lMode
] =
CTL_5GHT40
) ||

529 (
pCéMode
[
˘lMode
] =
CTL_2GHT40
);

531 i‡(
isHt40CéMode
)

532 
‰eq
 = 
˚¡îs
.
sy¡h_˚¡î
;

533 i‡(
pCéMode
[
˘lMode
] & 
EXT_ADDITIVE
)

534 
‰eq
 = 
˚¡îs
.
ext_˚¡î
;

536 
‰eq
 = 
˚¡îs
.
˘l_˚¡î
;

538 
twi˚MaxEdgePowî
 = 
MAX_RATE_POWER
;

540 
i
 = 0; (ò< 
AR5416_EEP4K_NUM_CTLS
) &&

541 
pEïD©a
->
˘lIndex
[
i
]; i++) {

543 i‡(
CMP_TEST_GRP
) {

544 
ªp
 = &(
pEïD©a
->
˘lD©a
[
i
]);

546 
twi˚MöEdgePowî
 = 
	`©h9k_hw_gë_max_edge_powî
(

547 
‰eq
,

548 
ªp
->
˘lEdges
[

549 
	`¨5416_gë_¡xchaös
(
ah
->
txchaömask
) - 1],

550 
	`IS_CHAN_2GHZ
(
ch™
),

551 
AR5416_EEP4K_NUM_BAND_EDGES
);

553 i‡((
cfgCé
 & ~
CTL_MODE_M
Ë=
SD_NO_CTL
) {

554 
twi˚MaxEdgePowî
 =

555 
	`mö
(
twi˚MaxEdgePowî
,

556 
twi˚MöEdgePowî
);

558 
twi˚MaxEdgePowî
 = 
twi˚MöEdgePowî
;

564 
möCéPowî
 = (
u8
)
	`mö
(
twi˚MaxEdgePowî
, 
sˇÀdPowî
);

566 
pCéMode
[
˘lMode
]) {

567 
CTL_11B
:

568 
i
 = 0; i < 
	`ARRAY_SIZE
(
èrgëPowîCck
.
tPow2x
); i++) {

569 
èrgëPowîCck
.
tPow2x
[
i
] =

570 
	`mö
((
u16
)
èrgëPowîCck
.
tPow2x
[
i
],

571 
möCéPowî
);

574 
CTL_11G
:

575 
i
 = 0; i < 
	`ARRAY_SIZE
(
èrgëPowîOfdm
.
tPow2x
); i++) {

576 
èrgëPowîOfdm
.
tPow2x
[
i
] =

577 
	`mö
((
u16
)
èrgëPowîOfdm
.
tPow2x
[
i
],

578 
möCéPowî
);

581 
CTL_2GHT20
:

582 
i
 = 0; i < 
	`ARRAY_SIZE
(
èrgëPowîHt20
.
tPow2x
); i++) {

583 
èrgëPowîHt20
.
tPow2x
[
i
] =

584 
	`mö
((
u16
)
èrgëPowîHt20
.
tPow2x
[
i
],

585 
möCéPowî
);

588 
CTL_11B_EXT
:

589 
èrgëPowîCckExt
.
tPow2x
[0] =

590 
	`mö
((
u16
)
èrgëPowîCckExt
.
tPow2x
[0],

591 
möCéPowî
);

593 
CTL_11G_EXT
:

594 
èrgëPowîOfdmExt
.
tPow2x
[0] =

595 
	`mö
((
u16
)
èrgëPowîOfdmExt
.
tPow2x
[0],

596 
möCéPowî
);

598 
CTL_2GHT40
:

599 
i
 = 0; i < 
	`ARRAY_SIZE
(
èrgëPowîHt40
.
tPow2x
); i++) {

600 
èrgëPowîHt40
.
tPow2x
[
i
] =

601 
	`mö
((
u16
)
èrgëPowîHt40
.
tPow2x
[
i
],

602 
möCéPowî
);

610 
øãsAºay
[
øã6mb
] =

611 
øãsAºay
[
øã9mb
] =

612 
øãsAºay
[
øã12mb
] =

613 
øãsAºay
[
øã18mb
] =

614 
øãsAºay
[
øã24mb
] =

615 
èrgëPowîOfdm
.
tPow2x
[0];

617 
øãsAºay
[
øã36mb
] = 
èrgëPowîOfdm
.
tPow2x
[1];

618 
øãsAºay
[
øã48mb
] = 
èrgëPowîOfdm
.
tPow2x
[2];

619 
øãsAºay
[
øã54mb
] = 
èrgëPowîOfdm
.
tPow2x
[3];

620 
øãsAºay
[
øãXr
] = 
èrgëPowîOfdm
.
tPow2x
[0];

622 
i
 = 0; i < 
	`ARRAY_SIZE
(
èrgëPowîHt20
.
tPow2x
); i++)

623 
øãsAºay
[
øãHt20_0
 + 
i
] = 
èrgëPowîHt20
.
tPow2x
[i];

625 
øãsAºay
[
øã1l
] = 
èrgëPowîCck
.
tPow2x
[0];

626 
øãsAºay
[
øã2s
] =Ñ©esAºay[
øã2l
] = 
èrgëPowîCck
.
tPow2x
[1];

627 
øãsAºay
[
øã5_5s
] =Ñ©esAºay[
øã5_5l
] = 
èrgëPowîCck
.
tPow2x
[2];

628 
øãsAºay
[
øã11s
] =Ñ©esAºay[
øã11l
] = 
èrgëPowîCck
.
tPow2x
[3];

630 i‡(
	`IS_CHAN_HT40
(
ch™
)) {

631 
i
 = 0; i < 
	`ARRAY_SIZE
(
èrgëPowîHt40
.
tPow2x
); i++) {

632 
øãsAºay
[
øãHt40_0
 + 
i
] =

633 
èrgëPowîHt40
.
tPow2x
[
i
];

635 
øãsAºay
[
øãDupOfdm
] = 
èrgëPowîHt40
.
tPow2x
[0];

636 
øãsAºay
[
øãDupCck
] = 
èrgëPowîHt40
.
tPow2x
[0];

637 
øãsAºay
[
øãExtOfdm
] = 
èrgëPowîOfdmExt
.
tPow2x
[0];

638 
øãsAºay
[
øãExtCck
] = 
èrgëPowîCckExt
.
tPow2x
[0];

641 #unde‡
CMP_TEST_GRP


642 
	}
}

644 
	$©h9k_hw_4k_£t_txpowî
(
©h_hw
 *
ah
,

645 
©h9k_ch™√l
 *
ch™
,

646 
u16
 
cfgCé
,

647 
u8
 
twi˚A¡í«Redu˘i⁄
,

648 
u8
 
powîLimô
, 
boﬁ
 
ã°
)

650 
©h_ªguœt‹y
 *
ªguœt‹y
 = 
	`©h9k_hw_ªguœt‹y
(
ah
);

651 
¨5416_ì¥om_4k
 *
pEïD©a
 = &
ah
->
ì¥om
.
m≠4k
;

652 
modÆ_ìp_4k_hódî
 *
pModÆ
 = &
pEïD©a
->
modÆHódî
;

653 
öt16_t
 
øãsAºay
[
Ar5416R©eSize
];

654 
u8
 
ht40PowîIncF‹Pdadc
 = 2;

655 
i
;

657 
	`mem£t
(
øãsAºay
, 0, (ratesArray));

659 i‡((
pEïD©a
->
ba£EïHódî
.
vîsi⁄
 & 
AR5416_EEP_VER_MINOR_MASK
) >=

660 
AR5416_EEP_MINOR_VER_2
) {

661 
ht40PowîIncF‹Pdadc
 = 
pModÆ
->ht40PowerIncForPdadc;

664 
	`©h9k_hw_£t_4k_powî_≥r_øã_èbÀ
(
ah
, 
ch™
,

665 &
øãsAºay
[0], 
cfgCé
,

666 
twi˚A¡í«Redu˘i⁄
,

667 
powîLimô
);

669 
	`©h9k_hw_£t_4k_powî_ˇl_èbÀ
(
ah
, 
ch™
);

671 
ªguœt‹y
->
max_powî_Àvñ
 = 0;

672 
i
 = 0; i < 
	`ARRAY_SIZE
(
øãsAºay
); i++) {

673 i‡(
øãsAºay
[
i
] > 
MAX_RATE_POWER
)

674 
øãsAºay
[
i
] = 
MAX_RATE_POWER
;

676 i‡(
øãsAºay
[
i
] > 
ªguœt‹y
->
max_powî_Àvñ
)

677 
ªguœt‹y
->
max_powî_Àvñ
 = 
øãsAºay
[
i
];

680 i‡(
ã°
)

683 
i
 = 0; i < 
Ar5416R©eSize
; i++)

684 
øãsAºay
[
i
] -
AR5416_PWR_TABLE_OFFSET_DB
 * 2;

686 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

689 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE1
,

690 
	`ATH9K_POW_SM
(
øãsAºay
[
øã18mb
], 24)

691 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã12mb
], 16)

692 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã9mb
], 8)

693 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã6mb
], 0));

694 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE2
,

695 
	`ATH9K_POW_SM
(
øãsAºay
[
øã54mb
], 24)

696 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã48mb
], 16)

697 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã36mb
], 8)

698 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã24mb
], 0));

701 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE3
,

702 
	`ATH9K_POW_SM
(
øãsAºay
[
øã2s
], 24)

703 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã2l
], 16)

704 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãXr
], 8)

705 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã1l
], 0));

706 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE4
,

707 
	`ATH9K_POW_SM
(
øãsAºay
[
øã11s
], 24)

708 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã11l
], 16)

709 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã5_5s
], 8)

710 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã5_5l
], 0));

713 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE5
,

714 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt20_3
], 24)

715 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt20_2
], 16)

716 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt20_1
], 8)

717 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt20_0
], 0));

718 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE6
,

719 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt20_7
], 24)

720 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt20_6
], 16)

721 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt20_5
], 8)

722 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt20_4
], 0));

725 i‡(
	`IS_CHAN_HT40
(
ch™
)) {

726 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE7
,

727 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_3
] +

728 
ht40PowîIncF‹Pdadc
, 24)

729 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_2
] +

730 
ht40PowîIncF‹Pdadc
, 16)

731 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_1
] +

732 
ht40PowîIncF‹Pdadc
, 8)

733 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_0
] +

734 
ht40PowîIncF‹Pdadc
, 0));

735 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE8
,

736 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_7
] +

737 
ht40PowîIncF‹Pdadc
, 24)

738 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_6
] +

739 
ht40PowîIncF‹Pdadc
, 16)

740 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_5
] +

741 
ht40PowîIncF‹Pdadc
, 8)

742 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_4
] +

743 
ht40PowîIncF‹Pdadc
, 0));

744 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE9
,

745 
	`ATH9K_POW_SM
(
øãsAºay
[
øãExtOfdm
], 24)

746 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãExtCck
], 16)

747 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãDupOfdm
], 8)

748 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãDupCck
], 0));

751 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

752 
	}
}

754 
	$©h9k_hw_4k_£t_gaö
(
©h_hw
 *
ah
,

755 
modÆ_ìp_4k_hódî
 *
pModÆ
,

756 
¨5416_ì¥om_4k
 *
ìp
,

757 
u8
 
txRxAâíLoˇl
)

759 
	`REG_WRITE
(
ah
, 
AR_PHY_SWITCH_CHAIN_0
,

760 
pModÆ
->
™tCålChaö
[0]);

762 
	`REG_WRITE
(
ah
, 
	`AR_PHY_TIMING_CTRL4
(0),

763 (
	`REG_READ
(
ah
, 
	`AR_PHY_TIMING_CTRL4
(0)) &

764 ~(
AR_PHY_TIMING_CTRL4_IQCORR_Q_Q_COFF
 |

765 
AR_PHY_TIMING_CTRL4_IQCORR_Q_I_COFF
)) |

766 
	`SM
(
pModÆ
->
iqCÆICh
[0], 
AR_PHY_TIMING_CTRL4_IQCORR_Q_I_COFF
) |

767 
	`SM
(
pModÆ
->
iqCÆQCh
[0], 
AR_PHY_TIMING_CTRL4_IQCORR_Q_Q_COFF
));

769 i‡((
ìp
->
ba£EïHódî
.
vîsi⁄
 & 
AR5416_EEP_VER_MINOR_MASK
) >=

770 
AR5416_EEP_MINOR_VER_3
) {

771 
txRxAâíLoˇl
 = 
pModÆ
->
txRxAâíCh
[0];

773 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_GAIN_2GHZ
,

774 
AR_PHY_GAIN_2GHZ_XATTEN1_MARGIN
, 
pModÆ
->
bswM¨gö
[0]);

775 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_GAIN_2GHZ
,

776 
AR_PHY_GAIN_2GHZ_XATTEN1_DB
, 
pModÆ
->
bswAâí
[0]);

777 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_GAIN_2GHZ
,

778 
AR_PHY_GAIN_2GHZ_XATTEN2_MARGIN
,

779 
pModÆ
->
x©ãn2M¨gö
[0]);

780 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_GAIN_2GHZ
,

781 
AR_PHY_GAIN_2GHZ_XATTEN2_DB
, 
pModÆ
->
x©ãn2Db
[0]);

784 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_GAIN_2GHZ
 + 0x1000,

785 
AR_PHY_GAIN_2GHZ_XATTEN1_MARGIN
,

786 
pModÆ
->
bswM¨gö
[0]);

787 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_GAIN_2GHZ
 + 0x1000,

788 
AR_PHY_GAIN_2GHZ_XATTEN1_DB
, 
pModÆ
->
bswAâí
[0]);

789 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_GAIN_2GHZ
 + 0x1000,

790 
AR_PHY_GAIN_2GHZ_XATTEN2_MARGIN
,

791 
pModÆ
->
x©ãn2M¨gö
[0]);

792 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_GAIN_2GHZ
 + 0x1000,

793 
AR_PHY_GAIN_2GHZ_XATTEN2_DB
,

794 
pModÆ
->
x©ãn2Db
[0]);

797 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_RXGAIN
,

798 
AR9280_PHY_RXGAIN_TXRX_ATTEN
, 
txRxAâíLoˇl
);

799 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_RXGAIN
,

800 
AR9280_PHY_RXGAIN_TXRX_MARGIN
, 
pModÆ
->
rxTxM¨göCh
[0]);

802 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_RXGAIN
 + 0x1000,

803 
AR9280_PHY_RXGAIN_TXRX_ATTEN
, 
txRxAâíLoˇl
);

804 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_RXGAIN
 + 0x1000,

805 
AR9280_PHY_RXGAIN_TXRX_MARGIN
, 
pModÆ
->
rxTxM¨göCh
[0]);

806 
	}
}

812 
	$©h9k_hw_4k_£t_bﬂrd_vÆues
(
©h_hw
 *
ah
,

813 
©h9k_ch™√l
 *
ch™
)

815 
©h9k_hw_ˇ∑bûôõs
 *
pC≠
 = &
ah
->
ˇps
;

816 
modÆ_ìp_4k_hódî
 *
pModÆ
;

817 
¨5416_ì¥om_4k
 *
ìp
 = &
ah
->
ì¥om
.
m≠4k
;

818 
ba£_ìp_hódî_4k
 *
pBa£
 = &
ìp
->
ba£EïHódî
;

819 
u8
 
txRxAâíLoˇl
;

820 
u8
 
ob
[5], 
db1
[5], 
db2
[5];

821 
u8
 
™t_div_c⁄åﬁ1
, 
™t_div_c⁄åﬁ2
;

822 
u8
 
bb_desúed_sˇÀ
;

823 
u32
 
ªgVÆ
;

825 
pModÆ
 = &
ìp
->
modÆHódî
;

826 
txRxAâíLoˇl
 = 23;

828 
	`REG_WRITE
(
ah
, 
AR_PHY_SWITCH_COM
, 
pModÆ
->
™tCålComm⁄
);

831 
	`©h9k_hw_4k_£t_gaö
(
ah
, 
pModÆ
, 
ìp
, 
txRxAâíLoˇl
);

834 i‡(
pModÆ
->
vîsi⁄
 >= 3) {

835 
™t_div_c⁄åﬁ1
 = 
pModÆ
->
™tdiv_˘l1
;

836 
™t_div_c⁄åﬁ2
 = 
pModÆ
->
™tdiv_˘l2
;

838 
ªgVÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_MULTICHAIN_GAIN_CTL
);

839 
ªgVÆ
 &(~(
AR_PHY_9285_ANT_DIV_CTL_ALL
));

841 
ªgVÆ
 |
	`SM
(
™t_div_c⁄åﬁ1
,

842 
AR_PHY_9285_ANT_DIV_CTL
);

843 
ªgVÆ
 |
	`SM
(
™t_div_c⁄åﬁ2
,

844 
AR_PHY_9285_ANT_DIV_ALT_LNACONF
);

845 
ªgVÆ
 |
	`SM
((
™t_div_c⁄åﬁ2
 >> 2),

846 
AR_PHY_9285_ANT_DIV_MAIN_LNACONF
);

847 
ªgVÆ
 |
	`SM
((
™t_div_c⁄åﬁ1
 >> 1),

848 
AR_PHY_9285_ANT_DIV_ALT_GAINTB
);

849 
ªgVÆ
 |
	`SM
((
™t_div_c⁄åﬁ1
 >> 2),

850 
AR_PHY_9285_ANT_DIV_MAIN_GAINTB
);

853 
	`REG_WRITE
(
ah
, 
AR_PHY_MULTICHAIN_GAIN_CTL
, 
ªgVÆ
);

854 
ªgVÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_MULTICHAIN_GAIN_CTL
);

855 
ªgVÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_CCK_DETECT
);

856 
ªgVÆ
 &(~
AR_PHY_CCK_DETECT_BB_ENABLE_ANT_FAST_DIV
);

857 
ªgVÆ
 |
	`SM
((
™t_div_c⁄åﬁ1
 >> 3),

858 
AR_PHY_CCK_DETECT_BB_ENABLE_ANT_FAST_DIV
);

860 
	`REG_WRITE
(
ah
, 
AR_PHY_CCK_DETECT
, 
ªgVÆ
);

861 
ªgVÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_CCK_DETECT
);

863 i‡(
pC≠
->
hw_ˇps
 & 
ATH9K_HW_CAP_ANT_DIV_COMB
) {

868 
ªgVÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_MULTICHAIN_GAIN_CTL
);

869 
ªgVÆ
 &(~(
AR_PHY_9285_ANT_DIV_MAIN_LNACONF
 |

870 
AR_PHY_9285_ANT_DIV_ALT_LNACONF
));

872 
ªgVÆ
 |(
ATH_ANT_DIV_COMB_LNA1
 <<

873 
AR_PHY_9285_ANT_DIV_MAIN_LNACONF_S
);

874 
ªgVÆ
 |(
ATH_ANT_DIV_COMB_LNA2
 <<

875 
AR_PHY_9285_ANT_DIV_ALT_LNACONF_S
);

876 
ªgVÆ
 &(~(
AR_PHY_9285_FAST_DIV_BIAS
));

877 
ªgVÆ
 |(0 << 
AR_PHY_9285_FAST_DIV_BIAS_S
);

878 
	`REG_WRITE
(
ah
, 
AR_PHY_MULTICHAIN_GAIN_CTL
, 
ªgVÆ
);

882 i‡(
pModÆ
->
vîsi⁄
 >= 2) {

883 
ob
[0] = 
pModÆ
->
ob_0
;

884 
ob
[1] = 
pModÆ
->
ob_1
;

885 
ob
[2] = 
pModÆ
->
ob_2
;

886 
ob
[3] = 
pModÆ
->
ob_3
;

887 
ob
[4] = 
pModÆ
->
ob_4
;

889 
db1
[0] = 
pModÆ
->
db1_0
;

890 
db1
[1] = 
pModÆ
->
db1_1
;

891 
db1
[2] = 
pModÆ
->
db1_2
;

892 
db1
[3] = 
pModÆ
->
db1_3
;

893 
db1
[4] = 
pModÆ
->
db1_4
;

895 
db2
[0] = 
pModÆ
->
db2_0
;

896 
db2
[1] = 
pModÆ
->
db2_1
;

897 
db2
[2] = 
pModÆ
->
db2_2
;

898 
db2
[3] = 
pModÆ
->
db2_3
;

899 
db2
[4] = 
pModÆ
->
db2_4
;

900 } i‡(
pModÆ
->
vîsi⁄
 == 1) {

901 
ob
[0] = 
pModÆ
->
ob_0
;

902 
ob
[1] = ob[2] = ob[3] = ob[4] = 
pModÆ
->
ob_1
;

903 
db1
[0] = 
pModÆ
->
db1_0
;

904 
db1
[1] = db1[2] = db1[3] = db1[4] = 
pModÆ
->
db1_1
;

905 
db2
[0] = 
pModÆ
->
db2_0
;

906 
db2
[1] = db2[2] = db2[3] = db2[4] = 
pModÆ
->
db2_1
;

908 
i
;

910 
i
 = 0; i < 5; i++) {

911 
ob
[
i
] = 
pModÆ
->
ob_0
;

912 
db1
[
i
] = 
pModÆ
->
db1_0
;

913 
db2
[
i
] = 
pModÆ
->
db1_0
;

917 i‡(
	`AR_SREV_9271
(
ah
)) {

918 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
,

919 
AR9285_AN_RF2G3
,

920 
AR9271_AN_RF2G3_OB_cck
,

921 
AR9271_AN_RF2G3_OB_cck_S
,

922 
ob
[0]);

923 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
,

924 
AR9285_AN_RF2G3
,

925 
AR9271_AN_RF2G3_OB_psk
,

926 
AR9271_AN_RF2G3_OB_psk_S
,

927 
ob
[1]);

928 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
,

929 
AR9285_AN_RF2G3
,

930 
AR9271_AN_RF2G3_OB_qam
,

931 
AR9271_AN_RF2G3_OB_qam_S
,

932 
ob
[2]);

933 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
,

934 
AR9285_AN_RF2G3
,

935 
AR9271_AN_RF2G3_DB_1
,

936 
AR9271_AN_RF2G3_DB_1_S
,

937 
db1
[0]);

938 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
,

939 
AR9285_AN_RF2G4
,

940 
AR9271_AN_RF2G4_DB_2
,

941 
AR9271_AN_RF2G4_DB_2_S
,

942 
db2
[0]);

944 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
,

945 
AR9285_AN_RF2G3
,

946 
AR9285_AN_RF2G3_OB_0
,

947 
AR9285_AN_RF2G3_OB_0_S
,

948 
ob
[0]);

949 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
,

950 
AR9285_AN_RF2G3
,

951 
AR9285_AN_RF2G3_OB_1
,

952 
AR9285_AN_RF2G3_OB_1_S
,

953 
ob
[1]);

954 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
,

955 
AR9285_AN_RF2G3
,

956 
AR9285_AN_RF2G3_OB_2
,

957 
AR9285_AN_RF2G3_OB_2_S
,

958 
ob
[2]);

959 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
,

960 
AR9285_AN_RF2G3
,

961 
AR9285_AN_RF2G3_OB_3
,

962 
AR9285_AN_RF2G3_OB_3_S
,

963 
ob
[3]);

964 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
,

965 
AR9285_AN_RF2G3
,

966 
AR9285_AN_RF2G3_OB_4
,

967 
AR9285_AN_RF2G3_OB_4_S
,

968 
ob
[4]);

970 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
,

971 
AR9285_AN_RF2G3
,

972 
AR9285_AN_RF2G3_DB1_0
,

973 
AR9285_AN_RF2G3_DB1_0_S
,

974 
db1
[0]);

975 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
,

976 
AR9285_AN_RF2G3
,

977 
AR9285_AN_RF2G3_DB1_1
,

978 
AR9285_AN_RF2G3_DB1_1_S
,

979 
db1
[1]);

980 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
,

981 
AR9285_AN_RF2G3
,

982 
AR9285_AN_RF2G3_DB1_2
,

983 
AR9285_AN_RF2G3_DB1_2_S
,

984 
db1
[2]);

985 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
,

986 
AR9285_AN_RF2G4
,

987 
AR9285_AN_RF2G4_DB1_3
,

988 
AR9285_AN_RF2G4_DB1_3_S
,

989 
db1
[3]);

990 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
,

991 
AR9285_AN_RF2G4
,

992 
AR9285_AN_RF2G4_DB1_4
,

993 
AR9285_AN_RF2G4_DB1_4_S
, 
db1
[4]);

995 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
,

996 
AR9285_AN_RF2G4
,

997 
AR9285_AN_RF2G4_DB2_0
,

998 
AR9285_AN_RF2G4_DB2_0_S
,

999 
db2
[0]);

1000 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
,

1001 
AR9285_AN_RF2G4
,

1002 
AR9285_AN_RF2G4_DB2_1
,

1003 
AR9285_AN_RF2G4_DB2_1_S
,

1004 
db2
[1]);

1005 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
,

1006 
AR9285_AN_RF2G4
,

1007 
AR9285_AN_RF2G4_DB2_2
,

1008 
AR9285_AN_RF2G4_DB2_2_S
,

1009 
db2
[2]);

1010 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
,

1011 
AR9285_AN_RF2G4
,

1012 
AR9285_AN_RF2G4_DB2_3
,

1013 
AR9285_AN_RF2G4_DB2_3_S
,

1014 
db2
[3]);

1015 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
,

1016 
AR9285_AN_RF2G4
,

1017 
AR9285_AN_RF2G4_DB2_4
,

1018 
AR9285_AN_RF2G4_DB2_4_S
,

1019 
db2
[4]);

1023 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SETTLING
, 
AR_PHY_SETTLING_SWITCH
,

1024 
pModÆ
->
swôchSëéög
);

1025 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_DESIRED_SZ
, 
AR_PHY_DESIRED_SZ_ADC
,

1026 
pModÆ
->
adcDesúedSize
);

1028 
	`REG_WRITE
(
ah
, 
AR_PHY_RF_CTL4
,

1029 
	`SM
(
pModÆ
->
txEndToX∑Off
, 
AR_PHY_RF_CTL4_TX_END_XPAA_OFF
) |

1030 
	`SM
(
pModÆ
->
txEndToX∑Off
, 
AR_PHY_RF_CTL4_TX_END_XPAB_OFF
) |

1031 
	`SM
(
pModÆ
->
txFømeToX∑On
, 
AR_PHY_RF_CTL4_FRAME_XPAA_ON
) |

1032 
	`SM
(
pModÆ
->
txFømeToX∑On
, 
AR_PHY_RF_CTL4_FRAME_XPAB_ON
));

1034 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_RF_CTL3
, 
AR_PHY_TX_END_TO_A2_RX_ON
,

1035 
pModÆ
->
txEndToRxOn
);

1037 i‡(
	`AR_SREV_9271_10
(
ah
))

1038 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_RF_CTL3
, 
AR_PHY_TX_END_TO_A2_RX_ON
,

1039 
pModÆ
->
txEndToRxOn
);

1040 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_CCA
, 
AR9280_PHY_CCA_THRESH62
,

1041 
pModÆ
->
thªsh62
);

1042 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_EXT_CCA0
, 
AR_PHY_EXT_CCA0_THRESH62
,

1043 
pModÆ
->
thªsh62
);

1045 i‡((
ìp
->
ba£EïHódî
.
vîsi⁄
 & 
AR5416_EEP_VER_MINOR_MASK
) >=

1046 
AR5416_EEP_MINOR_VER_2
) {

1047 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_RF_CTL2
, 
AR_PHY_TX_END_DATA_START
,

1048 
pModÆ
->
txFømeToD©aSèπ
);

1049 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_RF_CTL2
, 
AR_PHY_TX_END_PA_ON
,

1050 
pModÆ
->
txFømeToPaOn
);

1053 i‡((
ìp
->
ba£EïHódî
.
vîsi⁄
 & 
AR5416_EEP_VER_MINOR_MASK
) >=

1054 
AR5416_EEP_MINOR_VER_3
) {

1055 i‡(
	`IS_CHAN_HT40
(
ch™
))

1056 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SETTLING
,

1057 
AR_PHY_SETTLING_SWITCH
,

1058 
pModÆ
->
swSëéeHt40
);

1061 
bb_desúed_sˇÀ
 = (
pModÆ
->
bb_sˇÀ_smπ_™ã¬a
 &

1062 
EEP_4K_BB_DESIRED_SCALE_MASK
);

1063 i‡((
pBa£
->
txGaöTy≥
 =0Ë&& (
bb_desúed_sˇÀ
 != 0)) {

1064 
u32
 
pwr˘æ
, 
mask
, 
˛r
;

1066 
mask
 = 
	`BIT
(0)|BIT(5)|BIT(10)|BIT(15)|BIT(20)|BIT(25);

1067 
pwr˘æ
 = 
mask
 * 
bb_desúed_sˇÀ
;

1068 
˛r
 = 
mask
 * 0x1f;

1069 
	`REG_RMW
(
ah
, 
AR_PHY_TX_PWRCTRL8
, 
pwr˘æ
, 
˛r
);

1070 
	`REG_RMW
(
ah
, 
AR_PHY_TX_PWRCTRL10
, 
pwr˘æ
, 
˛r
);

1071 
	`REG_RMW
(
ah
, 
AR_PHY_CH0_TX_PWRCTRL12
, 
pwr˘æ
, 
˛r
);

1073 
mask
 = 
	`BIT
(0)|BIT(5)|BIT(15);

1074 
pwr˘æ
 = 
mask
 * 
bb_desúed_sˇÀ
;

1075 
˛r
 = 
mask
 * 0x1f;

1076 
	`REG_RMW
(
ah
, 
AR_PHY_TX_PWRCTRL9
, 
pwr˘æ
, 
˛r
);

1078 
mask
 = 
	`BIT
(0)|BIT(5);

1079 
pwr˘æ
 = 
mask
 * 
bb_desúed_sˇÀ
;

1080 
˛r
 = 
mask
 * 0x1f;

1081 
	`REG_RMW
(
ah
, 
AR_PHY_CH0_TX_PWRCTRL11
, 
pwr˘æ
, 
˛r
);

1082 
	`REG_RMW
(
ah
, 
AR_PHY_CH0_TX_PWRCTRL13
, 
pwr˘æ
, 
˛r
);

1084 
	}
}

1086 
u16
 
	$©h9k_hw_4k_gë_•ur_ch™√l
(
©h_hw
 *
ah
, 
u16
 
i
, 
boﬁ
 
is2GHz
)

1088  
ah
->
ì¥om
.
m≠4k
.
modÆHódî
.
•urCh™s
[
i
].
•urCh™
;

1089 
	}
}

1091 c⁄° 
ì¥om_›s
 
	gìp_4k_›s
 = {

1092 .
check_ì¥om
 = 
©h9k_hw_4k_check_ì¥om
,

1093 .
	ggë_ì¥om
 = 
©h9k_hw_4k_gë_ì¥om
,

1094 .
	gfûl_ì¥om
 = 
©h9k_hw_4k_fûl_ì¥om
,

1095 .
	gdump_ì¥om
 = 
©h9k_hw_4k_dump_ì¥om
,

1096 .
	ggë_ì¥om_vî
 = 
©h9k_hw_4k_gë_ì¥om_vî
,

1097 .
	ggë_ì¥om_ªv
 = 
©h9k_hw_4k_gë_ì¥om_ªv
,

1098 .
	g£t_bﬂrd_vÆues
 = 
©h9k_hw_4k_£t_bﬂrd_vÆues
,

1099 .
	g£t_txpowî
 = 
©h9k_hw_4k_£t_txpowî
,

1100 .
	ggë_•ur_ch™√l
 = 
©h9k_hw_4k_gë_•ur_ch™√l


	@eeprom_9287.c

17 
	~<asm/u«lig√d.h
>

18 
	~"hw.h
"

19 
	~"¨9002_phy.h
"

21 
	#SIZE_EEPROM_AR9287
 ((
¨9287_ì¥om
Ë/ (
u16
))

	)

23 
	$©h9k_hw_¨9287_gë_ì¥om_vî
(
©h_hw
 *
ah
)

25  (
ah
->
ì¥om
.
m≠9287
.
ba£EïHódî
.
vîsi⁄
 >> 12) & 0xF;

26 
	}
}

28 
	$©h9k_hw_¨9287_gë_ì¥om_ªv
(
©h_hw
 *
ah
)

30  (
ah
->
ì¥om
.
m≠9287
.
ba£EïHódî
.
vîsi⁄
) & 0xFFF;

31 
	}
}

33 
boﬁ
 
	$__©h9k_hw_¨9287_fûl_ì¥om
(
©h_hw
 *
ah
)

35 
¨9287_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
m≠9287
;

36 
u16
 *
ìp_d©a
;

37 
addr
, 
ìp_°¨t_loc
 = 
AR9287_EEP_START_LOC
;

38 
ìp_d©a
 = (
u16
 *)
ìp
;

40 
addr
 = 0;ádd∏< 
SIZE_EEPROM_AR9287
;áddr++) {

41 i‡(!
	`©h9k_hw_nvøm_ªad
(
ah
, 
addr
 + 
ìp_°¨t_loc
, 
ìp_d©a
))

42  
Ál£
;

43 
ìp_d©a
++;

46  
åue
;

47 
	}
}

49 
boﬁ
 
	$__©h9k_hw_usb_¨9287_fûl_ì¥om
(
©h_hw
 *
ah
)

51 
u16
 *
ìp_d©a
 = (u16 *)&
ah
->
ì¥om
.
m≠9287
;

53 
	`©h9k_hw_usb_gí_fûl_ì¥om
(
ah
, 
ìp_d©a
,

54 
AR9287_HTC_EEP_START_LOC
,

55 
SIZE_EEPROM_AR9287
);

56  
åue
;

57 
	}
}

59 
boﬁ
 
	$©h9k_hw_¨9287_fûl_ì¥om
(
©h_hw
 *
ah
)

61 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

63 i‡(!(
ah
->
ah_Êags
 & 
AH_NO_EEP_SWAP
)) {

64 
	`©h_dbg
(
comm⁄
, 
EEPROM
, "Reading from EEPROM,Çot flash\n");

67 i‡(
comm⁄
->
bus_›s
->
©h_bus_ty≥
 =
ATH_USB
)

68  
	`__©h9k_hw_usb_¨9287_fûl_ì¥om
(
ah
);

70  
	`__©h9k_hw_¨9287_fûl_ì¥om
(
ah
);

71 
	}
}

73 #i‡
deföed
(
CPTCFG_ATH9K_DEBUGFS
Ë|| deföed(
CPTCFG_ATH9K_HTC_DEBUGFS
)

74 
u32
 
	$¨9287_dump_modÆ_ì¥om
(*
buf
, 
u32
 
Àn
, u32 
size
,

75 
modÆ_ìp_¨9287_hódî
 *
modÆ_hdr
)

77 
	`PR_EEP
("Chaö0 A¡. C⁄åﬁ", 
modÆ_hdr
->
™tCålChaö
[0]);

78 
	`PR_EEP
("Chaö1 A¡. C⁄åﬁ", 
modÆ_hdr
->
™tCålChaö
[1]);

79 
	`PR_EEP
("A¡. Comm⁄ C⁄åﬁ", 
modÆ_hdr
->
™tCålComm⁄
);

80 
	`PR_EEP
("Chaö0 A¡. Gaö", 
modÆ_hdr
->
™ã¬aGaöCh
[0]);

81 
	`PR_EEP
("Chaö1 A¡. Gaö", 
modÆ_hdr
->
™ã¬aGaöCh
[1]);

82 
	`PR_EEP
("Swôch Sëée", 
modÆ_hdr
->
swôchSëéög
);

83 
	`PR_EEP
("Chaö0 TxRxAâí", 
modÆ_hdr
->
txRxAâíCh
[0]);

84 
	`PR_EEP
("Chaö1 TxRxAâí", 
modÆ_hdr
->
txRxAâíCh
[1]);

85 
	`PR_EEP
("Chaö0 RxTxM¨gö", 
modÆ_hdr
->
rxTxM¨göCh
[0]);

86 
	`PR_EEP
("Chaö1 RxTxM¨gö", 
modÆ_hdr
->
rxTxM¨göCh
[1]);

87 
	`PR_EEP
("ADC Desúed size", 
modÆ_hdr
->
adcDesúedSize
);

88 
	`PR_EEP
("txEndToX∑Off", 
modÆ_hdr
->
txEndToX∑Off
);

89 
	`PR_EEP
("txEndToRxOn", 
modÆ_hdr
->
txEndToRxOn
);

90 
	`PR_EEP
("txFømeToX∑On", 
modÆ_hdr
->
txFømeToX∑On
);

91 
	`PR_EEP
("CCA Thªshﬁd)", 
modÆ_hdr
->
thªsh62
);

92 
	`PR_EEP
("Chaö0 NF Thªshﬁd", 
modÆ_hdr
->
noi£Flo‹ThªshCh
[0]);

93 
	`PR_EEP
("Chaö1 NF Thªshﬁd", 
modÆ_hdr
->
noi£Flo‹ThªshCh
[1]);

94 
	`PR_EEP
("xpdGaö", 
modÆ_hdr
->
xpdGaö
);

95 
	`PR_EEP
("Exã∫Æ PD", 
modÆ_hdr
->
xpd
);

96 
	`PR_EEP
("Chaö0 I C€fficõ¡", 
modÆ_hdr
->
iqCÆICh
[0]);

97 
	`PR_EEP
("Chaö1 I C€fficõ¡", 
modÆ_hdr
->
iqCÆICh
[1]);

98 
	`PR_EEP
("Chaö0 Q C€fficõ¡", 
modÆ_hdr
->
iqCÆQCh
[0]);

99 
	`PR_EEP
("Chaö1 Q C€fficõ¡", 
modÆ_hdr
->
iqCÆQCh
[1]);

100 
	`PR_EEP
("pdGaöOvîœp", 
modÆ_hdr
->
pdGaöOvîœp
);

101 
	`PR_EEP
("xPA Bü†Levñ", 
modÆ_hdr
->
x∑BüsLvl
);

102 
	`PR_EEP
("txFømeToD©aSèπ", 
modÆ_hdr
->
txFømeToD©aSèπ
);

103 
	`PR_EEP
("txFømeToPaOn", 
modÆ_hdr
->
txFømeToPaOn
);

104 
	`PR_EEP
("HT40 Powî Inc.", 
modÆ_hdr
->
ht40PowîIncF‹Pdadc
);

105 
	`PR_EEP
("Chaö0 bswAâí", 
modÆ_hdr
->
bswAâí
[0]);

106 
	`PR_EEP
("Chaö1 bswAâí", 
modÆ_hdr
->
bswAâí
[1]);

107 
	`PR_EEP
("Chaö0 bswM¨gö", 
modÆ_hdr
->
bswM¨gö
[0]);

108 
	`PR_EEP
("Chaö1 bswM¨gö", 
modÆ_hdr
->
bswM¨gö
[1]);

109 
	`PR_EEP
("HT40 Swôch Sëée", 
modÆ_hdr
->
swSëéeHt40
);

110 
	`PR_EEP
("AR92x7 Vîsi⁄", 
modÆ_hdr
->
vîsi⁄
);

111 
	`PR_EEP
("DrivîBüs1", 
modÆ_hdr
->
db1
);

112 
	`PR_EEP
("DrivîBüs2", 
modÆ_hdr
->
db1
);

113 
	`PR_EEP
("CCK OuçutBüs", 
modÆ_hdr
->
ob_cck
);

114 
	`PR_EEP
("PSK OuçutBüs", 
modÆ_hdr
->
ob_psk
);

115 
	`PR_EEP
("QAM OuçutBüs", 
modÆ_hdr
->
ob_qam
);

116 
	`PR_EEP
("PAL_OFF OuçutBüs", 
modÆ_hdr
->
ob_∑l_off
);

118  
Àn
;

119 
	}
}

121 
u32
 
	$©h9k_hw_¨9287_dump_ì¥om
(
©h_hw
 *
ah
, 
boﬁ
 
dump_ba£_hdr
,

122 
u8
 *
buf
, 
u32
 
Àn
, u32 
size
)

124 
¨9287_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
m≠9287
;

125 
ba£_ìp_¨9287_hódî
 *
pBa£
 = &
ìp
->
ba£EïHódî
;

127 i‡(!
dump_ba£_hdr
) {

128 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen,

130 
Àn
 = 
	`¨9287_dump_modÆ_ì¥om
(
buf
,Üí, 
size
,

131 &
ìp
->
modÆHódî
);

132 
out
;

135 
	`PR_EEP
("Maj‹ Vîsi⁄", 
pBa£
->
vîsi⁄
 >> 12);

136 
	`PR_EEP
("Mö‹ Vîsi⁄", 
pBa£
->
vîsi⁄
 & 0xFFF);

137 
	`PR_EEP
("Checksum", 
pBa£
->
checksum
);

138 
	`PR_EEP
("Lígth", 
pBa£
->
Àngth
);

139 
	`PR_EEP
("RegDomaö1", 
pBa£
->
ªgDmn
[0]);

140 
	`PR_EEP
("RegDomaö2", 
pBa£
->
ªgDmn
[1]);

141 
	`PR_EEP
("TX Mask", 
pBa£
->
txMask
);

142 
	`PR_EEP
("RX Mask", 
pBa£
->
rxMask
);

143 
	`PR_EEP
("AŒow 5GHz", !!(
pBa£
->
›C≠Fœgs
 & 
AR5416_OPFLAGS_11A
));

144 
	`PR_EEP
("AŒow 2GHz", !!(
pBa£
->
›C≠Fœgs
 & 
AR5416_OPFLAGS_11G
));

145 
	`PR_EEP
("DißbÀ 2GHz HT20", !!(
pBa£
->
›C≠Fœgs
 &

146 
AR5416_OPFLAGS_N_2G_HT20
));

147 
	`PR_EEP
("DißbÀ 2GHz HT40", !!(
pBa£
->
›C≠Fœgs
 &

148 
AR5416_OPFLAGS_N_2G_HT40
));

149 
	`PR_EEP
("DißbÀ 5Ghz HT20", !!(
pBa£
->
›C≠Fœgs
 &

150 
AR5416_OPFLAGS_N_5G_HT20
));

151 
	`PR_EEP
("DißbÀ 5Ghz HT40", !!(
pBa£
->
›C≠Fœgs
 &

152 
AR5416_OPFLAGS_N_5G_HT40
));

153 
	`PR_EEP
("Big Endün", !!(
pBa£
->
ìpMisc
 & 0x01));

154 
	`PR_EEP
("CÆ Bö Maj‹ Vî", (
pBa£
->
böBuûdNumbî
 >> 24) & 0xFF);

155 
	`PR_EEP
("CÆ Bö Mö‹ Vî", (
pBa£
->
böBuûdNumbî
 >> 16) & 0xFF);

156 
	`PR_EEP
("CÆ Bö Buûd", (
pBa£
->
böBuûdNumbî
 >> 8) & 0xFF);

157 
	`PR_EEP
("Powî TabÀ Off£t", 
pBa£
->
pwrTabÀOff£t
);

158 
	`PR_EEP
("O≥nLo› Powî Cål", 
pBa£
->
›íLo›PwrC¡l
);

160 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%20s : %pM\n", "MacAddress",

161 
pBa£
->
macAddr
);

163 
out
:

164 i‡(
Àn
 > 
size
)

165 
Àn
 = 
size
;

167  
Àn
;

168 
	}
}

170 
u32
 
	$©h9k_hw_¨9287_dump_ì¥om
(
©h_hw
 *
ah
, 
boﬁ
 
dump_ba£_hdr
,

171 
u8
 *
buf
, 
u32
 
Àn
, u32 
size
)

174 
	}
}

178 
	$©h9k_hw_¨9287_check_ì¥om
(
©h_hw
 *
ah
)

180 
u32
 
sum
 = 0, 
ñ
, 
öãgî
;

181 
u16
 
ãmp
, 
w‹d
, 
magic
, 
magic2
, *
ìpd©a
;

182 
i
, 
addr
;

183 
boﬁ
 
√ed_sw≠
 = 
Ál£
;

184 
¨9287_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
m≠9287
;

185 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

187 i‡(!
	`©h9k_hw_u£_Êash
(
ah
)) {

188 i‡(!
	`©h9k_hw_nvøm_ªad
(
ah
, 
AR5416_EEPROM_MAGIC_OFFSET
,

189 &
magic
)) {

190 
	`©h_îr
(
comm⁄
, "Reading Magic # failed\n");

191  
Ál£
;

194 
	`©h_dbg
(
comm⁄
, 
EEPROM
, "Ród Magi¯0x%04X\n", 
magic
);

196 i‡(
magic
 !
AR5416_EEPROM_MAGIC
) {

197 
magic2
 = 
	`swab16
(
magic
);

199 i‡(
magic2
 =
AR5416_EEPROM_MAGIC
) {

200 
√ed_sw≠
 = 
åue
;

201 
ìpd©a
 = (
u16
 *)(&
ah
->
ì¥om
);

203 
addr
 = 0;ádd∏< 
SIZE_EEPROM_AR9287
;áddr++) {

204 
ãmp
 = 
	`swab16
(*
ìpd©a
);

205 *
ìpd©a
 = 
ãmp
;

206 
ìpd©a
++;

209 
	`©h_îr
(
comm⁄
,

211  -
EINVAL
;

216 
	`©h_dbg
(
comm⁄
, 
EEPROM
, "need_swap = %s\n",

217 
√ed_sw≠
 ? "True" : "False");

219 i‡(
√ed_sw≠
)

220 
ñ
 = 
	`swab16
(
ah
->
ì¥om
.
m≠9287
.
ba£EïHódî
.
Àngth
);

222 
ñ
 = 
ah
->
ì¥om
.
m≠9287
.
ba£EïHódî
.
Àngth
;

224 i‡(
ñ
 > (
¨9287_ì¥om
))

225 
ñ
 = (
¨9287_ì¥om
Ë/ (
u16
);

227 
ñ
 =É»/ (
u16
);

229 
ìpd©a
 = (
u16
 *)(&
ah
->
ì¥om
);

231 
i
 = 0; i < 
ñ
; i++)

232 
sum
 ^*
ìpd©a
++;

234 i‡(
√ed_sw≠
) {

235 
w‹d
 = 
	`swab16
(
ìp
->
ba£EïHódî
.
Àngth
);

236 
ìp
->
ba£EïHódî
.
Àngth
 = 
w‹d
;

238 
w‹d
 = 
	`swab16
(
ìp
->
ba£EïHódî
.
checksum
);

239 
ìp
->
ba£EïHódî
.
checksum
 = 
w‹d
;

241 
w‹d
 = 
	`swab16
(
ìp
->
ba£EïHódî
.
vîsi⁄
);

242 
ìp
->
ba£EïHódî
.
vîsi⁄
 = 
w‹d
;

244 
w‹d
 = 
	`swab16
(
ìp
->
ba£EïHódî
.
ªgDmn
[0]);

245 
ìp
->
ba£EïHódî
.
ªgDmn
[0] = 
w‹d
;

247 
w‹d
 = 
	`swab16
(
ìp
->
ba£EïHódî
.
ªgDmn
[1]);

248 
ìp
->
ba£EïHódî
.
ªgDmn
[1] = 
w‹d
;

250 
w‹d
 = 
	`swab16
(
ìp
->
ba£EïHódî
.
rfSûít
);

251 
ìp
->
ba£EïHódî
.
rfSûít
 = 
w‹d
;

253 
w‹d
 = 
	`swab16
(
ìp
->
ba£EïHódî
.
blueToŸhO±i⁄s
);

254 
ìp
->
ba£EïHódî
.
blueToŸhO±i⁄s
 = 
w‹d
;

256 
w‹d
 = 
	`swab16
(
ìp
->
ba£EïHódî
.
devi˚C≠
);

257 
ìp
->
ba£EïHódî
.
devi˚C≠
 = 
w‹d
;

259 
öãgî
 = 
	`swab32
(
ìp
->
modÆHódî
.
™tCålComm⁄
);

260 
ìp
->
modÆHódî
.
™tCålComm⁄
 = 
öãgî
;

262 
i
 = 0; i < 
AR9287_MAX_CHAINS
; i++) {

263 
öãgî
 = 
	`swab32
(
ìp
->
modÆHódî
.
™tCålChaö
[
i
]);

264 
ìp
->
modÆHódî
.
™tCålChaö
[
i
] = 
öãgî
;

267 
i
 = 0; i < 
AR_EEPROM_MODAL_SPURS
; i++) {

268 
w‹d
 = 
	`swab16
(
ìp
->
modÆHódî
.
•urCh™s
[
i
].
•urCh™
);

269 
ìp
->
modÆHódî
.
•urCh™s
[
i
].
•urCh™
 = 
w‹d
;

273 i‡(
sum
 !0xfff‡|| 
ah
->
ìp_›s
->
	`gë_ì¥om_vî
◊hË!
AR9287_EEP_VER


274 || 
ah
->
ìp_›s
->
	`gë_ì¥om_ªv
◊hË< 
AR5416_EEP_NO_BACK_VER
) {

275 
	`©h_îr
(
comm⁄
, "Bad EEPROM checksum 0x%x orÑevision 0x%04x\n",

276 
sum
, 
ah
->
ìp_›s
->
	`gë_ì¥om_vî
(ah));

277  -
EINVAL
;

281 
	}
}

283 
u32
 
	$©h9k_hw_¨9287_gë_ì¥om
(
©h_hw
 *
ah
,

284 
ì¥om_∑øm
 
∑øm
)

286 
¨9287_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
m≠9287
;

287 
modÆ_ìp_¨9287_hódî
 *
pModÆ
 = &
ìp
->
modÆHódî
;

288 
ba£_ìp_¨9287_hódî
 *
pBa£
 = &
ìp
->
ba£EïHódî
;

289 
u16
 
vî_mö‹
;

291 
vî_mö‹
 = 
pBa£
->
vîsi⁄
 & 
AR9287_EEP_VER_MINOR_MASK
;

293 
∑øm
) {

294 
EEP_NFTHRESH_2
:

295  
pModÆ
->
noi£Flo‹ThªshCh
[0];

296 
EEP_MAC_LSW
:

297  
	`gë_u«lig√d_be16
(
pBa£
->
macAddr
);

298 
EEP_MAC_MID
:

299  
	`gë_u«lig√d_be16
(
pBa£
->
macAddr
 + 2);

300 
EEP_MAC_MSW
:

301  
	`gë_u«lig√d_be16
(
pBa£
->
macAddr
 + 4);

302 
EEP_REG_0
:

303  
pBa£
->
ªgDmn
[0];

304 
EEP_OP_CAP
:

305  
pBa£
->
devi˚C≠
;

306 
EEP_OP_MODE
:

307  
pBa£
->
›C≠Fœgs
;

308 
EEP_RF_SILENT
:

309  
pBa£
->
rfSûít
;

310 
EEP_MINOR_REV
:

311  
vî_mö‹
;

312 
EEP_TX_MASK
:

313  
pBa£
->
txMask
;

314 
EEP_RX_MASK
:

315  
pBa£
->
rxMask
;

316 
EEP_DEV_TYPE
:

317  
pBa£
->
devi˚Ty≥
;

318 
EEP_OL_PWRCTRL
:

319  
pBa£
->
›íLo›PwrC¡l
;

320 
EEP_TEMPSENSE_SLOPE
:

321 i‡(
vî_mö‹
 >
AR9287_EEP_MINOR_VER_2
)

322  
pBa£
->
ãmpSísSl›e
;

325 
EEP_TEMPSENSE_SLOPE_PAL_ON
:

326 i‡(
vî_mö‹
 >
AR9287_EEP_MINOR_VER_3
)

327  
pBa£
->
ãmpSísSl›ePÆOn
;

330 
EEP_ANTENNA_GAIN_2G
:

331  
	`max_t
(
u8
, 
pModÆ
->
™ã¬aGaöCh
[0],

332 
pModÆ
->
™ã¬aGaöCh
[1]);

336 
	}
}

338 
	$¨9287_ì¥om_gë_tx_gaö_ödex
(
©h_hw
 *
ah
,

339 
©h9k_ch™√l
 *
ch™
,

340 
ˇl_d©a_›_lo›_¨9287
 *
pRawD©a£tOpLo›
,

341 
u8
 *
pCÆCh™s
, 
u16
 
avaûPõrs
, 
öt8_t
 *
pPwr
)

343 
u16
 
idxL
 = 0, 
idxR
 = 0, 
numPõrs
;

344 
boﬁ
 
m©ch
;

345 
ch™_˚¡îs
 
˚¡îs
;

347 
	`©h9k_hw_gë_ch™√l_˚¡îs
(
ah
, 
ch™
, &
˚¡îs
);

349 
numPõrs
 = 0;ÇumPõr†< 
avaûPõrs
;ÇumPiers++) {

350 i‡(
pCÆCh™s
[
numPõrs
] =
AR5416_BCHAN_UNUSED
)

354 
m©ch
 = 
	`©h9k_hw_gë_lowî_uµî_ödex
(

355 (
u8
)
	`FREQ2FBIN
(
˚¡îs
.
sy¡h_˚¡î
, 
	`IS_CHAN_2GHZ
(
ch™
)),

356 
pCÆCh™s
, 
numPõrs
, &
idxL
, &
idxR
);

358 i‡(
m©ch
) {

359 *
pPwr
 = (
öt8_t
Ë
pRawD©a£tOpLo›
[
idxL
].
pwrPdg
[0][0];

361 *
pPwr
 = ((
öt8_t
Ë
pRawD©a£tOpLo›
[
idxL
].
pwrPdg
[0][0] +

362 (
öt8_t
Ë
pRawD©a£tOpLo›
[
idxR
].
pwrPdg
[0][0])/2;

365 
	}
}

367 
	$¨9287_ì¥om_ﬁpc_£t_pdadcs
(
©h_hw
 *
ah
,

368 
öt32_t
 
txPowî
, 
u16
 
chaö
)

370 
u32
 
tmpVÆ
;

371 
u32
 
a
;

375 
tmpVÆ
 = 
	`REG_READ
(
ah
, 0xa270);

376 
tmpVÆ
 =ÅmpVal & 0xFCFFFFFF;

377 
tmpVÆ
 =ÅmpVal | (0x3 << 24);

378 
	`REG_WRITE
(
ah
, 0xa270, 
tmpVÆ
);

382 
tmpVÆ
 = 
	`REG_READ
(
ah
, 0xb270);

383 
tmpVÆ
 =ÅmpVal & 0xFCFFFFFF;

384 
tmpVÆ
 =ÅmpVal | (0x3 << 24);

385 
	`REG_WRITE
(
ah
, 0xb270, 
tmpVÆ
);

389 i‡(
chaö
 == 0) {

390 
tmpVÆ
 = 
	`REG_READ
(
ah
, 0xa398);

391 
tmpVÆ
 =ÅmpVal & 0xff00ffff;

392 
a
 = (
txPowî
)&0xff;

393 
tmpVÆ
 =ÅmpVÆ | (
a
 << 16);

394 
	`REG_WRITE
(
ah
, 0xa398, 
tmpVÆ
);

399 i‡(
chaö
 == 1) {

400 
tmpVÆ
 = 
	`REG_READ
(
ah
, 0xb398);

401 
tmpVÆ
 =ÅmpVal & 0xff00ffff;

402 
a
 = (
txPowî
)&0xff;

403 
tmpVÆ
 =ÅmpVÆ | (
a
 << 16);

404 
	`REG_WRITE
(
ah
, 0xb398, 
tmpVÆ
);

406 
	}
}

408 
	$©h9k_hw_£t_¨9287_powî_ˇl_èbÀ
(
©h_hw
 *
ah
,

409 
©h9k_ch™√l
 *
ch™
)

411 
ˇl_d©a_≥r_‰eq_¨9287
 *
pRawD©a£t
;

412 
ˇl_d©a_›_lo›_¨9287
 *
pRawD©a£tO≥nLo›
;

413 
u8
 *
pCÆBCh™s
 = 
NULL
;

414 
u16
 
pdGaöOvîœp_t2
;

415 
u8
 
pdadcVÆues
[
AR5416_NUM_PDADC_VALUES
];

416 
u16
 
gaöBound¨õs
[
AR5416_PD_GAINS_IN_MASK
];

417 
u16
 
numPõrs
 = 0, 
i
, 
j
;

418 
u16
 
numXpdGaö
, 
xpdMask
;

419 
u16
 
xpdGaöVÆues
[
AR5416_NUM_PD_GAINS
] = {0, 0, 0, 0};

420 
u32
 
ªg32
, 
ªgOff£t
, 
ªgChaöOff£t
, 
ªgvÆ
;

421 
öt16_t
 
diff
 = 0;

422 
¨9287_ì¥om
 *
pEïD©a
 = &
ah
->
ì¥om
.
m≠9287
;

424 
xpdMask
 = 
pEïD©a
->
modÆHódî
.
xpdGaö
;

426 i‡((
pEïD©a
->
ba£EïHódî
.
vîsi⁄
 & 
AR9287_EEP_VER_MINOR_MASK
) >=

427 
AR9287_EEP_MINOR_VER_2
)

428 
pdGaöOvîœp_t2
 = 
pEïD©a
->
modÆHódî
.
pdGaöOvîœp
;

430 
pdGaöOvîœp_t2
 = (
u16
)(
	`MS
(
	`REG_READ
(
ah
, 
AR_PHY_TPCRG5
),

431 
AR_PHY_TPCRG5_PD_GAIN_OVERLAP
));

433 i‡(
	`IS_CHAN_2GHZ
(
ch™
)) {

434 
pCÆBCh™s
 = 
pEïD©a
->
ˇlFªqPõr2G
;

435 
numPõrs
 = 
AR9287_NUM_2G_CAL_PIERS
;

436 i‡(
	`©h9k_hw_¨9287_gë_ì¥om
(
ah
, 
EEP_OL_PWRCTRL
)) {

437 
pRawD©a£tO≥nLo›
 =

438 (
ˇl_d©a_›_lo›_¨9287
 *)
pEïD©a
->
ˇlPõrD©a2G
[0];

439 
ah
->
öôPDADC
 = 
pRawD©a£tO≥nLo›
->
vpdPdg
[0][0];

443 
numXpdGaö
 = 0;

446 
i
 = 1; i <
AR5416_PD_GAINS_IN_MASK
; i++) {

447 i‡((
xpdMask
 >> (
AR5416_PD_GAINS_IN_MASK
 - 
i
)) & 1) {

448 i‡(
numXpdGaö
 >
AR5416_NUM_PD_GAINS
)

450 
xpdGaöVÆues
[
numXpdGaö
] =

451 (
u16
)(
AR5416_PD_GAINS_IN_MASK
-
i
);

452 
numXpdGaö
++;

456 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TPCRG1
, 
AR_PHY_TPCRG1_NUM_PD_GAIN
,

457 (
numXpdGaö
 - 1) & 0x3);

458 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TPCRG1
, 
AR_PHY_TPCRG1_PD_GAIN_1
,

459 
xpdGaöVÆues
[0]);

460 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TPCRG1
, 
AR_PHY_TPCRG1_PD_GAIN_2
,

461 
xpdGaöVÆues
[1]);

462 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TPCRG1
, 
AR_PHY_TPCRG1_PD_GAIN_3
,

463 
xpdGaöVÆues
[2]);

465 
i
 = 0; i < 
AR9287_MAX_CHAINS
; i++) {

466 
ªgChaöOff£t
 = 
i
 * 0x1000;

468 i‡(
pEïD©a
->
ba£EïHódî
.
txMask
 & (1 << 
i
)) {

469 
pRawD©a£tO≥nLo›
 =

470 (
ˇl_d©a_›_lo›_¨9287
 *)
pEïD©a
->
ˇlPõrD©a2G
[
i
];

472 i‡(
	`©h9k_hw_¨9287_gë_ì¥om
(
ah
, 
EEP_OL_PWRCTRL
)) {

473 
öt8_t
 
txPowî
;

474 
	`¨9287_ì¥om_gë_tx_gaö_ödex
(
ah
, 
ch™
,

475 
pRawD©a£tO≥nLo›
,

476 
pCÆBCh™s
, 
numPõrs
,

477 &
txPowî
);

478 
	`¨9287_ì¥om_ﬁpc_£t_pdadcs
(
ah
, 
txPowî
, 
i
);

480 
pRawD©a£t
 =

481 (
ˇl_d©a_≥r_‰eq_¨9287
 *)

482 
pEïD©a
->
ˇlPõrD©a2G
[
i
];

484 
	`©h9k_hw_gë_gaö_bound¨õs_pdadcs
(
ah
, 
ch™
,

485 
pRawD©a£t
,

486 
pCÆBCh™s
, 
numPõrs
,

487 
pdGaöOvîœp_t2
,

488 
gaöBound¨õs
,

489 
pdadcVÆues
,

490 
numXpdGaö
);

493 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

495 i‡(
i
 == 0) {

496 i‡(!
	`©h9k_hw_¨9287_gë_ì¥om
(
ah
,

497 
EEP_OL_PWRCTRL
)) {

499 
ªgvÆ
 = 
	`SM
(
pdGaöOvîœp_t2
,

500 
AR_PHY_TPCRG5_PD_GAIN_OVERLAP
)

501 | 
	`SM
(
gaöBound¨õs
[0],

502 
AR_PHY_TPCRG5_PD_GAIN_BOUNDARY_1
)

503 | 
	`SM
(
gaöBound¨õs
[1],

504 
AR_PHY_TPCRG5_PD_GAIN_BOUNDARY_2
)

505 | 
	`SM
(
gaöBound¨õs
[2],

506 
AR_PHY_TPCRG5_PD_GAIN_BOUNDARY_3
)

507 | 
	`SM
(
gaöBound¨õs
[3],

508 
AR_PHY_TPCRG5_PD_GAIN_BOUNDARY_4
);

510 
	`REG_WRITE
(
ah
,

511 
AR_PHY_TPCRG5
 + 
ªgChaöOff£t
,

512 
ªgvÆ
);

516 i‡((
öt32_t
)
AR9287_PWR_TABLE_OFFSET_DB
 !=

517 
pEïD©a
->
ba£EïHódî
.
pwrTabÀOff£t
) {

518 
diff
 = (
u16
)(
pEïD©a
->
ba£EïHódî
.
pwrTabÀOff£t
 -

519 (
öt32_t
)
AR9287_PWR_TABLE_OFFSET_DB
);

520 
diff
 *= 2;

522 
j
 = 0; j < ((
u16
)
AR5416_NUM_PDADC_VALUES
-
diff
); j++)

523 
pdadcVÆues
[
j
] =ÖdadcVÆues[j+
diff
];

525 
j
 = (
u16
)(
AR5416_NUM_PDADC_VALUES
-
diff
);

526 
j
 < 
AR5416_NUM_PDADC_VALUES
; j++)

527 
pdadcVÆues
[
j
] =

528 
pdadcVÆues
[
AR5416_NUM_PDADC_VALUES
-
diff
];

531 i‡(!
	`©h9k_hw_¨9287_gë_ì¥om
(
ah
, 
EEP_OL_PWRCTRL
)) {

532 
ªgOff£t
 = 
AR_PHY_BASE
 +

533 (672 << 2Ë+ 
ªgChaöOff£t
;

535 
j
 = 0; j < 32; j++) {

536 
ªg32
 = 
	`gë_u«lig√d_À32
(&
pdadcVÆues
[4 * 
j
]);

538 
	`REG_WRITE
(
ah
, 
ªgOff£t
, 
ªg32
);

539 
ªgOff£t
 += 4;

542 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

545 
	}
}

547 
	$©h9k_hw_£t_¨9287_powî_≥r_øã_èbÀ
(
©h_hw
 *
ah
,

548 
©h9k_ch™√l
 *
ch™
,

549 
öt16_t
 *
øãsAºay
,

550 
u16
 
cfgCé
,

551 
u16
 
™ã¬a_ªdu˘i⁄
,

552 
u16
 
powîLimô
)

554 
	#CMP_CTL
 \

555 (((
cfgCé
 & ~
CTL_MODE_M
Ë| (
pCéMode
[
˘lMode
] & CTL_MODE_M)) == \

556 
pEïD©a
->
˘lIndex
[
i
])

	)

558 
	#CMP_NO_CTL
 \

559 (((
cfgCé
 & ~
CTL_MODE_M
Ë| (
pCéMode
[
˘lMode
] & CTL_MODE_M)) == \

560 ((
pEïD©a
->
˘lIndex
[
i
] & 
CTL_MODE_M
Ë| 
SD_NO_CTL
))

	)

562 
u16
 
twi˚MaxEdgePowî
;

563 
i
;

564 
ˇl_˘l_d©a_¨9287
 *
ªp
;

565 
ˇl_èrgë_powî_Àg
 
èrgëPowîOfdm
 = {0, {0, 0, 0, 0} },

566 
èrgëPowîCck
 = {0, {0, 0, 0, 0} };

567 
ˇl_èrgë_powî_Àg
 
èrgëPowîOfdmExt
 = {0, {0, 0, 0, 0} },

568 
èrgëPowîCckExt
 = {0, {0, 0, 0, 0} };

569 
ˇl_èrgë_powî_ht
 
èrgëPowîHt20
,

570 
èrgëPowîHt40
 = {0, {0, 0, 0, 0} };

571 
u16
 
sˇÀdPowî
 = 0, 
möCéPowî
;

572 c⁄° 
u16
 
˘lModesF‹11g
[] = {

573 
CTL_11B
, 
CTL_11G
, 
CTL_2GHT20
,

574 
CTL_11B_EXT
, 
CTL_11G_EXT
, 
CTL_2GHT40


576 
u16
 
numCéModes
 = 0;

577 c⁄° 
u16
 *
pCéMode
 = 
NULL
;

578 
u16
 
˘lMode
, 
‰eq
;

579 
ch™_˚¡îs
 
˚¡îs
;

580 
tx_chaömask
;

581 
u16
 
twi˚MöEdgePowî
;

582 
¨9287_ì¥om
 *
pEïD©a
 = &
ah
->
ì¥om
.
m≠9287
;

583 
tx_chaömask
 = 
ah
->
txchaömask
;

585 
	`©h9k_hw_gë_ch™√l_˚¡îs
(
ah
, 
ch™
, &
˚¡îs
);

586 
sˇÀdPowî
 = 
	`©h9k_hw_gë_sˇÀd_powî
(
ah
, 
powîLimô
,

587 
™ã¬a_ªdu˘i⁄
);

592 i‡(
	`IS_CHAN_2GHZ
(
ch™
)) {

594 
numCéModes
 =

595 
	`ARRAY_SIZE
(
˘lModesF‹11g
Ë- 
SUB_NUM_CTL_MODES_AT_2G_40
;

597 
pCéMode
 = 
˘lModesF‹11g
;

599 
	`©h9k_hw_gë_Àgacy_èrgë_powîs
(
ah
, 
ch™
,

600 
pEïD©a
->
ˇlT¨gëPowîCck
,

601 
AR9287_NUM_2G_CCK_TARGET_POWERS
,

602 &
èrgëPowîCck
, 4, 
Ál£
);

603 
	`©h9k_hw_gë_Àgacy_èrgë_powîs
(
ah
, 
ch™
,

604 
pEïD©a
->
ˇlT¨gëPowî2G
,

605 
AR9287_NUM_2G_20_TARGET_POWERS
,

606 &
èrgëPowîOfdm
, 4, 
Ál£
);

607 
	`©h9k_hw_gë_èrgë_powîs
(
ah
, 
ch™
,

608 
pEïD©a
->
ˇlT¨gëPowî2GHT20
,

609 
AR9287_NUM_2G_20_TARGET_POWERS
,

610 &
èrgëPowîHt20
, 8, 
Ál£
);

612 i‡(
	`IS_CHAN_HT40
(
ch™
)) {

614 
numCéModes
 = 
	`ARRAY_SIZE
(
˘lModesF‹11g
);

615 
	`©h9k_hw_gë_èrgë_powîs
(
ah
, 
ch™
,

616 
pEïD©a
->
ˇlT¨gëPowî2GHT40
,

617 
AR9287_NUM_2G_40_TARGET_POWERS
,

618 &
èrgëPowîHt40
, 8, 
åue
);

619 
	`©h9k_hw_gë_Àgacy_èrgë_powîs
(
ah
, 
ch™
,

620 
pEïD©a
->
ˇlT¨gëPowîCck
,

621 
AR9287_NUM_2G_CCK_TARGET_POWERS
,

622 &
èrgëPowîCckExt
, 4, 
åue
);

623 
	`©h9k_hw_gë_Àgacy_èrgë_powîs
(
ah
, 
ch™
,

624 
pEïD©a
->
ˇlT¨gëPowî2G
,

625 
AR9287_NUM_2G_20_TARGET_POWERS
,

626 &
èrgëPowîOfdmExt
, 4, 
åue
);

630 
˘lMode
 = 0; céModê< 
numCéModes
; ctlMode++) {

631 
boﬁ
 
isHt40CéMode
 =

632 (
pCéMode
[
˘lMode
] =
CTL_2GHT40
Ë? 
åue
 : 
Ál£
;

634 i‡(
isHt40CéMode
)

635 
‰eq
 = 
˚¡îs
.
sy¡h_˚¡î
;

636 i‡(
pCéMode
[
˘lMode
] & 
EXT_ADDITIVE
)

637 
‰eq
 = 
˚¡îs
.
ext_˚¡î
;

639 
‰eq
 = 
˚¡îs
.
˘l_˚¡î
;

641 
twi˚MaxEdgePowî
 = 
MAX_RATE_POWER
;

643 
i
 = 0; (ò< 
AR9287_NUM_CTLS
Ë&& 
pEïD©a
->
˘lIndex
[i]; i++) {

644 
ˇl_˘l_edges
 *
pRdEdgesPowî
;

650 i‡(
CMP_CTL
 || 
CMP_NO_CTL
) {

651 
ªp
 = &(
pEïD©a
->
˘lD©a
[
i
]);

652 
pRdEdgesPowî
 =

653 
ªp
->
˘lEdges
[
	`¨5416_gë_¡xchaös
(
tx_chaömask
) - 1];

655 
twi˚MöEdgePowî
 = 
	`©h9k_hw_gë_max_edge_powî
(
‰eq
,

656 
pRdEdgesPowî
,

657 
	`IS_CHAN_2GHZ
(
ch™
),

658 
AR5416_NUM_BAND_EDGES
);

660 i‡((
cfgCé
 & ~
CTL_MODE_M
Ë=
SD_NO_CTL
) {

661 
twi˚MaxEdgePowî
 = 
	`mö
(twiceMaxEdgePower,

662 
twi˚MöEdgePowî
);

664 
twi˚MaxEdgePowî
 = 
twi˚MöEdgePowî
;

670 
möCéPowî
 = (
u8
)
	`mö
(
twi˚MaxEdgePowî
, 
sˇÀdPowî
);

673 
pCéMode
[
˘lMode
]) {

674 
CTL_11B
:

675 
i
 = 0; i < 
	`ARRAY_SIZE
(
èrgëPowîCck
.
tPow2x
); i++) {

676 
èrgëPowîCck
.
tPow2x
[
i
] =

677 (
u8
)
	`mö
((
u16
)
èrgëPowîCck
.
tPow2x
[
i
],

678 
möCéPowî
);

681 
CTL_11A
:

682 
CTL_11G
:

683 
i
 = 0; i < 
	`ARRAY_SIZE
(
èrgëPowîOfdm
.
tPow2x
); i++) {

684 
èrgëPowîOfdm
.
tPow2x
[
i
] =

685 (
u8
)
	`mö
((
u16
)
èrgëPowîOfdm
.
tPow2x
[
i
],

686 
möCéPowî
);

689 
CTL_5GHT20
:

690 
CTL_2GHT20
:

691 
i
 = 0; i < 
	`ARRAY_SIZE
(
èrgëPowîHt20
.
tPow2x
); i++) {

692 
èrgëPowîHt20
.
tPow2x
[
i
] =

693 (
u8
)
	`mö
((
u16
)
èrgëPowîHt20
.
tPow2x
[
i
],

694 
möCéPowî
);

697 
CTL_11B_EXT
:

698 
èrgëPowîCckExt
.
tPow2x
[0] =

699 (
u8
)
	`mö
((
u16
)
èrgëPowîCckExt
.
tPow2x
[0],

700 
möCéPowî
);

702 
CTL_11A_EXT
:

703 
CTL_11G_EXT
:

704 
èrgëPowîOfdmExt
.
tPow2x
[0] =

705 (
u8
)
	`mö
((
u16
)
èrgëPowîOfdmExt
.
tPow2x
[0],

706 
möCéPowî
);

708 
CTL_5GHT40
:

709 
CTL_2GHT40
:

710 
i
 = 0; i < 
	`ARRAY_SIZE
(
èrgëPowîHt40
.
tPow2x
); i++) {

711 
èrgëPowîHt40
.
tPow2x
[
i
] =

712 (
u8
)
	`mö
((
u16
)
èrgëPowîHt40
.
tPow2x
[
i
],

713 
möCéPowî
);

723 
øãsAºay
[
øã6mb
] =

724 
øãsAºay
[
øã9mb
] =

725 
øãsAºay
[
øã12mb
] =

726 
øãsAºay
[
øã18mb
] =

727 
øãsAºay
[
øã24mb
] = 
èrgëPowîOfdm
.
tPow2x
[0];

729 
øãsAºay
[
øã36mb
] = 
èrgëPowîOfdm
.
tPow2x
[1];

730 
øãsAºay
[
øã48mb
] = 
èrgëPowîOfdm
.
tPow2x
[2];

731 
øãsAºay
[
øã54mb
] = 
èrgëPowîOfdm
.
tPow2x
[3];

732 
øãsAºay
[
øãXr
] = 
èrgëPowîOfdm
.
tPow2x
[0];

734 
i
 = 0; i < 
	`ARRAY_SIZE
(
èrgëPowîHt20
.
tPow2x
); i++)

735 
øãsAºay
[
øãHt20_0
 + 
i
] = 
èrgëPowîHt20
.
tPow2x
[i];

737 i‡(
	`IS_CHAN_2GHZ
(
ch™
)) {

738 
øãsAºay
[
øã1l
] = 
èrgëPowîCck
.
tPow2x
[0];

739 
øãsAºay
[
øã2s
] =

740 
øãsAºay
[
øã2l
] = 
èrgëPowîCck
.
tPow2x
[1];

741 
øãsAºay
[
øã5_5s
] =

742 
øãsAºay
[
øã5_5l
] = 
èrgëPowîCck
.
tPow2x
[2];

743 
øãsAºay
[
øã11s
] =

744 
øãsAºay
[
øã11l
] = 
èrgëPowîCck
.
tPow2x
[3];

746 i‡(
	`IS_CHAN_HT40
(
ch™
)) {

747 
i
 = 0; i < 
	`ARRAY_SIZE
(
èrgëPowîHt40
.
tPow2x
); i++)

748 
øãsAºay
[
øãHt40_0
 + 
i
] = 
èrgëPowîHt40
.
tPow2x
[i];

750 
øãsAºay
[
øãDupOfdm
] = 
èrgëPowîHt40
.
tPow2x
[0];

751 
øãsAºay
[
øãDupCck
] = 
èrgëPowîHt40
.
tPow2x
[0];

752 
øãsAºay
[
øãExtOfdm
] = 
èrgëPowîOfdmExt
.
tPow2x
[0];

754 i‡(
	`IS_CHAN_2GHZ
(
ch™
))

755 
øãsAºay
[
øãExtCck
] = 
èrgëPowîCckExt
.
tPow2x
[0];

758 #unde‡
CMP_CTL


759 #unde‡
CMP_NO_CTL


760 
	}
}

762 
	$©h9k_hw_¨9287_£t_txpowî
(
©h_hw
 *
ah
,

763 
©h9k_ch™√l
 *
ch™
, 
u16
 
cfgCé
,

764 
u8
 
twi˚A¡í«Redu˘i⁄
,

765 
u8
 
powîLimô
, 
boﬁ
 
ã°
)

767 
©h_ªguœt‹y
 *
ªguœt‹y
 = 
	`©h9k_hw_ªguœt‹y
(
ah
);

768 
¨9287_ì¥om
 *
pEïD©a
 = &
ah
->
ì¥om
.
m≠9287
;

769 
modÆ_ìp_¨9287_hódî
 *
pModÆ
 = &
pEïD©a
->
modÆHódî
;

770 
öt16_t
 
øãsAºay
[
Ar5416R©eSize
];

771 
u8
 
ht40PowîIncF‹Pdadc
 = 2;

772 
i
;

774 
	`mem£t
(
øãsAºay
, 0, (ratesArray));

776 i‡((
pEïD©a
->
ba£EïHódî
.
vîsi⁄
 & 
AR9287_EEP_VER_MINOR_MASK
) >=

777 
AR9287_EEP_MINOR_VER_2
)

778 
ht40PowîIncF‹Pdadc
 = 
pModÆ
->ht40PowerIncForPdadc;

780 
	`©h9k_hw_£t_¨9287_powî_≥r_øã_èbÀ
(
ah
, 
ch™
,

781 &
øãsAºay
[0], 
cfgCé
,

782 
twi˚A¡í«Redu˘i⁄
,

783 
powîLimô
);

785 
	`©h9k_hw_£t_¨9287_powî_ˇl_èbÀ
(
ah
, 
ch™
);

787 
ªguœt‹y
->
max_powî_Àvñ
 = 0;

788 
i
 = 0; i < 
	`ARRAY_SIZE
(
øãsAºay
); i++) {

789 i‡(
øãsAºay
[
i
] > 
MAX_RATE_POWER
)

790 
øãsAºay
[
i
] = 
MAX_RATE_POWER
;

792 i‡(
øãsAºay
[
i
] > 
ªguœt‹y
->
max_powî_Àvñ
)

793 
ªguœt‹y
->
max_powî_Àvñ
 = 
øãsAºay
[
i
];

796 
	`©h9k_hw_upd©e_ªguœt‹y_maxpowî
(
ah
);

798 i‡(
ã°
)

801 
i
 = 0; i < 
Ar5416R©eSize
; i++)

802 
øãsAºay
[
i
] -
AR9287_PWR_TABLE_OFFSET_DB
 * 2;

804 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

807 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE1
,

808 
	`ATH9K_POW_SM
(
øãsAºay
[
øã18mb
], 24)

809 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã12mb
], 16)

810 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã9mb
], 8)

811 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã6mb
], 0));

813 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE2
,

814 
	`ATH9K_POW_SM
(
øãsAºay
[
øã54mb
], 24)

815 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã48mb
], 16)

816 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã36mb
], 8)

817 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã24mb
], 0));

820 i‡(
	`IS_CHAN_2GHZ
(
ch™
)) {

821 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE3
,

822 
	`ATH9K_POW_SM
(
øãsAºay
[
øã2s
], 24)

823 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã2l
], 16)

824 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãXr
], 8)

825 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã1l
], 0));

826 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE4
,

827 
	`ATH9K_POW_SM
(
øãsAºay
[
øã11s
], 24)

828 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã11l
], 16)

829 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã5_5s
], 8)

830 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã5_5l
], 0));

834 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE5
,

835 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt20_3
], 24)

836 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt20_2
], 16)

837 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt20_1
], 8)

838 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt20_0
], 0));

840 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE6
,

841 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt20_7
], 24)

842 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt20_6
], 16)

843 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt20_5
], 8)

844 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt20_4
], 0));

847 i‡(
	`IS_CHAN_HT40
(
ch™
)) {

848 i‡(
	`©h9k_hw_¨9287_gë_ì¥om
(
ah
, 
EEP_OL_PWRCTRL
)) {

849 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE7
,

850 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_3
], 24)

851 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_2
], 16)

852 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_1
], 8)

853 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_0
], 0));

855 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE8
,

856 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_7
], 24)

857 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_6
], 16)

858 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_5
], 8)

859 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_4
], 0));

861 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE7
,

862 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_3
] +

863 
ht40PowîIncF‹Pdadc
, 24)

864 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_2
] +

865 
ht40PowîIncF‹Pdadc
, 16)

866 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_1
] +

867 
ht40PowîIncF‹Pdadc
, 8)

868 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_0
] +

869 
ht40PowîIncF‹Pdadc
, 0));

871 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE8
,

872 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_7
] +

873 
ht40PowîIncF‹Pdadc
, 24)

874 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_6
] +

875 
ht40PowîIncF‹Pdadc
, 16)

876 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_5
] +

877 
ht40PowîIncF‹Pdadc
, 8)

878 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_4
] +

879 
ht40PowîIncF‹Pdadc
, 0));

883 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE9
,

884 
	`ATH9K_POW_SM
(
øãsAºay
[
øãExtOfdm
], 24)

885 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãExtCck
], 16)

886 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãDupOfdm
], 8)

887 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãDupCck
], 0));

889 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

890 
	}
}

892 
	$©h9k_hw_¨9287_£t_bﬂrd_vÆues
(
©h_hw
 *
ah
,

893 
©h9k_ch™√l
 *
ch™
)

895 
¨9287_ì¥om
 *
ìp
 = &
ah
->
ì¥om
.
m≠9287
;

896 
modÆ_ìp_¨9287_hódî
 *
pModÆ
 = &
ìp
->
modÆHódî
;

897 
u32
 
ªgChaöOff£t
, 
ªgvÆ
;

898 
u8
 
txRxAâíLoˇl
;

899 
i
;

901 
pModÆ
 = &
ìp
->
modÆHódî
;

903 
	`REG_WRITE
(
ah
, 
AR_PHY_SWITCH_COM
, 
pModÆ
->
™tCålComm⁄
);

905 
i
 = 0; i < 
AR9287_MAX_CHAINS
; i++) {

906 
ªgChaöOff£t
 = 
i
 * 0x1000;

908 
	`REG_WRITE
(
ah
, 
AR_PHY_SWITCH_CHAIN_0
 + 
ªgChaöOff£t
,

909 
pModÆ
->
™tCålChaö
[
i
]);

911 
	`REG_WRITE
(
ah
, 
	`AR_PHY_TIMING_CTRL4
(0Ë+ 
ªgChaöOff£t
,

912 (
	`REG_READ
(
ah
, 
	`AR_PHY_TIMING_CTRL4
(0Ë+ 
ªgChaöOff£t
)

913 & ~(
AR_PHY_TIMING_CTRL4_IQCORR_Q_Q_COFF
 |

914 
AR_PHY_TIMING_CTRL4_IQCORR_Q_I_COFF
)) |

915 
	`SM
(
pModÆ
->
iqCÆICh
[
i
],

916 
AR_PHY_TIMING_CTRL4_IQCORR_Q_I_COFF
) |

917 
	`SM
(
pModÆ
->
iqCÆQCh
[
i
],

918 
AR_PHY_TIMING_CTRL4_IQCORR_Q_Q_COFF
));

920 
txRxAâíLoˇl
 = 
pModÆ
->
txRxAâíCh
[
i
];

922 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_GAIN_2GHZ
 + 
ªgChaöOff£t
,

923 
AR_PHY_GAIN_2GHZ_XATTEN1_MARGIN
,

924 
pModÆ
->
bswM¨gö
[
i
]);

925 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_GAIN_2GHZ
 + 
ªgChaöOff£t
,

926 
AR_PHY_GAIN_2GHZ_XATTEN1_DB
,

927 
pModÆ
->
bswAâí
[
i
]);

928 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_RXGAIN
 + 
ªgChaöOff£t
,

929 
AR9280_PHY_RXGAIN_TXRX_ATTEN
,

930 
txRxAâíLoˇl
);

931 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_RXGAIN
 + 
ªgChaöOff£t
,

932 
AR9280_PHY_RXGAIN_TXRX_MARGIN
,

933 
pModÆ
->
rxTxM¨göCh
[
i
]);

937 i‡(
	`IS_CHAN_HT40
(
ch™
))

938 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SETTLING
,

939 
AR_PHY_SETTLING_SWITCH
, 
pModÆ
->
swSëéeHt40
);

941 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SETTLING
,

942 
AR_PHY_SETTLING_SWITCH
, 
pModÆ
->
swôchSëéög
);

944 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_DESIRED_SZ
,

945 
AR_PHY_DESIRED_SZ_ADC
, 
pModÆ
->
adcDesúedSize
);

947 
	`REG_WRITE
(
ah
, 
AR_PHY_RF_CTL4
,

948 
	`SM
(
pModÆ
->
txEndToX∑Off
, 
AR_PHY_RF_CTL4_TX_END_XPAA_OFF
)

949 | 
	`SM
(
pModÆ
->
txEndToX∑Off
, 
AR_PHY_RF_CTL4_TX_END_XPAB_OFF
)

950 | 
	`SM
(
pModÆ
->
txFømeToX∑On
, 
AR_PHY_RF_CTL4_FRAME_XPAA_ON
)

951 | 
	`SM
(
pModÆ
->
txFømeToX∑On
, 
AR_PHY_RF_CTL4_FRAME_XPAB_ON
));

953 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_RF_CTL3
,

954 
AR_PHY_TX_END_TO_A2_RX_ON
, 
pModÆ
->
txEndToRxOn
);

956 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_CCA
,

957 
AR9280_PHY_CCA_THRESH62
, 
pModÆ
->
thªsh62
);

958 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_EXT_CCA0
,

959 
AR_PHY_EXT_CCA0_THRESH62
, 
pModÆ
->
thªsh62
);

961 
ªgvÆ
 = 
	`REG_READ
(
ah
, 
AR9287_AN_RF2G3_CH0
);

962 
ªgvÆ
 &~(
AR9287_AN_RF2G3_DB1
 |

963 
AR9287_AN_RF2G3_DB2
 |

964 
AR9287_AN_RF2G3_OB_CCK
 |

965 
AR9287_AN_RF2G3_OB_PSK
 |

966 
AR9287_AN_RF2G3_OB_QAM
 |

967 
AR9287_AN_RF2G3_OB_PAL_OFF
);

968 
ªgvÆ
 |(
	`SM
(
pModÆ
->
db1
, 
AR9287_AN_RF2G3_DB1
) |

969 
	`SM
(
pModÆ
->
db2
, 
AR9287_AN_RF2G3_DB2
) |

970 
	`SM
(
pModÆ
->
ob_cck
, 
AR9287_AN_RF2G3_OB_CCK
) |

971 
	`SM
(
pModÆ
->
ob_psk
, 
AR9287_AN_RF2G3_OB_PSK
) |

972 
	`SM
(
pModÆ
->
ob_qam
, 
AR9287_AN_RF2G3_OB_QAM
) |

973 
	`SM
(
pModÆ
->
ob_∑l_off
, 
AR9287_AN_RF2G3_OB_PAL_OFF
));

975 
	`©h9k_hw_™Æog_shi·_ªgwrôe
(
ah
, 
AR9287_AN_RF2G3_CH0
, 
ªgvÆ
);

977 
ªgvÆ
 = 
	`REG_READ
(
ah
, 
AR9287_AN_RF2G3_CH1
);

978 
ªgvÆ
 &~(
AR9287_AN_RF2G3_DB1
 |

979 
AR9287_AN_RF2G3_DB2
 |

980 
AR9287_AN_RF2G3_OB_CCK
 |

981 
AR9287_AN_RF2G3_OB_PSK
 |

982 
AR9287_AN_RF2G3_OB_QAM
 |

983 
AR9287_AN_RF2G3_OB_PAL_OFF
);

984 
ªgvÆ
 |(
	`SM
(
pModÆ
->
db1
, 
AR9287_AN_RF2G3_DB1
) |

985 
	`SM
(
pModÆ
->
db2
, 
AR9287_AN_RF2G3_DB2
) |

986 
	`SM
(
pModÆ
->
ob_cck
, 
AR9287_AN_RF2G3_OB_CCK
) |

987 
	`SM
(
pModÆ
->
ob_psk
, 
AR9287_AN_RF2G3_OB_PSK
) |

988 
	`SM
(
pModÆ
->
ob_qam
, 
AR9287_AN_RF2G3_OB_QAM
) |

989 
	`SM
(
pModÆ
->
ob_∑l_off
, 
AR9287_AN_RF2G3_OB_PAL_OFF
));

991 
	`©h9k_hw_™Æog_shi·_ªgwrôe
(
ah
, 
AR9287_AN_RF2G3_CH1
, 
ªgvÆ
);

993 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_RF_CTL2
,

994 
AR_PHY_TX_END_DATA_START
, 
pModÆ
->
txFømeToD©aSèπ
);

995 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_RF_CTL2
,

996 
AR_PHY_TX_END_PA_ON
, 
pModÆ
->
txFømeToPaOn
);

998 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
, 
AR9287_AN_TOP2
,

999 
AR9287_AN_TOP2_XPABIAS_LVL
,

1000 
AR9287_AN_TOP2_XPABIAS_LVL_S
,

1001 
pModÆ
->
x∑BüsLvl
);

1002 
	}
}

1004 
u16
 
	$©h9k_hw_¨9287_gë_•ur_ch™√l
(
©h_hw
 *
ah
,

1005 
u16
 
i
, 
boﬁ
 
is2GHz
)

1007  
ah
->
ì¥om
.
m≠9287
.
modÆHódî
.
•urCh™s
[
i
].
•urCh™
;

1008 
	}
}

1010 c⁄° 
ì¥om_›s
 
	gìp_¨9287_›s
 = {

1011 .
check_ì¥om
 = 
©h9k_hw_¨9287_check_ì¥om
,

1012 .
	ggë_ì¥om
 = 
©h9k_hw_¨9287_gë_ì¥om
,

1013 .
	gfûl_ì¥om
 = 
©h9k_hw_¨9287_fûl_ì¥om
,

1014 .
	gdump_ì¥om
 = 
©h9k_hw_¨9287_dump_ì¥om
,

1015 .
	ggë_ì¥om_vî
 = 
©h9k_hw_¨9287_gë_ì¥om_vî
,

1016 .
	ggë_ì¥om_ªv
 = 
©h9k_hw_¨9287_gë_ì¥om_ªv
,

1017 .
	g£t_bﬂrd_vÆues
 = 
©h9k_hw_¨9287_£t_bﬂrd_vÆues
,

1018 .
	g£t_txpowî
 = 
©h9k_hw_¨9287_£t_txpowî
,

1019 .
	ggë_•ur_ch™√l
 = 
©h9k_hw_¨9287_gë_•ur_ch™√l


	@eeprom_def.c

17 
	~<asm/u«lig√d.h
>

18 
	~"hw.h
"

19 
	~"¨9002_phy.h
"

21 
	$©h9k_gë_txgaö_ödex
(
©h_hw
 *
ah
,

22 
©h9k_ch™√l
 *
ch™
,

23 
ˇlD©aPîFªqOpLo›
 *
øwD©a£tOpLo›
,

24 
u8
 *
ˇlCh™s
, 
u16
 
avaûPõrs
, u8 *
pwr
, u8 *
pcdacIdx
)

26 
u8
 
pcdac
, 
i
 = 0;

27 
u16
 
idxL
 = 0, 
idxR
 = 0, 
numPõrs
;

28 
boﬁ
 
m©ch
;

29 
ch™_˚¡îs
 
˚¡îs
;

31 
	`©h9k_hw_gë_ch™√l_˚¡îs
(
ah
, 
ch™
, &
˚¡îs
);

33 
numPõrs
 = 0;ÇumPõr†< 
avaûPõrs
;ÇumPiers++)

34 i‡(
ˇlCh™s
[
numPõrs
] =
AR5416_BCHAN_UNUSED
)

37 
m©ch
 = 
	`©h9k_hw_gë_lowî_uµî_ödex
(

38 (
u8
)
	`FREQ2FBIN
(
˚¡îs
.
sy¡h_˚¡î
, 
	`IS_CHAN_2GHZ
(
ch™
)),

39 
ˇlCh™s
, 
numPõrs
, &
idxL
, &
idxR
);

40 i‡(
m©ch
) {

41 
pcdac
 = 
øwD©a£tOpLo›
[
idxL
].pcdac[0][0];

42 *
pwr
 = 
øwD©a£tOpLo›
[
idxL
].
pwrPdg
[0][0];

44 
pcdac
 = 
øwD©a£tOpLo›
[
idxR
].pcdac[0][0];

45 *
pwr
 = (
øwD©a£tOpLo›
[
idxL
].
pwrPdg
[0][0] +

46 
øwD©a£tOpLo›
[
idxR
].
pwrPdg
[0][0])/2;

49 
pcdac
 > 
ah
->
‹igöÆGaö
[
i
] &&

50 
i
 < (
AR9280_TX_GAIN_TABLE_SIZE
 - 1))

51 
i
++;

53 *
pcdacIdx
 = 
i
;

54 
	}
}

56 
	$©h9k_ﬁc_gë_pdadcs
(
©h_hw
 *
ah
,

57 
u32
 
öôTxGaö
,

58 
txPowî
,

59 
u8
 *
pPDADCVÆues
)

61 
u32
 
i
;

62 
u32
 
off£t
;

64 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TX_PWRCTRL6_0
,

65 
AR_PHY_TX_PWRCTRL_ERR_EST_MODE
, 3);

66 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TX_PWRCTRL6_1
,

67 
AR_PHY_TX_PWRCTRL_ERR_EST_MODE
, 3);

69 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TX_PWRCTRL7
,

70 
AR_PHY_TX_PWRCTRL_INIT_TX_GAIN
, 
öôTxGaö
);

72 
off£t
 = 
txPowî
;

73 
i
 = 0; i < 
AR5416_NUM_PDADC_VALUES
; i++)

74 i‡(
i
 < 
off£t
)

75 
pPDADCVÆues
[
i
] = 0x0;

77 
pPDADCVÆues
[
i
] = 0xFF;

78 
	}
}

80 
	$©h9k_hw_def_gë_ì¥om_vî
(
©h_hw
 *
ah
)

82  ((
ah
->
ì¥om
.
def
.
ba£EïHódî
.
vîsi⁄
 >> 12) & 0xF);

83 
	}
}

85 
	$©h9k_hw_def_gë_ì¥om_ªv
(
©h_hw
 *
ah
)

87  ((
ah
->
ì¥om
.
def
.
ba£EïHódî
.
vîsi⁄
) & 0xFFF);

88 
	}
}

90 
	#SIZE_EEPROM_DEF
 ((
¨5416_ì¥om_def
Ë/ (
u16
))

	)

92 
boﬁ
 
	$__©h9k_hw_def_fûl_ì¥om
(
©h_hw
 *
ah
)

94 
u16
 *
ìp_d©a
 = (u16 *)&
ah
->
ì¥om
.
def
;

95 
addr
, 
¨5416_ìp_°¨t_loc
 = 0x100;

97 
addr
 = 0;ádd∏< 
SIZE_EEPROM_DEF
;áddr++) {

98 i‡(!
	`©h9k_hw_nvøm_ªad
(
ah
, 
addr
 + 
¨5416_ìp_°¨t_loc
,

99 
ìp_d©a
))

100  
Ál£
;

101 
ìp_d©a
++;

103  
åue
;

104 
	}
}

106 
boﬁ
 
	$__©h9k_hw_usb_def_fûl_ì¥om
(
©h_hw
 *
ah
)

108 
u16
 *
ìp_d©a
 = (u16 *)&
ah
->
ì¥om
.
def
;

110 
	`©h9k_hw_usb_gí_fûl_ì¥om
(
ah
, 
ìp_d©a
,

111 0x100, 
SIZE_EEPROM_DEF
);

112  
åue
;

113 
	}
}

115 
boﬁ
 
	$©h9k_hw_def_fûl_ì¥om
(
©h_hw
 *
ah
)

117 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

119 i‡(!
	`©h9k_hw_u£_Êash
(
ah
)) {

120 
	`©h_dbg
(
comm⁄
, 
EEPROM
, "Reading from EEPROM,Çot flash\n");

123 i‡(
comm⁄
->
bus_›s
->
©h_bus_ty≥
 =
ATH_USB
)

124  
	`__©h9k_hw_usb_def_fûl_ì¥om
(
ah
);

126  
	`__©h9k_hw_def_fûl_ì¥om
(
ah
);

127 
	}
}

129 #unde‡
SIZE_EEPROM_DEF


131 #i‡
deföed
(
CPTCFG_ATH9K_DEBUGFS
Ë|| deföed(
CPTCFG_ATH9K_HTC_DEBUGFS
)

132 
u32
 
	$©h9k_def_dump_modÆ_ì¥om
(*
buf
, 
u32
 
Àn
, u32 
size
,

133 
modÆ_ìp_hódî
 *
modÆ_hdr
)

135 
	`PR_EEP
("Chaö0 A¡. C⁄åﬁ", 
modÆ_hdr
->
™tCålChaö
[0]);

136 
	`PR_EEP
("Chaö1 A¡. C⁄åﬁ", 
modÆ_hdr
->
™tCålChaö
[1]);

137 
	`PR_EEP
("Chaö2 A¡. C⁄åﬁ", 
modÆ_hdr
->
™tCålChaö
[2]);

138 
	`PR_EEP
("A¡. Comm⁄ C⁄åﬁ", 
modÆ_hdr
->
™tCålComm⁄
);

139 
	`PR_EEP
("Chaö0 A¡. Gaö", 
modÆ_hdr
->
™ã¬aGaöCh
[0]);

140 
	`PR_EEP
("Chaö1 A¡. Gaö", 
modÆ_hdr
->
™ã¬aGaöCh
[1]);

141 
	`PR_EEP
("Chaö2 A¡. Gaö", 
modÆ_hdr
->
™ã¬aGaöCh
[2]);

142 
	`PR_EEP
("Swôch Sëée", 
modÆ_hdr
->
swôchSëéög
);

143 
	`PR_EEP
("Chaö0 TxRxAâí", 
modÆ_hdr
->
txRxAâíCh
[0]);

144 
	`PR_EEP
("Chaö1 TxRxAâí", 
modÆ_hdr
->
txRxAâíCh
[1]);

145 
	`PR_EEP
("Chaö2 TxRxAâí", 
modÆ_hdr
->
txRxAâíCh
[2]);

146 
	`PR_EEP
("Chaö0 RxTxM¨gö", 
modÆ_hdr
->
rxTxM¨göCh
[0]);

147 
	`PR_EEP
("Chaö1 RxTxM¨gö", 
modÆ_hdr
->
rxTxM¨göCh
[1]);

148 
	`PR_EEP
("Chaö2 RxTxM¨gö", 
modÆ_hdr
->
rxTxM¨göCh
[2]);

149 
	`PR_EEP
("ADC Desúed size", 
modÆ_hdr
->
adcDesúedSize
);

150 
	`PR_EEP
("PGA Desúed size", 
modÆ_hdr
->
pgaDesúedSize
);

151 
	`PR_EEP
("Chaö0 x ®Gaö", 
modÆ_hdr
->
x aGaöCh
[0]);

152 
	`PR_EEP
("Chaö1 x ®Gaö", 
modÆ_hdr
->
x aGaöCh
[1]);

153 
	`PR_EEP
("Chaö2 x ®Gaö", 
modÆ_hdr
->
x aGaöCh
[2]);

154 
	`PR_EEP
("txEndToX∑Off", 
modÆ_hdr
->
txEndToX∑Off
);

155 
	`PR_EEP
("txEndToRxOn", 
modÆ_hdr
->
txEndToRxOn
);

156 
	`PR_EEP
("txFømeToX∑On", 
modÆ_hdr
->
txFømeToX∑On
);

157 
	`PR_EEP
("CCA Thªshﬁd)", 
modÆ_hdr
->
thªsh62
);

158 
	`PR_EEP
("Chaö0 NF Thªshﬁd", 
modÆ_hdr
->
noi£Flo‹ThªshCh
[0]);

159 
	`PR_EEP
("Chaö1 NF Thªshﬁd", 
modÆ_hdr
->
noi£Flo‹ThªshCh
[1]);

160 
	`PR_EEP
("Chaö2 NF Thªshﬁd", 
modÆ_hdr
->
noi£Flo‹ThªshCh
[2]);

161 
	`PR_EEP
("xpdGaö", 
modÆ_hdr
->
xpdGaö
);

162 
	`PR_EEP
("Exã∫Æ PD", 
modÆ_hdr
->
xpd
);

163 
	`PR_EEP
("Chaö0 I C€fficõ¡", 
modÆ_hdr
->
iqCÆICh
[0]);

164 
	`PR_EEP
("Chaö1 I C€fficõ¡", 
modÆ_hdr
->
iqCÆICh
[1]);

165 
	`PR_EEP
("Chaö2 I C€fficõ¡", 
modÆ_hdr
->
iqCÆICh
[2]);

166 
	`PR_EEP
("Chaö0 Q C€fficõ¡", 
modÆ_hdr
->
iqCÆQCh
[0]);

167 
	`PR_EEP
("Chaö1 Q C€fficõ¡", 
modÆ_hdr
->
iqCÆQCh
[1]);

168 
	`PR_EEP
("Chaö2 Q C€fficõ¡", 
modÆ_hdr
->
iqCÆQCh
[2]);

169 
	`PR_EEP
("pdGaöOvîœp", 
modÆ_hdr
->
pdGaöOvîœp
);

170 
	`PR_EEP
("Chaö0 OuçutBüs", 
modÆ_hdr
->
ob
);

171 
	`PR_EEP
("Chaö0 DrivîBüs", 
modÆ_hdr
->
db
);

172 
	`PR_EEP
("xPA Bü†Levñ", 
modÆ_hdr
->
x∑BüsLvl
);

173 
	`PR_EEP
("2chaöÖw∏de¸ó£", 
modÆ_hdr
->
pwrDe¸ó£F‹2Chaö
);

174 
	`PR_EEP
("3chaöÖw∏de¸ó£", 
modÆ_hdr
->
pwrDe¸ó£F‹3Chaö
);

175 
	`PR_EEP
("txFømeToD©aSèπ", 
modÆ_hdr
->
txFømeToD©aSèπ
);

176 
	`PR_EEP
("txFømeToPaOn", 
modÆ_hdr
->
txFømeToPaOn
);

177 
	`PR_EEP
("HT40 Powî Inc.", 
modÆ_hdr
->
ht40PowîIncF‹Pdadc
);

178 
	`PR_EEP
("Chaö0 bswAâí", 
modÆ_hdr
->
bswAâí
[0]);

179 
	`PR_EEP
("Chaö1 bswAâí", 
modÆ_hdr
->
bswAâí
[1]);

180 
	`PR_EEP
("Chaö2 bswAâí", 
modÆ_hdr
->
bswAâí
[2]);

181 
	`PR_EEP
("Chaö0 bswM¨gö", 
modÆ_hdr
->
bswM¨gö
[0]);

182 
	`PR_EEP
("Chaö1 bswM¨gö", 
modÆ_hdr
->
bswM¨gö
[1]);

183 
	`PR_EEP
("Chaö2 bswM¨gö", 
modÆ_hdr
->
bswM¨gö
[2]);

184 
	`PR_EEP
("HT40 Swôch Sëée", 
modÆ_hdr
->
swSëéeHt40
);

185 
	`PR_EEP
("Chaö0 x©ãn2Db", 
modÆ_hdr
->
x©ãn2Db
[0]);

186 
	`PR_EEP
("Chaö1 x©ãn2Db", 
modÆ_hdr
->
x©ãn2Db
[1]);

187 
	`PR_EEP
("Chaö2 x©ãn2Db", 
modÆ_hdr
->
x©ãn2Db
[2]);

188 
	`PR_EEP
("Chaö0 x©ãn2M¨gö", 
modÆ_hdr
->
x©ãn2M¨gö
[0]);

189 
	`PR_EEP
("Chaö1 x©ãn2M¨gö", 
modÆ_hdr
->
x©ãn2M¨gö
[1]);

190 
	`PR_EEP
("Chaö2 x©ãn2M¨gö", 
modÆ_hdr
->
x©ãn2M¨gö
[2]);

191 
	`PR_EEP
("Chaö1 OuçutBüs", 
modÆ_hdr
->
ob_ch1
);

192 
	`PR_EEP
("Chaö1 DrivîBüs", 
modÆ_hdr
->
db_ch1
);

193 
	`PR_EEP
("LNA C⁄åﬁ", 
modÆ_hdr
->
 a_˘l
);

194 
	`PR_EEP
("XPA Bü†Fªq0", 
modÆ_hdr
->
x∑BüsLvlFªq
[0]);

195 
	`PR_EEP
("XPA Bü†Fªq1", 
modÆ_hdr
->
x∑BüsLvlFªq
[1]);

196 
	`PR_EEP
("XPA Bü†Fªq2", 
modÆ_hdr
->
x∑BüsLvlFªq
[2]);

198  
Àn
;

199 
	}
}

201 
u32
 
	$©h9k_hw_def_dump_ì¥om
(
©h_hw
 *
ah
, 
boﬁ
 
dump_ba£_hdr
,

202 
u8
 *
buf
, 
u32
 
Àn
, u32 
size
)

204 
¨5416_ì¥om_def
 *
ìp
 = &
ah
->
ì¥om
.
def
;

205 
ba£_ìp_hódî
 *
pBa£
 = &
ìp
->
ba£EïHódî
;

207 i‡(!
dump_ba£_hdr
) {

208 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen,

210 
Àn
 = 
	`©h9k_def_dump_modÆ_ì¥om
(
buf
,Üí, 
size
,

211 &
ìp
->
modÆHódî
[0]);

212 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen,

214 
Àn
 = 
	`©h9k_def_dump_modÆ_ì¥om
(
buf
,Üí, 
size
,

215 &
ìp
->
modÆHódî
[1]);

216 
out
;

219 
	`PR_EEP
("Maj‹ Vîsi⁄", 
pBa£
->
vîsi⁄
 >> 12);

220 
	`PR_EEP
("Mö‹ Vîsi⁄", 
pBa£
->
vîsi⁄
 & 0xFFF);

221 
	`PR_EEP
("Checksum", 
pBa£
->
checksum
);

222 
	`PR_EEP
("Lígth", 
pBa£
->
Àngth
);

223 
	`PR_EEP
("RegDomaö1", 
pBa£
->
ªgDmn
[0]);

224 
	`PR_EEP
("RegDomaö2", 
pBa£
->
ªgDmn
[1]);

225 
	`PR_EEP
("TX Mask", 
pBa£
->
txMask
);

226 
	`PR_EEP
("RX Mask", 
pBa£
->
rxMask
);

227 
	`PR_EEP
("AŒow 5GHz", !!(
pBa£
->
›C≠Fœgs
 & 
AR5416_OPFLAGS_11A
));

228 
	`PR_EEP
("AŒow 2GHz", !!(
pBa£
->
›C≠Fœgs
 & 
AR5416_OPFLAGS_11G
));

229 
	`PR_EEP
("DißbÀ 2GHz HT20", !!(
pBa£
->
›C≠Fœgs
 &

230 
AR5416_OPFLAGS_N_2G_HT20
));

231 
	`PR_EEP
("DißbÀ 2GHz HT40", !!(
pBa£
->
›C≠Fœgs
 &

232 
AR5416_OPFLAGS_N_2G_HT40
));

233 
	`PR_EEP
("DißbÀ 5Ghz HT20", !!(
pBa£
->
›C≠Fœgs
 &

234 
AR5416_OPFLAGS_N_5G_HT20
));

235 
	`PR_EEP
("DißbÀ 5Ghz HT40", !!(
pBa£
->
›C≠Fœgs
 &

236 
AR5416_OPFLAGS_N_5G_HT40
));

237 
	`PR_EEP
("Big Endün", !!(
pBa£
->
ìpMisc
 & 0x01));

238 
	`PR_EEP
("CÆ Bö Maj‹ Vî", (
pBa£
->
böBuûdNumbî
 >> 24) & 0xFF);

239 
	`PR_EEP
("CÆ Bö Mö‹ Vî", (
pBa£
->
böBuûdNumbî
 >> 16) & 0xFF);

240 
	`PR_EEP
("CÆ Bö Buûd", (
pBa£
->
böBuûdNumbî
 >> 8) & 0xFF);

241 
	`PR_EEP
("O≥nLo› Powî Cål", 
pBa£
->
›íLo›PwrC¡l
);

243 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%20s : %pM\n", "MacAddress",

244 
pBa£
->
macAddr
);

246 
out
:

247 i‡(
Àn
 > 
size
)

248 
Àn
 = 
size
;

250  
Àn
;

251 
	}
}

253 
u32
 
	$©h9k_hw_def_dump_ì¥om
(
©h_hw
 *
ah
, 
boﬁ
 
dump_ba£_hdr
,

254 
u8
 *
buf
, 
u32
 
Àn
, u32 
size
)

257 
	}
}

261 
	$©h9k_hw_def_check_ì¥om
(
©h_hw
 *
ah
)

263 
¨5416_ì¥om_def
 *
ìp
 = &
ah
->
ì¥om
.
def
;

264 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

265 
u16
 *
ìpd©a
, 
ãmp
, 
magic
;

266 
u32
 
sum
 = 0, 
ñ
;

267 
boﬁ
 
√ed_sw≠
 = 
Ál£
;

268 
i
, 
addr
, 
size
;

270 i‡(!
	`©h9k_hw_nvøm_ªad
(
ah
, 
AR5416_EEPROM_MAGIC_OFFSET
, &
magic
)) {

271 
	`©h_îr
(
comm⁄
, "Reading Magic # failed\n");

272  
Ál£
;

275 i‡(
	`swab16
(
magic
Ë=
AR5416_EEPROM_MAGIC
 &&

276 !(
ah
->
ah_Êags
 & 
AH_NO_EEP_SWAP
)) {

277 
size
 = (
¨5416_ì¥om_def
);

278 
√ed_sw≠
 = 
åue
;

279 
ìpd©a
 = (
u16
 *Ë(&
ah
->
ì¥om
);

281 
addr
 = 0;ádd∏< 
size
 / (
u16
);áddr++) {

282 
ãmp
 = 
	`swab16
(*
ìpd©a
);

283 *
ìpd©a
 = 
ãmp
;

284 
ìpd©a
++;

288 
	`©h_dbg
(
comm⁄
, 
EEPROM
, "need_swap = %s\n",

289 
√ed_sw≠
 ? "True" : "False");

291 i‡(
√ed_sw≠
)

292 
ñ
 = 
	`swab16
(
ah
->
ì¥om
.
def
.
ba£EïHódî
.
Àngth
);

294 
ñ
 = 
ah
->
ì¥om
.
def
.
ba£EïHódî
.
Àngth
;

296 i‡(
ñ
 > (
¨5416_ì¥om_def
))

297 
ñ
 = (
¨5416_ì¥om_def
Ë/ (
u16
);

299 
ñ
 =É»/ (
u16
);

301 
ìpd©a
 = (
u16
 *)(&
ah
->
ì¥om
);

303 
i
 = 0; i < 
ñ
; i++)

304 
sum
 ^*
ìpd©a
++;

306 i‡(
√ed_sw≠
) {

307 
u32
 
öãgî
, 
j
;

308 
u16
 
w‹d
;

310 
	`©h_dbg
(
comm⁄
, 
EEPROM
,

313 
w‹d
 = 
	`swab16
(
ìp
->
ba£EïHódî
.
Àngth
);

314 
ìp
->
ba£EïHódî
.
Àngth
 = 
w‹d
;

316 
w‹d
 = 
	`swab16
(
ìp
->
ba£EïHódî
.
checksum
);

317 
ìp
->
ba£EïHódî
.
checksum
 = 
w‹d
;

319 
w‹d
 = 
	`swab16
(
ìp
->
ba£EïHódî
.
vîsi⁄
);

320 
ìp
->
ba£EïHódî
.
vîsi⁄
 = 
w‹d
;

322 
w‹d
 = 
	`swab16
(
ìp
->
ba£EïHódî
.
ªgDmn
[0]);

323 
ìp
->
ba£EïHódî
.
ªgDmn
[0] = 
w‹d
;

325 
w‹d
 = 
	`swab16
(
ìp
->
ba£EïHódî
.
ªgDmn
[1]);

326 
ìp
->
ba£EïHódî
.
ªgDmn
[1] = 
w‹d
;

328 
w‹d
 = 
	`swab16
(
ìp
->
ba£EïHódî
.
rfSûít
);

329 
ìp
->
ba£EïHódî
.
rfSûít
 = 
w‹d
;

331 
w‹d
 = 
	`swab16
(
ìp
->
ba£EïHódî
.
blueToŸhO±i⁄s
);

332 
ìp
->
ba£EïHódî
.
blueToŸhO±i⁄s
 = 
w‹d
;

334 
w‹d
 = 
	`swab16
(
ìp
->
ba£EïHódî
.
devi˚C≠
);

335 
ìp
->
ba£EïHódî
.
devi˚C≠
 = 
w‹d
;

337 
j
 = 0; j < 
	`ARRAY_SIZE
(
ìp
->
modÆHódî
); j++) {

338 
modÆ_ìp_hódî
 *
pModÆ
 =

339 &
ìp
->
modÆHódî
[
j
];

340 
öãgî
 = 
	`swab32
(
pModÆ
->
™tCålComm⁄
);

341 
pModÆ
->
™tCålComm⁄
 = 
öãgî
;

343 
i
 = 0; i < 
AR5416_MAX_CHAINS
; i++) {

344 
öãgî
 = 
	`swab32
(
pModÆ
->
™tCålChaö
[
i
]);

345 
pModÆ
->
™tCålChaö
[
i
] = 
öãgî
;

347 
i
 = 0; i < 3; i++) {

348 
w‹d
 = 
	`swab16
(
pModÆ
->
x∑BüsLvlFªq
[
i
]);

349 
pModÆ
->
x∑BüsLvlFªq
[
i
] = 
w‹d
;

352 
i
 = 0; i < 
AR_EEPROM_MODAL_SPURS
; i++) {

353 
w‹d
 = 
	`swab16
(
pModÆ
->
•urCh™s
[
i
].
•urCh™
);

354 
pModÆ
->
•urCh™s
[
i
].
•urCh™
 = 
w‹d
;

359 i‡(
sum
 !0xfff‡|| 
ah
->
ìp_›s
->
	`gë_ì¥om_vî
◊hË!
AR5416_EEP_VER
 ||

360 
ah
->
ìp_›s
->
	`gë_ì¥om_ªv
◊hË< 
AR5416_EEP_NO_BACK_VER
) {

361 
	`©h_îr
(
comm⁄
, "Bad EEPROM checksum 0x%x orÑevision 0x%04x\n",

362 
sum
, 
ah
->
ìp_›s
->
	`gë_ì¥om_vî
(ah));

363  -
EINVAL
;

367 i‡((
ah
->
hw_vîsi⁄
.
devid
 =
AR9280_DEVID_PCI
) &&

368 ((
ìp
->
ba£EïHódî
.
vîsi⁄
 & 0xff) > 0x0a) &&

369 (
ìp
->
ba£EïHódî
.
pwd˛köd
 == 0))

370 
ah
->
√ed_™_t›2_fixup
 = 
åue
;

372 i‡((
comm⁄
->
bus_›s
->
©h_bus_ty≥
 =
ATH_USB
) &&

373 (
	`AR_SREV_9280
(
ah
)))

374 
ìp
->
modÆHódî
[0].
x∑BüsLvl
 = 0;

377 
	}
}

379 
u32
 
	$©h9k_hw_def_gë_ì¥om
(
©h_hw
 *
ah
,

380 
ì¥om_∑øm
 
∑øm
)

382 
¨5416_ì¥om_def
 *
ìp
 = &
ah
->
ì¥om
.
def
;

383 
modÆ_ìp_hódî
 *
pModÆ
 = 
ìp
->
modÆHódî
;

384 
ba£_ìp_hódî
 *
pBa£
 = &
ìp
->
ba£EïHódî
;

385 
b™d
 = 0;

387 
∑øm
) {

388 
EEP_NFTHRESH_5
:

389  
pModÆ
[0].
noi£Flo‹ThªshCh
[0];

390 
EEP_NFTHRESH_2
:

391  
pModÆ
[1].
noi£Flo‹ThªshCh
[0];

392 
EEP_MAC_LSW
:

393  
	`gë_u«lig√d_be16
(
pBa£
->
macAddr
);

394 
EEP_MAC_MID
:

395  
	`gë_u«lig√d_be16
(
pBa£
->
macAddr
 + 2);

396 
EEP_MAC_MSW
:

397  
	`gë_u«lig√d_be16
(
pBa£
->
macAddr
 + 4);

398 
EEP_REG_0
:

399  
pBa£
->
ªgDmn
[0];

400 
EEP_OP_CAP
:

401  
pBa£
->
devi˚C≠
;

402 
EEP_OP_MODE
:

403  
pBa£
->
›C≠Fœgs
;

404 
EEP_RF_SILENT
:

405  
pBa£
->
rfSûít
;

406 
EEP_OB_5
:

407  
pModÆ
[0].
ob
;

408 
EEP_DB_5
:

409  
pModÆ
[0].
db
;

410 
EEP_OB_2
:

411  
pModÆ
[1].
ob
;

412 
EEP_DB_2
:

413  
pModÆ
[1].
db
;

414 
EEP_MINOR_REV
:

415  
AR5416_VER_MASK
;

416 
EEP_TX_MASK
:

417  
pBa£
->
txMask
;

418 
EEP_RX_MASK
:

419  
pBa£
->
rxMask
;

420 
EEP_FSTCLK_5G
:

421  
pBa£
->
Á°Clk5g
;

422 
EEP_RXGAIN_TYPE
:

423  
pBa£
->
rxGaöTy≥
;

424 
EEP_TXGAIN_TYPE
:

425  
pBa£
->
txGaöTy≥
;

426 
EEP_OL_PWRCTRL
:

427 i‡(
AR5416_VER_MASK
 >
AR5416_EEP_MINOR_VER_19
)

428  
pBa£
->
›íLo›PwrC¡l
 ? 
åue
 : 
Ál£
;

430  
Ál£
;

431 
EEP_RC_CHAIN_MASK
:

432 i‡(
AR5416_VER_MASK
 >
AR5416_EEP_MINOR_VER_19
)

433  
pBa£
->
rcChaöMask
;

436 
EEP_DAC_HPWR_5G
:

437 i‡(
AR5416_VER_MASK
 >
AR5416_EEP_MINOR_VER_20
)

438  
pBa£
->
dacHiPwrMode_5G
;

441 
EEP_FRAC_N_5G
:

442 i‡(
AR5416_VER_MASK
 >
AR5416_EEP_MINOR_VER_22
)

443  
pBa£
->
‰ac_n_5g
;

446 
EEP_PWR_TABLE_OFFSET
:

447 i‡(
AR5416_VER_MASK
 >
AR5416_EEP_MINOR_VER_21
)

448  
pBa£
->
pwr_èbÀ_off£t
;

450  
AR5416_PWR_TABLE_OFFSET_DB
;

451 
EEP_ANTENNA_GAIN_2G
:

452 
b™d
 = 1;

454 
EEP_ANTENNA_GAIN_5G
:

455  
	`max_t
(
u8
, max_t(u8,

456 
pModÆ
[
b™d
].
™ã¬aGaöCh
[0],

457 
pModÆ
[
b™d
].
™ã¬aGaöCh
[1]),

458 
pModÆ
[
b™d
].
™ã¬aGaöCh
[2]);

462 
	}
}

464 
	$©h9k_hw_def_£t_gaö
(
©h_hw
 *
ah
,

465 
modÆ_ìp_hódî
 *
pModÆ
,

466 
¨5416_ì¥om_def
 *
ìp
,

467 
u8
 
txRxAâíLoˇl
, 
ªgChaöOff£t
, 
i
)

469 i‡(
AR5416_VER_MASK
 >
AR5416_EEP_MINOR_VER_3
) {

470 
txRxAâíLoˇl
 = 
pModÆ
->
txRxAâíCh
[
i
];

472 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
)) {

473 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_GAIN_2GHZ
 + 
ªgChaöOff£t
,

474 
AR_PHY_GAIN_2GHZ_XATTEN1_MARGIN
,

475 
pModÆ
->
bswM¨gö
[
i
]);

476 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_GAIN_2GHZ
 + 
ªgChaöOff£t
,

477 
AR_PHY_GAIN_2GHZ_XATTEN1_DB
,

478 
pModÆ
->
bswAâí
[
i
]);

479 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_GAIN_2GHZ
 + 
ªgChaöOff£t
,

480 
AR_PHY_GAIN_2GHZ_XATTEN2_MARGIN
,

481 
pModÆ
->
x©ãn2M¨gö
[
i
]);

482 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_GAIN_2GHZ
 + 
ªgChaöOff£t
,

483 
AR_PHY_GAIN_2GHZ_XATTEN2_DB
,

484 
pModÆ
->
x©ãn2Db
[
i
]);

486 
	`REG_WRITE
(
ah
, 
AR_PHY_GAIN_2GHZ
 + 
ªgChaöOff£t
,

487 (
	`REG_READ
(
ah
, 
AR_PHY_GAIN_2GHZ
 + 
ªgChaöOff£t
) &

488 ~
AR_PHY_GAIN_2GHZ_BSW_MARGIN
)

489 | 
	`SM
(
pModÆ
-> 
bswM¨gö
[
i
],

490 
AR_PHY_GAIN_2GHZ_BSW_MARGIN
));

491 
	`REG_WRITE
(
ah
, 
AR_PHY_GAIN_2GHZ
 + 
ªgChaöOff£t
,

492 (
	`REG_READ
(
ah
, 
AR_PHY_GAIN_2GHZ
 + 
ªgChaöOff£t
) &

493 ~
AR_PHY_GAIN_2GHZ_BSW_ATTEN
)

494 | 
	`SM
(
pModÆ
->
bswAâí
[
i
],

495 
AR_PHY_GAIN_2GHZ_BSW_ATTEN
));

499 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
)) {

500 
	`REG_RMW_FIELD
(
ah
,

501 
AR_PHY_RXGAIN
 + 
ªgChaöOff£t
,

502 
AR9280_PHY_RXGAIN_TXRX_ATTEN
, 
txRxAâíLoˇl
);

503 
	`REG_RMW_FIELD
(
ah
,

504 
AR_PHY_RXGAIN
 + 
ªgChaöOff£t
,

505 
AR9280_PHY_RXGAIN_TXRX_MARGIN
, 
pModÆ
->
rxTxM¨göCh
[
i
]);

507 
	`REG_WRITE
(
ah
,

508 
AR_PHY_RXGAIN
 + 
ªgChaöOff£t
,

509 (
	`REG_READ
(
ah
, 
AR_PHY_RXGAIN
 + 
ªgChaöOff£t
) &

510 ~
AR_PHY_RXGAIN_TXRX_ATTEN
)

511 | 
	`SM
(
txRxAâíLoˇl
, 
AR_PHY_RXGAIN_TXRX_ATTEN
));

512 
	`REG_WRITE
(
ah
,

513 
AR_PHY_GAIN_2GHZ
 + 
ªgChaöOff£t
,

514 (
	`REG_READ
(
ah
, 
AR_PHY_GAIN_2GHZ
 + 
ªgChaöOff£t
) &

515 ~
AR_PHY_GAIN_2GHZ_RXTX_MARGIN
) |

516 
	`SM
(
pModÆ
->
rxTxM¨göCh
[
i
], 
AR_PHY_GAIN_2GHZ_RXTX_MARGIN
));

518 
	}
}

520 
	$©h9k_hw_def_£t_bﬂrd_vÆues
(
©h_hw
 *
ah
,

521 
©h9k_ch™√l
 *
ch™
)

523 
modÆ_ìp_hódî
 *
pModÆ
;

524 
¨5416_ì¥om_def
 *
ìp
 = &
ah
->
ì¥om
.
def
;

525 
i
, 
ªgChaöOff£t
;

526 
u8
 
txRxAâíLoˇl
;

528 
pModÆ
 = &(
ìp
->
modÆHódî
[
	`IS_CHAN_2GHZ
(
ch™
)]);

529 
txRxAâíLoˇl
 = 
	`IS_CHAN_2GHZ
(
ch™
) ? 23 : 44;

531 
	`REG_WRITE
(
ah
, 
AR_PHY_SWITCH_COM
, 
pModÆ
->
™tCålComm⁄
 & 0xffff);

533 
i
 = 0; i < 
AR5416_MAX_CHAINS
; i++) {

534 i‡(
	`AR_SREV_9280
(
ah
)) {

535 i‡(
i
 >= 2)

539 i‡((
ah
->
rxchaömask
 =5 ||áh->
txchaömask
 =5Ë&& (
i
 != 0))

540 
ªgChaöOff£t
 = (
i
 == 1) ? 0x2000 : 0x1000;

542 
ªgChaöOff£t
 = 
i
 * 0x1000;

544 
	`REG_WRITE
(
ah
, 
AR_PHY_SWITCH_CHAIN_0
 + 
ªgChaöOff£t
,

545 
pModÆ
->
™tCålChaö
[
i
]);

547 
	`REG_WRITE
(
ah
, 
	`AR_PHY_TIMING_CTRL4
(0Ë+ 
ªgChaöOff£t
,

548 (
	`REG_READ
(
ah
, 
	`AR_PHY_TIMING_CTRL4
(0Ë+ 
ªgChaöOff£t
) &

549 ~(
AR_PHY_TIMING_CTRL4_IQCORR_Q_Q_COFF
 |

550 
AR_PHY_TIMING_CTRL4_IQCORR_Q_I_COFF
)) |

551 
	`SM
(
pModÆ
->
iqCÆICh
[
i
],

552 
AR_PHY_TIMING_CTRL4_IQCORR_Q_I_COFF
) |

553 
	`SM
(
pModÆ
->
iqCÆQCh
[
i
],

554 
AR_PHY_TIMING_CTRL4_IQCORR_Q_Q_COFF
));

556 
	`©h9k_hw_def_£t_gaö
(
ah
, 
pModÆ
, 
ìp
, 
txRxAâíLoˇl
,

557 
ªgChaöOff£t
, 
i
);

560 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
)) {

561 i‡(
	`IS_CHAN_2GHZ
(
ch™
)) {

562 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
, 
AR_AN_RF2G1_CH0
,

563 
AR_AN_RF2G1_CH0_OB
,

564 
AR_AN_RF2G1_CH0_OB_S
,

565 
pModÆ
->
ob
);

566 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
, 
AR_AN_RF2G1_CH0
,

567 
AR_AN_RF2G1_CH0_DB
,

568 
AR_AN_RF2G1_CH0_DB_S
,

569 
pModÆ
->
db
);

570 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
, 
AR_AN_RF2G1_CH1
,

571 
AR_AN_RF2G1_CH1_OB
,

572 
AR_AN_RF2G1_CH1_OB_S
,

573 
pModÆ
->
ob_ch1
);

574 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
, 
AR_AN_RF2G1_CH1
,

575 
AR_AN_RF2G1_CH1_DB
,

576 
AR_AN_RF2G1_CH1_DB_S
,

577 
pModÆ
->
db_ch1
);

579 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
, 
AR_AN_RF5G1_CH0
,

580 
AR_AN_RF5G1_CH0_OB5
,

581 
AR_AN_RF5G1_CH0_OB5_S
,

582 
pModÆ
->
ob
);

583 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
, 
AR_AN_RF5G1_CH0
,

584 
AR_AN_RF5G1_CH0_DB5
,

585 
AR_AN_RF5G1_CH0_DB5_S
,

586 
pModÆ
->
db
);

587 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
, 
AR_AN_RF5G1_CH1
,

588 
AR_AN_RF5G1_CH1_OB5
,

589 
AR_AN_RF5G1_CH1_OB5_S
,

590 
pModÆ
->
ob_ch1
);

591 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
, 
AR_AN_RF5G1_CH1
,

592 
AR_AN_RF5G1_CH1_DB5
,

593 
AR_AN_RF5G1_CH1_DB5_S
,

594 
pModÆ
->
db_ch1
);

596 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
, 
AR_AN_TOP2
,

597 
AR_AN_TOP2_XPABIAS_LVL
,

598 
AR_AN_TOP2_XPABIAS_LVL_S
,

599 
pModÆ
->
x∑BüsLvl
);

600 
	`©h9k_hw_™Æog_shi·_rmw
(
ah
, 
AR_AN_TOP2
,

601 
AR_AN_TOP2_LOCALBIAS
,

602 
AR_AN_TOP2_LOCALBIAS_S
,

603 !!(
pModÆ
->
 a_˘l
 &

604 
LNA_CTL_LOCAL_BIAS
));

605 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_XPA_CFG
, 
AR_PHY_FORCE_XPA_CFG
,

606 !!(
pModÆ
->
 a_˘l
 & 
LNA_CTL_FORCE_XPA
));

609 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SETTLING
, 
AR_PHY_SETTLING_SWITCH
,

610 
pModÆ
->
swôchSëéög
);

611 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_DESIRED_SZ
, 
AR_PHY_DESIRED_SZ_ADC
,

612 
pModÆ
->
adcDesúedSize
);

614 i‡(!
	`AR_SREV_9280_20_OR_LATER
(
ah
))

615 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_DESIRED_SZ
,

616 
AR_PHY_DESIRED_SZ_PGA
,

617 
pModÆ
->
pgaDesúedSize
);

619 
	`REG_WRITE
(
ah
, 
AR_PHY_RF_CTL4
,

620 
	`SM
(
pModÆ
->
txEndToX∑Off
, 
AR_PHY_RF_CTL4_TX_END_XPAA_OFF
)

621 | 
	`SM
(
pModÆ
->
txEndToX∑Off
,

622 
AR_PHY_RF_CTL4_TX_END_XPAB_OFF
)

623 | 
	`SM
(
pModÆ
->
txFømeToX∑On
,

624 
AR_PHY_RF_CTL4_FRAME_XPAA_ON
)

625 | 
	`SM
(
pModÆ
->
txFømeToX∑On
,

626 
AR_PHY_RF_CTL4_FRAME_XPAB_ON
));

628 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_RF_CTL3
, 
AR_PHY_TX_END_TO_A2_RX_ON
,

629 
pModÆ
->
txEndToRxOn
);

631 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
)) {

632 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_CCA
, 
AR9280_PHY_CCA_THRESH62
,

633 
pModÆ
->
thªsh62
);

634 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_EXT_CCA0
,

635 
AR_PHY_EXT_CCA0_THRESH62
,

636 
pModÆ
->
thªsh62
);

638 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_CCA
, 
AR_PHY_CCA_THRESH62
,

639 
pModÆ
->
thªsh62
);

640 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_EXT_CCA
,

641 
AR_PHY_EXT_CCA_THRESH62
,

642 
pModÆ
->
thªsh62
);

645 i‡(
AR5416_VER_MASK
 >
AR5416_EEP_MINOR_VER_2
) {

646 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_RF_CTL2
,

647 
AR_PHY_TX_END_DATA_START
,

648 
pModÆ
->
txFømeToD©aSèπ
);

649 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_RF_CTL2
, 
AR_PHY_TX_END_PA_ON
,

650 
pModÆ
->
txFømeToPaOn
);

653 i‡(
AR5416_VER_MASK
 >
AR5416_EEP_MINOR_VER_3
) {

654 i‡(
	`IS_CHAN_HT40
(
ch™
))

655 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_SETTLING
,

656 
AR_PHY_SETTLING_SWITCH
,

657 
pModÆ
->
swSëéeHt40
);

660 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
) &&

661 
AR5416_VER_MASK
 >
AR5416_EEP_MINOR_VER_19
)

662 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_CCK_TX_CTRL
,

663 
AR_PHY_CCK_TX_CTRL_TX_DAC_SCALE_CCK
,

664 
pModÆ
->
miscBôs
);

667 i‡(
	`AR_SREV_9280_20
(
ah
Ë&& 
AR5416_VER_MASK
 >
AR5416_EEP_MINOR_VER_20
) {

668 i‡(
	`IS_CHAN_2GHZ
(
ch™
))

669 
	`REG_RMW_FIELD
(
ah
, 
AR_AN_TOP1
, 
AR_AN_TOP1_DACIPMODE
,

670 
ìp
->
ba£EïHódî
.
dacLpMode
);

671 i‡(
ìp
->
ba£EïHódî
.
dacHiPwrMode_5G
)

672 
	`REG_RMW_FIELD
(
ah
, 
AR_AN_TOP1
, 
AR_AN_TOP1_DACIPMODE
, 0);

674 
	`REG_RMW_FIELD
(
ah
, 
AR_AN_TOP1
, 
AR_AN_TOP1_DACIPMODE
,

675 
ìp
->
ba£EïHódî
.
dacLpMode
);

677 
	`udñay
(100);

679 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_FRAME_CTL
, 
AR_PHY_FRAME_CTL_TX_CLIP
,

680 
pModÆ
->
miscBôs
 >> 2);

682 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TX_PWRCTRL9
,

683 
AR_PHY_TX_DESIRED_SCALE_CCK
,

684 
ìp
->
ba£EïHódî
.
desúedSˇÀCCK
);

686 
	}
}

688 
	$©h9k_hw_def_£t_addac
(
©h_hw
 *
ah
,

689 
©h9k_ch™√l
 *
ch™
)

691 
	#XPA_LVL_FREQ
(
˙t
Ë(
pModÆ
->
x∑BüsLvlFªq
[˙t])

	)

692 
modÆ_ìp_hódî
 *
pModÆ
;

693 
¨5416_ì¥om_def
 *
ìp
 = &
ah
->
ì¥om
.
def
;

694 
u8
 
bü¶evñ
;

696 i‡(
ah
->
hw_vîsi⁄
.
macVîsi⁄
 !
AR_SREV_VERSION_9160
)

699 i‡(
ah
->
ìp_›s
->
	`gë_ì¥om_ªv
◊hË< 
AR5416_EEP_MINOR_VER_7
)

702 
pModÆ
 = &(
ìp
->
modÆHódî
[
	`IS_CHAN_2GHZ
(
ch™
)]);

704 i‡(
pModÆ
->
x∑BüsLvl
 != 0xff) {

705 
bü¶evñ
 = 
pModÆ
->
x∑BüsLvl
;

707 
u16
 
ª£tFªqBö
, 
‰eqBö
, 
‰eqCou¡
 = 0;

708 
ch™_˚¡îs
 
˚¡îs
;

710 
	`©h9k_hw_gë_ch™√l_˚¡îs
(
ah
, 
ch™
, &
˚¡îs
);

712 
ª£tFªqBö
 = 
	`FREQ2FBIN
(
˚¡îs
.
sy¡h_˚¡î
,

713 
	`IS_CHAN_2GHZ
(
ch™
));

714 
‰eqBö
 = 
	`XPA_LVL_FREQ
(0) & 0xff;

715 
bü¶evñ
 = (
u8
Ë(
	`XPA_LVL_FREQ
(0) >> 14);

717 
‰eqCou¡
++;

719 
‰eqCou¡
 < 3) {

720 i‡(
	`XPA_LVL_FREQ
(
‰eqCou¡
) == 0x0)

723 
‰eqBö
 = 
	`XPA_LVL_FREQ
(
‰eqCou¡
) & 0xff;

724 i‡(
ª£tFªqBö
 >
‰eqBö
)

725 
bü¶evñ
 = (
u8
)(
	`XPA_LVL_FREQ
(
‰eqCou¡
) >> 14);

728 
‰eqCou¡
++;

732 i‡(
	`IS_CHAN_2GHZ
(
ch™
)) {

733 
	`INI_RA
(&
ah
->
öiAddac
, 7, 1) = (INI_RA(&ah->iniAddac,

734 7, 1Ë& (~0x18)Ë| 
bü¶evñ
 << 3;

736 
	`INI_RA
(&
ah
->
öiAddac
, 6, 1) = (INI_RA(&ah->iniAddac,

737 6, 1Ë& (~0xc0)Ë| 
bü¶evñ
 << 6;

739 #unde‡
XPA_LVL_FREQ


740 
	}
}

742 
öt16_t
 
	$©h9k_ch™ge_gaö_bound¨y_£âög
(
©h_hw
 *
ah
,

743 
u16
 *
gb
,

744 
u16
 
numXpdGaö
,

745 
u16
 
pdGaöOvîœp_t2
,

746 
öt8_t
 
pwr_èbÀ_off£t
,

747 
öt16_t
 *
diff
)

750 
u16
 
k
;

757 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
)) {

758 
u16
 
gb_limô
;

760 i‡(
AR5416_PWR_TABLE_OFFSET_DB
 !
pwr_èbÀ_off£t
) {

762 *
diff
 = (
u16
)(
pwr_èbÀ_off£t
 - 
AR5416_PWR_TABLE_OFFSET_DB
);

764 *
diff
 *= 2;

768 
k
 = 0; k < 
numXpdGaö
; k++)

769 
gb
[
k
] = (
u16
)(gb[k] - *
diff
);

774 
gb_limô
 = (
u16
)(
MAX_RATE_POWER
 - 
pdGaöOvîœp_t2
);

776 
k
 = 0; k < 
numXpdGaö
; k++)

777 
gb
[
k
] = (
u16
)
	`mö
(
gb_limô
, gb[k]);

780  *
diff
;

781 
	}
}

783 
	$©h9k_adju°_pdadc_vÆues
(
©h_hw
 *
ah
,

784 
öt8_t
 
pwr_èbÀ_off£t
,

785 
öt16_t
 
diff
,

786 
u8
 *
pdadcVÆues
)

788 
	#NUM_PDADC
(
diff
Ë(
AR5416_NUM_PDADC_VALUES
 - diff)

	)

789 
u16
 
k
;

796 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
)) {

797 i‡(
AR5416_PWR_TABLE_OFFSET_DB
 !
pwr_èbÀ_off£t
) {

799 
k
 = 0; k < (
u16
)
	`NUM_PDADC
(
diff
); k++ ) {

800 
pdadcVÆues
[
k
] =ÖdadcVÆues[k + 
diff
];

804 
k
 = (
u16
)
	`NUM_PDADC
(
diff
); k < NUM_PDADC(0); k++) {

805 
pdadcVÆues
[
k
] =ÖdadcVÆues[
	`NUM_PDADC
(
diff
)];

809 #unde‡
NUM_PDADC


810 
	}
}

812 
	$©h9k_hw_£t_def_powî_ˇl_èbÀ
(
©h_hw
 *
ah
,

813 
©h9k_ch™√l
 *
ch™
)

815 
	#SM_PD_GAIN
(
x
Ë
	`SM
(0x38, 
AR_PHY_TPCRG5_PD_GAIN_BOUNDARY_
##x)

	)

816 
	#SM_PDGAIN_B
(
x
, 
y
) \

817 
	`SM
((
gaöBound¨õs
[
x
]), 
AR_PHY_TPCRG5_PD_GAIN_BOUNDARY_
##
y
)

	)

818 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

819 
¨5416_ì¥om_def
 *
pEïD©a
 = &
ah
->
ì¥om
.
def
;

820 
ˇl_d©a_≥r_‰eq
 *
pRawD©a£t
;

821 
u8
 *
pCÆBCh™s
 = 
NULL
;

822 
u16
 
pdGaöOvîœp_t2
;

823 
u8
 
pdadcVÆues
[
AR5416_NUM_PDADC_VALUES
];

824 
u16
 
gaöBound¨õs
[
AR5416_PD_GAINS_IN_MASK
];

825 
u16
 
numPõrs
, 
i
, 
j
;

826 
öt16_t
 
diff
 = 0;

827 
u16
 
numXpdGaö
, 
xpdMask
;

828 
u16
 
xpdGaöVÆues
[
AR5416_NUM_PD_GAINS
] = { 0, 0, 0, 0 };

829 
u32
 
ªg32
, 
ªgOff£t
, 
ªgChaöOff£t
;

830 
öt16_t
 
modÆIdx
;

831 
öt8_t
 
pwr_èbÀ_off£t
;

833 
modÆIdx
 = 
	`IS_CHAN_2GHZ
(
ch™
) ? 1 : 0;

834 
xpdMask
 = 
pEïD©a
->
modÆHódî
[
modÆIdx
].
xpdGaö
;

836 
pwr_èbÀ_off£t
 = 
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_PWR_TABLE_OFFSET
);

838 i‡((
pEïD©a
->
ba£EïHódî
.
vîsi⁄
 & 
AR5416_EEP_VER_MINOR_MASK
) >=

839 
AR5416_EEP_MINOR_VER_2
) {

840 
pdGaöOvîœp_t2
 =

841 
pEïD©a
->
modÆHódî
[
modÆIdx
].
pdGaöOvîœp
;

843 
pdGaöOvîœp_t2
 = (
u16
)(
	`MS
(
	`REG_READ
(
ah
, 
AR_PHY_TPCRG5
),

844 
AR_PHY_TPCRG5_PD_GAIN_OVERLAP
));

847 i‡(
	`IS_CHAN_2GHZ
(
ch™
)) {

848 
pCÆBCh™s
 = 
pEïD©a
->
ˇlFªqPõr2G
;

849 
numPõrs
 = 
AR5416_NUM_2G_CAL_PIERS
;

851 
pCÆBCh™s
 = 
pEïD©a
->
ˇlFªqPõr5G
;

852 
numPõrs
 = 
AR5416_NUM_5G_CAL_PIERS
;

855 i‡(
OLC_FOR_AR9280_20_LATER
 && 
	`IS_CHAN_2GHZ
(
ch™
)) {

856 
pRawD©a£t
 = 
pEïD©a
->
ˇlPõrD©a2G
[0];

857 
ah
->
öôPDADC
 = ((
ˇlD©aPîFªqOpLo›
 *)

858 
pRawD©a£t
)->
vpdPdg
[0][0];

861 
numXpdGaö
 = 0;

863 
i
 = 1; i <
AR5416_PD_GAINS_IN_MASK
; i++) {

864 i‡((
xpdMask
 >> (
AR5416_PD_GAINS_IN_MASK
 - 
i
)) & 1) {

865 i‡(
numXpdGaö
 >
AR5416_NUM_PD_GAINS
)

867 
xpdGaöVÆues
[
numXpdGaö
] =

868 (
u16
)(
AR5416_PD_GAINS_IN_MASK
 - 
i
);

869 
numXpdGaö
++;

873 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TPCRG1
, 
AR_PHY_TPCRG1_NUM_PD_GAIN
,

874 (
numXpdGaö
 - 1) & 0x3);

875 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TPCRG1
, 
AR_PHY_TPCRG1_PD_GAIN_1
,

876 
xpdGaöVÆues
[0]);

877 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TPCRG1
, 
AR_PHY_TPCRG1_PD_GAIN_2
,

878 
xpdGaöVÆues
[1]);

879 
	`REG_RMW_FIELD
(
ah
, 
AR_PHY_TPCRG1
, 
AR_PHY_TPCRG1_PD_GAIN_3
,

880 
xpdGaöVÆues
[2]);

882 
i
 = 0; i < 
AR5416_MAX_CHAINS
; i++) {

883 i‡((
ah
->
rxchaömask
 =5 ||áh->
txchaömask
 == 5) &&

884 (
i
 != 0)) {

885 
ªgChaöOff£t
 = (
i
 == 1) ? 0x2000 : 0x1000;

887 
ªgChaöOff£t
 = 
i
 * 0x1000;

889 i‡(
pEïD©a
->
ba£EïHódî
.
txMask
 & (1 << 
i
)) {

890 i‡(
	`IS_CHAN_2GHZ
(
ch™
))

891 
pRawD©a£t
 = 
pEïD©a
->
ˇlPõrD©a2G
[
i
];

893 
pRawD©a£t
 = 
pEïD©a
->
ˇlPõrD©a5G
[
i
];

896 i‡(
OLC_FOR_AR9280_20_LATER
) {

897 
u8
 
pcdacIdx
;

898 
u8
 
txPowî
;

900 
	`©h9k_gë_txgaö_ödex
(
ah
, 
ch™
,

901 (
ˇlD©aPîFªqOpLo›
 *)
pRawD©a£t
,

902 
pCÆBCh™s
, 
numPõrs
, &
txPowî
, &
pcdacIdx
);

903 
	`©h9k_ﬁc_gë_pdadcs
(
ah
, 
pcdacIdx
,

904 
txPowî
/2, 
pdadcVÆues
);

906 
	`©h9k_hw_gë_gaö_bound¨õs_pdadcs
(
ah
,

907 
ch™
, 
pRawD©a£t
,

908 
pCÆBCh™s
, 
numPõrs
,

909 
pdGaöOvîœp_t2
,

910 
gaöBound¨õs
,

911 
pdadcVÆues
,

912 
numXpdGaö
);

915 
diff
 = 
	`©h9k_ch™ge_gaö_bound¨y_£âög
(
ah
,

916 
gaöBound¨õs
,

917 
numXpdGaö
,

918 
pdGaöOvîœp_t2
,

919 
pwr_èbÀ_off£t
,

920 &
diff
);

922 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

924 i‡(
OLC_FOR_AR9280_20_LATER
) {

925 
	`REG_WRITE
(
ah
,

926 
AR_PHY_TPCRG5
 + 
ªgChaöOff£t
,

927 
	`SM
(0x6,

928 
AR_PHY_TPCRG5_PD_GAIN_OVERLAP
) |

929 
	`SM_PD_GAIN
(1) | SM_PD_GAIN(2) |

930 
	`SM_PD_GAIN
(3) | SM_PD_GAIN(4));

932 
	`REG_WRITE
(
ah
,

933 
AR_PHY_TPCRG5
 + 
ªgChaöOff£t
,

934 
	`SM
(
pdGaöOvîœp_t2
,

935 
AR_PHY_TPCRG5_PD_GAIN_OVERLAP
)|

936 
	`SM_PDGAIN_B
(0, 1) |

937 
	`SM_PDGAIN_B
(1, 2) |

938 
	`SM_PDGAIN_B
(2, 3) |

939 
	`SM_PDGAIN_B
(3, 4));

942 
	`©h9k_adju°_pdadc_vÆues
(
ah
, 
pwr_èbÀ_off£t
,

943 
diff
, 
pdadcVÆues
);

945 
ªgOff£t
 = 
AR_PHY_BASE
 + (672 << 2Ë+ 
ªgChaöOff£t
;

946 
j
 = 0; j < 32; j++) {

947 
ªg32
 = 
	`gë_u«lig√d_À32
(&
pdadcVÆues
[4 * 
j
]);

948 
	`REG_WRITE
(
ah
, 
ªgOff£t
, 
ªg32
);

950 
	`©h_dbg
(
comm⁄
, 
EEPROM
,

952 
i
, 
ªgChaöOff£t
, 
ªgOff£t
,

953 
ªg32
);

954 
	`©h_dbg
(
comm⁄
, 
EEPROM
,

956 
i
, 4 * 
j
, 
pdadcVÆues
[4 * j],

957 4 * 
j
 + 1, 
pdadcVÆues
[4 * j + 1],

958 4 * 
j
 + 2, 
pdadcVÆues
[4 * j + 2],

959 4 * 
j
 + 3, 
pdadcVÆues
[4 * j + 3]);

961 
ªgOff£t
 += 4;

963 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

967 #unde‡
SM_PD_GAIN


968 #unde‡
SM_PDGAIN_B


969 
	}
}

971 
	$©h9k_hw_£t_def_powî_≥r_øã_èbÀ
(
©h_hw
 *
ah
,

972 
©h9k_ch™√l
 *
ch™
,

973 
öt16_t
 *
øãsAºay
,

974 
u16
 
cfgCé
,

975 
u16
 
™ã¬a_ªdu˘i⁄
,

976 
u16
 
powîLimô
)

978 
¨5416_ì¥om_def
 *
pEïD©a
 = &
ah
->
ì¥om
.
def
;

979 
u16
 
twi˚MaxEdgePowî
;

980 
i
;

981 
ˇl_˘l_d©a
 *
ªp
;

982 
ˇl_èrgë_powî_Àg
 
èrgëPowîOfdm
, 
èrgëPowîCck
 = {

985 
ˇl_èrgë_powî_Àg
 
èrgëPowîOfdmExt
 = {

986 0, { 0, 0, 0, 0} }, 
èrgëPowîCckExt
 = {

989 
ˇl_èrgë_powî_ht
 
èrgëPowîHt20
, 
èrgëPowîHt40
 = {

992 
u16
 
sˇÀdPowî
 = 0, 
möCéPowî
;

993 c⁄° 
u16
 
˘lModesF‹11a
[] = {

994 
CTL_11A
, 
CTL_5GHT20
, 
CTL_11A_EXT
, 
CTL_5GHT40


996 c⁄° 
u16
 
˘lModesF‹11g
[] = {

997 
CTL_11B
, 
CTL_11G
, 
CTL_2GHT20
,

998 
CTL_11B_EXT
, 
CTL_11G_EXT
, 
CTL_2GHT40


1000 
u16
 
numCéModes
;

1001 c⁄° 
u16
 *
pCéMode
;

1002 
u16
 
˘lMode
, 
‰eq
;

1003 
ch™_˚¡îs
 
˚¡îs
;

1004 
tx_chaömask
;

1005 
u16
 
twi˚MöEdgePowî
;

1007 
tx_chaömask
 = 
ah
->
txchaömask
;

1009 
	`©h9k_hw_gë_ch™√l_˚¡îs
(
ah
, 
ch™
, &
˚¡îs
);

1011 
sˇÀdPowî
 = 
	`©h9k_hw_gë_sˇÀd_powî
(
ah
, 
powîLimô
,

1012 
™ã¬a_ªdu˘i⁄
);

1014 i‡(
	`IS_CHAN_2GHZ
(
ch™
)) {

1015 
numCéModes
 = 
	`ARRAY_SIZE
(
˘lModesF‹11g
) -

1016 
SUB_NUM_CTL_MODES_AT_2G_40
;

1017 
pCéMode
 = 
˘lModesF‹11g
;

1019 
	`©h9k_hw_gë_Àgacy_èrgë_powîs
(
ah
, 
ch™
,

1020 
pEïD©a
->
ˇlT¨gëPowîCck
,

1021 
AR5416_NUM_2G_CCK_TARGET_POWERS
,

1022 &
èrgëPowîCck
, 4, 
Ál£
);

1023 
	`©h9k_hw_gë_Àgacy_èrgë_powîs
(
ah
, 
ch™
,

1024 
pEïD©a
->
ˇlT¨gëPowî2G
,

1025 
AR5416_NUM_2G_20_TARGET_POWERS
,

1026 &
èrgëPowîOfdm
, 4, 
Ál£
);

1027 
	`©h9k_hw_gë_èrgë_powîs
(
ah
, 
ch™
,

1028 
pEïD©a
->
ˇlT¨gëPowî2GHT20
,

1029 
AR5416_NUM_2G_20_TARGET_POWERS
,

1030 &
èrgëPowîHt20
, 8, 
Ál£
);

1032 i‡(
	`IS_CHAN_HT40
(
ch™
)) {

1033 
numCéModes
 = 
	`ARRAY_SIZE
(
˘lModesF‹11g
);

1034 
	`©h9k_hw_gë_èrgë_powîs
(
ah
, 
ch™
,

1035 
pEïD©a
->
ˇlT¨gëPowî2GHT40
,

1036 
AR5416_NUM_2G_40_TARGET_POWERS
,

1037 &
èrgëPowîHt40
, 8, 
åue
);

1038 
	`©h9k_hw_gë_Àgacy_èrgë_powîs
(
ah
, 
ch™
,

1039 
pEïD©a
->
ˇlT¨gëPowîCck
,

1040 
AR5416_NUM_2G_CCK_TARGET_POWERS
,

1041 &
èrgëPowîCckExt
, 4, 
åue
);

1042 
	`©h9k_hw_gë_Àgacy_èrgë_powîs
(
ah
, 
ch™
,

1043 
pEïD©a
->
ˇlT¨gëPowî2G
,

1044 
AR5416_NUM_2G_20_TARGET_POWERS
,

1045 &
èrgëPowîOfdmExt
, 4, 
åue
);

1048 
numCéModes
 = 
	`ARRAY_SIZE
(
˘lModesF‹11a
) -

1049 
SUB_NUM_CTL_MODES_AT_5G_40
;

1050 
pCéMode
 = 
˘lModesF‹11a
;

1052 
	`©h9k_hw_gë_Àgacy_èrgë_powîs
(
ah
, 
ch™
,

1053 
pEïD©a
->
ˇlT¨gëPowî5G
,

1054 
AR5416_NUM_5G_20_TARGET_POWERS
,

1055 &
èrgëPowîOfdm
, 4, 
Ál£
);

1056 
	`©h9k_hw_gë_èrgë_powîs
(
ah
, 
ch™
,

1057 
pEïD©a
->
ˇlT¨gëPowî5GHT20
,

1058 
AR5416_NUM_5G_20_TARGET_POWERS
,

1059 &
èrgëPowîHt20
, 8, 
Ál£
);

1061 i‡(
	`IS_CHAN_HT40
(
ch™
)) {

1062 
numCéModes
 = 
	`ARRAY_SIZE
(
˘lModesF‹11a
);

1063 
	`©h9k_hw_gë_èrgë_powîs
(
ah
, 
ch™
,

1064 
pEïD©a
->
ˇlT¨gëPowî5GHT40
,

1065 
AR5416_NUM_5G_40_TARGET_POWERS
,

1066 &
èrgëPowîHt40
, 8, 
åue
);

1067 
	`©h9k_hw_gë_Àgacy_èrgë_powîs
(
ah
, 
ch™
,

1068 
pEïD©a
->
ˇlT¨gëPowî5G
,

1069 
AR5416_NUM_5G_20_TARGET_POWERS
,

1070 &
èrgëPowîOfdmExt
, 4, 
åue
);

1074 
˘lMode
 = 0; céModê< 
numCéModes
; ctlMode++) {

1075 
boﬁ
 
isHt40CéMode
 = (
pCéMode
[
˘lMode
] =
CTL_5GHT40
) ||

1076 (
pCéMode
[
˘lMode
] =
CTL_2GHT40
);

1077 i‡(
isHt40CéMode
)

1078 
‰eq
 = 
˚¡îs
.
sy¡h_˚¡î
;

1079 i‡(
pCéMode
[
˘lMode
] & 
EXT_ADDITIVE
)

1080 
‰eq
 = 
˚¡îs
.
ext_˚¡î
;

1082 
‰eq
 = 
˚¡îs
.
˘l_˚¡î
;

1084 
twi˚MaxEdgePowî
 = 
MAX_RATE_POWER
;

1086 
i
 = 0; (ò< 
AR5416_NUM_CTLS
Ë&& 
pEïD©a
->
˘lIndex
[i]; i++) {

1087 i‡((((
cfgCé
 & ~
CTL_MODE_M
) |

1088 (
pCéMode
[
˘lMode
] & 
CTL_MODE_M
)) ==

1089 
pEïD©a
->
˘lIndex
[
i
]) ||

1090 (((
cfgCé
 & ~
CTL_MODE_M
) |

1091 (
pCéMode
[
˘lMode
] & 
CTL_MODE_M
)) ==

1092 ((
pEïD©a
->
˘lIndex
[
i
] & 
CTL_MODE_M
Ë| 
SD_NO_CTL
))) {

1093 
ªp
 = &(
pEïD©a
->
˘lD©a
[
i
]);

1095 
twi˚MöEdgePowî
 = 
	`©h9k_hw_gë_max_edge_powî
(
‰eq
,

1096 
ªp
->
˘lEdges
[
	`¨5416_gë_¡xchaös
(
tx_chaömask
) - 1],

1097 
	`IS_CHAN_2GHZ
(
ch™
), 
AR5416_NUM_BAND_EDGES
);

1099 i‡((
cfgCé
 & ~
CTL_MODE_M
Ë=
SD_NO_CTL
) {

1100 
twi˚MaxEdgePowî
 = 
	`mö
(twiceMaxEdgePower,

1101 
twi˚MöEdgePowî
);

1103 
twi˚MaxEdgePowî
 = 
twi˚MöEdgePowî
;

1109 
möCéPowî
 = 
	`mö
(
twi˚MaxEdgePowî
, 
sˇÀdPowî
);

1111 
pCéMode
[
˘lMode
]) {

1112 
CTL_11B
:

1113 
i
 = 0; i < 
	`ARRAY_SIZE
(
èrgëPowîCck
.
tPow2x
); i++) {

1114 
èrgëPowîCck
.
tPow2x
[
i
] =

1115 
	`mö
((
u16
)
èrgëPowîCck
.
tPow2x
[
i
],

1116 
möCéPowî
);

1119 
CTL_11A
:

1120 
CTL_11G
:

1121 
i
 = 0; i < 
	`ARRAY_SIZE
(
èrgëPowîOfdm
.
tPow2x
); i++) {

1122 
èrgëPowîOfdm
.
tPow2x
[
i
] =

1123 
	`mö
((
u16
)
èrgëPowîOfdm
.
tPow2x
[
i
],

1124 
möCéPowî
);

1127 
CTL_5GHT20
:

1128 
CTL_2GHT20
:

1129 
i
 = 0; i < 
	`ARRAY_SIZE
(
èrgëPowîHt20
.
tPow2x
); i++) {

1130 
èrgëPowîHt20
.
tPow2x
[
i
] =

1131 
	`mö
((
u16
)
èrgëPowîHt20
.
tPow2x
[
i
],

1132 
möCéPowî
);

1135 
CTL_11B_EXT
:

1136 
èrgëPowîCckExt
.
tPow2x
[0] = 
	`mö
((
u16
)

1137 
èrgëPowîCckExt
.
tPow2x
[0],

1138 
möCéPowî
);

1140 
CTL_11A_EXT
:

1141 
CTL_11G_EXT
:

1142 
èrgëPowîOfdmExt
.
tPow2x
[0] = 
	`mö
((
u16
)

1143 
èrgëPowîOfdmExt
.
tPow2x
[0],

1144 
möCéPowî
);

1146 
CTL_5GHT40
:

1147 
CTL_2GHT40
:

1148 
i
 = 0; i < 
	`ARRAY_SIZE
(
èrgëPowîHt40
.
tPow2x
); i++) {

1149 
èrgëPowîHt40
.
tPow2x
[
i
] =

1150 
	`mö
((
u16
)
èrgëPowîHt40
.
tPow2x
[
i
],

1151 
möCéPowî
);

1159 
øãsAºay
[
øã6mb
] =Ñ©esAºay[
øã9mb
] =Ñ©esAºay[
øã12mb
] =

1160 
øãsAºay
[
øã18mb
] =Ñ©esAºay[
øã24mb
] =

1161 
èrgëPowîOfdm
.
tPow2x
[0];

1162 
øãsAºay
[
øã36mb
] = 
èrgëPowîOfdm
.
tPow2x
[1];

1163 
øãsAºay
[
øã48mb
] = 
èrgëPowîOfdm
.
tPow2x
[2];

1164 
øãsAºay
[
øã54mb
] = 
èrgëPowîOfdm
.
tPow2x
[3];

1165 
øãsAºay
[
øãXr
] = 
èrgëPowîOfdm
.
tPow2x
[0];

1167 
i
 = 0; i < 
	`ARRAY_SIZE
(
èrgëPowîHt20
.
tPow2x
); i++)

1168 
øãsAºay
[
øãHt20_0
 + 
i
] = 
èrgëPowîHt20
.
tPow2x
[i];

1170 i‡(
	`IS_CHAN_2GHZ
(
ch™
)) {

1171 
øãsAºay
[
øã1l
] = 
èrgëPowîCck
.
tPow2x
[0];

1172 
øãsAºay
[
øã2s
] =Ñ©esAºay[
øã2l
] =

1173 
èrgëPowîCck
.
tPow2x
[1];

1174 
øãsAºay
[
øã5_5s
] =Ñ©esAºay[
øã5_5l
] =

1175 
èrgëPowîCck
.
tPow2x
[2];

1176 
øãsAºay
[
øã11s
] =Ñ©esAºay[
øã11l
] =

1177 
èrgëPowîCck
.
tPow2x
[3];

1179 i‡(
	`IS_CHAN_HT40
(
ch™
)) {

1180 
i
 = 0; i < 
	`ARRAY_SIZE
(
èrgëPowîHt40
.
tPow2x
); i++) {

1181 
øãsAºay
[
øãHt40_0
 + 
i
] =

1182 
èrgëPowîHt40
.
tPow2x
[
i
];

1184 
øãsAºay
[
øãDupOfdm
] = 
èrgëPowîHt40
.
tPow2x
[0];

1185 
øãsAºay
[
øãDupCck
] = 
èrgëPowîHt40
.
tPow2x
[0];

1186 
øãsAºay
[
øãExtOfdm
] = 
èrgëPowîOfdmExt
.
tPow2x
[0];

1187 i‡(
	`IS_CHAN_2GHZ
(
ch™
)) {

1188 
øãsAºay
[
øãExtCck
] =

1189 
èrgëPowîCckExt
.
tPow2x
[0];

1192 
	}
}

1194 
	$©h9k_hw_def_£t_txpowî
(
©h_hw
 *
ah
,

1195 
©h9k_ch™√l
 *
ch™
,

1196 
u16
 
cfgCé
,

1197 
u8
 
twi˚A¡í«Redu˘i⁄
,

1198 
u8
 
powîLimô
, 
boﬁ
 
ã°
)

1200 
	#RT_AR_DELTA
(
x
Ë(
øãsAºay
[x] - 
cck_ofdm_dñè
)

	)

1201 
©h_ªguœt‹y
 *
ªguœt‹y
 = 
	`©h9k_hw_ªguœt‹y
(
ah
);

1202 
¨5416_ì¥om_def
 *
pEïD©a
 = &
ah
->
ì¥om
.
def
;

1203 
modÆ_ìp_hódî
 *
pModÆ
 =

1204 &(
pEïD©a
->
modÆHódî
[
	`IS_CHAN_2GHZ
(
ch™
)]);

1205 
öt16_t
 
øãsAºay
[
Ar5416R©eSize
];

1206 
u8
 
ht40PowîIncF‹Pdadc
 = 2;

1207 
i
, 
cck_ofdm_dñè
 = 0;

1209 
	`mem£t
(
øãsAºay
, 0, (ratesArray));

1211 i‡((
pEïD©a
->
ba£EïHódî
.
vîsi⁄
 & 
AR5416_EEP_VER_MINOR_MASK
) >=

1212 
AR5416_EEP_MINOR_VER_2
) {

1213 
ht40PowîIncF‹Pdadc
 = 
pModÆ
->ht40PowerIncForPdadc;

1216 
	`©h9k_hw_£t_def_powî_≥r_øã_èbÀ
(
ah
, 
ch™
,

1217 &
øãsAºay
[0], 
cfgCé
,

1218 
twi˚A¡í«Redu˘i⁄
,

1219 
powîLimô
);

1221 
	`©h9k_hw_£t_def_powî_ˇl_èbÀ
(
ah
, 
ch™
);

1223 
ªguœt‹y
->
max_powî_Àvñ
 = 0;

1224 
i
 = 0; i < 
	`ARRAY_SIZE
(
øãsAºay
); i++) {

1225 i‡(
øãsAºay
[
i
] > 
MAX_RATE_POWER
)

1226 
øãsAºay
[
i
] = 
MAX_RATE_POWER
;

1227 i‡(
øãsAºay
[
i
] > 
ªguœt‹y
->
max_powî_Àvñ
)

1228 
ªguœt‹y
->
max_powî_Àvñ
 = 
øãsAºay
[
i
];

1231 
	`©h9k_hw_upd©e_ªguœt‹y_maxpowî
(
ah
);

1233 i‡(
ã°
)

1236 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
)) {

1237 
i
 = 0; i < 
Ar5416R©eSize
; i++) {

1238 
öt8_t
 
pwr_èbÀ_off£t
;

1240 
pwr_èbÀ_off£t
 = 
ah
->
ìp_›s
->
	`gë_ì¥om
(ah,

1241 
EEP_PWR_TABLE_OFFSET
);

1242 
øãsAºay
[
i
] -
pwr_èbÀ_off£t
 * 2;

1246 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

1248 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE1
,

1249 
	`ATH9K_POW_SM
(
øãsAºay
[
øã18mb
], 24)

1250 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã12mb
], 16)

1251 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã9mb
], 8)

1252 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã6mb
], 0));

1253 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE2
,

1254 
	`ATH9K_POW_SM
(
øãsAºay
[
øã54mb
], 24)

1255 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã48mb
], 16)

1256 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã36mb
], 8)

1257 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã24mb
], 0));

1259 i‡(
	`IS_CHAN_2GHZ
(
ch™
)) {

1260 i‡(
OLC_FOR_AR9280_20_LATER
) {

1261 
cck_ofdm_dñè
 = 2;

1262 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE3
,

1263 
	`ATH9K_POW_SM
(
	`RT_AR_DELTA
(
øã2s
), 24)

1264 | 
	`ATH9K_POW_SM
(
	`RT_AR_DELTA
(
øã2l
), 16)

1265 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãXr
], 8)

1266 | 
	`ATH9K_POW_SM
(
	`RT_AR_DELTA
(
øã1l
), 0));

1267 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE4
,

1268 
	`ATH9K_POW_SM
(
	`RT_AR_DELTA
(
øã11s
), 24)

1269 | 
	`ATH9K_POW_SM
(
	`RT_AR_DELTA
(
øã11l
), 16)

1270 | 
	`ATH9K_POW_SM
(
	`RT_AR_DELTA
(
øã5_5s
), 8)

1271 | 
	`ATH9K_POW_SM
(
	`RT_AR_DELTA
(
øã5_5l
), 0));

1273 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE3
,

1274 
	`ATH9K_POW_SM
(
øãsAºay
[
øã2s
], 24)

1275 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã2l
], 16)

1276 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãXr
], 8)

1277 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã1l
], 0));

1278 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE4
,

1279 
	`ATH9K_POW_SM
(
øãsAºay
[
øã11s
], 24)

1280 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã11l
], 16)

1281 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã5_5s
], 8)

1282 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øã5_5l
], 0));

1286 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE5
,

1287 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt20_3
], 24)

1288 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt20_2
], 16)

1289 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt20_1
], 8)

1290 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt20_0
], 0));

1291 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE6
,

1292 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt20_7
], 24)

1293 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt20_6
], 16)

1294 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt20_5
], 8)

1295 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt20_4
], 0));

1297 i‡(
	`IS_CHAN_HT40
(
ch™
)) {

1298 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE7
,

1299 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_3
] +

1300 
ht40PowîIncF‹Pdadc
, 24)

1301 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_2
] +

1302 
ht40PowîIncF‹Pdadc
, 16)

1303 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_1
] +

1304 
ht40PowîIncF‹Pdadc
, 8)

1305 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_0
] +

1306 
ht40PowîIncF‹Pdadc
, 0));

1307 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE8
,

1308 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_7
] +

1309 
ht40PowîIncF‹Pdadc
, 24)

1310 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_6
] +

1311 
ht40PowîIncF‹Pdadc
, 16)

1312 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_5
] +

1313 
ht40PowîIncF‹Pdadc
, 8)

1314 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãHt40_4
] +

1315 
ht40PowîIncF‹Pdadc
, 0));

1316 i‡(
OLC_FOR_AR9280_20_LATER
) {

1317 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE9
,

1318 
	`ATH9K_POW_SM
(
øãsAºay
[
øãExtOfdm
], 24)

1319 | 
	`ATH9K_POW_SM
(
	`RT_AR_DELTA
(
øãExtCck
), 16)

1320 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãDupOfdm
], 8)

1321 | 
	`ATH9K_POW_SM
(
	`RT_AR_DELTA
(
øãDupCck
), 0));

1323 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_RATE9
,

1324 
	`ATH9K_POW_SM
(
øãsAºay
[
øãExtOfdm
], 24)

1325 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãExtCck
], 16)

1326 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãDupOfdm
], 8)

1327 | 
	`ATH9K_POW_SM
(
øãsAºay
[
øãDupCck
], 0));

1331 
	`REG_WRITE
(
ah
, 
AR_PHY_POWER_TX_SUB
,

1332 
	`ATH9K_POW_SM
(
pModÆ
->
pwrDe¸ó£F‹3Chaö
, 6)

1333 | 
	`ATH9K_POW_SM
(
pModÆ
->
pwrDe¸ó£F‹2Chaö
, 0));

1335 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

1336 
	}
}

1338 
u16
 
	$©h9k_hw_def_gë_•ur_ch™√l
(
©h_hw
 *
ah
, 
u16
 
i
, 
boﬁ
 
is2GHz
)

1340  
ah
->
ì¥om
.
def
.
modÆHódî
[
is2GHz
].
•urCh™s
[
i
].
•urCh™
;

1341 
	}
}

1343 c⁄° 
ì¥om_›s
 
	gìp_def_›s
 = {

1344 .
check_ì¥om
 = 
©h9k_hw_def_check_ì¥om
,

1345 .
	ggë_ì¥om
 = 
©h9k_hw_def_gë_ì¥om
,

1346 .
	gfûl_ì¥om
 = 
©h9k_hw_def_fûl_ì¥om
,

1347 .
	gdump_ì¥om
 = 
©h9k_hw_def_dump_ì¥om
,

1348 .
	ggë_ì¥om_vî
 = 
©h9k_hw_def_gë_ì¥om_vî
,

1349 .
	ggë_ì¥om_ªv
 = 
©h9k_hw_def_gë_ì¥om_ªv
,

1350 .
	g£t_bﬂrd_vÆues
 = 
©h9k_hw_def_£t_bﬂrd_vÆues
,

1351 .
	g£t_addac
 = 
©h9k_hw_def_£t_addac
,

1352 .
	g£t_txpowî
 = 
©h9k_hw_def_£t_txpowî
,

1353 .
	ggë_•ur_ch™√l
 = 
©h9k_hw_def_gë_•ur_ch™√l


	@gpio.c

17 
	~"©h9k.h
"

18 
	~<löux/©h9k_∂©f‹m.h
>

24 #ifde‡
CPTCFG_MAC80211_LEDS


25 
	$©h_Àd_brighäess
(
Àd_˛assdev
 *
Àd_cdev
,

26 
Àd_brighäess
 
brighäess
)

28 
©h_Àd
 *
Àd
 = 
	`c⁄èöî_of
(
Àd_cdev
, ©h_Àd, 
cdev
);

29 
©h_so·c
 *
sc
 = 
Àd
->sc;

31 
	`©h9k_ps_wakeup
(
sc
);

32 
	`©h9k_hw_£t_gpio
(
sc
->
sc_ah
, 
Àd
->
gpio
->gpio,

33 (
brighäess
 !
LED_OFF
Ë^ 
Àd
->
gpio
->
a˘ive_low
);

34 
	`©h9k_ps_ª°‹e
(
sc
);

35 
	}
}

37 
	$©h_add_Àd
(
©h_so·c
 *
sc
, 
©h_Àd
 *
Àd
)

39 c⁄° 
gpio_Àd
 *
gpio
 = 
Àd
->gpio;

40 
ªt
;

42 
Àd
->
cdev
.
«me
 = 
gpio
->name;

43 
Àd
->
cdev
.
deÁu…_åiggî
 = 
gpio
->default_trigger;

44 
Àd
->
cdev
.
brighäess_£t
 = 
©h_Àd_brighäess
;

46 
ªt
 = 
	`Àd_˛assdev_ªgi°î
(
	`wùhy_dev
(
sc
->
hw
->
wùhy
), &
Àd
->
cdev
);

47 i‡(
ªt
 < 0)

48  
ªt
;

50 
Àd
->
sc
 = sc;

51 
	`li°_add
(&
Àd
->
li°
, &
sc
->
Àds
);

54 
	`©h9k_hw_cfg_ouçut
(
sc
->
sc_ah
, 
gpio
->gpio,

55 
AR_GPIO_OUTPUT_MUX_AS_OUTPUT
);

58 
	`©h9k_hw_£t_gpio
(
sc
->
sc_ah
, 
gpio
->gpio, gpio->
a˘ive_low
);

61 
	}
}

63 
	$©h_¸óã_gpio_Àd
(
©h_so·c
 *
sc
, 
gpio_num
, c⁄° *
«me
,

64 c⁄° *
åiggî
, 
boﬁ
 
a˘ive_low
)

66 
©h_Àd
 *
Àd
;

67 
gpio_Àd
 *
gpio
;

68 *
_«me
;

69 
ªt
;

71 
Àd
 = 
	`kzÆloc
((*ÀdË+ (*
gpio
Ë+ 
	`°æí
(
«me
) + 1,

72 
GFP_KERNEL
);

73 i‡(!
Àd
)

74  -
ENOMEM
;

76 
Àd
->
gpio
 = gpiÿ(
gpio_Àd
 *) (led + 1);

77 
_«me
 = (*Ë(
Àd
->
gpio
 + 1);

79 
	`°r˝y
(
_«me
, 
«me
);

80 
gpio
->
«me
 = 
_«me
;

81 
gpio
->gpiÿ
gpio_num
;

82 
gpio
->
a˘ive_low
 =áctive_low;

83 
gpio
->
deÁu…_åiggî
 = 
åiggî
;

85 
ªt
 = 
	`©h_add_Àd
(
sc
, 
Àd
);

86 i‡(
	`u∆ikñy
(
ªt
 < 0))

87 
	`k‰ì
(
Àd
);

89  
ªt
;

90 
	}
}

92 
	$©h_¸óã_∂©f‹m_Àd
(
©h_so·c
 *
sc
,

93 c⁄° 
gpio_Àd
 *
gpio
)

95 
©h_Àd
 *
Àd
;

96 
ªt
;

98 
Àd
 = 
	`kzÆloc
((*Àd), 
GFP_KERNEL
);

99 i‡(!
Àd
)

100  -
ENOMEM
;

102 
Àd
->
gpio
 = gpio;

103 
ªt
 = 
	`©h_add_Àd
(
sc
, 
Àd
);

104 i‡(
ªt
 < 0)

105 
	`k‰ì
(
Àd
);

107  
ªt
;

108 
	}
}

110 
	$©h_deöô_Àds
(
©h_so·c
 *
sc
)

112 
©h_Àd
 *
Àd
;

114 !
	`li°_em±y
(&
sc
->
Àds
)) {

115 
Àd
 = 
	`li°_fú°_íåy
(&
sc
->
Àds
, 
©h_Àd
, 
li°
);

116 
	`li°_dñ
(&
Àd
->
li°
);

117 
	`©h_Àd_brighäess
(&
Àd
->
cdev
, 
LED_OFF
);

118 
	`Àd_˛assdev_uƒegi°î
(&
Àd
->
cdev
);

119 
	`k‰ì
(
Àd
);

121 
	}
}

123 
	$©h_öô_Àds
(
©h_so·c
 *
sc
)

125 
©h9k_∂©f‹m_d©a
 *
pd©a
 = 
sc
->
dev
->
∂©f‹m_d©a
;

126 
Àd_«me
[32];

127 c⁄° *
åiggî
;

128 
i
;

130 
	`INIT_LIST_HEAD
(&
sc
->
Àds
);

132 i‡(
	`AR_SREV_9100
(
sc
->
sc_ah
))

135 
	`¢¥ötf
(
Àd_«me
, (led_name), "ath9k-%s",

136 
	`wùhy_«me
(
sc
->
hw
->
wùhy
));

138 i‡(
Àd_blök
)

139 
åiggî
 = 
sc
->
Àd_deÁu…_åiggî
;

141 
åiggî
 = 
	`õì80211_gë_ødio_Àd_«me
(
sc
->
hw
);

143 
	`©h_¸óã_gpio_Àd
(
sc
, sc->
sc_ah
->
Àd_pö
, 
Àd_«me
, 
åiggî
, 1);

145 i‡(!
pd©a
)

148 
i
 = 0; i < 
pd©a
->
num_Àds
; i++)

149 
	`©h_¸óã_∂©f‹m_Àd
(
sc
, &
pd©a
->
Àds
[
i
]);

150 
	}
}

152 
	$©h_fûl_Àd_pö
(
©h_so·c
 *
sc
)

154 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

156 i‡(
	`AR_SREV_9100
(
ah
Ë|| (ah->
Àd_pö
 >= 0))

159 i‡(
	`AR_SREV_9287
(
ah
))

160 
ah
->
Àd_pö
 = 
ATH_LED_PIN_9287
;

161 i‡(
	`AR_SREV_9485
(
sc
->
sc_ah
))

162 
ah
->
Àd_pö
 = 
ATH_LED_PIN_9485
;

163 i‡(
	`AR_SREV_9300
(
sc
->
sc_ah
))

164 
ah
->
Àd_pö
 = 
ATH_LED_PIN_9300
;

165 i‡(
	`AR_SREV_9462
(
sc
->
sc_ah
Ë|| 
	`AR_SREV_9565
(sc->sc_ah))

166 
ah
->
Àd_pö
 = 
ATH_LED_PIN_9462
;

168 
ah
->
Àd_pö
 = 
ATH_LED_PIN_DEF
;

171 
	`©h9k_hw_cfg_ouçut
(
ah
,áh->
Àd_pö
, 
AR_GPIO_OUTPUT_MUX_AS_OUTPUT
);

174 
	`©h9k_hw_£t_gpio
(
ah
,áh->
Àd_pö
, 1);

175 
	}
}

182 
boﬁ
 
	$©h_is_rfkûl_£t
(
©h_so·c
 *
sc
)

184 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

185 
boﬁ
 
is_blocked
;

187 
	`©h9k_ps_wakeup
(
sc
);

188 
is_blocked
 = 
	`©h9k_hw_gpio_gë
(
ah
,áh->
rfkûl_gpio
) ==

189 
ah
->
rfkûl_pﬁ¨ôy
;

190 
	`©h9k_ps_ª°‹e
(
sc
);

192  
is_blocked
;

193 
	}
}

195 
	$©h9k_rfkûl_pﬁl_°©e
(
õì80211_hw
 *
hw
)

197 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

198 
boﬁ
 
blocked
 = !!
	`©h_is_rfkûl_£t
(
sc
);

200 
	`wùhy_rfkûl_£t_hw_°©e
(
hw
->
wùhy
, 
blocked
);

201 
	}
}

203 
	$©h_°¨t_rfkûl_pﬁl
(
©h_so·c
 *
sc
)

205 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

207 i‡(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_RFSILENT
)

208 
	`wùhy_rfkûl_°¨t_pﬁlög
(
sc
->
hw
->
wùhy
);

209 
	}
}

211 #ifde‡
CPTCFG_ATH9K_BTCOEX_SUPPORT


220 
	$©h_dëe˘_bt_¥i‹ôy
(
©h_so·c
 *
sc
)

222 
©h_btc€x
 *
btc€x
 = &
sc
->btcoex;

223 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

225 i‡(
	`©h9k_hw_gpio_gë
(
sc
->
sc_ah
, 
ah
->
btc€x_hw
.
bçri‹ôy_gpio
))

226 
btc€x
->
bt_¥i‹ôy_˙t
++;

228 i‡(
	`time_a·î
(
jiffõs
, 
btc€x
->
bt_¥i‹ôy_time
 +

229 
	`m£cs_to_jiffõs
(
ATH_BT_PRIORITY_TIME_THRESHOLD
))) {

230 
	`˛ór_bô
(
BT_OP_PRIORITY_DETECTED
, &
btc€x
->
›_Êags
);

231 
	`˛ór_bô
(
BT_OP_SCAN
, &
btc€x
->
›_Êags
);

233 i‡(
btc€x
->
bt_¥i‹ôy_˙t
 >
ATH_BT_CNT_SCAN_THRESHOLD
) {

234 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
), 
BTCOEX
,

236 
	`£t_bô
(
BT_OP_PRIORITY_DETECTED
, &
btc€x
->
›_Êags
);

237 
	`£t_bô
(
BT_OP_SCAN
, &
btc€x
->
›_Êags
);

238 } i‡(
btc€x
->
bt_¥i‹ôy_˙t
 >
ATH_BT_CNT_THRESHOLD
) {

239 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
), 
BTCOEX
,

241 
	`£t_bô
(
BT_OP_PRIORITY_DETECTED
, &
btc€x
->
›_Êags
);

244 
btc€x
->
bt_¥i‹ôy_˙t
 = 0;

245 
btc€x
->
bt_¥i‹ôy_time
 = 
jiffõs
;

247 
	}
}

249 
	$©h_mci_·p_adju°
(
©h_so·c
 *
sc
)

251 
©h_btc€x
 *
btc€x
 = &
sc
->btcoex;

252 
©h_mci_¥ofûe
 *
mci
 = &
btc€x
->mci;

253 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

255 i‡(
btc€x
->
bt_waô_time
 > 
ATH_BTCOEX_RX_WAIT_TIME
) {

256 i‡(
	`¨9003_mci_°©e
(
ah
, 
MCI_STATE_NEED_FTP_STOMP
) &&

257 (
mci
->
num_∑n
 || mci->
num_Ÿhî_a˛
))

258 
ah
->
btc€x_hw
.
mci
.
°omp_·p
 =

259 (
sc
->
rx
.
num_pkts
 < 
ATH_BTCOEX_STOMP_FTP_THRESH
);

261 
ah
->
btc€x_hw
.
mci
.
°omp_·p
 = 
Ál£
;

262 
btc€x
->
bt_waô_time
 = 0;

263 
sc
->
rx
.
num_pkts
 = 0;

265 
	}
}

272 
	$©h_btc€x_≥riod_timî
(
d©a
)

274 
©h_so·c
 *
sc
 = (©h_so·¯*Ë
d©a
;

275 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

276 
©h_btc€x
 *
btc€x
 = &
sc
->btcoex;

277 
©h_°omp_ty≥
 
°omp_ty≥
;

278 
u32
 
timî_≥riod
;

279 
Êags
;

281 
	`•ö_lock_úqßve
(&
sc
->
sc_pm_lock
, 
Êags
);

282 i‡(
sc
->
sc_ah
->
powî_mode
 =
ATH9K_PM_NETWORK_SLEEP
) {

283 
btc€x
->
bt_waô_time
 +btc€x->
btc€x_≥riod
;

284 
	`•ö_u∆ock_úqª°‹e
(&
sc
->
sc_pm_lock
, 
Êags
);

285 
skù_hw_wakeup
;

287 
	`•ö_u∆ock_úqª°‹e
(&
sc
->
sc_pm_lock
, 
Êags
);

289 
	`©h9k_mci_upd©e_rssi
(
sc
);

291 
	`©h9k_ps_wakeup
(
sc
);

293 i‡(!(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_MCI
))

294 
	`©h_dëe˘_bt_¥i‹ôy
(
sc
);

296 i‡(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_MCI
)

297 
	`©h_mci_·p_adju°
(
sc
);

299 
	`•ö_lock_bh
(&
btc€x
->
btc€x_lock
);

301 
°omp_ty≥
 = 
btc€x
->
bt_°omp_ty≥
;

302 
timî_≥riod
 = 
btc€x
->
btc€x_no_°omp
;

304 i‡(!(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_MCI
)) {

305 i‡(
	`ã°_bô
(
BT_OP_SCAN
, &
btc€x
->
›_Êags
)) {

306 
°omp_ty≥
 = 
ATH_BTCOEX_STOMP_ALL
;

307 
timî_≥riod
 = 
btc€x
->
btsˇn_no_°omp
;

309 } i‡(
btc€x
->
°omp_audio
 >= 5) {

310 
°omp_ty≥
 = 
ATH_BTCOEX_STOMP_AUDIO
;

311 
btc€x
->
°omp_audio
 = 0;

314 
	`©h9k_hw_btc€x_bt_°omp
(
ah
, 
°omp_ty≥
);

315 
	`©h9k_hw_btc€x_íabÀ
(
ah
);

317 
	`•ö_u∆ock_bh
(&
btc€x
->
btc€x_lock
);

319 i‡(
btc€x
->
btc€x_≥riod
 !btc€x->
btc€x_no_°omp
)

320 
	`mod_timî
(&
btc€x
->
no_°omp_timî
,

321 
jiffõs
 + 
	`m£cs_to_jiffõs
(
timî_≥riod
));

323 
	`©h9k_ps_ª°‹e
(
sc
);

325 
skù_hw_wakeup
:

326 
	`mod_timî
(&
btc€x
->
≥riod_timî
,

327 
jiffõs
 + 
	`m£cs_to_jiffõs
(
btc€x
->
btc€x_≥riod
));

328 
	}
}

334 
	$©h_btc€x_no_°omp_timî
(
¨g
)

336 
©h_so·c
 *
sc
 = (©h_so·¯*)
¨g
;

337 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

338 
©h_btc€x
 *
btc€x
 = &
sc
->btcoex;

339 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

341 
	`©h_dbg
(
comm⁄
, 
BTCOEX
, "no stompÅimerÑunning\n");

343 
	`©h9k_ps_wakeup
(
sc
);

344 
	`•ö_lock_bh
(&
btc€x
->
btc€x_lock
);

346 i‡(
btc€x
->
bt_°omp_ty≥
 =
ATH_BTCOEX_STOMP_LOW
 ||

347 (!(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_MCI
) &&

348 
	`ã°_bô
(
BT_OP_SCAN
, &
btc€x
->
›_Êags
)))

349 
	`©h9k_hw_btc€x_bt_°omp
(
ah
, 
ATH_BTCOEX_STOMP_NONE
);

350 i‡(
btc€x
->
bt_°omp_ty≥
 =
ATH_BTCOEX_STOMP_ALL
)

351 
	`©h9k_hw_btc€x_bt_°omp
(
ah
, 
ATH_BTCOEX_STOMP_LOW
);

353 
	`©h9k_hw_btc€x_íabÀ
(
ah
);

354 
	`•ö_u∆ock_bh
(&
btc€x
->
btc€x_lock
);

355 
	`©h9k_ps_ª°‹e
(
sc
);

356 
	}
}

358 
	$©h_öô_btc€x_timî
(
©h_so·c
 *
sc
)

360 
©h_btc€x
 *
btc€x
 = &
sc
->btcoex;

362 
btc€x
->
btc€x_≥riod
 = 
ATH_BTCOEX_DEF_BT_PERIOD
;

363 
btc€x
->
btc€x_no_°omp
 = (100 - 
ATH_BTCOEX_DEF_DUTY_CYCLE
) *

364 
btc€x
->
btc€x_≥riod
 / 100;

365 
btc€x
->
btsˇn_no_°omp
 = (100 - 
ATH_BTCOEX_BTSCAN_DUTY_CYCLE
) *

366 
btc€x
->
btc€x_≥riod
 / 100;

368 
	`£tup_timî
(&
btc€x
->
≥riod_timî
, 
©h_btc€x_≥riod_timî
,

369 (Ë
sc
);

370 
	`£tup_timî
(&
btc€x
->
no_°omp_timî
, 
©h_btc€x_no_°omp_timî
,

371 (Ë
sc
);

373 
	`•ö_lock_öô
(&
btc€x
->
btc€x_lock
);

376 
	}
}

381 
	$©h9k_btc€x_timî_ªsume
(
©h_so·c
 *
sc
)

383 
©h_btc€x
 *
btc€x
 = &
sc
->btcoex;

384 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

386 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
BTCOEX
, "Starting btcoexÅimers\n");

389 
	`dñ_timî_sync
(&
btc€x
->
no_°omp_timî
);

391 
btc€x
->
bt_¥i‹ôy_˙t
 = 0;

392 
btc€x
->
bt_¥i‹ôy_time
 = 
jiffõs
;

393 
	`˛ór_bô
(
BT_OP_PRIORITY_DETECTED
, &
btc€x
->
›_Êags
);

394 
	`˛ór_bô
(
BT_OP_SCAN
, &
btc€x
->
›_Êags
);

396 
	`mod_timî
(&
btc€x
->
≥riod_timî
, 
jiffõs
);

397 
	}
}

403 
	$©h9k_btc€x_timî_∑u£
(
©h_so·c
 *
sc
)

405 
©h_btc€x
 *
btc€x
 = &
sc
->btcoex;

407 
	`dñ_timî_sync
(&
btc€x
->
≥riod_timî
);

408 
	`dñ_timî_sync
(&
btc€x
->
no_°omp_timî
);

409 
	}
}

411 
	$©h9k_btc€x_°›_gí_timî
(
©h_so·c
 *
sc
)

413 
©h_btc€x
 *
btc€x
 = &
sc
->btcoex;

415 
	`dñ_timî_sync
(&
btc€x
->
no_°omp_timî
);

416 
	}
}

418 
u16
 
	$©h9k_btc€x_aggr_limô
(
©h_so·c
 *
sc
, 
u32
 
max_4ms_‰amñí
)

420 
©h_btc€x
 *
btc€x
 = &
sc
->btcoex;

421 
©h_mci_¥ofûe
 *
mci
 = &
sc
->
btc€x
.mci;

422 
u16
 
aggr_limô
 = 0;

424 i‡((
sc
->
sc_ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_MCI
Ë&& 
mci
->
aggr_limô
)

425 
aggr_limô
 = (
max_4ms_‰amñí
 * 
mci
->aggr_limit) >> 4;

426 i‡(
	`ã°_bô
(
BT_OP_PRIORITY_DETECTED
, &
btc€x
->
›_Êags
))

427 
aggr_limô
 = 
	`mö
((
max_4ms_‰amñí
 * 3) / 8,

428 (
u32
)
ATH_AMPDU_LIMIT_MAX
);

430  
aggr_limô
;

431 
	}
}

433 
	$©h9k_btc€x_h™dÀ_öãºu±
(
©h_so·c
 *
sc
, 
u32
 
°©us
)

435 i‡(
°©us
 & 
ATH9K_INT_MCI
)

436 
	`©h_mci_öå
(
sc
);

437 
	}
}

439 
	$©h9k_°¨t_btc€x
(
©h_so·c
 *
sc
)

441 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

443 i‡((
	`©h9k_hw_gë_btc€x_scheme
(
ah
Ë!
ATH_BTCOEX_CFG_NONE
) &&

444 !
ah
->
btc€x_hw
.
íabÀd
) {

445 i‡(!(
sc
->
sc_ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_MCI
))

446 
	`©h9k_hw_btc€x_£t_weight
(
ah
, 
AR_BT_COEX_WGHT
,

447 
AR_STOMP_LOW_WLAN_WGHT
, 0);

449 
	`©h9k_hw_btc€x_£t_weight
(
ah
, 0, 0,

450 
ATH_BTCOEX_STOMP_NONE
);

451 
	`©h9k_hw_btc€x_íabÀ
(
ah
);

453 i‡(
	`©h9k_hw_gë_btc€x_scheme
(
ah
Ë=
ATH_BTCOEX_CFG_3WIRE
)

454 
	`©h9k_btc€x_timî_ªsume
(
sc
);

456 
	}
}

458 
	$©h9k_°›_btc€x
(
©h_so·c
 *
sc
)

460 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

462 i‡(
ah
->
btc€x_hw
.
íabÀd
 &&

463 
	`©h9k_hw_gë_btc€x_scheme
(
ah
Ë!
ATH_BTCOEX_CFG_NONE
) {

464 i‡(
	`©h9k_hw_gë_btc€x_scheme
(
ah
Ë=
ATH_BTCOEX_CFG_3WIRE
)

465 
	`©h9k_btc€x_timî_∑u£
(
sc
);

466 
	`©h9k_hw_btc€x_dißbÀ
(
ah
);

467 i‡(
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9565
(ah))

468 
	`©h_mci_Êush_¥ofûe
(&
sc
->
btc€x
.
mci
);

470 
	}
}

472 
	$©h9k_deöô_btc€x
(
©h_so·c
 *
sc
)

474 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

476 i‡(
	`©h9k_hw_mci_is_íabÀd
(
ah
))

477 
	`©h_mci_˛ónup
(
sc
);

478 
	}
}

480 
	$©h9k_öô_btc€x
(
©h_so·c
 *
sc
)

482 
©h_txq
 *
txq
;

483 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

484 
r
;

486 
	`©h9k_hw_btc€x_öô_scheme
(
ah
);

488 
	`©h9k_hw_gë_btc€x_scheme
(
sc
->
sc_ah
)) {

489 
ATH_BTCOEX_CFG_NONE
:

491 
ATH_BTCOEX_CFG_2WIRE
:

492 
	`©h9k_hw_btc€x_öô_2wúe
(
sc
->
sc_ah
);

494 
ATH_BTCOEX_CFG_3WIRE
:

495 
	`©h9k_hw_btc€x_öô_3wúe
(
sc
->
sc_ah
);

496 
r
 = 
	`©h_öô_btc€x_timî
(
sc
);

497 i‡(
r
)

499 
txq
 = 
sc
->
tx
.
txq_m≠
[
IEEE80211_AC_BE
];

500 
	`©h9k_hw_öô_btc€x_hw
(
sc
->
sc_ah
, 
txq
->
axq_qnum
);

501 
sc
->
btc€x
.
bt_°omp_ty≥
 = 
ATH_BTCOEX_STOMP_LOW
;

502 i‡(
	`©h9k_hw_mci_is_íabÀd
(
ah
)) {

503 
sc
->
btc€x
.
duty_cy˛e
 = 
ATH_BTCOEX_DEF_DUTY_CYCLE
;

504 
	`INIT_LIST_HEAD
(&
sc
->
btc€x
.
mci
.
öfo
);

506 
r
 = 
	`©h_mci_£tup
(
sc
);

507 i‡(
r
)

508  
r
;

510 
	`©h9k_hw_btc€x_öô_mci
(
ah
);

515 
	`WARN_ON
(1);

520 
	}
}

522 
	$©h9k_dump_mci_btc€x
(
©h_so·c
 *
sc
, 
u8
 *
buf
, 
u32
 
size
)

524 
©h_btc€x
 *
btc€x
 = &
sc
->btcoex;

525 
©h_mci_¥ofûe
 *
mci
 = &
btc€x
->mci;

526 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

527 
©h_btc€x_hw
 *
btc€x_hw
 = &
ah
->btcoex_hw;

528 
u32
 
Àn
 = 0;

529 
i
;

531 
	`ATH_DUMP_BTCOEX
("TŸÆ BTÖrofûes", 
	`NUM_PROF
(
mci
));

532 
	`ATH_DUMP_BTCOEX
("MGMT", 
mci
->
num_mgmt
);

533 
	`ATH_DUMP_BTCOEX
("SCO", 
mci
->
num_sco
);

534 
	`ATH_DUMP_BTCOEX
("A2DP", 
mci
->
num_a2dp
);

535 
	`ATH_DUMP_BTCOEX
("HID", 
mci
->
num_hid
);

536 
	`ATH_DUMP_BTCOEX
("PAN", 
mci
->
num_∑n
);

537 
	`ATH_DUMP_BTCOEX
("ACL", 
mci
->
num_Ÿhî_a˛
);

538 
	`ATH_DUMP_BTCOEX
("BDR", 
mci
->
num_bdr
);

539 
	`ATH_DUMP_BTCOEX
("Aggr. Limô", 
mci
->
aggr_limô
);

540 
	`ATH_DUMP_BTCOEX
("Stom∞Ty≥", 
btc€x
->
bt_°omp_ty≥
);

541 
	`ATH_DUMP_BTCOEX
("BTC€x Pîiod (m£c)", 
btc€x
->
btc€x_≥riod
);

542 
	`ATH_DUMP_BTCOEX
("Duty Cy˛e", 
btc€x
->
duty_cy˛e
);

543 
	`ATH_DUMP_BTCOEX
("BT WaôÅime", 
btc€x
->
bt_waô_time
);

544 
	`ATH_DUMP_BTCOEX
("C⁄cuºíàTx", 
btc€x_hw
->
mci
.
c⁄cur_tx
);

545 
	`ATH_DUMP_BTCOEX
("C⁄cuºíàRSSI c¡", 
btc€x
->
rssi_cou¡
);

547 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "BT Weights: ");

548 
i
 = 0; i < 
AR9300_NUM_BT_WEIGHTS
; i++)

549 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%08x ",

550 
btc€x_hw
->
bt_weight
[
i
]);

551 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "\n");

552 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "WLAN Weights: ");

553 
i
 = 0; i < 
AR9300_NUM_BT_WEIGHTS
; i++)

554 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%08x ",

555 
btc€x_hw
->
wœn_weight
[
i
]);

556 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "\n");

557 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "Tx Priorities: ");

558 
i
 = 0; i < 
ATH_BTCOEX_STOMP_MAX
; i++)

559 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%08x ",

560 
btc€x_hw
->
tx_¥io
[
i
]);

562 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "\n");

564  
Àn
;

565 
	}
}

567 
	$©h9k_dump_Àgacy_btc€x
(
©h_so·c
 *
sc
, 
u8
 *
buf
, 
u32
 
size
)

570 
©h_btc€x
 *
btc€x
 = &
sc
->btcoex;

571 
u32
 
Àn
 = 0;

573 
	`ATH_DUMP_BTCOEX
("Stom∞Ty≥", 
btc€x
->
bt_°omp_ty≥
);

574 
	`ATH_DUMP_BTCOEX
("BTC€x Pîiod (m£c)", 
btc€x
->
btc€x_≥riod
);

575 
	`ATH_DUMP_BTCOEX
("Duty Cy˛e", 
btc€x
->
duty_cy˛e
);

576 
	`ATH_DUMP_BTCOEX
("BT WaôÅime", 
btc€x
->
bt_waô_time
);

578  
Àn
;

579 
	}
}

581 
	$©h9k_dump_btc€x
(
©h_so·c
 *
sc
, 
u8
 *
buf
, 
u32
 
size
)

583 i‡(
	`©h9k_hw_mci_is_íabÀd
(
sc
->
sc_ah
))

584  
	`©h9k_dump_mci_btc€x
(
sc
, 
buf
, 
size
);

586  
	`©h9k_dump_Àgacy_btc€x
(
sc
, 
buf
, 
size
);

587 
	}
}

	@hif_usb.c

17 
	~<asm/u«lig√d.h
>

18 
	~"htc.h
"

21 
	#FIRMWARE_AR7010_1_1
 "htc_7010.fw"

	)

22 
	#FIRMWARE_AR9271
 "htc_9271.fw"

	)

24 
MODULE_FIRMWARE
(
FIRMWARE_AR7010_1_1
);

25 
MODULE_FIRMWARE
(
FIRMWARE_AR9271
);

27 
usb_devi˚_id
 
	g©h9k_hif_usb_ids
[] = {

28 { 
USB_DEVICE
(0x0cf3, 0x9271) },

29 { 
USB_DEVICE
(0x0cf3, 0x1006) },

30 { 
USB_DEVICE
(0x0846, 0x9030) },

31 { 
USB_DEVICE
(0x07D1, 0x3A10) },

32 { 
USB_DEVICE
(0x13D3, 0x3327) },

33 { 
USB_DEVICE
(0x13D3, 0x3328) },

34 { 
USB_DEVICE
(0x13D3, 0x3346) },

35 { 
USB_DEVICE
(0x13D3, 0x3348) },

36 { 
USB_DEVICE
(0x13D3, 0x3349) },

37 { 
USB_DEVICE
(0x13D3, 0x3350) },

38 { 
USB_DEVICE
(0x04CA, 0x4605) },

39 { 
USB_DEVICE
(0x040D, 0x3801) },

40 { 
USB_DEVICE
(0x0cf3, 0xb003) },

41 { 
USB_DEVICE
(0x0cf3, 0xb002) },

42 { 
USB_DEVICE
(0x057c, 0x8403) },

44 { 
USB_DEVICE
(0x0cf3, 0x7015),

45 .
drivî_öfo
 = 
AR9287_USB
 },

46 { 
USB_DEVICE
(0x1668, 0x1200),

47 .
	gdrivî_öfo
 = 
AR9287_USB
 },

49 { 
USB_DEVICE
(0x0cf3, 0x7010),

50 .
	gdrivî_öfo
 = 
AR9280_USB
 },

51 { 
USB_DEVICE
(0x0846, 0x9018),

52 .
	gdrivî_öfo
 = 
AR9280_USB
 },

53 { 
USB_DEVICE
(0x083A, 0xA704),

54 .
	gdrivî_öfo
 = 
AR9280_USB
 },

55 { 
USB_DEVICE
(0x0411, 0x017f),

56 .
	gdrivî_öfo
 = 
AR9280_USB
 },

57 { 
USB_DEVICE
(0x0411, 0x0197),

58 .
	gdrivî_öfo
 = 
AR9280_USB
 },

59 { 
USB_DEVICE
(0x04da, 0x3904),

60 .
	gdrivî_öfo
 = 
AR9280_USB
 },

62 { 
USB_DEVICE
(0x0cf3, 0x20ff),

63 .
	gdrivî_öfo
 = 
STORAGE_DEVICE
 },

68 
MODULE_DEVICE_TABLE
(
usb
, 
©h9k_hif_usb_ids
);

70 
__hif_usb_tx
(
hif_devi˚_usb
 *
hif_dev
);

72 
	$hif_usb_ªgout_cb
(
urb
 *urb)

74 
cmd_buf
 *
cmd
 = (cmd_bu‡*)
urb
->
c⁄ãxt
;

76 
urb
->
°©us
) {

79 -
ENOENT
:

80 -
ECONNRESET
:

81 -
ENODEV
:

82 -
ESHUTDOWN
:

83 
‰ì
;

88 i‡(
cmd
) {

89 
	`©h9k_htc_txcom∂ëi⁄_cb
(
cmd
->
hif_dev
->
htc_h™dÀ
,

90 
cmd
->
skb
, 
åue
);

91 
	`k‰ì
(
cmd
);

95 
‰ì
:

96 
	`k‰ì_skb
(
cmd
->
skb
);

97 
	`k‰ì
(
cmd
);

98 
	}
}

100 
	$hif_usb_£nd_ªgout
(
hif_devi˚_usb
 *
hif_dev
,

101 
sk_buff
 *
skb
)

103 
urb
 *urb;

104 
cmd_buf
 *
cmd
;

105 
ªt
 = 0;

107 
urb
 = 
	`usb_Æloc_urb
(0, 
GFP_KERNEL
);

108 i‡(
urb
 =
NULL
)

109  -
ENOMEM
;

111 
cmd
 = 
	`kzÆloc
((*cmd), 
GFP_KERNEL
);

112 i‡(
cmd
 =
NULL
) {

113 
	`usb_‰ì_urb
(
urb
);

114  -
ENOMEM
;

117 
cmd
->
skb
 = skb;

118 
cmd
->
hif_dev
 = hif_dev;

120 
	`usb_fûl_öt_urb
(
urb
, 
hif_dev
->
udev
,

121 
	`usb_¢döçùe
(
hif_dev
->
udev
, 
USB_REG_OUT_PIPE
),

122 
skb
->
d©a
, skb->
Àn
,

123 
hif_usb_ªgout_cb
, 
cmd
, 1);

125 
	`usb_™ch‹_urb
(
urb
, &
hif_dev
->
ªgout_submôãd
);

126 
ªt
 = 
	`usb_submô_urb
(
urb
, 
GFP_KERNEL
);

127 i‡(
ªt
) {

128 
	`usb_u«nch‹_urb
(
urb
);

129 
	`k‰ì
(
cmd
);

131 
	`usb_‰ì_urb
(
urb
);

133  
ªt
;

134 
	}
}

136 
	$hif_usb_mgmt_cb
(
urb
 *urb)

138 
cmd_buf
 *
cmd
 = (cmd_bu‡*)
urb
->
c⁄ãxt
;

139 
hif_devi˚_usb
 *
hif_dev
;

140 
boﬁ
 
txok
 = 
åue
;

142 i‡(!
cmd
 || !cmd->
skb
 || !cmd->
hif_dev
)

145 
hif_dev
 = 
cmd
->hif_dev;

147 
urb
->
°©us
) {

150 -
ENOENT
:

151 -
ECONNRESET
:

152 -
ENODEV
:

153 -
ESHUTDOWN
:

154 
txok
 = 
Ál£
;

160 
	`•ö_lock
(&
hif_dev
->
tx
.
tx_lock
);

161 i‡(
hif_dev
->
tx
.
Êags
 & 
HIF_USB_TX_FLUSH
) {

162 
	`•ö_u∆ock
(&
hif_dev
->
tx
.
tx_lock
);

163 
	`dev_k‰ì_skb_™y
(
cmd
->
skb
);

164 
	`k‰ì
(
cmd
);

167 
	`•ö_u∆ock
(&
hif_dev
->
tx
.
tx_lock
);

171 
txok
 = 
Ál£
;

175 
	`skb_puŒ
(
cmd
->
skb
, 4);

176 
	`©h9k_htc_txcom∂ëi⁄_cb
(
cmd
->
hif_dev
->
htc_h™dÀ
,

177 
cmd
->
skb
, 
txok
);

178 
	`k‰ì
(
cmd
);

179 
	}
}

181 
	$hif_usb_£nd_mgmt
(
hif_devi˚_usb
 *
hif_dev
,

182 
sk_buff
 *
skb
)

184 
urb
 *urb;

185 
cmd_buf
 *
cmd
;

186 
ªt
 = 0;

187 
__À16
 *
hdr
;

189 
urb
 = 
	`usb_Æloc_urb
(0, 
GFP_ATOMIC
);

190 i‡(
urb
 =
NULL
)

191  -
ENOMEM
;

193 
cmd
 = 
	`kzÆloc
((*cmd), 
GFP_ATOMIC
);

194 i‡(
cmd
 =
NULL
) {

195 
	`usb_‰ì_urb
(
urb
);

196  -
ENOMEM
;

199 
cmd
->
skb
 = skb;

200 
cmd
->
hif_dev
 = hif_dev;

202 
hdr
 = (
__À16
 *Ë
	`skb_push
(
skb
, 4);

203 *
hdr
++ = 
	`˝u_to_À16
(
skb
->
Àn
 - 4);

204 *
hdr
++ = 
	`˝u_to_À16
(
ATH_USB_TX_STREAM_MODE_TAG
);

206 
	`usb_fûl_bulk_urb
(
urb
, 
hif_dev
->
udev
,

207 
	`usb_¢dbulkpùe
(
hif_dev
->
udev
, 
USB_WLAN_TX_PIPE
),

208 
skb
->
d©a
, skb->
Àn
,

209 
hif_usb_mgmt_cb
, 
cmd
);

211 
	`usb_™ch‹_urb
(
urb
, &
hif_dev
->
mgmt_submôãd
);

212 
ªt
 = 
	`usb_submô_urb
(
urb
, 
GFP_ATOMIC
);

213 i‡(
ªt
) {

214 
	`usb_u«nch‹_urb
(
urb
);

215 
	`k‰ì
(
cmd
);

217 
	`usb_‰ì_urb
(
urb
);

219  
ªt
;

220 
	}
}

222 
ölöe
 
	$©h9k_skb_queue_purge
(
hif_devi˚_usb
 *
hif_dev
,

223 
sk_buff_hód
 *
li°
)

225 
sk_buff
 *
skb
;

227 (
skb
 = 
	`__skb_dequeue
(
li°
)Ë!
NULL
) {

228 
	`dev_k‰ì_skb_™y
(
skb
);

230 
	}
}

232 
ölöe
 
	$©h9k_skb_queue_com∂ëe
(
hif_devi˚_usb
 *
hif_dev
,

233 
sk_buff_hód
 *
queue
,

234 
boﬁ
 
txok
)

236 
sk_buff
 *
skb
;

238 (
skb
 = 
	`__skb_dequeue
(
queue
)Ë!
NULL
) {

239 #ifde‡
CPTCFG_ATH9K_HTC_DEBUGFS


240 
 
 = 
skb
->
Àn
;

242 
	`©h9k_htc_txcom∂ëi⁄_cb
(
hif_dev
->
htc_h™dÀ
,

243 
skb
, 
txok
);

244 i‡(
txok
) {

245 
	`TX_STAT_INC
(
skb_suc˚ss
);

246 
	`TX_STAT_ADD
(
skb_suc˚ss_byãs
, 
 
);

249 
	`TX_STAT_INC
(
skb_Áûed
);

251 
	}
}

253 
	$hif_usb_tx_cb
(
urb
 *urb)

255 
tx_buf
 *tx_bu‡(tx_bu‡*Ë
urb
->
c⁄ãxt
;

256 
hif_devi˚_usb
 *
hif_dev
;

257 
boﬁ
 
txok
 = 
åue
;

259 i‡(!
tx_buf
 || !tx_buf->
hif_dev
)

262 
hif_dev
 = 
tx_buf
->hif_dev;

264 
urb
->
°©us
) {

267 -
ENOENT
:

268 -
ECONNRESET
:

269 -
ENODEV
:

270 -
ESHUTDOWN
:

271 
txok
 = 
Ál£
;

277 
	`•ö_lock
(&
hif_dev
->
tx
.
tx_lock
);

278 i‡(
hif_dev
->
tx
.
Êags
 & 
HIF_USB_TX_FLUSH
) {

279 
	`•ö_u∆ock
(&
hif_dev
->
tx
.
tx_lock
);

280 
	`©h9k_skb_queue_purge
(
hif_dev
, &
tx_buf
->
skb_queue
);

283 
	`•ö_u∆ock
(&
hif_dev
->
tx
.
tx_lock
);

287 
txok
 = 
Ál£
;

291 
	`©h9k_skb_queue_com∂ëe
(
hif_dev
, &
tx_buf
->
skb_queue
, 
txok
);

294 
tx_buf
->
Àn
 =Åx_buf->
off£t
 = 0;

295 
	`__skb_queue_hód_öô
(&
tx_buf
->
skb_queue
);

298 
	`•ö_lock
(&
hif_dev
->
tx
.
tx_lock
);

299 
	`li°_move_èû
(&
tx_buf
->
li°
, &
hif_dev
->
tx
.tx_buf);

300 
hif_dev
->
tx
.
tx_buf_˙t
++;

301 i‡(!(
hif_dev
->
tx
.
Êags
 & 
HIF_USB_TX_STOP
))

302 
	`__hif_usb_tx
(
hif_dev
);

303 
	`TX_STAT_INC
(
buf_com∂ëed
);

304 
	`•ö_u∆ock
(&
hif_dev
->
tx
.
tx_lock
);

305 
	}
}

308 
	$__hif_usb_tx
(
hif_devi˚_usb
 *
hif_dev
)

310 
tx_buf
 *tx_bu‡
NULL
;

311 
sk_buff
 *
nskb
 = 
NULL
;

312 
ªt
 = 0, 
i
;

313 
u16
 
tx_skb_˙t
 = 0;

314 
u8
 *
buf
;

315 
__À16
 *
hdr
;

317 i‡(
hif_dev
->
tx
.
tx_skb_˙t
 == 0)

321 i‡(
	`li°_em±y
(&
hif_dev
->
tx
.
tx_buf
))

324 
tx_buf
 = 
	`li°_fú°_íåy
(&
hif_dev
->
tx
.tx_buf, tx_buf, 
li°
);

325 
	`li°_move_èû
(&
tx_buf
->
li°
, &
hif_dev
->
tx
.
tx_≥ndög
);

326 
hif_dev
->
tx
.
tx_buf_˙t
--;

328 
tx_skb_˙t
 = 
	`mö_t
(
u16
, 
hif_dev
->
tx
.tx_skb_˙t, 
MAX_TX_AGGR_NUM
);

330 
i
 = 0; i < 
tx_skb_˙t
; i++) {

331 
nskb
 = 
	`__skb_dequeue
(&
hif_dev
->
tx
.
tx_skb_queue
);

334 
	`BUG_ON
(!
nskb
);

336 
hif_dev
->
tx
.
tx_skb_˙t
--;

338 
buf
 = 
tx_buf
->buf;

339 
buf
 +
tx_buf
->
off£t
;

340 
hdr
 = (
__À16
 *)
buf
;

341 *
hdr
++ = 
	`˝u_to_À16
(
nskb
->
Àn
);

342 *
hdr
++ = 
	`˝u_to_À16
(
ATH_USB_TX_STREAM_MODE_TAG
);

343 
buf
 += 4;

344 
	`mem˝y
(
buf
, 
nskb
->
d©a
,Çskb->
Àn
);

345 
tx_buf
->
Àn
 = 
nskb
->len + 4;

347 i‡(
i
 < (
tx_skb_˙t
 - 1))

348 
tx_buf
->
off£t
 +((—x_buf->
Àn
 - 1) / 4) + 1) * 4;

350 i‡(
i
 =(
tx_skb_˙t
 - 1))

351 
tx_buf
->
Àn
 +tx_buf->
off£t
;

353 
	`__skb_queue_èû
(&
tx_buf
->
skb_queue
, 
nskb
);

354 
	`TX_STAT_INC
(
skb_queued
);

357 
	`usb_fûl_bulk_urb
(
tx_buf
->
urb
, 
hif_dev
->
udev
,

358 
	`usb_¢dbulkpùe
(
hif_dev
->
udev
, 
USB_WLAN_TX_PIPE
),

359 
tx_buf
->
buf
,Åx_buf->
Àn
,

360 
hif_usb_tx_cb
, 
tx_buf
);

362 
ªt
 = 
	`usb_submô_urb
(
tx_buf
->
urb
, 
GFP_ATOMIC
);

363 i‡(
ªt
) {

364 
tx_buf
->
Àn
 =Åx_buf->
off£t
 = 0;

365 
	`©h9k_skb_queue_com∂ëe
(
hif_dev
, &
tx_buf
->
skb_queue
, 
Ál£
);

366 
	`__skb_queue_hód_öô
(&
tx_buf
->
skb_queue
);

367 
	`li°_move_èû
(&
tx_buf
->
li°
, &
hif_dev
->
tx
.tx_buf);

368 
hif_dev
->
tx
.
tx_buf_˙t
++;

371 i‡(!
ªt
)

372 
	`TX_STAT_INC
(
buf_queued
);

374  
ªt
;

375 
	}
}

377 
	$hif_usb_£nd_tx
(
hif_devi˚_usb
 *
hif_dev
, 
sk_buff
 *
skb
)

379 
©h9k_htc_tx_˘l
 *
tx_˘l
;

380 
Êags
;

381 
ªt
 = 0;

383 
	`•ö_lock_úqßve
(&
hif_dev
->
tx
.
tx_lock
, 
Êags
);

385 i‡(
hif_dev
->
tx
.
Êags
 & 
HIF_USB_TX_STOP
) {

386 
	`•ö_u∆ock_úqª°‹e
(&
hif_dev
->
tx
.
tx_lock
, 
Êags
);

387  -
ENODEV
;

391 i‡(
hif_dev
->
tx
.
tx_skb_˙t
 > 
MAX_TX_BUF_NUM
) {

392 
	`•ö_u∆ock_úqª°‹e
(&
hif_dev
->
tx
.
tx_lock
, 
Êags
);

393  -
ENOMEM
;

396 
	`•ö_u∆ock_úqª°‹e
(&
hif_dev
->
tx
.
tx_lock
, 
Êags
);

398 
tx_˘l
 = 
	`HTC_SKB_CB
(
skb
);

401 i‡((
tx_˘l
->
ty≥
 =
ATH9K_HTC_MGMT
) ||

402 (
tx_˘l
->
ty≥
 =
ATH9K_HTC_BEACON
)) {

403 
ªt
 = 
	`hif_usb_£nd_mgmt
(
hif_dev
, 
skb
);

406 
	`•ö_lock_úqßve
(&
hif_dev
->
tx
.
tx_lock
, 
Êags
);

408 i‡((
tx_˘l
->
ty≥
 =
ATH9K_HTC_NORMAL
) ||

409 (
tx_˘l
->
ty≥
 =
ATH9K_HTC_AMPDU
)) {

410 
	`__skb_queue_èû
(&
hif_dev
->
tx
.
tx_skb_queue
, 
skb
);

411 
hif_dev
->
tx
.
tx_skb_˙t
++;

415 i‡((
hif_dev
->
tx
.
tx_buf_˙t
 =
MAX_TX_URB_NUM
) &&

416 (
hif_dev
->
tx
.
tx_skb_˙t
 < 2)) {

417 
	`__hif_usb_tx
(
hif_dev
);

420 
	`•ö_u∆ock_úqª°‹e
(&
hif_dev
->
tx
.
tx_lock
, 
Êags
);

422  
ªt
;

423 
	}
}

425 
	$hif_usb_°¨t
(*
hif_h™dÀ
)

427 
hif_devi˚_usb
 *
hif_dev
 = (hif_devi˚_usb *)
hif_h™dÀ
;

428 
Êags
;

430 
hif_dev
->
Êags
 |
HIF_USB_START
;

432 
	`•ö_lock_úqßve
(&
hif_dev
->
tx
.
tx_lock
, 
Êags
);

433 
hif_dev
->
tx
.
Êags
 &~
HIF_USB_TX_STOP
;

434 
	`•ö_u∆ock_úqª°‹e
(&
hif_dev
->
tx
.
tx_lock
, 
Êags
);

435 
	}
}

437 
	$hif_usb_°›
(*
hif_h™dÀ
)

439 
hif_devi˚_usb
 *
hif_dev
 = (hif_devi˚_usb *)
hif_h™dÀ
;

440 
tx_buf
 *tx_bu‡
NULL
, *
tx_buf_tmp
 = NULL;

441 
Êags
;

443 
	`•ö_lock_úqßve
(&
hif_dev
->
tx
.
tx_lock
, 
Êags
);

444 
	`©h9k_skb_queue_com∂ëe
(
hif_dev
, &hif_dev->
tx
.
tx_skb_queue
, 
Ál£
);

445 
hif_dev
->
tx
.
tx_skb_˙t
 = 0;

446 
hif_dev
->
tx
.
Êags
 |
HIF_USB_TX_STOP
;

447 
	`•ö_u∆ock_úqª°‹e
(&
hif_dev
->
tx
.
tx_lock
, 
Êags
);

450 
	`li°_f‹_óch_íåy_ß„
(
tx_buf
, 
tx_buf_tmp
,

451 &
hif_dev
->
tx
.
tx_≥ndög
, 
li°
) {

452 
	`usb_kûl_urb
(
tx_buf
->
urb
);

455 
	`usb_kûl_™ch‹ed_urbs
(&
hif_dev
->
mgmt_submôãd
);

456 
	}
}

458 
	$hif_usb_£nd
(*
hif_h™dÀ
, 
u8
 
pùe_id
, 
sk_buff
 *
skb
)

460 
hif_devi˚_usb
 *
hif_dev
 = (hif_devi˚_usb *)
hif_h™dÀ
;

461 
ªt
 = 0;

463 
pùe_id
) {

464 
USB_WLAN_TX_PIPE
:

465 
ªt
 = 
	`hif_usb_£nd_tx
(
hif_dev
, 
skb
);

467 
USB_REG_OUT_PIPE
:

468 
ªt
 = 
	`hif_usb_£nd_ªgout
(
hif_dev
, 
skb
);

471 
	`dev_îr
(&
hif_dev
->
udev
->
dev
,

472 "©h9k_htc: InvÆid TXÖùe: %d\n", 
pùe_id
);

473 
ªt
 = -
EINVAL
;

477  
ªt
;

478 
	}
}

480 
ölöe
 
boﬁ
 
	$check_ödex
(
sk_buff
 *
skb
, 
u8
 
idx
)

482 
©h9k_htc_tx_˘l
 *
tx_˘l
;

484 
tx_˘l
 = 
	`HTC_SKB_CB
(
skb
);

486 i‡((
tx_˘l
->
ty≥
 =
ATH9K_HTC_AMPDU
) &&

487 (
tx_˘l
->
°a_idx
 =
idx
))

488  
åue
;

490  
Ál£
;

491 
	}
}

493 
	$hif_usb_°a_døö
(*
hif_h™dÀ
, 
u8
 
idx
)

495 
hif_devi˚_usb
 *
hif_dev
 = (hif_devi˚_usb *)
hif_h™dÀ
;

496 
sk_buff
 *
skb
, *
tmp
;

497 
Êags
;

499 
	`•ö_lock_úqßve
(&
hif_dev
->
tx
.
tx_lock
, 
Êags
);

501 
	`skb_queue_wÆk_ß„
(&
hif_dev
->
tx
.
tx_skb_queue
, 
skb
, 
tmp
) {

502 i‡(
	`check_ödex
(
skb
, 
idx
)) {

503 
	`__skb_u∆ök
(
skb
, &
hif_dev
->
tx
.
tx_skb_queue
);

504 
	`©h9k_htc_txcom∂ëi⁄_cb
(
hif_dev
->
htc_h™dÀ
,

505 
skb
, 
Ál£
);

506 
hif_dev
->
tx
.
tx_skb_˙t
--;

507 
	`TX_STAT_INC
(
skb_Áûed
);

511 
	`•ö_u∆ock_úqª°‹e
(&
hif_dev
->
tx
.
tx_lock
, 
Êags
);

512 
	}
}

514 
©h9k_htc_hif
 
	ghif_usb
 = {

515 .
å™•‹t
 = 
ATH9K_HIF_USB
,

516 .
	g«me
 = "ath9k_hif_usb",

518 .
	gc⁄åﬁ_ul_pùe
 = 
USB_REG_OUT_PIPE
,

519 .
	gc⁄åﬁ_dl_pùe
 = 
USB_REG_IN_PIPE
,

521 .
	g°¨t
 = 
hif_usb_°¨t
,

522 .
	g°›
 = 
hif_usb_°›
,

523 .
	g°a_døö
 = 
hif_usb_°a_døö
,

524 .
	g£nd
 = 
hif_usb_£nd
,

527 
	$©h9k_hif_usb_rx_°ªam
(
hif_devi˚_usb
 *
hif_dev
,

528 
sk_buff
 *
skb
)

530 
sk_buff
 *
nskb
, *
skb_poﬁ
[
MAX_PKT_NUM_IN_TRANSFER
];

531 
ödex
 = 0, 
i
 = 0, 
Àn
 = 
skb
->len;

532 
rx_ªmaö_Àn
, 
rx_pkt_Àn
;

533 
u16
 
poﬁ_ödex
 = 0;

534 
u8
 *
±r
;

536 
	`•ö_lock
(&
hif_dev
->
rx_lock
);

538 
rx_ªmaö_Àn
 = 
hif_dev
->rx_remain_len;

539 
rx_pkt_Àn
 = 
hif_dev
->
rx_å™s„r_Àn
;

541 i‡(
rx_ªmaö_Àn
 != 0) {

542 
sk_buff
 *
ªmaö_skb
 = 
hif_dev
->remain_skb;

544 i‡(
ªmaö_skb
) {

545 
±r
 = (
u8
 *Ë
ªmaö_skb
->
d©a
;

547 
ödex
 = 
rx_ªmaö_Àn
;

548 
rx_ªmaö_Àn
 -
hif_dev
->
rx_∑d_Àn
;

549 
±r
 +
rx_pkt_Àn
;

551 
	`mem˝y
(
±r
, 
skb
->
d©a
, 
rx_ªmaö_Àn
);

553 
rx_pkt_Àn
 +
rx_ªmaö_Àn
;

554 
hif_dev
->
rx_ªmaö_Àn
 = 0;

555 
	`skb_put
(
ªmaö_skb
, 
rx_pkt_Àn
);

557 
skb_poﬁ
[
poﬁ_ödex
++] = 
ªmaö_skb
;

560 
ödex
 = 
rx_ªmaö_Àn
;

564 
	`•ö_u∆ock
(&
hif_dev
->
rx_lock
);

566 
ödex
 < 
Àn
) {

567 
u16
 
pkt_Àn
;

568 
u16
 
pkt_èg
;

569 
u16
 
∑d_Àn
;

570 
chk_idx
;

572 
±r
 = (
u8
 *Ë
skb
->
d©a
;

574 
pkt_Àn
 = 
	`gë_u«lig√d_À16
(
±r
 + 
ödex
);

575 
pkt_èg
 = 
	`gë_u«lig√d_À16
(
±r
 + 
ödex
 + 2);

577 i‡(
pkt_èg
 !
ATH_USB_RX_STREAM_MODE_TAG
) {

578 
	`RX_STAT_INC
(
skb_dr›≥d
);

582 
∑d_Àn
 = 4 - (
pkt_Àn
 & 0x3);

583 i‡(
∑d_Àn
 == 4)

584 
∑d_Àn
 = 0;

586 
chk_idx
 = 
ödex
;

587 
ödex
 = index + 4 + 
pkt_Àn
 + 
∑d_Àn
;

589 i‡(
ödex
 > 
MAX_RX_BUF_SIZE
) {

590 
	`•ö_lock
(&
hif_dev
->
rx_lock
);

591 
hif_dev
->
rx_ªmaö_Àn
 = 
ödex
 - 
MAX_RX_BUF_SIZE
;

592 
hif_dev
->
rx_å™s„r_Àn
 =

593 
MAX_RX_BUF_SIZE
 - 
chk_idx
 - 4;

594 
hif_dev
->
rx_∑d_Àn
 = 
∑d_Àn
;

596 
nskb
 = 
	`__dev_Æloc_skb
(
pkt_Àn
 + 32, 
GFP_ATOMIC
);

597 i‡(!
nskb
) {

598 
	`dev_îr
(&
hif_dev
->
udev
->
dev
,

600 
	`•ö_u∆ock
(&
hif_dev
->
rx_lock
);

601 
îr
;

603 
	`skb_ª£rve
(
nskb
, 32);

604 
	`RX_STAT_INC
(
skb_Æloˇãd
);

606 
	`mem˝y
(
nskb
->
d©a
, &(
skb
->d©a[
chk_idx
+4]),

607 
hif_dev
->
rx_å™s„r_Àn
);

610 
hif_dev
->
ªmaö_skb
 = 
nskb
;

611 
	`•ö_u∆ock
(&
hif_dev
->
rx_lock
);

613 
nskb
 = 
	`__dev_Æloc_skb
(
pkt_Àn
 + 32, 
GFP_ATOMIC
);

614 i‡(!
nskb
) {

615 
	`dev_îr
(&
hif_dev
->
udev
->
dev
,

617 
îr
;

619 
	`skb_ª£rve
(
nskb
, 32);

620 
	`RX_STAT_INC
(
skb_Æloˇãd
);

622 
	`mem˝y
(
nskb
->
d©a
, &(
skb
->d©a[
chk_idx
+4]), 
pkt_Àn
);

623 
	`skb_put
(
nskb
, 
pkt_Àn
);

624 
skb_poﬁ
[
poﬁ_ödex
++] = 
nskb
;

628 
îr
:

629 
i
 = 0; i < 
poﬁ_ödex
; i++) {

630 
	`RX_STAT_ADD
(
skb_com∂ëed_byãs
, 
skb_poﬁ
[
i
]->
Àn
);

631 
	`©h9k_htc_rx_msg
(
hif_dev
->
htc_h™dÀ
, 
skb_poﬁ
[
i
],

632 
skb_poﬁ
[
i
]->
Àn
, 
USB_WLAN_RX_PIPE
);

633 
	`RX_STAT_INC
(
skb_com∂ëed
);

635 
	}
}

637 
	$©h9k_hif_usb_rx_cb
(
urb
 *urb)

639 
sk_buff
 *
skb
 = (sk_buf‡*Ë
urb
->
c⁄ãxt
;

640 
hif_devi˚_usb
 *
hif_dev
 =

641 
	`usb_gë_ötfd©a
(
	`usb_i‚um_to_if
(
urb
->
dev
, 0));

642 
ªt
;

644 i‡(!
skb
)

647 i‡(!
hif_dev
)

648 
‰ì
;

650 
urb
->
°©us
) {

653 -
ENOENT
:

654 -
ECONNRESET
:

655 -
ENODEV
:

656 -
ESHUTDOWN
:

657 
‰ì
;

659 
ªsubmô
;

662 i‡(
	`likñy
(
urb
->
a˘uÆ_Àngth
 != 0)) {

663 
	`skb_put
(
skb
, 
urb
->
a˘uÆ_Àngth
);

664 
	`©h9k_hif_usb_rx_°ªam
(
hif_dev
, 
skb
);

667 
ªsubmô
:

668 
	`skb_ª£t_èû_poöãr
(
skb
);

669 
	`skb_åim
(
skb
, 0);

671 
	`usb_™ch‹_urb
(
urb
, &
hif_dev
->
rx_submôãd
);

672 
ªt
 = 
	`usb_submô_urb
(
urb
, 
GFP_ATOMIC
);

673 i‡(
ªt
) {

674 
	`usb_u«nch‹_urb
(
urb
);

675 
‰ì
;

679 
‰ì
:

680 
	`k‰ì_skb
(
skb
);

681 
	}
}

683 
	$©h9k_hif_usb_ªg_ö_cb
(
urb
 *urb)

685 
sk_buff
 *
skb
 = (sk_buf‡*Ë
urb
->
c⁄ãxt
;

686 
sk_buff
 *
nskb
;

687 
hif_devi˚_usb
 *
hif_dev
 =

688 
	`usb_gë_ötfd©a
(
	`usb_i‚um_to_if
(
urb
->
dev
, 0));

689 
ªt
;

691 i‡(!
skb
)

694 i‡(!
hif_dev
)

695 
‰ì
;

697 
urb
->
°©us
) {

700 -
ENOENT
:

701 -
ECONNRESET
:

702 -
ENODEV
:

703 -
ESHUTDOWN
:

704 
‰ì
;

706 
	`skb_ª£t_èû_poöãr
(
skb
);

707 
	`skb_åim
(
skb
, 0);

709 
ªsubmô
;

712 i‡(
	`likñy
(
urb
->
a˘uÆ_Àngth
 != 0)) {

713 
	`skb_put
(
skb
, 
urb
->
a˘uÆ_Àngth
);

716 
	`©h9k_htc_rx_msg
(
hif_dev
->
htc_h™dÀ
, 
skb
,

717 
skb
->
Àn
, 
USB_REG_IN_PIPE
);

720 
nskb
 = 
	`Æloc_skb
(
MAX_REG_IN_BUF_SIZE
, 
GFP_ATOMIC
);

721 i‡(!
nskb
) {

722 
	`dev_îr
(&
hif_dev
->
udev
->
dev
,

724 
urb
->
c⁄ãxt
 = 
NULL
;

728 
	`usb_fûl_öt_urb
(
urb
, 
hif_dev
->
udev
,

729 
	`usb_rcvöçùe
(
hif_dev
->
udev
,

730 
USB_REG_IN_PIPE
),

731 
nskb
->
d©a
, 
MAX_REG_IN_BUF_SIZE
,

732 
©h9k_hif_usb_ªg_ö_cb
, 
nskb
, 1);

735 
ªsubmô
:

736 
	`usb_™ch‹_urb
(
urb
, &
hif_dev
->
ªg_ö_submôãd
);

737 
ªt
 = 
	`usb_submô_urb
(
urb
, 
GFP_ATOMIC
);

738 i‡(
ªt
) {

739 
	`usb_u«nch‹_urb
(
urb
);

740 
‰ì
;

744 
‰ì
:

745 
	`k‰ì_skb
(
skb
);

746 
urb
->
c⁄ãxt
 = 
NULL
;

747 
	}
}

749 
	$©h9k_hif_usb_dóŒoc_tx_urbs
(
hif_devi˚_usb
 *
hif_dev
)

751 
tx_buf
 *tx_bu‡
NULL
, *
tx_buf_tmp
 = NULL;

752 
Êags
;

754 
	`li°_f‹_óch_íåy_ß„
(
tx_buf
, 
tx_buf_tmp
,

755 &
hif_dev
->
tx
.
tx_buf
, 
li°
) {

756 
	`usb_kûl_urb
(
tx_buf
->
urb
);

757 
	`li°_dñ
(&
tx_buf
->
li°
);

758 
	`usb_‰ì_urb
(
tx_buf
->
urb
);

759 
	`k‰ì
(
tx_buf
->
buf
);

760 
	`k‰ì
(
tx_buf
);

763 
	`•ö_lock_úqßve
(&
hif_dev
->
tx
.
tx_lock
, 
Êags
);

764 
hif_dev
->
tx
.
Êags
 |
HIF_USB_TX_FLUSH
;

765 
	`•ö_u∆ock_úqª°‹e
(&
hif_dev
->
tx
.
tx_lock
, 
Êags
);

767 
	`li°_f‹_óch_íåy_ß„
(
tx_buf
, 
tx_buf_tmp
,

768 &
hif_dev
->
tx
.
tx_≥ndög
, 
li°
) {

769 
	`usb_kûl_urb
(
tx_buf
->
urb
);

770 
	`li°_dñ
(&
tx_buf
->
li°
);

771 
	`usb_‰ì_urb
(
tx_buf
->
urb
);

772 
	`k‰ì
(
tx_buf
->
buf
);

773 
	`k‰ì
(
tx_buf
);

776 
	`usb_kûl_™ch‹ed_urbs
(&
hif_dev
->
mgmt_submôãd
);

777 
	}
}

779 
	$©h9k_hif_usb_Æloc_tx_urbs
(
hif_devi˚_usb
 *
hif_dev
)

781 
tx_buf
 *tx_buf;

782 
i
;

784 
	`INIT_LIST_HEAD
(&
hif_dev
->
tx
.
tx_buf
);

785 
	`INIT_LIST_HEAD
(&
hif_dev
->
tx
.
tx_≥ndög
);

786 
	`•ö_lock_öô
(&
hif_dev
->
tx
.
tx_lock
);

787 
	`__skb_queue_hód_öô
(&
hif_dev
->
tx
.
tx_skb_queue
);

788 
	`öô_usb_™ch‹
(&
hif_dev
->
mgmt_submôãd
);

790 
i
 = 0; i < 
MAX_TX_URB_NUM
; i++) {

791 
tx_buf
 = 
	`kzÆloc
((tx_buf), 
GFP_KERNEL
);

792 i‡(!
tx_buf
)

793 
îr
;

795 
tx_buf
->
buf
 = 
	`kzÆloc
(
MAX_TX_BUF_SIZE
, 
GFP_KERNEL
);

796 i‡(!
tx_buf
->
buf
)

797 
îr
;

799 
tx_buf
->
urb
 = 
	`usb_Æloc_urb
(0, 
GFP_KERNEL
);

800 i‡(!
tx_buf
->
urb
)

801 
îr
;

803 
tx_buf
->
hif_dev
 = hif_dev;

804 
	`__skb_queue_hód_öô
(&
tx_buf
->
skb_queue
);

806 
	`li°_add_èû
(&
tx_buf
->
li°
, &
hif_dev
->
tx
.tx_buf);

809 
hif_dev
->
tx
.
tx_buf_˙t
 = 
MAX_TX_URB_NUM
;

812 
îr
:

813 i‡(
tx_buf
) {

814 
	`k‰ì
(
tx_buf
->
buf
);

815 
	`k‰ì
(
tx_buf
);

817 
	`©h9k_hif_usb_dóŒoc_tx_urbs
(
hif_dev
);

818  -
ENOMEM
;

819 
	}
}

821 
	$©h9k_hif_usb_dóŒoc_rx_urbs
(
hif_devi˚_usb
 *
hif_dev
)

823 
	`usb_kûl_™ch‹ed_urbs
(&
hif_dev
->
rx_submôãd
);

824 
	}
}

826 
	$©h9k_hif_usb_Æloc_rx_urbs
(
hif_devi˚_usb
 *
hif_dev
)

828 
urb
 *urb = 
NULL
;

829 
sk_buff
 *
skb
 = 
NULL
;

830 
i
, 
ªt
;

832 
	`öô_usb_™ch‹
(&
hif_dev
->
rx_submôãd
);

833 
	`•ö_lock_öô
(&
hif_dev
->
rx_lock
);

835 
i
 = 0; i < 
MAX_RX_URB_NUM
; i++) {

838 
urb
 = 
	`usb_Æloc_urb
(0, 
GFP_KERNEL
);

839 i‡(
urb
 =
NULL
) {

840 
ªt
 = -
ENOMEM
;

841 
îr_urb
;

845 
skb
 = 
	`Æloc_skb
(
MAX_RX_BUF_SIZE
, 
GFP_KERNEL
);

846 i‡(!
skb
) {

847 
ªt
 = -
ENOMEM
;

848 
îr_skb
;

851 
	`usb_fûl_bulk_urb
(
urb
, 
hif_dev
->
udev
,

852 
	`usb_rcvbulkpùe
(
hif_dev
->
udev
,

853 
USB_WLAN_RX_PIPE
),

854 
skb
->
d©a
, 
MAX_RX_BUF_SIZE
,

855 
©h9k_hif_usb_rx_cb
, 
skb
);

858 
	`usb_™ch‹_urb
(
urb
, &
hif_dev
->
rx_submôãd
);

861 
ªt
 = 
	`usb_submô_urb
(
urb
, 
GFP_KERNEL
);

862 i‡(
ªt
) {

863 
	`usb_u«nch‹_urb
(
urb
);

864 
îr_submô
;

871 
	`usb_‰ì_urb
(
urb
);

876 
îr_submô
:

877 
	`k‰ì_skb
(
skb
);

878 
îr_skb
:

879 
	`usb_‰ì_urb
(
urb
);

880 
îr_urb
:

881 
	`©h9k_hif_usb_dóŒoc_rx_urbs
(
hif_dev
);

882  
ªt
;

883 
	}
}

885 
	$©h9k_hif_usb_dóŒoc_ªg_ö_urbs
(
hif_devi˚_usb
 *
hif_dev
)

887 
	`usb_kûl_™ch‹ed_urbs
(&
hif_dev
->
ªg_ö_submôãd
);

888 
	}
}

890 
	$©h9k_hif_usb_Æloc_ªg_ö_urbs
(
hif_devi˚_usb
 *
hif_dev
)

892 
urb
 *urb = 
NULL
;

893 
sk_buff
 *
skb
 = 
NULL
;

894 
i
, 
ªt
;

896 
	`öô_usb_™ch‹
(&
hif_dev
->
ªg_ö_submôãd
);

898 
i
 = 0; i < 
MAX_REG_IN_URB_NUM
; i++) {

901 
urb
 = 
	`usb_Æloc_urb
(0, 
GFP_KERNEL
);

902 i‡(
urb
 =
NULL
) {

903 
ªt
 = -
ENOMEM
;

904 
îr_urb
;

908 
skb
 = 
	`Æloc_skb
(
MAX_REG_IN_BUF_SIZE
, 
GFP_KERNEL
);

909 i‡(!
skb
) {

910 
ªt
 = -
ENOMEM
;

911 
îr_skb
;

914 
	`usb_fûl_öt_urb
(
urb
, 
hif_dev
->
udev
,

915 
	`usb_rcvöçùe
(
hif_dev
->
udev
,

916 
USB_REG_IN_PIPE
),

917 
skb
->
d©a
, 
MAX_REG_IN_BUF_SIZE
,

918 
©h9k_hif_usb_ªg_ö_cb
, 
skb
, 1);

921 
	`usb_™ch‹_urb
(
urb
, &
hif_dev
->
ªg_ö_submôãd
);

924 
ªt
 = 
	`usb_submô_urb
(
urb
, 
GFP_KERNEL
);

925 i‡(
ªt
) {

926 
	`usb_u«nch‹_urb
(
urb
);

927 
îr_submô
;

934 
	`usb_‰ì_urb
(
urb
);

939 
îr_submô
:

940 
	`k‰ì_skb
(
skb
);

941 
îr_skb
:

942 
	`usb_‰ì_urb
(
urb
);

943 
îr_urb
:

944 
	`©h9k_hif_usb_dóŒoc_ªg_ö_urbs
(
hif_dev
);

945  
ªt
;

946 
	}
}

948 
	$©h9k_hif_usb_Æloc_urbs
(
hif_devi˚_usb
 *
hif_dev
)

951 
	`öô_usb_™ch‹
(&
hif_dev
->
ªgout_submôãd
);

954 i‡(
	`©h9k_hif_usb_Æloc_tx_urbs
(
hif_dev
) < 0)

955 
îr
;

958 i‡(
	`©h9k_hif_usb_Æloc_rx_urbs
(
hif_dev
) < 0)

959 
îr_rx
;

962 i‡(
	`©h9k_hif_usb_Æloc_ªg_ö_urbs
(
hif_dev
) < 0)

963 
îr_ªg
;

966 
îr_ªg
:

967 
	`©h9k_hif_usb_dóŒoc_rx_urbs
(
hif_dev
);

968 
îr_rx
:

969 
	`©h9k_hif_usb_dóŒoc_tx_urbs
(
hif_dev
);

970 
îr
:

971  -
ENOMEM
;

972 
	}
}

974 
	$©h9k_hif_usb_dóŒoc_urbs
(
hif_devi˚_usb
 *
hif_dev
)

976 
	`usb_kûl_™ch‹ed_urbs
(&
hif_dev
->
ªgout_submôãd
);

977 
	`©h9k_hif_usb_dóŒoc_ªg_ö_urbs
(
hif_dev
);

978 
	`©h9k_hif_usb_dóŒoc_tx_urbs
(
hif_dev
);

979 
	`©h9k_hif_usb_dóŒoc_rx_urbs
(
hif_dev
);

980 
	}
}

982 
	$©h9k_hif_usb_dow∆ﬂd_fw
(
hif_devi˚_usb
 *
hif_dev
)

984 
å™s„r
, 
îr
;

985 c⁄° *
d©a
 = 
hif_dev
->
fw_d©a
;

986 
size_t
 
Àn
 = 
hif_dev
->
fw_size
;

987 
u32
 
addr
 = 
AR9271_FIRMWARE
;

988 
u8
 *
buf
 = 
	`kzÆloc
(4096, 
GFP_KERNEL
);

989 
u32
 
fúm_off£t
;

991 i‡(!
buf
)

992  -
ENOMEM
;

994 
Àn
) {

995 
å™s„r
 = 
	`mö_t
(
size_t
, 
Àn
, 4096);

996 
	`mem˝y
(
buf
, 
d©a
, 
å™s„r
);

998 
îr
 = 
	`usb_c⁄åﬁ_msg
(
hif_dev
->
udev
,

999 
	`usb_¢d˘æpùe
(
hif_dev
->
udev
, 0),

1000 
FIRMWARE_DOWNLOAD
, 0x40 | 
USB_DIR_OUT
,

1001 
addr
 >> 8, 0, 
buf
, 
å™s„r
, 
HZ
);

1002 i‡(
îr
 < 0) {

1003 
	`k‰ì
(
buf
);

1004  
îr
;

1007 
Àn
 -
å™s„r
;

1008 
d©a
 +
å™s„r
;

1009 
addr
 +
å™s„r
;

1011 
	`k‰ì
(
buf
);

1013 i‡(
	`IS_AR7010_DEVICE
(
hif_dev
->
usb_devi˚_id
->
drivî_öfo
))

1014 
fúm_off£t
 = 
AR7010_FIRMWARE_TEXT
;

1016 
fúm_off£t
 = 
AR9271_FIRMWARE_TEXT
;

1021 
îr
 = 
	`usb_c⁄åﬁ_msg
(
hif_dev
->
udev
, 
	`usb_¢d˘æpùe
(hif_dev->udev, 0),

1022 
FIRMWARE_DOWNLOAD_COMP
,

1023 0x40 | 
USB_DIR_OUT
,

1024 
fúm_off£t
 >> 8, 0, 
NULL
, 0, 
HZ
);

1025 i‡(
îr
)

1026  -
EIO
;

1028 
	`dev_öfo
(&
hif_dev
->
udev
->
dev
, "ath9k_htc: Transferred FW: %s, size: %ld\n",

1029 
hif_dev
->
fw_«me
, (Ëhif_dev->
fw_size
);

1032 
	}
}

1034 
	$©h9k_hif_usb_dev_öô
(
hif_devi˚_usb
 *
hif_dev
)

1036 
ªt
;

1038 
ªt
 = 
	`©h9k_hif_usb_dow∆ﬂd_fw
(
hif_dev
);

1039 i‡(
ªt
) {

1040 
	`dev_îr
(&
hif_dev
->
udev
->
dev
,

1042 
hif_dev
->
fw_«me
);

1043  
ªt
;

1047 
ªt
 = 
	`©h9k_hif_usb_Æloc_urbs
(
hif_dev
);

1048 i‡(
ªt
) {

1049 
	`dev_îr
(&
hif_dev
->
udev
->
dev
,

1051  
ªt
;

1055 
	}
}

1057 
	$©h9k_hif_usb_dev_deöô
(
hif_devi˚_usb
 *
hif_dev
)

1059 
	`©h9k_hif_usb_dóŒoc_urbs
(
hif_dev
);

1060 
	}
}

1066 
	$©h9k_hif_usb_fúmw¨e_Áû
(
hif_devi˚_usb
 *
hif_dev
)

1068 
devi˚
 *
dev
 = &
hif_dev
->
udev
->dev;

1069 
devi˚
 *
∑ª¡
 = 
dev
->parent;

1071 
	`com∂ëe_Æl
(&
hif_dev
->
fw_d⁄e
);

1073 i‡(
∑ª¡
)

1074 
	`devi˚_lock
(
∑ª¡
);

1076 
	`devi˚_ªÀa£_drivî
(
dev
);

1078 i‡(
∑ª¡
)

1079 
	`devi˚_u∆ock
(
∑ª¡
);

1080 
	}
}

1082 
	$©h9k_hif_usb_fúmw¨e_cb
(c⁄° 
fúmw¨e
 *
fw
, *
c⁄ãxt
)

1084 
hif_devi˚_usb
 *
hif_dev
 = 
c⁄ãxt
;

1085 
ªt
;

1087 i‡(!
fw
) {

1088 
	`dev_îr
(&
hif_dev
->
udev
->
dev
,

1090 
hif_dev
->
fw_«me
);

1091 
îr_fw
;

1094 
hif_dev
->
htc_h™dÀ
 = 
	`©h9k_htc_hw_Æloc
(hif_dev, &
hif_usb
,

1095 &
hif_dev
->
udev
->
dev
);

1096 i‡(
hif_dev
->
htc_h™dÀ
 =
NULL
)

1097 
îr_dev_Æloc
;

1099 
hif_dev
->
fw_d©a
 = 
fw
->
d©a
;

1100 
hif_dev
->
fw_size
 = 
fw
->
size
;

1104 
ªt
 = 
	`©h9k_hif_usb_dev_öô
(
hif_dev
);

1105 i‡(
ªt
)

1106 
îr_dev_öô
;

1108 
ªt
 = 
	`©h9k_htc_hw_öô
(
hif_dev
->
htc_h™dÀ
,

1109 &
hif_dev
->
öãrÁ˚
->
dev
,

1110 
hif_dev
->
usb_devi˚_id
->
idProdu˘
,

1111 
hif_dev
->
udev
->
¥odu˘
,

1112 
hif_dev
->
usb_devi˚_id
->
drivî_öfo
);

1113 i‡(
ªt
) {

1114 
ªt
 = -
EINVAL
;

1115 
îr_htc_hw_öô
;

1118 
	`ªÀa£_fúmw¨e
(
fw
);

1119 
hif_dev
->
Êags
 |
HIF_USB_READY
;

1120 
	`com∂ëe_Æl
(&
hif_dev
->
fw_d⁄e
);

1124 
îr_htc_hw_öô
:

1125 
	`©h9k_hif_usb_dev_deöô
(
hif_dev
);

1126 
îr_dev_öô
:

1127 
	`©h9k_htc_hw_‰ì
(
hif_dev
->
htc_h™dÀ
);

1128 
îr_dev_Æloc
:

1129 
	`ªÀa£_fúmw¨e
(
fw
);

1130 
îr_fw
:

1131 
	`©h9k_hif_usb_fúmw¨e_Áû
(
hif_dev
);

1132 
	}
}

1137 
	$£nd_eje˘_comm™d
(
usb_öãrÁ˚
 *
öãrÁ˚
)

1139 
usb_devi˚
 *
udev
 = 
	`öãrÁ˚_to_usbdev
(
öãrÁ˚
);

1140 
usb_ho°_öãrÁ˚
 *
iÁ˚_desc
 = &
öãrÁ˚
->
Æt£âög
[0];

1141 
usb_ídpoöt_des¸ùt‹
 *
ídpoöt
;

1142 *
cmd
;

1143 
u8
 
bulk_out_ï
;

1144 
r
;

1147 
r
 = 1;Ñ >= 0;Ñ--) {

1148 
ídpoöt
 = &
iÁ˚_desc
->ídpoöt[
r
].
desc
;

1149 i‡(
	`usb_ídpoöt_dú_out
(
ídpoöt
) &&

1150 
	`usb_ídpoöt_x„r_bulk
(
ídpoöt
)) {

1151 
bulk_out_ï
 = 
ídpoöt
->
bEndpoötAddªss
;

1155 i‡(
r
 == -1) {

1156 
	`dev_îr
(&
udev
->
dev
,

1158  -
ENODEV
;

1161 
cmd
 = 
	`kzÆloc
(31, 
GFP_KERNEL
);

1162 i‡(
cmd
 =
NULL
)

1163  -
ENODEV
;

1166 
cmd
[0] = 0x55;

1167 
cmd
[1] = 0x53;

1168 
cmd
[2] = 0x42;

1169 
cmd
[3] = 0x43;

1170 
cmd
[14] = 6;

1172 
cmd
[15] = 0x1b;

1173 
cmd
[19] = 0x2;

1175 
	`dev_öfo
(&
udev
->
dev
, "Ejecting storage device...\n");

1176 
r
 = 
	`usb_bulk_msg
(
udev
, 
	`usb_¢dbulkpùe
(udev, 
bulk_out_ï
),

1177 
cmd
, 31, 
NULL
, 2000);

1178 
	`k‰ì
(
cmd
);

1179 i‡(
r
)

1180  
r
;

1185 
	`usb_£t_ötfd©a
(
öãrÁ˚
, 
NULL
);

1187 
	}
}

1189 
	$©h9k_hif_usb_¥obe
(
usb_öãrÁ˚
 *
öãrÁ˚
,

1190 c⁄° 
usb_devi˚_id
 *
id
)

1192 
usb_devi˚
 *
udev
 = 
	`öãrÁ˚_to_usbdev
(
öãrÁ˚
);

1193 
hif_devi˚_usb
 *
hif_dev
;

1194 
ªt
 = 0;

1196 i‡(
id
->
drivî_öfo
 =
STORAGE_DEVICE
)

1197  
	`£nd_eje˘_comm™d
(
öãrÁ˚
);

1199 
hif_dev
 = 
	`kzÆloc
((
hif_devi˚_usb
), 
GFP_KERNEL
);

1200 i‡(!
hif_dev
) {

1201 
ªt
 = -
ENOMEM
;

1202 
îr_Æloc
;

1205 
	`usb_gë_dev
(
udev
);

1207 
hif_dev
->
udev
 = udev;

1208 
hif_dev
->
öãrÁ˚
 = interface;

1209 
hif_dev
->
usb_devi˚_id
 = 
id
;

1210 #ifde‡
CONFIG_PM


1211 
udev
->
ª£t_ªsume
 = 1;

1213 
	`usb_£t_ötfd©a
(
öãrÁ˚
, 
hif_dev
);

1215 
	`öô_com∂ëi⁄
(&
hif_dev
->
fw_d⁄e
);

1219 i‡(
	`IS_AR7010_DEVICE
(
id
->
drivî_öfo
))

1220 
hif_dev
->
fw_«me
 = 
FIRMWARE_AR7010_1_1
;

1222 
hif_dev
->
fw_«me
 = 
FIRMWARE_AR9271
;

1224 
ªt
 = 
	`ªque°_fúmw¨e_nowaô
(
THIS_MODULE
, 
åue
, 
hif_dev
->
fw_«me
,

1225 &
hif_dev
->
udev
->
dev
, 
GFP_KERNEL
,

1226 
hif_dev
, 
©h9k_hif_usb_fúmw¨e_cb
);

1227 i‡(
ªt
) {

1228 
	`dev_îr
(&
hif_dev
->
udev
->
dev
,

1230 
hif_dev
->
fw_«me
);

1231 
îr_fw_ªq
;

1234 
	`dev_öfo
(&
hif_dev
->
udev
->
dev
, "ath9k_htc: Firmware %sÑequested\n",

1235 
hif_dev
->
fw_«me
);

1239 
îr_fw_ªq
:

1240 
	`usb_£t_ötfd©a
(
öãrÁ˚
, 
NULL
);

1241 
	`k‰ì
(
hif_dev
);

1242 
	`usb_put_dev
(
udev
);

1243 
îr_Æloc
:

1244  
ªt
;

1245 
	}
}

1247 
	$©h9k_hif_usb_ªboŸ
(
usb_devi˚
 *
udev
)

1249 
u32
 
ªboŸ_cmd
 = 0xffffffff;

1250 *
buf
;

1251 
ªt
;

1253 
buf
 = 
	`kmemdup
(&
ªboŸ_cmd
, 4, 
GFP_KERNEL
);

1254 i‡(!
buf
)

1257 
ªt
 = 
	`usb_öãºu±_msg
(
udev
, 
	`usb_¢döçùe
(udev, 
USB_REG_OUT_PIPE
),

1258 
buf
, 4, 
NULL
, 
HZ
);

1259 i‡(
ªt
)

1260 
	`dev_îr
(&
udev
->
dev
, "ath9k_htc: USBÑeboot failed\n");

1262 
	`k‰ì
(
buf
);

1263 
	}
}

1265 
	$©h9k_hif_usb_disc⁄√˘
(
usb_öãrÁ˚
 *
öãrÁ˚
)

1267 
usb_devi˚
 *
udev
 = 
	`öãrÁ˚_to_usbdev
(
öãrÁ˚
);

1268 
hif_devi˚_usb
 *
hif_dev
 = 
	`usb_gë_ötfd©a
(
öãrÁ˚
);

1269 
boﬁ
 
u≈lugged
 = (
udev
->
°©e
 =
USB_STATE_NOTATTACHED
Ë? 
åue
 : 
Ál£
;

1271 i‡(!
hif_dev
)

1274 
	`waô_f‹_com∂ëi⁄
(&
hif_dev
->
fw_d⁄e
);

1276 i‡(
hif_dev
->
Êags
 & 
HIF_USB_READY
) {

1277 
	`©h9k_htc_hw_deöô
(
hif_dev
->
htc_h™dÀ
, 
u≈lugged
);

1278 
	`©h9k_htc_hw_‰ì
(
hif_dev
->
htc_h™dÀ
);

1279 
	`©h9k_hif_usb_dev_deöô
(
hif_dev
);

1282 
	`usb_£t_ötfd©a
(
öãrÁ˚
, 
NULL
);

1286 i‡(!
u≈lugged
 && (
hif_dev
->
Êags
 & 
HIF_USB_READY
))

1287 
	`©h9k_hif_usb_ªboŸ
(
udev
);

1289 
	`k‰ì
(
hif_dev
);

1290 
	`dev_öfo
(&
udev
->
dev
, "ath9k_htc: USBÜayer deinitialized\n");

1291 
	`usb_put_dev
(
udev
);

1292 
	}
}

1294 #ifde‡
CONFIG_PM


1295 
	$©h9k_hif_usb_su•íd
(
usb_öãrÁ˚
 *
öãrÁ˚
,

1296 
pm_mesßge_t
 
mesßge
)

1298 
hif_devi˚_usb
 *
hif_dev
 = 
	`usb_gë_ötfd©a
(
öãrÁ˚
);

1304 i‡(!(
hif_dev
->
Êags
 & 
HIF_USB_START
))

1305 
	`©h9k_htc_su•íd
(
hif_dev
->
htc_h™dÀ
);

1307 
	`waô_f‹_com∂ëi⁄
(&
hif_dev
->
fw_d⁄e
);

1309 i‡(
hif_dev
->
Êags
 & 
HIF_USB_READY
)

1310 
	`©h9k_hif_usb_dóŒoc_urbs
(
hif_dev
);

1313 
	}
}

1315 
	$©h9k_hif_usb_ªsume
(
usb_öãrÁ˚
 *
öãrÁ˚
)

1317 
hif_devi˚_usb
 *
hif_dev
 = 
	`usb_gë_ötfd©a
(
öãrÁ˚
);

1318 
htc_èrgë
 *
htc_h™dÀ
 = 
hif_dev
->htc_handle;

1319 
ªt
;

1320 c⁄° 
fúmw¨e
 *
fw
;

1322 
ªt
 = 
	`©h9k_hif_usb_Æloc_urbs
(
hif_dev
);

1323 i‡(
ªt
)

1324  
ªt
;

1326 i‡(
hif_dev
->
Êags
 & 
HIF_USB_READY
) {

1328 
ªt
 = 
	`ªque°_fúmw¨e
(&
fw
, 
hif_dev
->
fw_«me
,

1329 &
hif_dev
->
udev
->
dev
);

1330 i‡(
ªt
)

1331 
Áû_ªsume
;

1333 
hif_dev
->
fw_d©a
 = 
fw
->
d©a
;

1334 
hif_dev
->
fw_size
 = 
fw
->
size
;

1335 
ªt
 = 
	`©h9k_hif_usb_dow∆ﬂd_fw
(
hif_dev
);

1336 
	`ªÀa£_fúmw¨e
(
fw
);

1337 i‡(
ªt
)

1338 
Áû_ªsume
;

1340 
	`©h9k_hif_usb_dóŒoc_urbs
(
hif_dev
);

1341  -
EIO
;

1344 
	`mdñay
(100);

1346 
ªt
 = 
	`©h9k_htc_ªsume
(
htc_h™dÀ
);

1348 i‡(
ªt
)

1349 
Áû_ªsume
;

1353 
Áû_ªsume
:

1354 
	`©h9k_hif_usb_dóŒoc_urbs
(
hif_dev
);

1356  
ªt
;

1357 
	}
}

1360 
usb_drivî
 
	g©h9k_hif_usb_drivî
 = {

1361 .
«me
 = 
KBUILD_MODNAME
,

1362 .
	g¥obe
 = 
©h9k_hif_usb_¥obe
,

1363 .
	gdisc⁄√˘
 = 
©h9k_hif_usb_disc⁄√˘
,

1364 #ifde‡
CONFIG_PM


1365 .
	gsu•íd
 = 
©h9k_hif_usb_su•íd
,

1366 .
	gªsume
 = 
©h9k_hif_usb_ªsume
,

1367 .
	gª£t_ªsume
 = 
©h9k_hif_usb_ªsume
,

1369 .
	gid_èbÀ
 = 
©h9k_hif_usb_ids
,

1370 .
	gso·_unböd
 = 1,

1371 #i‡(
LINUX_VERSION_CODE
 >
KERNEL_VERSION
(3,5,0))

1372 .
	gdißbÀ_hub_öôüãd_Õm
 = 1,

1376 
	$©h9k_hif_usb_öô
()

1378  
	`usb_ªgi°î
(&
©h9k_hif_usb_drivî
);

1379 
	}
}

1381 
	$©h9k_hif_usb_exô
()

1383 
	`usb_dîegi°î
(&
©h9k_hif_usb_drivî
);

1384 
	}
}

	@hif_usb.h

17 #i‚de‡
HTC_USB_H


18 
	#HTC_USB_H


	)

20 
	#MAJOR_VERSION_REQ
 1

	)

21 
	#MINOR_VERSION_REQ
 3

	)

23 
	#IS_AR7010_DEVICE
(
_v
Ë(((_vË=
AR9280_USB
Ë|| ((_vË=
AR9287_USB
))

	)

25 
	#AR9271_FIRMWARE
 0x501000

	)

26 
	#AR9271_FIRMWARE_TEXT
 0x903000

	)

27 
	#AR7010_FIRMWARE_TEXT
 0x906000

	)

29 
	#FIRMWARE_DOWNLOAD
 0x30

	)

30 
	#FIRMWARE_DOWNLOAD_COMP
 0x31

	)

32 
	#ATH_USB_RX_STREAM_MODE_TAG
 0x4e00

	)

33 
	#ATH_USB_TX_STREAM_MODE_TAG
 0x697e

	)

36 
	#MAX_TX_URB_NUM
 8

	)

37 
	#MAX_TX_BUF_NUM
 256

	)

38 
	#MAX_TX_BUF_SIZE
 32768

	)

39 
	#MAX_TX_AGGR_NUM
 20

	)

41 
	#MAX_RX_URB_NUM
 8

	)

42 
	#MAX_RX_BUF_SIZE
 16384

	)

43 
	#MAX_PKT_NUM_IN_TRANSFER
 10

	)

45 
	#MAX_REG_OUT_URB_NUM
 1

	)

46 
	#MAX_REG_IN_URB_NUM
 64

	)

48 
	#MAX_REG_IN_BUF_SIZE
 64

	)

51 
	#USB_WLAN_TX_PIPE
 1

	)

52 
	#USB_WLAN_RX_PIPE
 2

	)

53 
	#USB_REG_IN_PIPE
 3

	)

54 
	#USB_REG_OUT_PIPE
 4

	)

56 
	#HIF_USB_MAX_RXPIPES
 2

	)

57 
	#HIF_USB_MAX_TXPIPES
 4

	)

59 
	stx_buf
 {

60 
u8
 *
	mbuf
;

61 
u16
 
	mÀn
;

62 
u16
 
	moff£t
;

63 
urb
 *
	murb
;

64 
sk_buff_hód
 
	mskb_queue
;

65 
hif_devi˚_usb
 *
	mhif_dev
;

66 
li°_hód
 
	mli°
;

69 
	#HIF_USB_TX_STOP
 
	`BIT
(0)

	)

70 
	#HIF_USB_TX_FLUSH
 
	`BIT
(1)

	)

72 
	shif_usb_tx
 {

73 
u8
 
	mÊags
;

74 
u8
 
	mtx_buf_˙t
;

75 
u16
 
	mtx_skb_˙t
;

76 
sk_buff_hód
 
	mtx_skb_queue
;

77 
li°_hód
 
	mtx_buf
;

78 
li°_hód
 
	mtx_≥ndög
;

79 
•ölock_t
 
	mtx_lock
;

82 
	scmd_buf
 {

83 
sk_buff
 *
	mskb
;

84 
hif_devi˚_usb
 *
	mhif_dev
;

87 
	#HIF_USB_START
 
	`BIT
(0)

	)

88 
	#HIF_USB_READY
 
	`BIT
(1)

	)

90 
	shif_devi˚_usb
 {

91 
usb_devi˚
 *
	mudev
;

92 
usb_öãrÁ˚
 *
	möãrÁ˚
;

93 c⁄° 
usb_devi˚_id
 *
	musb_devi˚_id
;

94 c⁄° *
	mfw_d©a
;

95 
size_t
 
	mfw_size
;

96 
com∂ëi⁄
 
	mfw_d⁄e
;

97 
htc_èrgë
 *
	mhtc_h™dÀ
;

98 
hif_usb_tx
 
	mtx
;

99 
usb_™ch‹
 
	mªgout_submôãd
;

100 
usb_™ch‹
 
	mrx_submôãd
;

101 
usb_™ch‹
 
	mªg_ö_submôãd
;

102 
usb_™ch‹
 
	mmgmt_submôãd
;

103 
sk_buff
 *
	mªmaö_skb
;

104 c⁄° *
	mfw_«me
;

105 
	mrx_ªmaö_Àn
;

106 
	mrx_pkt_Àn
;

107 
	mrx_å™s„r_Àn
;

108 
	mrx_∑d_Àn
;

109 
•ölock_t
 
	mrx_lock
;

110 
u8
 
	mÊags
;

113 
©h9k_hif_usb_öô
();

114 
©h9k_hif_usb_exô
();

	@htc.h

17 #i‚de‡
HTC_H


18 
	#HTC_H


	)

20 
	~<löux/moduÀ.h
>

21 
	~<löux/usb.h
>

22 
	~<löux/fúmw¨e.h
>

23 
	~<löux/skbuff.h
>

24 
	~<löux/√tdevi˚.h
>

25 
	~<löux/ëhîdevi˚.h
>

26 
	~<löux/Àds.h
>

27 
	~<löux/¶ab.h
>

28 
	~<√t/mac80211.h
>

30 
	~"comm⁄.h
"

31 
	~"htc_h°.h
"

32 
	~"hif_usb.h
"

33 
	~"wmi.h
"

35 
	#ATH_STA_SHORT_CALINTERVAL
 1000

	)

36 
	#ATH_AP_SHORT_CALINTERVAL
 100

	)

37 
	#ATH_ANI_POLLINTERVAL
 100

	)

38 
	#ATH_LONG_CALINTERVAL
 30000

	)

39 
	#ATH_RESTART_CALINTERVAL
 1200000

	)

41 
	#ATH_DEFAULT_BMISS_LIMIT
 10

	)

42 
	#TSF_TO_TU
(
_h
, 
_l
) \

43 ((((
u32
)(
_h
)Ë<< 22Ë| (((u32)(
_l
)Ë>> 10))

	)

45 
õì80211_›s
 
©h9k_htc_›s
;

46 
htc_mod∑øm_nohw¸y±
;

48 
	ehtc_phymode
 {

49 
	mHTC_MODE_11NA
 = 0,

50 
	mHTC_MODE_11NG
 = 1

53 
	ehtc_›mode
 {

54 
	mHTC_M_STA
 = 1,

55 
	mHTC_M_IBSS
 = 0,

56 
	mHTC_M_AHDEMO
 = 3,

57 
	mHTC_M_HOSTAP
 = 6,

58 
	mHTC_M_MONITOR
 = 8,

59 
	mHTC_M_WDS
 = 2

62 
	#ATH9K_HTC_AMPDU
 1

	)

63 
	#ATH9K_HTC_NORMAL
 2

	)

64 
	#ATH9K_HTC_BEACON
 3

	)

65 
	#ATH9K_HTC_MGMT
 4

	)

67 
	#ATH9K_HTC_TX_CTSONLY
 0x1

	)

68 
	#ATH9K_HTC_TX_RTSCTS
 0x2

	)

70 
	stx_‰ame_hdr
 {

71 
u8
 
	md©a_ty≥
;

72 
u8
 
	mnode_idx
;

73 
u8
 
	mvif_idx
;

74 
u8
 
	mtidno
;

75 
__be32
 
	mÊags
;

76 
u8
 
	mkey_ty≥
;

77 
u8
 
	mkeyix
;

78 
u8
 
	mcookõ
;

79 
u8
 
	m∑d
;

80 } 
	g__∑cked
;

82 
	stx_mgmt_hdr
 {

83 
u8
 
	mnode_idx
;

84 
u8
 
	mvif_idx
;

85 
u8
 
	mtidno
;

86 
u8
 
	mÊags
;

87 
u8
 
	mkey_ty≥
;

88 
u8
 
	mkeyix
;

89 
u8
 
	mcookõ
;

90 
u8
 
	m∑d
;

91 } 
	g__∑cked
;

93 
	stx_bóc⁄_hódî
 {

94 
u8
 
	mvif_ödex
;

95 
u8
 
	mÀn_ch™ged
;

96 
u16
 
	mªv
;

97 } 
	g__∑cked
;

99 
	#MAX_TX_AMPDU_SUBFRAMES_9271
 17

	)

100 
	#MAX_TX_AMPDU_SUBFRAMES_7010
 22

	)

102 
	s©h9k_htc_ˇp_èrgë
 {

103 
__be32
 
	mampdu_limô
;

104 
u8
 
	mampdu_sub‰ames
;

105 
u8
 
	míabÀ_c€x
;

106 
u8
 
	mtx_chaömask
;

107 
u8
 
	m∑d
;

108 } 
	g__∑cked
;

110 
	s©h9k_htc_èrgë_vif
 {

111 
u8
 
	mödex
;

112 
u8
 
	m›mode
;

113 
u8
 
	mmyaddr
[
ETH_ALEN
];

114 
u8
 
	m©h_ˇp
;

115 
__be16
 
	mπ°hªshﬁd
;

116 
u8
 
	m∑d
;

117 } 
	g__∑cked
;

119 
	s©h9k_htc_èrgë_°a
 {

120 
u8
 
	mmaˇddr
[
ETH_ALEN
];

121 
u8
 
	mbssid
[
ETH_ALEN
];

122 
u8
 
	m°a_ödex
;

123 
u8
 
	mvif_ödex
;

124 
u8
 
	mis_vif_°a
;

125 
__be16
 
	mÊags
;

126 
__be16
 
	mhtˇp
;

127 
__be16
 
	mmaxampdu
;

128 
u8
 
	m∑d
;

129 } 
	g__∑cked
;

131 
	s©h9k_htc_èrgë_aggr
 {

132 
u8
 
	m°a_ödex
;

133 
u8
 
	mtidno
;

134 
u8
 
	maggr_íabÀ
;

135 
u8
 
	m∑ddög
;

136 } 
	g__∑cked
;

138 
	#ATH_HTC_RATE_MAX
 30

	)

140 
	#WLAN_RC_DS_FLAG
 0x01

	)

141 
	#WLAN_RC_40_FLAG
 0x02

	)

142 
	#WLAN_RC_SGI_FLAG
 0x04

	)

143 
	#WLAN_RC_HT_FLAG
 0x08

	)

144 
	#ATH_RC_TX_STBC_FLAG
 0x20

	)

146 
	s©h9k_htc_øã£t
 {

147 
u8
 
	mrs_ƒ©es
;

148 
u8
 
	mrs_øãs
[
ATH_HTC_RATE_MAX
];

151 
	s©h9k_htc_øã
 {

152 
©h9k_htc_øã£t
 
	mÀgacy_øãs
;

153 
©h9k_htc_øã£t
 
	mht_øãs
;

154 } 
	g__∑cked
;

156 
	s©h9k_htc_èrgë_øã
 {

157 
u8
 
	m°a_ödex
;

158 
u8
 
	mi¢ew
;

159 
__be32
 
	mˇpÊags
;

160 
©h9k_htc_øã
 
	møãs
;

163 
	s©h9k_htc_èrgë_øã_mask
 {

164 
u8
 
	mvif_ödex
;

165 
u8
 
	mb™d
;

166 
__be32
 
	mmask
;

167 
u16
 
	m∑d
;

168 } 
	g__∑cked
;

170 
	s©h9k_htc_èrgë_öt_°©s
 {

171 
__be32
 
	mrx
;

172 
__be32
 
	mrx‹n
;

173 
__be32
 
	mrxeﬁ
;

174 
__be32
 
	mtxu∫
;

175 
__be32
 
	mtxto
;

176 
__be32
 
	mc°
;

177 } 
	g__∑cked
;

179 
	s©h9k_htc_èrgë_tx_°©s
 {

180 
__be32
 
	mxªåõs
;

181 
__be32
 
	mfif€º
;

182 
__be32
 
	mfûãªd
;

183 
__be32
 
	mtimî_exp
;

184 
__be32
 
	msh‹åërõs
;

185 
__be32
 
	ml⁄gªåõs
;

186 
__be32
 
	mqnuŒ
;

187 
__be32
 
	míˇp_Áû
;

188 
__be32
 
	mnobuf
;

189 } 
	g__∑cked
;

191 
	s©h9k_htc_èrgë_rx_°©s
 {

192 
__be32
 
	mnobuf
;

193 
__be32
 
	mho°_£nd
;

194 
__be32
 
	mho°_d⁄e
;

195 } 
	g__∑cked
;

197 
	#ATH9K_HTC_MAX_VIF
 2

	)

198 
	#ATH9K_HTC_MAX_BCN_VIF
 2

	)

200 
	#INC_VIF
(
_¥iv
, 
_ty≥
) do { \

201 
_ty≥
) { \

202 
NL80211_IFTYPE_STATION
: \

203 
_¥iv
->
num_°a_vif
++; \

205 
NL80211_IFTYPE_ADHOC
: \

206 
_¥iv
->
num_ibss_vif
++; \

208 
NL80211_IFTYPE_AP
: \

209 
_¥iv
->
num_≠_vif
++; \

211 
NL80211_IFTYPE_MESH_POINT
: \

212 
_¥iv
->
num_mbss_vif
++; \

217 } 0)

	)

219 
	#DEC_VIF
(
_¥iv
, 
_ty≥
) do { \

220 
_ty≥
) { \

221 
NL80211_IFTYPE_STATION
: \

222 
_¥iv
->
num_°a_vif
--; \

224 
NL80211_IFTYPE_ADHOC
: \

225 
_¥iv
->
num_ibss_vif
--; \

227 
NL80211_IFTYPE_AP
: \

228 
_¥iv
->
num_≠_vif
--; \

230 
NL80211_IFTYPE_MESH_POINT
: \

231 
_¥iv
->
num_mbss_vif
--; \

236 } 0)

	)

238 
	s©h9k_htc_vif
 {

239 
u8
 
	mödex
;

240 
u16
 
	m£q_no
;

241 
boﬁ
 
	mbóc⁄_c⁄figuªd
;

242 
	mb¶Ÿ
;

243 
__À64
 
	mtsÁdju°
;

246 
	s©h9k_vif_ôî_d©a
 {

247 c⁄° 
u8
 *
	mhw_maˇddr
;

248 
u8
 
	mmask
[
ETH_ALEN
];

251 
	#ATH9K_HTC_MAX_STA
 8

	)

252 
	#ATH9K_HTC_MAX_TID
 8

	)

254 
	etid_aggr_°©e
 {

255 
	mAGGR_STOP
 = 0,

256 
	mAGGR_PROGRESS
,

257 
	mAGGR_START
,

258 
	mAGGR_OPERATIONAL


261 
	s©h9k_htc_°a
 {

262 
u8
 
	mödex
;

263 
tid_aggr_°©e
 
	mtid_°©e
[
ATH9K_HTC_MAX_TID
];

264 
w‹k_°ru˘
 
	mrc_upd©e_w‹k
;

265 
©h9k_htc_¥iv
 *
	mhtc_¥iv
;

268 
	#ATH9K_HTC_RXBUF
 256

	)

269 
	#HTC_RX_FRAME_HEADER_SIZE
 40

	)

271 
	s©h9k_htc_rxbuf
 {

272 
boﬁ
 
	mö_¥o˚ss
;

273 
sk_buff
 *
	mskb
;

274 
©h_htc_rx_°©us
 
	mrx°©us
;

275 
li°_hód
 
	mli°
;

278 
	s©h9k_htc_rx
 {

279 
li°_hód
 
	mrxbuf
;

280 
•ölock_t
 
	mrxbuÊock
;

283 
	#ATH9K_HTC_TX_CLEANUP_INTERVAL
 50

	)

284 
	#ATH9K_HTC_TX_TIMEOUT_INTERVAL
 3000

	)

285 
	#ATH9K_HTC_TX_RESERVE
 10

	)

286 
	#ATH9K_HTC_TX_TIMEOUT_COUNT
 40

	)

287 
	#ATH9K_HTC_TX_THRESHOLD
 (
MAX_TX_BUF_NUM
 - 
ATH9K_HTC_TX_RESERVE
)

	)

289 
	#ATH9K_HTC_OP_TX_QUEUES_STOP
 
	`BIT
(0)

	)

290 
	#ATH9K_HTC_OP_TX_DRAIN
 
	`BIT
(1)

	)

292 
	s©h9k_htc_tx
 {

293 
u8
 
	mÊags
;

294 
	mqueued_˙t
;

295 
sk_buff_hód
 
	mmgmt_ï_queue
;

296 
sk_buff_hód
 
	mˇb_ï_queue
;

297 
sk_buff_hód
 
	md©a_be_queue
;

298 
sk_buff_hód
 
	md©a_bk_queue
;

299 
sk_buff_hód
 
	md©a_vi_queue
;

300 
sk_buff_hód
 
	md©a_vo_queue
;

301 
sk_buff_hód
 
	mtx_Áûed
;

302 
DECLARE_BITMAP
(
tx_¶Ÿ
, 
MAX_TX_BUF_NUM
);

303 
timî_li°
 
	m˛ónup_timî
;

304 
•ölock_t
 
	mtx_lock
;

307 
	s©h9k_htc_tx_˘l
 {

308 
u8
 
	mty≥
;

309 
u8
 
	mïid
;

310 
u8
 
	mtxok
;

311 
u8
 
	m°a_idx
;

312 
	mtime°amp
;

315 
ölöe
 
©h9k_htc_tx_˘l
 *
	$HTC_SKB_CB
(
sk_buff
 *
skb
)

317 
õì80211_tx_öfo
 *
tx_öfo
 = 
	`IEEE80211_SKB_CB
(
skb
);

319 
	`BUILD_BUG_ON
((
©h9k_htc_tx_˘l
) >

320 
IEEE80211_TX_INFO_DRIVER_DATA_SIZE
);

321  (
©h9k_htc_tx_˘l
 *Ë&
tx_öfo
->
drivî_d©a
;

322 
	}
}

324 #ifde‡
CPTCFG_ATH9K_HTC_DEBUGFS


326 
	#TX_STAT_INC
(
c
Ë(
hif_dev
->
htc_h™dÀ
->
drv_¥iv
->
debug
.
tx_°©s
.c++)

	)

327 
	#TX_STAT_ADD
(
c
, 
a
Ë(
hif_dev
->
htc_h™dÀ
->
drv_¥iv
->
debug
.
tx_°©s
.¯+a)

	)

328 
	#RX_STAT_INC
(
c
Ë(
hif_dev
->
htc_h™dÀ
->
drv_¥iv
->
debug
.
skbrx_°©s
.c++)

	)

329 
	#RX_STAT_ADD
(
c
, 
a
Ë(
hif_dev
->
htc_h™dÀ
->
drv_¥iv
->
debug
.
skbrx_°©s
.¯+a)

	)

330 
	#CAB_STAT_INC
 
¥iv
->
debug
.
tx_°©s
.
ˇb_queued
++

	)

332 
	#TX_QSTAT_INC
(
q
Ë(
¥iv
->
debug
.
tx_°©s
.
queue_°©s
[q]++)

	)

334 
©h9k_htc_îr_°©_rx
(
©h9k_htc_¥iv
 *
¥iv
,

335 
©h_rx_°©us
 *
rs
);

337 
	s©h_tx_°©s
 {

338 
u32
 
	mbuf_queued
;

339 
u32
 
	mbuf_com∂ëed
;

340 
u32
 
	mskb_queued
;

341 
u32
 
	mskb_suc˚ss
;

342 
u32
 
	mskb_suc˚ss_byãs
;

343 
u32
 
	mskb_Áûed
;

344 
u32
 
	mˇb_queued
;

345 
u32
 
	mqueue_°©s
[
IEEE80211_NUM_ACS
];

348 
	s©h_skbrx_°©s
 {

349 
u32
 
	mskb_Æloˇãd
;

350 
u32
 
	mskb_com∂ëed
;

351 
u32
 
	mskb_com∂ëed_byãs
;

352 
u32
 
	mskb_dr›≥d
;

355 
	s©h9k_debug
 {

356 
díåy
 *
	mdebugfs_phy
;

357 
©h_tx_°©s
 
	mtx_°©s
;

358 
©h_rx_°©s
 
	mrx_°©s
;

359 
©h_skbrx_°©s
 
	mskbrx_°©s
;

362 
©h9k_htc_gë_ë_°rögs
(
õì80211_hw
 *
hw
,

363 
õì80211_vif
 *
vif
,

364 
u32
 
s£t
, 
u8
 *
d©a
);

365 
©h9k_htc_gë_ë_s£t_cou¡
(
õì80211_hw
 *
hw
,

366 
õì80211_vif
 *
vif
, 
s£t
);

367 
©h9k_htc_gë_ë_°©s
(
õì80211_hw
 *
hw
,

368 
õì80211_vif
 *
vif
,

369 
ëhtoﬁ_°©s
 *
°©s
, 
u64
 *
d©a
);

372 
	#TX_STAT_INC
(
c
Ëdÿ{ } 0)

	)

373 
	#TX_STAT_ADD
(
c
, 
a
Ëdÿ{ } 0)

	)

374 
	#RX_STAT_INC
(
c
Ëdÿ{ } 0)

	)

375 
	#RX_STAT_ADD
(
c
, 
a
Ëdÿ{ } 0)

	)

376 
	#CAB_STAT_INC
 dÿ{ } 0)

	)

378 
	#TX_QSTAT_INC
(
c
Ëdÿ{ } 0)

	)

380 
ölöe
 
	$©h9k_htc_îr_°©_rx
(
©h9k_htc_¥iv
 *
¥iv
,

381 
©h_rx_°©us
 *
rs
)

383 
	}
}

387 
	#ATH_LED_PIN_DEF
 1

	)

388 
	#ATH_LED_PIN_9287
 10

	)

389 
	#ATH_LED_PIN_9271
 15

	)

390 
	#ATH_LED_PIN_7010
 12

	)

392 
	#BSTUCK_THRESHOLD
 10

	)

398 
	#DEFAULT_SWBA_RESPONSE
 40

	)

399 
	#MIN_SWBA_RESPONSE
 10

	)

401 
	shtc_bóc⁄
 {

403 
	mOK
,

404 
	mUPDATE
,

405 
	mCOMMIT


406 } 
	mupd©e¶Ÿ
;

408 
õì80211_vif
 *
	mb¶Ÿ
[
ATH9K_HTC_MAX_BCN_VIF
];

409 
u32
 
	mbmiss˙t
;

410 
u32
 
	mbóc⁄q
;

411 
	m¶Ÿtime
;

412 
	m¶Ÿupd©e
;

415 
	s©h_btc€x
 {

416 
u32
 
	mbt_¥i‹ôy_˙t
;

417 
	mbt_¥i‹ôy_time
;

418 
	mbt_°omp_ty≥
;

419 
u32
 
	mbtc€x_no_°omp
;

420 
u32
 
	mbtc€x_≥riod
;

421 
u32
 
	mbtsˇn_no_°omp
;

424 #ifde‡
CPTCFG_ATH9K_BTCOEX_SUPPORT


425 
©h9k_htc_öô_btc€x
(
©h9k_htc_¥iv
 *
¥iv
, *
¥odu˘
);

426 
©h9k_htc_°¨t_btc€x
(
©h9k_htc_¥iv
 *
¥iv
);

427 
©h9k_htc_°›_btc€x
(
©h9k_htc_¥iv
 *
¥iv
);

429 
ölöe
 
	$©h9k_htc_öô_btc€x
(
©h9k_htc_¥iv
 *
¥iv
, *
¥odu˘
)

431 
	}
}

432 
ölöe
 
	$©h9k_htc_°¨t_btc€x
(
©h9k_htc_¥iv
 *
¥iv
)

434 
	}
}

435 
ölöe
 
	$©h9k_htc_°›_btc€x
(
©h9k_htc_¥iv
 *
¥iv
)

437 
	}
}

440 
	#OP_BT_PRIORITY_DETECTED
 
	`BIT
(3)

	)

441 
	#OP_BT_SCAN
 
	`BIT
(4)

	)

442 
	#OP_TSF_RESET
 
	`BIT
(6)

	)

444 
	s©h9k_htc_¥iv
 {

445 
devi˚
 *
	mdev
;

446 
õì80211_hw
 *
	mhw
;

447 
©h_hw
 *
	mah
;

448 
htc_èrgë
 *
	mhtc
;

449 
wmi
 *
	mwmi
;

451 
u16
 
	mfw_vîsi⁄_maj‹
;

452 
u16
 
	mfw_vîsi⁄_mö‹
;

454 
htc_ídpoöt_id
 
	mwmi_cmd_ï
;

455 
htc_ídpoöt_id
 
	mbóc⁄_ï
;

456 
htc_ídpoöt_id
 
	mˇb_ï
;

457 
htc_ídpoöt_id
 
	mu≠sd_ï
;

458 
htc_ídpoöt_id
 
	mmgmt_ï
;

459 
htc_ídpoöt_id
 
	md©a_be_ï
;

460 
htc_ídpoöt_id
 
	md©a_bk_ï
;

461 
htc_ídpoöt_id
 
	md©a_vi_ï
;

462 
htc_ídpoöt_id
 
	md©a_vo_ï
;

464 
u8
 
	mvif_¶Ÿ
;

465 
u8
 
	mm⁄_vif_idx
;

466 
u8
 
	m°a_¶Ÿ
;

467 
u8
 
	mvif_°a_pos
[
ATH9K_HTC_MAX_VIF
];

468 
u8
 
	mnum_ibss_vif
;

469 
u8
 
	mnum_mbss_vif
;

470 
u8
 
	mnum_°a_vif
;

471 
u8
 
	mnum_°a_assoc_vif
;

472 
u8
 
	mnum_≠_vif
;

474 
u16
 
	mcuπxpow
;

475 
u16
 
	mtxpowlimô
;

476 
u16
 
	mnvifs
;

477 
u16
 
	mn°©i⁄s
;

478 
boﬁ
 
	mª¨m_™i
;

479 
boﬁ
 
	mªc⁄fig_bóc⁄
;

480 
	mrxfûãr
;

481 
	m›_Êags
;

483 
©h9k_hw_ˇl_d©a
 
	mˇld©a
;

485 
•ölock_t
 
	mbóc⁄_lock
;

486 
©h_bóc⁄_c⁄fig
 
	mcur_bóc⁄_c⁄f
;

487 
htc_bóc⁄
 
	mbóc⁄
;

489 
©h9k_htc_rx
 
	mrx
;

490 
©h9k_htc_tx
 
	mtx
;

492 
èskÀt_°ru˘
 
	mswba_èskÀt
;

493 
èskÀt_°ru˘
 
	mrx_èskÀt
;

494 
dñayed_w‹k
 
	m™i_w‹k
;

495 
èskÀt_°ru˘
 
	mtx_Áûed_èskÀt
;

496 
w‹k_°ru˘
 
	mps_w‹k
;

497 
w‹k_°ru˘
 
	mÁèl_w‹k
;

499 
muãx
 
	mhtc_pm_lock
;

500 
	mps_u£cou¡
;

501 
boﬁ
 
	mps_íabÀd
;

502 
boﬁ
 
	mps_idÀ
;

504 #ifde‡
CPTCFG_MAC80211_LEDS


505 
Àd_brighäess
 
	mbrighäess
;

506 
boﬁ
 
	mÀd_ªgi°îed
;

507 
	mÀd_«me
[32];

508 
Àd_˛assdev
 
	mÀd_cdev
;

509 
w‹k_°ru˘
 
	mÀd_w‹k
;

512 
	mˇbq
;

513 
	mhwq_m≠
[
IEEE80211_NUM_ACS
];

515 #ifde‡
CPTCFG_ATH9K_BTCOEX_SUPPORT


516 
©h_btc€x
 
	mbtc€x
;

519 
dñayed_w‹k
 
	mc€x_≥riod_w‹k
;

520 
dñayed_w‹k
 
	mduty_cy˛e_w‹k
;

521 #ifde‡
CPTCFG_ATH9K_HTC_DEBUGFS


522 
©h9k_debug
 
	mdebug
;

524 
muãx
 
	mmuãx
;

527 
ölöe
 
	$©h_ªad_ˇchesize
(
©h_comm⁄
 *
comm⁄
, *
csz
)

529 
comm⁄
->
bus_›s
->
	`ªad_ˇchesize
(comm⁄, 
csz
);

530 
	}
}

532 
©h9k_htc_ª£t
(
©h9k_htc_¥iv
 *
¥iv
);

534 
©h9k_htc_assign_b¶Ÿ
(
©h9k_htc_¥iv
 *
¥iv
,

535 
õì80211_vif
 *
vif
);

536 
©h9k_htc_ªmove_b¶Ÿ
(
©h9k_htc_¥iv
 *
¥iv
,

537 
õì80211_vif
 *
vif
);

538 
©h9k_htc_£t_tsÁdju°
(
©h9k_htc_¥iv
 *
¥iv
,

539 
õì80211_vif
 *
vif
);

540 
©h9k_htc_bóc⁄q_c⁄fig
(
©h9k_htc_¥iv
 *
¥iv
);

541 
©h9k_htc_bóc⁄_c⁄fig
(
©h9k_htc_¥iv
 *
¥iv
,

542 
õì80211_vif
 *
vif
);

543 
©h9k_htc_bóc⁄_ªc⁄fig
(
©h9k_htc_¥iv
 *
¥iv
);

544 
©h9k_htc_swba
(
©h9k_htc_¥iv
 *
¥iv
,

545 
wmi_evít_swba
 *
swba
);

547 
©h9k_htc_rxï
(*
¥iv
, 
sk_buff
 *
skb
,

548 
htc_ídpoöt_id
 
ï_id
);

549 
©h9k_htc_txï
(*
¥iv
, 
sk_buff
 *
skb
, 
htc_ídpoöt_id
 
ï_id
,

550 
boﬁ
 
txok
);

551 
©h9k_htc_bóc⁄ï
(*
drv_¥iv
, 
sk_buff
 *
skb
,

552 
htc_ídpoöt_id
 
ï_id
, 
boﬁ
 
txok
);

554 
©h9k_htc_upd©e_ˇp_èrgë
(
©h9k_htc_¥iv
 *
¥iv
,

555 
u8
 
íabÀ_c€x
);

556 
©h9k_htc_™i_w‹k
(
w‹k_°ru˘
 *
w‹k
);

557 
©h9k_htc_°¨t_™i
(
©h9k_htc_¥iv
 *
¥iv
);

558 
©h9k_htc_°›_™i
(
©h9k_htc_¥iv
 *
¥iv
);

560 
©h9k_tx_öô
(
©h9k_htc_¥iv
 *
¥iv
);

561 
©h9k_htc_tx_°¨t
(
©h9k_htc_¥iv
 *
¥iv
,

562 
õì80211_°a
 *
°a
,

563 
sk_buff
 *
skb
, 
u8
 
¶Ÿ
, 
boﬁ
 
is_ˇb
);

564 
©h9k_tx_˛ónup
(
©h9k_htc_¥iv
 *
¥iv
);

565 
boﬁ
 
©h9k_htc_txq_£tup
(
©h9k_htc_¥iv
 *
¥iv
, 
subty≥
);

566 
©h9k_htc_ˇbq_£tup
(
©h9k_htc_¥iv
 *
¥iv
);

567 
gë_hw_qnum
(
u16
 
queue
, *
hwq_m≠
);

568 
©h_htc_txq_upd©e
(
©h9k_htc_¥iv
 *
¥iv
, 
qnum
,

569 
©h9k_tx_queue_öfo
 *
qöfo
);

570 
©h9k_htc_check_°›_queues
(
©h9k_htc_¥iv
 *
¥iv
);

571 
©h9k_htc_check_wake_queues
(
©h9k_htc_¥iv
 *
¥iv
);

572 
©h9k_htc_tx_gë_¶Ÿ
(
©h9k_htc_¥iv
 *
¥iv
);

573 
©h9k_htc_tx_˛ór_¶Ÿ
(
©h9k_htc_¥iv
 *
¥iv
, 
¶Ÿ
);

574 
©h9k_htc_tx_døö
(
©h9k_htc_¥iv
 *
¥iv
);

575 
©h9k_htc_tx°©us
(
©h9k_htc_¥iv
 *
¥iv
, *
wmi_evít
);

576 
©h9k_tx_Áûed_èskÀt
(
d©a
);

577 
©h9k_htc_tx_˛ónup_timî
(
d©a
);

579 
©h9k_rx_öô
(
©h9k_htc_¥iv
 *
¥iv
);

580 
©h9k_rx_˛ónup
(
©h9k_htc_¥iv
 *
¥iv
);

581 
©h9k_ho°_rx_öô
(
©h9k_htc_¥iv
 *
¥iv
);

582 
©h9k_rx_èskÀt
(
d©a
);

583 
u32
 
©h9k_htc_ˇl¸xfûãr
(
©h9k_htc_¥iv
 *
¥iv
);

585 
©h9k_htc_ps_wakeup
(
©h9k_htc_¥iv
 *
¥iv
);

586 
©h9k_htc_ps_ª°‹e
(
©h9k_htc_¥iv
 *
¥iv
);

587 
©h9k_ps_w‹k
(
w‹k_°ru˘
 *
w‹k
);

588 
boﬁ
 
©h9k_htc_£çowî
(
©h9k_htc_¥iv
 *
¥iv
,

589 
©h9k_powî_mode
 
mode
);

591 
©h9k_°¨t_rfkûl_pﬁl
(
©h9k_htc_¥iv
 *
¥iv
);

592 
©h9k_htc_rfkûl_pﬁl_°©e
(
õì80211_hw
 *
hw
);

594 
ba£_ìp_hódî
 *
©h9k_htc_gë_ì¥om_ba£
(
©h9k_htc_¥iv
 *
¥iv
);

596 #ifde‡
CPTCFG_MAC80211_LEDS


597 
©h9k_c⁄figuª_Àds
(
©h9k_htc_¥iv
 *
¥iv
);

598 
©h9k_öô_Àds
(
©h9k_htc_¥iv
 *
¥iv
);

599 
©h9k_deöô_Àds
(
©h9k_htc_¥iv
 *
¥iv
);

600 
©h9k_Àd_w‹k
(
w‹k_°ru˘
 *
w‹k
);

602 
ölöe
 
	$©h9k_c⁄figuª_Àds
(
©h9k_htc_¥iv
 *
¥iv
)

604 
	}
}

606 
ölöe
 
	$©h9k_öô_Àds
(
©h9k_htc_¥iv
 *
¥iv
)

608 
	}
}

610 
ölöe
 
	$©h9k_deöô_Àds
(
©h9k_htc_¥iv
 *
¥iv
)

612 
	}
}

614 
ölöe
 
	$©h9k_Àd_w‹k
(
w‹k_°ru˘
 *
w‹k
)

616 
	}
}

619 
©h9k_htc_¥obe_devi˚
(
htc_èrgë
 *
htc_h™dÀ
, 
devi˚
 *
dev
,

620 
u16
 
devid
, *
¥odu˘
, 
u32
 
drv_öfo
);

621 
©h9k_htc_disc⁄√˘_devi˚
(
htc_èrgë
 *
htc_h™dÀ
, 
boﬁ
 
hŸu≈lug
);

622 #ifde‡
CONFIG_PM


623 
©h9k_htc_su•íd
(
htc_èrgë
 *
htc_h™dÀ
);

624 
©h9k_htc_ªsume
(
htc_èrgë
 *
htc_h™dÀ
);

626 #ifde‡
CPTCFG_ATH9K_HTC_DEBUGFS


627 
©h9k_htc_öô_debug
(
©h_hw
 *
ah
);

629 
ölöe
 
	$©h9k_htc_öô_debug
(
©h_hw
 *
ah
Ë{  0; 
	}
};

	@htc_drv_beacon.c

17 
	~"htc.h
"

19 
	#FUDGE
 2

	)

21 
	$©h9k_htc_bóc⁄q_c⁄fig
(
©h9k_htc_¥iv
 *
¥iv
)

23 
©h_hw
 *
ah
 = 
¥iv
->ah;

24 
©h9k_tx_queue_öfo
 
qi
, 
qi_be
;

26 
	`mem£t
(&
qi
, 0, (
©h9k_tx_queue_öfo
));

27 
	`mem£t
(&
qi_be
, 0, (
©h9k_tx_queue_öfo
));

29 
	`©h9k_hw_gë_txq_¥›s
(
ah
, 
¥iv
->
bóc⁄
.
bóc⁄q
, &
qi
);

31 i‡(
¥iv
->
ah
->
›mode
 =
NL80211_IFTYPE_AP
 ||

32 
¥iv
->
ah
->
›mode
 =
NL80211_IFTYPE_MESH_POINT
) {

33 
qi
.
tqi_aifs
 = 1;

34 
qi
.
tqi_cwmö
 = 0;

35 
qi
.
tqi_cwmax
 = 0;

36 } i‡(
¥iv
->
ah
->
›mode
 =
NL80211_IFTYPE_ADHOC
) {

37 
qnum
 = 
¥iv
->
hwq_m≠
[
IEEE80211_AC_BE
];

39 
	`©h9k_hw_gë_txq_¥›s
(
ah
, 
qnum
, &
qi_be
);

41 
qi
.
tqi_aifs
 = 
qi_be
.tqi_aifs;

48 i‡(
ah
->
¶Ÿtime
 =
ATH9K_SLOT_TIME_20
)

49 
qi
.
tqi_cwmö
 = 2*
qi_be
.tqi_cwmin;

51 
qi
.
tqi_cwmö
 = 4*
qi_be
.tqi_cwmin;

53 
qi
.
tqi_cwmax
 = 
qi_be
.tqi_cwmax;

57 i‡(!
	`©h9k_hw_£t_txq_¥›s
(
ah
, 
¥iv
->
bóc⁄
.
bóc⁄q
, &
qi
)) {

58 
	`©h_îr
(
	`©h9k_hw_comm⁄
(
ah
),

59 "U«bÀÅÿupd©êbóc⁄ queuê%u!\n", 
¥iv
->
bóc⁄
.
bóc⁄q
);

61 
	`©h9k_hw_ª£âxqueue
(
ah
, 
¥iv
->
bóc⁄
.
bóc⁄q
);

63 
	}
}

68 
	$©h9k_htc_bóc⁄_öô
(
©h9k_htc_¥iv
 *
¥iv
,

69 
©h_bóc⁄_c⁄fig
 *
c⁄f
,

70 
boﬁ
 
ª£t_tsf
)

72 
©h_hw
 *
ah
 = 
¥iv
->ah;

73 
ªt
 
	`__©åibuã__
 ((
unu£d
));

74 
__be32
 
htc_imask
 = 0;

75 
u8
 
cmd_r•
;

77 i‡(
c⁄f
->
ötvÆ
 >
	`TU_TO_USEC
(
DEFAULT_SWBA_RESPONSE
))

78 
ah
->
c⁄fig
.
sw_bóc⁄_ª•⁄£_time
 = 
DEFAULT_SWBA_RESPONSE
;

80 
ah
->
c⁄fig
.
sw_bóc⁄_ª•⁄£_time
 = 
MIN_SWBA_RESPONSE
;

82 
	`WMI_CMD
(
WMI_DISABLE_INTR_CMDID
);

83 i‡(
ª£t_tsf
)

84 
	`©h9k_hw_ª£t_tsf
(
ah
);

85 
	`©h9k_htc_bóc⁄q_c⁄fig
(
¥iv
);

86 
	`©h9k_hw_bóc⁄öô
(
ah
, 
c⁄f
->
√xâbâ
, c⁄f->
ötvÆ
);

87 
¥iv
->
bóc⁄
.
bmiss˙t
 = 0;

88 
htc_imask
 = 
	`˝u_to_be32
(
ah
->
imask
);

89 
	`WMI_CMD_BUF
(
WMI_ENABLE_INTR_CMDID
, &
htc_imask
);

90 
	}
}

92 
	$©h9k_htc_bóc⁄_c⁄fig_°a
(
©h9k_htc_¥iv
 *
¥iv
,

93 
©h_bóc⁄_c⁄fig
 *
bss_c⁄f
)

95 
©h9k_bóc⁄_°©e
 
bs
;

96 
©h9k_öt
 
imask
 = 0;

97 
__be32
 
htc_imask
 = 0;

98 
ªt
 
	`__©åibuã__
 ((
unu£d
));

99 
u8
 
cmd_r•
;

101 i‡(
	`©h9k_cmn_bóc⁄_c⁄fig_°a
(
¥iv
->
ah
, 
bss_c⁄f
, &
bs
Ë=-
EPERM
)

104 
	`WMI_CMD
(
WMI_DISABLE_INTR_CMDID
);

105 
	`©h9k_hw_£t_°a_bóc⁄_timîs
(
¥iv
->
ah
, &
bs
);

106 
imask
 |
ATH9K_INT_BMISS
;

107 
htc_imask
 = 
	`˝u_to_be32
(
imask
);

108 
	`WMI_CMD_BUF
(
WMI_ENABLE_INTR_CMDID
, &
htc_imask
);

109 
	}
}

111 
	$©h9k_htc_bóc⁄_c⁄fig_≠
(
©h9k_htc_¥iv
 *
¥iv
,

112 
©h_bóc⁄_c⁄fig
 *
c⁄f
)

114 
©h_hw
 *
ah
 = 
¥iv
->ah;

115 
ah
->
imask
 = 0;

117 
	`©h9k_cmn_bóc⁄_c⁄fig_≠
(
ah
, 
c⁄f
, 
ATH9K_HTC_MAX_BCN_VIF
);

118 
	`©h9k_htc_bóc⁄_öô
(
¥iv
, 
c⁄f
, 
Ál£
);

119 
	}
}

121 
	$©h9k_htc_bóc⁄_c⁄fig_adhoc
(
©h9k_htc_¥iv
 *
¥iv
,

122 
©h_bóc⁄_c⁄fig
 *
c⁄f
)

124 
©h_hw
 *
ah
 = 
¥iv
->ah;

125 
ah
->
imask
 = 0;

127 
	`©h9k_cmn_bóc⁄_c⁄fig_adhoc
(
ah
, 
c⁄f
);

128 
	`©h9k_htc_bóc⁄_öô
(
¥iv
, 
c⁄f
, c⁄f->
ibss_¸ót‹
);

129 
	}
}

131 
	$©h9k_htc_bóc⁄ï
(*
drv_¥iv
, 
sk_buff
 *
skb
,

132 
htc_ídpoöt_id
 
ï_id
, 
boﬁ
 
txok
)

134 
	`dev_k‰ì_skb_™y
(
skb
);

135 
	}
}

137 
	$©h9k_htc_£nd_buf„ªd
(
©h9k_htc_¥iv
 *
¥iv
,

138 
¶Ÿ
)

140 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

141 
õì80211_vif
 *
vif
;

142 
sk_buff
 *
skb
;

143 
õì80211_hdr
 *
hdr
;

144 
∑dpos
, 
∑dsize
, 
ªt
, 
tx_¶Ÿ
;

146 
	`•ö_lock_bh
(&
¥iv
->
bóc⁄_lock
);

148 
vif
 = 
¥iv
->
bóc⁄
.
b¶Ÿ
[
¶Ÿ
];

150 
skb
 = 
	`õì80211_gë_buf„ªd_bc
(
¥iv
->
hw
, 
vif
);

152 
skb
) {

153 
hdr
 = (
õì80211_hdr
 *Ë
skb
->
d©a
;

155 
∑dpos
 = 
	`õì80211_hdæí
(
hdr
->
‰ame_c⁄åﬁ
);

156 
∑dsize
 = 
∑dpos
 & 3;

157 i‡(
∑dsize
 && 
skb
->
Àn
 > 
∑dpos
) {

158 i‡(
	`skb_hódroom
(
skb
Ë< 
∑dsize
) {

159 
	`dev_k‰ì_skb_™y
(
skb
);

160 
√xt
;

162 
	`skb_push
(
skb
, 
∑dsize
);

163 
	`memmove
(
skb
->
d©a
, skb->d©®+ 
∑dsize
, 
∑dpos
);

166 
tx_¶Ÿ
 = 
	`©h9k_htc_tx_gë_¶Ÿ
(
¥iv
);

167 i‡(
tx_¶Ÿ
 < 0) {

168 
	`©h_dbg
(
comm⁄
, 
XMIT
, "No free CAB slot\n");

169 
	`dev_k‰ì_skb_™y
(
skb
);

170 
√xt
;

173 
ªt
 = 
	`©h9k_htc_tx_°¨t
(
¥iv
, 
NULL
, 
skb
, 
tx_¶Ÿ
, 
åue
);

174 i‡(
ªt
 != 0) {

175 
	`©h9k_htc_tx_˛ór_¶Ÿ
(
¥iv
, 
tx_¶Ÿ
);

176 
	`dev_k‰ì_skb_™y
(
skb
);

178 
	`©h_dbg
(
comm⁄
, 
XMIT
, "FailedÅo send CAB frame\n");

180 
	`•ö_lock_bh
(&
¥iv
->
tx
.
tx_lock
);

181 
¥iv
->
tx
.
queued_˙t
++;

182 
	`•ö_u∆ock_bh
(&
¥iv
->
tx
.
tx_lock
);

184 
√xt
:

185 
skb
 = 
	`õì80211_gë_buf„ªd_bc
(
¥iv
->
hw
, 
vif
);

188 
	`•ö_u∆ock_bh
(&
¥iv
->
bóc⁄_lock
);

189 
	}
}

191 
	$©h9k_htc_£nd_bóc⁄
(
©h9k_htc_¥iv
 *
¥iv
,

192 
¶Ÿ
)

194 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

195 
õì80211_vif
 *
vif
;

196 
©h9k_htc_vif
 *
avp
;

197 
tx_bóc⁄_hódî
 
bóc⁄_hdr
;

198 
©h9k_htc_tx_˘l
 *
tx_˘l
;

199 
õì80211_tx_öfo
 *
öfo
;

200 
õì80211_mgmt
 *
mgmt
;

201 
sk_buff
 *
bóc⁄
;

202 
u8
 *
tx_fhdr
;

203 
ªt
;

205 
	`mem£t
(&
bóc⁄_hdr
, 0, (
tx_bóc⁄_hódî
));

207 
	`•ö_lock_bh
(&
¥iv
->
bóc⁄_lock
);

209 
vif
 = 
¥iv
->
bóc⁄
.
b¶Ÿ
[
¶Ÿ
];

210 
avp
 = (
©h9k_htc_vif
 *)
vif
->
drv_¥iv
;

212 i‡(
	`u∆ikñy
(
	`ã°_bô
(
ATH_OP_SCANNING
, &
comm⁄
->
›_Êags
))) {

213 
	`•ö_u∆ock_bh
(&
¥iv
->
bóc⁄_lock
);

218 
bóc⁄
 = 
	`õì80211_bóc⁄_gë
(
¥iv
->
hw
, 
vif
);

219 i‡(!
bóc⁄
) {

220 
	`•ö_u∆ock_bh
(&
¥iv
->
bóc⁄_lock
);

228 
mgmt
 = (
õì80211_mgmt
 *)
bóc⁄
->
d©a
;

229 
mgmt
->
u
.
bóc⁄
.
time°amp
 = 
avp
->
tsÁdju°
;

231 
öfo
 = 
	`IEEE80211_SKB_CB
(
bóc⁄
);

232 i‡(
öfo
->
Êags
 & 
IEEE80211_TX_CTL_ASSIGN_SEQ
) {

233 
õì80211_hdr
 *
hdr
 =

234 (
õì80211_hdr
 *Ë
bóc⁄
->
d©a
;

235 
avp
->
£q_no
 += 0x10;

236 
hdr
->
£q_˘æ
 &
	`˝u_to_À16
(
IEEE80211_SCTL_FRAG
);

237 
hdr
->
£q_˘æ
 |
	`˝u_to_À16
(
avp
->
£q_no
);

240 
tx_˘l
 = 
	`HTC_SKB_CB
(
bóc⁄
);

241 
	`mem£t
(
tx_˘l
, 0, (*tx_ctl));

243 
tx_˘l
->
ty≥
 = 
ATH9K_HTC_BEACON
;

244 
tx_˘l
->
ïid
 = 
¥iv
->
bóc⁄_ï
;

246 
bóc⁄_hdr
.
vif_ödex
 = 
avp
->
ödex
;

247 
tx_fhdr
 = 
	`skb_push
(
bóc⁄
, (
bóc⁄_hdr
));

248 
	`mem˝y
(
tx_fhdr
, (
u8
 *Ë&
bóc⁄_hdr
, (beacon_hdr));

250 
ªt
 = 
	`htc_£nd
(
¥iv
->
htc
, 
bóc⁄
);

251 i‡(
ªt
 != 0) {

252 i‡(
ªt
 =-
ENOMEM
) {

253 
	`©h_dbg
(
comm⁄
, 
BSTUCK
,

256 
	`dev_k‰ì_skb_™y
(
bóc⁄
);

259 
	`•ö_u∆ock_bh
(&
¥iv
->
bóc⁄_lock
);

260 
	}
}

262 
	$©h9k_htc_choo£_b¶Ÿ
(
©h9k_htc_¥iv
 *
¥iv
,

263 
wmi_evít_swba
 *
swba
)

265 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

266 
u64
 
tsf
;

267 
u32
 
ts·u
;

268 
u16
 
ötvÆ
;

269 
¶Ÿ
;

271 
ötvÆ
 = 
¥iv
->
cur_bóc⁄_c⁄f
.
bóc⁄_öãrvÆ
;

273 
tsf
 = 
	`be64_to_˝u
(
swba
->tsf);

274 
ts·u
 = 
	`TSF_TO_TU
(
tsf
 >> 32,Åsf);

275 
¶Ÿ
 = ((
ts·u
 % 
ötvÆ
Ë* 
ATH9K_HTC_MAX_BCN_VIF
) / intval;

276 
¶Ÿ
 = 
ATH9K_HTC_MAX_BCN_VIF
 - slot - 1;

278 
	`©h_dbg
(
comm⁄
, 
BEACON
,

280 
¶Ÿ
, 
tsf
, 
ts·u
, 
ötvÆ
);

282  
¶Ÿ
;

283 
	}
}

285 
	$©h9k_htc_swba
(
©h9k_htc_¥iv
 *
¥iv
,

286 
wmi_evít_swba
 *
swba
)

288 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

289 
¶Ÿ
;

291 i‡(
swba
->
bóc⁄_≥ndög
 != 0) {

292 
¥iv
->
bóc⁄
.
bmiss˙t
++;

293 i‡(
¥iv
->
bóc⁄
.
bmiss˙t
 > 
BSTUCK_THRESHOLD
) {

294 
	`©h_dbg
(
comm⁄
, 
BSTUCK
, "Beacon stuck, HWÑeset\n");

295 
	`õì80211_queue_w‹k
(
¥iv
->
hw
,

296 &
¥iv
->
Áèl_w‹k
);

301 i‡(
¥iv
->
bóc⁄
.
bmiss˙t
) {

302 
	`©h_dbg
(
comm⁄
, 
BSTUCK
,

304 
¥iv
->
bóc⁄
.
bmiss˙t
);

305 
¥iv
->
bóc⁄
.
bmiss˙t
 = 0;

308 
¶Ÿ
 = 
	`©h9k_htc_choo£_b¶Ÿ
(
¥iv
, 
swba
);

309 
	`•ö_lock_bh
(&
¥iv
->
bóc⁄_lock
);

310 i‡(
¥iv
->
bóc⁄
.
b¶Ÿ
[
¶Ÿ
] =
NULL
) {

311 
	`•ö_u∆ock_bh
(&
¥iv
->
bóc⁄_lock
);

314 
	`•ö_u∆ock_bh
(&
¥iv
->
bóc⁄_lock
);

316 
	`©h9k_htc_£nd_buf„ªd
(
¥iv
, 
¶Ÿ
);

317 
	`©h9k_htc_£nd_bóc⁄
(
¥iv
, 
¶Ÿ
);

318 
	}
}

320 
	$©h9k_htc_assign_b¶Ÿ
(
©h9k_htc_¥iv
 *
¥iv
,

321 
õì80211_vif
 *
vif
)

323 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

324 
©h9k_htc_vif
 *
avp
 = (©h9k_htc_vi‡*)
vif
->
drv_¥iv
;

325 
i
 = 0;

327 
	`•ö_lock_bh
(&
¥iv
->
bóc⁄_lock
);

328 
i
 = 0; i < 
ATH9K_HTC_MAX_BCN_VIF
; i++) {

329 i‡(
¥iv
->
bóc⁄
.
b¶Ÿ
[
i
] =
NULL
) {

330 
avp
->
b¶Ÿ
 = 
i
;

335 
¥iv
->
bóc⁄
.
b¶Ÿ
[
avp
->b¶Ÿ] = 
vif
;

336 
	`•ö_u∆ock_bh
(&
¥iv
->
bóc⁄_lock
);

338 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "Added interfaceát beacon slot: %d\n",

339 
avp
->
b¶Ÿ
);

340 
	}
}

342 
	$©h9k_htc_ªmove_b¶Ÿ
(
©h9k_htc_¥iv
 *
¥iv
,

343 
õì80211_vif
 *
vif
)

345 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

346 
©h9k_htc_vif
 *
avp
 = (©h9k_htc_vi‡*)
vif
->
drv_¥iv
;

348 
	`•ö_lock_bh
(&
¥iv
->
bóc⁄_lock
);

349 
¥iv
->
bóc⁄
.
b¶Ÿ
[
avp
->b¶Ÿ] = 
NULL
;

350 
	`•ö_u∆ock_bh
(&
¥iv
->
bóc⁄_lock
);

352 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "Removed interfaceát beacon slot: %d\n",

353 
avp
->
b¶Ÿ
);

354 
	}
}

360 
	$©h9k_htc_£t_tsÁdju°
(
©h9k_htc_¥iv
 *
¥iv
,

361 
õì80211_vif
 *
vif
)

363 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

364 
©h9k_htc_vif
 *
avp
 = (©h9k_htc_vi‡*)
vif
->
drv_¥iv
;

365 
©h_bóc⁄_c⁄fig
 *
cur_c⁄f
 = &
¥iv
->
cur_bóc⁄_c⁄f
;

366 
u64
 
tsÁdju°
;

368 i‡(
avp
->
b¶Ÿ
 == 0)

376 
tsÁdju°
 = 
cur_c⁄f
->
bóc⁄_öãrvÆ
 * 
avp
->
b¶Ÿ
 / 
ATH9K_HTC_MAX_BCN_VIF
;

377 
avp
->
tsÁdju°
 = 
	`˝u_to_À64
(
	`TU_TO_USEC
(tsfadjust));

379 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "tsfadjust is: %llu for bslot: %d\n",

380 ()
tsÁdju°
, 
avp
->
b¶Ÿ
);

381 
	}
}

383 
	$©h9k_htc_bóc⁄_ôî
(*
d©a
, 
u8
 *
mac
, 
õì80211_vif
 *
vif
)

385 
boﬁ
 *
bóc⁄_c⁄figuªd
 = (boﬁ *)
d©a
;

386 
©h9k_htc_vif
 *
avp
 = (©h9k_htc_vi‡*Ë
vif
->
drv_¥iv
;

388 i‡(
vif
->
ty≥
 =
NL80211_IFTYPE_STATION
 &&

389 
avp
->
bóc⁄_c⁄figuªd
)

390 *
bóc⁄_c⁄figuªd
 = 
åue
;

391 
	}
}

393 
boﬁ
 
	$©h9k_htc_check_bóc⁄_c⁄fig
(
©h9k_htc_¥iv
 *
¥iv
,

394 
õì80211_vif
 *
vif
)

396 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

397 
©h_bóc⁄_c⁄fig
 *
cur_c⁄f
 = &
¥iv
->
cur_bóc⁄_c⁄f
;

398 
õì80211_bss_c⁄f
 *
bss_c⁄f
 = &
vif
->bss_conf;

399 
boﬁ
 
bóc⁄_c⁄figuªd
;

406 i‡((
¥iv
->
ah
->
›mode
 =
NL80211_IFTYPE_AP
) &&

407 (
¥iv
->
num_≠_vif
 > 1) &&

408 (
vif
->
ty≥
 =
NL80211_IFTYPE_AP
) &&

409 (
cur_c⁄f
->
bóc⁄_öãrvÆ
 !
bss_c⁄f
->
bóc⁄_öt
)) {

410 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

412  
Ál£
;

419 i‡(
¥iv
->
num_≠_vif
 &&

420 (
vif
->
ty≥
 !
NL80211_IFTYPE_AP
)) {

421 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

423  
Ál£
;

430 i‡((
¥iv
->
ah
->
›mode
 =
NL80211_IFTYPE_STATION
) &&

431 (
¥iv
->
num_°a_vif
 > 1) &&

432 (
vif
->
ty≥
 =
NL80211_IFTYPE_STATION
)) {

433 
bóc⁄_c⁄figuªd
 = 
Ál£
;

434 
	`õì80211_ôî©e_a˘ive_öãrÁ˚s_©omic
(

435 
¥iv
->
hw
, 
IEEE80211_IFACE_ITER_RESUME_ALL
,

436 
©h9k_htc_bóc⁄_ôî
, &
bóc⁄_c⁄figuªd
);

438 i‡(
bóc⁄_c⁄figuªd
) {

439 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

441  
Ál£
;

445  
åue
;

446 
	}
}

448 
	$©h9k_htc_bóc⁄_c⁄fig
(
©h9k_htc_¥iv
 *
¥iv
,

449 
õì80211_vif
 *
vif
)

451 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

452 
©h_bóc⁄_c⁄fig
 *
cur_c⁄f
 = &
¥iv
->
cur_bóc⁄_c⁄f
;

453 
õì80211_bss_c⁄f
 *
bss_c⁄f
 = &
vif
->bss_conf;

454 
©h9k_htc_vif
 *
avp
 = (©h9k_htc_vi‡*Ë
vif
->
drv_¥iv
;

456 i‡(!
	`©h9k_htc_check_bóc⁄_c⁄fig
(
¥iv
, 
vif
))

459 
cur_c⁄f
->
bóc⁄_öãrvÆ
 = 
bss_c⁄f
->
bóc⁄_öt
;

460 i‡(
cur_c⁄f
->
bóc⁄_öãrvÆ
 == 0)

461 
cur_c⁄f
->
bóc⁄_öãrvÆ
 = 100;

463 
cur_c⁄f
->
dtim_≥riod
 = 
bss_c⁄f
->dtim_period;

464 
cur_c⁄f
->
bmiss_timeout
 =

465 
ATH_DEFAULT_BMISS_LIMIT
 * 
cur_c⁄f
->
bóc⁄_öãrvÆ
;

467 
vif
->
ty≥
) {

468 
NL80211_IFTYPE_STATION
:

469 
	`©h9k_htc_bóc⁄_c⁄fig_°a
(
¥iv
, 
cur_c⁄f
);

470 
avp
->
bóc⁄_c⁄figuªd
 = 
åue
;

472 
NL80211_IFTYPE_ADHOC
:

473 
	`©h9k_htc_bóc⁄_c⁄fig_adhoc
(
¥iv
, 
cur_c⁄f
);

475 
NL80211_IFTYPE_MESH_POINT
:

476 
NL80211_IFTYPE_AP
:

477 
	`©h9k_htc_bóc⁄_c⁄fig_≠
(
¥iv
, 
cur_c⁄f
);

480 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "Unsupported beaconing mode\n");

483 
	}
}

485 
	$©h9k_htc_bóc⁄_ªc⁄fig
(
©h9k_htc_¥iv
 *
¥iv
)

487 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

488 
©h_bóc⁄_c⁄fig
 *
cur_c⁄f
 = &
¥iv
->
cur_bóc⁄_c⁄f
;

490 
¥iv
->
ah
->
›mode
) {

491 
NL80211_IFTYPE_STATION
:

492 
	`©h9k_htc_bóc⁄_c⁄fig_°a
(
¥iv
, 
cur_c⁄f
);

494 
NL80211_IFTYPE_ADHOC
:

495 
	`©h9k_htc_bóc⁄_c⁄fig_adhoc
(
¥iv
, 
cur_c⁄f
);

497 
NL80211_IFTYPE_MESH_POINT
:

498 
NL80211_IFTYPE_AP
:

499 
	`©h9k_htc_bóc⁄_c⁄fig_≠
(
¥iv
, 
cur_c⁄f
);

502 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "Unsupported beaconing mode\n");

505 
	}
}

	@htc_drv_debug.c

17 
	~"htc.h
"

19 
ssize_t
 
	$ªad_fûe_tgt_öt_°©s
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

20 
size_t
 
cou¡
, 
loff_t
 *
µos
)

22 
©h9k_htc_¥iv
 *
¥iv
 = 
fûe
->
¥iv©e_d©a
;

23 
©h9k_htc_èrgë_öt_°©s
 
cmd_r•
;

24 
buf
[512];

25 
Àn
 = 0;

26 
ªt
 = 0;

28 
	`mem£t
(&
cmd_r•
, 0, (cmd_rsp));

30 
	`©h9k_htc_ps_wakeup
(
¥iv
);

32 
	`WMI_CMD
(
WMI_INT_STATS_CMDID
);

33 i‡(
ªt
) {

34 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

35  -
EINVAL
;

38 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

40 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

42 
	`be32_to_˝u
(
cmd_r•
.
rx
));

44 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

46 
	`be32_to_˝u
(
cmd_r•
.
rx‹n
));

48 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

50 
	`be32_to_˝u
(
cmd_r•
.
rxeﬁ
));

52 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

54 
	`be32_to_˝u
(
cmd_r•
.
txu∫
));

56 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

58 
	`be32_to_˝u
(
cmd_r•
.
txto
));

60 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

62 
	`be32_to_˝u
(
cmd_r•
.
c°
));

64 i‡(
Àn
 > (
buf
))

65 
Àn
 = (
buf
);

67  
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

68 
	}
}

70 c⁄° 
fûe_›î©i⁄s
 
	gf›s_tgt_öt_°©s
 = {

71 .
ªad
 = 
ªad_fûe_tgt_öt_°©s
,

72 .
	g›í
 = 
sim∂e_›í
,

73 .
	gow√r
 = 
THIS_MODULE
,

74 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

77 
ssize_t
 
	$ªad_fûe_tgt_tx_°©s
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

78 
size_t
 
cou¡
, 
loff_t
 *
µos
)

80 
©h9k_htc_¥iv
 *
¥iv
 = 
fûe
->
¥iv©e_d©a
;

81 
©h9k_htc_èrgë_tx_°©s
 
cmd_r•
;

82 
buf
[512];

83 
Àn
 = 0;

84 
ªt
 = 0;

86 
	`mem£t
(&
cmd_r•
, 0, (cmd_rsp));

88 
	`©h9k_htc_ps_wakeup
(
¥iv
);

90 
	`WMI_CMD
(
WMI_TX_STATS_CMDID
);

91 i‡(
ªt
) {

92 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

93  -
EINVAL
;

96 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

98 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

100 
	`be32_to_˝u
(
cmd_r•
.
xªåõs
));

102 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

104 
	`be32_to_˝u
(
cmd_r•
.
fif€º
));

106 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

108 
	`be32_to_˝u
(
cmd_r•
.
fûãªd
));

110 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

112 
	`be32_to_˝u
(
cmd_r•
.
timî_exp
));

114 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

116 
	`be32_to_˝u
(
cmd_r•
.
sh‹åërõs
));

118 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

120 
	`be32_to_˝u
(
cmd_r•
.
l⁄gªåõs
));

122 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

124 
	`be32_to_˝u
(
cmd_r•
.
qnuŒ
));

126 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

128 
	`be32_to_˝u
(
cmd_r•
.
íˇp_Áû
));

130 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

132 
	`be32_to_˝u
(
cmd_r•
.
nobuf
));

134 i‡(
Àn
 > (
buf
))

135 
Àn
 = (
buf
);

137  
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

138 
	}
}

140 c⁄° 
fûe_›î©i⁄s
 
	gf›s_tgt_tx_°©s
 = {

141 .
ªad
 = 
ªad_fûe_tgt_tx_°©s
,

142 .
	g›í
 = 
sim∂e_›í
,

143 .
	gow√r
 = 
THIS_MODULE
,

144 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

147 
ssize_t
 
	$ªad_fûe_tgt_rx_°©s
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

148 
size_t
 
cou¡
, 
loff_t
 *
µos
)

150 
©h9k_htc_¥iv
 *
¥iv
 = 
fûe
->
¥iv©e_d©a
;

151 
©h9k_htc_èrgë_rx_°©s
 
cmd_r•
;

152 
buf
[512];

153 
Àn
 = 0;

154 
ªt
 = 0;

156 
	`mem£t
(&
cmd_r•
, 0, (cmd_rsp));

158 
	`©h9k_htc_ps_wakeup
(
¥iv
);

160 
	`WMI_CMD
(
WMI_RX_STATS_CMDID
);

161 i‡(
ªt
) {

162 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

163  -
EINVAL
;

166 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

168 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

170 
	`be32_to_˝u
(
cmd_r•
.
nobuf
));

172 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

174 
	`be32_to_˝u
(
cmd_r•
.
ho°_£nd
));

176 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

178 
	`be32_to_˝u
(
cmd_r•
.
ho°_d⁄e
));

180 i‡(
Àn
 > (
buf
))

181 
Àn
 = (
buf
);

183  
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

184 
	}
}

186 c⁄° 
fûe_›î©i⁄s
 
	gf›s_tgt_rx_°©s
 = {

187 .
ªad
 = 
ªad_fûe_tgt_rx_°©s
,

188 .
	g›í
 = 
sim∂e_›í
,

189 .
	gow√r
 = 
THIS_MODULE
,

190 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

193 
ssize_t
 
	$ªad_fûe_xmô
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

194 
size_t
 
cou¡
, 
loff_t
 *
µos
)

196 
©h9k_htc_¥iv
 *
¥iv
 = 
fûe
->
¥iv©e_d©a
;

197 
buf
[512];

198 
Àn
 = 0;

200 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

202 
¥iv
->
debug
.
tx_°©s
.
buf_queued
);

203 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

205 
¥iv
->
debug
.
tx_°©s
.
buf_com∂ëed
);

206 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

208 
¥iv
->
debug
.
tx_°©s
.
skb_queued
);

209 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

211 
¥iv
->
debug
.
tx_°©s
.
skb_suc˚ss
);

212 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

214 
¥iv
->
debug
.
tx_°©s
.
skb_Áûed
);

215 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

217 
¥iv
->
debug
.
tx_°©s
.
ˇb_queued
);

219 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

221 
¥iv
->
debug
.
tx_°©s
.
queue_°©s
[
IEEE80211_AC_BE
]);

222 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

224 
¥iv
->
debug
.
tx_°©s
.
queue_°©s
[
IEEE80211_AC_BK
]);

225 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

227 
¥iv
->
debug
.
tx_°©s
.
queue_°©s
[
IEEE80211_AC_VI
]);

228 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

230 
¥iv
->
debug
.
tx_°©s
.
queue_°©s
[
IEEE80211_AC_VO
]);

232 i‡(
Àn
 > (
buf
))

233 
Àn
 = (
buf
);

235  
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

236 
	}
}

238 c⁄° 
fûe_›î©i⁄s
 
	gf›s_xmô
 = {

239 .
ªad
 = 
ªad_fûe_xmô
,

240 .
	g›í
 = 
sim∂e_›í
,

241 .
	gow√r
 = 
THIS_MODULE
,

242 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

245 
	$©h9k_htc_îr_°©_rx
(
©h9k_htc_¥iv
 *
¥iv
,

246 
©h_rx_°©us
 *
rs
)

248 
	`©h9k_cmn_debug_°©_rx
(&
¥iv
->
debug
.
rx_°©s
, 
rs
);

249 
	}
}

251 
ssize_t
 
	$ªad_fûe_skb_rx
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

252 
size_t
 
cou¡
, 
loff_t
 *
µos
)

254 
©h9k_htc_¥iv
 *
¥iv
 = 
fûe
->
¥iv©e_d©a
;

255 *
buf
;

256 
Àn
 = 0, 
size
 = 1500;

257 
ssize_t
 
ªtvÆ
 = 0;

259 
buf
 = 
	`kzÆloc
(
size
, 
GFP_KERNEL
);

260 i‡(
buf
 =
NULL
)

261  -
ENOMEM
;

263 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen,

265 
¥iv
->
debug
.
skbrx_°©s
.
skb_Æloˇãd
);

266 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen,

268 
¥iv
->
debug
.
skbrx_°©s
.
skb_com∂ëed
);

269 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen,

271 
¥iv
->
debug
.
skbrx_°©s
.
skb_dr›≥d
);

273 i‡(
Àn
 > 
size
)

274 
Àn
 = 
size
;

276 
ªtvÆ
 = 
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

277 
	`k‰ì
(
buf
);

279  
ªtvÆ
;

280 
	}
}

282 c⁄° 
fûe_›î©i⁄s
 
	gf›s_skb_rx
 = {

283 .
ªad
 = 
ªad_fûe_skb_rx
,

284 .
	g›í
 = 
sim∂e_›í
,

285 .
	gow√r
 = 
THIS_MODULE
,

286 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

289 
ssize_t
 
	$ªad_fûe_¶Ÿ
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

290 
size_t
 
cou¡
, 
loff_t
 *
µos
)

292 
©h9k_htc_¥iv
 *
¥iv
 = 
fûe
->
¥iv©e_d©a
;

293 
buf
[512];

294 
Àn
 = 0;

296 
	`•ö_lock_bh
(&
¥iv
->
tx
.
tx_lock
);

298 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, "TX slot bitmap : ");

300 
Àn
 +
	`bôm≠_s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

301 
¥iv
->
tx
.
tx_¶Ÿ
, 
MAX_TX_BUF_NUM
);

303 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, "\n");

305 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen,

307 
	`bôm≠_weight
(
¥iv
->
tx
.
tx_¶Ÿ
, 
MAX_TX_BUF_NUM
));

309 
	`•ö_u∆ock_bh
(&
¥iv
->
tx
.
tx_lock
);

311 i‡(
Àn
 > (
buf
))

312 
Àn
 = (
buf
);

314  
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

315 
	}
}

317 c⁄° 
fûe_›î©i⁄s
 
	gf›s_¶Ÿ
 = {

318 .
ªad
 = 
ªad_fûe_¶Ÿ
,

319 .
	g›í
 = 
sim∂e_›í
,

320 .
	gow√r
 = 
THIS_MODULE
,

321 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

324 
ssize_t
 
	$ªad_fûe_queue
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

325 
size_t
 
cou¡
, 
loff_t
 *
µos
)

327 
©h9k_htc_¥iv
 *
¥iv
 = 
fûe
->
¥iv©e_d©a
;

328 
buf
[512];

329 
Àn
 = 0;

331 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, "%20s : %10u\n",

332 "Mgmàídpoöt", 
	`skb_queue_Àn
(&
¥iv
->
tx
.
mgmt_ï_queue
));

334 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, "%20s : %10u\n",

335 "CabÉndpoöt", 
	`skb_queue_Àn
(&
¥iv
->
tx
.
ˇb_ï_queue
));

337 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, "%20s : %10u\n",

338 "D©®BEÉndpoöt", 
	`skb_queue_Àn
(&
¥iv
->
tx
.
d©a_be_queue
));

340 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, "%20s : %10u\n",

341 "D©®BKÉndpoöt", 
	`skb_queue_Àn
(&
¥iv
->
tx
.
d©a_bk_queue
));

343 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, "%20s : %10u\n",

344 "D©®VIÉndpoöt", 
	`skb_queue_Àn
(&
¥iv
->
tx
.
d©a_vi_queue
));

346 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, "%20s : %10u\n",

347 "D©®VOÉndpoöt", 
	`skb_queue_Àn
(&
¥iv
->
tx
.
d©a_vo_queue
));

349 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, "%20s : %10u\n",

350 "Faûed queue", 
	`skb_queue_Àn
(&
¥iv
->
tx
.
tx_Áûed
));

352 
	`•ö_lock_bh
(&
¥iv
->
tx
.
tx_lock
);

353 
Àn
 +
	`s˙¥ötf
(
buf
 +Üen, (buf) -Üen, "%20s : %10u\n",

354 "Queued cou¡", 
¥iv
->
tx
.
queued_˙t
);

355 
	`•ö_u∆ock_bh
(&
¥iv
->
tx
.
tx_lock
);

357 i‡(
Àn
 > (
buf
))

358 
Àn
 = (
buf
);

360  
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

362 
	}
}

364 c⁄° 
fûe_›î©i⁄s
 
	gf›s_queue
 = {

365 .
ªad
 = 
ªad_fûe_queue
,

366 .
	g›í
 = 
sim∂e_›í
,

367 .
	gow√r
 = 
THIS_MODULE
,

368 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

371 
ssize_t
 
	$ªad_fûe_debug
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

372 
size_t
 
cou¡
, 
loff_t
 *
µos
)

374 
©h9k_htc_¥iv
 *
¥iv
 = 
fûe
->
¥iv©e_d©a
;

375 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

376 
buf
[32];

377 
Àn
;

379 
Àn
 = 
	`•rötf
(
buf
, "0x%08x\n", 
comm⁄
->
debug_mask
);

380  
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

381 
	}
}

383 
ssize_t
 
	$wrôe_fûe_debug
(
fûe
 *fûe, c⁄° 
__u£r
 *
u£r_buf
,

384 
size_t
 
cou¡
, 
loff_t
 *
µos
)

386 
©h9k_htc_¥iv
 *
¥iv
 = 
fûe
->
¥iv©e_d©a
;

387 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

388 
mask
;

389 
buf
[32];

390 
ssize_t
 
Àn
;

392 
Àn
 = 
	`mö
(
cou¡
, (
buf
) - 1);

393 i‡(
	`c›y_‰om_u£r
(
buf
, 
u£r_buf
, 
Àn
))

394  -
EFAULT
;

396 
buf
[
Àn
] = '\0';

397 i‡(
	`k°πoul
(
buf
, 0, &
mask
))

398  -
EINVAL
;

400 
comm⁄
->
debug_mask
 = 
mask
;

401  
cou¡
;

402 
	}
}

404 c⁄° 
fûe_›î©i⁄s
 
	gf›s_debug
 = {

405 .
ªad
 = 
ªad_fûe_debug
,

406 .
	gwrôe
 = 
wrôe_fûe_debug
,

407 .
	g›í
 = 
sim∂e_›í
,

408 .
	gow√r
 = 
THIS_MODULE
,

409 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

413 
	#AMKSTR
(
nm
Ë#nm "_BE", #nm "_BK", #nm "_VI", #nm "_VO"

	)

414 c⁄° 
	g©h9k_htc_g°rögs_°©s
[][
ETH_GSTRING_LEN
] = {

420 
AMKSTR
(
d_tx_pkts
),

435 
	#ATH9K_HTC_SSTATS_LEN
 
	`ARRAY_SIZE
(
©h9k_htc_g°rögs_°©s
)

	)

437 
	$©h9k_htc_gë_ë_°rögs
(
õì80211_hw
 *
hw
,

438 
õì80211_vif
 *
vif
,

439 
u32
 
s£t
, 
u8
 *
d©a
)

441 i‡(
s£t
 =
ETH_SS_STATS
)

442 
	`mem˝y
(
d©a
, *
©h9k_htc_g°rögs_°©s
,

443 (
©h9k_htc_g°rögs_°©s
));

444 
	}
}

446 
	$©h9k_htc_gë_ë_s£t_cou¡
(
õì80211_hw
 *
hw
,

447 
õì80211_vif
 *
vif
, 
s£t
)

449 i‡(
s£t
 =
ETH_SS_STATS
)

450  
ATH9K_HTC_SSTATS_LEN
;

452 
	}
}

454 
	#STXBASE
 
¥iv
->
debug
.
tx_°©s


	)

455 
	#SRXBASE
 
¥iv
->
debug
.
rx_°©s


	)

456 
	#SKBTXBASE
 
¥iv
->
debug
.
tx_°©s


	)

457 
	#SKBRXBASE
 
¥iv
->
debug
.
skbrx_°©s


	)

458 
	#ASTXQ
(
a
) \

459 
d©a
[
i
++] = 
STXBASE
.
a
[
IEEE80211_AC_BE
]; \

460 
d©a
[
i
++] = 
STXBASE
.
a
[
IEEE80211_AC_BK
]; \

461 
d©a
[
i
++] = 
STXBASE
.
a
[
IEEE80211_AC_VI
]; \

462 
d©a
[
i
++] = 
STXBASE
.
a
[
IEEE80211_AC_VO
]

	)

464 
	$©h9k_htc_gë_ë_°©s
(
õì80211_hw
 *
hw
,

465 
õì80211_vif
 *
vif
,

466 
ëhtoﬁ_°©s
 *
°©s
, 
u64
 *
d©a
)

468 
©h9k_htc_¥iv
 *
¥iv
 = 
hw
->priv;

469 
i
 = 0;

471 
d©a
[
i
++] = 
SKBTXBASE
.
skb_suc˚ss
;

472 
d©a
[
i
++] = 
SKBTXBASE
.
skb_suc˚ss_byãs
;

473 
d©a
[
i
++] = 
SKBRXBASE
.
skb_com∂ëed
;

474 
d©a
[
i
++] = 
SKBRXBASE
.
skb_com∂ëed_byãs
;

476 
	`ASTXQ
(
queue_°©s
);

478 
d©a
[
i
++] = 
SRXBASE
.
¸c_îr
;

479 
d©a
[
i
++] = 
SRXBASE
.
de¸y±_¸c_îr
;

480 
d©a
[
i
++] = 
SRXBASE
.
phy_îr
;

481 
d©a
[
i
++] = 
SRXBASE
.
mic_îr
;

482 
d©a
[
i
++] = 
SRXBASE
.
¥e_dñim_¸c_îr
;

483 
d©a
[
i
++] = 
SRXBASE
.
po°_dñim_¸c_îr
;

484 
d©a
[
i
++] = 
SRXBASE
.
de¸y±_busy_îr
;

486 
d©a
[
i
++] = 
SRXBASE
.
phy_îr_°©s
[
ATH9K_PHYERR_RADAR
];

487 
d©a
[
i
++] = 
SRXBASE
.
phy_îr_°©s
[
ATH9K_PHYERR_OFDM_TIMING
];

488 
d©a
[
i
++] = 
SRXBASE
.
phy_îr_°©s
[
ATH9K_PHYERR_CCK_TIMING
];

490 
	`WARN_ON
(
i
 !
ATH9K_HTC_SSTATS_LEN
);

491 
	}
}

494 
	$©h9k_htc_öô_debug
(
©h_hw
 *
ah
)

496 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

497 
©h9k_htc_¥iv
 *
¥iv
 = (©h9k_htc_¥iv *Ë
comm⁄
->priv;

499 
¥iv
->
debug
.
debugfs_phy
 = 
	`debugfs_¸óã_dú
(
KBUILD_MODNAME
,

500 
¥iv
->
hw
->
wùhy
->
debugfsdú
);

501 i‡(!
¥iv
->
debug
.
debugfs_phy
)

502  -
ENOMEM
;

504 
	`debugfs_¸óã_fûe
("tgt_öt_°©s", 
S_IRUSR
, 
¥iv
->
debug
.
debugfs_phy
,

505 
¥iv
, &
f›s_tgt_öt_°©s
);

506 
	`debugfs_¸óã_fûe
("tgt_tx_°©s", 
S_IRUSR
, 
¥iv
->
debug
.
debugfs_phy
,

507 
¥iv
, &
f›s_tgt_tx_°©s
);

508 
	`debugfs_¸óã_fûe
("tgt_rx_°©s", 
S_IRUSR
, 
¥iv
->
debug
.
debugfs_phy
,

509 
¥iv
, &
f›s_tgt_rx_°©s
);

510 
	`debugfs_¸óã_fûe
("xmô", 
S_IRUSR
, 
¥iv
->
debug
.
debugfs_phy
,

511 
¥iv
, &
f›s_xmô
);

512 
	`debugfs_¸óã_fûe
("skb_rx", 
S_IRUSR
, 
¥iv
->
debug
.
debugfs_phy
,

513 
¥iv
, &
f›s_skb_rx
);

515 
	`©h9k_cmn_debug_ªcv
(
¥iv
->
debug
.
debugfs_phy
, &¥iv->debug.
rx_°©s
);

516 
	`©h9k_cmn_debug_phy_îr
(
¥iv
->
debug
.
debugfs_phy
, &¥iv->debug.
rx_°©s
);

518 
	`debugfs_¸óã_fûe
("¶Ÿ", 
S_IRUSR
, 
¥iv
->
debug
.
debugfs_phy
,

519 
¥iv
, &
f›s_¶Ÿ
);

520 
	`debugfs_¸óã_fûe
("queue", 
S_IRUSR
, 
¥iv
->
debug
.
debugfs_phy
,

521 
¥iv
, &
f›s_queue
);

522 
	`debugfs_¸óã_fûe
("debug", 
S_IRUSR
 | 
S_IWUSR
, 
¥iv
->
debug
.
debugfs_phy
,

523 
¥iv
, &
f›s_debug
);

525 
	`©h9k_cmn_debug_ba£_ì¥om
(
¥iv
->
debug
.
debugfs_phy
,Öriv->
ah
);

526 
	`©h9k_cmn_debug_modÆ_ì¥om
(
¥iv
->
debug
.
debugfs_phy
,Öriv->
ah
);

529 
	}
}

	@htc_drv_gpio.c

17 
	~"htc.h
"

23 
	#ATH_HTC_BTCOEX_PRODUCT_ID
 "wb193"

	)

25 #ifde‡
CPTCFG_ATH9K_BTCOEX_SUPPORT


30 
	$©h_dëe˘_bt_¥i‹ôy
(
©h9k_htc_¥iv
 *
¥iv
)

32 
©h_btc€x
 *
btc€x
 = &
¥iv
->btcoex;

33 
©h_hw
 *
ah
 = 
¥iv
->ah;

35 i‡(
	`©h9k_hw_gpio_gë
(
ah
,áh->
btc€x_hw
.
bçri‹ôy_gpio
))

36 
btc€x
->
bt_¥i‹ôy_˙t
++;

38 i‡(
	`time_a·î
(
jiffõs
, 
btc€x
->
bt_¥i‹ôy_time
 +

39 
	`m£cs_to_jiffõs
(
ATH_BT_PRIORITY_TIME_THRESHOLD
))) {

40 
	`˛ór_bô
(
OP_BT_PRIORITY_DETECTED
, &
¥iv
->
›_Êags
);

41 
	`˛ór_bô
(
OP_BT_SCAN
, &
¥iv
->
›_Êags
);

43 i‡(
btc€x
->
bt_¥i‹ôy_˙t
 >
ATH_BT_CNT_SCAN_THRESHOLD
) {

44 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
BTCOEX
,

46 
	`£t_bô
(
OP_BT_PRIORITY_DETECTED
, &
¥iv
->
›_Êags
);

47 
	`£t_bô
(
OP_BT_SCAN
, &
¥iv
->
›_Êags
);

48 } i‡(
btc€x
->
bt_¥i‹ôy_˙t
 >
ATH_BT_CNT_THRESHOLD
) {

49 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
BTCOEX
,

51 
	`£t_bô
(
OP_BT_PRIORITY_DETECTED
, &
¥iv
->
›_Êags
);

54 
btc€x
->
bt_¥i‹ôy_˙t
 = 0;

55 
btc€x
->
bt_¥i‹ôy_time
 = 
jiffõs
;

57 
	}
}

64 
	$©h_btc€x_≥riod_w‹k
(
w‹k_°ru˘
 *
w‹k
)

66 
©h9k_htc_¥iv
 *
¥iv
 = 
	`c⁄èöî_of
(
w‹k
, ath9k_htc_priv,

67 
c€x_≥riod_w‹k
.
w‹k
);

68 
©h_btc€x
 *
btc€x
 = &
¥iv
->btcoex;

69 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

70 
u32
 
timî_≥riod
;

71 
ªt
;

73 
	`©h_dëe˘_bt_¥i‹ôy
(
¥iv
);

75 
ªt
 = 
	`©h9k_htc_upd©e_ˇp_èrgë
(
¥iv
,

76 
	`ã°_bô
(
OP_BT_PRIORITY_DETECTED
, &
¥iv
->
›_Êags
));

77 i‡(
ªt
) {

78 
	`©h_îr
(
comm⁄
, "UnableÅo set BTCOEXÖarameters\n");

82 
	`©h9k_hw_btc€x_bt_°omp
(
¥iv
->
ah
, 
	`ã°_bô
(
OP_BT_SCAN
, &¥iv->
›_Êags
) ?

83 
ATH_BTCOEX_STOMP_ALL
 : 
btc€x
->
bt_°omp_ty≥
);

85 
	`©h9k_hw_btc€x_íabÀ
(
¥iv
->
ah
);

86 
timî_≥riod
 = 
	`ã°_bô
(
OP_BT_SCAN
, &
¥iv
->
›_Êags
) ?

87 
btc€x
->
btsˇn_no_°omp
 : btc€x->
btc€x_no_°omp
;

88 
	`õì80211_queue_dñayed_w‹k
(
¥iv
->
hw
, &¥iv->
duty_cy˛e_w‹k
,

89 
	`m£cs_to_jiffõs
(
timî_≥riod
));

90 
	`õì80211_queue_dñayed_w‹k
(
¥iv
->
hw
, &¥iv->
c€x_≥riod_w‹k
,

91 
	`m£cs_to_jiffõs
(
btc€x
->
btc€x_≥riod
));

92 
	}
}

98 
	$©h_btc€x_duty_cy˛e_w‹k
(
w‹k_°ru˘
 *
w‹k
)

100 
©h9k_htc_¥iv
 *
¥iv
 = 
	`c⁄èöî_of
(
w‹k
, ath9k_htc_priv,

101 
duty_cy˛e_w‹k
.
w‹k
);

102 
©h_hw
 *
ah
 = 
¥iv
->ah;

103 
©h_btc€x
 *
btc€x
 = &
¥iv
->btcoex;

104 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

106 
	`©h_dbg
(
comm⁄
, 
BTCOEX
, "time slice work for btánd wlan\n");

108 i‡(
btc€x
->
bt_°omp_ty≥
 =
ATH_BTCOEX_STOMP_LOW
 ||

109 
	`ã°_bô
(
OP_BT_SCAN
, &
¥iv
->
›_Êags
))

110 
	`©h9k_hw_btc€x_bt_°omp
(
ah
, 
ATH_BTCOEX_STOMP_NONE
);

111 i‡(
btc€x
->
bt_°omp_ty≥
 =
ATH_BTCOEX_STOMP_ALL
)

112 
	`©h9k_hw_btc€x_bt_°omp
(
ah
, 
ATH_BTCOEX_STOMP_LOW
);

114 
	`©h9k_hw_btc€x_íabÀ
(
¥iv
->
ah
);

115 
	}
}

117 
	$©h_htc_öô_btc€x_w‹k
(
©h9k_htc_¥iv
 *
¥iv
)

119 
©h_btc€x
 *
btc€x
 = &
¥iv
->btcoex;

121 
btc€x
->
btc€x_≥riod
 = 
ATH_BTCOEX_DEF_BT_PERIOD
;

122 
btc€x
->
btc€x_no_°omp
 = (100 - 
ATH_BTCOEX_DEF_DUTY_CYCLE
) *

123 
btc€x
->
btc€x_≥riod
 / 100;

124 
btc€x
->
btsˇn_no_°omp
 = (100 - 
ATH_BTCOEX_BTSCAN_DUTY_CYCLE
) *

125 
btc€x
->
btc€x_≥riod
 / 100;

126 
	`INIT_DELAYED_WORK
(&
¥iv
->
c€x_≥riod_w‹k
, 
©h_btc€x_≥riod_w‹k
);

127 
	`INIT_DELAYED_WORK
(&
¥iv
->
duty_cy˛e_w‹k
, 
©h_btc€x_duty_cy˛e_w‹k
);

128 
	}
}

134 
	$©h_htc_ªsume_btc€x_w‹k
(
©h9k_htc_¥iv
 *
¥iv
)

136 
©h_btc€x
 *
btc€x
 = &
¥iv
->btcoex;

137 
©h_hw
 *
ah
 = 
¥iv
->ah;

139 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
BTCOEX
, "Starting btcoex work\n");

141 
btc€x
->
bt_¥i‹ôy_˙t
 = 0;

142 
btc€x
->
bt_¥i‹ôy_time
 = 
jiffõs
;

143 
	`˛ór_bô
(
OP_BT_PRIORITY_DETECTED
, &
¥iv
->
›_Êags
);

144 
	`˛ór_bô
(
OP_BT_SCAN
, &
¥iv
->
›_Êags
);

145 
	`õì80211_queue_dñayed_w‹k
(
¥iv
->
hw
, &¥iv->
c€x_≥riod_w‹k
, 0);

146 
	}
}

152 
	$©h_htc_ˇn˚l_btc€x_w‹k
(
©h9k_htc_¥iv
 *
¥iv
)

154 
	`ˇn˚l_dñayed_w‹k_sync
(&
¥iv
->
c€x_≥riod_w‹k
);

155 
	`ˇn˚l_dñayed_w‹k_sync
(&
¥iv
->
duty_cy˛e_w‹k
);

156 
	}
}

158 
	$©h9k_htc_°¨t_btc€x
(
©h9k_htc_¥iv
 *
¥iv
)

160 
©h_hw
 *
ah
 = 
¥iv
->ah;

162 i‡(
	`©h9k_hw_gë_btc€x_scheme
(
ah
Ë=
ATH_BTCOEX_CFG_3WIRE
) {

163 
	`©h9k_hw_btc€x_£t_weight
(
ah
, 
AR_BT_COEX_WGHT
,

164 
AR_STOMP_LOW_WLAN_WGHT
, 0);

165 
	`©h9k_hw_btc€x_íabÀ
(
ah
);

166 
	`©h_htc_ªsume_btc€x_w‹k
(
¥iv
);

168 
	}
}

170 
	$©h9k_htc_°›_btc€x
(
©h9k_htc_¥iv
 *
¥iv
)

172 
©h_hw
 *
ah
 = 
¥iv
->ah;

174 i‡(
ah
->
btc€x_hw
.
íabÀd
 &&

175 
	`©h9k_hw_gë_btc€x_scheme
(
ah
Ë!
ATH_BTCOEX_CFG_NONE
) {

176 i‡(
ah
->
btc€x_hw
.
scheme
 =
ATH_BTCOEX_CFG_3WIRE
)

177 
	`©h_htc_ˇn˚l_btc€x_w‹k
(
¥iv
);

178 
	`©h9k_hw_btc€x_dißbÀ
(
ah
);

180 
	}
}

182 
	$©h9k_htc_öô_btc€x
(
©h9k_htc_¥iv
 *
¥iv
, *
¥odu˘
)

184 
©h_hw
 *
ah
 = 
¥iv
->ah;

185 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

186 
qnum
;

191 i‡(!
comm⁄
->
btc€x_íabÀd
) {

192 
ah
->
btc€x_hw
.
scheme
 = 
ATH_BTCOEX_CFG_NONE
;

196 i‡(
¥odu˘
 && 
	`°∫cmp
’rodu˘, 
ATH_HTC_BTCOEX_PRODUCT_ID
, 5) == 0) {

197 
ah
->
btc€x_hw
.
scheme
 = 
ATH_BTCOEX_CFG_3WIRE
;

200 
	`©h9k_hw_gë_btc€x_scheme
(
¥iv
->
ah
)) {

201 
ATH_BTCOEX_CFG_NONE
:

203 
ATH_BTCOEX_CFG_3WIRE
:

204 
¥iv
->
ah
->
btc€x_hw
.
bè˘ive_gpio
 = 7;

205 
¥iv
->
ah
->
btc€x_hw
.
bçri‹ôy_gpio
 = 6;

206 
¥iv
->
ah
->
btc€x_hw
.
wœ«˘ive_gpio
 = 8;

207 
¥iv
->
btc€x
.
bt_°omp_ty≥
 = 
ATH_BTCOEX_STOMP_LOW
;

208 
	`©h9k_hw_btc€x_öô_3wúe
(
¥iv
->
ah
);

209 
	`©h_htc_öô_btc€x_w‹k
(
¥iv
);

210 
qnum
 = 
¥iv
->
hwq_m≠
[
IEEE80211_AC_BE
];

211 
	`©h9k_hw_öô_btc€x_hw
(
¥iv
->
ah
, 
qnum
);

214 
	`WARN_ON
(1);

217 
	}
}

225 #ifde‡
CPTCFG_MAC80211_LEDS


226 
	$©h9k_Àd_w‹k
(
w‹k_°ru˘
 *
w‹k
)

228 
©h9k_htc_¥iv
 *
¥iv
 = 
	`c⁄èöî_of
(
w‹k
,

229 
©h9k_htc_¥iv
,

230 
Àd_w‹k
);

232 
	`©h9k_hw_£t_gpio
(
¥iv
->
ah
,Öriv->ah->
Àd_pö
,

233 (
¥iv
->
brighäess
 =
LED_OFF
));

234 
	}
}

236 
	$©h9k_Àd_brighäess
(
Àd_˛assdev
 *
Àd_cdev
,

237 
Àd_brighäess
 
brighäess
)

239 
©h9k_htc_¥iv
 *
¥iv
 = 
	`c⁄èöî_of
(
Àd_cdev
,

240 
©h9k_htc_¥iv
,

241 
Àd_cdev
);

244 
¥iv
->
brighäess
 = brightness;

245 
	`õì80211_queue_w‹k
(
¥iv
->
hw
, &¥iv->
Àd_w‹k
);

246 
	}
}

248 
	$©h9k_deöô_Àds
(
©h9k_htc_¥iv
 *
¥iv
)

250 i‡(!
¥iv
->
Àd_ªgi°îed
)

253 
	`©h9k_Àd_brighäess
(&
¥iv
->
Àd_cdev
, 
LED_OFF
);

254 
	`Àd_˛assdev_uƒegi°î
(&
¥iv
->
Àd_cdev
);

255 
	`ˇn˚l_w‹k_sync
(&
¥iv
->
Àd_w‹k
);

256 
	}
}

259 
	$©h9k_c⁄figuª_Àds
(
©h9k_htc_¥iv
 *
¥iv
)

262 
	`©h9k_hw_cfg_ouçut
(
¥iv
->
ah
,Öriv->ah->
Àd_pö
,

263 
AR_GPIO_OUTPUT_MUX_AS_OUTPUT
);

265 
	`©h9k_hw_£t_gpio
(
¥iv
->
ah
,Öriv->ah->
Àd_pö
, 1);

267 
	}
}

269 
	$©h9k_öô_Àds
(
©h9k_htc_¥iv
 *
¥iv
)

271 
ªt
;

273 i‡(
	`AR_SREV_9287
(
¥iv
->
ah
))

274 
¥iv
->
ah
->
Àd_pö
 = 
ATH_LED_PIN_9287
;

275 i‡(
	`AR_SREV_9271
(
¥iv
->
ah
))

276 
¥iv
->
ah
->
Àd_pö
 = 
ATH_LED_PIN_9271
;

277 i‡(
	`AR_DEVID_7010
(
¥iv
->
ah
))

278 
¥iv
->
ah
->
Àd_pö
 = 
ATH_LED_PIN_7010
;

280 
¥iv
->
ah
->
Àd_pö
 = 
ATH_LED_PIN_DEF
;

282 
	`©h9k_c⁄figuª_Àds
(
¥iv
);

284 
	`¢¥ötf
(
¥iv
->
Àd_«me
, (priv->led_name),

285 "©h9k_htc-%s", 
	`wùhy_«me
(
¥iv
->
hw
->
wùhy
));

286 
¥iv
->
Àd_cdev
.
«me
 =Öriv->
Àd_«me
;

287 
¥iv
->
Àd_cdev
.
brighäess_£t
 = 
©h9k_Àd_brighäess
;

289 
ªt
 = 
	`Àd_˛assdev_ªgi°î
(
	`wùhy_dev
(
¥iv
->
hw
->
wùhy
), &¥iv->
Àd_cdev
);

290 i‡(
ªt
 < 0)

293 
	`INIT_WORK
(&
¥iv
->
Àd_w‹k
, 
©h9k_Àd_w‹k
);

294 
¥iv
->
Àd_ªgi°îed
 = 
åue
;

297 
	}
}

304 
boﬁ
 
	$©h_is_rfkûl_£t
(
©h9k_htc_¥iv
 *
¥iv
)

306 
boﬁ
 
is_blocked
;

308 
	`©h9k_htc_ps_wakeup
(
¥iv
);

309 
is_blocked
 = 
	`©h9k_hw_gpio_gë
(
¥iv
->
ah
,Öriv->ah->
rfkûl_gpio
) ==

310 
¥iv
->
ah
->
rfkûl_pﬁ¨ôy
;

311 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

313  
is_blocked
;

314 
	}
}

316 
	$©h9k_htc_rfkûl_pﬁl_°©e
(
õì80211_hw
 *
hw
)

318 
©h9k_htc_¥iv
 *
¥iv
 = 
hw
->priv;

319 
boﬁ
 
blocked
 = !!
	`©h_is_rfkûl_£t
(
¥iv
);

321 
	`wùhy_rfkûl_£t_hw_°©e
(
hw
->
wùhy
, 
blocked
);

322 
	}
}

324 
	$©h9k_°¨t_rfkûl_pﬁl
(
©h9k_htc_¥iv
 *
¥iv
)

326 i‡(
¥iv
->
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_RFSILENT
)

327 
	`wùhy_rfkûl_°¨t_pﬁlög
(
¥iv
->
hw
->
wùhy
);

328 
	}
}

	@htc_drv_init.c

17 
	#¥_fmt
(
fmt
Ë
KBUILD_MODNAME
 ": " 
	)
fmt

19 
	~"htc.h
"

21 
MODULE_AUTHOR
("Atheros Communications");

22 
MODULE_LICENSE
("Dual BSD/GPL");

23 
MODULE_DESCRIPTION
("Atheros driver 802.11n HTC based wireless devices");

25 
	g©h9k_debug
 = 
ATH_DBG_DEFAULT
;

26 
moduÀ_∑øm_«med
(
debug
, 
©h9k_debug
, 
uöt
, 0);

27 
MODULE_PARM_DESC
(
debug
, "Debugging mask");

29 
	ghtc_mod∑øm_nohw¸y±
;

30 
moduÀ_∑øm_«med
(
nohw¸y±
, 
htc_mod∑øm_nohw¸y±
, , 0444);

31 
MODULE_PARM_DESC
(
nohw¸y±
, "Disable hardwareÉncryption");

33 
	g©h9k_htc_btc€x_íabÀ
;

34 
moduÀ_∑øm_«med
(
btc€x_íabÀ
, 
©h9k_htc_btc€x_íabÀ
, , 0444);

35 
MODULE_PARM_DESC
(
btc€x_íabÀ
, "Enable wifi-BT coexistence");

37 
	g©h9k_ps_íabÀ
;

38 
moduÀ_∑øm_«med
(
ps_íabÀ
, 
©h9k_ps_íabÀ
, , 0444);

39 
MODULE_PARM_DESC
(
ps_íabÀ
, "Enable WLAN PowerSave");

41 #ifde‡
CPTCFG_MAC80211_LEDS


42 c⁄° 
õì80211_çt_blök
 
	g©h9k_htc_çt_blök
[] = {

43 { .
throughput
 = 0 * 1024, .
	gblök_time
 = 334 },

44 { .
	gthroughput
 = 1 * 1024, .
	gblök_time
 = 260 },

45 { .
	gthroughput
 = 5 * 1024, .
	gblök_time
 = 220 },

46 { .
	gthroughput
 = 10 * 1024, .
	gblök_time
 = 190 },

47 { .
	gthroughput
 = 20 * 1024, .
	gblök_time
 = 170 },

48 { .
	gthroughput
 = 50 * 1024, .
	gblök_time
 = 150 },

49 { .
	gthroughput
 = 70 * 1024, .
	gblök_time
 = 130 },

50 { .
	gthroughput
 = 100 * 1024, .
	gblök_time
 = 110 },

51 { .
	gthroughput
 = 200 * 1024, .
	gblök_time
 = 80 },

52 { .
	gthroughput
 = 300 * 1024, .
	gblök_time
 = 50 },

56 
	$©h9k_htc_waô_f‹_èrgë
(
©h9k_htc_¥iv
 *
¥iv
)

58 
time_À·
;

60 i‡(
	`©omic_ªad
(&
¥iv
->
htc
->
tgt_ªady
) > 0) {

61 
	`©omic_dec
(&
¥iv
->
htc
->
tgt_ªady
);

66 
time_À·
 = 
	`waô_f‹_com∂ëi⁄_timeout
(&
¥iv
->
htc
->
èrgë_waô
, 
HZ
);

67 i‡(!
time_À·
) {

68 
	`dev_îr
(
¥iv
->
dev
, "ath9k_htc: Target is unresponsive\n");

69  -
ETIMEDOUT
;

72 
	`©omic_dec
(&
¥iv
->
htc
->
tgt_ªady
);

75 
	}
}

77 
	$©h9k_deöô_¥iv
(
©h9k_htc_¥iv
 *
¥iv
)

79 
	`©h9k_hw_deöô
(
¥iv
->
ah
);

80 
	`k‰ì
(
¥iv
->
ah
);

81 
¥iv
->
ah
 = 
NULL
;

82 
	}
}

84 
	$©h9k_deöô_devi˚
(
©h9k_htc_¥iv
 *
¥iv
)

86 
õì80211_hw
 *
hw
 = 
¥iv
->hw;

88 
	`wùhy_rfkûl_°›_pﬁlög
(
hw
->
wùhy
);

89 
	`©h9k_deöô_Àds
(
¥iv
);

90 
	`õì80211_uƒegi°î_hw
(
hw
);

91 
	`©h9k_rx_˛ónup
(
¥iv
);

92 
	`©h9k_tx_˛ónup
(
¥iv
);

93 
	`©h9k_deöô_¥iv
(
¥iv
);

94 
	}
}

96 
ölöe
 
©h9k_htc_c⁄√˘_svc
(
©h9k_htc_¥iv
 *
¥iv
,

97 
u16
 
£rvi˚_id
,

98 (*
tx
) (*,

99 
sk_buff
 *,

100 
htc_ídpoöt_id
,

101 
boﬁ
 
txok
),

102 
htc_ídpoöt_id
 *
ï_id
)

104 
htc_£rvi˚_c⁄ƒeq
 
ªq
;

106 
	`mem£t
(&
ªq
, 0, (
htc_£rvi˚_c⁄ƒeq
));

108 
ªq
.
£rvi˚_id
 = service_id;

109 
ªq
.
ï_ˇŒbacks
.
¥iv
 =Öriv;

110 
ªq
.
ï_ˇŒbacks
.
rx
 = 
©h9k_htc_rxï
;

111 
ªq
.
ï_ˇŒbacks
.
tx
 =Åx;

113  
	`htc_c⁄√˘_£rvi˚
(
¥iv
->
htc
, &
ªq
, 
ï_id
);

114 
	}
}

116 
	$©h9k_öô_htc_£rvi˚s
(
©h9k_htc_¥iv
 *
¥iv
, 
u16
 
devid
,

117 
u32
 
drv_öfo
)

119 
ªt
;

122 
ªt
 = 
	`©h9k_wmi_c⁄√˘
(
¥iv
->
htc
,Öriv->
wmi
, &¥iv->
wmi_cmd_ï
);

123 i‡(
ªt
)

124 
îr
;

127 
ªt
 = 
	`©h9k_htc_c⁄√˘_svc
(
¥iv
, 
WMI_BEACON_SVC
, 
©h9k_htc_bóc⁄ï
,

128 &
¥iv
->
bóc⁄_ï
);

129 i‡(
ªt
)

130 
îr
;

133 
ªt
 = 
	`©h9k_htc_c⁄√˘_svc
(
¥iv
, 
WMI_CAB_SVC
, 
©h9k_htc_txï
,

134 &
¥iv
->
ˇb_ï
);

135 i‡(
ªt
)

136 
îr
;

140 
ªt
 = 
	`©h9k_htc_c⁄√˘_svc
(
¥iv
, 
WMI_UAPSD_SVC
, 
©h9k_htc_txï
,

141 &
¥iv
->
u≠sd_ï
);

142 i‡(
ªt
)

143 
îr
;

146 
ªt
 = 
	`©h9k_htc_c⁄√˘_svc
(
¥iv
, 
WMI_MGMT_SVC
, 
©h9k_htc_txï
,

147 &
¥iv
->
mgmt_ï
);

148 i‡(
ªt
)

149 
îr
;

152 
ªt
 = 
	`©h9k_htc_c⁄√˘_svc
(
¥iv
, 
WMI_DATA_BE_SVC
, 
©h9k_htc_txï
,

153 &
¥iv
->
d©a_be_ï
);

154 i‡(
ªt
)

155 
îr
;

158 
ªt
 = 
	`©h9k_htc_c⁄√˘_svc
(
¥iv
, 
WMI_DATA_BK_SVC
, 
©h9k_htc_txï
,

159 &
¥iv
->
d©a_bk_ï
);

160 i‡(
ªt
)

161 
îr
;

164 
ªt
 = 
	`©h9k_htc_c⁄√˘_svc
(
¥iv
, 
WMI_DATA_VI_SVC
, 
©h9k_htc_txï
,

165 &
¥iv
->
d©a_vi_ï
);

166 i‡(
ªt
)

167 
îr
;

170 
ªt
 = 
	`©h9k_htc_c⁄√˘_svc
(
¥iv
, 
WMI_DATA_VO_SVC
, 
©h9k_htc_txï
,

171 &
¥iv
->
d©a_vo_ï
);

172 i‡(
ªt
)

173 
îr
;

181 i‡(
	`IS_AR7010_DEVICE
(
drv_öfo
))

182 
¥iv
->
htc
->
¸edôs
 = 45;

184 
¥iv
->
htc
->
¸edôs
 = 33;

186 
ªt
 = 
	`htc_öô
(
¥iv
->
htc
);

187 i‡(
ªt
)

188 
îr
;

190 
	`dev_öfo
(
¥iv
->
dev
, "ath9k_htc: HTC initialized with %d credits\n",

191 
¥iv
->
htc
->
¸edôs
);

195 
îr
:

196 
	`dev_îr
(
¥iv
->
dev
, "ath9k_htc: UnableÅo initialize HTC services\n");

197  
ªt
;

198 
	}
}

200 
	$©h9k_ªg_nŸifõr
(
wùhy
 *wiphy,

201 
ªguœt‹y_ªque°
 *
ªque°
)

203 
õì80211_hw
 *
hw
 = 
	`wùhy_to_õì80211_hw
(
wùhy
);

204 
©h9k_htc_¥iv
 *
¥iv
 = 
hw
->priv;

206 
	`©h_ªg_nŸifõr_≠∂y
(
wùhy
, 
ªque°
,

207 
	`©h9k_hw_ªguœt‹y
(
¥iv
->
ah
));

208 
	}
}

210 
	$©h9k_ªgªad
(*
hw_¥iv
, 
u32
 
ªg_off£t
)

212 
©h_hw
 *
ah
 = (©h_hw *Ë
hw_¥iv
;

213 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

214 
©h9k_htc_¥iv
 *
¥iv
 = (©h9k_htc_¥iv *Ë
comm⁄
->priv;

215 
__be32
 
vÆ
, 
ªg
 = 
	`˝u_to_be32
(
ªg_off£t
);

216 
r
;

218 
r
 = 
	`©h9k_wmi_cmd
(
¥iv
->
wmi
, 
WMI_REG_READ_CMDID
,

219 (
u8
 *Ë&
ªg
, (reg),

220 (
u8
 *Ë&
vÆ
, (val),

222 i‡(
	`u∆ikñy
(
r
)) {

223 
	`©h_dbg
(
comm⁄
, 
WMI
, "REGISTER READ FAILED: (0x%04x, %d)\n",

224 
ªg_off£t
, 
r
);

225  -
EIO
;

228  
	`be32_to_˝u
(
vÆ
);

229 
	}
}

231 
	$©h9k_mu…i_ªgªad
(*
hw_¥iv
, 
u32
 *
addr
,

232 
u32
 *
vÆ
, 
u16
 
cou¡
)

234 
©h_hw
 *
ah
 = (©h_hw *Ë
hw_¥iv
;

235 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

236 
©h9k_htc_¥iv
 *
¥iv
 = (©h9k_htc_¥iv *Ë
comm⁄
->priv;

237 
__be32
 
tm∑ddr
[8];

238 
__be32
 
tmpvÆ
[8];

239 
i
, 
ªt
;

241 
i
 = 0; i < 
cou¡
; i++) {

242 
tm∑ddr
[
i
] = 
	`˝u_to_be32
(
addr
[i]);

245 
ªt
 = 
	`©h9k_wmi_cmd
(
¥iv
->
wmi
, 
WMI_REG_READ_CMDID
,

246 (
u8
 *)
tm∑ddr
 , (
u32
Ë* 
cou¡
,

247 (
u8
 *)
tmpvÆ
, (
u32
Ë* 
cou¡
,

249 i‡(
	`u∆ikñy
(
ªt
)) {

250 
	`©h_dbg
(
comm⁄
, 
WMI
,

251 "Mu…ùÀ REGISTER READ FAILED (cou¡: %d)\n", 
cou¡
);

254 
i
 = 0; i < 
cou¡
; i++) {

255 
vÆ
[
i
] = 
	`be32_to_˝u
(
tmpvÆ
[i]);

257 
	}
}

259 
	$©h9k_ªgwrôe_mu…i
(
©h_comm⁄
 *
comm⁄
)

261 
©h9k_htc_¥iv
 *
¥iv
 = (©h9k_htc_¥iv *Ë
comm⁄
->priv;

262 
u32
 
r•_°©us
;

263 
r
;

265 
r
 = 
	`©h9k_wmi_cmd
(
¥iv
->
wmi
, 
WMI_REG_WRITE_CMDID
,

266 (
u8
 *Ë&
¥iv
->
wmi
->
mu…i_wrôe
,

267 (
ªgi°î_wrôe
Ë* 
¥iv
->
wmi
->
mu…i_wrôe_idx
,

268 (
u8
 *Ë&
r•_°©us
, (rsp_status),

270 i‡(
	`u∆ikñy
(
r
)) {

271 
	`©h_dbg
(
comm⁄
, 
WMI
,

273 
¥iv
->
wmi
->
mu…i_wrôe_idx
);

275 
¥iv
->
wmi
->
mu…i_wrôe_idx
 = 0;

276 
	}
}

278 
	$©h9k_ªgwrôe_sögÀ
(*
hw_¥iv
, 
u32
 
vÆ
, u32 
ªg_off£t
)

280 
©h_hw
 *
ah
 = (©h_hw *Ë
hw_¥iv
;

281 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

282 
©h9k_htc_¥iv
 *
¥iv
 = (©h9k_htc_¥iv *Ë
comm⁄
->priv;

283 c⁄° 
__be32
 
buf
[2] = {

284 
	`˝u_to_be32
(
ªg_off£t
),

285 
	`˝u_to_be32
(
vÆ
),

287 
r
;

289 
r
 = 
	`©h9k_wmi_cmd
(
¥iv
->
wmi
, 
WMI_REG_WRITE_CMDID
,

290 (
u8
 *Ë&
buf
, (buf),

291 (
u8
 *Ë&
vÆ
, (val),

293 i‡(
	`u∆ikñy
(
r
)) {

294 
	`©h_dbg
(
comm⁄
, 
WMI
, "REGISTER WRITE FAILED:(0x%04x, %d)\n",

295 
ªg_off£t
, 
r
);

297 
	}
}

299 
	$©h9k_ªgwrôe_buf„r
(*
hw_¥iv
, 
u32
 
vÆ
, u32 
ªg_off£t
)

301 
©h_hw
 *
ah
 = (©h_hw *Ë
hw_¥iv
;

302 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

303 
©h9k_htc_¥iv
 *
¥iv
 = (©h9k_htc_¥iv *Ë
comm⁄
->priv;

305 
	`muãx_lock
(&
¥iv
->
wmi
->
mu…i_wrôe_muãx
);

308 
¥iv
->
wmi
->
mu…i_wrôe
[¥iv->wmi->
mu…i_wrôe_idx
].
ªg
 =

309 
	`˝u_to_be32
(
ªg_off£t
);

310 
¥iv
->
wmi
->
mu…i_wrôe
[¥iv->wmi->
mu…i_wrôe_idx
].
vÆ
 =

311 
	`˝u_to_be32
(
vÆ
);

313 
¥iv
->
wmi
->
mu…i_wrôe_idx
++;

316 i‡(
¥iv
->
wmi
->
mu…i_wrôe_idx
 =
MAX_CMD_NUMBER
)

317 
	`©h9k_ªgwrôe_mu…i
(
comm⁄
);

319 
	`muãx_u∆ock
(&
¥iv
->
wmi
->
mu…i_wrôe_muãx
);

320 
	}
}

322 
	$©h9k_ªgwrôe
(*
hw_¥iv
, 
u32
 
vÆ
, u32 
ªg_off£t
)

324 
©h_hw
 *
ah
 = (©h_hw *Ë
hw_¥iv
;

325 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

326 
©h9k_htc_¥iv
 *
¥iv
 = (©h9k_htc_¥iv *Ë
comm⁄
->priv;

328 i‡(
	`©omic_ªad
(&
¥iv
->
wmi
->
mwrôe_˙t
))

329 
	`©h9k_ªgwrôe_buf„r
(
hw_¥iv
, 
vÆ
, 
ªg_off£t
);

331 
	`©h9k_ªgwrôe_sögÀ
(
hw_¥iv
, 
vÆ
, 
ªg_off£t
);

332 
	}
}

334 
	$©h9k_íabÀ_ªgwrôe_buf„r
(*
hw_¥iv
)

336 
©h_hw
 *
ah
 = (©h_hw *Ë
hw_¥iv
;

337 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

338 
©h9k_htc_¥iv
 *
¥iv
 = (©h9k_htc_¥iv *Ë
comm⁄
->priv;

340 
	`©omic_öc
(&
¥iv
->
wmi
->
mwrôe_˙t
);

341 
	}
}

343 
	$©h9k_ªgwrôe_Êush
(*
hw_¥iv
)

345 
©h_hw
 *
ah
 = (©h_hw *Ë
hw_¥iv
;

346 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

347 
©h9k_htc_¥iv
 *
¥iv
 = (©h9k_htc_¥iv *Ë
comm⁄
->priv;

349 
	`©omic_dec
(&
¥iv
->
wmi
->
mwrôe_˙t
);

351 
	`muãx_lock
(&
¥iv
->
wmi
->
mu…i_wrôe_muãx
);

353 i‡(
¥iv
->
wmi
->
mu…i_wrôe_idx
)

354 
	`©h9k_ªgwrôe_mu…i
(
comm⁄
);

356 
	`muãx_u∆ock
(&
¥iv
->
wmi
->
mu…i_wrôe_muãx
);

357 
	}
}

359 
u32
 
	$©h9k_ªg_rmw
(*
hw_¥iv
, 
u32
 
ªg_off£t
, u32 
£t
, u32 
˛r
)

361 
u32
 
vÆ
;

363 
vÆ
 = 
	`©h9k_ªgªad
(
hw_¥iv
, 
ªg_off£t
);

364 
vÆ
 &~
˛r
;

365 
vÆ
 |
£t
;

366 
	`©h9k_ªgwrôe
(
hw_¥iv
, 
vÆ
, 
ªg_off£t
);

367  
vÆ
;

368 
	}
}

370 
	$©h_usb_ªad_ˇchesize
(
©h_comm⁄
 *
comm⁄
, *
csz
)

372 *
csz
 = 
L1_CACHE_BYTES
 >> 2;

373 
	}
}

375 
boﬁ
 
	$©h_usb_ì¥om_ªad
(
©h_comm⁄
 *
comm⁄
, 
u32
 
off
, 
u16
 *
d©a
)

377 
©h_hw
 *
ah
 = (©h_hw *Ë
comm⁄
->ah;

379 ()
	`REG_READ
(
ah
, 
AR5416_EEPROM_OFFSET
 + (
off
 << 
AR5416_EEPROM_S
));

381 i‡(!
	`©h9k_hw_waô
(
ah
,

382 
AR_EEPROM_STATUS_DATA
,

383 
AR_EEPROM_STATUS_DATA_BUSY
 |

384 
AR_EEPROM_STATUS_DATA_PROT_ACCESS
, 0,

385 
AH_WAIT_TIMEOUT
))

386  
Ál£
;

388 *
d©a
 = 
	`MS
(
	`REG_READ
(
ah
, 
AR_EEPROM_STATUS_DATA
),

389 
AR_EEPROM_STATUS_DATA_VAL
);

391  
åue
;

392 
	}
}

394 c⁄° 
©h_bus_›s
 
	g©h9k_usb_bus_›s
 = {

395 .
©h_bus_ty≥
 = 
ATH_USB
,

396 .
	gªad_ˇchesize
 = 
©h_usb_ªad_ˇchesize
,

397 .
	gì¥om_ªad
 = 
©h_usb_ì¥om_ªad
,

400 
	$©h9k_öô_queues
(
©h9k_htc_¥iv
 *
¥iv
)

402 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

403 
i
;

405 
i
 = 0; i < 
	`ARRAY_SIZE
(
¥iv
->
hwq_m≠
); i++)

406 
¥iv
->
hwq_m≠
[
i
] = -1;

408 
¥iv
->
bóc⁄
.
bóc⁄q
 = 
	`©h9k_hw_bóc⁄q_£tup
’riv->
ah
);

409 i‡(
¥iv
->
bóc⁄
.
bóc⁄q
 == -1) {

410 
	`©h_îr
(
comm⁄
, "UnableÅo setup BEACON xmit queue\n");

411 
îr
;

414 
¥iv
->
ˇbq
 = 
	`©h9k_htc_ˇbq_£tup
(priv);

415 i‡(
¥iv
->
ˇbq
 == -1) {

416 
	`©h_îr
(
comm⁄
, "UnableÅo setup CAB xmit queue\n");

417 
îr
;

420 i‡(!
	`©h9k_htc_txq_£tup
(
¥iv
, 
IEEE80211_AC_BE
)) {

421 
	`©h_îr
(
comm⁄
, "UnableÅo setup xmit queue for BEÅraffic\n");

422 
îr
;

425 i‡(!
	`©h9k_htc_txq_£tup
(
¥iv
, 
IEEE80211_AC_BK
)) {

426 
	`©h_îr
(
comm⁄
, "UnableÅo setup xmit queue for BKÅraffic\n");

427 
îr
;

429 i‡(!
	`©h9k_htc_txq_£tup
(
¥iv
, 
IEEE80211_AC_VI
)) {

430 
	`©h_îr
(
comm⁄
, "UnableÅo setup xmit queue for VIÅraffic\n");

431 
îr
;

433 i‡(!
	`©h9k_htc_txq_£tup
(
¥iv
, 
IEEE80211_AC_VO
)) {

434 
	`©h_îr
(
comm⁄
, "UnableÅo setup xmit queue for VOÅraffic\n");

435 
îr
;

440 
îr
:

441  -
EINVAL
;

442 
	}
}

444 
	$©h9k_öô_misc
(
©h9k_htc_¥iv
 *
¥iv
)

446 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

448 
	`mem˝y
(
comm⁄
->
bssidmask
, 
©h_bˇ°_mac
, 
ETH_ALEN
);

450 
comm⁄
->
œ°_rssi
 = 
ATH_RSSI_DUMMY_MARKER
;

451 
¥iv
->
ah
->
›mode
 = 
NL80211_IFTYPE_STATION
;

452 
	}
}

454 
	$©h9k_öô_¥iv
(
©h9k_htc_¥iv
 *
¥iv
,

455 
u16
 
devid
, *
¥odu˘
,

456 
u32
 
drv_öfo
)

458 
©h_hw
 *
ah
 = 
NULL
;

459 
©h_comm⁄
 *
comm⁄
;

460 
i
, 
ªt
 = 0, 
csz
 = 0;

462 
ah
 = 
	`kzÆloc
((
©h_hw
), 
GFP_KERNEL
);

463 i‡(!
ah
)

464  -
ENOMEM
;

466 
ah
->
dev
 = 
¥iv
->dev;

467 
ah
->
hw_vîsi⁄
.
devid
 = devid;

468 
ah
->
hw_vîsi⁄
.
usbdev
 = 
drv_öfo
;

469 
ah
->
ah_Êags
 |
AH_USE_EEPROM
;

470 
ah
->
ªg_›s
.
ªad
 = 
©h9k_ªgªad
;

471 
ah
->
ªg_›s
.
mu…i_ªad
 = 
©h9k_mu…i_ªgªad
;

472 
ah
->
ªg_›s
.
wrôe
 = 
©h9k_ªgwrôe
;

473 
ah
->
ªg_›s
.
íabÀ_wrôe_buf„r
 = 
©h9k_íabÀ_ªgwrôe_buf„r
;

474 
ah
->
ªg_›s
.
wrôe_Êush
 = 
©h9k_ªgwrôe_Êush
;

475 
ah
->
ªg_›s
.
rmw
 = 
©h9k_ªg_rmw
;

476 
¥iv
->
ah
 =áh;

478 
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

479 
comm⁄
->
›s
 = &
ah
->
ªg_›s
;

480 
comm⁄
->
bus_›s
 = &
©h9k_usb_bus_›s
;

481 
comm⁄
->
ah
 =áh;

482 
comm⁄
->
hw
 = 
¥iv
->hw;

483 
comm⁄
->
¥iv
 =Öriv;

484 
comm⁄
->
debug_mask
 = 
©h9k_debug
;

485 
comm⁄
->
btc€x_íabÀd
 = 
©h9k_htc_btc€x_íabÀ
 == 1;

486 
	`£t_bô
(
ATH_OP_INVALID
, &
comm⁄
->
›_Êags
);

488 
	`•ö_lock_öô
(&
¥iv
->
bóc⁄_lock
);

489 
	`•ö_lock_öô
(&
¥iv
->
tx
.
tx_lock
);

490 
	`muãx_öô
(&
¥iv
->
muãx
);

491 
	`muãx_öô
(&
¥iv
->
htc_pm_lock
);

492 
	`èskÀt_öô
(&
¥iv
->
rx_èskÀt
, 
©h9k_rx_èskÀt
,

493 ()
¥iv
);

494 
	`èskÀt_öô
(&
¥iv
->
tx_Áûed_èskÀt
, 
©h9k_tx_Áûed_èskÀt
,

495 ()
¥iv
);

496 
	`INIT_DELAYED_WORK
(&
¥iv
->
™i_w‹k
, 
©h9k_htc_™i_w‹k
);

497 
	`INIT_WORK
(&
¥iv
->
ps_w‹k
, 
©h9k_ps_w‹k
);

498 
	`INIT_WORK
(&
¥iv
->
Áèl_w‹k
, 
©h9k_Áèl_w‹k
);

499 
	`£tup_timî
(&
¥iv
->
tx
.
˛ónup_timî
, 
©h9k_htc_tx_˛ónup_timî
,

500 ()
¥iv
);

506 
	`©h_ªad_ˇchesize
(
comm⁄
, &
csz
);

507 
comm⁄
->
ˇchñsz
 = 
csz
 << 2;

509 
ªt
 = 
	`©h9k_hw_öô
(
ah
);

510 i‡(
ªt
) {

511 
	`©h_îr
(
comm⁄
,

513 
ªt
);

514 
îr_hw
;

517 
ªt
 = 
	`©h9k_öô_queues
(
¥iv
);

518 i‡(
ªt
)

519 
îr_queues
;

521 
i
 = 0; i < 
ATH9K_HTC_MAX_BCN_VIF
; i++)

522 
¥iv
->
bóc⁄
.
b¶Ÿ
[
i
] = 
NULL
;

523 
¥iv
->
bóc⁄
.
¶Ÿtime
 = 
ATH9K_SLOT_TIME_9
;

525 
	`©h9k_cmn_öô_ch™√ls_øãs
(
comm⁄
);

526 
	`©h9k_cmn_öô_¸y±o
(
ah
);

527 
	`©h9k_öô_misc
(
¥iv
);

528 
	`©h9k_htc_öô_btc€x
(
¥iv
, 
¥odu˘
);

532 
îr_queues
:

533 
	`©h9k_hw_deöô
(
ah
);

534 
îr_hw
:

536 
	`k‰ì
(
ah
);

537 
¥iv
->
ah
 = 
NULL
;

539  
ªt
;

540 
	}
}

542 c⁄° 
õì80211_iÁ˚_limô
 
	gif_limôs
[] = {

543 { .
max
 = 2, .
	gty≥s
 = 
BIT
(
NL80211_IFTYPE_STATION
) |

544 
BIT
(
NL80211_IFTYPE_P2P_CLIENT
) },

545 { .
	gmax
 = 2, .
	gty≥s
 = 
BIT
(
NL80211_IFTYPE_AP
) |

546 #ifde‡
CPTCFG_MAC80211_MESH


547 
BIT
(
NL80211_IFTYPE_MESH_POINT
) |

549 
BIT
(
NL80211_IFTYPE_P2P_GO
) },

552 c⁄° 
õì80211_iÁ˚_combö©i⁄
 
	gif_comb
 = {

553 .
limôs
 = 
if_limôs
,

554 .
	gn_limôs
 = 
ARRAY_SIZE
(
if_limôs
),

555 .
	gmax_öãrÁ˚s
 = 2,

556 .
	gnum_dif„ª¡_ch™√ls
 = 1,

559 
	$©h9k_£t_hw_ˇ∑b
(
©h9k_htc_¥iv
 *
¥iv
,

560 
õì80211_hw
 *
hw
)

562 
©h_hw
 *
ah
 = 
¥iv
->ah;

563 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

564 
ba£_ìp_hódî
 *
pBa£
;

566 
hw
->
Êags
 = 
IEEE80211_HW_SIGNAL_DBM
 |

567 
IEEE80211_HW_AMPDU_AGGREGATION
 |

568 
IEEE80211_HW_SPECTRUM_MGMT
 |

569 
IEEE80211_HW_HAS_RATE_CONTROL
 |

570 
IEEE80211_HW_RX_INCLUDES_FCS
 |

571 
IEEE80211_HW_PS_NULLFUNC_STACK
 |

572 
IEEE80211_HW_REPORTS_TX_ACK_STATUS
 |

573 
IEEE80211_HW_MFP_CAPABLE
 |

574 
IEEE80211_HW_HOST_BROADCAST_PS_BUFFERING
;

576 i‡(
©h9k_ps_íabÀ
)

577 
hw
->
Êags
 |
IEEE80211_HW_SUPPORTS_PS
;

579 
hw
->
wùhy
->
öãrÁ˚_modes
 =

580 
	`BIT
(
NL80211_IFTYPE_STATION
) |

581 
	`BIT
(
NL80211_IFTYPE_ADHOC
) |

582 
	`BIT
(
NL80211_IFTYPE_AP
) |

583 
	`BIT
(
NL80211_IFTYPE_P2P_GO
) |

584 
	`BIT
(
NL80211_IFTYPE_P2P_CLIENT
) |

585 
	`BIT
(
NL80211_IFTYPE_MESH_POINT
);

587 
hw
->
wùhy
->
iÁ˚_combö©i⁄s
 = &
if_comb
;

588 
hw
->
wùhy
->
n_iÁ˚_combö©i⁄s
 = 1;

590 
hw
->
wùhy
->
Êags
 &~
WIPHY_FLAG_PS_ON_BY_DEFAULT
;

592 
hw
->
wùhy
->
Êags
 |
WIPHY_FLAG_IBSS_RSN
 |

593 
WIPHY_FLAG_HAS_REMAIN_ON_CHANNEL
;

595 
hw
->
queues
 = 4;

596 
hw
->
max_li°í_öãrvÆ
 = 1;

598 
hw
->
vif_d©a_size
 = (
©h9k_htc_vif
);

599 
hw
->
°a_d©a_size
 = (
©h9k_htc_°a
);

602 
hw
->
exåa_tx_hódroom
 = (
tx_‰ame_hdr
) +

603 (
htc_‰ame_hdr
) + 4;

605 i‡(
¥iv
->
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_2GHZ
)

606 
hw
->
wùhy
->
b™ds
[
IEEE80211_BAND_2GHZ
] =

607 &
comm⁄
->
sb™ds
[
IEEE80211_BAND_2GHZ
];

608 i‡(
¥iv
->
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_5GHZ
)

609 
hw
->
wùhy
->
b™ds
[
IEEE80211_BAND_5GHZ
] =

610 &
comm⁄
->
sb™ds
[
IEEE80211_BAND_5GHZ
];

612 
	`©h9k_cmn_ªlﬂd_chaömask
(
ah
);

614 
pBa£
 = 
	`©h9k_htc_gë_ì¥om_ba£
(
¥iv
);

615 i‡(
pBa£
) {

616 
hw
->
wùhy
->
avaûabÀ_™ã¬as_rx
 = 
pBa£
->
rxMask
;

617 
hw
->
wùhy
->
avaûabÀ_™ã¬as_tx
 = 
pBa£
->
txMask
;

620 
	`SET_IEEE80211_PERM_ADDR
(
hw
, 
comm⁄
->
maˇddr
);

621 
	}
}

623 
	$©h9k_öô_fúmw¨e_vîsi⁄
(
©h9k_htc_¥iv
 *
¥iv
)

625 
õì80211_hw
 *
hw
 = 
¥iv
->hw;

626 
wmi_fw_vîsi⁄
 
cmd_r•
;

627 
ªt
;

629 
	`mem£t
(&
cmd_r•
, 0, (cmd_rsp));

631 
	`WMI_CMD
(
WMI_GET_FW_VERSION
);

632 i‡(
ªt
)

633  -
EINVAL
;

635 
¥iv
->
fw_vîsi⁄_maj‹
 = 
	`be16_to_˝u
(
cmd_r•
.
maj‹
);

636 
¥iv
->
fw_vîsi⁄_mö‹
 = 
	`be16_to_˝u
(
cmd_r•
.
mö‹
);

638 
	`¢¥ötf
(
hw
->
wùhy
->
fw_vîsi⁄
, (hw->wiphy->fw_version), "%d.%d",

639 
¥iv
->
fw_vîsi⁄_maj‹
,

640 
¥iv
->
fw_vîsi⁄_mö‹
);

642 
	`dev_öfo
(
¥iv
->
dev
, "ath9k_htc: FW Version: %d.%d\n",

643 
¥iv
->
fw_vîsi⁄_maj‹
,

644 
¥iv
->
fw_vîsi⁄_mö‹
);

650 i‡(
¥iv
->
fw_vîsi⁄_maj‹
 !
MAJOR_VERSION_REQ
 ||

651 
¥iv
->
fw_vîsi⁄_mö‹
 < 
MINOR_VERSION_REQ
) {

652 
	`dev_îr
(
¥iv
->
dev
, "ath9k_htc: Please upgradeÅo FW version %d.%d\n",

653 
MAJOR_VERSION_REQ
, 
MINOR_VERSION_REQ
);

654  -
EINVAL
;

658 
	}
}

660 
	$©h9k_öô_devi˚
(
©h9k_htc_¥iv
 *
¥iv
,

661 
u16
 
devid
, *
¥odu˘
, 
u32
 
drv_öfo
)

663 
õì80211_hw
 *
hw
 = 
¥iv
->hw;

664 
©h_comm⁄
 *
comm⁄
;

665 
©h_hw
 *
ah
;

666 
îr‹
 = 0;

667 
©h_ªguœt‹y
 *
ªg
;

668 
hw_«me
[64];

671 
îr‹
 = 
	`©h9k_öô_¥iv
(
¥iv
, 
devid
, 
¥odu˘
, 
drv_öfo
);

672 i‡(
îr‹
 != 0)

673 
îr_öô
;

675 
ah
 = 
¥iv
->ah;

676 
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

677 
	`©h9k_£t_hw_ˇ∑b
(
¥iv
, 
hw
);

679 
îr‹
 = 
	`©h9k_öô_fúmw¨e_vîsi⁄
(
¥iv
);

680 i‡(
îr‹
 != 0)

681 
îr_fw
;

684 
îr‹
 = 
	`©h_ªgd_öô
(&
comm⁄
->
ªguœt‹y
, 
¥iv
->
hw
->
wùhy
,

685 
©h9k_ªg_nŸifõr
);

686 i‡(
îr‹
)

687 
îr_ªgd
;

689 
ªg
 = &
comm⁄
->
ªguœt‹y
;

692 
îr‹
 = 
	`©h9k_tx_öô
(
¥iv
);

693 i‡(
îr‹
 != 0)

694 
îr_tx
;

697 
îr‹
 = 
	`©h9k_rx_öô
(
¥iv
);

698 i‡(
îr‹
 != 0)

699 
îr_rx
;

701 
	`©h9k_hw_dißbÀ
(
¥iv
->
ah
);

702 #ifde‡
CPTCFG_MAC80211_LEDS


704 
¥iv
->
Àd_cdev
.
deÁu…_åiggî
 = 
	`õì80211_¸óã_çt_Àd_åiggî
’riv->
hw
,

705 
IEEE80211_TPT_LEDTRIG_FL_RADIO
, 
©h9k_htc_çt_blök
,

706 
	`ARRAY_SIZE
(
©h9k_htc_çt_blök
));

710 
îr‹
 = 
	`õì80211_ªgi°î_hw
(
hw
);

711 i‡(
îr‹
)

712 
îr_ªgi°î
;

715 i‡(!
	`©h_is_w‹ld_ªgd
(
ªg
)) {

716 
îr‹
 = 
	`ªguœt‹y_höt
(
hw
->
wùhy
, 
ªg
->
Æpha2
);

717 i‡(
îr‹
)

718 
îr_w‹ld
;

721 
îr‹
 = 
	`©h9k_htc_öô_debug
(
¥iv
->
ah
);

722 i‡(
îr‹
) {

723 
	`©h_îr
(
comm⁄
, "UnableÅo create debugfs files\n");

724 
îr_w‹ld
;

727 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

729 
¥iv
->
wmi_cmd_ï
,

730 
¥iv
->
bóc⁄_ï
,

731 
¥iv
->
ˇb_ï
,

732 
¥iv
->
u≠sd_ï
,

733 
¥iv
->
mgmt_ï
,

734 
¥iv
->
d©a_be_ï
,

735 
¥iv
->
d©a_bk_ï
,

736 
¥iv
->
d©a_vi_ï
,

737 
¥iv
->
d©a_vo_ï
);

739 
	`©h9k_hw_«me
(
¥iv
->
ah
, 
hw_«me
, (hw_name));

740 
	`wùhy_öfo
(
hw
->
wùhy
, "%s\n", 
hw_«me
);

742 
	`©h9k_öô_Àds
(
¥iv
);

743 
	`©h9k_°¨t_rfkûl_pﬁl
(
¥iv
);

747 
îr_w‹ld
:

748 
	`õì80211_uƒegi°î_hw
(
hw
);

749 
îr_ªgi°î
:

750 
	`©h9k_rx_˛ónup
(
¥iv
);

751 
îr_rx
:

752 
	`©h9k_tx_˛ónup
(
¥iv
);

753 
îr_tx
:

755 
îr_ªgd
:

757 
îr_fw
:

758 
	`©h9k_deöô_¥iv
(
¥iv
);

759 
îr_öô
:

760  
îr‹
;

761 
	}
}

763 
	$©h9k_htc_¥obe_devi˚
(
htc_èrgë
 *
htc_h™dÀ
, 
devi˚
 *
dev
,

764 
u16
 
devid
, *
¥odu˘
, 
u32
 
drv_öfo
)

766 
õì80211_hw
 *
hw
;

767 
©h9k_htc_¥iv
 *
¥iv
;

768 
ªt
;

770 
hw
 = 
	`õì80211_Æloc_hw
((
©h9k_htc_¥iv
), &
©h9k_htc_›s
);

771 i‡(!
hw
)

772  -
ENOMEM
;

774 
¥iv
 = 
hw
->priv;

775 
¥iv
->
hw
 = hw;

776 
¥iv
->
htc
 = 
htc_h™dÀ
;

777 
¥iv
->
dev
 = dev;

778 
htc_h™dÀ
->
drv_¥iv
 = 
¥iv
;

779 
	`SET_IEEE80211_DEV
(
hw
, 
¥iv
->
dev
);

781 
ªt
 = 
	`©h9k_htc_waô_f‹_èrgë
(
¥iv
);

782 i‡(
ªt
)

783 
îr_‰ì
;

785 
¥iv
->
wmi
 = 
	`©h9k_öô_wmi
(priv);

786 i‡(!
¥iv
->
wmi
) {

787 
ªt
 = -
EINVAL
;

788 
îr_‰ì
;

791 
ªt
 = 
	`©h9k_öô_htc_£rvi˚s
(
¥iv
, 
devid
, 
drv_öfo
);

792 i‡(
ªt
)

793 
îr_öô
;

795 
ªt
 = 
	`©h9k_öô_devi˚
(
¥iv
, 
devid
, 
¥odu˘
, 
drv_öfo
);

796 i‡(
ªt
)

797 
îr_öô
;

801 
îr_öô
:

802 
	`©h9k_deöô_wmi
(
¥iv
);

803 
îr_‰ì
:

804 
	`õì80211_‰ì_hw
(
hw
);

805  
ªt
;

806 
	}
}

808 
	$©h9k_htc_disc⁄√˘_devi˚
(
htc_èrgë
 *
htc_h™dÀ
, 
boﬁ
 
hŸu≈lug
)

810 i‡(
htc_h™dÀ
->
drv_¥iv
) {

813 i‡(
hŸu≈lug
)

814 
htc_h™dÀ
->
drv_¥iv
->
ah
->
ah_Êags
 |
AH_UNPLUGGED
;

816 
	`©h9k_deöô_devi˚
(
htc_h™dÀ
->
drv_¥iv
);

817 
	`©h9k_deöô_wmi
(
htc_h™dÀ
->
drv_¥iv
);

818 
	`õì80211_‰ì_hw
(
htc_h™dÀ
->
drv_¥iv
->
hw
);

820 
	}
}

822 #ifde‡
CONFIG_PM


824 
	$©h9k_htc_su•íd
(
htc_èrgë
 *
htc_h™dÀ
)

826 
	`©h9k_htc_£çowî
(
htc_h™dÀ
->
drv_¥iv
, 
ATH9K_PM_FULL_SLEEP
);

827 
	}
}

829 
	$©h9k_htc_ªsume
(
htc_èrgë
 *
htc_h™dÀ
)

831 
©h9k_htc_¥iv
 *
¥iv
 = 
htc_h™dÀ
->
drv_¥iv
;

832 
ªt
;

834 
ªt
 = 
	`©h9k_htc_waô_f‹_èrgë
(
¥iv
);

835 i‡(
ªt
)

836  
ªt
;

838 
ªt
 = 
	`©h9k_öô_htc_£rvi˚s
(
¥iv
,Öriv->
ah
->
hw_vîsi⁄
.
devid
,

839 
¥iv
->
ah
->
hw_vîsi⁄
.
usbdev
);

840 
	`©h9k_c⁄figuª_Àds
(
¥iv
);

842  
ªt
;

843 
	}
}

846 
__öô
 
	$©h9k_htc_öô
()

848 i‡(
	`©h9k_hif_usb_öô
() < 0) {

849 
	`¥_îr
("No USB devices found, driverÇot installed\n");

850  -
ENODEV
;

854 
	}
}

855 
moduÀ_öô
(
©h9k_htc_öô
);

857 
__exô
 
	$©h9k_htc_exô
()

859 
	`©h9k_hif_usb_exô
();

860 
	`¥_öfo
("Driver unloaded\n");

861 
	}
}

862 
moduÀ_exô
(
©h9k_htc_exô
);

	@htc_drv_main.c

17 
	~"htc.h
"

24 
htc_phymode
 
	$©h9k_htc_gë_curmode
(
©h9k_htc_¥iv
 *
¥iv
,

25 
©h9k_ch™√l
 *
ich™
)

27 i‡(
	`IS_CHAN_5GHZ
(
ich™
))

28  
HTC_MODE_11NA
;

30  
HTC_MODE_11NG
;

31 
	}
}

33 
boﬁ
 
	$©h9k_htc_£çowî
(
©h9k_htc_¥iv
 *
¥iv
,

34 
©h9k_powî_mode
 
mode
)

36 
boﬁ
 
ªt
;

38 
	`muãx_lock
(&
¥iv
->
htc_pm_lock
);

39 
ªt
 = 
	`©h9k_hw_£çowî
(
¥iv
->
ah
, 
mode
);

40 
	`muãx_u∆ock
(&
¥iv
->
htc_pm_lock
);

42  
ªt
;

43 
	}
}

45 
	$©h9k_htc_ps_wakeup
(
©h9k_htc_¥iv
 *
¥iv
)

47 
	`muãx_lock
(&
¥iv
->
htc_pm_lock
);

48 i‡(++
¥iv
->
ps_u£cou¡
 != 1)

49 
u∆ock
;

50 
	`©h9k_hw_£çowî
(
¥iv
->
ah
, 
ATH9K_PM_AWAKE
);

52 
u∆ock
:

53 
	`muãx_u∆ock
(&
¥iv
->
htc_pm_lock
);

54 
	}
}

56 
	$©h9k_htc_ps_ª°‹e
(
©h9k_htc_¥iv
 *
¥iv
)

58 
boﬁ
 
ª£t
;

60 
	`muãx_lock
(&
¥iv
->
htc_pm_lock
);

61 i‡(--
¥iv
->
ps_u£cou¡
 != 0)

62 
u∆ock
;

64 i‡(
¥iv
->
ps_idÀ
) {

65 
	`©h9k_hw_£åxab‹t
(
¥iv
->
ah
, 
åue
);

66 
	`©h9k_hw_°›dm¨ecv
(
¥iv
->
ah
, &
ª£t
);

67 
	`©h9k_hw_£çowî
(
¥iv
->
ah
, 
ATH9K_PM_FULL_SLEEP
);

68 } i‡(
¥iv
->
ps_íabÀd
) {

69 
	`©h9k_hw_£çowî
(
¥iv
->
ah
, 
ATH9K_PM_NETWORK_SLEEP
);

72 
u∆ock
:

73 
	`muãx_u∆ock
(&
¥iv
->
htc_pm_lock
);

74 
	}
}

76 
	$©h9k_ps_w‹k
(
w‹k_°ru˘
 *
w‹k
)

78 
©h9k_htc_¥iv
 *
¥iv
 =

79 
	`c⁄èöî_of
(
w‹k
, 
©h9k_htc_¥iv
,

80 
ps_w‹k
);

81 
	`©h9k_htc_£çowî
(
¥iv
, 
ATH9K_PM_AWAKE
);

88 
	`©h9k_htc_£çowî
(
¥iv
, 
ATH9K_PM_NETWORK_SLEEP
);

89 
	}
}

91 
	$©h9k_htc_vif_ôî
(*
d©a
, 
u8
 *
mac
, 
õì80211_vif
 *
vif
)

93 
©h9k_htc_¥iv
 *
¥iv
 = 
d©a
;

94 
õì80211_bss_c⁄f
 *
bss_c⁄f
 = &
vif
->bss_conf;

96 i‡((
vif
->
ty≥
 =
NL80211_IFTYPE_AP
 ||

97 
vif
->
ty≥
 =
NL80211_IFTYPE_MESH_POINT
) &&

98 
bss_c⁄f
->
íabÀ_bóc⁄
) {

99 
¥iv
->
ªc⁄fig_bóc⁄
 = 
åue
;

100 
¥iv
->
ª¨m_™i
 = 
åue
;

103 i‡(
bss_c⁄f
->
assoc
) {

104 
¥iv
->
ª¨m_™i
 = 
åue
;

105 
¥iv
->
ªc⁄fig_bóc⁄
 = 
åue
;

107 
	}
}

109 
	$©h9k_htc_vif_ªc⁄fig
(
©h9k_htc_¥iv
 *
¥iv
)

111 
¥iv
->
ª¨m_™i
 = 
Ál£
;

112 
¥iv
->
ªc⁄fig_bóc⁄
 = 
Ál£
;

114 
	`õì80211_ôî©e_a˘ive_öãrÁ˚s_©omic
(

115 
¥iv
->
hw
, 
IEEE80211_IFACE_ITER_RESUME_ALL
,

116 
©h9k_htc_vif_ôî
, 
¥iv
);

117 i‡(
¥iv
->
ª¨m_™i
)

118 
	`©h9k_htc_°¨t_™i
(
¥iv
);

120 i‡(
¥iv
->
ªc⁄fig_bóc⁄
) {

121 
	`©h9k_htc_ps_wakeup
(
¥iv
);

122 
	`©h9k_htc_bóc⁄_ªc⁄fig
(
¥iv
);

123 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

125 
	}
}

127 
	$©h9k_htc_bssid_ôî
(*
d©a
, 
u8
 *
mac
, 
õì80211_vif
 *
vif
)

129 
©h9k_vif_ôî_d©a
 *
ôî_d©a
 = 
d©a
;

130 
i
;

132 i‡(
ôî_d©a
->
hw_maˇddr
 !
NULL
) {

133 
i
 = 0; i < 
ETH_ALEN
; i++)

134 
ôî_d©a
->
mask
[
i
] &~(ôî_d©a->
hw_maˇddr
[i] ^ 
mac
[i]);

136 
ôî_d©a
->
hw_maˇddr
 = 
mac
;

138 
	}
}

140 
	$©h9k_htc_£t_mac_bssid_mask
(
©h9k_htc_¥iv
 *
¥iv
,

141 
õì80211_vif
 *
vif
)

143 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

144 
©h9k_vif_ôî_d©a
 
ôî_d©a
;

151 
ôî_d©a
.
hw_maˇddr
 = 
NULL
;

152 
	`mem£t
(&
ôî_d©a
.
mask
, 0xff, 
ETH_ALEN
);

154 i‡(
vif
)

155 
	`©h9k_htc_bssid_ôî
(&
ôî_d©a
, 
vif
->
addr
, vif);

158 
	`õì80211_ôî©e_a˘ive_öãrÁ˚s_©omic
(

159 
¥iv
->
hw
, 
IEEE80211_IFACE_ITER_RESUME_ALL
,

160 
©h9k_htc_bssid_ôî
, &
ôî_d©a
);

162 
	`mem˝y
(
comm⁄
->
bssidmask
, 
ôî_d©a
.
mask
, 
ETH_ALEN
);

164 i‡(
ôî_d©a
.
hw_maˇddr
)

165 
	`mem˝y
(
comm⁄
->
maˇddr
, 
ôî_d©a
.
hw_maˇddr
, 
ETH_ALEN
);

167 
	`©h_hw_£tbssidmask
(
comm⁄
);

168 
	}
}

170 
	$©h9k_htc_£t_›mode
(
©h9k_htc_¥iv
 *
¥iv
)

172 i‡(
¥iv
->
num_ibss_vif
)

173 
¥iv
->
ah
->
›mode
 = 
NL80211_IFTYPE_ADHOC
;

174 i‡(
¥iv
->
num_≠_vif
)

175 
¥iv
->
ah
->
›mode
 = 
NL80211_IFTYPE_AP
;

176 i‡(
¥iv
->
num_mbss_vif
)

177 
¥iv
->
ah
->
›mode
 = 
NL80211_IFTYPE_MESH_POINT
;

179 
¥iv
->
ah
->
›mode
 = 
NL80211_IFTYPE_STATION
;

181 
	`©h9k_hw_£t›mode
(
¥iv
->
ah
);

182 
	}
}

184 
	$©h9k_htc_ª£t
(
©h9k_htc_¥iv
 *
¥iv
)

186 
©h_hw
 *
ah
 = 
¥iv
->ah;

187 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

188 
õì80211_ch™√l
 *
ch™√l
 = 
¥iv
->
hw
->
c⁄f
.
ch™def
.
ch™
;

189 
©h9k_hw_ˇl_d©a
 *
ˇld©a
 = 
NULL
;

190 
htc_phymode
 
mode
;

191 
__be16
 
htc_mode
;

192 
u8
 
cmd_r•
;

193 
ªt
;

195 
	`muãx_lock
(&
¥iv
->
muãx
);

196 
	`©h9k_htc_ps_wakeup
(
¥iv
);

198 
	`©h9k_htc_°›_™i
(
¥iv
);

199 
	`õì80211_°›_queues
(
¥iv
->
hw
);

201 
	`dñ_timî_sync
(&
¥iv
->
tx
.
˛ónup_timî
);

202 
	`©h9k_htc_tx_døö
(
¥iv
);

204 
	`WMI_CMD
(
WMI_DISABLE_INTR_CMDID
);

205 
	`WMI_CMD
(
WMI_DRAIN_TXQ_ALL_CMDID
);

206 
	`WMI_CMD
(
WMI_STOP_RECV_CMDID
);

208 
	`©h9k_wmi_evít_døö
(
¥iv
);

210 
ˇld©a
 = &
¥iv
->caldata;

211 
ªt
 = 
	`©h9k_hw_ª£t
(
ah
,áh->
curch™
, 
ˇld©a
, 
Ál£
);

212 i‡(
ªt
) {

213 
	`©h_îr
(
comm⁄
,

215 
ch™√l
->
˚¡î_‰eq
, 
ªt
);

218 
	`©h9k_cmn_upd©e_txpow
(
ah
, 
¥iv
->
cuπxpow
,Öriv->
txpowlimô
,

219 &
¥iv
->
cuπxpow
);

221 
	`WMI_CMD
(
WMI_START_RECV_CMDID
);

222 
	`©h9k_ho°_rx_öô
(
¥iv
);

224 
mode
 = 
	`©h9k_htc_gë_curmode
(
¥iv
, 
ah
->
curch™
);

225 
htc_mode
 = 
	`˝u_to_be16
(
mode
);

226 
	`WMI_CMD_BUF
(
WMI_SET_MODE_CMDID
, &
htc_mode
);

228 
	`WMI_CMD
(
WMI_ENABLE_INTR_CMDID
);

229 
	`htc_°¨t
(
¥iv
->
htc
);

230 
	`©h9k_htc_vif_ªc⁄fig
(
¥iv
);

231 
	`õì80211_wake_queues
(
¥iv
->
hw
);

233 
	`mod_timî
(&
¥iv
->
tx
.
˛ónup_timî
,

234 
jiffõs
 + 
	`m£cs_to_jiffõs
(
ATH9K_HTC_TX_CLEANUP_INTERVAL
));

236 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

237 
	`muãx_u∆ock
(&
¥iv
->
muãx
);

238 
	}
}

240 
	$©h9k_htc_£t_ch™√l
(
©h9k_htc_¥iv
 *
¥iv
,

241 
õì80211_hw
 *
hw
,

242 
©h9k_ch™√l
 *
hch™
)

244 
©h_hw
 *
ah
 = 
¥iv
->ah;

245 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

246 
õì80211_c⁄f
 *
c⁄f
 = &
comm⁄
->
hw
->conf;

247 
boﬁ
 
Á°cc
;

248 
õì80211_ch™√l
 *
ch™√l
 = 
hw
->
c⁄f
.
ch™def
.
ch™
;

249 
©h9k_hw_ˇl_d©a
 *
ˇld©a
 = 
NULL
;

250 
htc_phymode
 
mode
;

251 
__be16
 
htc_mode
;

252 
u8
 
cmd_r•
;

253 
ªt
;

255 i‡(
	`ã°_bô
(
ATH_OP_INVALID
, &
comm⁄
->
›_Êags
))

256  -
EIO
;

258 
Á°cc
 = !!(
hw
->
c⁄f
.
Êags
 & 
IEEE80211_CONF_OFFCHANNEL
);

260 
	`©h9k_htc_ps_wakeup
(
¥iv
);

262 
	`©h9k_htc_°›_™i
(
¥iv
);

263 
	`dñ_timî_sync
(&
¥iv
->
tx
.
˛ónup_timî
);

264 
	`©h9k_htc_tx_døö
(
¥iv
);

266 
	`WMI_CMD
(
WMI_DISABLE_INTR_CMDID
);

267 
	`WMI_CMD
(
WMI_DRAIN_TXQ_ALL_CMDID
);

268 
	`WMI_CMD
(
WMI_STOP_RECV_CMDID
);

270 
	`©h9k_wmi_evít_døö
(
¥iv
);

272 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

274 
¥iv
->
ah
->
curch™
->
ch™√l
,

275 
ch™√l
->
˚¡î_‰eq
, 
	`c⁄f_is_ht
(
c⁄f
), 
	`c⁄f_is_ht40
(conf),

276 
Á°cc
);

278 i‡(!
Á°cc
)

279 
ˇld©a
 = &
¥iv
->caldata;

281 
ªt
 = 
	`©h9k_hw_ª£t
(
ah
, 
hch™
, 
ˇld©a
, 
Á°cc
);

282 i‡(
ªt
) {

283 
	`©h_îr
(
comm⁄
,

285 
ch™√l
->
˚¡î_‰eq
, 
ªt
);

286 
îr
;

289 
	`©h9k_cmn_upd©e_txpow
(
ah
, 
¥iv
->
cuπxpow
,Öriv->
txpowlimô
,

290 &
¥iv
->
cuπxpow
);

292 
	`WMI_CMD
(
WMI_START_RECV_CMDID
);

293 i‡(
ªt
)

294 
îr
;

296 
	`©h9k_ho°_rx_öô
(
¥iv
);

298 
mode
 = 
	`©h9k_htc_gë_curmode
(
¥iv
, 
hch™
);

299 
htc_mode
 = 
	`˝u_to_be16
(
mode
);

300 
	`WMI_CMD_BUF
(
WMI_SET_MODE_CMDID
, &
htc_mode
);

301 i‡(
ªt
)

302 
îr
;

304 
	`WMI_CMD
(
WMI_ENABLE_INTR_CMDID
);

305 i‡(
ªt
)

306 
îr
;

308 
	`htc_°¨t
(
¥iv
->
htc
);

310 i‡(!
	`ã°_bô
(
ATH_OP_SCANNING
, &
comm⁄
->
›_Êags
) &&

311 !(
hw
->
c⁄f
.
Êags
 & 
IEEE80211_CONF_OFFCHANNEL
))

312 
	`©h9k_htc_vif_ªc⁄fig
(
¥iv
);

314 
	`mod_timî
(&
¥iv
->
tx
.
˛ónup_timî
,

315 
jiffõs
 + 
	`m£cs_to_jiffõs
(
ATH9K_HTC_TX_CLEANUP_INTERVAL
));

317 
îr
:

318 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

319  
ªt
;

320 
	}
}

329 
	$__©h9k_htc_ªmove_m⁄ô‹_öãrÁ˚
(
©h9k_htc_¥iv
 *
¥iv
)

331 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

332 
©h9k_htc_èrgë_vif
 
hvif
;

333 
ªt
 = 0;

334 
u8
 
cmd_r•
;

336 
	`mem£t
(&
hvif
, 0, (
©h9k_htc_èrgë_vif
));

337 
	`mem˝y
(&
hvif
.
myaddr
, 
comm⁄
->
maˇddr
, 
ETH_ALEN
);

338 
hvif
.
ödex
 = 
¥iv
->
m⁄_vif_idx
;

339 
	`WMI_CMD_BUF
(
WMI_VAP_REMOVE_CMDID
, &
hvif
);

340 i‡(
ªt
) {

341 
	`©h_îr
(
comm⁄
, "UnableÅoÑemove monitor interfaceát idx: %d\n",

342 
¥iv
->
m⁄_vif_idx
);

345 
¥iv
->
nvifs
--;

346 
¥iv
->
vif_¶Ÿ
 &~(1 <<Öriv->
m⁄_vif_idx
);

347 
	}
}

349 
	$©h9k_htc_add_m⁄ô‹_öãrÁ˚
(
©h9k_htc_¥iv
 *
¥iv
)

351 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

352 
©h9k_htc_èrgë_vif
 
hvif
;

353 
©h9k_htc_èrgë_°a
 
t°a
;

354 
ªt
 = 0, 
°a_idx
;

355 
u8
 
cmd_r•
;

357 i‡((
¥iv
->
nvifs
 >
ATH9K_HTC_MAX_VIF
) ||

358 (
¥iv
->
n°©i⁄s
 >
ATH9K_HTC_MAX_STA
)) {

359 
ªt
 = -
ENOBUFS
;

360 
îr_vif
;

363 
°a_idx
 = 
	`ffz
(
¥iv
->
°a_¶Ÿ
);

364 i‡((
°a_idx
 < 0Ë|| (°a_idx > 
ATH9K_HTC_MAX_STA
)) {

365 
ªt
 = -
ENOBUFS
;

366 
îr_vif
;

372 
	`mem£t
(&
hvif
, 0, (
©h9k_htc_èrgë_vif
));

373 
	`mem˝y
(&
hvif
.
myaddr
, 
comm⁄
->
maˇddr
, 
ETH_ALEN
);

375 
hvif
.
›mode
 = 
HTC_M_MONITOR
;

376 
hvif
.
ödex
 = 
	`ffz
(
¥iv
->
vif_¶Ÿ
);

378 
	`WMI_CMD_BUF
(
WMI_VAP_CREATE_CMDID
, &
hvif
);

379 i‡(
ªt
)

380 
îr_vif
;

386 
¥iv
->
m⁄_vif_idx
 = 
hvif
.
ödex
;

387 
¥iv
->
vif_¶Ÿ
 |(1 << 
hvif
.
ödex
);

393 i‡(!
¥iv
->
nvifs
)

394 
¥iv
->
ah
->
›mode
 = 
NL80211_IFTYPE_MONITOR
;

396 
¥iv
->
nvifs
++;

401 
	`mem£t
(&
t°a
, 0, (
©h9k_htc_èrgë_°a
));

403 
	`mem˝y
(&
t°a
.
maˇddr
, 
comm⁄
->maˇddr, 
ETH_ALEN
);

405 
t°a
.
is_vif_°a
 = 1;

406 
t°a
.
°a_ödex
 = 
°a_idx
;

407 
t°a
.
vif_ödex
 = 
hvif
.
ödex
;

408 
t°a
.
maxampdu
 = 
	`˝u_to_be16
(0xffff);

410 
	`WMI_CMD_BUF
(
WMI_NODE_CREATE_CMDID
, &
t°a
);

411 i‡(
ªt
) {

412 
	`©h_îr
(
comm⁄
, "UnableÅoádd stationÉntry for monitor mode\n");

413 
îr_°a
;

416 
¥iv
->
°a_¶Ÿ
 |(1 << 
°a_idx
);

417 
¥iv
->
n°©i⁄s
++;

418 
¥iv
->
vif_°a_pos
[¥iv->
m⁄_vif_idx
] = 
°a_idx
;

419 
¥iv
->
ah
->
is_m⁄ô‹ög
 = 
åue
;

421 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

423 
¥iv
->
m⁄_vif_idx
, 
°a_idx
);

427 
îr_°a
:

431 
	`__©h9k_htc_ªmove_m⁄ô‹_öãrÁ˚
(
¥iv
);

432 
îr_vif
:

433 
	`©h_dbg
(
comm⁄
, 
FATAL
, "UnableÅoáttachá monitor interface\n");

435  
ªt
;

436 
	}
}

438 
	$©h9k_htc_ªmove_m⁄ô‹_öãrÁ˚
(
©h9k_htc_¥iv
 *
¥iv
)

440 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

441 
ªt
 = 0;

442 
u8
 
cmd_r•
, 
°a_idx
;

444 
	`__©h9k_htc_ªmove_m⁄ô‹_öãrÁ˚
(
¥iv
);

446 
°a_idx
 = 
¥iv
->
vif_°a_pos
[¥iv->
m⁄_vif_idx
];

448 
	`WMI_CMD_BUF
(
WMI_NODE_REMOVE_CMDID
, &
°a_idx
);

449 i‡(
ªt
) {

450 
	`©h_îr
(
comm⁄
, "UnableÅoÑemove stationÉntry for monitor mode\n");

451  
ªt
;

454 
¥iv
->
°a_¶Ÿ
 &~(1 << 
°a_idx
);

455 
¥iv
->
n°©i⁄s
--;

456 
¥iv
->
ah
->
is_m⁄ô‹ög
 = 
Ál£
;

458 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

460 
¥iv
->
m⁄_vif_idx
, 
°a_idx
);

463 
	}
}

465 
	$©h9k_htc_add_°©i⁄
(
©h9k_htc_¥iv
 *
¥iv
,

466 
õì80211_vif
 *
vif
,

467 
õì80211_°a
 *
°a
)

469 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

470 
©h9k_htc_èrgë_°a
 
t°a
;

471 
©h9k_htc_vif
 *
avp
 = (©h9k_htc_vi‡*Ë
vif
->
drv_¥iv
;

472 
©h9k_htc_°a
 *
i°a
;

473 
ªt
, 
°a_idx
;

474 
u8
 
cmd_r•
;

475 
u16
 
maxampdu
;

477 i‡(
¥iv
->
n°©i⁄s
 >
ATH9K_HTC_MAX_STA
)

478  -
ENOBUFS
;

480 
°a_idx
 = 
	`ffz
(
¥iv
->
°a_¶Ÿ
);

481 i‡((
°a_idx
 < 0Ë|| (°a_idx > 
ATH9K_HTC_MAX_STA
))

482  -
ENOBUFS
;

484 
	`mem£t
(&
t°a
, 0, (
©h9k_htc_èrgë_°a
));

486 i‡(
°a
) {

487 
i°a
 = (
©h9k_htc_°a
 *Ë
°a
->
drv_¥iv
;

488 
	`mem˝y
(&
t°a
.
maˇddr
, 
°a
->
addr
, 
ETH_ALEN
);

489 
	`mem˝y
(&
t°a
.
bssid
, 
comm⁄
->
curbssid
, 
ETH_ALEN
);

490 
i°a
->
ödex
 = 
°a_idx
;

491 
t°a
.
is_vif_°a
 = 0;

492 
maxampdu
 = 1 << (
IEEE80211_HT_MAX_AMPDU_FACTOR
 +

493 
°a
->
ht_ˇp
.
ampdu_Á˘‹
);

494 
t°a
.
maxampdu
 = 
	`˝u_to_be16
(maxampdu);

496 
	`mem˝y
(&
t°a
.
maˇddr
, 
vif
->
addr
, 
ETH_ALEN
);

497 
t°a
.
is_vif_°a
 = 1;

498 
t°a
.
maxampdu
 = 
	`˝u_to_be16
(0xffff);

501 
t°a
.
°a_ödex
 = 
°a_idx
;

502 
t°a
.
vif_ödex
 = 
avp
->
ödex
;

504 
	`WMI_CMD_BUF
(
WMI_NODE_CREATE_CMDID
, &
t°a
);

505 i‡(
ªt
) {

506 i‡(
°a
)

507 
	`©h_îr
(
comm⁄
,

509 
°a
->
addr
);

510  
ªt
;

513 i‡(
°a
) {

514 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

516 
°a
->
addr
, 
t°a
.
°a_ödex
);

518 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

520 
avp
->
ödex
, 
t°a
.
°a_ödex
);

523 
¥iv
->
°a_¶Ÿ
 |(1 << 
°a_idx
);

524 
¥iv
->
n°©i⁄s
++;

525 i‡(!
°a
)

526 
¥iv
->
vif_°a_pos
[
avp
->
ödex
] = 
°a_idx
;

529 
	}
}

531 
	$©h9k_htc_ªmove_°©i⁄
(
©h9k_htc_¥iv
 *
¥iv
,

532 
õì80211_vif
 *
vif
,

533 
õì80211_°a
 *
°a
)

535 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

536 
©h9k_htc_vif
 *
avp
 = (©h9k_htc_vi‡*Ë
vif
->
drv_¥iv
;

537 
©h9k_htc_°a
 *
i°a
;

538 
ªt
;

539 
u8
 
cmd_r•
, 
°a_idx
;

541 i‡(
°a
) {

542 
i°a
 = (
©h9k_htc_°a
 *Ë
°a
->
drv_¥iv
;

543 
°a_idx
 = 
i°a
->
ödex
;

545 
°a_idx
 = 
¥iv
->
vif_°a_pos
[
avp
->
ödex
];

548 
	`WMI_CMD_BUF
(
WMI_NODE_REMOVE_CMDID
, &
°a_idx
);

549 i‡(
ªt
) {

550 i‡(
°a
)

551 
	`©h_îr
(
comm⁄
,

553 
°a
->
addr
);

554  
ªt
;

557 i‡(
°a
) {

558 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

560 
°a
->
addr
, 
°a_idx
);

562 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

564 
avp
->
ödex
, 
°a_idx
);

567 
¥iv
->
°a_¶Ÿ
 &~(1 << 
°a_idx
);

568 
¥iv
->
n°©i⁄s
--;

571 
	}
}

573 
	$©h9k_htc_upd©e_ˇp_èrgë
(
©h9k_htc_¥iv
 *
¥iv
,

574 
u8
 
íabÀ_c€x
)

576 
©h9k_htc_ˇp_èrgë
 
tˇp
;

577 
ªt
;

578 
u8
 
cmd_r•
;

580 
	`mem£t
(&
tˇp
, 0, (
©h9k_htc_ˇp_èrgë
));

582 
tˇp
.
ampdu_limô
 = 
	`˝u_to_be32
(0xffff);

583 
tˇp
.
ampdu_sub‰ames
 = 0xff;

584 
tˇp
.
íabÀ_c€x
 =Énable_coex;

585 
tˇp
.
tx_chaömask
 = 
¥iv
->
ah
->
ˇps
.tx_chainmask;

587 
	`WMI_CMD_BUF
(
WMI_TARGET_IC_UPDATE_CMDID
, &
tˇp
);

589  
ªt
;

590 
	}
}

592 
	$©h9k_htc_£tup_øã
(
©h9k_htc_¥iv
 *
¥iv
,

593 
õì80211_°a
 *
°a
,

594 
©h9k_htc_èrgë_øã
 *
å©e
)

596 
©h9k_htc_°a
 *
i°a
 = (©h9k_htc_°®*Ë
°a
->
drv_¥iv
;

597 
õì80211_suµ‹ãd_b™d
 *
sb™d
;

598 
u32
 
ˇps
 = 0;

599 
i
, 
j
;

601 
sb™d
 = 
¥iv
->
hw
->
wùhy
->
b™ds
[¥iv->hw->
c⁄f
.
ch™def
.
ch™
->
b™d
];

603 
i
 = 0, 
j
 = 0; i < 
sb™d
->
n_bôøãs
; i++) {

604 i‡(
°a
->
suµ_øãs
[
sb™d
->
b™d
] & 
	`BIT
(
i
)) {

605 
å©e
->
øãs
.
Àgacy_øãs
.
rs_øãs
[
j
]

606 (
sb™d
->
bôøãs
[
i
].
bôøã
 * 2) / 10;

607 
j
++;

610 
å©e
->
øãs
.
Àgacy_øãs
.
rs_ƒ©es
 = 
j
;

612 i‡(
°a
->
ht_ˇp
.
ht_suµ‹ãd
) {

613 
i
 = 0, 
j
 = 0; i < 77; i++) {

614 i‡(
°a
->
ht_ˇp
.
mcs
.
rx_mask
[
i
/8] & (1<<(i%8)))

615 
å©e
->
øãs
.
ht_øãs
.
rs_øãs
[
j
++] = 
i
;

616 i‡(
j
 =
ATH_HTC_RATE_MAX
)

619 
å©e
->
øãs
.
ht_øãs
.
rs_ƒ©es
 = 
j
;

621 
ˇps
 = 
WLAN_RC_HT_FLAG
;

622 i‡(
°a
->
ht_ˇp
.
ˇp
 & 
IEEE80211_HT_CAP_RX_STBC
)

623 
ˇps
 |
ATH_RC_TX_STBC_FLAG
;

624 i‡(
°a
->
ht_ˇp
.
mcs
.
rx_mask
[1])

625 
ˇps
 |
WLAN_RC_DS_FLAG
;

626 i‡((
°a
->
ht_ˇp
.
ˇp
 & 
IEEE80211_HT_CAP_SUP_WIDTH_20_40
) &&

627 (
	`c⁄f_is_ht40
(&
¥iv
->
hw
->
c⁄f
)))

628 
ˇps
 |
WLAN_RC_40_FLAG
;

629 i‡(
	`c⁄f_is_ht40
(&
¥iv
->
hw
->
c⁄f
) &&

630 (
°a
->
ht_ˇp
.
ˇp
 & 
IEEE80211_HT_CAP_SGI_40
))

631 
ˇps
 |
WLAN_RC_SGI_FLAG
;

632 i‡(
	`c⁄f_is_ht20
(&
¥iv
->
hw
->
c⁄f
) &&

633 (
°a
->
ht_ˇp
.
ˇp
 & 
IEEE80211_HT_CAP_SGI_20
))

634 
ˇps
 |
WLAN_RC_SGI_FLAG
;

637 
å©e
->
°a_ödex
 = 
i°a
->
ödex
;

638 
å©e
->
i¢ew
 = 1;

639 
å©e
->
ˇpÊags
 = 
	`˝u_to_be32
(
ˇps
);

640 
	}
}

642 
	$©h9k_htc_£nd_øã_cmd
(
©h9k_htc_¥iv
 *
¥iv
,

643 
©h9k_htc_èrgë_øã
 *
å©e
)

645 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

646 
ªt
;

647 
u8
 
cmd_r•
;

649 
	`WMI_CMD_BUF
(
WMI_RC_RATE_UPDATE_CMDID
, 
å©e
);

650 i‡(
ªt
) {

651 
	`©h_îr
(
comm⁄
,

655  
ªt
;

656 
	}
}

658 
	$©h9k_htc_öô_øã
(
©h9k_htc_¥iv
 *
¥iv
,

659 
õì80211_°a
 *
°a
)

661 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

662 
©h9k_htc_èrgë_øã
 
å©e
;

663 
ªt
;

665 
	`mem£t
(&
å©e
, 0, (
©h9k_htc_èrgë_øã
));

666 
	`©h9k_htc_£tup_øã
(
¥iv
, 
°a
, &
å©e
);

667 
ªt
 = 
	`©h9k_htc_£nd_øã_cmd
(
¥iv
, &
å©e
);

668 i‡(!
ªt
)

669 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

671 
°a
->
addr
, 
	`be32_to_˝u
(
å©e
.
ˇpÊags
));

672 
	}
}

674 
	$©h9k_htc_upd©e_øã
(
©h9k_htc_¥iv
 *
¥iv
,

675 
õì80211_vif
 *
vif
,

676 
õì80211_bss_c⁄f
 *
bss_c⁄f
)

678 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

679 
©h9k_htc_èrgë_øã
 
å©e
;

680 
õì80211_°a
 *
°a
;

681 
ªt
;

683 
	`mem£t
(&
å©e
, 0, (
©h9k_htc_èrgë_øã
));

685 
	`rcu_ªad_lock
();

686 
°a
 = 
	`õì80211_föd_°a
(
vif
, 
bss_c⁄f
->
bssid
);

687 i‡(!
°a
) {

688 
	`rcu_ªad_u∆ock
();

691 
	`©h9k_htc_£tup_øã
(
¥iv
, 
°a
, &
å©e
);

692 
	`rcu_ªad_u∆ock
();

694 
ªt
 = 
	`©h9k_htc_£nd_øã_cmd
(
¥iv
, &
å©e
);

695 i‡(!
ªt
)

696 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

698 
bss_c⁄f
->
bssid
, 
	`be32_to_˝u
(
å©e
.
ˇpÊags
));

699 
	}
}

701 
	$©h9k_htc_tx_aggr_›î
(
©h9k_htc_¥iv
 *
¥iv
,

702 
õì80211_vif
 *
vif
,

703 
õì80211_°a
 *
°a
,

704 
õì80211_ampdu_mlme_a˘i⁄
 
a˘i⁄
,

705 
u16
 
tid
)

707 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

708 
©h9k_htc_èrgë_aggr
 
aggr
;

709 
©h9k_htc_°a
 *
i°a
;

710 
ªt
 = 0;

711 
u8
 
cmd_r•
;

713 i‡(
tid
 >
ATH9K_HTC_MAX_TID
)

714  -
EINVAL
;

716 
	`mem£t
(&
aggr
, 0, (
©h9k_htc_èrgë_aggr
));

717 
i°a
 = (
©h9k_htc_°a
 *Ë
°a
->
drv_¥iv
;

719 
aggr
.
°a_ödex
 = 
i°a
->
ödex
;

720 
aggr
.
tidno
 = 
tid
 & 0xf;

721 
aggr
.
aggr_íabÀ
 = (
a˘i⁄
 =
IEEE80211_AMPDU_TX_START
Ë? 
åue
 : 
Ál£
;

723 
	`WMI_CMD_BUF
(
WMI_TX_AGGR_ENABLE_CMDID
, &
aggr
);

724 i‡(
ªt
)

725 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

727 (
aggr
.
aggr_íabÀ
Ë? "°¨t" : "°›", 
°a
->
addr
, 
tid
);

729 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

731 (
aggr
.
aggr_íabÀ
) ? "Starting" : "Stopping",

732 
°a
->
addr
, 
tid
);

734 
	`•ö_lock_bh
(&
¥iv
->
tx
.
tx_lock
);

735 
i°a
->
tid_°©e
[
tid
] = (
aggr
.
aggr_íabÀ
 && !
ªt
Ë? 
AGGR_START
 : 
AGGR_STOP
;

736 
	`•ö_u∆ock_bh
(&
¥iv
->
tx
.
tx_lock
);

738  
ªt
;

739 
	}
}

745 
	$©h9k_htc_°¨t_™i
(
©h9k_htc_¥iv
 *
¥iv
)

747 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

748 
time°amp
 = 
	`jiffõs_to_m£cs
(
jiffõs
);

750 
comm⁄
->
™i
.
l⁄gˇl_timî
 = 
time°amp
;

751 
comm⁄
->
™i
.
sh‹tˇl_timî
 = 
time°amp
;

752 
comm⁄
->
™i
.
check™i_timî
 = 
time°amp
;

754 
	`£t_bô
(
ATH_OP_ANI_RUN
, &
comm⁄
->
›_Êags
);

756 
	`õì80211_queue_dñayed_w‹k
(
comm⁄
->
hw
, &
¥iv
->
™i_w‹k
,

757 
	`m£cs_to_jiffõs
(
ATH_ANI_POLLINTERVAL
));

758 
	}
}

760 
	$©h9k_htc_°›_™i
(
©h9k_htc_¥iv
 *
¥iv
)

762 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

763 
	`ˇn˚l_dñayed_w‹k_sync
(&
¥iv
->
™i_w‹k
);

764 
	`˛ór_bô
(
ATH_OP_ANI_RUN
, &
comm⁄
->
›_Êags
);

765 
	}
}

767 
	$©h9k_htc_™i_w‹k
(
w‹k_°ru˘
 *
w‹k
)

769 
©h9k_htc_¥iv
 *
¥iv
 =

770 
	`c⁄èöî_of
(
w‹k
, 
©h9k_htc_¥iv
, 
™i_w‹k
.work);

771 
©h_hw
 *
ah
 = 
¥iv
->ah;

772 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

773 
boﬁ
 
l⁄gˇl
 = 
Ál£
;

774 
boﬁ
 
sh‹tˇl
 = 
Ál£
;

775 
boﬁ
 
™iÊag
 = 
Ál£
;

776 
time°amp
 = 
	`jiffõs_to_m£cs
(
jiffõs
);

777 
u32
 
ˇl_öãrvÆ
, 
sh‹t_ˇl_öãrvÆ
;

779 
sh‹t_ˇl_öãrvÆ
 = (
ah
->
›mode
 =
NL80211_IFTYPE_AP
) ?

780 
ATH_AP_SHORT_CALINTERVAL
 : 
ATH_STA_SHORT_CALINTERVAL
;

783 i‡(
ah
->
powî_mode
 !
ATH9K_PM_AWAKE
)

784 
£t_timî
;

787 i‡((
time°amp
 - 
comm⁄
->
™i
.
l⁄gˇl_timî
Ë>
ATH_LONG_CALINTERVAL
) {

788 
l⁄gˇl
 = 
åue
;

789 
	`©h_dbg
(
comm⁄
, 
ANI
, "l⁄gˇ»@%lu\n", 
jiffõs
);

790 
comm⁄
->
™i
.
l⁄gˇl_timî
 = 
time°amp
;

794 i‡(!
comm⁄
->
™i
.
ˇld⁄e
) {

795 i‡((
time°amp
 - 
comm⁄
->
™i
.
sh‹tˇl_timî
) >=

796 
sh‹t_ˇl_öãrvÆ
) {

797 
sh‹tˇl
 = 
åue
;

798 
	`©h_dbg
(
comm⁄
, 
ANI
, "sh‹tˇ»@%lu\n", 
jiffõs
);

799 
comm⁄
->
™i
.
sh‹tˇl_timî
 = 
time°amp
;

800 
comm⁄
->
™i
.
ª£tˇl_timî
 = 
time°amp
;

803 i‡((
time°amp
 - 
comm⁄
->
™i
.
ª£tˇl_timî
) >=

804 
ATH_RESTART_CALINTERVAL
) {

805 
comm⁄
->
™i
.
ˇld⁄e
 = 
	`©h9k_hw_ª£t_ˇlvÆid
(
ah
);

806 i‡(
comm⁄
->
™i
.
ˇld⁄e
)

807 
comm⁄
->
™i
.
ª£tˇl_timî
 = 
time°amp
;

812 i‡((
time°amp
 - 
comm⁄
->
™i
.
check™i_timî
Ë>
ATH_ANI_POLLINTERVAL
) {

813 
™iÊag
 = 
åue
;

814 
comm⁄
->
™i
.
check™i_timî
 = 
time°amp
;

818 i‡(
l⁄gˇl
 || 
sh‹tˇl
 || 
™iÊag
) {

820 
	`©h9k_htc_ps_wakeup
(
¥iv
);

823 i‡(
™iÊag
)

824 
	`©h9k_hw_™i_m⁄ô‹
(
ah
,áh->
curch™
);

827 i‡(
l⁄gˇl
 || 
sh‹tˇl
)

828 
comm⁄
->
™i
.
ˇld⁄e
 =

829 
	`©h9k_hw_ˇlibøã
(
ah
,áh->
curch™
,

830 
ah
->
rxchaömask
, 
l⁄gˇl
);

832 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

835 
£t_timî
:

841 
ˇl_öãrvÆ
 = 
ATH_LONG_CALINTERVAL
;

842 
ˇl_öãrvÆ
 = 
	`mö
(ˇl_öãrvÆ, (
u32
)
ATH_ANI_POLLINTERVAL
);

843 i‡(!
comm⁄
->
™i
.
ˇld⁄e
)

844 
ˇl_öãrvÆ
 = 
	`mö
(ˇl_öãrvÆ, (
u32
)
sh‹t_ˇl_öãrvÆ
);

846 
	`õì80211_queue_dñayed_w‹k
(
comm⁄
->
hw
, &
¥iv
->
™i_w‹k
,

847 
	`m£cs_to_jiffõs
(
ˇl_öãrvÆ
));

848 
	}
}

854 
	$©h9k_htc_tx
(
õì80211_hw
 *
hw
,

855 
õì80211_tx_c⁄åﬁ
 *
c⁄åﬁ
,

856 
sk_buff
 *
skb
)

858 
õì80211_hdr
 *
hdr
;

859 
©h9k_htc_¥iv
 *
¥iv
 = 
hw
->priv;

860 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

861 
∑dpos
, 
∑dsize
, 
ªt
, 
¶Ÿ
;

863 
hdr
 = (
õì80211_hdr
 *Ë
skb
->
d©a
;

866 
∑dpos
 = 
	`õì80211_hdæí
(
hdr
->
‰ame_c⁄åﬁ
);

867 
∑dsize
 = 
∑dpos
 & 3;

868 i‡(
∑dsize
 && 
skb
->
Àn
 > 
∑dpos
) {

869 i‡(
	`skb_hódroom
(
skb
Ë< 
∑dsize
) {

870 
	`©h_dbg
(
comm⁄
, 
XMIT
, "NoÑoom forÖadding\n");

871 
Áû_tx
;

873 
	`skb_push
(
skb
, 
∑dsize
);

874 
	`memmove
(
skb
->
d©a
, skb->d©®+ 
∑dsize
, 
∑dpos
);

877 
¶Ÿ
 = 
	`©h9k_htc_tx_gë_¶Ÿ
(
¥iv
);

878 i‡(
¶Ÿ
 < 0) {

879 
	`©h_dbg
(
comm⁄
, 
XMIT
, "No free TX slot\n");

880 
Áû_tx
;

883 
ªt
 = 
	`©h9k_htc_tx_°¨t
(
¥iv
, 
c⁄åﬁ
->
°a
, 
skb
, 
¶Ÿ
, 
Ál£
);

884 i‡(
ªt
 != 0) {

885 
	`©h_dbg
(
comm⁄
, 
XMIT
, "Tx failed\n");

886 
˛ór_¶Ÿ
;

889 
	`©h9k_htc_check_°›_queues
(
¥iv
);

893 
˛ór_¶Ÿ
:

894 
	`©h9k_htc_tx_˛ór_¶Ÿ
(
¥iv
, 
¶Ÿ
);

895 
Áû_tx
:

896 
	`dev_k‰ì_skb_™y
(
skb
);

897 
	}
}

899 
	$©h9k_htc_°¨t
(
õì80211_hw
 *
hw
)

901 
©h9k_htc_¥iv
 *
¥iv
 = 
hw
->priv;

902 
©h_hw
 *
ah
 = 
¥iv
->ah;

903 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

904 
õì80211_ch™√l
 *
curch™
 = 
hw
->
c⁄f
.
ch™def
.
ch™
;

905 
©h9k_ch™√l
 *
öô_ch™√l
;

906 
ªt
 = 0;

907 
htc_phymode
 
mode
;

908 
__be16
 
htc_mode
;

909 
u8
 
cmd_r•
;

911 
	`muãx_lock
(&
¥iv
->
muãx
);

913 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

915 
curch™
->
˚¡î_‰eq
);

918 
	`©h9k_htc_£çowî
(
¥iv
, 
ATH9K_PM_AWAKE
);

919 
	`WMI_CMD
(
WMI_FLUSH_RECV_CMDID
);

922 
öô_ch™√l
 = 
	`©h9k_cmn_gë_ch™√l
(
hw
, 
ah
, &hw->
c⁄f
.
ch™def
);

924 
ªt
 = 
	`©h9k_hw_ª£t
(
ah
, 
öô_ch™√l
,áh->
ˇld©a
, 
Ál£
);

925 i‡(
ªt
) {

926 
	`©h_îr
(
comm⁄
,

928 
ªt
, 
curch™
->
˚¡î_‰eq
);

929 
	`muãx_u∆ock
(&
¥iv
->
muãx
);

930  
ªt
;

933 
	`©h9k_cmn_upd©e_txpow
(
ah
, 
¥iv
->
cuπxpow
,Öriv->
txpowlimô
,

934 &
¥iv
->
cuπxpow
);

936 
mode
 = 
	`©h9k_htc_gë_curmode
(
¥iv
, 
öô_ch™√l
);

937 
htc_mode
 = 
	`˝u_to_be16
(
mode
);

938 
	`WMI_CMD_BUF
(
WMI_SET_MODE_CMDID
, &
htc_mode
);

939 
	`WMI_CMD
(
WMI_ATH_INIT_CMDID
);

940 
	`WMI_CMD
(
WMI_START_RECV_CMDID
);

942 
	`©h9k_ho°_rx_öô
(
¥iv
);

944 
ªt
 = 
	`©h9k_htc_upd©e_ˇp_èrgë
(
¥iv
, 0);

945 i‡(
ªt
)

946 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

949 
	`˛ór_bô
(
ATH_OP_INVALID
, &
comm⁄
->
›_Êags
);

950 
	`htc_°¨t
(
¥iv
->
htc
);

952 
	`•ö_lock_bh
(&
¥iv
->
tx
.
tx_lock
);

953 
¥iv
->
tx
.
Êags
 &~
ATH9K_HTC_OP_TX_QUEUES_STOP
;

954 
	`•ö_u∆ock_bh
(&
¥iv
->
tx
.
tx_lock
);

956 
	`õì80211_wake_queues
(
hw
);

958 
	`mod_timî
(&
¥iv
->
tx
.
˛ónup_timî
,

959 
jiffõs
 + 
	`m£cs_to_jiffõs
(
ATH9K_HTC_TX_CLEANUP_INTERVAL
));

961 
	`©h9k_htc_°¨t_btc€x
(
¥iv
);

963 
	`muãx_u∆ock
(&
¥iv
->
muãx
);

965  
ªt
;

966 
	}
}

968 
	$©h9k_htc_°›
(
õì80211_hw
 *
hw
)

970 
©h9k_htc_¥iv
 *
¥iv
 = 
hw
->priv;

971 
©h_hw
 *
ah
 = 
¥iv
->ah;

972 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

973 
ªt
 
	`__©åibuã__
 ((
unu£d
));

974 
u8
 
cmd_r•
;

976 
	`muãx_lock
(&
¥iv
->
muãx
);

978 i‡(
	`ã°_bô
(
ATH_OP_INVALID
, &
comm⁄
->
›_Êags
)) {

979 
	`©h_dbg
(
comm⁄
, 
ANY
, "DeviceÇotÖresent\n");

980 
	`muãx_u∆ock
(&
¥iv
->
muãx
);

984 
	`©h9k_htc_ps_wakeup
(
¥iv
);

986 
	`WMI_CMD
(
WMI_DISABLE_INTR_CMDID
);

987 
	`WMI_CMD
(
WMI_DRAIN_TXQ_ALL_CMDID
);

988 
	`WMI_CMD
(
WMI_STOP_RECV_CMDID
);

990 
	`èskÀt_kûl
(&
¥iv
->
rx_èskÀt
);

992 
	`dñ_timî_sync
(&
¥iv
->
tx
.
˛ónup_timî
);

993 
	`©h9k_htc_tx_døö
(
¥iv
);

994 
	`©h9k_wmi_evít_døö
(
¥iv
);

996 
	`muãx_u∆ock
(&
¥iv
->
muãx
);

999 
	`ˇn˚l_w‹k_sync
(&
¥iv
->
Áèl_w‹k
);

1000 
	`ˇn˚l_w‹k_sync
(&
¥iv
->
ps_w‹k
);

1002 #ifde‡
CPTCFG_MAC80211_LEDS


1003 
	`ˇn˚l_w‹k_sync
(&
¥iv
->
Àd_w‹k
);

1005 
	`©h9k_htc_°›_™i
(
¥iv
);

1007 
	`muãx_lock
(&
¥iv
->
muãx
);

1009 
	`©h9k_htc_°›_btc€x
(
¥iv
);

1012 i‡(
¥iv
->
ah
->
is_m⁄ô‹ög
)

1013 
	`©h9k_htc_ªmove_m⁄ô‹_öãrÁ˚
(
¥iv
);

1015 
	`©h9k_hw_phy_dißbÀ
(
ah
);

1016 
	`©h9k_hw_dißbÀ
(
ah
);

1017 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

1018 
	`©h9k_htc_£çowî
(
¥iv
, 
ATH9K_PM_FULL_SLEEP
);

1020 
	`£t_bô
(
ATH_OP_INVALID
, &
comm⁄
->
›_Êags
);

1022 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "Driver halt\n");

1023 
	`muãx_u∆ock
(&
¥iv
->
muãx
);

1024 
	}
}

1026 
	$©h9k_htc_add_öãrÁ˚
(
õì80211_hw
 *
hw
,

1027 
õì80211_vif
 *
vif
)

1029 
©h9k_htc_¥iv
 *
¥iv
 = 
hw
->priv;

1030 
©h9k_htc_vif
 *
avp
 = (*)
vif
->
drv_¥iv
;

1031 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

1032 
©h9k_htc_èrgë_vif
 
hvif
;

1033 
ªt
 = 0;

1034 
u8
 
cmd_r•
;

1036 
	`muãx_lock
(&
¥iv
->
muãx
);

1038 
	`©h9k_htc_ps_wakeup
(
¥iv
);

1039 
	`mem£t
(&
hvif
, 0, (
©h9k_htc_èrgë_vif
));

1040 
	`mem˝y
(&
hvif
.
myaddr
, 
vif
->
addr
, 
ETH_ALEN
);

1042 
vif
->
ty≥
) {

1043 
NL80211_IFTYPE_STATION
:

1044 
hvif
.
›mode
 = 
HTC_M_STA
;

1046 
NL80211_IFTYPE_ADHOC
:

1047 
hvif
.
›mode
 = 
HTC_M_IBSS
;

1049 
NL80211_IFTYPE_AP
:

1050 
hvif
.
›mode
 = 
HTC_M_HOSTAP
;

1052 
NL80211_IFTYPE_MESH_POINT
:

1053 
hvif
.
›mode
 = 
HTC_M_WDS
;

1056 
	`©h_îr
(
comm⁄
,

1057 "I¡îÁ˚Åy≥ %dÇŸ yë suµ‹ãd\n", 
vif
->
ty≥
);

1058 
ªt
 = -
EOPNOTSUPP
;

1059 
out
;

1063 
avp
->
ödex
 = 
hvif
.ödex = 
	`ffz
(
¥iv
->
vif_¶Ÿ
);

1064 
hvif
.
π°hªshﬁd
 = 
	`˝u_to_be16
(2304);

1065 
	`WMI_CMD_BUF
(
WMI_VAP_CREATE_CMDID
, &
hvif
);

1066 i‡(
ªt
)

1067 
out
;

1073 
ªt
 = 
	`©h9k_htc_add_°©i⁄
(
¥iv
, 
vif
, 
NULL
);

1074 i‡(
ªt
) {

1075 
	`WMI_CMD_BUF
(
WMI_VAP_REMOVE_CMDID
, &
hvif
);

1076 
out
;

1079 
	`©h9k_htc_£t_mac_bssid_mask
(
¥iv
, 
vif
);

1081 
¥iv
->
vif_¶Ÿ
 |(1 << 
avp
->
ödex
);

1082 
¥iv
->
nvifs
++;

1084 
	`INC_VIF
(
¥iv
, 
vif
->
ty≥
);

1086 i‡((
vif
->
ty≥
 =
NL80211_IFTYPE_AP
) ||

1087 (
vif
->
ty≥
 =
NL80211_IFTYPE_MESH_POINT
) ||

1088 (
vif
->
ty≥
 =
NL80211_IFTYPE_ADHOC
))

1089 
	`©h9k_htc_assign_b¶Ÿ
(
¥iv
, 
vif
);

1091 
	`©h9k_htc_£t_›mode
(
¥iv
);

1093 i‡((
¥iv
->
ah
->
›mode
 =
NL80211_IFTYPE_AP
) &&

1094 !
	`ã°_bô
(
ATH_OP_ANI_RUN
, &
comm⁄
->
›_Êags
)) {

1095 
	`©h9k_hw_£t_tsÁdju°
(
¥iv
->
ah
, 
åue
);

1096 
	`©h9k_htc_°¨t_™i
(
¥iv
);

1099 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "Attachá VIF ofÅype: %dát idx: %d\n",

1100 
vif
->
ty≥
, 
avp
->
ödex
);

1102 
out
:

1103 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

1104 
	`muãx_u∆ock
(&
¥iv
->
muãx
);

1106  
ªt
;

1107 
	}
}

1109 
	$©h9k_htc_ªmove_öãrÁ˚
(
õì80211_hw
 *
hw
,

1110 
õì80211_vif
 *
vif
)

1112 
©h9k_htc_¥iv
 *
¥iv
 = 
hw
->priv;

1113 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

1114 
©h9k_htc_vif
 *
avp
 = (*)
vif
->
drv_¥iv
;

1115 
©h9k_htc_èrgë_vif
 
hvif
;

1116 
ªt
 = 0;

1117 
u8
 
cmd_r•
;

1119 
	`muãx_lock
(&
¥iv
->
muãx
);

1120 
	`©h9k_htc_ps_wakeup
(
¥iv
);

1122 
	`mem£t
(&
hvif
, 0, (
©h9k_htc_èrgë_vif
));

1123 
	`mem˝y
(&
hvif
.
myaddr
, 
vif
->
addr
, 
ETH_ALEN
);

1124 
hvif
.
ödex
 = 
avp
->index;

1125 
	`WMI_CMD_BUF
(
WMI_VAP_REMOVE_CMDID
, &
hvif
);

1126 i‡(
ªt
) {

1127 
	`©h_îr
(
comm⁄
, "UnableÅoÑemove interfaceát idx: %d\n",

1128 
avp
->
ödex
);

1130 
¥iv
->
nvifs
--;

1131 
¥iv
->
vif_¶Ÿ
 &~(1 << 
avp
->
ödex
);

1133 
	`©h9k_htc_ªmove_°©i⁄
(
¥iv
, 
vif
, 
NULL
);

1135 
	`DEC_VIF
(
¥iv
, 
vif
->
ty≥
);

1137 i‡((
vif
->
ty≥
 =
NL80211_IFTYPE_AP
) ||

1138 
vif
->
ty≥
 =
NL80211_IFTYPE_MESH_POINT
 ||

1139 (
vif
->
ty≥
 =
NL80211_IFTYPE_ADHOC
))

1140 
	`©h9k_htc_ªmove_b¶Ÿ
(
¥iv
, 
vif
);

1142 
	`©h9k_htc_£t_›mode
(
¥iv
);

1144 
	`©h9k_htc_£t_mac_bssid_mask
(
¥iv
, 
vif
);

1149 i‡((
vif
->
ty≥
 =
NL80211_IFTYPE_AP
Ë&& (
¥iv
->
num_≠_vif
 == 0)) {

1150 
¥iv
->
ª¨m_™i
 = 
Ál£
;

1151 
	`õì80211_ôî©e_a˘ive_öãrÁ˚s_©omic
(

1152 
¥iv
->
hw
, 
IEEE80211_IFACE_ITER_RESUME_ALL
,

1153 
©h9k_htc_vif_ôî
, 
¥iv
);

1154 i‡(!
¥iv
->
ª¨m_™i
)

1155 
	`©h9k_htc_°›_™i
(
¥iv
);

1158 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "Dëach I¡îÁ˚áàidx: %d\n", 
avp
->
ödex
);

1160 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

1161 
	`muãx_u∆ock
(&
¥iv
->
muãx
);

1162 
	}
}

1164 
	$©h9k_htc_c⁄fig
(
õì80211_hw
 *
hw
, 
u32
 
ch™ged
)

1166 
©h9k_htc_¥iv
 *
¥iv
 = 
hw
->priv;

1167 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

1168 
õì80211_c⁄f
 *
c⁄f
 = &
hw
->conf;

1169 
boﬁ
 
chù_ª£t
 = 
Ál£
;

1170 
ªt
 = 0;

1172 
	`muãx_lock
(&
¥iv
->
muãx
);

1173 
	`©h9k_htc_ps_wakeup
(
¥iv
);

1175 i‡(
ch™ged
 & 
IEEE80211_CONF_CHANGE_IDLE
) {

1176 
	`muãx_lock
(&
¥iv
->
htc_pm_lock
);

1178 
¥iv
->
ps_idÀ
 = !!(
c⁄f
->
Êags
 & 
IEEE80211_CONF_IDLE
);

1179 i‡(!
¥iv
->
ps_idÀ
)

1180 
chù_ª£t
 = 
åue
;

1182 
	`muãx_u∆ock
(&
¥iv
->
htc_pm_lock
);

1189 i‡(
ch™ged
 & 
IEEE80211_CONF_CHANGE_MONITOR
) {

1190 i‡((
c⁄f
->
Êags
 & 
IEEE80211_CONF_MONITOR
) &&

1191 !
¥iv
->
ah
->
is_m⁄ô‹ög
)

1192 
	`©h9k_htc_add_m⁄ô‹_öãrÁ˚
(
¥iv
);

1193 i‡(
¥iv
->
ah
->
is_m⁄ô‹ög
)

1194 
	`©h9k_htc_ªmove_m⁄ô‹_öãrÁ˚
(
¥iv
);

1197 i‡((
ch™ged
 & 
IEEE80211_CONF_CHANGE_CHANNEL
Ë|| 
chù_ª£t
) {

1198 
õì80211_ch™√l
 *
curch™
 = 
hw
->
c⁄f
.
ch™def
.
ch™
;

1199 
pos
 = 
curch™
->
hw_vÆue
;

1201 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "Set channel: %d MHz\n",

1202 
curch™
->
˚¡î_‰eq
);

1204 
	`©h9k_cmn_gë_ch™√l
(
hw
, 
¥iv
->
ah
, &hw->
c⁄f
.
ch™def
);

1205 i‡(
	`©h9k_htc_£t_ch™√l
(
¥iv
, 
hw
, &¥iv->
ah
->
ch™√ls
[
pos
]) < 0) {

1206 
	`©h_îr
(
comm⁄
, "UnableÅo set channel\n");

1207 
ªt
 = -
EINVAL
;

1208 
out
;

1213 i‡(
ch™ged
 & 
IEEE80211_CONF_CHANGE_PS
) {

1214 i‡(
c⁄f
->
Êags
 & 
IEEE80211_CONF_PS
) {

1215 
	`©h9k_htc_£çowî
(
¥iv
, 
ATH9K_PM_NETWORK_SLEEP
);

1216 
¥iv
->
ps_íabÀd
 = 
åue
;

1218 
¥iv
->
ps_íabÀd
 = 
Ál£
;

1219 
	`ˇn˚l_w‹k_sync
(&
¥iv
->
ps_w‹k
);

1220 
	`©h9k_htc_£çowî
(
¥iv
, 
ATH9K_PM_AWAKE
);

1224 i‡(
ch™ged
 & 
IEEE80211_CONF_CHANGE_POWER
) {

1225 
¥iv
->
txpowlimô
 = 2 * 
c⁄f
->
powî_Àvñ
;

1226 
	`©h9k_cmn_upd©e_txpow
(
¥iv
->
ah
,Öriv->
cuπxpow
,

1227 
¥iv
->
txpowlimô
, &¥iv->
cuπxpow
);

1230 
out
:

1231 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

1232 
	`muãx_u∆ock
(&
¥iv
->
muãx
);

1233  
ªt
;

1234 
	}
}

1236 
	#SUPPORTED_FILTERS
 \

1237 (
FIF_PROMISC_IN_BSS
 | \

1238 
FIF_ALLMULTI
 | \

1239 
FIF_CONTROL
 | \

1240 
FIF_PSPOLL
 | \

1241 
FIF_OTHER_BSS
 | \

1242 
FIF_BCN_PRBRESP_PROMISC
 | \

1243 
FIF_PROBE_REQ
 | \

1244 
FIF_FCSFAIL
)

	)

1246 
	$©h9k_htc_c⁄figuª_fûãr
(
õì80211_hw
 *
hw
,

1247 
ch™ged_Êags
,

1248 *
tŸÆ_Êags
,

1249 
u64
 
mu…iˇ°
)

1251 
©h9k_htc_¥iv
 *
¥iv
 = 
hw
->priv;

1252 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

1253 
u32
 
rfût
;

1255 
	`muãx_lock
(&
¥iv
->
muãx
);

1256 
ch™ged_Êags
 &
SUPPORTED_FILTERS
;

1257 *
tŸÆ_Êags
 &
SUPPORTED_FILTERS
;

1259 i‡(
	`ã°_bô
(
ATH_OP_INVALID
, &
comm⁄
->
›_Êags
)) {

1260 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
¥iv
->
ah
), 
ANY
,

1262 
	`muãx_u∆ock
(&
¥iv
->
muãx
);

1265 
	`©h9k_htc_ps_wakeup
(
¥iv
);

1267 
¥iv
->
rxfûãr
 = *
tŸÆ_Êags
;

1268 
rfût
 = 
	`©h9k_htc_ˇl¸xfûãr
(
¥iv
);

1269 
	`©h9k_hw_£åxfûãr
(
¥iv
->
ah
, 
rfût
);

1271 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
¥iv
->
ah
), 
CONFIG
, "Set HW RX filter: 0x%x\n",

1272 
rfût
);

1274 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

1275 
	`muãx_u∆ock
(&
¥iv
->
muãx
);

1276 
	}
}

1278 
	$©h9k_htc_°a_rc_upd©e_w‹k
(
w‹k_°ru˘
 *
w‹k
)

1280 
©h9k_htc_°a
 *
i°a
 =

1281 
	`c⁄èöî_of
(
w‹k
, 
©h9k_htc_°a
, 
rc_upd©e_w‹k
);

1282 
õì80211_°a
 *
°a
 =

1283 
	`c⁄èöî_of
((*)
i°a
, 
õì80211_°a
, 
drv_¥iv
);

1284 
©h9k_htc_¥iv
 *
¥iv
 = 
i°a
->
htc_¥iv
;

1285 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

1286 
©h9k_htc_èrgë_øã
 
å©e
;

1288 
	`muãx_lock
(&
¥iv
->
muãx
);

1289 
	`©h9k_htc_ps_wakeup
(
¥iv
);

1291 
	`mem£t
(&
å©e
, 0, (
©h9k_htc_èrgë_øã
));

1292 
	`©h9k_htc_£tup_øã
(
¥iv
, 
°a
, &
å©e
);

1293 i‡(!
	`©h9k_htc_£nd_øã_cmd
(
¥iv
, &
å©e
))

1294 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

1296 
°a
->
addr
, 
	`be32_to_˝u
(
å©e
.
ˇpÊags
));

1298 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

1300 
°a
->
addr
);

1302 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

1303 
	`muãx_u∆ock
(&
¥iv
->
muãx
);

1304 
	}
}

1306 
	$©h9k_htc_°a_add
(
õì80211_hw
 *
hw
,

1307 
õì80211_vif
 *
vif
,

1308 
õì80211_°a
 *
°a
)

1310 
©h9k_htc_¥iv
 *
¥iv
 = 
hw
->priv;

1311 
©h9k_htc_°a
 *
i°a
 = (©h9k_htc_°®*Ë
°a
->
drv_¥iv
;

1312 
ªt
;

1314 
	`muãx_lock
(&
¥iv
->
muãx
);

1315 
	`©h9k_htc_ps_wakeup
(
¥iv
);

1316 
ªt
 = 
	`©h9k_htc_add_°©i⁄
(
¥iv
, 
vif
, 
°a
);

1317 i‡(!
ªt
) {

1318 
	`INIT_WORK
(&
i°a
->
rc_upd©e_w‹k
, 
©h9k_htc_°a_rc_upd©e_w‹k
);

1319 
i°a
->
htc_¥iv
 = 
¥iv
;

1320 
	`©h9k_htc_öô_øã
(
¥iv
, 
°a
);

1322 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

1323 
	`muãx_u∆ock
(&
¥iv
->
muãx
);

1325  
ªt
;

1326 
	}
}

1328 
	$©h9k_htc_°a_ªmove
(
õì80211_hw
 *
hw
,

1329 
õì80211_vif
 *
vif
,

1330 
õì80211_°a
 *
°a
)

1332 
©h9k_htc_¥iv
 *
¥iv
 = 
hw
->priv;

1333 
©h9k_htc_°a
 *
i°a
 = (©h9k_htc_°®*Ë
°a
->
drv_¥iv
;

1334 
ªt
;

1336 
	`ˇn˚l_w‹k_sync
(&
i°a
->
rc_upd©e_w‹k
);

1338 
	`muãx_lock
(&
¥iv
->
muãx
);

1339 
	`©h9k_htc_ps_wakeup
(
¥iv
);

1340 
	`htc_°a_døö
(
¥iv
->
htc
, 
i°a
->
ödex
);

1341 
ªt
 = 
	`©h9k_htc_ªmove_°©i⁄
(
¥iv
, 
vif
, 
°a
);

1342 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

1343 
	`muãx_u∆ock
(&
¥iv
->
muãx
);

1345  
ªt
;

1346 
	}
}

1348 
	$©h9k_htc_°a_rc_upd©e
(
õì80211_hw
 *
hw
,

1349 
õì80211_vif
 *
vif
,

1350 
õì80211_°a
 *
°a
, 
u32
 
ch™ged
)

1352 
©h9k_htc_°a
 *
i°a
 = (©h9k_htc_°®*Ë
°a
->
drv_¥iv
;

1354 i‡(!(
ch™ged
 & 
IEEE80211_RC_SUPP_RATES_CHANGED
))

1357 
	`scheduÀ_w‹k
(&
i°a
->
rc_upd©e_w‹k
);

1358 
	}
}

1360 
	$©h9k_htc_c⁄f_tx
(
õì80211_hw
 *
hw
,

1361 
õì80211_vif
 *
vif
, 
u16
 
queue
,

1362 c⁄° 
õì80211_tx_queue_∑øms
 *
∑øms
)

1364 
©h9k_htc_¥iv
 *
¥iv
 = 
hw
->priv;

1365 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

1366 
©h9k_tx_queue_öfo
 
qi
;

1367 
ªt
 = 0, 
qnum
;

1369 i‡(
queue
 >
IEEE80211_NUM_ACS
)

1372 
	`muãx_lock
(&
¥iv
->
muãx
);

1373 
	`©h9k_htc_ps_wakeup
(
¥iv
);

1375 
	`mem£t
(&
qi
, 0, (
©h9k_tx_queue_öfo
));

1377 
qi
.
tqi_aifs
 = 
∑øms
->
aifs
;

1378 
qi
.
tqi_cwmö
 = 
∑øms
->
cw_mö
;

1379 
qi
.
tqi_cwmax
 = 
∑øms
->
cw_max
;

1380 
qi
.
tqi_bur°Time
 = 
∑øms
->
tx›
 * 32;

1382 
qnum
 = 
	`gë_hw_qnum
(
queue
, 
¥iv
->
hwq_m≠
);

1384 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

1386 
queue
, 
qnum
, 
∑øms
->
aifs
,Ö¨ams->
cw_mö
,

1387 
∑øms
->
cw_max
,Ö¨ams->
tx›
);

1389 
ªt
 = 
	`©h_htc_txq_upd©e
(
¥iv
, 
qnum
, &
qi
);

1390 i‡(
ªt
) {

1391 
	`©h_îr
(
comm⁄
, "TXQ Update failed\n");

1392 
out
;

1395 i‡((
¥iv
->
ah
->
›mode
 =
NL80211_IFTYPE_ADHOC
) &&

1396 (
qnum
 =
¥iv
->
hwq_m≠
[
IEEE80211_AC_BE
]))

1397 
	`©h9k_htc_bóc⁄q_c⁄fig
(
¥iv
);

1398 
out
:

1399 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

1400 
	`muãx_u∆ock
(&
¥iv
->
muãx
);

1402  
ªt
;

1403 
	}
}

1405 
	$©h9k_htc_£t_key
(
õì80211_hw
 *
hw
,

1406 
£t_key_cmd
 
cmd
,

1407 
õì80211_vif
 *
vif
,

1408 
õì80211_°a
 *
°a
,

1409 
õì80211_key_c⁄f
 *
key
)

1411 
©h9k_htc_¥iv
 *
¥iv
 = 
hw
->priv;

1412 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

1413 
ªt
 = 0;

1415 i‡(
htc_mod∑øm_nohw¸y±
)

1416  -
ENOSPC
;

1418 i‡((
vif
->
ty≥
 =
NL80211_IFTYPE_ADHOC
 ||

1419 
vif
->
ty≥
 =
NL80211_IFTYPE_MESH_POINT
) &&

1420 (
key
->
cùhî
 =
WLAN_CIPHER_SUITE_TKIP
 ||

1421 
key
->
cùhî
 =
WLAN_CIPHER_SUITE_CCMP
) &&

1422 !(
key
->
Êags
 & 
IEEE80211_KEY_FLAG_PAIRWISE
)) {

1430  -
EOPNOTSUPP
;

1433 
	`muãx_lock
(&
¥iv
->
muãx
);

1434 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "Set HW Key\n");

1435 
	`©h9k_htc_ps_wakeup
(
¥iv
);

1437 
cmd
) {

1438 
SET_KEY
:

1439 
ªt
 = 
	`©h_key_c⁄fig
(
comm⁄
, 
vif
, 
°a
, 
key
);

1440 i‡(
ªt
 >= 0) {

1441 
key
->
hw_key_idx
 = 
ªt
;

1443 
key
->
Êags
 |
IEEE80211_KEY_FLAG_GENERATE_IV
;

1444 i‡(
key
->
cùhî
 =
WLAN_CIPHER_SUITE_TKIP
)

1445 
key
->
Êags
 |
IEEE80211_KEY_FLAG_GENERATE_MMIC
;

1446 i‡(
¥iv
->
ah
->
sw_mgmt_¸y±o
 &&

1447 
key
->
cùhî
 =
WLAN_CIPHER_SUITE_CCMP
)

1448 
key
->
Êags
 |
IEEE80211_KEY_FLAG_SW_MGMT_TX
;

1449 
ªt
 = 0;

1452 
DISABLE_KEY
:

1453 
	`©h_key_dñëe
(
comm⁄
, 
key
);

1456 
ªt
 = -
EINVAL
;

1459 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

1460 
	`muãx_u∆ock
(&
¥iv
->
muãx
);

1462  
ªt
;

1463 
	}
}

1465 
	$©h9k_htc_£t_bssid
(
©h9k_htc_¥iv
 *
¥iv
)

1467 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

1469 
	`©h9k_hw_wrôe_associd
(
¥iv
->
ah
);

1470 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "BSSID: %pMáid: 0x%x\n",

1471 
comm⁄
->
curbssid
, comm⁄->
cuøid
);

1472 
	}
}

1474 
	$©h9k_htc_bss_ôî
(*
d©a
, 
u8
 *
mac
, 
õì80211_vif
 *
vif
)

1476 
©h9k_htc_¥iv
 *
¥iv
 = (©h9k_htc_¥iv *)
d©a
;

1477 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

1478 
õì80211_bss_c⁄f
 *
bss_c⁄f
 = &
vif
->bss_conf;

1480 i‡((
vif
->
ty≥
 =
NL80211_IFTYPE_STATION
Ë&& 
bss_c⁄f
->
assoc
) {

1481 
comm⁄
->
cuøid
 = 
bss_c⁄f
->
aid
;

1482 
comm⁄
->
œ°_rssi
 = 
ATH_RSSI_DUMMY_MARKER
;

1483 
	`mem˝y
(
comm⁄
->
curbssid
, 
bss_c⁄f
->
bssid
, 
ETH_ALEN
);

1484 
	`£t_bô
(
ATH_OP_PRIM_STA_VIF
, &
comm⁄
->
›_Êags
);

1486 
	}
}

1488 
	$©h9k_htc_choo£_£t_bssid
(
©h9k_htc_¥iv
 *
¥iv
)

1490 i‡(
¥iv
->
num_°a_assoc_vif
 == 1) {

1491 
	`õì80211_ôî©e_a˘ive_öãrÁ˚s_©omic
(

1492 
¥iv
->
hw
, 
IEEE80211_IFACE_ITER_RESUME_ALL
,

1493 
©h9k_htc_bss_ôî
, 
¥iv
);

1494 
	`©h9k_htc_£t_bssid
(
¥iv
);

1496 
	}
}

1498 
	$©h9k_htc_bss_öfo_ch™ged
(
õì80211_hw
 *
hw
,

1499 
õì80211_vif
 *
vif
,

1500 
õì80211_bss_c⁄f
 *
bss_c⁄f
,

1501 
u32
 
ch™ged
)

1503 
©h9k_htc_¥iv
 *
¥iv
 = 
hw
->priv;

1504 
©h_hw
 *
ah
 = 
¥iv
->ah;

1505 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1506 
¶Ÿtime
;

1508 
	`muãx_lock
(&
¥iv
->
muãx
);

1509 
	`©h9k_htc_ps_wakeup
(
¥iv
);

1511 i‡(
ch™ged
 & 
BSS_CHANGED_ASSOC
) {

1512 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "BSS Changed ASSOC %d\n",

1513 
bss_c⁄f
->
assoc
);

1515 
bss_c⁄f
->
assoc
 ?

1516 
¥iv
->
num_°a_assoc_vif
++ :Öriv->num_sta_assoc_vif--;

1518 i‡(!
bss_c⁄f
->
assoc
)

1519 
	`˛ór_bô
(
ATH_OP_PRIM_STA_VIF
, &
comm⁄
->
›_Êags
);

1521 i‡(
¥iv
->
ah
->
›mode
 =
NL80211_IFTYPE_STATION
) {

1522 
	`©h9k_htc_choo£_£t_bssid
(
¥iv
);

1523 i‡(
bss_c⁄f
->
assoc
 && (
¥iv
->
num_°a_assoc_vif
 == 1))

1524 
	`©h9k_htc_°¨t_™i
(
¥iv
);

1525 i‡(
¥iv
->
num_°a_assoc_vif
 == 0)

1526 
	`©h9k_htc_°›_™i
(
¥iv
);

1530 i‡(
ch™ged
 & 
BSS_CHANGED_IBSS
) {

1531 i‡(
¥iv
->
ah
->
›mode
 =
NL80211_IFTYPE_ADHOC
) {

1532 
comm⁄
->
cuøid
 = 
bss_c⁄f
->
aid
;

1533 
	`mem˝y
(
comm⁄
->
curbssid
, 
bss_c⁄f
->
bssid
, 
ETH_ALEN
);

1534 
	`©h9k_htc_£t_bssid
(
¥iv
);

1538 i‡((
ch™ged
 & 
BSS_CHANGED_BEACON_ENABLED
Ë&& 
bss_c⁄f
->
íabÀ_bóc⁄
) {

1539 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "BeaconÉnabled for BSS: %pM\n",

1540 
bss_c⁄f
->
bssid
);

1541 
	`©h9k_htc_£t_tsÁdju°
(
¥iv
, 
vif
);

1542 
¥iv
->
cur_bóc⁄_c⁄f
.
íabÀ_bóc⁄
 = 1;

1543 
	`©h9k_htc_bóc⁄_c⁄fig
(
¥iv
, 
vif
);

1546 i‡((
ch™ged
 & 
BSS_CHANGED_BEACON_ENABLED
Ë&& !
bss_c⁄f
->
íabÀ_bóc⁄
) {

1551 i‡((
¥iv
->
num_≠_vif
 +Öriv->
num_mbss_vif
 <= 1) ||

1552 
¥iv
->
num_ibss_vif
) {

1553 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

1555 
bss_c⁄f
->
bssid
);

1556 
¥iv
->
cur_bóc⁄_c⁄f
.
íabÀ_bóc⁄
 = 0;

1557 
	`©h9k_htc_bóc⁄_c⁄fig
(
¥iv
, 
vif
);

1561 i‡(
ch™ged
 & 
BSS_CHANGED_BEACON_INT
) {

1565 i‡(
¥iv
->
nvifs
 == 1 &&

1566 ((
¥iv
->
ah
->
›mode
 =
NL80211_IFTYPE_AP
 &&

1567 
vif
->
ty≥
 =
NL80211_IFTYPE_AP
 &&

1568 
¥iv
->
num_≠_vif
 == 1) ||

1569 (
¥iv
->
ah
->
›mode
 =
NL80211_IFTYPE_MESH_POINT
 &&

1570 
vif
->
ty≥
 =
NL80211_IFTYPE_MESH_POINT
 &&

1571 
¥iv
->
num_mbss_vif
 == 1))) {

1572 
	`£t_bô
(
OP_TSF_RESET
, &
¥iv
->
›_Êags
);

1574 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

1576 
bss_c⁄f
->
bssid
);

1577 
	`©h9k_htc_bóc⁄_c⁄fig
(
¥iv
, 
vif
);

1580 i‡(
ch™ged
 & 
BSS_CHANGED_ERP_SLOT
) {

1581 i‡(
bss_c⁄f
->
u£_sh‹t_¶Ÿ
)

1582 
¶Ÿtime
 = 9;

1584 
¶Ÿtime
 = 20;

1585 i‡(
vif
->
ty≥
 =
NL80211_IFTYPE_AP
) {

1591 
¥iv
->
bóc⁄
.
¶Ÿtime
 = slottime;

1592 
¥iv
->
bóc⁄
.
upd©e¶Ÿ
 = 
UPDATE
;

1594 
ah
->
¶Ÿtime
 = slottime;

1595 
	`©h9k_hw_öô_globÆ_£âögs
(
ah
);

1599 i‡(
ch™ged
 & 
BSS_CHANGED_HT
)

1600 
	`©h9k_htc_upd©e_øã
(
¥iv
, 
vif
, 
bss_c⁄f
);

1602 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

1603 
	`muãx_u∆ock
(&
¥iv
->
muãx
);

1604 
	}
}

1606 
u64
 
	$©h9k_htc_gë_tsf
(
õì80211_hw
 *
hw
,

1607 
õì80211_vif
 *
vif
)

1609 
©h9k_htc_¥iv
 *
¥iv
 = 
hw
->priv;

1610 
u64
 
tsf
;

1612 
	`muãx_lock
(&
¥iv
->
muãx
);

1613 
	`©h9k_htc_ps_wakeup
(
¥iv
);

1614 
tsf
 = 
	`©h9k_hw_gëtsf64
(
¥iv
->
ah
);

1615 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

1616 
	`muãx_u∆ock
(&
¥iv
->
muãx
);

1618  
tsf
;

1619 
	}
}

1621 
	$©h9k_htc_£t_tsf
(
õì80211_hw
 *
hw
,

1622 
õì80211_vif
 *
vif
, 
u64
 
tsf
)

1624 
©h9k_htc_¥iv
 *
¥iv
 = 
hw
->priv;

1626 
	`muãx_lock
(&
¥iv
->
muãx
);

1627 
	`©h9k_htc_ps_wakeup
(
¥iv
);

1628 
	`©h9k_hw_£âsf64
(
¥iv
->
ah
, 
tsf
);

1629 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

1630 
	`muãx_u∆ock
(&
¥iv
->
muãx
);

1631 
	}
}

1633 
	$©h9k_htc_ª£t_tsf
(
õì80211_hw
 *
hw
,

1634 
õì80211_vif
 *
vif
)

1636 
©h9k_htc_¥iv
 *
¥iv
 = 
hw
->priv;

1638 
	`muãx_lock
(&
¥iv
->
muãx
);

1639 
	`©h9k_htc_ps_wakeup
(
¥iv
);

1640 
	`©h9k_hw_ª£t_tsf
(
¥iv
->
ah
);

1641 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

1642 
	`muãx_u∆ock
(&
¥iv
->
muãx
);

1643 
	}
}

1645 
	$©h9k_htc_ampdu_a˘i⁄
(
õì80211_hw
 *
hw
,

1646 
õì80211_vif
 *
vif
,

1647 
õì80211_ampdu_mlme_a˘i⁄
 
a˘i⁄
,

1648 
õì80211_°a
 *
°a
,

1649 
u16
 
tid
, u16 *
s¢
, 
u8
 
buf_size
)

1651 
©h9k_htc_¥iv
 *
¥iv
 = 
hw
->priv;

1652 
©h9k_htc_°a
 *
i°a
;

1653 
ªt
 = 0;

1655 
	`muãx_lock
(&
¥iv
->
muãx
);

1656 
	`©h9k_htc_ps_wakeup
(
¥iv
);

1658 
a˘i⁄
) {

1659 
IEEE80211_AMPDU_RX_START
:

1661 
IEEE80211_AMPDU_RX_STOP
:

1663 
IEEE80211_AMPDU_TX_START
:

1664 
ªt
 = 
	`©h9k_htc_tx_aggr_›î
(
¥iv
, 
vif
, 
°a
, 
a˘i⁄
, 
tid
);

1665 i‡(!
ªt
)

1666 
	`õì80211_°¨t_tx_ba_cb_úqß„
(
vif
, 
°a
->
addr
, 
tid
);

1668 
IEEE80211_AMPDU_TX_STOP_CONT
:

1669 
IEEE80211_AMPDU_TX_STOP_FLUSH
:

1670 
IEEE80211_AMPDU_TX_STOP_FLUSH_CONT
:

1671 
	`©h9k_htc_tx_aggr_›î
(
¥iv
, 
vif
, 
°a
, 
a˘i⁄
, 
tid
);

1672 
	`õì80211_°›_tx_ba_cb_úqß„
(
vif
, 
°a
->
addr
, 
tid
);

1674 
IEEE80211_AMPDU_TX_OPERATIONAL
:

1675 
i°a
 = (
©h9k_htc_°a
 *Ë
°a
->
drv_¥iv
;

1676 
	`•ö_lock_bh
(&
¥iv
->
tx
.
tx_lock
);

1677 
i°a
->
tid_°©e
[
tid
] = 
AGGR_OPERATIONAL
;

1678 
	`•ö_u∆ock_bh
(&
¥iv
->
tx
.
tx_lock
);

1681 
	`©h_îr
(
	`©h9k_hw_comm⁄
(
¥iv
->
ah
), "Unknown AMPDUáction\n");

1684 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

1685 
	`muãx_u∆ock
(&
¥iv
->
muãx
);

1687  
ªt
;

1688 
	}
}

1690 
	$©h9k_htc_sw_sˇn_°¨t
(
õì80211_hw
 *
hw
)

1692 
©h9k_htc_¥iv
 *
¥iv
 = 
hw
->priv;

1693 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

1695 
	`muãx_lock
(&
¥iv
->
muãx
);

1696 
	`•ö_lock_bh
(&
¥iv
->
bóc⁄_lock
);

1697 
	`£t_bô
(
ATH_OP_SCANNING
, &
comm⁄
->
›_Êags
);

1698 
	`•ö_u∆ock_bh
(&
¥iv
->
bóc⁄_lock
);

1699 
	`ˇn˚l_w‹k_sync
(&
¥iv
->
ps_w‹k
);

1700 
	`©h9k_htc_°›_™i
(
¥iv
);

1701 
	`muãx_u∆ock
(&
¥iv
->
muãx
);

1702 
	}
}

1704 
	$©h9k_htc_sw_sˇn_com∂ëe
(
õì80211_hw
 *
hw
)

1706 
©h9k_htc_¥iv
 *
¥iv
 = 
hw
->priv;

1707 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

1709 
	`muãx_lock
(&
¥iv
->
muãx
);

1710 
	`•ö_lock_bh
(&
¥iv
->
bóc⁄_lock
);

1711 
	`˛ór_bô
(
ATH_OP_SCANNING
, &
comm⁄
->
›_Êags
);

1712 
	`•ö_u∆ock_bh
(&
¥iv
->
bóc⁄_lock
);

1713 
	`©h9k_htc_ps_wakeup
(
¥iv
);

1714 
	`©h9k_htc_vif_ªc⁄fig
(
¥iv
);

1715 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

1716 
	`muãx_u∆ock
(&
¥iv
->
muãx
);

1717 
	}
}

1719 
	$©h9k_htc_£t_πs_thªshﬁd
(
õì80211_hw
 *
hw
, 
u32
 
vÆue
)

1722 
	}
}

1724 
	$©h9k_htc_£t_covîage_˛ass
(
õì80211_hw
 *
hw
,

1725 
u8
 
covîage_˛ass
)

1727 
©h9k_htc_¥iv
 *
¥iv
 = 
hw
->priv;

1729 
	`muãx_lock
(&
¥iv
->
muãx
);

1730 
	`©h9k_htc_ps_wakeup
(
¥iv
);

1731 
¥iv
->
ah
->
covîage_˛ass
 = coverage_class;

1732 
	`©h9k_hw_öô_globÆ_£âögs
(
¥iv
->
ah
);

1733 
	`©h9k_htc_ps_ª°‹e
(
¥iv
);

1734 
	`muãx_u∆ock
(&
¥iv
->
muãx
);

1735 
	}
}

1742 
	$©h9k_htc_£t_bôøã_mask
(
õì80211_hw
 *
hw
,

1743 
õì80211_vif
 *
vif
,

1744 c⁄° 
cfg80211_bôøã_mask
 *
mask
)

1746 
©h9k_htc_¥iv
 *
¥iv
 = 
hw
->priv;

1747 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

1748 
©h9k_htc_èrgë_øã_mask
 
tmask
;

1749 
©h9k_htc_vif
 *
avp
 = (*)
vif
->
drv_¥iv
;

1750 
ªt
 = 0;

1751 
u8
 
cmd_r•
;

1753 
	`mem£t
(&
tmask
, 0, (
©h9k_htc_èrgë_øã_mask
));

1755 
tmask
.
vif_ödex
 = 
avp
->
ödex
;

1756 
tmask
.
b™d
 = 
IEEE80211_BAND_2GHZ
;

1757 
tmask
.
mask
 = 
	`˝u_to_be32
(mask->
c⁄åﬁ
[
IEEE80211_BAND_2GHZ
].
Àgacy
);

1759 
	`WMI_CMD_BUF
(
WMI_BITRATE_MASK_CMDID
, &
tmask
);

1760 i‡(
ªt
) {

1761 
	`©h_îr
(
comm⁄
,

1763 "öãrÁ˚áàidx: %d\n", 
avp
->
ödex
);

1764 
out
;

1767 
tmask
.
b™d
 = 
IEEE80211_BAND_5GHZ
;

1768 
tmask
.
mask
 = 
	`˝u_to_be32
(mask->
c⁄åﬁ
[
IEEE80211_BAND_5GHZ
].
Àgacy
);

1770 
	`WMI_CMD_BUF
(
WMI_BITRATE_MASK_CMDID
, &
tmask
);

1771 i‡(
ªt
) {

1772 
	`©h_îr
(
comm⁄
,

1774 "öãrÁ˚áàidx: %d\n", 
avp
->
ödex
);

1775 
out
;

1778 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "Set bitrate masks: 0x%x, 0x%x\n",

1779 
mask
->
c⁄åﬁ
[
IEEE80211_BAND_2GHZ
].
Àgacy
,

1780 
mask
->
c⁄åﬁ
[
IEEE80211_BAND_5GHZ
].
Àgacy
);

1781 
out
:

1782  
ªt
;

1783 
	}
}

1786 
	$©h9k_htc_gë_°©s
(
õì80211_hw
 *
hw
,

1787 
õì80211_low_Àvñ_°©s
 *
°©s
)

1789 
©h9k_htc_¥iv
 *
¥iv
 = 
hw
->priv;

1790 
©h_hw
 *
ah
 = 
¥iv
->ah;

1791 
©h9k_mib_°©s
 *
mib_°©s
 = &
ah
->
ah_mibSèts
;

1793 
°©s
->
dŸ11ACKFaûuªCou¡
 = 
mib_°©s
->
ackrcv_bad
;

1794 
°©s
->
dŸ11RTSFaûuªCou¡
 = 
mib_°©s
->
πs_bad
;

1795 
°©s
->
dŸ11FCSEº‹Cou¡
 = 
mib_°©s
->
fcs_bad
;

1796 
°©s
->
dŸ11RTSSuc˚ssCou¡
 = 
mib_°©s
->
πs_good
;

1799 
	}
}

1801 
ba£_ìp_hódî
 *
	$©h9k_htc_gë_ì¥om_ba£
(
©h9k_htc_¥iv
 *
¥iv
)

1803 
ba£_ìp_hódî
 *
pBa£
 = 
NULL
;

1810 i‡(
	`AR_SREV_9271
(
¥iv
->
ah
))

1811 
pBa£
 = (
ba£_ìp_hódî
 *)

1812 &
¥iv
->
ah
->
ì¥om
.
m≠4k
.
ba£EïHódî
;

1813 i‡(
¥iv
->
ah
->
hw_vîsi⁄
.
usbdev
 =
AR9280_USB
)

1814 
pBa£
 = (
ba£_ìp_hódî
 *)

1815 &
¥iv
->
ah
->
ì¥om
.
def
.
ba£EïHódî
;

1816 i‡(
¥iv
->
ah
->
hw_vîsi⁄
.
usbdev
 =
AR9287_USB
)

1817 
pBa£
 = (
ba£_ìp_hódî
 *)

1818 &
¥iv
->
ah
->
ì¥om
.
m≠9287
.
ba£EïHódî
;

1819  
pBa£
;

1820 
	}
}

1823 
	$©h9k_htc_gë_™ã¬a
(
õì80211_hw
 *
hw
, 
u32
 *
tx_™t
,

1824 
u32
 *
rx_™t
)

1826 
©h9k_htc_¥iv
 *
¥iv
 = 
hw
->priv;

1827 
ba£_ìp_hódî
 *
pBa£
 = 
	`©h9k_htc_gë_ì¥om_ba£
(
¥iv
);

1828 i‡(
pBa£
) {

1829 *
tx_™t
 = 
pBa£
->
txMask
;

1830 *
rx_™t
 = 
pBa£
->
rxMask
;

1832 *
tx_™t
 = 0;

1833 *
rx_™t
 = 0;

1836 
	}
}

1838 
õì80211_›s
 
	g©h9k_htc_›s
 = {

1839 .
tx
 = 
©h9k_htc_tx
,

1840 .
	g°¨t
 = 
©h9k_htc_°¨t
,

1841 .
	g°›
 = 
©h9k_htc_°›
,

1842 .
	gadd_öãrÁ˚
 = 
©h9k_htc_add_öãrÁ˚
,

1843 .
	gªmove_öãrÁ˚
 = 
©h9k_htc_ªmove_öãrÁ˚
,

1844 .
	gc⁄fig
 = 
©h9k_htc_c⁄fig
,

1845 .
	gc⁄figuª_fûãr
 = 
©h9k_htc_c⁄figuª_fûãr
,

1846 .
	g°a_add
 = 
©h9k_htc_°a_add
,

1847 .
	g°a_ªmove
 = 
©h9k_htc_°a_ªmove
,

1848 .
	gc⁄f_tx
 = 
©h9k_htc_c⁄f_tx
,

1849 .
	g°a_rc_upd©e
 = 
©h9k_htc_°a_rc_upd©e
,

1850 .
	gbss_öfo_ch™ged
 = 
©h9k_htc_bss_öfo_ch™ged
,

1851 .
	g£t_key
 = 
©h9k_htc_£t_key
,

1852 .
	ggë_tsf
 = 
©h9k_htc_gë_tsf
,

1853 .
	g£t_tsf
 = 
©h9k_htc_£t_tsf
,

1854 .
	gª£t_tsf
 = 
©h9k_htc_ª£t_tsf
,

1855 .
	gampdu_a˘i⁄
 = 
©h9k_htc_ampdu_a˘i⁄
,

1856 .
	gsw_sˇn_°¨t
 = 
©h9k_htc_sw_sˇn_°¨t
,

1857 .
	gsw_sˇn_com∂ëe
 = 
©h9k_htc_sw_sˇn_com∂ëe
,

1858 .
	g£t_πs_thªshﬁd
 = 
©h9k_htc_£t_πs_thªshﬁd
,

1859 .
	grfkûl_pﬁl
 = 
©h9k_htc_rfkûl_pﬁl_°©e
,

1860 .
	g£t_covîage_˛ass
 = 
©h9k_htc_£t_covîage_˛ass
,

1861 .
	g£t_bôøã_mask
 = 
©h9k_htc_£t_bôøã_mask
,

1862 .
	ggë_°©s
 = 
©h9k_htc_gë_°©s
,

1863 .
	ggë_™ã¬a
 = 
©h9k_htc_gë_™ã¬a
,

1865 #ifde‡
CPTCFG_ATH9K_HTC_DEBUGFS


1866 .
	ggë_ë_s£t_cou¡
 = 
©h9k_htc_gë_ë_s£t_cou¡
,

1867 .
	ggë_ë_°©s
 = 
©h9k_htc_gë_ë_°©s
,

1868 .
	ggë_ë_°rögs
 = 
©h9k_htc_gë_ë_°rögs
,

	@htc_drv_txrx.c

17 
	~"htc.h
"

23 c⁄° 
	gsubty≥_txq_to_hwq
[] = {

24 [
IEEE80211_AC_BE
] = 
ATH_TXQ_AC_BE
,

25 [
IEEE80211_AC_BK
] = 
ATH_TXQ_AC_BK
,

26 [
IEEE80211_AC_VI
] = 
ATH_TXQ_AC_VI
,

27 [
IEEE80211_AC_VO
] = 
ATH_TXQ_AC_VO
,

30 
	#ATH9K_HTC_INIT_TXQ
(
subty≥
) do { \

31 
qi
.
tqi_subty≥
 = 
subty≥_txq_to_hwq
[
subty≥
]; \

32 
qi
.
tqi_aifs
 = 
ATH9K_TXQ_USEDEFAULT
; \

33 
qi
.
tqi_cwmö
 = 
ATH9K_TXQ_USEDEFAULT
; \

34 
qi
.
tqi_cwmax
 = 
ATH9K_TXQ_USEDEFAULT
; \

35 
qi
.
tqi_physCompBuf
 = 0; \

36 
qi
.
tqi_qÊags
 = 
TXQ_FLAG_TXEOLINT_ENABLE
 | \

37 
TXQ_FLAG_TXDESCINT_ENABLE
; \

38 } 0)

	)

40 
	$gë_hw_qnum
(
u16
 
queue
, *
hwq_m≠
)

42 
queue
) {

44  
hwq_m≠
[
IEEE80211_AC_VO
];

46  
hwq_m≠
[
IEEE80211_AC_VI
];

48  
hwq_m≠
[
IEEE80211_AC_BE
];

50  
hwq_m≠
[
IEEE80211_AC_BK
];

52  
hwq_m≠
[
IEEE80211_AC_BE
];

54 
	}
}

56 
	$©h9k_htc_check_°›_queues
(
©h9k_htc_¥iv
 *
¥iv
)

58 
	`•ö_lock_bh
(&
¥iv
->
tx
.
tx_lock
);

59 
¥iv
->
tx
.
queued_˙t
++;

60 i‡((
¥iv
->
tx
.
queued_˙t
 >
ATH9K_HTC_TX_THRESHOLD
) &&

61 !(
¥iv
->
tx
.
Êags
 & 
ATH9K_HTC_OP_TX_QUEUES_STOP
)) {

62 
¥iv
->
tx
.
Êags
 |
ATH9K_HTC_OP_TX_QUEUES_STOP
;

63 
	`õì80211_°›_queues
(
¥iv
->
hw
);

65 
	`•ö_u∆ock_bh
(&
¥iv
->
tx
.
tx_lock
);

66 
	}
}

68 
	$©h9k_htc_check_wake_queues
(
©h9k_htc_¥iv
 *
¥iv
)

70 
	`•ö_lock_bh
(&
¥iv
->
tx
.
tx_lock
);

71 i‡((
¥iv
->
tx
.
queued_˙t
 < 
ATH9K_HTC_TX_THRESHOLD
) &&

72 (
¥iv
->
tx
.
Êags
 & 
ATH9K_HTC_OP_TX_QUEUES_STOP
)) {

73 
¥iv
->
tx
.
Êags
 &~
ATH9K_HTC_OP_TX_QUEUES_STOP
;

74 
	`õì80211_wake_queues
(
¥iv
->
hw
);

76 
	`•ö_u∆ock_bh
(&
¥iv
->
tx
.
tx_lock
);

77 
	}
}

79 
	$©h9k_htc_tx_gë_¶Ÿ
(
©h9k_htc_¥iv
 *
¥iv
)

81 
¶Ÿ
;

83 
	`•ö_lock_bh
(&
¥iv
->
tx
.
tx_lock
);

84 
¶Ÿ
 = 
	`föd_fú°_zîo_bô
(
¥iv
->
tx
.
tx_¶Ÿ
, 
MAX_TX_BUF_NUM
);

85 i‡(
¶Ÿ
 >
MAX_TX_BUF_NUM
) {

86 
	`•ö_u∆ock_bh
(&
¥iv
->
tx
.
tx_lock
);

87  -
ENOBUFS
;

89 
	`__£t_bô
(
¶Ÿ
, 
¥iv
->
tx
.
tx_¶Ÿ
);

90 
	`•ö_u∆ock_bh
(&
¥iv
->
tx
.
tx_lock
);

92  
¶Ÿ
;

93 
	}
}

95 
	$©h9k_htc_tx_˛ór_¶Ÿ
(
©h9k_htc_¥iv
 *
¥iv
, 
¶Ÿ
)

97 
	`•ö_lock_bh
(&
¥iv
->
tx
.
tx_lock
);

98 
	`__˛ór_bô
(
¶Ÿ
, 
¥iv
->
tx
.
tx_¶Ÿ
);

99 
	`•ö_u∆ock_bh
(&
¥iv
->
tx
.
tx_lock
);

100 
	}
}

102 
ölöe
 
htc_ídpoöt_id
 
	$gë_htc_ïid
(
©h9k_htc_¥iv
 *
¥iv
,

103 
u16
 
qnum
)

105 
htc_ídpoöt_id
 
ïid
;

107 
qnum
) {

109 
	`TX_QSTAT_INC
(
IEEE80211_AC_VO
);

110 
ïid
 = 
¥iv
->
d©a_vo_ï
;

113 
	`TX_QSTAT_INC
(
IEEE80211_AC_VI
);

114 
ïid
 = 
¥iv
->
d©a_vi_ï
;

117 
	`TX_QSTAT_INC
(
IEEE80211_AC_BE
);

118 
ïid
 = 
¥iv
->
d©a_be_ï
;

122 
	`TX_QSTAT_INC
(
IEEE80211_AC_BK
);

123 
ïid
 = 
¥iv
->
d©a_bk_ï
;

127  
ïid
;

128 
	}
}

130 
ölöe
 
sk_buff_hód
*

131 
	$gë_htc_ïid_queue
(
©h9k_htc_¥iv
 *
¥iv
, 
u8
 
ïid
)

133 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

134 
sk_buff_hód
 *
ïid_queue
 = 
NULL
;

136 i‡(
ïid
 =
¥iv
->
mgmt_ï
)

137 
ïid_queue
 = &
¥iv
->
tx
.
mgmt_ï_queue
;

138 i‡(
ïid
 =
¥iv
->
ˇb_ï
)

139 
ïid_queue
 = &
¥iv
->
tx
.
ˇb_ï_queue
;

140 i‡(
ïid
 =
¥iv
->
d©a_be_ï
)

141 
ïid_queue
 = &
¥iv
->
tx
.
d©a_be_queue
;

142 i‡(
ïid
 =
¥iv
->
d©a_bk_ï
)

143 
ïid_queue
 = &
¥iv
->
tx
.
d©a_bk_queue
;

144 i‡(
ïid
 =
¥iv
->
d©a_vi_ï
)

145 
ïid_queue
 = &
¥iv
->
tx
.
d©a_vi_queue
;

146 i‡(
ïid
 =
¥iv
->
d©a_vo_ï
)

147 
ïid_queue
 = &
¥iv
->
tx
.
d©a_vo_queue
;

149 
	`©h_îr
(
comm⁄
, "InvÆid EPID: %d\n", 
ïid
);

151  
ïid_queue
;

152 
	}
}

157 
ölöe
 
	$°rù_drv_hódî
(
©h9k_htc_¥iv
 *
¥iv
,

158 
sk_buff
 *
skb
)

160 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

161 
©h9k_htc_tx_˘l
 *
tx_˘l
;

162 
¶Ÿ
;

164 
tx_˘l
 = 
	`HTC_SKB_CB
(
skb
);

166 i‡(
tx_˘l
->
ïid
 =
¥iv
->
mgmt_ï
) {

167 
tx_mgmt_hdr
 *
tx_mhdr
 =

168 (
tx_mgmt_hdr
 *)
skb
->
d©a
;

169 
¶Ÿ
 = 
tx_mhdr
->
cookõ
;

170 
	`skb_puŒ
(
skb
, (
tx_mgmt_hdr
));

171 } i‡((
tx_˘l
->
ïid
 =
¥iv
->
d©a_bk_ï
) ||

172 (
tx_˘l
->
ïid
 =
¥iv
->
d©a_be_ï
) ||

173 (
tx_˘l
->
ïid
 =
¥iv
->
d©a_vi_ï
) ||

174 (
tx_˘l
->
ïid
 =
¥iv
->
d©a_vo_ï
) ||

175 (
tx_˘l
->
ïid
 =
¥iv
->
ˇb_ï
)) {

176 
tx_‰ame_hdr
 *
tx_fhdr
 =

177 (
tx_‰ame_hdr
 *)
skb
->
d©a
;

178 
¶Ÿ
 = 
tx_fhdr
->
cookõ
;

179 
	`skb_puŒ
(
skb
, (
tx_‰ame_hdr
));

181 
	`©h_îr
(
comm⁄
, "Unsuµ‹ãd EPID: %d\n", 
tx_˘l
->
ïid
);

182 
¶Ÿ
 = -
EINVAL
;

185  
¶Ÿ
;

186 
	}
}

188 
	$©h_htc_txq_upd©e
(
©h9k_htc_¥iv
 *
¥iv
, 
qnum
,

189 
©h9k_tx_queue_öfo
 *
qöfo
)

191 
©h_hw
 *
ah
 = 
¥iv
->ah;

192 
îr‹
 = 0;

193 
©h9k_tx_queue_öfo
 
qi
;

195 
	`©h9k_hw_gë_txq_¥›s
(
ah
, 
qnum
, &
qi
);

197 
qi
.
tqi_aifs
 = 
qöfo
->tqi_aifs;

198 
qi
.
tqi_cwmö
 = 
qöfo
->tqi_cwmin / 2;

199 
qi
.
tqi_cwmax
 = 
qöfo
->tqi_cwmax;

200 
qi
.
tqi_bur°Time
 = 
qöfo
->tqi_burstTime;

201 
qi
.
tqi_ªadyTime
 = 
qöfo
->tqi_readyTime;

203 i‡(!
	`©h9k_hw_£t_txq_¥›s
(
ah
, 
qnum
, &
qi
)) {

204 
	`©h_îr
(
	`©h9k_hw_comm⁄
(
ah
),

205 "U«bÀÅÿupd©êh¨dw¨êqueuê%u!\n", 
qnum
);

206 
îr‹
 = -
EIO
;

208 
	`©h9k_hw_ª£âxqueue
(
ah
, 
qnum
);

211  
îr‹
;

212 
	}
}

214 
	$©h9k_htc_tx_mgmt
(
©h9k_htc_¥iv
 *
¥iv
,

215 
©h9k_htc_vif
 *
avp
,

216 
sk_buff
 *
skb
,

217 
u8
 
°a_idx
, u8 
vif_idx
, u8 
¶Ÿ
)

219 
õì80211_tx_öfo
 *
tx_öfo
 = 
	`IEEE80211_SKB_CB
(
skb
);

220 
õì80211_mgmt
 *
mgmt
;

221 
õì80211_hdr
 *
hdr
;

222 
tx_mgmt_hdr
 
mgmt_hdr
;

223 
©h9k_htc_tx_˘l
 *
tx_˘l
;

224 
u8
 *
tx_fhdr
;

226 
tx_˘l
 = 
	`HTC_SKB_CB
(
skb
);

227 
hdr
 = (
õì80211_hdr
 *Ë
skb
->
d©a
;

229 
	`mem£t
(
tx_˘l
, 0, (*tx_ctl));

230 
	`mem£t
(&
mgmt_hdr
, 0, (
tx_mgmt_hdr
));

236 i‡(
avp
 && 
	`u∆ikñy
(
	`õì80211_is_¥obe_ª•
(
hdr
->
‰ame_c⁄åﬁ
))) {

237 
mgmt
 = (
õì80211_mgmt
 *)
skb
->
d©a
;

238 
mgmt
->
u
.
¥obe_ª•
.
time°amp
 = 
avp
->
tsÁdju°
;

241 
tx_˘l
->
ty≥
 = 
ATH9K_HTC_MGMT
;

243 
mgmt_hdr
.
node_idx
 = 
°a_idx
;

244 
mgmt_hdr
.
vif_idx
 = vif_idx;

245 
mgmt_hdr
.
tidno
 = 0;

246 
mgmt_hdr
.
Êags
 = 0;

247 
mgmt_hdr
.
cookõ
 = 
¶Ÿ
;

249 
mgmt_hdr
.
key_ty≥
 = 
	`©h9k_cmn_gë_hw_¸y±o_keyty≥
(
skb
);

250 i‡(
mgmt_hdr
.
key_ty≥
 =
ATH9K_KEY_TYPE_CLEAR
)

251 
mgmt_hdr
.
keyix
 = (
u8
Ë
ATH9K_TXKEYIX_INVALID
;

253 
mgmt_hdr
.
keyix
 = 
tx_öfo
->
c⁄åﬁ
.
hw_key
->
hw_key_idx
;

255 
tx_fhdr
 = 
	`skb_push
(
skb
, (
mgmt_hdr
));

256 
	`mem˝y
(
tx_fhdr
, (
u8
 *Ë&
mgmt_hdr
, (mgmt_hdr));

257 
tx_˘l
->
ïid
 = 
¥iv
->
mgmt_ï
;

258 
	}
}

260 
	$©h9k_htc_tx_d©a
(
©h9k_htc_¥iv
 *
¥iv
,

261 
õì80211_vif
 *
vif
,

262 
sk_buff
 *
skb
,

263 
u8
 
°a_idx
, u8 
vif_idx
, u8 
¶Ÿ
,

264 
boﬁ
 
is_ˇb
)

266 
õì80211_tx_öfo
 *
tx_öfo
 = 
	`IEEE80211_SKB_CB
(
skb
);

267 
õì80211_hdr
 *
hdr
;

268 
©h9k_htc_tx_˘l
 *
tx_˘l
;

269 
tx_‰ame_hdr
 
tx_hdr
;

270 
u32
 
Êags
 = 0;

271 
u8
 *
qc
, *
tx_fhdr
;

272 
u16
 
qnum
;

274 
tx_˘l
 = 
	`HTC_SKB_CB
(
skb
);

275 
hdr
 = (
õì80211_hdr
 *Ë
skb
->
d©a
;

277 
	`mem£t
(
tx_˘l
, 0, (*tx_ctl));

278 
	`mem£t
(&
tx_hdr
, 0, (
tx_‰ame_hdr
));

280 
tx_hdr
.
node_idx
 = 
°a_idx
;

281 
tx_hdr
.
vif_idx
 = vif_idx;

282 
tx_hdr
.
cookõ
 = 
¶Ÿ
;

290 
tx_˘l
->
°a_idx
 = sta_idx;

292 i‡(
tx_öfo
->
Êags
 & 
IEEE80211_TX_CTL_AMPDU
) {

293 
tx_˘l
->
ty≥
 = 
ATH9K_HTC_AMPDU
;

294 
tx_hdr
.
d©a_ty≥
 = 
ATH9K_HTC_AMPDU
;

296 
tx_˘l
->
ty≥
 = 
ATH9K_HTC_NORMAL
;

297 
tx_hdr
.
d©a_ty≥
 = 
ATH9K_HTC_NORMAL
;

300 i‡(
	`õì80211_is_d©a_qos
(
hdr
->
‰ame_c⁄åﬁ
)) {

301 
qc
 = 
	`õì80211_gë_qos_˘l
(
hdr
);

302 
tx_hdr
.
tidno
 = 
qc
[0] & 
IEEE80211_QOS_CTL_TID_MASK
;

306 i‡(
¥iv
->
hw
->
wùhy
->
πs_thªshﬁd
 !(
u32
) -1)

307 i‡(
skb
->
Àn
 > 
¥iv
->
hw
->
wùhy
->
πs_thªshﬁd
)

308 
Êags
 |
ATH9K_HTC_TX_RTSCTS
;

311 i‡(!(
Êags
 & 
ATH9K_HTC_TX_RTSCTS
) &&

312 (
vif
 && vif->
bss_c⁄f
.
u£_˘s_¥Ÿ
))

313 
Êags
 |
ATH9K_HTC_TX_CTSONLY
;

315 
tx_hdr
.
Êags
 = 
	`˝u_to_be32
(flags);

316 
tx_hdr
.
key_ty≥
 = 
	`©h9k_cmn_gë_hw_¸y±o_keyty≥
(
skb
);

317 i‡(
tx_hdr
.
key_ty≥
 =
ATH9K_KEY_TYPE_CLEAR
)

318 
tx_hdr
.
keyix
 = (
u8
Ë
ATH9K_TXKEYIX_INVALID
;

320 
tx_hdr
.
keyix
 = 
tx_öfo
->
c⁄åﬁ
.
hw_key
->
hw_key_idx
;

322 
tx_fhdr
 = 
	`skb_push
(
skb
, (
tx_hdr
));

323 
	`mem˝y
(
tx_fhdr
, (
u8
 *Ë&
tx_hdr
, (tx_hdr));

325 i‡(
is_ˇb
) {

326 
CAB_STAT_INC
;

327 
tx_˘l
->
ïid
 = 
¥iv
->
ˇb_ï
;

331 
qnum
 = 
	`skb_gë_queue_m≠pög
(
skb
);

332 
tx_˘l
->
ïid
 = 
	`gë_htc_ïid
(
¥iv
, 
qnum
);

333 
	}
}

335 
	$©h9k_htc_tx_°¨t
(
©h9k_htc_¥iv
 *
¥iv
,

336 
õì80211_°a
 *
°a
,

337 
sk_buff
 *
skb
,

338 
u8
 
¶Ÿ
, 
boﬁ
 
is_ˇb
)

340 
õì80211_hdr
 *
hdr
;

341 
õì80211_tx_öfo
 *
tx_öfo
 = 
	`IEEE80211_SKB_CB
(
skb
);

342 
õì80211_vif
 *
vif
 = 
tx_öfo
->
c⁄åﬁ
.vif;

343 
©h9k_htc_°a
 *
i°a
;

344 
©h9k_htc_vif
 *
avp
 = 
NULL
;

345 
u8
 
°a_idx
, 
vif_idx
;

347 
hdr
 = (
õì80211_hdr
 *Ë
skb
->
d©a
;

353 i‡(
vif
) {

354 
avp
 = (
©h9k_htc_vif
 *Ë
vif
->
drv_¥iv
;

355 
vif_idx
 = 
avp
->
ödex
;

357 i‡(!
¥iv
->
ah
->
is_m⁄ô‹ög
) {

358 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
¥iv
->
ah
), 
XMIT
,

360  -
EINVAL
;

363 
vif_idx
 = 
¥iv
->
m⁄_vif_idx
;

369 i‡(
°a
) {

370 
i°a
 = (
©h9k_htc_°a
 *Ë
°a
->
drv_¥iv
;

371 
°a_idx
 = 
i°a
->
ödex
;

373 
°a_idx
 = 
¥iv
->
vif_°a_pos
[
vif_idx
];

376 i‡(
	`õì80211_is_d©a
(
hdr
->
‰ame_c⁄åﬁ
))

377 
	`©h9k_htc_tx_d©a
(
¥iv
, 
vif
, 
skb
,

378 
°a_idx
, 
vif_idx
, 
¶Ÿ
, 
is_ˇb
);

380 
	`©h9k_htc_tx_mgmt
(
¥iv
, 
avp
, 
skb
,

381 
°a_idx
, 
vif_idx
, 
¶Ÿ
);

384  
	`htc_£nd
(
¥iv
->
htc
, 
skb
);

385 
	}
}

387 
ölöe
 
boﬁ
 
	$__©h9k_htc_check_tx_aggr
(
©h9k_htc_¥iv
 *
¥iv
,

388 
©h9k_htc_°a
 *
i°a
, 
u8
 
tid
)

390 
boﬁ
 
ªt
 = 
Ál£
;

392 
	`•ö_lock_bh
(&
¥iv
->
tx
.
tx_lock
);

393 i‡((
tid
 < 
ATH9K_HTC_MAX_TID
Ë&& (
i°a
->
tid_°©e
[tid] =
AGGR_STOP
))

394 
ªt
 = 
åue
;

395 
	`•ö_u∆ock_bh
(&
¥iv
->
tx
.
tx_lock
);

397  
ªt
;

398 
	}
}

400 
	$©h9k_htc_check_tx_aggr
(
©h9k_htc_¥iv
 *
¥iv
,

401 
õì80211_vif
 *
vif
,

402 
sk_buff
 *
skb
)

404 
õì80211_°a
 *
°a
;

405 
õì80211_hdr
 *
hdr
;

406 
__À16
 
fc
;

408 
hdr
 = (
õì80211_hdr
 *Ë
skb
->
d©a
;

409 
fc
 = 
hdr
->
‰ame_c⁄åﬁ
;

411 
	`rcu_ªad_lock
();

413 
°a
 = 
	`õì80211_föd_°a
(
vif
, 
hdr
->
addr1
);

414 i‡(!
°a
) {

415 
	`rcu_ªad_u∆ock
();

419 i‡(
°a
 && 
	`c⁄f_is_ht
(&
¥iv
->
hw
->
c⁄f
) &&

420 !(
skb
->
¥Ÿocﬁ
 =
	`˝u_to_be16
(
ETH_P_PAE
))) {

421 i‡(
	`õì80211_is_d©a_qos
(
fc
)) {

422 
u8
 *
qc
, 
tid
;

423 
©h9k_htc_°a
 *
i°a
;

425 
qc
 = 
	`õì80211_gë_qos_˘l
(
hdr
);

426 
tid
 = 
qc
[0] & 0xf;

427 
i°a
 = (
©h9k_htc_°a
 *)
°a
->
drv_¥iv
;

428 i‡(
	`__©h9k_htc_check_tx_aggr
(
¥iv
, 
i°a
, 
tid
)) {

429 
	`õì80211_°¨t_tx_ba_£ssi⁄
(
°a
, 
tid
, 0);

430 
	`•ö_lock_bh
(&
¥iv
->
tx
.
tx_lock
);

431 
i°a
->
tid_°©e
[
tid
] = 
AGGR_PROGRESS
;

432 
	`•ö_u∆ock_bh
(&
¥iv
->
tx
.
tx_lock
);

437 
	`rcu_ªad_u∆ock
();

438 
	}
}

440 
	$©h9k_htc_tx_¥o˚ss
(
©h9k_htc_¥iv
 *
¥iv
,

441 
sk_buff
 *
skb
,

442 
__wmi_evít_tx°©us
 *
txs
)

444 
õì80211_vif
 *
vif
;

445 
©h9k_htc_tx_˘l
 *
tx_˘l
;

446 
õì80211_tx_öfo
 *
tx_öfo
;

447 
õì80211_tx_øã
 *
øã
;

448 
õì80211_c⁄f
 *
cur_c⁄f
 = &
¥iv
->
hw
->
c⁄f
;

449 
boﬁ
 
txok
;

450 
¶Ÿ
;

451 
hdæí
, 
∑dsize
;

453 
¶Ÿ
 = 
	`°rù_drv_hódî
(
¥iv
, 
skb
);

454 i‡(
¶Ÿ
 < 0) {

455 
	`dev_k‰ì_skb_™y
(
skb
);

459 
tx_˘l
 = 
	`HTC_SKB_CB
(
skb
);

460 
txok
 = 
tx_˘l
->txok;

461 
tx_öfo
 = 
	`IEEE80211_SKB_CB
(
skb
);

462 
vif
 = 
tx_öfo
->
c⁄åﬁ
.vif;

463 
øã
 = &
tx_öfo
->
°©us
.
øãs
[0];

465 
	`mem£t
(&
tx_öfo
->
°©us
, 0, (tx_info->status));

471 i‡(!
txok
 || !
vif
 || !
txs
)

472 
£nd_mac80211
;

474 i‡(
txs
->
ts_Êags
 & 
ATH9K_HTC_TXSTAT_ACK
) {

475 
tx_öfo
->
Êags
 |
IEEE80211_TX_STAT_ACK
;

476 i‡(
tx_öfo
->
Êags
 & 
IEEE80211_TX_CTL_AMPDU
)

477 
tx_öfo
->
Êags
 |
IEEE80211_TX_STAT_AMPDU
;

480 i‡(
txs
->
ts_Êags
 & 
ATH9K_HTC_TXSTAT_FILT
)

481 
tx_öfo
->
Êags
 |
IEEE80211_TX_STAT_TX_FILTERED
;

483 i‡(
txs
->
ts_Êags
 & 
ATH9K_HTC_TXSTAT_RTC_CTS
)

484 
øã
->
Êags
 |
IEEE80211_TX_RC_USE_RTS_CTS
;

486 
øã
->
cou¡
 = 1;

487 
øã
->
idx
 = 
	`MS
(
txs
->
ts_øã
, 
ATH9K_HTC_TXSTAT_RATE
);

489 i‡(
txs
->
ts_Êags
 & 
ATH9K_HTC_TXSTAT_MCS
) {

490 
øã
->
Êags
 |
IEEE80211_TX_RC_MCS
;

492 i‡(
txs
->
ts_Êags
 & 
ATH9K_HTC_TXSTAT_CW40
)

493 
øã
->
Êags
 |
IEEE80211_TX_RC_40_MHZ_WIDTH
;

494 i‡(
txs
->
ts_Êags
 & 
ATH9K_HTC_TXSTAT_SGI
)

495 
øã
->
Êags
 |
IEEE80211_TX_RC_SHORT_GI
;

497 i‡(
cur_c⁄f
->
ch™def
.
ch™
->
b™d
 =
IEEE80211_BAND_5GHZ
)

498 
øã
->
idx
 += 4;

501 
	`©h9k_htc_check_tx_aggr
(
¥iv
, 
vif
, 
skb
);

503 
£nd_mac80211
:

504 
	`•ö_lock_bh
(&
¥iv
->
tx
.
tx_lock
);

505 i‡(
	`WARN_ON
(--
¥iv
->
tx
.
queued_˙t
 < 0))

506 
¥iv
->
tx
.
queued_˙t
 = 0;

507 
	`•ö_u∆ock_bh
(&
¥iv
->
tx
.
tx_lock
);

509 
	`©h9k_htc_tx_˛ór_¶Ÿ
(
¥iv
, 
¶Ÿ
);

512 
hdæí
 = 
	`õì80211_gë_hdæí_‰om_skb
(
skb
);

514 
∑dsize
 = 
hdæí
 & 3;

515 i‡(
∑dsize
 && 
skb
->
Àn
 > 
hdæí
 +Öadsize) {

516 
	`memmove
(
skb
->
d©a
 + 
∑dsize
, skb->d©a, 
hdæí
);

517 
	`skb_puŒ
(
skb
, 
∑dsize
);

521 
	`õì80211_tx_°©us
(
¥iv
->
hw
, 
skb
);

522 
	}
}

524 
ölöe
 
	$©h9k_htc_tx_døöq
(
©h9k_htc_¥iv
 *
¥iv
,

525 
sk_buff_hód
 *
queue
)

527 
sk_buff
 *
skb
;

529 (
skb
 = 
	`skb_dequeue
(
queue
)Ë!
NULL
) {

530 
	`©h9k_htc_tx_¥o˚ss
(
¥iv
, 
skb
, 
NULL
);

532 
	}
}

534 
	$©h9k_htc_tx_døö
(
©h9k_htc_¥iv
 *
¥iv
)

536 
©h9k_htc_tx_evít
 *
evít
, *
tmp
;

538 
	`•ö_lock_bh
(&
¥iv
->
tx
.
tx_lock
);

539 
¥iv
->
tx
.
Êags
 |
ATH9K_HTC_OP_TX_DRAIN
;

540 
	`•ö_u∆ock_bh
(&
¥iv
->
tx
.
tx_lock
);

546 
	`htc_°›
(
¥iv
->
htc
);

547 
	`èskÀt_kûl
(&
¥iv
->
wmi
->
wmi_evít_èskÀt
);

548 
	`èskÀt_kûl
(&
¥iv
->
tx_Áûed_èskÀt
);

550 
	`©h9k_htc_tx_døöq
(
¥iv
, &¥iv->
tx
.
mgmt_ï_queue
);

551 
	`©h9k_htc_tx_døöq
(
¥iv
, &¥iv->
tx
.
ˇb_ï_queue
);

552 
	`©h9k_htc_tx_døöq
(
¥iv
, &¥iv->
tx
.
d©a_be_queue
);

553 
	`©h9k_htc_tx_døöq
(
¥iv
, &¥iv->
tx
.
d©a_bk_queue
);

554 
	`©h9k_htc_tx_døöq
(
¥iv
, &¥iv->
tx
.
d©a_vi_queue
);

555 
	`©h9k_htc_tx_døöq
(
¥iv
, &¥iv->
tx
.
d©a_vo_queue
);

556 
	`©h9k_htc_tx_døöq
(
¥iv
, &¥iv->
tx
.
tx_Áûed
);

561 
	`•ö_lock_bh
(&
¥iv
->
wmi
->
evít_lock
);

562 
	`li°_f‹_óch_íåy_ß„
(
evít
, 
tmp
, &
¥iv
->
wmi
->
≥ndög_tx_evíts
, 
li°
) {

563 
	`li°_dñ
(&
evít
->
li°
);

564 
	`k‰ì
(
evít
);

566 
	`•ö_u∆ock_bh
(&
¥iv
->
wmi
->
evít_lock
);

568 
	`•ö_lock_bh
(&
¥iv
->
tx
.
tx_lock
);

569 
¥iv
->
tx
.
Êags
 &~
ATH9K_HTC_OP_TX_DRAIN
;

570 
	`•ö_u∆ock_bh
(&
¥iv
->
tx
.
tx_lock
);

571 
	}
}

573 
	$©h9k_tx_Áûed_èskÀt
(
d©a
)

575 
©h9k_htc_¥iv
 *
¥iv
 = (©h9k_htc_¥iv *)
d©a
;

577 
	`•ö_lock_bh
(&
¥iv
->
tx
.
tx_lock
);

578 i‡(
¥iv
->
tx
.
Êags
 & 
ATH9K_HTC_OP_TX_DRAIN
) {

579 
	`•ö_u∆ock_bh
(&
¥iv
->
tx
.
tx_lock
);

582 
	`•ö_u∆ock_bh
(&
¥iv
->
tx
.
tx_lock
);

584 
	`©h9k_htc_tx_døöq
(
¥iv
, &¥iv->
tx
.
tx_Áûed
);

585 
	}
}

587 
ölöe
 
boﬁ
 
	$check_cookõ
(
©h9k_htc_¥iv
 *
¥iv
,

588 
sk_buff
 *
skb
,

589 
u8
 
cookõ
, u8 
ïid
)

591 
u8
 
fcookõ
 = 0;

593 i‡(
ïid
 =
¥iv
->
mgmt_ï
) {

594 
tx_mgmt_hdr
 *
hdr
;

595 
hdr
 = (
tx_mgmt_hdr
 *Ë
skb
->
d©a
;

596 
fcookõ
 = 
hdr
->
cookõ
;

597 } i‡((
ïid
 =
¥iv
->
d©a_bk_ï
) ||

598 (
ïid
 =
¥iv
->
d©a_be_ï
) ||

599 (
ïid
 =
¥iv
->
d©a_vi_ï
) ||

600 (
ïid
 =
¥iv
->
d©a_vo_ï
) ||

601 (
ïid
 =
¥iv
->
ˇb_ï
)) {

602 
tx_‰ame_hdr
 *
hdr
;

603 
hdr
 = (
tx_‰ame_hdr
 *Ë
skb
->
d©a
;

604 
fcookõ
 = 
hdr
->
cookõ
;

607 i‡(
fcookõ
 =
cookõ
)

608  
åue
;

610  
Ál£
;

611 
	}
}

613 
sk_buff
* 
	$©h9k_htc_tx_gë_∑ckë
(
©h9k_htc_¥iv
 *
¥iv
,

614 
__wmi_evít_tx°©us
 *
txs
)

616 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

617 
sk_buff_hód
 *
ïid_queue
;

618 
sk_buff
 *
skb
, *
tmp
;

619 
Êags
;

620 
u8
 
ïid
 = 
	`MS
(
txs
->
ts_øã
, 
ATH9K_HTC_TXSTAT_EPID
);

622 
ïid_queue
 = 
	`gë_htc_ïid_queue
(
¥iv
, 
ïid
);

623 i‡(!
ïid_queue
)

624  
NULL
;

626 
	`•ö_lock_úqßve
(&
ïid_queue
->
lock
, 
Êags
);

627 
	`skb_queue_wÆk_ß„
(
ïid_queue
, 
skb
, 
tmp
) {

628 i‡(
	`check_cookõ
(
¥iv
, 
skb
, 
txs
->
cookõ
, 
ïid
)) {

629 
	`__skb_u∆ök
(
skb
, 
ïid_queue
);

630 
	`•ö_u∆ock_úqª°‹e
(&
ïid_queue
->
lock
, 
Êags
);

631  
skb
;

634 
	`•ö_u∆ock_úqª°‹e
(&
ïid_queue
->
lock
, 
Êags
);

636 
	`©h_dbg
(
comm⁄
, 
XMIT
, "No matchingÖacket for cookie: %d,Épid: %d\n",

637 
txs
->
cookõ
, 
ïid
);

639  
NULL
;

640 
	}
}

642 
	$©h9k_htc_tx°©us
(
©h9k_htc_¥iv
 *
¥iv
, *
wmi_evít
)

644 
wmi_evít_tx°©us
 *
txs
 = (wmi_evít_tx°©u†*)
wmi_evít
;

645 
__wmi_evít_tx°©us
 *
__txs
;

646 
sk_buff
 *
skb
;

647 
©h9k_htc_tx_evít
 *
tx_≥nd
;

648 
i
;

650 
i
 = 0; i < 
txs
->
˙t
; i++) {

651 
	`WARN_ON
(
txs
->
˙t
 > 
HTC_MAX_TX_STATUS
);

653 
__txs
 = &
txs
->
tx°©us
[
i
];

655 
skb
 = 
	`©h9k_htc_tx_gë_∑ckë
(
¥iv
, 
__txs
);

656 i‡(!
skb
) {

661 
tx_≥nd
 = 
	`kzÆloc
((
©h9k_htc_tx_evít
),

662 
GFP_ATOMIC
);

663 i‡(!
tx_≥nd
)

666 
	`mem˝y
(&
tx_≥nd
->
txs
, 
__txs
,

667 (
__wmi_evít_tx°©us
));

669 
	`•ö_lock
(&
¥iv
->
wmi
->
evít_lock
);

670 
	`li°_add_èû
(&
tx_≥nd
->
li°
,

671 &
¥iv
->
wmi
->
≥ndög_tx_evíts
);

672 
	`•ö_u∆ock
(&
¥iv
->
wmi
->
evít_lock
);

677 
	`©h9k_htc_tx_¥o˚ss
(
¥iv
, 
skb
, 
__txs
);

681 
	`©h9k_htc_check_wake_queues
(
¥iv
);

682 
	}
}

684 
	$©h9k_htc_txï
(*
drv_¥iv
, 
sk_buff
 *
skb
,

685 
htc_ídpoöt_id
 
ï_id
, 
boﬁ
 
txok
)

687 
©h9k_htc_¥iv
 *
¥iv
 = (©h9k_htc_¥iv *Ë
drv_¥iv
;

688 
©h9k_htc_tx_˘l
 *
tx_˘l
;

689 
sk_buff_hód
 *
ïid_queue
;

691 
tx_˘l
 = 
	`HTC_SKB_CB
(
skb
);

692 
tx_˘l
->
txok
 =Åxok;

693 
tx_˘l
->
time°amp
 = 
jiffõs
;

695 i‡(!
txok
) {

696 
	`skb_queue_èû
(&
¥iv
->
tx
.
tx_Áûed
, 
skb
);

697 
	`èskÀt_scheduÀ
(&
¥iv
->
tx_Áûed_èskÀt
);

701 
ïid_queue
 = 
	`gë_htc_ïid_queue
(
¥iv
, 
ï_id
);

702 i‡(!
ïid_queue
) {

703 
	`dev_k‰ì_skb_™y
(
skb
);

707 
	`skb_queue_èû
(
ïid_queue
, 
skb
);

708 
	}
}

710 
ölöe
 
boﬁ
 
	$check_∑ckë
(
©h9k_htc_¥iv
 *
¥iv
, 
sk_buff
 *
skb
)

712 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

713 
©h9k_htc_tx_˘l
 *
tx_˘l
;

715 
tx_˘l
 = 
	`HTC_SKB_CB
(
skb
);

717 i‡(
	`time_a·î
(
jiffõs
,

718 
tx_˘l
->
time°amp
 +

719 
	`m£cs_to_jiffõs
(
ATH9K_HTC_TX_TIMEOUT_INTERVAL
))) {

720 
	`©h_dbg
(
comm⁄
, 
XMIT
, "DroppingáÖacket dueÅo TXÅimeout\n");

721  
åue
;

724  
Ál£
;

725 
	}
}

727 
	$©h9k_htc_tx_˛ónup_queue
(
©h9k_htc_¥iv
 *
¥iv
,

728 
sk_buff_hód
 *
ïid_queue
)

730 
boﬁ
 
¥o˚ss
 = 
Ál£
;

731 
Êags
;

732 
sk_buff
 *
skb
, *
tmp
;

733 
sk_buff_hód
 
queue
;

735 
	`skb_queue_hód_öô
(&
queue
);

737 
	`•ö_lock_úqßve
(&
ïid_queue
->
lock
, 
Êags
);

738 
	`skb_queue_wÆk_ß„
(
ïid_queue
, 
skb
, 
tmp
) {

739 i‡(
	`check_∑ckë
(
¥iv
, 
skb
)) {

740 
	`__skb_u∆ök
(
skb
, 
ïid_queue
);

741 
	`__skb_queue_èû
(&
queue
, 
skb
);

742 
¥o˚ss
 = 
åue
;

745 
	`•ö_u∆ock_úqª°‹e
(&
ïid_queue
->
lock
, 
Êags
);

747 i‡(
¥o˚ss
) {

748 
	`skb_queue_wÆk_ß„
(&
queue
, 
skb
, 
tmp
) {

749 
	`__skb_u∆ök
(
skb
, &
queue
);

750 
	`©h9k_htc_tx_¥o˚ss
(
¥iv
, 
skb
, 
NULL
);

753 
	}
}

755 
	$©h9k_htc_tx_˛ónup_timî
(
d©a
)

757 
©h9k_htc_¥iv
 *
¥iv
 = (©h9k_htc_¥iv *Ë
d©a
;

758 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

759 
©h9k_htc_tx_evít
 *
evít
, *
tmp
;

760 
sk_buff
 *
skb
;

762 
	`•ö_lock
(&
¥iv
->
wmi
->
evít_lock
);

763 
	`li°_f‹_óch_íåy_ß„
(
evít
, 
tmp
, &
¥iv
->
wmi
->
≥ndög_tx_evíts
, 
li°
) {

765 
skb
 = 
	`©h9k_htc_tx_gë_∑ckë
(
¥iv
, &
evít
->
txs
);

766 i‡(
skb
) {

767 
	`©h_dbg
(
comm⁄
, 
XMIT
,

769 
evít
->
txs
.
cookõ
,

770 
	`MS
(
evít
->
txs
.
ts_øã
, 
ATH9K_HTC_TXSTAT_EPID
));

772 
	`©h9k_htc_tx_¥o˚ss
(
¥iv
, 
skb
, &
evít
->
txs
);

773 
	`li°_dñ
(&
evít
->
li°
);

774 
	`k‰ì
(
evít
);

778 i‡(++
evít
->
cou¡
 >
ATH9K_HTC_TX_TIMEOUT_COUNT
) {

779 
	`li°_dñ
(&
evít
->
li°
);

780 
	`k‰ì
(
evít
);

783 
	`•ö_u∆ock
(&
¥iv
->
wmi
->
evít_lock
);

788 
	`©h9k_htc_tx_˛ónup_queue
(
¥iv
, &¥iv->
tx
.
mgmt_ï_queue
);

789 
	`©h9k_htc_tx_˛ónup_queue
(
¥iv
, &¥iv->
tx
.
ˇb_ï_queue
);

790 
	`©h9k_htc_tx_˛ónup_queue
(
¥iv
, &¥iv->
tx
.
d©a_be_queue
);

791 
	`©h9k_htc_tx_˛ónup_queue
(
¥iv
, &¥iv->
tx
.
d©a_bk_queue
);

792 
	`©h9k_htc_tx_˛ónup_queue
(
¥iv
, &¥iv->
tx
.
d©a_vi_queue
);

793 
	`©h9k_htc_tx_˛ónup_queue
(
¥iv
, &¥iv->
tx
.
d©a_vo_queue
);

796 
	`©h9k_htc_check_wake_queues
(
¥iv
);

798 
	`mod_timî
(&
¥iv
->
tx
.
˛ónup_timî
,

799 
jiffõs
 + 
	`m£cs_to_jiffõs
(
ATH9K_HTC_TX_CLEANUP_INTERVAL
));

800 
	}
}

802 
	$©h9k_tx_öô
(
©h9k_htc_¥iv
 *
¥iv
)

804 
	`skb_queue_hód_öô
(&
¥iv
->
tx
.
mgmt_ï_queue
);

805 
	`skb_queue_hód_öô
(&
¥iv
->
tx
.
ˇb_ï_queue
);

806 
	`skb_queue_hód_öô
(&
¥iv
->
tx
.
d©a_be_queue
);

807 
	`skb_queue_hód_öô
(&
¥iv
->
tx
.
d©a_bk_queue
);

808 
	`skb_queue_hód_öô
(&
¥iv
->
tx
.
d©a_vi_queue
);

809 
	`skb_queue_hód_öô
(&
¥iv
->
tx
.
d©a_vo_queue
);

810 
	`skb_queue_hód_öô
(&
¥iv
->
tx
.
tx_Áûed
);

812 
	}
}

814 
	$©h9k_tx_˛ónup
(
©h9k_htc_¥iv
 *
¥iv
)

817 
	}
}

819 
boﬁ
 
	$©h9k_htc_txq_£tup
(
©h9k_htc_¥iv
 *
¥iv
, 
subty≥
)

821 
©h_hw
 *
ah
 = 
¥iv
->ah;

822 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

823 
©h9k_tx_queue_öfo
 
qi
;

824 
qnum
;

826 
	`mem£t
(&
qi
, 0, (qi));

827 
	`ATH9K_HTC_INIT_TXQ
(
subty≥
);

829 
qnum
 = 
	`©h9k_hw_£tu±xqueue
(
¥iv
->
ah
, 
ATH9K_TX_QUEUE_DATA
, &
qi
);

830 i‡(
qnum
 == -1)

831  
Ál£
;

833 i‡(
qnum
 >
	`ARRAY_SIZE
(
¥iv
->
hwq_m≠
)) {

834 
	`©h_îr
(
comm⁄
, "qnum %u out ofÑange, max %zu!\n",

835 
qnum
, 
	`ARRAY_SIZE
(
¥iv
->
hwq_m≠
));

836 
	`©h9k_hw_ªÀa£txqueue
(
ah
, 
qnum
);

837  
Ál£
;

840 
¥iv
->
hwq_m≠
[
subty≥
] = 
qnum
;

841  
åue
;

842 
	}
}

844 
	$©h9k_htc_ˇbq_£tup
(
©h9k_htc_¥iv
 *
¥iv
)

846 
©h9k_tx_queue_öfo
 
qi
;

848 
	`mem£t
(&
qi
, 0, (qi));

849 
	`ATH9K_HTC_INIT_TXQ
(0);

851  
	`©h9k_hw_£tu±xqueue
(
¥iv
->
ah
, 
ATH9K_TX_QUEUE_CAB
, &
qi
);

852 
	}
}

861 
u32
 
	$©h9k_htc_ˇl¸xfûãr
(
©h9k_htc_¥iv
 *
¥iv
)

863 
	#RX_FILTER_PRESERVE
 (
ATH9K_RX_FILTER_PHYERR
 | 
ATH9K_RX_FILTER_PHYRADAR
)

	)

865 
©h_hw
 *
ah
 = 
¥iv
->ah;

866 
u32
 
rfût
;

868 
rfût
 = (
	`©h9k_hw_gërxfûãr
(
ah
Ë& 
RX_FILTER_PRESERVE
)

869 | 
ATH9K_RX_FILTER_UCAST
 | 
ATH9K_RX_FILTER_BCAST


870 | 
ATH9K_RX_FILTER_MCAST
;

872 i‡(
¥iv
->
rxfûãr
 & 
FIF_PROBE_REQ
)

873 
rfût
 |
ATH9K_RX_FILTER_PROBEREQ
;

880 i‡(((
ah
->
›mode
 !
NL80211_IFTYPE_AP
) &&

881 (
¥iv
->
rxfûãr
 & 
FIF_PROMISC_IN_BSS
)) ||

882 
ah
->
is_m⁄ô‹ög
)

883 
rfût
 |
ATH9K_RX_FILTER_PROM
;

885 i‡(
¥iv
->
rxfûãr
 & 
FIF_CONTROL
)

886 
rfût
 |
ATH9K_RX_FILTER_CONTROL
;

888 i‡((
ah
->
›mode
 =
NL80211_IFTYPE_STATION
) &&

889 (
¥iv
->
nvifs
 <= 1) &&

890 !(
¥iv
->
rxfûãr
 & 
FIF_BCN_PRBRESP_PROMISC
))

891 
rfût
 |
ATH9K_RX_FILTER_MYBEACON
;

893 
rfût
 |
ATH9K_RX_FILTER_BEACON
;

895 i‡(
	`c⁄f_is_ht
(&
¥iv
->
hw
->
c⁄f
)) {

896 
rfût
 |
ATH9K_RX_FILTER_COMP_BAR
;

897 
rfût
 |
ATH9K_RX_FILTER_UNCOMP_BA_BAR
;

900 i‡(
¥iv
->
rxfûãr
 & 
FIF_PSPOLL
)

901 
rfût
 |
ATH9K_RX_FILTER_PSPOLL
;

903 i‡(
¥iv
->
nvifs
 > 1 ||Öriv->
rxfûãr
 & 
FIF_OTHER_BSS
)

904 
rfût
 |
ATH9K_RX_FILTER_MCAST_BCAST_ALL
;

906  
rfût
;

908 #unde‡
RX_FILTER_PRESERVE


909 
	}
}

914 
	$©h9k_htc_›mode_öô
(
©h9k_htc_¥iv
 *
¥iv
)

916 
©h_hw
 *
ah
 = 
¥iv
->ah;

917 
u32
 
rfût
, 
mfût
[2];

920 
rfût
 = 
	`©h9k_htc_ˇl¸xfûãr
(
¥iv
);

921 
	`©h9k_hw_£åxfûãr
(
ah
, 
rfût
);

924 
mfût
[0] = mfilt[1] = ~0;

925 
	`©h9k_hw_£tmˇ°fûãr
(
ah
, 
mfût
[0], mfilt[1]);

926 
	}
}

928 
	$©h9k_ho°_rx_öô
(
©h9k_htc_¥iv
 *
¥iv
)

930 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

931 
	`©h9k_hw_rxía
(
¥iv
->
ah
);

932 
	`©h9k_htc_›mode_öô
(
¥iv
);

933 
	`©h9k_hw_°¨çcuª˚ive
(
¥iv
->
ah
, 
	`ã°_bô
(
ATH_OP_SCANNING
, &
comm⁄
->
›_Êags
));

934 
	}
}

936 
ölöe
 
	$c⁄vît_htc_Êag
(
©h_rx_°©us
 *
rx_°©s
,

937 
©h_htc_rx_°©us
 *
rx°©us
)

939 
rx_°©s
->
Êag
 = 0;

940 i‡(
rx°©us
->
rs_Êags
 & 
ATH9K_RX_2040
)

941 
rx_°©s
->
Êag
 |
RX_FLAG_40MHZ
;

942 i‡(
rx°©us
->
rs_Êags
 & 
ATH9K_RX_GI
)

943 
rx_°©s
->
Êag
 |
RX_FLAG_SHORT_GI
;

944 
	}
}

946 
	$rx_°©us_htc_to_©h
(
©h_rx_°©us
 *
rx_°©s
,

947 
©h_htc_rx_°©us
 *
rx°©us
)

949 
rx_°©s
->
rs_d©Æí
 = 
rx°©us
->rs_datalen;

950 
rx_°©s
->
rs_°©us
 = 
rx°©us
->rs_status;

951 
rx_°©s
->
rs_phyîr
 = 
rx°©us
->rs_phyerr;

952 
rx_°©s
->
rs_rssi
 = 
rx°©us
->rs_rssi;

953 
rx_°©s
->
rs_keyix
 = 
rx°©us
->rs_keyix;

954 
rx_°©s
->
rs_øã
 = 
rx°©us
->rs_rate;

955 
rx_°©s
->
rs_™ã¬a
 = 
rx°©us
->rs_antenna;

956 
rx_°©s
->
rs_m‹e
 = 
rx°©us
->rs_more;

958 
	`mem˝y
(
rx_°©s
->
rs_rssi_˘l
, 
rx°©us
->rs_rssi_ctl,

959 (
rx_°©s
->
rs_rssi_˘l
));

960 
	`mem˝y
(
rx_°©s
->
rs_rssi_ext
, 
rx°©us
->rs_rssi_ext,

961 (
rx_°©s
->
rs_rssi_ext
));

963 
rx_°©s
->
rs_ißggr
 = 
rx°©us
->rs_isaggr;

964 
rx_°©s
->
rs_m‹óggr
 = 
rx°©us
->rs_moreaggr;

965 
rx_°©s
->
rs_num_dñims
 = 
rx°©us
->rs_num_delims;

966 
	`c⁄vît_htc_Êag
(
rx_°©s
, 
rx°©us
);

967 
	}
}

969 
boﬁ
 
	$©h9k_rx_¥ï¨e
(
©h9k_htc_¥iv
 *
¥iv
,

970 
©h9k_htc_rxbuf
 *
rxbuf
,

971 
õì80211_rx_°©us
 *
rx_°©us
)

974 
õì80211_hdr
 *
hdr
;

975 
õì80211_hw
 *
hw
 = 
¥iv
->hw;

976 
sk_buff
 *
skb
 = 
rxbuf
->skb;

977 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

978 
©h_hw
 *
ah
 = 
comm⁄
->ah;

979 
©h_htc_rx_°©us
 *
rx°©us
;

980 
©h_rx_°©us
 
rx_°©s
;

981 
boﬁ
 
de¸y±_îr‹
;

983 i‡(
skb
->
Àn
 < 
HTC_RX_FRAME_HEADER_SIZE
) {

984 
	`©h_îr
(
comm⁄
, "Corrupted RX frame, dropping (len: %d)\n",

985 
skb
->
Àn
);

986 
rx_√xt
;

989 
rx°©us
 = (
©h_htc_rx_°©us
 *)
skb
->
d©a
;

991 i‡(
	`be16_to_˝u
(
rx°©us
->
rs_d©Æí
) -

992 (
skb
->
Àn
 - 
HTC_RX_FRAME_HEADER_SIZE
) != 0) {

993 
	`©h_îr
(
comm⁄
,

995 
rx°©us
->
rs_d©Æí
, 
skb
->
Àn
);

996 
rx_√xt
;

1001 
	`mem£t
(
rx_°©us
, 0, (
õì80211_rx_°©us
));

1005 
	`rx_°©us_htc_to_©h
(&
rx_°©s
, 
rx°©us
);

1006 
	`©h9k_htc_îr_°©_rx
(
¥iv
, &
rx_°©s
);

1007 
rx_°©us
->
ma˘ime
 = 
	`be64_to_˝u
(
rx°©us
->
rs_t°amp
);

1008 
	`skb_puŒ
(
skb
, 
HTC_RX_FRAME_HEADER_SIZE
);

1014 
hdr
 = (
õì80211_hdr
 *)
skb
->
d©a
;

1015 i‡(!
	`©h9k_cmn_rx_ac˚±
(
comm⁄
, 
hdr
, 
rx_°©us
, &
rx_°©s
,

1016 &
de¸y±_îr‹
, 
¥iv
->
rxfûãr
))

1017 
rx_√xt
;

1019 
	`©h9k_cmn_rx_skb_po°¥o˚ss
(
comm⁄
, 
skb
, &
rx_°©s
,

1020 
rx_°©us
, 
de¸y±_îr‹
);

1022 i‡(
	`©h9k_cmn_¥o˚ss_øã
(
comm⁄
, 
hw
, &
rx_°©s
, 
rx_°©us
))

1023 
rx_√xt
;

1025 
rx_°©s
.
is_mybóc⁄
 = 
	`©h_is_mybóc⁄
(
comm⁄
, 
hdr
);

1026 
	`©h9k_cmn_¥o˚ss_rssi
(
comm⁄
, 
hw
, &
rx_°©s
, 
rx_°©us
);

1028 
rx_°©us
->
b™d
 = 
ah
->
curch™
->
ch™
->band;

1029 
rx_°©us
->
‰eq
 = 
ah
->
curch™
->
ch™
->
˚¡î_‰eq
;

1030 
rx_°©us
->
™ã¬a
 = 
rx_°©s
.
rs_™ã¬a
;

1031 
rx_°©us
->
Êag
 |
RX_FLAG_MACTIME_END
;

1033  
åue
;

1034 
rx_√xt
:

1035  
Ál£
;

1036 
	}
}

1041 
	$©h9k_rx_èskÀt
(
d©a
)

1043 
©h9k_htc_¥iv
 *
¥iv
 = (©h9k_htc_¥iv *)
d©a
;

1044 
©h9k_htc_rxbuf
 *
rxbuf
 = 
NULL
, *
tmp_buf
 = NULL;

1045 
õì80211_rx_°©us
 
rx_°©us
;

1046 
sk_buff
 *
skb
;

1047 
Êags
;

1048 
õì80211_hdr
 *
hdr
;

1051 
	`•ö_lock_úqßve
(&
¥iv
->
rx
.
rxbuÊock
, 
Êags
);

1052 
	`li°_f‹_óch_íåy
(
tmp_buf
, &
¥iv
->
rx
.
rxbuf
, 
li°
) {

1053 i‡(
tmp_buf
->
ö_¥o˚ss
) {

1054 
rxbuf
 = 
tmp_buf
;

1059 i‡(
rxbuf
 =
NULL
) {

1060 
	`•ö_u∆ock_úqª°‹e
(&
¥iv
->
rx
.
rxbuÊock
, 
Êags
);

1064 i‡(!
rxbuf
->
skb
)

1065 
ªqueue
;

1067 i‡(!
	`©h9k_rx_¥ï¨e
(
¥iv
, 
rxbuf
, &
rx_°©us
)) {

1068 
	`dev_k‰ì_skb_™y
(
rxbuf
->
skb
);

1069 
ªqueue
;

1072 
	`mem˝y
(
	`IEEE80211_SKB_RXCB
(
rxbuf
->
skb
), &
rx_°©us
,

1073 (
õì80211_rx_°©us
));

1074 
skb
 = 
rxbuf
->skb;

1075 
hdr
 = (
õì80211_hdr
 *Ë
skb
->
d©a
;

1077 i‡(
	`õì80211_is_bóc⁄
(
hdr
->
‰ame_c⁄åﬁ
Ë&& 
¥iv
->
ps_íabÀd
)

1078 
	`õì80211_queue_w‹k
(
¥iv
->
hw
, &¥iv->
ps_w‹k
);

1080 
	`•ö_u∆ock_úqª°‹e
(&
¥iv
->
rx
.
rxbuÊock
, 
Êags
);

1082 
	`õì80211_rx
(
¥iv
->
hw
, 
skb
);

1084 
	`•ö_lock_úqßve
(&
¥iv
->
rx
.
rxbuÊock
, 
Êags
);

1085 
ªqueue
:

1086 
rxbuf
->
ö_¥o˚ss
 = 
Ál£
;

1087 
rxbuf
->
skb
 = 
NULL
;

1088 
	`li°_move_èû
(&
rxbuf
->
li°
, &
¥iv
->
rx
.rxbuf);

1089 
rxbuf
 = 
NULL
;

1090 
	`•ö_u∆ock_úqª°‹e
(&
¥iv
->
rx
.
rxbuÊock
, 
Êags
);

1093 
	}
}

1095 
	$©h9k_htc_rxï
(*
drv_¥iv
, 
sk_buff
 *
skb
,

1096 
htc_ídpoöt_id
 
ï_id
)

1098 
©h9k_htc_¥iv
 *
¥iv
 = (©h9k_htc_¥iv *)
drv_¥iv
;

1099 
©h_hw
 *
ah
 = 
¥iv
->ah;

1100 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1101 
©h9k_htc_rxbuf
 *
rxbuf
 = 
NULL
, *
tmp_buf
 = NULL;

1103 
	`•ö_lock
(&
¥iv
->
rx
.
rxbuÊock
);

1104 
	`li°_f‹_óch_íåy
(
tmp_buf
, &
¥iv
->
rx
.
rxbuf
, 
li°
) {

1105 i‡(!
tmp_buf
->
ö_¥o˚ss
) {

1106 
rxbuf
 = 
tmp_buf
;

1110 
	`•ö_u∆ock
(&
¥iv
->
rx
.
rxbuÊock
);

1112 i‡(
rxbuf
 =
NULL
) {

1113 
	`©h_dbg
(
comm⁄
, 
ANY
, "No free RX buffer\n");

1114 
îr
;

1117 
	`•ö_lock
(&
¥iv
->
rx
.
rxbuÊock
);

1118 
rxbuf
->
skb
 = skb;

1119 
rxbuf
->
ö_¥o˚ss
 = 
åue
;

1120 
	`•ö_u∆ock
(&
¥iv
->
rx
.
rxbuÊock
);

1122 
	`èskÀt_scheduÀ
(&
¥iv
->
rx_èskÀt
);

1124 
îr
:

1125 
	`dev_k‰ì_skb_™y
(
skb
);

1126 
	}
}

1130 
	$©h9k_rx_˛ónup
(
©h9k_htc_¥iv
 *
¥iv
)

1132 
©h9k_htc_rxbuf
 *
rxbuf
, *
tbuf
;

1134 
	`li°_f‹_óch_íåy_ß„
(
rxbuf
, 
tbuf
, &
¥iv
->
rx
.rxbuf, 
li°
) {

1135 
	`li°_dñ
(&
rxbuf
->
li°
);

1136 i‡(
rxbuf
->
skb
)

1137 
	`dev_k‰ì_skb_™y
(
rxbuf
->
skb
);

1138 
	`k‰ì
(
rxbuf
);

1140 
	}
}

1142 
	$©h9k_rx_öô
(
©h9k_htc_¥iv
 *
¥iv
)

1144 
i
 = 0;

1146 
	`INIT_LIST_HEAD
(&
¥iv
->
rx
.
rxbuf
);

1147 
	`•ö_lock_öô
(&
¥iv
->
rx
.
rxbuÊock
);

1149 
i
 = 0; i < 
ATH9K_HTC_RXBUF
; i++) {

1150 
©h9k_htc_rxbuf
 *
rxbuf
 =

1151 
	`kzÆloc
((
©h9k_htc_rxbuf
), 
GFP_KERNEL
);

1152 i‡(
rxbuf
 =
NULL
)

1153 
îr
;

1155 
	`li°_add_èû
(&
rxbuf
->
li°
, &
¥iv
->
rx
.rxbuf);

1160 
îr
:

1161 
	`©h9k_rx_˛ónup
(
¥iv
);

1162  -
ENOMEM
;

1163 
	}
}

	@htc_hst.c

17 
	#¥_fmt
(
fmt
Ë
KBUILD_MODNAME
 ": " 
	)
fmt

19 
	~"htc.h
"

21 
	$htc_issue_£nd
(
htc_èrgë
 *
èrgë
, 
sk_buff
* 
skb
,

22 
u16
 
Àn
, 
u8
 
Êags
, u8 
ïid
)

25 
htc_‰ame_hdr
 *
hdr
;

26 
htc_ídpoöt
 *
ídpoöt
 = &
èrgë
->ídpoöt[
ïid
];

27 
°©us
;

29 
hdr
 = (
htc_‰ame_hdr
 *)

30 
	`skb_push
(
skb
, (
htc_‰ame_hdr
));

31 
hdr
->
ídpoöt_id
 = 
ïid
;

32 
hdr
->
Êags
 = flags;

33 
hdr
->
∑ylﬂd_Àn
 = 
	`˝u_to_be16
(
Àn
);

35 
°©us
 = 
èrgë
->
hif
->
	`£nd
—¨gë->
hif_dev
, 
ídpoöt
->
ul_pùeid
, 
skb
);

37  
°©us
;

38 
	}
}

40 
htc_ídpoöt
 *
	$gë_√xt_avaû_ï
(
htc_ídpoöt
 *
ídpoöt
)

42 
htc_ídpoöt_id
 
avaû_ïid
;

44 
avaû_ïid
 = (
ENDPOINT_MAX
 - 1);ávaû_ïid > 
ENDPOINT0
;ávail_epid--)

45 i‡(
ídpoöt
[
avaû_ïid
].
£rvi˚_id
 == 0)

46  &
ídpoöt
[
avaû_ïid
];

47  
NULL
;

48 
	}
}

50 
u8
 
	$£rvi˚_to_uÕùe
(
u16
 
£rvi˚_id
)

52 
£rvi˚_id
) {

53 
WMI_CONTROL_SVC
:

55 
WMI_BEACON_SVC
:

56 
WMI_CAB_SVC
:

57 
WMI_UAPSD_SVC
:

58 
WMI_MGMT_SVC
:

59 
WMI_DATA_VO_SVC
:

60 
WMI_DATA_VI_SVC
:

61 
WMI_DATA_BE_SVC
:

62 
WMI_DATA_BK_SVC
:

67 
	}
}

69 
u8
 
	$£rvi˚_to_dÕùe
(
u16
 
£rvi˚_id
)

71 
£rvi˚_id
) {

72 
WMI_CONTROL_SVC
:

74 
WMI_BEACON_SVC
:

75 
WMI_CAB_SVC
:

76 
WMI_UAPSD_SVC
:

77 
WMI_MGMT_SVC
:

78 
WMI_DATA_VO_SVC
:

79 
WMI_DATA_VI_SVC
:

80 
WMI_DATA_BE_SVC
:

81 
WMI_DATA_BK_SVC
:

86 
	}
}

88 
	$htc_¥o˚ss_èrgë_rdy
(
htc_èrgë
 *
èrgë
,

89 *
buf
)

91 
htc_ídpoöt
 *
ídpoöt
;

92 
htc_ªady_msg
 *htc_ªady_msg = (htc_ªady_msg *Ë
buf
;

94 
èrgë
->
¸edô_size
 = 
	`be16_to_˝u
(
htc_ªady_msg
->credit_size);

96 
ídpoöt
 = &
èrgë
->ídpoöt[
ENDPOINT0
];

97 
ídpoöt
->
£rvi˚_id
 = 
HTC_CTRL_RSVD_SVC
;

98 
ídpoöt
->
max_msgÀn
 = 
HTC_MAX_CONTROL_MESSAGE_LENGTH
;

99 
	`©omic_öc
(&
èrgë
->
tgt_ªady
);

100 
	`com∂ëe
(&
èrgë
->
èrgë_waô
);

101 
	}
}

103 
	$htc_¥o˚ss_c⁄n_r•
(
htc_èrgë
 *
èrgë
,

104 
htc_‰ame_hdr
 *
htc_hdr
)

106 
htc_c⁄n_svc_r•msg
 *
svc_r•msg
;

107 
htc_ídpoöt
 *
ídpoöt
, *
tmp_ídpoöt
 = 
NULL
;

108 
u16
 
£rvi˚_id
;

109 
u16
 
max_msgÀn
;

110 
htc_ídpoöt_id
 
ïid
, 
ãpid
;

112 
svc_r•msg
 = (
htc_c⁄n_svc_r•msg
 *)

113 ((*Ë
htc_hdr
 + (
htc_‰ame_hdr
));

115 i‡(
svc_r•msg
->
°©us
 =
HTC_SERVICE_SUCCESS
) {

116 
ïid
 = 
svc_r•msg
->
ídpoöt_id
;

117 
£rvi˚_id
 = 
	`be16_to_˝u
(
svc_r•msg
->service_id);

118 
max_msgÀn
 = 
	`be16_to_˝u
(
svc_r•msg
->
max_msg_Àn
);

119 
ídpoöt
 = &
èrgë
->ídpoöt[
ïid
];

121 
ãpid
 = (
ENDPOINT_MAX
 - 1);Åïid > 
ENDPOINT0
;Åepid--) {

122 
tmp_ídpoöt
 = &
èrgë
->
ídpoöt
[
ãpid
];

123 i‡(
tmp_ídpoöt
->
£rvi˚_id
 == service_id) {

124 
tmp_ídpoöt
->
£rvi˚_id
 = 0;

129 i‡(
ãpid
 =
ENDPOINT0
)

132 
ídpoöt
->
£rvi˚_id
 = service_id;

133 
ídpoöt
->
max_txqdïth
 = 
tmp_ídpoöt
->max_txqdepth;

134 
ídpoöt
->
ï_ˇŒbacks
 = 
tmp_ídpoöt
->ep_callbacks;

135 
ídpoöt
->
ul_pùeid
 = 
tmp_ídpoöt
->ul_pipeid;

136 
ídpoöt
->
dl_pùeid
 = 
tmp_ídpoöt
->dl_pipeid;

137 
ídpoöt
->
max_msgÀn
 = max_msglen;

138 
èrgë
->
c⁄n_r•_ïid
 = 
ïid
;

139 
	`com∂ëe
(&
èrgë
->
cmd_waô
);

141 
èrgë
->
c⁄n_r•_ïid
 = 
ENDPOINT_UNUSED
;

143 
	}
}

145 
	$htc_c⁄fig_pùe_¸edôs
(
htc_èrgë
 *
èrgë
)

147 
sk_buff
 *
skb
;

148 
htc_c⁄fig_pùe_msg
 *
˝_msg
;

149 
ªt
, 
time_À·
;

151 
skb
 = 
	`Æloc_skb
(50 + (
htc_‰ame_hdr
), 
GFP_ATOMIC
);

152 i‡(!
skb
) {

153 
	`dev_îr
(
èrgë
->
dev
, "failedÅoállocate send buffer\n");

154  -
ENOMEM
;

156 
	`skb_ª£rve
(
skb
, (
htc_‰ame_hdr
));

158 
˝_msg
 = (
htc_c⁄fig_pùe_msg
 *)

159 
	`skb_put
(
skb
, (
htc_c⁄fig_pùe_msg
));

161 
˝_msg
->
mesßge_id
 = 
	`˝u_to_be16
(
HTC_MSG_CONFIG_PIPE_ID
);

162 
˝_msg
->
pùe_id
 = 
USB_WLAN_TX_PIPE
;

163 
˝_msg
->
¸edôs
 = 
èrgë
->credits;

165 
èrgë
->
htc_Êags
 |
HTC_OP_CONFIG_PIPE_CREDITS
;

167 
ªt
 = 
	`htc_issue_£nd
(
èrgë
, 
skb
, skb->
Àn
, 0, 
ENDPOINT0
);

168 i‡(
ªt
)

169 
îr
;

171 
time_À·
 = 
	`waô_f‹_com∂ëi⁄_timeout
(&
èrgë
->
cmd_waô
, 
HZ
);

172 i‡(!
time_À·
) {

173 
	`dev_îr
(
èrgë
->
dev
, "HTC credit configÅimeout\n");

174  -
ETIMEDOUT
;

178 
îr
:

179 
	`k‰ì_skb
(
skb
);

180  -
EINVAL
;

181 
	}
}

183 
	$htc_£tup_com∂ëe
(
htc_èrgë
 *
èrgë
)

185 
sk_buff
 *
skb
;

186 
htc_comp_msg
 *
comp_msg
;

187 
ªt
 = 0, 
time_À·
;

189 
skb
 = 
	`Æloc_skb
(50 + (
htc_‰ame_hdr
), 
GFP_ATOMIC
);

190 i‡(!
skb
) {

191 
	`dev_îr
(
èrgë
->
dev
, "failedÅoállocate send buffer\n");

192  -
ENOMEM
;

194 
	`skb_ª£rve
(
skb
, (
htc_‰ame_hdr
));

196 
comp_msg
 = (
htc_comp_msg
 *)

197 
	`skb_put
(
skb
, (
htc_comp_msg
));

198 
comp_msg
->
msg_id
 = 
	`˝u_to_be16
(
HTC_MSG_SETUP_COMPLETE_ID
);

200 
èrgë
->
htc_Êags
 |
HTC_OP_START_WAIT
;

202 
ªt
 = 
	`htc_issue_£nd
(
èrgë
, 
skb
, skb->
Àn
, 0, 
ENDPOINT0
);

203 i‡(
ªt
)

204 
îr
;

206 
time_À·
 = 
	`waô_f‹_com∂ëi⁄_timeout
(&
èrgë
->
cmd_waô
, 
HZ
);

207 i‡(!
time_À·
) {

208 
	`dev_îr
(
èrgë
->
dev
, "HTC startÅimeout\n");

209  -
ETIMEDOUT
;

214 
îr
:

215 
	`k‰ì_skb
(
skb
);

216  -
EINVAL
;

217 
	}
}

221 
	$htc_öô
(
htc_èrgë
 *
èrgë
)

223 
ªt
;

225 
ªt
 = 
	`htc_c⁄fig_pùe_¸edôs
(
èrgë
);

226 i‡(
ªt
)

227  
ªt
;

229  
	`htc_£tup_com∂ëe
(
èrgë
);

230 
	}
}

232 
	$htc_c⁄√˘_£rvi˚
(
htc_èrgë
 *
èrgë
,

233 
htc_£rvi˚_c⁄ƒeq
 *
£rvi˚_c⁄ƒeq
,

234 
htc_ídpoöt_id
 *
c⁄n_r•_ïid
)

236 
sk_buff
 *
skb
;

237 
htc_ídpoöt
 *
ídpoöt
;

238 
htc_c⁄n_svc_msg
 *
c⁄n_msg
;

239 
ªt
, 
time_À·
;

242 
ídpoöt
 = 
	`gë_√xt_avaû_ï
(
èrgë
->endpoint);

243 i‡(!
ídpoöt
) {

244 
	`dev_îr
(
èrgë
->
dev
, "Endpoint isÇotávailable for"

245 "£rvi˚ %d\n", 
£rvi˚_c⁄ƒeq
->
£rvi˚_id
);

246  -
EINVAL
;

249 
ídpoöt
->
£rvi˚_id
 = 
£rvi˚_c⁄ƒeq
->service_id;

250 
ídpoöt
->
max_txqdïth
 = 
£rvi˚_c⁄ƒeq
->
max_£nd_qdïth
;

251 
ídpoöt
->
ul_pùeid
 = 
	`£rvi˚_to_uÕùe
(
£rvi˚_c⁄ƒeq
->
£rvi˚_id
);

252 
ídpoöt
->
dl_pùeid
 = 
	`£rvi˚_to_dÕùe
(
£rvi˚_c⁄ƒeq
->
£rvi˚_id
);

253 
ídpoöt
->
ï_ˇŒbacks
 = 
£rvi˚_c⁄ƒeq
->ep_callbacks;

255 
skb
 = 
	`Æloc_skb
((
htc_c⁄n_svc_msg
) +

256 (
htc_‰ame_hdr
), 
GFP_ATOMIC
);

257 i‡(!
skb
) {

258 
	`dev_îr
(
èrgë
->
dev
, "FailedÅoállocate bufÅo send"

260  -
ENOMEM
;

263 
	`skb_ª£rve
(
skb
, (
htc_‰ame_hdr
));

265 
c⁄n_msg
 = (
htc_c⁄n_svc_msg
 *)

266 
	`skb_put
(
skb
, (
htc_c⁄n_svc_msg
));

267 
c⁄n_msg
->
£rvi˚_id
 = 
	`˝u_to_be16
(
£rvi˚_c⁄ƒeq
->service_id);

268 
c⁄n_msg
->
msg_id
 = 
	`˝u_to_be16
(
HTC_MSG_CONNECT_SERVICE_ID
);

269 
c⁄n_msg
->
c⁄_Êags
 = 
	`˝u_to_be16
(
£rvi˚_c⁄ƒeq
->con_flags);

270 
c⁄n_msg
->
dl_pùeid
 = 
ídpoöt
->dl_pipeid;

271 
c⁄n_msg
->
ul_pùeid
 = 
ídpoöt
->ul_pipeid;

273 
ªt
 = 
	`htc_issue_£nd
(
èrgë
, 
skb
, skb->
Àn
, 0, 
ENDPOINT0
);

274 i‡(
ªt
)

275 
îr
;

277 
time_À·
 = 
	`waô_f‹_com∂ëi⁄_timeout
(&
èrgë
->
cmd_waô
, 
HZ
);

278 i‡(!
time_À·
) {

279 
	`dev_îr
(
èrgë
->
dev
, "Service connectionÅimeout for: %d\n",

280 
£rvi˚_c⁄ƒeq
->
£rvi˚_id
);

281  -
ETIMEDOUT
;

284 *
c⁄n_r•_ïid
 = 
èrgë
->conn_rsp_epid;

286 
îr
:

287 
	`k‰ì_skb
(
skb
);

288  
ªt
;

289 
	}
}

291 
	$htc_£nd
(
htc_èrgë
 *
èrgë
, 
sk_buff
 *
skb
)

293 
©h9k_htc_tx_˘l
 *
tx_˘l
;

295 
tx_˘l
 = 
	`HTC_SKB_CB
(
skb
);

296  
	`htc_issue_£nd
(
èrgë
, 
skb
, skb->
Àn
, 0, 
tx_˘l
->
ïid
);

297 
	}
}

299 
	$htc_£nd_ïid
(
htc_èrgë
 *
èrgë
, 
sk_buff
 *
skb
,

300 
htc_ídpoöt_id
 
ïid
)

302  
	`htc_issue_£nd
(
èrgë
, 
skb
, skb->
Àn
, 0, 
ïid
);

303 
	}
}

305 
	$htc_°›
(
htc_èrgë
 *
èrgë
)

307 
èrgë
->
hif
->
	`°›
—¨gë->
hif_dev
);

308 
	}
}

310 
	$htc_°¨t
(
htc_èrgë
 *
èrgë
)

312 
èrgë
->
hif
->
	`°¨t
—¨gë->
hif_dev
);

313 
	}
}

315 
	$htc_°a_døö
(
htc_èrgë
 *
èrgë
, 
u8
 
idx
)

317 
èrgë
->
hif
->
	`°a_døö
—¨gë->
hif_dev
, 
idx
);

318 
	}
}

320 
	$©h9k_htc_txcom∂ëi⁄_cb
(
htc_èrgë
 *
htc_h™dÀ
,

321 
sk_buff
 *
skb
, 
boﬁ
 
txok
)

323 
htc_ídpoöt
 *
ídpoöt
;

324 
htc_‰ame_hdr
 *
htc_hdr
 = 
NULL
;

326 i‡(
htc_h™dÀ
->
htc_Êags
 & 
HTC_OP_CONFIG_PIPE_CREDITS
) {

327 
	`com∂ëe
(&
htc_h™dÀ
->
cmd_waô
);

328 
htc_h™dÀ
->
htc_Êags
 &~
HTC_OP_CONFIG_PIPE_CREDITS
;

329 
ªt
;

332 i‡(
htc_h™dÀ
->
htc_Êags
 & 
HTC_OP_START_WAIT
) {

333 
	`com∂ëe
(&
htc_h™dÀ
->
cmd_waô
);

334 
htc_h™dÀ
->
htc_Êags
 &~
HTC_OP_START_WAIT
;

335 
ªt
;

338 i‡(
skb
) {

339 
htc_hdr
 = (
htc_‰ame_hdr
 *Ë
skb
->
d©a
;

340 
ídpoöt
 = &
htc_h™dÀ
->ídpoöt[
htc_hdr
->
ídpoöt_id
];

341 
	`skb_puŒ
(
skb
, (
htc_‰ame_hdr
));

343 i‡(
ídpoöt
->
ï_ˇŒbacks
.
tx
) {

344 
ídpoöt
->
ï_ˇŒbacks
.
	`tx
”ndpoöt->ï_ˇŒbacks.
¥iv
,

345 
skb
, 
htc_hdr
->
ídpoöt_id
,

346 
txok
);

348 
	`k‰ì_skb
(
skb
);

353 
ªt
:

355 i‡(
htc_hdr
 && htc_hdr->
ídpoöt_id
 !
ENDPOINT0
)

356 
	`dev_k‰ì_skb_™y
(
skb
);

358 
	`k‰ì_skb
(
skb
);

359 
	}
}

361 
	$©h9k_htc_fw_∑nic_ªp‹t
(
htc_èrgë
 *
htc_h™dÀ
,

362 
sk_buff
 *
skb
)

364 
uöt32_t
 *
∑âîn
 = (uöt32_à*)
skb
->
d©a
;

366 *
∑âîn
) {

369 
htc_∑nic_bad_vaddr
 *
htc_∑nic
;

370 
htc_∑nic
 = (
htc_∑nic_bad_vaddr
 *Ë
skb
->
d©a
;

371 
	`dev_îr
(
htc_h™dÀ
->
dev
, "ath: firmwareÖanic! "

373 
htc_∑nic
->
excˇu£
, htc_∑nic->
pc
,

374 
htc_∑nic
->
badvaddr
);

379 
htc_∑nic_bad_ïid
 *
htc_∑nic
;

380 
htc_∑nic
 = (
htc_∑nic_bad_ïid
 *Ë
skb
->
d©a
;

381 
	`dev_îr
(
htc_h™dÀ
->
dev
, "ath: firmwareÖanic! "

382 "badÉpid: 0x%08x\n", 
htc_∑nic
->
ïid
);

386 
	`dev_îr
(
htc_h™dÀ
->
dev
, "ath: uknownÖanicÖattern!\n");

389 
	}
}

398 
	$©h9k_htc_rx_msg
(
htc_èrgë
 *
htc_h™dÀ
,

399 
sk_buff
 *
skb
, 
u32
 
Àn
, 
u8
 
pùe_id
)

401 
htc_‰ame_hdr
 *
htc_hdr
;

402 
htc_ídpoöt_id
 
ïid
;

403 
htc_ídpoöt
 *
ídpoöt
;

404 
__be16
 *
msg_id
;

406 i‡(!
htc_h™dÀ
 || !
skb
)

409 
htc_hdr
 = (
htc_‰ame_hdr
 *Ë
skb
->
d©a
;

410 
ïid
 = 
htc_hdr
->
ídpoöt_id
;

412 i‡(
ïid
 == 0x99) {

413 
	`©h9k_htc_fw_∑nic_ªp‹t
(
htc_h™dÀ
, 
skb
);

414 
	`k‰ì_skb
(
skb
);

418 i‡(
ïid
 >
ENDPOINT_MAX
) {

419 i‡(
pùe_id
 !
USB_REG_IN_PIPE
)

420 
	`dev_k‰ì_skb_™y
(
skb
);

422 
	`k‰ì_skb
(
skb
);

426 i‡(
ïid
 =
ENDPOINT0
) {

429 i‡(
htc_hdr
->
Êags
 & 
HTC_FLAGS_RECV_TRAILER
) {

430 i‡(
	`be32_to_˝u
(*(
__be32
 *Ë
skb
->
d©a
) == 0x00C60000)

432 
htc_hdr
 = (
htc_‰ame_hdr
 *)(
skb
->
d©a
 + 4);

436 
msg_id
 = (
__be16
 *Ë((*Ë
htc_hdr
 +

437 (
htc_‰ame_hdr
));

440 
	`be16_to_˝u
(*
msg_id
)) {

441 
HTC_MSG_READY_ID
:

442 
	`htc_¥o˚ss_èrgë_rdy
(
htc_h™dÀ
, 
htc_hdr
);

444 
HTC_MSG_CONNECT_SERVICE_RESPONSE_ID
:

445 
	`htc_¥o˚ss_c⁄n_r•
(
htc_h™dÀ
, 
htc_hdr
);

451 
	`k‰ì_skb
(
skb
);

454 i‡(
htc_hdr
->
Êags
 & 
HTC_FLAGS_RECV_TRAILER
)

455 
	`skb_åim
(
skb
, 
Àn
 - 
htc_hdr
->
c⁄åﬁ
[0]);

457 
	`skb_puŒ
(
skb
, (
htc_‰ame_hdr
));

459 
ídpoöt
 = &
htc_h™dÀ
->ídpoöt[
ïid
];

460 i‡(
ídpoöt
->
ï_ˇŒbacks
.
rx
)

461 
ídpoöt
->
ï_ˇŒbacks
.
	`rx
”ndpoöt->ï_ˇŒbacks.
¥iv
,

462 
skb
, 
ïid
);

464 
	}
}

466 
htc_èrgë
 *
	$©h9k_htc_hw_Æloc
(*
hif_h™dÀ
,

467 
©h9k_htc_hif
 *
hif
,

468 
devi˚
 *
dev
)

470 
htc_ídpoöt
 *
ídpoöt
;

471 
htc_èrgë
 *
èrgë
;

473 
èrgë
 = 
	`kzÆloc
((
htc_èrgë
), 
GFP_KERNEL
);

474 i‡(!
èrgë
)

475  
NULL
;

477 
	`öô_com∂ëi⁄
(&
èrgë
->
èrgë_waô
);

478 
	`öô_com∂ëi⁄
(&
èrgë
->
cmd_waô
);

480 
èrgë
->
hif
 = hif;

481 
èrgë
->
hif_dev
 = 
hif_h™dÀ
;

482 
èrgë
->
dev
 = dev;

485 
ídpoöt
 = &
èrgë
->ídpoöt[
ENDPOINT0
];

486 
ídpoöt
->
ul_pùeid
 = 
hif
->
c⁄åﬁ_ul_pùe
;

487 
ídpoöt
->
dl_pùeid
 = 
hif
->
c⁄åﬁ_dl_pùe
;

489 
	`©omic_£t
(&
èrgë
->
tgt_ªady
, 0);

491  
èrgë
;

492 
	}
}

494 
	$©h9k_htc_hw_‰ì
(
htc_èrgë
 *
htc
)

496 
	`k‰ì
(
htc
);

497 
	}
}

499 
	$©h9k_htc_hw_öô
(
htc_èrgë
 *
èrgë
,

500 
devi˚
 *
dev
, 
u16
 
devid
,

501 *
¥odu˘
, 
u32
 
drv_öfo
)

503 i‡(
	`©h9k_htc_¥obe_devi˚
(
èrgë
, 
dev
, 
devid
, 
¥odu˘
, 
drv_öfo
)) {

504 
	`¥_îr
("FailedÅo initializeÅhe device\n");

505  -
ENODEV
;

509 
	}
}

511 
	$©h9k_htc_hw_deöô
(
htc_èrgë
 *
èrgë
, 
boﬁ
 
hŸ_u≈lug
)

513 i‡(
èrgë
)

514 
	`©h9k_htc_disc⁄√˘_devi˚
(
èrgë
, 
hŸ_u≈lug
);

515 
	}
}

	@htc_hst.h

17 #i‚de‡
HTC_HST_H


18 
	#HTC_HST_H


	)

20 
	g©h9k_htc_¥iv
;

21 
	ghtc_èrgë
;

22 
	g©h9k_htc_tx_˘l
;

24 
	e©h9k_hif_å™•‹ts
 {

25 
	mATH9K_HIF_USB
,

28 
	s©h9k_htc_hif
 {

29 
li°_hód
 
	mli°
;

30 c⁄° 
©h9k_hif_å™•‹ts
 
	må™•‹t
;

31 c⁄° *
	m«me
;

33 
u8
 
	mc⁄åﬁ_dl_pùe
;

34 
u8
 
	mc⁄åﬁ_ul_pùe
;

36 (*
	m°¨t
Ë(*
	mhif_h™dÀ
);

37 (*
	m°›
Ë(*
	mhif_h™dÀ
);

38 (*
	m°a_døö
Ë(*
	mhif_h™dÀ
, 
u8
 
	midx
);

39 (*
	m£nd
Ë(*
	mhif_h™dÀ
, 
u8
 
	mpùe
, 
sk_buff
 *
	mbuf
);

42 
	ehtc_ídpoöt_id
 {

43 
	mENDPOINT_UNUSED
 = -1,

44 
	mENDPOINT0
 = 0,

45 
	mENDPOINT1
 = 1,

46 
	mENDPOINT2
 = 2,

47 
	mENDPOINT3
 = 3,

48 
	mENDPOINT4
 = 4,

49 
	mENDPOINT5
 = 5,

50 
	mENDPOINT6
 = 6,

51 
	mENDPOINT7
 = 7,

52 
	mENDPOINT8
 = 8,

53 
	mENDPOINT_MAX
 = 22

57 
	#HTC_FLAGS_RECV_TRAILER
 (1 << 1)

	)

59 
	shtc_‰ame_hdr
 {

60 
u8
 
	mídpoöt_id
;

61 
u8
 
	mÊags
;

62 
__be16
 
	m∑ylﬂd_Àn
;

63 
u8
 
	mc⁄åﬁ
[4];

64 } 
	g__∑cked
;

66 
	shtc_ªady_msg
 {

67 
__be16
 
	mmesßge_id
;

68 
__be16
 
	m¸edôs
;

69 
__be16
 
	m¸edô_size
;

70 
u8
 
	mmax_ídpoöts
;

71 
u8
 
	m∑d
;

72 } 
	g__∑cked
;

74 
	shtc_c⁄fig_pùe_msg
 {

75 
__be16
 
	mmesßge_id
;

76 
u8
 
	mpùe_id
;

77 
u8
 
	m¸edôs
;

78 } 
	g__∑cked
;

80 
	shtc_∑nic_bad_vaddr
 {

81 
__be32
 
	m∑âîn
;

82 
__be32
 
	mexcˇu£
;

83 
__be32
 
	mpc
;

84 
__be32
 
	mbadvaddr
;

85 } 
	g__∑cked
;

87 
	shtc_∑nic_bad_ïid
 {

88 
__be32
 
	m∑âîn
;

89 
__be32
 
	mïid
;

90 } 
	g__∑cked
;

92 
	shtc_ï_ˇŒbacks
 {

93 *
	m¥iv
;

94 (*
	mtx
Ë(*, 
	msk_buff
 *, 
	mhtc_ídpoöt_id
, 
boﬁ
 
	mtxok
);

95 (*
	mrx
Ë(*, 
	msk_buff
 *, 
	mhtc_ídpoöt_id
);

98 
	shtc_ídpoöt
 {

99 
u16
 
	m£rvi˚_id
;

101 
htc_ï_ˇŒbacks
 
	mï_ˇŒbacks
;

102 
u32
 
	mmax_txqdïth
;

103 
	mmax_msgÀn
;

105 
u8
 
	mul_pùeid
;

106 
u8
 
	mdl_pùeid
;

109 
	#HTC_MAX_CONTROL_MESSAGE_LENGTH
 255

	)

110 
	#HTC_CONTROL_BUFFER_SIZE
 \

111 (
HTC_MAX_CONTROL_MESSAGE_LENGTH
 + (
htc_‰ame_hdr
))

	)

113 
	#HTC_OP_START_WAIT
 
	`BIT
(0)

	)

114 
	#HTC_OP_CONFIG_PIPE_CREDITS
 
	`BIT
(1)

	)

116 
	shtc_èrgë
 {

117 *
	mhif_dev
;

118 
©h9k_htc_¥iv
 *
	mdrv_¥iv
;

119 
devi˚
 *
	mdev
;

120 
©h9k_htc_hif
 *
	mhif
;

121 
htc_ídpoöt
 
	mídpoöt
[
ENDPOINT_MAX
];

122 
com∂ëi⁄
 
	mèrgë_waô
;

123 
com∂ëi⁄
 
	mcmd_waô
;

124 
li°_hód
 
	mli°
;

125 
htc_ídpoöt_id
 
	mc⁄n_r•_ïid
;

126 
u16
 
	m¸edôs
;

127 
u16
 
	m¸edô_size
;

128 
u8
 
	mhtc_Êags
;

129 
©omic_t
 
	mtgt_ªady
;

132 
	ehtc_msg_id
 {

133 
	mHTC_MSG_READY_ID
 = 1,

134 
	mHTC_MSG_CONNECT_SERVICE_ID
,

135 
	mHTC_MSG_CONNECT_SERVICE_RESPONSE_ID
,

136 
	mHTC_MSG_SETUP_COMPLETE_ID
,

137 
	mHTC_MSG_CONFIG_PIPE_ID
,

138 
	mHTC_MSG_CONFIG_PIPE_RESPONSE_ID
,

141 
	shtc_£rvi˚_c⁄ƒeq
 {

142 
u16
 
	m£rvi˚_id
;

143 
u16
 
	mc⁄_Êags
;

144 
u32
 
	mmax_£nd_qdïth
;

145 
htc_ï_ˇŒbacks
 
	mï_ˇŒbacks
;

150 
	ehtc_£rvi˚_group_ids
{

151 
	mRSVD_SERVICE_GROUP
 = 0,

152 
	mWMI_SERVICE_GROUP
 = 1,

154 
	mHTC_SERVICE_GROUP_LAST
 = 255

157 
	#MAKE_SERVICE_ID
(
group
, 
ödex
) \

158 ()((()
group
 << 8Ë| ()(
ödex
))

	)

161 
	#HTC_CTRL_RSVD_SVC
 
	`MAKE_SERVICE_ID
(
RSVD_SERVICE_GROUP
, 1)

	)

162 
	#HTC_LOOPBACK_RSVD_SVC
 
	`MAKE_SERVICE_ID
(
RSVD_SERVICE_GROUP
, 2)

	)

164 
	#WMI_CONTROL_SVC
 
	`MAKE_SERVICE_ID
(
WMI_SERVICE_GROUP
, 0)

	)

165 
	#WMI_BEACON_SVC
 
	`MAKE_SERVICE_ID
(
WMI_SERVICE_GROUP
, 1)

	)

166 
	#WMI_CAB_SVC
 
	`MAKE_SERVICE_ID
(
WMI_SERVICE_GROUP
, 2)

	)

167 
	#WMI_UAPSD_SVC
 
	`MAKE_SERVICE_ID
(
WMI_SERVICE_GROUP
, 3)

	)

168 
	#WMI_MGMT_SVC
 
	`MAKE_SERVICE_ID
(
WMI_SERVICE_GROUP
, 4)

	)

169 
	#WMI_DATA_VO_SVC
 
	`MAKE_SERVICE_ID
(
WMI_SERVICE_GROUP
, 5)

	)

170 
	#WMI_DATA_VI_SVC
 
	`MAKE_SERVICE_ID
(
WMI_SERVICE_GROUP
, 6)

	)

171 
	#WMI_DATA_BE_SVC
 
	`MAKE_SERVICE_ID
(
WMI_SERVICE_GROUP
, 7)

	)

172 
	#WMI_DATA_BK_SVC
 
	`MAKE_SERVICE_ID
(
WMI_SERVICE_GROUP
, 8)

	)

174 
	shtc_c⁄n_svc_msg
 {

175 
__be16
 
	mmsg_id
;

176 
__be16
 
	m£rvi˚_id
;

177 
__be16
 
	mc⁄_Êags
;

178 
u8
 
	mdl_pùeid
;

179 
u8
 
	mul_pùeid
;

180 
u8
 
	msvc_mëa_Àn
;

181 
u8
 
	m∑d
;

182 } 
	g__∑cked
;

185 
	#HTC_SERVICE_SUCCESS
 0

	)

186 
	#HTC_SERVICE_NOT_FOUND
 1

	)

187 
	#HTC_SERVICE_FAILED
 2

	)

188 
	#HTC_SERVICE_NO_RESOURCES
 3

	)

189 
	#HTC_SERVICE_NO_MORE_EP
 4

	)

191 
	shtc_c⁄n_svc_r•msg
 {

192 
__be16
 
	mmsg_id
;

193 
__be16
 
	m£rvi˚_id
;

194 
u8
 
	m°©us
;

195 
u8
 
	mídpoöt_id
;

196 
__be16
 
	mmax_msg_Àn
;

197 
u8
 
	msvc_mëa_Àn
;

198 
u8
 
	m∑d
;

199 } 
	g__∑cked
;

201 
	shtc_comp_msg
 {

202 
__be16
 
	mmsg_id
;

203 } 
	g__∑cked
;

205 
htc_öô
(
htc_èrgë
 *
èrgë
);

206 
htc_c⁄√˘_£rvi˚
(
htc_èrgë
 *
èrgë
,

207 
htc_£rvi˚_c⁄ƒeq
 *
£rvi˚_c⁄ƒeq
,

208 
htc_ídpoöt_id
 *
c⁄n_r•_eid
);

209 
htc_£nd
(
htc_èrgë
 *
èrgë
, 
sk_buff
 *
skb
);

210 
htc_£nd_ïid
(
htc_èrgë
 *
èrgë
, 
sk_buff
 *
skb
,

211 
htc_ídpoöt_id
 
ïid
);

212 
htc_°›
(
htc_èrgë
 *
èrgë
);

213 
htc_°¨t
(
htc_èrgë
 *
èrgë
);

214 
htc_°a_døö
(
htc_èrgë
 *
èrgë
, 
u8
 
idx
);

216 
©h9k_htc_rx_msg
(
htc_èrgë
 *
htc_h™dÀ
,

217 
sk_buff
 *
skb
, 
u32
 
Àn
, 
u8
 
pùe_id
);

218 
©h9k_htc_txcom∂ëi⁄_cb
(
htc_èrgë
 *
htc_h™dÀ
,

219 
sk_buff
 *
skb
, 
boﬁ
 
txok
);

221 
htc_èrgë
 *
©h9k_htc_hw_Æloc
(*
hif_h™dÀ
,

222 
©h9k_htc_hif
 *
hif
,

223 
devi˚
 *
dev
);

224 
©h9k_htc_hw_‰ì
(
htc_èrgë
 *
htc
);

225 
©h9k_htc_hw_öô
(
htc_èrgë
 *
èrgë
,

226 
devi˚
 *
dev
, 
u16
 
devid
, *
¥odu˘
,

227 
u32
 
drv_öfo
);

228 
©h9k_htc_hw_deöô
(
htc_èrgë
 *
èrgë
, 
boﬁ
 
hŸ_u≈lug
);

	@hw-ops.h

17 #i‚de‡
ATH9K_HW_OPS_H


18 
	#ATH9K_HW_OPS_H


	)

20 
	~"hw.h
"

24 
ölöe
 
	$©h9k_hw_c⁄figpcùowîßve
(
©h_hw
 *
ah
,

25 
boﬁ
 
powî_off
)

27 i‡(!
ah
->
a•m_íabÀd
)

30 
	`©h9k_hw_›s
(
ah
)->
	`c⁄fig_pci_powîßve
◊h, 
powî_off
);

31 
	}
}

33 
ölöe
 
	$©h9k_hw_rxía
(
©h_hw
 *
ah
)

35 
	`©h9k_hw_›s
(
ah
)->
	`rx_íabÀ
(ah);

36 
	}
}

38 
ölöe
 
	$©h9k_hw_£t_desc_lök
(
©h_hw
 *
ah
, *
ds
,

39 
u32
 
lök
)

41 
	`©h9k_hw_›s
(
ah
)->
	`£t_desc_lök
(
ds
, 
lök
);

42 
	}
}

44 
ölöe
 
	$©h9k_hw_ˇlibøã
(
©h_hw
 *
ah
,

45 
©h9k_ch™√l
 *
ch™
,

46 
u8
 
rxchaömask
, 
boﬁ
 
l⁄gˇl
)

48  
	`©h9k_hw_›s
(
ah
)->
	`ˇlibøã
◊h, 
ch™
, 
rxchaömask
, 
l⁄gˇl
);

49 
	}
}

51 
ölöe
 
boﬁ
 
	$©h9k_hw_gëi§
(
©h_hw
 *
ah
, 
©h9k_öt
 *
masked
,

52 
u32
 *
sync_ˇu£_p
)

54  
	`©h9k_hw_›s
(
ah
)->
	`gë_i§
◊h, 
masked
, 
sync_ˇu£_p
);

55 
	}
}

57 
ölöe
 
	$©h9k_hw_£t_txdesc
(
©h_hw
 *
ah
, *
ds
,

58 
©h_tx_öfo
 *
i
)

60  
	`©h9k_hw_›s
(
ah
)->
	`£t_txdesc
◊h, 
ds
, 
i
);

61 
	}
}

63 
ölöe
 
	$©h9k_hw_tx¥ocdesc
(
©h_hw
 *
ah
, *
ds
,

64 
©h_tx_°©us
 *
ts
)

66  
	`©h9k_hw_›s
(
ah
)->
	`¥oc_txdesc
◊h, 
ds
, 
ts
);

67 
	}
}

69 
ölöe
 
	$©h9k_hw_™tdiv_comb_c⁄f_gë
(
©h_hw
 *
ah
,

70 
©h_hw_™tcomb_c⁄f
 *
™tc⁄f
)

72 
	`©h9k_hw_›s
(
ah
)->
	`™tdiv_comb_c⁄f_gë
◊h, 
™tc⁄f
);

73 
	}
}

75 
ölöe
 
	$©h9k_hw_™tdiv_comb_c⁄f_£t
(
©h_hw
 *
ah
,

76 
©h_hw_™tcomb_c⁄f
 *
™tc⁄f
)

78 
	`©h9k_hw_›s
(
ah
)->
	`™tdiv_comb_c⁄f_£t
◊h, 
™tc⁄f
);

79 
	}
}

81 
ölöe
 
	$©h9k_hw_tx99_°¨t
(
©h_hw
 *
ah
, 
u32
 
qnum
)

83 
	`©h9k_hw_›s
(
ah
)->
	`tx99_°¨t
◊h, 
qnum
);

84 
	}
}

86 
ölöe
 
	$©h9k_hw_tx99_°›
(
©h_hw
 *
ah
)

88 
	`©h9k_hw_›s
(
ah
)->
	`tx99_°›
(ah);

89 
	}
}

91 
ölöe
 
	$©h9k_hw_tx99_£t_txpowî
(
©h_hw
 *
ah
, 
u8
 
powî
)

93 i‡(
	`©h9k_hw_›s
(
ah
)->
tx99_£t_txpowî
)

94 
	`©h9k_hw_›s
(
ah
)->
	`tx99_£t_txpowî
◊h, 
powî
);

95 
	}
}

97 
ölöe
 
	$©h9k_hw_gë_adc_íå›y
(
©h_hw
 *
ah
,

98 
u8
 *
buf
, 
size_t
 
Àn
)

100 
	`©h9k_hw_›s
(
ah
)->
	`gë_adc_íå›y
◊h, 
buf
, 
Àn
);

101 
	}
}

103 #ifde‡
CPTCFG_ATH9K_BTCOEX_SUPPORT


105 
ölöe
 
	$©h9k_hw_£t_bt_™t_divîsôy
(
©h_hw
 *
ah
, 
boﬁ
 
íabÀ
)

107 i‡(
	`©h9k_hw_›s
(
ah
)->
£t_bt_™t_divîsôy
)

108 
	`©h9k_hw_›s
(
ah
)->
	`£t_bt_™t_divîsôy
◊h, 
íabÀ
);

109 
	}
}

115 
ölöe
 
	$©h9k_hw_öô_h™g_checks
(
©h_hw
 *
ah
)

117 
	`©h9k_hw_¥iv©e_›s
(
ah
)->
	`öô_h™g_checks
(ah);

118 
	}
}

120 
ölöe
 
boﬁ
 
	$©h9k_hw_dëe˘_mac_h™g
(
©h_hw
 *
ah
)

122  
	`©h9k_hw_¥iv©e_›s
(
ah
)->
	`dëe˘_mac_h™g
(ah);

123 
	}
}

125 
ölöe
 
boﬁ
 
	$©h9k_hw_dëe˘_bb_h™g
(
©h_hw
 *
ah
)

127  
	`©h9k_hw_¥iv©e_›s
(
ah
)->
	`dëe˘_bb_h™g
(ah);

128 
	}
}

132 
ölöe
 
	$©h9k_hw_rf_£t_‰eq
(
©h_hw
 *
ah
,

133 
©h9k_ch™√l
 *
ch™
)

135  
	`©h9k_hw_¥iv©e_›s
(
ah
)->
	`rf_£t_‰eq
◊h, 
ch™
);

136 
	}
}

138 
ölöe
 
	$©h9k_hw_•ur_môig©e_‰eq
(
©h_hw
 *
ah
,

139 
©h9k_ch™√l
 *
ch™
)

141 
	`©h9k_hw_¥iv©e_›s
(
ah
)->
	`•ur_môig©e_‰eq
◊h, 
ch™
);

142 
	}
}

144 
ölöe
 
boﬁ
 
	$©h9k_hw_£t_rf_ªgs
(
©h_hw
 *
ah
,

145 
©h9k_ch™√l
 *
ch™
,

146 
u16
 
modesIndex
)

148 i‡(!
	`©h9k_hw_¥iv©e_›s
(
ah
)->
£t_rf_ªgs
)

149  
åue
;

151  
	`©h9k_hw_¥iv©e_›s
(
ah
)->
	`£t_rf_ªgs
◊h, 
ch™
, 
modesIndex
);

152 
	}
}

154 
ölöe
 
	$©h9k_hw_öô_bb
(
©h_hw
 *
ah
,

155 
©h9k_ch™√l
 *
ch™
)

157  
	`©h9k_hw_¥iv©e_›s
(
ah
)->
	`öô_bb
◊h, 
ch™
);

158 
	}
}

160 
ölöe
 
	$©h9k_hw_£t_ch™√l_ªgs
(
©h_hw
 *
ah
,

161 
©h9k_ch™√l
 *
ch™
)

163  
	`©h9k_hw_¥iv©e_›s
(
ah
)->
	`£t_ch™√l_ªgs
◊h, 
ch™
);

164 
	}
}

166 
ölöe
 
	$©h9k_hw_¥o˚ss_öi
(
©h_hw
 *
ah
,

167 
©h9k_ch™√l
 *
ch™
)

169  
	`©h9k_hw_¥iv©e_›s
(
ah
)->
	`¥o˚ss_öi
◊h, 
ch™
);

170 
	}
}

172 
ölöe
 
	$©h9k_ﬁc_öô
(
©h_hw
 *
ah
)

174 i‡(!
	`©h9k_hw_¥iv©e_›s
(
ah
)->
ﬁc_öô
)

177  
	`©h9k_hw_¥iv©e_›s
(
ah
)->
	`ﬁc_öô
(ah);

178 
	}
}

180 
ölöe
 
	$©h9k_hw_£t_rfmode
(
©h_hw
 *
ah
,

181 
©h9k_ch™√l
 *
ch™
)

183  
	`©h9k_hw_¥iv©e_›s
(
ah
)->
	`£t_rfmode
◊h, 
ch™
);

184 
	}
}

186 
ölöe
 
	$©h9k_hw_m¨k_phy_öa˘ive
(
©h_hw
 *
ah
)

188  
	`©h9k_hw_¥iv©e_›s
(
ah
)->
	`m¨k_phy_öa˘ive
(ah);

189 
	}
}

191 
ölöe
 
	$©h9k_hw_£t_dñè_¶›e
(
©h_hw
 *
ah
,

192 
©h9k_ch™√l
 *
ch™
)

194  
	`©h9k_hw_¥iv©e_›s
(
ah
)->
	`£t_dñè_¶›e
◊h, 
ch™
);

195 
	}
}

197 
ölöe
 
boﬁ
 
	$©h9k_hw_rfbus_ªq
(
©h_hw
 *
ah
)

199  
	`©h9k_hw_¥iv©e_›s
(
ah
)->
	`rfbus_ªq
(ah);

200 
	}
}

202 
ölöe
 
	$©h9k_hw_rfbus_d⁄e
(
©h_hw
 *
ah
)

204  
	`©h9k_hw_¥iv©e_›s
(
ah
)->
	`rfbus_d⁄e
(ah);

205 
	}
}

207 
ölöe
 
	$©h9k_hw_ª°‹e_chaömask
(
©h_hw
 *
ah
)

209 i‡(!
	`©h9k_hw_¥iv©e_›s
(
ah
)->
ª°‹e_chaömask
)

212  
	`©h9k_hw_¥iv©e_›s
(
ah
)->
	`ª°‹e_chaömask
(ah);

213 
	}
}

215 
ölöe
 
boﬁ
 
	$©h9k_hw_™i_c⁄åﬁ
(
©h_hw
 *
ah
,

216 
©h9k_™i_cmd
 
cmd
, 
∑øm
)

218  
	`©h9k_hw_¥iv©e_›s
(
ah
)->
	`™i_c⁄åﬁ
◊h, 
cmd
, 
∑øm
);

219 
	}
}

221 
ölöe
 
	$©h9k_hw_do_gënf
(
©h_hw
 *
ah
,

222 
öt16_t
 
nÁºay
[
NUM_NF_READINGS
])

224 
	`©h9k_hw_¥iv©e_›s
(
ah
)->
	`do_gënf
◊h, 
nÁºay
);

225 
	}
}

227 
ölöe
 
boﬁ
 
	$©h9k_hw_öô_ˇl
(
©h_hw
 *
ah
,

228 
©h9k_ch™√l
 *
ch™
)

230  
	`©h9k_hw_¥iv©e_›s
(
ah
)->
	`öô_ˇl
◊h, 
ch™
);

231 
	}
}

233 
ölöe
 
	$©h9k_hw_£tup_ˇlibøti⁄
(
©h_hw
 *
ah
,

234 
©h9k_ˇl_li°
 *
cuºCÆ
)

236 
	`©h9k_hw_¥iv©e_›s
(
ah
)->
	`£tup_ˇlibøti⁄
◊h, 
cuºCÆ
);

237 
	}
}

239 
ölöe
 
	$©h9k_hw_Á°_ch™_ch™ge
(
©h_hw
 *
ah
,

240 
©h9k_ch™√l
 *
ch™
,

241 
u8
 *
öi_ªlﬂded
)

243  
	`©h9k_hw_¥iv©e_›s
(
ah
)->
	`Á°_ch™_ch™ge
◊h, 
ch™
,

244 
öi_ªlﬂded
);

245 
	}
}

247 
ölöe
 
	$©h9k_hw_£t_ød¨_∑øms
(
©h_hw
 *
ah
)

249 i‡(!
	`©h9k_hw_¥iv©e_›s
(
ah
)->
£t_ød¨_∑øms
)

252 
	`©h9k_hw_¥iv©e_›s
(
ah
)->
	`£t_ød¨_∑øms
◊h, &ah->
ød¨_c⁄f
);

253 
	}
}

255 
ölöe
 
	$©h9k_hw_öô_ˇl_£âögs
(
©h_hw
 *
ah
)

257 
	`©h9k_hw_¥iv©e_›s
(
ah
)->
	`öô_ˇl_£âögs
(ah);

258 
	}
}

260 
ölöe
 
u32
 
	$©h9k_hw_compuã_∂l_c⁄åﬁ
(
©h_hw
 *
ah
,

261 
©h9k_ch™√l
 *
ch™
)

263  
	`©h9k_hw_¥iv©e_›s
(
ah
)->
	`compuã_∂l_c⁄åﬁ
◊h, 
ch™
);

264 
	}
}

266 
ölöe
 
	$©h9k_hw_öô_mode_gaö_ªgs
(
©h_hw
 *
ah
)

268 i‡(!
	`©h9k_hw_¥iv©e_›s
(
ah
)->
öô_mode_gaö_ªgs
)

271 
	`©h9k_hw_¥iv©e_›s
(
ah
)->
	`öô_mode_gaö_ªgs
(ah);

272 
	}
}

274 
ölöe
 
	$©h9k_hw_™i_ˇche_öi_ªgs
(
©h_hw
 *
ah
)

276 i‡(!
	`©h9k_hw_¥iv©e_›s
(
ah
)->
™i_ˇche_öi_ªgs
)

279 
	`©h9k_hw_¥iv©e_›s
(
ah
)->
	`™i_ˇche_öi_ªgs
(ah);

280 
	}
}

	@hw.c

17 
	~<löux/io.h
>

18 
	~<löux/¶ab.h
>

19 
	~<löux/moduÀ.h
>

20 
	~<löux/time.h
>

21 
	~<löux/bô›s.h
>

22 
	~<löux/ëhîdevi˚.h
>

23 
	~<asm/u«lig√d.h
>

25 
	~"hw.h
"

26 
	~"hw-›s.h
"

27 
	~"¨9003_mac.h
"

28 
	~"¨9003_mci.h
"

29 
	~"¨9003_phy.h
"

30 
	~"©h9k.h
"

32 
boﬁ
 
©h9k_hw_£t_ª£t_ªg
(
©h_hw
 *
ah
, 
u32
 
ty≥
);

34 
MODULE_AUTHOR
("Atheros Communications");

35 
MODULE_DESCRIPTION
("Support for Atheros 802.11n wireless LAN cards.");

36 
MODULE_SUPPORTED_DEVICE
("Atheros 802.11n WLAN cards");

37 
MODULE_LICENSE
("Dual BSD/GPL");

39 
	$©h9k_hw_£t_˛ockøã
(
©h_hw
 *
ah
)

41 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

42 
©h9k_ch™√l
 *
ch™
 = 
ah
->
curch™
;

43 
˛ockøã
;

46 i‡(
	`AR_SREV_9287
(
ah
Ë&& 
	`AR_SREV_9287_13_OR_LATER
(ah))

47 
˛ockøã
 = 117;

48 i‡(!
ch™
)

49 
˛ockøã
 = 
ATH9K_CLOCK_RATE_CCK
;

50 i‡(
	`IS_CHAN_2GHZ
(
ch™
))

51 
˛ockøã
 = 
ATH9K_CLOCK_RATE_2GHZ_OFDM
;

52 i‡(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_FASTCLOCK
)

53 
˛ockøã
 = 
ATH9K_CLOCK_FAST_RATE_5GHZ_OFDM
;

55 
˛ockøã
 = 
ATH9K_CLOCK_RATE_5GHZ_OFDM
;

57 i‡(
ch™
) {

58 i‡(
	`IS_CHAN_HT40
(
ch™
))

59 
˛ockøã
 *= 2;

60 i‡(
	`IS_CHAN_HALF_RATE
(
ch™
))

61 
˛ockøã
 /= 2;

62 i‡(
	`IS_CHAN_QUARTER_RATE
(
ch™
))

63 
˛ockøã
 /= 4;

66 
comm⁄
->
˛ockøã
 = clockrate;

67 
	}
}

69 
u32
 
	$©h9k_hw_mac_to_˛ks
(
©h_hw
 *
ah
, 
u32
 
u£cs
)

71 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

73  
u£cs
 * 
comm⁄
->
˛ockøã
;

74 
	}
}

76 
boﬁ
 
	$©h9k_hw_waô
(
©h_hw
 *
ah
, 
u32
 
ªg
, u32 
mask
, u32 
vÆ
, u32 
timeout
)

78 
i
;

80 
	`BUG_ON
(
timeout
 < 
AH_TIME_QUANTUM
);

82 
i
 = 0; i < (
timeout
 / 
AH_TIME_QUANTUM
); i++) {

83 i‡((
	`REG_READ
(
ah
, 
ªg
Ë& 
mask
Ë=
vÆ
)

84  
åue
;

86 
	`udñay
(
AH_TIME_QUANTUM
);

89 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
ANY
,

91 
timeout
, 
ªg
, 
	`REG_READ
(
ah
,Ñeg), 
mask
, 
vÆ
);

93  
Ál£
;

94 
	}
}

95 
EXPORT_SYMBOL
(
©h9k_hw_waô
);

97 
	$©h9k_hw_sy¡h_dñay
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
,

98 
hw_dñay
)

100 
hw_dñay
 /= 10;

102 i‡(
	`IS_CHAN_HALF_RATE
(
ch™
))

103 
hw_dñay
 *= 2;

104 i‡(
	`IS_CHAN_QUARTER_RATE
(
ch™
))

105 
hw_dñay
 *= 4;

107 
	`udñay
(
hw_dñay
 + 
BASE_ACTIVATE_DELAY
);

108 
	}
}

110 
	$©h9k_hw_wrôe_¨øy
(
©h_hw
 *
ah
, c⁄° 
¨5416IniAºay
 *
¨øy
,

111 
cﬁumn
, *
wrôe˙t
)

113 
r
;

115 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

116 
r
 = 0;Ñ < 
¨øy
->
ü_rows
;Ñ++) {

117 
	`REG_WRITE
(
ah
, 
	`INI_RA
(
¨øy
, 
r
, 0),

118 
	`INI_RA
(
¨øy
, 
r
, 
cﬁumn
));

119 
	`DO_DELAY
(*
wrôe˙t
);

121 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

122 
	}
}

124 
u32
 
	$©h9k_hw_ªvî£_bôs
(
u32
 
vÆ
, u32 
n
)

126 
u32
 
ªtvÆ
;

127 
i
;

129 
i
 = 0, 
ªtvÆ
 = 0; i < 
n
; i++) {

130 
ªtvÆ
 = (ªtvÆ << 1Ë| (
vÆ
 & 1);

131 
vÆ
 >>= 1;

133  
ªtvÆ
;

134 
	}
}

136 
u16
 
	$©h9k_hw_compuãtxtime
(
©h_hw
 *
ah
,

137 
u8
 
phy
, 
kbps
,

138 
u32
 
‰ameLí
, 
u16
 
øãix
,

139 
boﬁ
 
sh‹tPªambÀ
)

141 
u32
 
bôsPîSymbﬁ
, 
numBôs
, 
numSymbﬁs
, 
phyTime
, 
txTime
;

143 i‡(
kbps
 == 0)

146 
phy
) {

147 
WLAN_RC_PHY_CCK
:

148 
phyTime
 = 
CCK_PREAMBLE_BITS
 + 
CCK_PLCP_BITS
;

149 i‡(
sh‹tPªambÀ
)

150 
phyTime
 >>= 1;

151 
numBôs
 = 
‰ameLí
 << 3;

152 
txTime
 = 
CCK_SIFS_TIME
 + 
phyTime
 + ((
numBôs
 * 1000Ë/ 
kbps
);

154 
WLAN_RC_PHY_OFDM
:

155 i‡(
ah
->
curch™
 && 
	`IS_CHAN_QUARTER_RATE
(ah->curchan)) {

156 
bôsPîSymbﬁ
 = (
kbps
 * 
OFDM_SYMBOL_TIME_QUARTER
) / 1000;

157 
numBôs
 = 
OFDM_PLCP_BITS
 + (
‰ameLí
 << 3);

158 
numSymbﬁs
 = 
	`DIV_ROUND_UP
(
numBôs
, 
bôsPîSymbﬁ
);

159 
txTime
 = 
OFDM_SIFS_TIME_QUARTER


160 + 
OFDM_PREAMBLE_TIME_QUARTER


161 + (
numSymbﬁs
 * 
OFDM_SYMBOL_TIME_QUARTER
);

162 } i‡(
ah
->
curch™
 &&

163 
	`IS_CHAN_HALF_RATE
(
ah
->
curch™
)) {

164 
bôsPîSymbﬁ
 = (
kbps
 * 
OFDM_SYMBOL_TIME_HALF
) / 1000;

165 
numBôs
 = 
OFDM_PLCP_BITS
 + (
‰ameLí
 << 3);

166 
numSymbﬁs
 = 
	`DIV_ROUND_UP
(
numBôs
, 
bôsPîSymbﬁ
);

167 
txTime
 = 
OFDM_SIFS_TIME_HALF
 +

168 
OFDM_PREAMBLE_TIME_HALF


169 + (
numSymbﬁs
 * 
OFDM_SYMBOL_TIME_HALF
);

171 
bôsPîSymbﬁ
 = (
kbps
 * 
OFDM_SYMBOL_TIME
) / 1000;

172 
numBôs
 = 
OFDM_PLCP_BITS
 + (
‰ameLí
 << 3);

173 
numSymbﬁs
 = 
	`DIV_ROUND_UP
(
numBôs
, 
bôsPîSymbﬁ
);

174 
txTime
 = 
OFDM_SIFS_TIME
 + 
OFDM_PREAMBLE_TIME


175 + (
numSymbﬁs
 * 
OFDM_SYMBOL_TIME
);

179 
	`©h_îr
(
	`©h9k_hw_comm⁄
(
ah
),

180 "Unknow¿phy %u (øã ix %u)\n", 
phy
, 
øãix
);

181 
txTime
 = 0;

185  
txTime
;

186 
	}
}

187 
EXPORT_SYMBOL
(
©h9k_hw_compuãtxtime
);

189 
	$©h9k_hw_gë_ch™√l_˚¡îs
(
©h_hw
 *
ah
,

190 
©h9k_ch™√l
 *
ch™
,

191 
ch™_˚¡îs
 *
˚¡îs
)

193 
öt8_t
 
extoff
;

195 i‡(!
	`IS_CHAN_HT40
(
ch™
)) {

196 
˚¡îs
->
˘l_˚¡î
 = cíãrs->
ext_˚¡î
 =

197 
˚¡îs
->
sy¡h_˚¡î
 = 
ch™
->
ch™√l
;

201 i‡(
	`IS_CHAN_HT40PLUS
(
ch™
)) {

202 
˚¡îs
->
sy¡h_˚¡î
 =

203 
ch™
->
ch™√l
 + 
HT40_CHANNEL_CENTER_SHIFT
;

204 
extoff
 = 1;

206 
˚¡îs
->
sy¡h_˚¡î
 =

207 
ch™
->
ch™√l
 - 
HT40_CHANNEL_CENTER_SHIFT
;

208 
extoff
 = -1;

211 
˚¡îs
->
˘l_˚¡î
 =

212 
˚¡îs
->
sy¡h_˚¡î
 - (
extoff
 * 
HT40_CHANNEL_CENTER_SHIFT
);

214 
˚¡îs
->
ext_˚¡î
 =

215 
˚¡îs
->
sy¡h_˚¡î
 + (
extoff
 * 
HT40_CHANNEL_CENTER_SHIFT
);

216 
	}
}

218 
ölöe
 
	$©h9k_hw_dißbÀ_∂l_lock_dëe˘
(
©h_hw
 *
ah
)

225 
	`REG_CLR_BIT
(
ah
, 
AR_PHY_USB_CTRL1
, 
	`BIT
(20));

226 
	`REG_RMW
(
ah
, 
AR_PHY_USB_CTRL2
,

229 
	}
}

235 
	$©h9k_hw_ªad_ªvisi⁄s
(
©h_hw
 *
ah
)

237 
u32
 
vÆ
;

239 
ah
->
hw_vîsi⁄
.
devid
) {

240 
AR5416_AR9100_DEVID
:

241 
ah
->
hw_vîsi⁄
.
macVîsi⁄
 = 
AR_SREV_VERSION_9100
;

243 
AR9300_DEVID_AR9330
:

244 
ah
->
hw_vîsi⁄
.
macVîsi⁄
 = 
AR_SREV_VERSION_9330
;

245 i‡(
ah
->
gë_mac_ªvisi⁄
) {

246 
ah
->
hw_vîsi⁄
.
macRev
 =áh->
	`gë_mac_ªvisi⁄
();

248 
vÆ
 = 
	`REG_READ
(
ah
, 
AR_SREV
);

249 
ah
->
hw_vîsi⁄
.
macRev
 = 
	`MS
(
vÆ
, 
AR_SREV_REVISION2
);

252 
AR9300_DEVID_AR9340
:

253 
ah
->
hw_vîsi⁄
.
macVîsi⁄
 = 
AR_SREV_VERSION_9340
;

254 
vÆ
 = 
	`REG_READ
(
ah
, 
AR_SREV
);

255 
ah
->
hw_vîsi⁄
.
macRev
 = 
	`MS
(
vÆ
, 
AR_SREV_REVISION2
);

257 
AR9300_DEVID_QCA955X
:

258 
ah
->
hw_vîsi⁄
.
macVîsi⁄
 = 
AR_SREV_VERSION_9550
;

260 
AR9300_DEVID_AR953X
:

261 
ah
->
hw_vîsi⁄
.
macVîsi⁄
 = 
AR_SREV_VERSION_9531
;

262 i‡(
ah
->
gë_mac_ªvisi⁄
)

263 
ah
->
hw_vîsi⁄
.
macRev
 =áh->
	`gë_mac_ªvisi⁄
();

267 
vÆ
 = 
	`REG_READ
(
ah
, 
AR_SREV
Ë& 
AR_SREV_ID
;

269 i‡(
vÆ
 == 0xFF) {

270 
vÆ
 = 
	`REG_READ
(
ah
, 
AR_SREV
);

271 
ah
->
hw_vîsi⁄
.
macVîsi⁄
 =

272 (
vÆ
 & 
AR_SREV_VERSION2
Ë>> 
AR_SREV_TYPE2_S
;

273 
ah
->
hw_vîsi⁄
.
macRev
 = 
	`MS
(
vÆ
, 
AR_SREV_REVISION2
);

275 i‡(
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9565
(ah))

276 
ah
->
is_pcõx¥ess
 = 
åue
;

278 
ah
->
is_pcõx¥ess
 = (
vÆ
 &

279 
AR_SREV_TYPE2_HOST_MODE
) ? 0 : 1;

281 i‡(!
	`AR_SREV_9100
(
ah
))

282 
ah
->
hw_vîsi⁄
.
macVîsi⁄
 = 
	`MS
(
vÆ
, 
AR_SREV_VERSION
);

284 
ah
->
hw_vîsi⁄
.
macRev
 = 
vÆ
 & 
AR_SREV_REVISION
;

286 i‡(
ah
->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_VERSION_5416_PCIE
)

287 
ah
->
is_pcõx¥ess
 = 
åue
;

289 
	}
}

295 
	$©h9k_hw_dißbÀpcõ
(
©h_hw
 *
ah
)

297 i‡(!
	`AR_SREV_5416
(
ah
))

300 
	`REG_WRITE
(
ah
, 
AR_PCIE_SERDES
, 0x9248fc00);

301 
	`REG_WRITE
(
ah
, 
AR_PCIE_SERDES
, 0x24924924);

302 
	`REG_WRITE
(
ah
, 
AR_PCIE_SERDES
, 0x28000029);

303 
	`REG_WRITE
(
ah
, 
AR_PCIE_SERDES
, 0x57160824);

304 
	`REG_WRITE
(
ah
, 
AR_PCIE_SERDES
, 0x25980579);

305 
	`REG_WRITE
(
ah
, 
AR_PCIE_SERDES
, 0x00000000);

306 
	`REG_WRITE
(
ah
, 
AR_PCIE_SERDES
, 0x1aaabe40);

307 
	`REG_WRITE
(
ah
, 
AR_PCIE_SERDES
, 0xbe105554);

308 
	`REG_WRITE
(
ah
, 
AR_PCIE_SERDES
, 0x000e1007);

310 
	`REG_WRITE
(
ah
, 
AR_PCIE_SERDES2
, 0x00000000);

311 
	}
}

314 
boﬁ
 
	$©h9k_hw_chù_ã°
(
©h_hw
 *
ah
)

316 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

317 
u32
 
ªgAddr
[2] = { 
AR_STA_ID0
 };

318 
u32
 
ªgHﬁd
[2];

319 c⁄° 
u32
 
∑âînD©a
[4] = {

322 
i
, 
j
, 
lo›_max
;

324 i‡(!
	`AR_SREV_9300_20_OR_LATER
(
ah
)) {

325 
lo›_max
 = 2;

326 
ªgAddr
[1] = 
AR_PHY_BASE
 + (8 << 2);

328 
lo›_max
 = 1;

330 
i
 = 0; i < 
lo›_max
; i++) {

331 
u32
 
addr
 = 
ªgAddr
[
i
];

332 
u32
 
wrD©a
, 
rdD©a
;

334 
ªgHﬁd
[
i
] = 
	`REG_READ
(
ah
, 
addr
);

335 
j
 = 0; j < 0x100; j++) {

336 
wrD©a
 = (
j
 << 16) | j;

337 
	`REG_WRITE
(
ah
, 
addr
, 
wrD©a
);

338 
rdD©a
 = 
	`REG_READ
(
ah
, 
addr
);

339 i‡(
rdD©a
 !
wrD©a
) {

340 
	`©h_îr
(
comm⁄
,

342 
addr
, 
wrD©a
, 
rdD©a
);

343  
Ál£
;

346 
j
 = 0; j < 4; j++) {

347 
wrD©a
 = 
∑âînD©a
[
j
];

348 
	`REG_WRITE
(
ah
, 
addr
, 
wrD©a
);

349 
rdD©a
 = 
	`REG_READ
(
ah
, 
addr
);

350 i‡(
wrD©a
 !
rdD©a
) {

351 
	`©h_îr
(
comm⁄
,

353 
addr
, 
wrD©a
, 
rdD©a
);

354  
Ál£
;

357 
	`REG_WRITE
(
ah
, 
ªgAddr
[
i
], 
ªgHﬁd
[i]);

359 
	`udñay
(100);

361  
åue
;

362 
	}
}

364 
	$©h9k_hw_öô_c⁄fig
(
©h_hw
 *
ah
)

366 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

368 
ah
->
c⁄fig
.
dma_bóc⁄_ª•⁄£_time
 = 1;

369 
ah
->
c⁄fig
.
sw_bóc⁄_ª•⁄£_time
 = 6;

370 
ah
->
c⁄fig
.
cwm_ign‹e_extcˇ
 = 0;

371 
ah
->
c⁄fig
.
™Æog_shi·ªg
 = 1;

373 
ah
->
c⁄fig
.
rx_öå_môig©i⁄
 = 
åue
;

375 
ah
->
c⁄fig
.
rimt_œ°
 = 250;

376 
ah
->
c⁄fig
.
rimt_fú°
 = 500;

394 i‡(
	`num_possibÀ_˝us
() > 1)

395 
ah
->
c⁄fig
.
£rülize_ªgmode
 = 
SER_REG_MODE_AUTO
;

397 i‡(
NR_CPUS
 > 1 && 
ah
->
c⁄fig
.
£rülize_ªgmode
 =
SER_REG_MODE_AUTO
) {

398 i‡(
ah
->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_VERSION_5416_PCI
 ||

399 ((
	`AR_SREV_9160
(
ah
Ë|| 
	`AR_SREV_9280
◊hË|| 
	`AR_SREV_9287
(ah)) &&

400 !
ah
->
is_pcõx¥ess
)) {

401 
ah
->
c⁄fig
.
£rülize_ªgmode
 = 
SER_REG_MODE_ON
;

403 
ah
->
c⁄fig
.
£rülize_ªgmode
 = 
SER_REG_MODE_OFF
;

407 
	`©h_dbg
(
comm⁄
, 
RESET
, "serialize_regmode is %d\n",

408 
ah
->
c⁄fig
.
£rülize_ªgmode
);

410 i‡(
	`AR_SREV_9285
(
ah
Ë|| 
	`AR_SREV_9271
(ah))

411 
ah
->
c⁄fig
.
max_txåig_Àvñ
 = 
MAX_TX_FIFO_THRESHOLD
 >> 1;

413 
ah
->
c⁄fig
.
max_txåig_Àvñ
 = 
MAX_TX_FIFO_THRESHOLD
;

414 
	}
}

416 
	$©h9k_hw_öô_deÁu…s
(
©h_hw
 *
ah
)

418 
©h_ªguœt‹y
 *
ªguœt‹y
 = 
	`©h9k_hw_ªguœt‹y
(
ah
);

420 
ªguœt‹y
->
cou¡ry_code
 = 
CTRY_DEFAULT
;

421 
ªguœt‹y
->
powî_limô
 = 
MAX_RATE_POWER
;

423 
ah
->
hw_vîsi⁄
.
magic
 = 
AR5416_MAGIC
;

424 
ah
->
hw_vîsi⁄
.
subvíd‹id
 = 0;

426 
ah
->
°a_id1_deÁu…s
 = 
AR_STA_ID1_CRPT_MIC_ENABLE
 |

427 
AR_STA_ID1_MCAST_KSRCH
;

428 i‡(
	`AR_SREV_9100
(
ah
))

429 
ah
->
°a_id1_deÁu…s
 |
AR_STA_ID1_AR9100_BA_FIX
;

431 
ah
->
¶Ÿtime
 = 
ATH9K_SLOT_TIME_9
;

432 
ah
->
globÆtxtimeout
 = (
u32
) -1;

433 
ah
->
powî_mode
 = 
ATH9K_PM_UNDEFINED
;

434 
ah
->
htc_ª£t_öô
 = 
åue
;

436 
ah
->
™i_fun˘i⁄
 = 
ATH9K_ANI_ALL
;

437 i‡(!
	`AR_SREV_9300_20_OR_LATER
(
ah
))

438 
ah
->
™i_fun˘i⁄
 &~
ATH9K_ANI_MRC_CCK
;

440 i‡(
	`AR_SREV_9285
(
ah
Ë|| 
	`AR_SREV_9271
(ah))

441 
ah
->
tx_åig_Àvñ
 = (
AR_FTRIG_256B
 >> 
AR_FTRIG_S
);

443 
ah
->
tx_åig_Àvñ
 = (
AR_FTRIG_512B
 >> 
AR_FTRIG_S
);

444 
	}
}

446 
	$©h9k_hw_öô_maˇddr
(
©h_hw
 *
ah
)

448 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

449 
u32
 
sum
;

450 
i
;

451 
u16
 
ìvÆ
;

452 c⁄° 
u32
 
EEP_MAC
[] = { 
EEP_MAC_LSW
, 
EEP_MAC_MID
, 
EEP_MAC_MSW
 };

454 
sum
 = 0;

455 
i
 = 0; i < 3; i++) {

456 
ìvÆ
 = 
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_MAC
[
i
]);

457 
sum
 +
ìvÆ
;

458 
comm⁄
->
maˇddr
[2 * 
i
] = 
ìvÆ
 >> 8;

459 
comm⁄
->
maˇddr
[2 * 
i
 + 1] = 
ìvÆ
 & 0xff;

461 i‡(!
	`is_vÆid_ëhî_addr
(
comm⁄
->
maˇddr
)) {

462 
	`©h_îr
(
comm⁄
,

464 
comm⁄
->
maˇddr
);

466 
	`øndom_ëhî_addr
(
comm⁄
->
maˇddr
);

467 
	`©h_îr
(
comm⁄
,

469 
comm⁄
->
maˇddr
);

473 
	}
}

475 
	$©h9k_hw_po°_öô
(
©h_hw
 *
ah
)

477 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

478 
ecode
;

480 i‡(
comm⁄
->
bus_›s
->
©h_bus_ty≥
 !
ATH_USB
) {

481 i‡(!
	`©h9k_hw_chù_ã°
(
ah
))

482  -
ENODEV
;

485 i‡(!
	`AR_SREV_9300_20_OR_LATER
(
ah
)) {

486 
ecode
 = 
	`¨9002_hw_rf_˛aim
(
ah
);

487 i‡(
ecode
 != 0)

488  
ecode
;

491 
ecode
 = 
	`©h9k_hw_ì¥om_öô
(
ah
);

492 i‡(
ecode
 != 0)

493  
ecode
;

495 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
CONFIG
, "Eeprom VER: %d, REV: %d\n",

496 
ah
->
ìp_›s
->
	`gë_ì¥om_vî
(ah),

497 
ah
->
ìp_›s
->
	`gë_ì¥om_ªv
(ah));

499 
	`©h9k_hw_™i_öô
(
ah
);

505 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
)) {

506 
u16
 
ªgdmn
 = 
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_REG_0
);

507 i‡((
ªgdmn
 & 0xF0Ë=
CTL_FCC
) {

508 
ah
->
nf_2g
.
max
 = 
AR_PHY_CCA_MAX_GOOD_VAL_9300_FCC_2GHZ
;

509 
ah
->
nf_5g
.
max
 = 
AR_PHY_CCA_MAX_GOOD_VAL_9300_FCC_5GHZ
;

514 
	}
}

516 
	$©h9k_hw_©èch_›s
(
©h_hw
 *
ah
)

518 i‡(!
	`AR_SREV_9300_20_OR_LATER
(
ah
))

519  
	`¨9002_hw_©èch_›s
(
ah
);

521 
	`¨9003_hw_©èch_›s
(
ah
);

523 
	}
}

526 
	$__©h9k_hw_öô
(
©h_hw
 *
ah
)

528 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

529 
r
 = 0;

531 
	`©h9k_hw_ªad_ªvisi⁄s
(
ah
);

533 
ah
->
hw_vîsi⁄
.
macVîsi⁄
) {

534 
AR_SREV_VERSION_5416_PCI
:

535 
AR_SREV_VERSION_5416_PCIE
:

536 
AR_SREV_VERSION_9160
:

537 
AR_SREV_VERSION_9100
:

538 
AR_SREV_VERSION_9280
:

539 
AR_SREV_VERSION_9285
:

540 
AR_SREV_VERSION_9287
:

541 
AR_SREV_VERSION_9271
:

542 
AR_SREV_VERSION_9300
:

543 
AR_SREV_VERSION_9330
:

544 
AR_SREV_VERSION_9485
:

545 
AR_SREV_VERSION_9340
:

546 
AR_SREV_VERSION_9462
:

547 
AR_SREV_VERSION_9550
:

548 
AR_SREV_VERSION_9565
:

549 
AR_SREV_VERSION_9531
:

552 
	`©h_îr
(
comm⁄
,

554 
ah
->
hw_vîsi⁄
.
macVîsi⁄
,áh->hw_vîsi⁄.
macRev
);

555  -
EOPNOTSUPP
;

563 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
)) {

564 
ah
->
WARegVÆ
 = 
	`REG_READ
◊h, 
AR_WA
);

565 
ah
->
WARegVÆ
 |(
AR_WA_D3_L1_DISABLE
 |

566 
AR_WA_ASPM_TIMER_BASED_DISABLE
);

569 i‡(!
	`©h9k_hw_£t_ª£t_ªg
(
ah
, 
ATH9K_RESET_POWER_ON
)) {

570 
	`©h_îr
(
comm⁄
, "Couldn'tÑeset chip\n");

571  -
EIO
;

574 i‡(
	`AR_SREV_9565
(
ah
)) {

575 
ah
->
WARegVÆ
 |
AR_WA_BIT22
;

576 
	`REG_WRITE
(
ah
, 
AR_WA
,áh->
WARegVÆ
);

579 
	`©h9k_hw_öô_deÁu…s
(
ah
);

580 
	`©h9k_hw_öô_c⁄fig
(
ah
);

582 
r
 = 
	`©h9k_hw_©èch_›s
(
ah
);

583 i‡(
r
)

584  
r
;

586 i‡(!
	`©h9k_hw_£çowî
(
ah
, 
ATH9K_PM_AWAKE
)) {

587 
	`©h_îr
(
comm⁄
, "Couldn't wakeup chip\n");

588  -
EIO
;

591 i‡(
	`AR_SREV_9271
(
ah
Ë|| 
	`AR_SREV_9100
◊hË|| 
	`AR_SREV_9340
(ah) ||

592 
	`AR_SREV_9330
(
ah
Ë|| 
	`AR_SREV_9550
(ah))

593 
ah
->
is_pcõx¥ess
 = 
Ál£
;

595 
ah
->
hw_vîsi⁄
.
phyRev
 = 
	`REG_READ
◊h, 
AR_PHY_CHIP_ID
);

596 
	`©h9k_hw_öô_ˇl_£âögs
(
ah
);

598 i‡(!
ah
->
is_pcõx¥ess
)

599 
	`©h9k_hw_dißbÀpcõ
(
ah
);

601 
r
 = 
	`©h9k_hw_po°_öô
(
ah
);

602 i‡(
r
)

603  
r
;

605 
	`©h9k_hw_öô_mode_gaö_ªgs
(
ah
);

606 
r
 = 
	`©h9k_hw_fûl_ˇp_öfo
(
ah
);

607 i‡(
r
)

608  
r
;

610 
r
 = 
	`©h9k_hw_öô_maˇddr
(
ah
);

611 i‡(
r
) {

612 
	`©h_îr
(
comm⁄
, "FailedÅo initialize MACáddress\n");

613  
r
;

616 
	`©h9k_hw_öô_h™g_checks
(
ah
);

618 
comm⁄
->
°©e
 = 
ATH_HW_INITIALIZED
;

621 
	}
}

623 
	$©h9k_hw_öô
(
©h_hw
 *
ah
)

625 
ªt
;

626 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

629 
ah
->
hw_vîsi⁄
.
devid
) {

630 
AR9300_DEVID_INVALID
:

631 
AR5416_DEVID_PCI
:

632 
AR5416_DEVID_PCIE
:

633 
AR5416_AR9100_DEVID
:

634 
AR9160_DEVID_PCI
:

635 
AR9280_DEVID_PCI
:

636 
AR9280_DEVID_PCIE
:

637 
AR9285_DEVID_PCIE
:

638 
AR9287_DEVID_PCI
:

639 
AR9287_DEVID_PCIE
:

640 
AR2427_DEVID_PCIE
:

641 
AR9300_DEVID_PCIE
:

642 
AR9300_DEVID_AR9485_PCIE
:

643 
AR9300_DEVID_AR9330
:

644 
AR9300_DEVID_AR9340
:

645 
AR9300_DEVID_QCA955X
:

646 
AR9300_DEVID_AR9580
:

647 
AR9300_DEVID_AR9462
:

648 
AR9485_DEVID_AR1111
:

649 
AR9300_DEVID_AR9565
:

650 
AR9300_DEVID_AR953X
:

653 i‡(
comm⁄
->
bus_›s
->
©h_bus_ty≥
 =
ATH_USB
)

655 
	`©h_îr
(
comm⁄
, "Hardware device ID 0x%04xÇot supported\n",

656 
ah
->
hw_vîsi⁄
.
devid
);

657  -
EOPNOTSUPP
;

660 
ªt
 = 
	`__©h9k_hw_öô
(
ah
);

661 i‡(
ªt
) {

662 
	`©h_îr
(
comm⁄
,

664 
ªt
);

665  
ªt
;

669 
	}
}

670 
EXPORT_SYMBOL
(
©h9k_hw_öô
);

672 
	$©h9k_hw_öô_qos
(
©h_hw
 *
ah
)

674 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

676 
	`REG_WRITE
(
ah
, 
AR_MIC_QOS_CONTROL
, 0x100aa);

677 
	`REG_WRITE
(
ah
, 
AR_MIC_QOS_SELECT
, 0x3210);

679 
	`REG_WRITE
(
ah
, 
AR_QOS_NO_ACK
,

680 
	`SM
(2, 
AR_QOS_NO_ACK_TWO_BIT
) |

681 
	`SM
(5, 
AR_QOS_NO_ACK_BIT_OFF
) |

682 
	`SM
(0, 
AR_QOS_NO_ACK_BYTE_OFF
));

684 
	`REG_WRITE
(
ah
, 
AR_TXOP_X
, 
AR_TXOP_X_VAL
);

685 
	`REG_WRITE
(
ah
, 
AR_TXOP_0_3
, 0xFFFFFFFF);

686 
	`REG_WRITE
(
ah
, 
AR_TXOP_4_7
, 0xFFFFFFFF);

687 
	`REG_WRITE
(
ah
, 
AR_TXOP_8_11
, 0xFFFFFFFF);

688 
	`REG_WRITE
(
ah
, 
AR_TXOP_12_15
, 0xFFFFFFFF);

690 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

691 
	}
}

693 
u32
 
	$¨9003_gë_∂l_sqsum_dvc
(
©h_hw
 *
ah
)

695 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

696 
i
 = 0;

698 
	`REG_CLR_BIT
(
ah
, 
PLL3
, 
PLL3_DO_MEAS_MASK
);

699 
	`udñay
(100);

700 
	`REG_SET_BIT
(
ah
, 
PLL3
, 
PLL3_DO_MEAS_MASK
);

702 (
	`REG_READ
(
ah
, 
PLL4
Ë& 
PLL4_MEAS_DONE
) == 0) {

704 
	`udñay
(100);

706 i‡(
	`WARN_ON_ONCE
(
i
 >= 100)) {

707 
	`©h_îr
(
comm⁄
, "PLL4 meaurementÇot done\n");

711 
i
++;

714  (
	`REG_READ
(
ah
, 
PLL3
Ë& 
SQSUM_DVC_MASK
) >> 3;

715 
	}
}

716 
EXPORT_SYMBOL
(
¨9003_gë_∂l_sqsum_dvc
);

718 
	$©h9k_hw_öô_∂l
(
©h_hw
 *
ah
,

719 
©h9k_ch™√l
 *
ch™
)

721 
u32
 
∂l
;

723 
∂l
 = 
	`©h9k_hw_compuã_∂l_c⁄åﬁ
(
ah
, 
ch™
);

725 i‡(
	`AR_SREV_9485
(
ah
Ë|| 
	`AR_SREV_9565
(ah)) {

727 
	`REG_RMW_FIELD
(
ah
, 
AR_CH0_BB_DPLL2
,

728 
AR_CH0_BB_DPLL2_PLL_PWD
, 0x1);

729 
	`REG_RMW_FIELD
(
ah
, 
AR_CH0_BB_DPLL2
,

730 
AR_CH0_DPLL2_KD
, 0x40);

731 
	`REG_RMW_FIELD
(
ah
, 
AR_CH0_BB_DPLL2
,

732 
AR_CH0_DPLL2_KI
, 0x4);

734 
	`REG_RMW_FIELD
(
ah
, 
AR_CH0_BB_DPLL1
,

735 
AR_CH0_BB_DPLL1_REFDIV
, 0x5);

736 
	`REG_RMW_FIELD
(
ah
, 
AR_CH0_BB_DPLL1
,

737 
AR_CH0_BB_DPLL1_NINI
, 0x58);

738 
	`REG_RMW_FIELD
(
ah
, 
AR_CH0_BB_DPLL1
,

739 
AR_CH0_BB_DPLL1_NFRAC
, 0x0);

741 
	`REG_RMW_FIELD
(
ah
, 
AR_CH0_BB_DPLL2
,

742 
AR_CH0_BB_DPLL2_OUTDIV
, 0x1);

743 
	`REG_RMW_FIELD
(
ah
, 
AR_CH0_BB_DPLL2
,

744 
AR_CH0_BB_DPLL2_LOCAL_PLL
, 0x1);

745 
	`REG_RMW_FIELD
(
ah
, 
AR_CH0_BB_DPLL2
,

746 
AR_CH0_BB_DPLL2_EN_NEGTRIG
, 0x1);

749 
	`REG_RMW_FIELD
(
ah
, 
AR_CH0_BB_DPLL3
,

750 
AR_CH0_BB_DPLL3_PHASE_SHIFT
, 0x6);

752 
	`REG_RMW_FIELD
(
ah
, 
AR_CH0_BB_DPLL2
,

753 
AR_CH0_BB_DPLL2_PLL_PWD
, 0x0);

754 
	`udñay
(1000);

755 } i‡(
	`AR_SREV_9330
(
ah
)) {

756 
u32
 
ddr_d∂l2
, 
∂l_c⁄åﬁ2
, 
kd
;

758 i‡(
ah
->
is_˛k_25mhz
) {

759 
ddr_d∂l2
 = 0x18e82f01;

760 
∂l_c⁄åﬁ2
 = 0xe04a3d;

761 
kd
 = 0x1d;

763 
ddr_d∂l2
 = 0x19e82f01;

764 
∂l_c⁄åﬁ2
 = 0x886666;

765 
kd
 = 0x3d;

769 
	`REG_WRITE
(
ah
, 
AR_CH0_DDR_DPLL2
, 
ddr_d∂l2
);

772 
	`REG_RMW_FIELD
(
ah
, 
AR_CH0_DDR_DPLL3
,

773 
AR_CH0_DPLL3_PHASE_SHIFT
, 0x1);

775 
	`REG_WRITE
(
ah
, 
AR_RTC_PLL_CONTROL
,

776 
∂l
 | 
AR_RTC_9300_PLL_BYPASS
);

777 
	`udñay
(1000);

780 
	`REG_WRITE
(
ah
, 
AR_RTC_PLL_CONTROL2
, 
∂l_c⁄åﬁ2
);

783 
	`REG_RMW_FIELD
(
ah
, 
AR_CH0_BB_DPLL2
, 
AR_CH0_DPLL2_KD
, 
kd
);

784 
	`REG_RMW_FIELD
(
ah
, 
AR_CH0_BB_DPLL2
, 
AR_CH0_DPLL2_KI
, 0x06);

787 
	`REG_RMW_FIELD
(
ah
, 
AR_CH0_BB_DPLL3
,

788 
AR_CH0_BB_DPLL3_PHASE_SHIFT
, 0x1);

789 } i‡(
	`AR_SREV_9340
(
ah
Ë|| 
	`AR_SREV_9550
◊hË|| 
	`AR_SREV_9531
(ah)) {

790 
u32
 
ªgvÆ
, 
∂l2_divöt
, 
∂l2_div‰ac
, 
ªfdiv
;

792 
	`REG_WRITE
(
ah
, 
AR_RTC_PLL_CONTROL
,

793 
∂l
 | 
AR_RTC_9300_SOC_PLL_BYPASS
);

794 
	`udñay
(1000);

796 
	`REG_SET_BIT
(
ah
, 
AR_PHY_PLL_MODE
, 0x1 << 16);

797 
	`udñay
(100);

799 i‡(
ah
->
is_˛k_25mhz
) {

800 i‡(
	`AR_SREV_9531
(
ah
)) {

801 
∂l2_divöt
 = 0x1c;

802 
∂l2_div‰ac
 = 0xa3d2;

803 
ªfdiv
 = 1;

805 
∂l2_divöt
 = 0x54;

806 
∂l2_div‰ac
 = 0x1eb85;

807 
ªfdiv
 = 3;

810 i‡(
	`AR_SREV_9340
(
ah
)) {

811 
∂l2_divöt
 = 88;

812 
∂l2_div‰ac
 = 0;

813 
ªfdiv
 = 5;

815 
∂l2_divöt
 = 0x11;

816 
∂l2_div‰ac
 = 0x26666;

817 
ªfdiv
 = 1;

821 
ªgvÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_PLL_MODE
);

822 i‡(
	`AR_SREV_9531
(
ah
))

823 
ªgvÆ
 |= (0x1 << 22);

825 
ªgvÆ
 |= (0x1 << 16);

826 
	`REG_WRITE
(
ah
, 
AR_PHY_PLL_MODE
, 
ªgvÆ
);

827 
	`udñay
(100);

829 
	`REG_WRITE
(
ah
, 
AR_PHY_PLL_CONTROL
, (
ªfdiv
 << 27) |

830 (
∂l2_divöt
 << 18Ë| 
∂l2_div‰ac
);

831 
	`udñay
(100);

833 
ªgvÆ
 = 
	`REG_READ
(
ah
, 
AR_PHY_PLL_MODE
);

834 i‡(
	`AR_SREV_9340
(
ah
))

835 
ªgvÆ
 = (regval & 0x80071fff) |

840 i‡(
	`AR_SREV_9531
(
ah
))

841 
ªgvÆ
 = (regval & 0x01c00fff) |

848 
ªgvÆ
 = (regval & 0x80071fff) |

853 
	`REG_WRITE
(
ah
, 
AR_PHY_PLL_MODE
, 
ªgvÆ
);

855 i‡(
	`AR_SREV_9531
(
ah
))

856 
	`REG_WRITE
(
ah
, 
AR_PHY_PLL_MODE
,

857 
	`REG_READ
(
ah
, 
AR_PHY_PLL_MODE
) & 0xffbfffff);

859 
	`REG_WRITE
(
ah
, 
AR_PHY_PLL_MODE
,

860 
	`REG_READ
(
ah
, 
AR_PHY_PLL_MODE
) & 0xfffeffff);

862 
	`udñay
(1000);

865 i‡(
	`AR_SREV_9565
(
ah
))

866 
∂l
 |= 0x40000;

867 
	`REG_WRITE
(
ah
, 
AR_RTC_PLL_CONTROL
, 
∂l
);

869 i‡(
	`AR_SREV_9485
(
ah
Ë|| 
	`AR_SREV_9340
◊hË|| 
	`AR_SREV_9330
(ah) ||

870 
	`AR_SREV_9550
(
ah
))

871 
	`udñay
(1000);

874 i‡(
	`AR_SREV_9271
(
ah
)) {

875 
	`udñay
(500);

876 
	`REG_WRITE
(
ah
, 0x50040, 0x304);

879 
	`udñay
(
RTC_PLL_SETTLE_DELAY
);

881 
	`REG_WRITE
(
ah
, 
AR_RTC_SLEEP_CLK
, 
AR_RTC_FORCE_DERIVED_CLK
);

882 
	}
}

884 
	$©h9k_hw_öô_öãºu±_masks
(
©h_hw
 *
ah
,

885 
∆80211_i·y≥
 
›mode
)

887 
u32
 
sync_deÁu…
 = 
AR_INTR_SYNC_DEFAULT
;

888 
u32
 
imr_ªg
 = 
AR_IMR_TXERR
 |

889 
AR_IMR_TXURN
 |

890 
AR_IMR_RXERR
 |

891 
AR_IMR_RXORN
 |

892 
AR_IMR_BCNMISC
;

894 i‡(
	`AR_SREV_9340
(
ah
Ë|| 
	`AR_SREV_9550
◊hË|| 
	`AR_SREV_9531
(ah))

895 
sync_deÁu…
 &~
AR_INTR_SYNC_HOST1_FATAL
;

897 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
)) {

898 
imr_ªg
 |
AR_IMR_RXOK_HP
;

899 i‡(
ah
->
c⁄fig
.
rx_öå_môig©i⁄
)

900 
imr_ªg
 |
AR_IMR_RXINTM
 | 
AR_IMR_RXMINTR
;

902 
imr_ªg
 |
AR_IMR_RXOK_LP
;

905 i‡(
ah
->
c⁄fig
.
rx_öå_môig©i⁄
)

906 
imr_ªg
 |
AR_IMR_RXINTM
 | 
AR_IMR_RXMINTR
;

908 
imr_ªg
 |
AR_IMR_RXOK
;

911 i‡(
ah
->
c⁄fig
.
tx_öå_môig©i⁄
)

912 
imr_ªg
 |
AR_IMR_TXINTM
 | 
AR_IMR_TXMINTR
;

914 
imr_ªg
 |
AR_IMR_TXOK
;

916 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

918 
	`REG_WRITE
(
ah
, 
AR_IMR
, 
imr_ªg
);

919 
ah
->
imrs2_ªg
 |
AR_IMR_S2_GTT
;

920 
	`REG_WRITE
(
ah
, 
AR_IMR_S2
,áh->
imrs2_ªg
);

922 i‡(!
	`AR_SREV_9100
(
ah
)) {

923 
	`REG_WRITE
(
ah
, 
AR_INTR_SYNC_CAUSE
, 0xFFFFFFFF);

924 
	`REG_WRITE
(
ah
, 
AR_INTR_SYNC_ENABLE
, 
sync_deÁu…
);

925 
	`REG_WRITE
(
ah
, 
AR_INTR_SYNC_MASK
, 0);

928 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

930 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
)) {

931 
	`REG_WRITE
(
ah
, 
AR_INTR_PRIO_ASYNC_ENABLE
, 0);

932 
	`REG_WRITE
(
ah
, 
AR_INTR_PRIO_ASYNC_MASK
, 0);

933 
	`REG_WRITE
(
ah
, 
AR_INTR_PRIO_SYNC_ENABLE
, 0);

934 
	`REG_WRITE
(
ah
, 
AR_INTR_PRIO_SYNC_MASK
, 0);

936 
	}
}

938 
	$©h9k_hw_£t_sifs_time
(
©h_hw
 *
ah
, 
u32
 
us
)

940 
u32
 
vÆ
 = 
	`©h9k_hw_mac_to_˛ks
(
ah
, 
us
 - 2);

941 
vÆ
 = 
	`mö
(vÆ, (
u32
) 0xFFFF);

942 
	`REG_WRITE
(
ah
, 
AR_D_GBL_IFS_SIFS
, 
vÆ
);

943 
	}
}

945 
	$©h9k_hw_£t¶Ÿtime
(
©h_hw
 *
ah
, 
u32
 
us
)

947 
u32
 
vÆ
 = 
	`©h9k_hw_mac_to_˛ks
(
ah
, 
us
);

948 
vÆ
 = 
	`mö
(vÆ, (
u32
) 0xFFFF);

949 
	`REG_WRITE
(
ah
, 
AR_D_GBL_IFS_SLOT
, 
vÆ
);

950 
	}
}

952 
	$©h9k_hw_£t_ack_timeout
(
©h_hw
 *
ah
, 
u32
 
us
)

954 
u32
 
vÆ
 = 
	`©h9k_hw_mac_to_˛ks
(
ah
, 
us
);

955 
vÆ
 = 
	`mö
(vÆ, (
u32
Ë
	`MS
(0xFFFFFFFF, 
AR_TIME_OUT_ACK
));

956 
	`REG_RMW_FIELD
(
ah
, 
AR_TIME_OUT
, 
AR_TIME_OUT_ACK
, 
vÆ
);

957 
	}
}

959 
	$©h9k_hw_£t_˘s_timeout
(
©h_hw
 *
ah
, 
u32
 
us
)

961 
u32
 
vÆ
 = 
	`©h9k_hw_mac_to_˛ks
(
ah
, 
us
);

962 
vÆ
 = 
	`mö
(vÆ, (
u32
Ë
	`MS
(0xFFFFFFFF, 
AR_TIME_OUT_CTS
));

963 
	`REG_RMW_FIELD
(
ah
, 
AR_TIME_OUT
, 
AR_TIME_OUT_CTS
, 
vÆ
);

964 
	}
}

966 
boﬁ
 
	$©h9k_hw_£t_globÆ_txtimeout
(
©h_hw
 *
ah
, 
u32
 
tu
)

968 i‡(
tu
 > 0xFFFF) {

969 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
XMIT
, "bad globalÅxÅimeout %u\n",

970 
tu
);

971 
ah
->
globÆtxtimeout
 = (
u32
) -1;

972  
Ál£
;

974 
	`REG_RMW_FIELD
(
ah
, 
AR_GTXTO
, 
AR_GTXTO_TIMEOUT_LIMIT
, 
tu
);

975 
ah
->
globÆtxtimeout
 = 
tu
;

976  
åue
;

978 
	}
}

980 
	$©h9k_hw_öô_globÆ_£âögs
(
©h_hw
 *
ah
)

982 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

983 c⁄° 
©h9k_ch™√l
 *
ch™
 = 
ah
->
curch™
;

984 
acktimeout
, 
˘°imeout
, 
ack_off£t
 = 0;

985 
¶Ÿtime
;

986 
sif°ime
;

987 
rx_œt
 = 0, 
tx_œt
 = 0, 
eifs
 = 0;

988 
u32
 
ªg
;

990 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
RESET
, "ah->misc_mode 0x%x\n",

991 
ah
->
misc_mode
);

993 i‡(!
ch™
)

996 i‡(
ah
->
misc_mode
 != 0)

997 
	`REG_SET_BIT
(
ah
, 
AR_PCU_MISC
,áh->
misc_mode
);

999 i‡(
	`IS_CHAN_A_FAST_CLOCK
(
ah
, 
ch™
))

1000 
rx_œt
 = 41;

1002 
rx_œt
 = 37;

1003 
tx_œt
 = 54;

1005 i‡(
	`IS_CHAN_5GHZ
(
ch™
))

1006 
sif°ime
 = 16;

1008 
sif°ime
 = 10;

1010 i‡(
	`IS_CHAN_HALF_RATE
(
ch™
)) {

1011 
eifs
 = 175;

1012 
rx_œt
 *= 2;

1013 
tx_œt
 *= 2;

1014 i‡(
	`IS_CHAN_A_FAST_CLOCK
(
ah
, 
ch™
))

1015 
tx_œt
 += 11;

1017 
sif°ime
 = 32;

1018 
ack_off£t
 = 16;

1019 
¶Ÿtime
 = 13;

1020 } i‡(
	`IS_CHAN_QUARTER_RATE
(
ch™
)) {

1021 
eifs
 = 340;

1022 
rx_œt
 = (rx_lat * 4) - 1;

1023 
tx_œt
 *= 4;

1024 i‡(
	`IS_CHAN_A_FAST_CLOCK
(
ah
, 
ch™
))

1025 
tx_œt
 += 22;

1027 
sif°ime
 = 64;

1028 
ack_off£t
 = 32;

1029 
¶Ÿtime
 = 21;

1031 i‡(
	`AR_SREV_9287
(
ah
Ë&& 
	`AR_SREV_9287_13_OR_LATER
(ah)) {

1032 
eifs
 = 
AR_D_GBL_IFS_EIFS_ASYNC_FIFO
;

1033 
ªg
 = 
AR_USEC_ASYNC_FIFO
;

1035 
eifs
 = 
	`REG_READ
(
ah
, 
AR_D_GBL_IFS_EIFS
)/

1036 
comm⁄
->
˛ockøã
;

1037 
ªg
 = 
	`REG_READ
(
ah
, 
AR_USEC
);

1039 
rx_œt
 = 
	`MS
(
ªg
, 
AR_USEC_RX_LAT
);

1040 
tx_œt
 = 
	`MS
(
ªg
, 
AR_USEC_TX_LAT
);

1042 
¶Ÿtime
 = 
ah
->slottime;

1046 
¶Ÿtime
 +3 * 
ah
->
covîage_˛ass
;

1047 
acktimeout
 = 
¶Ÿtime
 + 
sif°ime
 + 
ack_off£t
;

1048 
˘°imeout
 = 
acktimeout
;

1057 i‡(
	`IS_CHAN_2GHZ
(
ch™
) &&

1058 !
	`IS_CHAN_HALF_RATE
(
ch™
Ë&& !
	`IS_CHAN_QUARTER_RATE
(chan)) {

1059 
acktimeout
 +64 - 
sif°ime
 - 
ah
->
¶Ÿtime
;

1060 
˘°imeout
 +48 - 
sif°ime
 - 
ah
->
¶Ÿtime
;

1063 
	`©h9k_hw_£t_sifs_time
(
ah
, 
sif°ime
);

1064 
	`©h9k_hw_£t¶Ÿtime
(
ah
, 
¶Ÿtime
);

1065 
	`©h9k_hw_£t_ack_timeout
(
ah
, 
acktimeout
);

1066 
	`©h9k_hw_£t_˘s_timeout
(
ah
, 
˘°imeout
);

1067 i‡(
ah
->
globÆtxtimeout
 !(
u32
) -1)

1068 
	`©h9k_hw_£t_globÆ_txtimeout
(
ah
,áh->
globÆtxtimeout
);

1070 
	`REG_WRITE
(
ah
, 
AR_D_GBL_IFS_EIFS
, 
	`©h9k_hw_mac_to_˛ks
◊h, 
eifs
));

1071 
	`REG_RMW
(
ah
, 
AR_USEC
,

1072 (
comm⁄
->
˛ockøã
 - 1) |

1073 
	`SM
(
rx_œt
, 
AR_USEC_RX_LAT
) |

1074 
	`SM
(
tx_œt
, 
AR_USEC_TX_LAT
),

1075 
AR_USEC_TX_LAT
 | 
AR_USEC_RX_LAT
 | 
AR_USEC_USEC
);

1077 
	}
}

1078 
EXPORT_SYMBOL
(
©h9k_hw_öô_globÆ_£âögs
);

1080 
	$©h9k_hw_deöô
(
©h_hw
 *
ah
)

1082 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1084 i‡(
comm⁄
->
°©e
 < 
ATH_HW_INITIALIZED
)

1087 
	`©h9k_hw_£çowî
(
ah
, 
ATH9K_PM_FULL_SLEEP
);

1088 
	}
}

1089 
EXPORT_SYMBOL
(
©h9k_hw_deöô
);

1095 
u32
 
	$©h9k_ªgd_gë_˘l
(
©h_ªguœt‹y
 *
ªg
, 
©h9k_ch™√l
 *
ch™
)

1097 
u32
 
˘l
 = 
	`©h_ªgd_gë_b™d_˘l
(
ªg
, 
ch™
->ch™->
b™d
);

1099 i‡(
	`IS_CHAN_2GHZ
(
ch™
))

1100 
˘l
 |
CTL_11G
;

1102 
˘l
 |
CTL_11A
;

1104  
˘l
;

1105 
	}
}

1111 
ölöe
 
	$©h9k_hw_£t_dma
(
©h_hw
 *
ah
)

1113 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1114 
txbuf_size
;

1116 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

1121 i‡(!
	`AR_SREV_9300_20_OR_LATER
(
ah
))

1122 
	`REG_SET_BIT
(
ah
, 
AR_AHB_MODE
, 
AR_AHB_PREFETCH_RD_EN
);

1127 
	`REG_RMW
(
ah
, 
AR_TXCFG
, 
AR_TXCFG_DMASZ_128B
, 
AR_TXCFG_DMASZ_MASK
);

1129 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

1136 i‡(!
	`AR_SREV_9300_20_OR_LATER
(
ah
))

1137 
	`REG_RMW_FIELD
(
ah
, 
AR_TXCFG
, 
AR_FTRIG
,áh->
tx_åig_Àvñ
);

1139 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

1144 
	`REG_RMW
(
ah
, 
AR_RXCFG
, 
AR_RXCFG_DMASZ_128B
, 
AR_RXCFG_DMASZ_MASK
);

1149 
	`REG_WRITE
(
ah
, 
AR_RXFIFO_CFG
, 0x200);

1151 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
)) {

1152 
	`REG_RMW_FIELD
(
ah
, 
AR_RXBP_THRESH
, 
AR_RXBP_THRESH_HP
, 0x1);

1153 
	`REG_RMW_FIELD
(
ah
, 
AR_RXBP_THRESH
, 
AR_RXBP_THRESH_LP
, 0x1);

1155 
	`©h9k_hw_£t_rx_bufsize
(
ah
, 
comm⁄
->
rx_bufsize
 -

1156 
ah
->
ˇps
.
rx_°©us_Àn
);

1163 i‡(
	`AR_SREV_9285
(
ah
)) {

1168 
txbuf_size
 = 
AR_9285_PCU_TXBUF_CTRL_USABLE_SIZE
;

1169 } i‡(
	`AR_SREV_9340_13_OR_LATER
(
ah
)) {

1171 
txbuf_size
 = 
AR_9340_PCU_TXBUF_CTRL_USABLE_SIZE
;

1173 
txbuf_size
 = 
AR_PCU_TXBUF_CTRL_USABLE_SIZE
;

1176 i‡(!
	`AR_SREV_9271
(
ah
))

1177 
	`REG_WRITE
(
ah
, 
AR_PCU_TXBUF_CTRL
, 
txbuf_size
);

1179 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

1181 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
))

1182 
	`©h9k_hw_ª£t_tx°©us_rög
(
ah
);

1183 
	}
}

1185 
	$©h9k_hw_£t_›î©ög_mode
(
©h_hw
 *
ah
, 
›mode
)

1187 
u32
 
mask
 = 
AR_STA_ID1_STA_AP
 | 
AR_STA_ID1_ADHOC
;

1188 
u32
 
£t
 = 
AR_STA_ID1_KSRCH_MODE
;

1190 
›mode
) {

1191 
NL80211_IFTYPE_ADHOC
:

1192 
£t
 |
AR_STA_ID1_ADHOC
;

1193 
	`REG_SET_BIT
(
ah
, 
AR_CFG
, 
AR_CFG_AP_ADHOC_INDICATION
);

1195 
NL80211_IFTYPE_MESH_POINT
:

1196 
NL80211_IFTYPE_AP
:

1197 
£t
 |
AR_STA_ID1_STA_AP
;

1199 
NL80211_IFTYPE_STATION
:

1200 
	`REG_CLR_BIT
(
ah
, 
AR_CFG
, 
AR_CFG_AP_ADHOC_INDICATION
);

1203 i‡(!
ah
->
is_m⁄ô‹ög
)

1204 
£t
 = 0;

1207 
	`REG_RMW
(
ah
, 
AR_STA_ID1
, 
£t
, 
mask
);

1208 
	}
}

1210 
	$©h9k_hw_gë_dñè_¶›e_vÆs
(
©h_hw
 *
ah
, 
u32
 
c€f_sˇÀd
,

1211 
u32
 *
c€f_m™tisß
, u32 *
c€f_exp⁄ít
)

1213 
u32
 
c€f_exp
, 
c€f_m™
;

1215 
c€f_exp
 = 31; coef_exp > 0; coef_exp--)

1216 i‡((
c€f_sˇÀd
 >> 
c€f_exp
) & 0x1)

1219 
c€f_exp
 = 14 - (c€f_ex∞- 
COEF_SCALE_S
);

1221 
c€f_m™
 = 
c€f_sˇÀd
 + (1 << (
COEF_SCALE_S
 - 
c€f_exp
 - 1));

1223 *
c€f_m™tisß
 = 
c€f_m™
 >> (
COEF_SCALE_S
 - 
c€f_exp
);

1224 *
c€f_exp⁄ít
 = 
c€f_exp
 - 16;

1225 
	}
}

1232 
boﬁ
 
	$©h9k_hw_¨9330_ª£t_w¨
(
©h_hw
 *
ah
, 
ty≥
)

1234 
i
, 
≈íd
 = 0;

1236 
i
 = 0; i < 
AR_NUM_QCU
; i++) {

1237 
≈íd
 = 
	`©h9k_hw_numtx≥ndög
(
ah
, 
i
);

1238 i‡(
≈íd
)

1242 i‡(
ah
->
exã∫Æ_ª£t
 &&

1243 (
≈íd
 || 
ty≥
 =
ATH9K_RESET_COLD
)) {

1244 
ª£t_îr
 = 0;

1246 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
RESET
,

1249 
ª£t_îr
 = 
ah
->
	`exã∫Æ_ª£t
();

1250 i‡(
ª£t_îr
) {

1251 
	`©h_îr
(
	`©h9k_hw_comm⁄
(
ah
),

1253 
ª£t_îr
);

1254  
Ál£
;

1257 
	`REG_WRITE
(
ah
, 
AR_RTC_RESET
, 1);

1260  
åue
;

1261 
	}
}

1263 
boﬁ
 
	$©h9k_hw_£t_ª£t
(
©h_hw
 *
ah
, 
ty≥
)

1265 
u32
 
r°_Êags
;

1266 
u32
 
tmpReg
;

1268 i‡(
	`AR_SREV_9100
(
ah
)) {

1269 
	`REG_RMW_FIELD
(
ah
, 
AR_RTC_DERIVED_CLK
,

1270 
AR_RTC_DERIVED_CLK_PERIOD
, 1);

1271 ()
	`REG_READ
(
ah
, 
AR_RTC_DERIVED_CLK
);

1274 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

1276 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
)) {

1277 
	`REG_WRITE
(
ah
, 
AR_WA
,áh->
WARegVÆ
);

1278 
	`udñay
(10);

1281 
	`REG_WRITE
(
ah
, 
AR_RTC_FORCE_WAKE
, 
AR_RTC_FORCE_WAKE_EN
 |

1282 
AR_RTC_FORCE_WAKE_ON_INT
);

1284 i‡(
	`AR_SREV_9100
(
ah
)) {

1285 
r°_Êags
 = 
AR_RTC_RC_MAC_WARM
 | 
AR_RTC_RC_MAC_COLD
 |

1286 
AR_RTC_RC_COLD_RESET
 | 
AR_RTC_RC_WARM_RESET
;

1288 
tmpReg
 = 
	`REG_READ
(
ah
, 
AR_INTR_SYNC_CAUSE
);

1289 i‡(
	`AR_SREV_9340
(
ah
))

1290 
tmpReg
 &
AR9340_INTR_SYNC_LOCAL_TIMEOUT
;

1292 
tmpReg
 &
AR_INTR_SYNC_LOCAL_TIMEOUT
 |

1293 
AR_INTR_SYNC_RADM_CPL_TIMEOUT
;

1295 i‡(
tmpReg
) {

1296 
u32
 
vÆ
;

1297 
	`REG_WRITE
(
ah
, 
AR_INTR_SYNC_ENABLE
, 0);

1299 
vÆ
 = 
AR_RC_HOSTIF
;

1300 i‡(!
	`AR_SREV_9300_20_OR_LATER
(
ah
))

1301 
vÆ
 |
AR_RC_AHB
;

1302 
	`REG_WRITE
(
ah
, 
AR_RC
, 
vÆ
);

1304 } i‡(!
	`AR_SREV_9300_20_OR_LATER
(
ah
))

1305 
	`REG_WRITE
(
ah
, 
AR_RC
, 
AR_RC_AHB
);

1307 
r°_Êags
 = 
AR_RTC_RC_MAC_WARM
;

1308 i‡(
ty≥
 =
ATH9K_RESET_COLD
)

1309 
r°_Êags
 |
AR_RTC_RC_MAC_COLD
;

1312 i‡(
	`AR_SREV_9330
(
ah
)) {

1313 i‡(!
	`©h9k_hw_¨9330_ª£t_w¨
(
ah
, 
ty≥
))

1314  
Ál£
;

1317 i‡(
	`©h9k_hw_mci_is_íabÀd
(
ah
))

1318 
	`¨9003_mci_check_gpm_off£t
(
ah
);

1320 
	`REG_WRITE
(
ah
, 
AR_RTC_RC
, 
r°_Êags
);

1322 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

1324 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
))

1325 
	`udñay
(50);

1326 i‡(
	`AR_SREV_9100
(
ah
))

1327 
	`mdñay
(10);

1329 
	`udñay
(100);

1331 
	`REG_WRITE
(
ah
, 
AR_RTC_RC
, 0);

1332 i‡(!
	`©h9k_hw_waô
(
ah
, 
AR_RTC_RC
, 
AR_RTC_RC_M
, 0, 
AH_WAIT_TIMEOUT
)) {

1333 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
RESET
, "RTC stuck in MACÑeset\n");

1334  
Ál£
;

1337 i‡(!
	`AR_SREV_9100
(
ah
))

1338 
	`REG_WRITE
(
ah
, 
AR_RC
, 0);

1340 i‡(
	`AR_SREV_9100
(
ah
))

1341 
	`udñay
(50);

1343 i‡(
	`AR_SREV_9330
(
ah
Ë|| 
	`AR_SREV_9340
(ah))

1344 
	`©h9k_hw_dißbÀ_∂l_lock_dëe˘
(
ah
);

1346  
åue
;

1347 
	}
}

1349 
boﬁ
 
	$©h9k_hw_£t_ª£t_powî_⁄
(
©h_hw
 *
ah
)

1351 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

1353 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
)) {

1354 
	`REG_WRITE
(
ah
, 
AR_WA
,áh->
WARegVÆ
);

1355 
	`udñay
(10);

1358 
	`REG_WRITE
(
ah
, 
AR_RTC_FORCE_WAKE
, 
AR_RTC_FORCE_WAKE_EN
 |

1359 
AR_RTC_FORCE_WAKE_ON_INT
);

1361 i‡(!
	`AR_SREV_9100
(
ah
Ë&& !
	`AR_SREV_9300_20_OR_LATER
(ah))

1362 
	`REG_WRITE
(
ah
, 
AR_RC
, 
AR_RC_AHB
);

1364 
	`REG_WRITE
(
ah
, 
AR_RTC_RESET
, 0);

1366 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

1368 
	`udñay
(2);

1370 i‡(!
	`AR_SREV_9100
(
ah
Ë&& !
	`AR_SREV_9300_20_OR_LATER
(ah))

1371 
	`REG_WRITE
(
ah
, 
AR_RC
, 0);

1373 
	`REG_WRITE
(
ah
, 
AR_RTC_RESET
, 1);

1375 i‡(!
	`©h9k_hw_waô
(
ah
,

1376 
AR_RTC_STATUS
,

1377 
AR_RTC_STATUS_M
,

1378 
AR_RTC_STATUS_ON
,

1379 
AH_WAIT_TIMEOUT
)) {

1380 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
RESET
, "RTCÇot waking up\n");

1381  
Ál£
;

1384  
	`©h9k_hw_£t_ª£t
(
ah
, 
ATH9K_RESET_WARM
);

1385 
	}
}

1387 
boﬁ
 
	$©h9k_hw_£t_ª£t_ªg
(
©h_hw
 *
ah
, 
u32
 
ty≥
)

1389 
boﬁ
 
ªt
 = 
Ál£
;

1391 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
)) {

1392 
	`REG_WRITE
(
ah
, 
AR_WA
,áh->
WARegVÆ
);

1393 
	`udñay
(10);

1396 
	`REG_WRITE
(
ah
, 
AR_RTC_FORCE_WAKE
,

1397 
AR_RTC_FORCE_WAKE_EN
 | 
AR_RTC_FORCE_WAKE_ON_INT
);

1399 i‡(!
ah
->
ª£t_powî_⁄
)

1400 
ty≥
 = 
ATH9K_RESET_POWER_ON
;

1402 
ty≥
) {

1403 
ATH9K_RESET_POWER_ON
:

1404 
ªt
 = 
	`©h9k_hw_£t_ª£t_powî_⁄
(
ah
);

1405 i‡(
ªt
)

1406 
ah
->
ª£t_powî_⁄
 = 
åue
;

1408 
ATH9K_RESET_WARM
:

1409 
ATH9K_RESET_COLD
:

1410 
ªt
 = 
	`©h9k_hw_£t_ª£t
(
ah
, 
ty≥
);

1416  
ªt
;

1417 
	}
}

1419 
boﬁ
 
	$©h9k_hw_chù_ª£t
(
©h_hw
 *
ah
,

1420 
©h9k_ch™√l
 *
ch™
)

1422 
ª£t_ty≥
 = 
ATH9K_RESET_WARM
;

1424 i‡(
	`AR_SREV_9280
(
ah
)) {

1425 i‡(
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_OL_PWRCTRL
))

1426 
ª£t_ty≥
 = 
ATH9K_RESET_POWER_ON
;

1428 
ª£t_ty≥
 = 
ATH9K_RESET_COLD
;

1429 } i‡(
ah
->
chù_fuŒ¶ìp
 || 
	`REG_READ
◊h, 
AR_Q_TXE
) ||

1430 (
	`REG_READ
(
ah
, 
AR_CR
Ë& 
AR_CR_RXE
))

1431 
ª£t_ty≥
 = 
ATH9K_RESET_COLD
;

1433 i‡(!
	`©h9k_hw_£t_ª£t_ªg
(
ah
, 
ª£t_ty≥
))

1434  
Ál£
;

1436 i‡(!
	`©h9k_hw_£çowî
(
ah
, 
ATH9K_PM_AWAKE
))

1437  
Ál£
;

1439 
ah
->
chù_fuŒ¶ìp
 = 
Ál£
;

1441 i‡(
	`AR_SREV_9330
(
ah
))

1442 
	`¨9003_hw_öã∫Æ_ªguœt‹_≠∂y
(
ah
);

1443 
	`©h9k_hw_öô_∂l
(
ah
, 
ch™
);

1445 i‡(
	`AR_SREV_9330
(
ah
Ë|| 
	`AR_SREV_9340
(ah))

1446 
	`©h9k_hw_dißbÀ_∂l_lock_dëe˘
(
ah
);

1448  
åue
;

1449 
	}
}

1451 
boﬁ
 
	$©h9k_hw_ch™√l_ch™ge
(
©h_hw
 *
ah
,

1452 
©h9k_ch™√l
 *
ch™
)

1454 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1455 
©h9k_hw_ˇ∑bûôõs
 *
pC≠
 = &
ah
->
ˇps
;

1456 
boﬁ
 
b™d_swôch
 = 
Ál£
, 
mode_diff
 = false;

1457 
u8
 
öi_ªlﬂded
 = 0;

1458 
u32
 
qnum
;

1459 
r
;

1461 i‡(
pC≠
->
hw_ˇps
 & 
ATH9K_HW_CAP_FCC_BAND_SWITCH
) {

1462 
u32
 
Êags_diff
 = 
ch™
->
ch™√lFœgs
 ^ 
ah
->
curch™
->channelFlags;

1463 
b™d_swôch
 = !!(
Êags_diff
 & 
CHANNEL_5GHZ
);

1464 
mode_diff
 = !!(
Êags_diff
 & ~
CHANNEL_HT
);

1467 
qnum
 = 0; qnum < 
AR_NUM_QCU
; qnum++) {

1468 i‡(
	`©h9k_hw_numtx≥ndög
(
ah
, 
qnum
)) {

1469 
	`©h_dbg
(
comm⁄
, 
QUEUE
,

1470 "Tønsmô føme†≥ndög o¿queuê%d\n", 
qnum
);

1471  
Ál£
;

1475 i‡(!
	`©h9k_hw_rfbus_ªq
(
ah
)) {

1476 
	`©h_îr
(
comm⁄
, "CouldÇot kill baseband RX\n");

1477  
Ál£
;

1480 i‡(
b™d_swôch
 || 
mode_diff
) {

1481 
	`©h9k_hw_m¨k_phy_öa˘ive
(
ah
);

1482 
	`udñay
(5);

1484 i‡(
b™d_swôch
)

1485 
	`©h9k_hw_öô_∂l
(
ah
, 
ch™
);

1487 i‡(
	`©h9k_hw_Á°_ch™_ch™ge
(
ah
, 
ch™
, &
öi_ªlﬂded
)) {

1488 
	`©h_îr
(
comm⁄
, "FailedÅo do fast channel change\n");

1489  
Ál£
;

1493 
	`©h9k_hw_£t_ch™√l_ªgs
(
ah
, 
ch™
);

1495 
r
 = 
	`©h9k_hw_rf_£t_‰eq
(
ah
, 
ch™
);

1496 i‡(
r
) {

1497 
	`©h_îr
(
comm⁄
, "FailedÅo set channel\n");

1498  
Ál£
;

1500 
	`©h9k_hw_£t_˛ockøã
(
ah
);

1501 
	`©h9k_hw_≠∂y_txpowî
(
ah
, 
ch™
, 
Ál£
);

1503 
	`©h9k_hw_£t_dñè_¶›e
(
ah
, 
ch™
);

1504 
	`©h9k_hw_•ur_môig©e_‰eq
(
ah
, 
ch™
);

1506 i‡(
b™d_swôch
 || 
öi_ªlﬂded
)

1507 
ah
->
ìp_›s
->
	`£t_bﬂrd_vÆues
◊h, 
ch™
);

1509 
	`©h9k_hw_öô_bb
(
ah
, 
ch™
);

1510 
	`©h9k_hw_rfbus_d⁄e
(
ah
);

1512 i‡(
b™d_swôch
 || 
öi_ªlﬂded
) {

1513 
ah
->
ah_Êags
 |
AH_FASTCC
;

1514 
	`©h9k_hw_öô_ˇl
(
ah
, 
ch™
);

1515 
ah
->
ah_Êags
 &~
AH_FASTCC
;

1518  
åue
;

1519 
	}
}

1521 
	$©h9k_hw_≠∂y_gpio_ovîride
(
©h_hw
 *
ah
)

1523 
u32
 
gpio_mask
 = 
ah
->gpio_mask;

1524 
i
;

1526 
i
 = 0; 
gpio_mask
; i++, gpio_mask >>= 1) {

1527 i‡(!(
gpio_mask
 & 1))

1530 
	`©h9k_hw_cfg_ouçut
(
ah
, 
i
, 
AR_GPIO_OUTPUT_MUX_AS_OUTPUT
);

1531 
	`©h9k_hw_£t_gpio
(
ah
, 
i
, !!◊h->
gpio_vÆ
 & 
	`BIT
(i)));

1533 
	}
}

1535 
	$©h9k_hw_check_«v
(
©h_hw
 *
ah
)

1537 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1538 
u32
 
vÆ
;

1540 
vÆ
 = 
	`REG_READ
(
ah
, 
AR_NAV
);

1541 i‡(
vÆ
 != 0xdeadbeef && val > 0x7fff) {

1542 
	`©h_dbg
(
comm⁄
, 
BSTUCK
, "Abn‹mÆ NAV: 0x%x\n", 
vÆ
);

1543 
	`REG_WRITE
(
ah
, 
AR_NAV
, 0);

1545 
	}
}

1546 
EXPORT_SYMBOL
(
©h9k_hw_check_«v
);

1548 
boﬁ
 
	$©h9k_hw_check_Æive
(
©h_hw
 *
ah
)

1550 
cou¡
 = 50;

1551 
u32
 
ªg
, 
œ°_vÆ
;

1553 i‡(
	`AR_SREV_9300
(
ah
))

1554  !
	`©h9k_hw_dëe˘_mac_h™g
(
ah
);

1556 i‡(
	`AR_SREV_9285_12_OR_LATER
(
ah
))

1557  
åue
;

1559 
œ°_vÆ
 = 
	`REG_READ
(
ah
, 
AR_OBS_BUS_1
);

1561 
ªg
 = 
	`REG_READ
(
ah
, 
AR_OBS_BUS_1
);

1562 i‡(
ªg
 !
œ°_vÆ
)

1563  
åue
;

1565 
	`udñay
(1);

1566 
œ°_vÆ
 = 
ªg
;

1567 i‡((
ªg
 & 0x7E7FFFEF) == 0x00702400)

1570 
ªg
 & 0x7E000B00) {

1576  
åue
;

1578 } 
cou¡
-- > 0);

1580  
Ál£
;

1581 
	}
}

1582 
EXPORT_SYMBOL
(
©h9k_hw_check_Æive
);

1584 
	$©h9k_hw_öô_mÂ
(
©h_hw
 *
ah
)

1587 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
)) {

1590 
	`REG_RMW_FIELD
(
ah
, 
AR_AES_MUTE_MASK1
, 
AR_AES_MUTE_MASK1_FC_MGMT
,

1592 
ah
->
sw_mgmt_¸y±o
 = 
Ál£
;

1593 } i‡(
	`AR_SREV_9160_10_OR_LATER
(
ah
)) {

1595 
	`REG_CLR_BIT
(
ah
, 
AR_PCU_MISC_MODE2
,

1596 
AR_PCU_MISC_MODE2_MGMT_CRYPTO_ENABLE
);

1597 
	`REG_SET_BIT
(
ah
, 
AR_PCU_MISC_MODE2
,

1598 
AR_PCU_MISC_MODE2_NO_CRYPTO_FOR_NON_DATA_PKT
);

1599 
ah
->
sw_mgmt_¸y±o
 = 
åue
;

1601 
ah
->
sw_mgmt_¸y±o
 = 
åue
;

1603 
	}
}

1605 
	$©h9k_hw_ª£t_›mode
(
©h_hw
 *
ah
,

1606 
u32
 
macSèId1
, u32 
ßveDefA¡í«
)

1608 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1610 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

1612 
	`REG_RMW
(
ah
, 
AR_STA_ID1
, 
macSèId1


1613 | 
AR_STA_ID1_RTS_USE_DEF


1614 | 
ah
->
°a_id1_deÁu…s
,

1615 ~
AR_STA_ID1_SADH_MASK
);

1616 
	`©h_hw_£tbssidmask
(
comm⁄
);

1617 
	`REG_WRITE
(
ah
, 
AR_DEF_ANTENNA
, 
ßveDefA¡í«
);

1618 
	`©h9k_hw_wrôe_associd
(
ah
);

1619 
	`REG_WRITE
(
ah
, 
AR_ISR
, ~0);

1620 
	`REG_WRITE
(
ah
, 
AR_RSSI_THR
, 
INIT_RSSI_THR
);

1622 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

1624 
	`©h9k_hw_£t_›î©ög_mode
(
ah
,áh->
›mode
);

1625 
	}
}

1627 
	$©h9k_hw_öô_queues
(
©h_hw
 *
ah
)

1629 
i
;

1631 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

1633 
i
 = 0; i < 
AR_NUM_DCU
; i++)

1634 
	`REG_WRITE
(
ah
, 
	`AR_DQCUMASK
(
i
), 1 << i);

1636 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

1638 
ah
->
öå_txqs
 = 0;

1639 
i
 = 0; i < 
ATH9K_NUM_TX_QUEUES
; i++)

1640 
	`©h9k_hw_ª£âxqueue
(
ah
, 
i
);

1641 
	}
}

1646 
	$©h9k_hw_öô_desc
(
©h_hw
 *
ah
)

1648 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1650 i‡(
	`AR_SREV_9100
(
ah
)) {

1651 
u32
 
mask
;

1652 
mask
 = 
	`REG_READ
(
ah
, 
AR_CFG
);

1653 i‡(
mask
 & (
AR_CFG_SWRB
 | 
AR_CFG_SWTB
 | 
AR_CFG_SWRG
)) {

1654 
	`©h_dbg
(
comm⁄
, 
RESET
, "CFG Byte Swap Set 0x%x\n",

1655 
mask
);

1657 
mask
 = 
INIT_CONFIG_STATUS
 | 
AR_CFG_SWRB
 | 
AR_CFG_SWTB
;

1658 
	`REG_WRITE
(
ah
, 
AR_CFG
, 
mask
);

1659 
	`©h_dbg
(
comm⁄
, 
RESET
, "Setting CFG 0x%x\n",

1660 
	`REG_READ
(
ah
, 
AR_CFG
));

1663 i‡(
comm⁄
->
bus_›s
->
©h_bus_ty≥
 =
ATH_USB
) {

1665 i‡(
	`AR_SREV_9271
(
ah
))

1666 
	`REG_WRITE
(
ah
, 
AR_CFG
, 
AR_CFG_SWRB
 | 
AR_CFG_SWTB
);

1668 
	`REG_WRITE
(
ah
, 
AR_CFG
, 
AR_CFG_SWTD
 | 
AR_CFG_SWRD
);

1670 #ifde‡
__BIG_ENDIAN


1671 i‡(
	`AR_SREV_9330
(
ah
Ë|| 
	`AR_SREV_9340
(ah) ||

1672 
	`AR_SREV_9550
(
ah
Ë|| 
	`AR_SREV_9531
(ah))

1673 
	`REG_RMW
(
ah
, 
AR_CFG
, 
AR_CFG_SWRB
 | 
AR_CFG_SWTB
, 0);

1675 
	`REG_WRITE
(
ah
, 
AR_CFG
, 
AR_CFG_SWTD
 | 
AR_CFG_SWRD
);

1678 
	}
}

1684 
	$©h9k_hw_do_Á°cc
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
)

1686 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1687 
©h9k_hw_ˇ∑bûôõs
 *
pC≠
 = &
ah
->
ˇps
;

1688 
ªt
;

1690 i‡(
	`AR_SREV_9280
(
ah
Ë&& 
comm⁄
->
bus_›s
->
©h_bus_ty≥
 =
ATH_PCI
)

1691 
Áû
;

1693 i‡(
ah
->
chù_fuŒ¶ìp
)

1694 
Áû
;

1696 i‡(!
ah
->
curch™
)

1697 
Áû
;

1699 i‡(
ch™
->
ch™√l
 =
ah
->
curch™
->channel)

1700 
Áû
;

1702 i‡((
ah
->
curch™
->
ch™√lFœgs
 | 
ch™
->channelFlags) &

1703 (
CHANNEL_HALF
 | 
CHANNEL_QUARTER
))

1704 
Áû
;

1709 i‡(!(
pC≠
->
hw_ˇps
 & 
ATH9K_HW_CAP_FCC_BAND_SWITCH
) &&

1710 ((
ch™
->
ch™√lFœgs
 ^ 
ah
->
curch™
->ch™√lFœgsË& ~
CHANNEL_HT
))

1711 
Áû
;

1713 i‡(!
	`©h9k_hw_check_Æive
(
ah
))

1714 
Áû
;

1720 i‡(
	`AR_SREV_9462
(
ah
Ë&& (ah->
ˇld©a
 &&

1721 (!
	`ã°_bô
(
TXIQCAL_DONE
, &
ah
->
ˇld©a
->
ˇl_Êags
) ||

1722 !
	`ã°_bô
(
TXCLCAL_DONE
, &
ah
->
ˇld©a
->
ˇl_Êags
) ||

1723 !
	`ã°_bô
(
RTT_DONE
, &
ah
->
ˇld©a
->
ˇl_Êags
))))

1724 
Áû
;

1726 
	`©h_dbg
(
comm⁄
, 
RESET
, "FastChannelChange for %d -> %d\n",

1727 
ah
->
curch™
->
ch™√l
, 
ch™
->channel);

1729 
ªt
 = 
	`©h9k_hw_ch™√l_ch™ge
(
ah
, 
ch™
);

1730 i‡(!
ªt
)

1731 
Áû
;

1733 i‡(
	`©h9k_hw_mci_is_íabÀd
(
ah
))

1734 
	`¨9003_mci_2g5g_swôch
(
ah
, 
Ál£
);

1736 
	`©h9k_hw_lﬂdnf
(
ah
,áh->
curch™
);

1737 
	`©h9k_hw_°¨t_nfˇl
(
ah
, 
åue
);

1739 i‡(
	`AR_SREV_9271
(
ah
))

1740 
	`¨9002_hw_lﬂd_™i_ªg
(
ah
, 
ch™
);

1742 i‡(
	`AR_SREV_9330
(
ah
Ë|| 
	`AR_SREV_9340
(ah))

1743 
	`©h9k_hw_dißbÀ_∂l_lock_dëe˘
(
ah
);

1746 
Áû
:

1747 i‡(
	`AR_SREV_9330
(
ah
Ë|| 
	`AR_SREV_9340
(ah))

1748 
	`©h9k_hw_dißbÀ_∂l_lock_dëe˘
(
ah
);

1750  -
EINVAL
;

1751 
	}
}

1753 
	$©h9k_hw_upd©e_düg
(
©h_hw
 *
ah
)

1755 i‡(
	`ã°_bô
(
ATH_DIAG_DISABLE_RX
, &
ah
->
düg
))

1756 
	`REG_SET_BIT
(
ah
, 
AR_DIAG_SW
, 
AR_DIAG_RX_DIS
);

1758 
	`REG_CLR_BIT
(
ah
, 
AR_DIAG_SW
, 
AR_DIAG_RX_DIS
);

1760 i‡(
	`ã°_bô
(
ATH_DIAG_DISABLE_TX
, &
ah
->
düg
))

1761 
	`REG_SET_BIT
(
ah
, 
AR_DIAG_SW
, 
AR_DIAG_LOOP_BACK
);

1763 
	`REG_CLR_BIT
(
ah
, 
AR_DIAG_SW
, 
AR_DIAG_LOOP_BACK
);

1764 
	}
}

1765 
EXPORT_SYMBOL
(
©h9k_hw_upd©e_düg
);

1767 
	$©h9k_hw_ª£t
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
,

1768 
©h9k_hw_ˇl_d©a
 *
ˇld©a
, 
boﬁ
 
Á°cc
)

1770 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1771 
time•ec
 
ts
;

1772 
u32
 
ßveLedSèã
;

1773 
u32
 
ßveDefA¡í«
;

1774 
u32
 
macSèId1
;

1775 
u64
 
tsf
 = 0;

1776 
s64
 
u£c
 = 0;

1777 
r
;

1778 
boﬁ
 
°¨t_mci_ª£t
 = 
Ál£
;

1779 
boﬁ
 
ßve_fuŒ¶ìp
 = 
ah
->
chù_fuŒ¶ìp
;

1781 i‡(
	`©h9k_hw_mci_is_íabÀd
(
ah
)) {

1782 
°¨t_mci_ª£t
 = 
	`¨9003_mci_°¨t_ª£t
(
ah
, 
ch™
);

1783 i‡(
°¨t_mci_ª£t
)

1787 i‡(!
	`©h9k_hw_£çowî
(
ah
, 
ATH9K_PM_AWAKE
))

1788  -
EIO
;

1790 i‡(
ah
->
curch™
 && !ah->
chù_fuŒ¶ìp
)

1791 
	`©h9k_hw_gënf
(
ah
,áh->
curch™
);

1793 
ah
->
ˇld©a
 = caldata;

1794 i‡(
ˇld©a
 && (
ch™
->
ch™√l
 != caldata->channel ||

1795 
ch™
->
ch™√lFœgs
 !
ˇld©a
->channelFlags)) {

1797 
	`mem£t
(
ˇld©a
, 0, (*caldata));

1798 
	`©h9k_öô_nfˇl_hi°_buf„r
(
ah
, 
ch™
);

1799 } i‡(
ˇld©a
) {

1800 
	`˛ór_bô
(
PAPRD_PACKET_SENT
, &
ˇld©a
->
ˇl_Êags
);

1802 
ah
->
noi£
 = 
	`©h9k_hw_gëch™_noi£
◊h, 
ch™
, ch™->
noi£Êo‹
);

1804 i‡(
Á°cc
) {

1805 
r
 = 
	`©h9k_hw_do_Á°cc
(
ah
, 
ch™
);

1806 i‡(!
r
)

1807  
r
;

1810 i‡(
	`©h9k_hw_mci_is_íabÀd
(
ah
))

1811 
	`¨9003_mci_°›_bt
(
ah
, 
ßve_fuŒ¶ìp
);

1813 
ßveDefA¡í«
 = 
	`REG_READ
(
ah
, 
AR_DEF_ANTENNA
);

1814 i‡(
ßveDefA¡í«
 == 0)

1815 
ßveDefA¡í«
 = 1;

1817 
macSèId1
 = 
	`REG_READ
(
ah
, 
AR_STA_ID1
Ë& 
AR_STA_ID1_BASE_RATE_11B
;

1820 
tsf
 = 
	`©h9k_hw_gëtsf64
(
ah
);

1821 
	`gëøwm⁄Ÿ⁄ic
(&
ts
);

1822 
u£c
 = 
ts
.
tv_£c
 * 1000000ULL +Ås.
tv_n£c
 / 1000;

1824 
ßveLedSèã
 = 
	`REG_READ
(
ah
, 
AR_CFG_LED
) &

1825 (
AR_CFG_LED_ASSOC_CTL
 | 
AR_CFG_LED_MODE_SEL
 |

1826 
AR_CFG_LED_BLINK_THRESH_SEL
 | 
AR_CFG_LED_BLINK_SLOW
);

1828 
	`©h9k_hw_m¨k_phy_öa˘ive
(
ah
);

1830 
ah
->
∑¥d_èbÀ_wrôe_d⁄e
 = 
Ál£
;

1833 i‡(
	`AR_SREV_9271
(
ah
Ë&&áh->
htc_ª£t_öô
) {

1834 
	`REG_WRITE
(
ah
,

1835 
AR9271_RESET_POWER_DOWN_CONTROL
,

1836 
AR9271_RADIO_RF_RST
);

1837 
	`udñay
(50);

1840 i‡(!
	`©h9k_hw_chù_ª£t
(
ah
, 
ch™
)) {

1841 
	`©h_îr
(
comm⁄
, "ChipÑeset failed\n");

1842  -
EINVAL
;

1846 i‡(
	`AR_SREV_9271
(
ah
Ë&&áh->
htc_ª£t_öô
) {

1847 
ah
->
htc_ª£t_öô
 = 
Ál£
;

1848 
	`REG_WRITE
(
ah
,

1849 
AR9271_RESET_POWER_DOWN_CONTROL
,

1850 
AR9271_GATE_MAC_CTL
);

1851 
	`udñay
(50);

1855 
	`gëøwm⁄Ÿ⁄ic
(&
ts
);

1856 
u£c
 = 
ts
.
tv_£c
 * 1000000ULL +Ås.
tv_n£c
 / 1000 - usec;

1857 
	`©h9k_hw_£âsf64
(
ah
, 
tsf
 + 
u£c
);

1859 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
))

1860 
	`REG_SET_BIT
(
ah
, 
AR_GPIO_INPUT_EN_VAL
, 
AR_GPIO_JTAG_DISABLE
);

1862 i‡(!
	`AR_SREV_9300_20_OR_LATER
(
ah
))

1863 
	`¨9002_hw_íabÀ_async_fifo
(
ah
);

1865 
r
 = 
	`©h9k_hw_¥o˚ss_öi
(
ah
, 
ch™
);

1866 i‡(
r
)

1867  
r
;

1869 
	`©h9k_hw_£t_rfmode
(
ah
, 
ch™
);

1871 i‡(
	`©h9k_hw_mci_is_íabÀd
(
ah
))

1872 
	`¨9003_mci_ª£t
(
ah
, 
Ál£
, 
	`IS_CHAN_2GHZ
(
ch™
), 
ßve_fuŒ¶ìp
);

1880 i‡(
	`AR_SREV_9100
(
ah
Ë&& (
	`©h9k_hw_gëtsf64
◊hË< 
tsf
)) {

1881 
tsf
 += 1500;

1882 
	`©h9k_hw_£âsf64
(
ah
, 
tsf
);

1885 
	`©h9k_hw_öô_mÂ
(
ah
);

1887 
	`©h9k_hw_£t_dñè_¶›e
(
ah
, 
ch™
);

1888 
	`©h9k_hw_•ur_môig©e_‰eq
(
ah
, 
ch™
);

1889 
ah
->
ìp_›s
->
	`£t_bﬂrd_vÆues
◊h, 
ch™
);

1891 
	`©h9k_hw_ª£t_›mode
(
ah
, 
macSèId1
, 
ßveDefA¡í«
);

1893 
r
 = 
	`©h9k_hw_rf_£t_‰eq
(
ah
, 
ch™
);

1894 i‡(
r
)

1895  
r
;

1897 
	`©h9k_hw_£t_˛ockøã
(
ah
);

1899 
	`©h9k_hw_öô_queues
(
ah
);

1900 
	`©h9k_hw_öô_öãºu±_masks
(
ah
,áh->
›mode
);

1901 
	`©h9k_hw_™i_ˇche_öi_ªgs
(
ah
);

1902 
	`©h9k_hw_öô_qos
(
ah
);

1904 i‡(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_RFSILENT
)

1905 
	`©h9k_hw_cfg_gpio_öput
(
ah
,áh->
rfkûl_gpio
);

1907 
	`©h9k_hw_öô_globÆ_£âögs
(
ah
);

1909 i‡(
	`AR_SREV_9287
(
ah
Ë&& 
	`AR_SREV_9287_13_OR_LATER
(ah)) {

1910 
	`REG_SET_BIT
(
ah
, 
AR_MAC_PCU_LOGIC_ANALYZER
,

1911 
AR_MAC_PCU_LOGIC_ANALYZER_DISBUG20768
);

1912 
	`REG_RMW_FIELD
(
ah
, 
AR_AHB_MODE
, 
AR_AHB_CUSTOM_BURST_EN
,

1913 
AR_AHB_CUSTOM_BURST_ASYNC_FIFO_VAL
);

1914 
	`REG_SET_BIT
(
ah
, 
AR_PCU_MISC_MODE2
,

1915 
AR_PCU_MISC_MODE2_ENABLE_AGGWEP
);

1918 
	`REG_SET_BIT
(
ah
, 
AR_STA_ID1
, 
AR_STA_ID1_PRESERVE_SEQNUM
);

1920 
	`©h9k_hw_£t_dma
(
ah
);

1922 i‡(!
	`©h9k_hw_mci_is_íabÀd
(
ah
))

1923 
	`REG_WRITE
(
ah
, 
AR_OBS
, 8);

1925 i‡(
ah
->
c⁄fig
.
rx_öå_môig©i⁄
) {

1926 
	`REG_RMW_FIELD
(
ah
, 
AR_RIMT
, 
AR_RIMT_LAST
,áh->
c⁄fig
.
rimt_œ°
);

1927 
	`REG_RMW_FIELD
(
ah
, 
AR_RIMT
, 
AR_RIMT_FIRST
,áh->
c⁄fig
.
rimt_fú°
);

1930 i‡(
ah
->
c⁄fig
.
tx_öå_môig©i⁄
) {

1931 
	`REG_RMW_FIELD
(
ah
, 
AR_TIMT
, 
AR_TIMT_LAST
, 300);

1932 
	`REG_RMW_FIELD
(
ah
, 
AR_TIMT
, 
AR_TIMT_FIRST
, 750);

1935 
	`©h9k_hw_öô_bb
(
ah
, 
ch™
);

1937 i‡(
ˇld©a
) {

1938 
	`˛ór_bô
(
TXIQCAL_DONE
, &
ˇld©a
->
ˇl_Êags
);

1939 
	`˛ór_bô
(
TXCLCAL_DONE
, &
ˇld©a
->
ˇl_Êags
);

1941 i‡(!
	`©h9k_hw_öô_ˇl
(
ah
, 
ch™
))

1942  -
EIO
;

1944 i‡(
	`©h9k_hw_mci_is_íabÀd
(
ah
Ë&& 
	`¨9003_mci_íd_ª£t
◊h, 
ch™
, 
ˇld©a
))

1945  -
EIO
;

1947 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

1949 
	`©h9k_hw_ª°‹e_chaömask
(
ah
);

1950 
	`REG_WRITE
(
ah
, 
AR_CFG_LED
, 
ßveLedSèã
 | 
AR_CFG_SCLK_32KHZ
);

1952 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

1954 
	`©h9k_hw_öô_desc
(
ah
);

1956 i‡(
	`©h9k_hw_btc€x_is_íabÀd
(
ah
))

1957 
	`©h9k_hw_btc€x_íabÀ
(
ah
);

1959 i‡(
	`©h9k_hw_mci_is_íabÀd
(
ah
))

1960 
	`¨9003_mci_check_bt
(
ah
);

1962 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
)) {

1963 
	`©h9k_hw_lﬂdnf
(
ah
, 
ch™
);

1964 
	`©h9k_hw_°¨t_nfˇl
(
ah
, 
åue
);

1967 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
))

1968 
	`¨9003_hw_bb_w©chdog_c⁄fig
(
ah
);

1970 i‡(
ah
->
c⁄fig
.
hw_h™g_checks
 & 
HW_PHYRESTART_CLC_WAR
)

1971 
	`¨9003_hw_dißbÀ_phy_ª°¨t
(
ah
);

1973 
	`©h9k_hw_≠∂y_gpio_ovîride
(
ah
);

1974 
	`©h9k_hw_upd©e_düg
(
ah
);

1976 i‡(
	`AR_SREV_9565
(
ah
Ë&& 
comm⁄
->
bt_™t_divîsôy
)

1977 
	`REG_SET_BIT
(
ah
, 
AR_BTCOEX_WL_LNADIV
, 
AR_BTCOEX_WL_LNADIV_FORCE_ON
);

1979 i‡(
	`AR_SREV_9330
(
ah
Ë|| 
	`AR_SREV_9340
(ah))

1980 
	`©h9k_hw_dißbÀ_∂l_lock_dëe˘
(
ah
);

1983 
	}
}

1984 
EXPORT_SYMBOL
(
©h9k_hw_ª£t
);

1994 
	$©h9k_£t_powî_¶ìp
(
©h_hw
 *
ah
)

1996 
	`REG_SET_BIT
(
ah
, 
AR_STA_ID1
, 
AR_STA_ID1_PWR_SAV
);

1998 i‡(
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9565
(ah)) {

1999 
	`REG_CLR_BIT
(
ah
, 
AR_TIMER_MODE
, 0xff);

2000 
	`REG_CLR_BIT
(
ah
, 
AR_NDP2_TIMER_MODE
, 0xff);

2001 
	`REG_CLR_BIT
(
ah
, 
AR_SLP32_INC
, 0xfffff);

2003 
	`REG_WRITE
(
ah
, 
AR_MCI_INTERRUPT_RX_MSG_EN
, 0);

2004 
	`udñay
(100);

2011 
	`REG_CLR_BIT
(
ah
, 
AR_RTC_FORCE_WAKE
, 
AR_RTC_FORCE_WAKE_EN
);

2013 i‡(
	`©h9k_hw_mci_is_íabÀd
(
ah
))

2014 
	`udñay
(100);

2016 i‡(!
	`AR_SREV_9100
(
ah
Ë&& !
	`AR_SREV_9300_20_OR_LATER
(ah))

2017 
	`REG_WRITE
(
ah
, 
AR_RC
, 
AR_RC_AHB
 | 
AR_RC_HOSTIF
);

2020 i‡(!
	`AR_SREV_5416
(
ah
Ë&& !
	`AR_SREV_9271
(ah)) {

2021 
	`REG_CLR_BIT
(
ah
, 
AR_RTC_RESET
, 
AR_RTC_RESET_EN
);

2022 
	`udñay
(2);

2026 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
))

2027 
	`REG_WRITE
(
ah
, 
AR_WA
,áh->
WARegVÆ
 & ~
AR_WA_D3_L1_DISABLE
);

2028 
	}
}

2035 
	$©h9k_£t_powî_√tw‹k_¶ìp
(
©h_hw
 *
ah
)

2037 
©h9k_hw_ˇ∑bûôõs
 *
pC≠
 = &
ah
->
ˇps
;

2039 
	`REG_SET_BIT
(
ah
, 
AR_STA_ID1
, 
AR_STA_ID1_PWR_SAV
);

2041 i‡(!(
pC≠
->
hw_ˇps
 & 
ATH9K_HW_CAP_AUTOSLEEP
)) {

2043 
	`REG_WRITE
(
ah
, 
AR_RTC_FORCE_WAKE
,

2044 
AR_RTC_FORCE_WAKE_ON_INT
);

2056 i‡(
	`©h9k_hw_mci_is_íabÀd
(
ah
))

2057 
	`REG_CLR_BIT
(
ah
, 
AR_MCI_INTERRUPT_RX_MSG_EN
,

2058 
AR_MCI_INTERRUPT_RX_HW_MSG_MASK
);

2063 
	`REG_CLR_BIT
(
ah
, 
AR_RTC_FORCE_WAKE
, 
AR_RTC_FORCE_WAKE_EN
);

2065 i‡(
	`©h9k_hw_mci_is_íabÀd
(
ah
))

2066 
	`udñay
(30);

2070 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
))

2071 
	`REG_WRITE
(
ah
, 
AR_WA
,áh->
WARegVÆ
 & ~
AR_WA_D3_L1_DISABLE
);

2072 
	}
}

2074 
boﬁ
 
	$©h9k_hw_£t_powî_awake
(
©h_hw
 *
ah
)

2076 
u32
 
vÆ
;

2077 
i
;

2080 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
)) {

2081 
	`REG_WRITE
(
ah
, 
AR_WA
,áh->
WARegVÆ
);

2082 
	`udñay
(10);

2085 i‡((
	`REG_READ
(
ah
, 
AR_RTC_STATUS
) &

2086 
AR_RTC_STATUS_M
Ë=
AR_RTC_STATUS_SHUTDOWN
) {

2087 i‡(!
	`©h9k_hw_£t_ª£t_ªg
(
ah
, 
ATH9K_RESET_POWER_ON
)) {

2088  
Ál£
;

2090 i‡(!
	`AR_SREV_9300_20_OR_LATER
(
ah
))

2091 
	`©h9k_hw_öô_∂l
(
ah
, 
NULL
);

2093 i‡(
	`AR_SREV_9100
(
ah
))

2094 
	`REG_SET_BIT
(
ah
, 
AR_RTC_RESET
,

2095 
AR_RTC_RESET_EN
);

2097 
	`REG_SET_BIT
(
ah
, 
AR_RTC_FORCE_WAKE
,

2098 
AR_RTC_FORCE_WAKE_EN
);

2099 i‡(
	`AR_SREV_9100
(
ah
))

2100 
	`mdñay
(10);

2102 
	`udñay
(50);

2104 
i
 = 
POWER_UP_TIME
 / 50; i > 0; i--) {

2105 
vÆ
 = 
	`REG_READ
(
ah
, 
AR_RTC_STATUS
Ë& 
AR_RTC_STATUS_M
;

2106 i‡(
vÆ
 =
AR_RTC_STATUS_ON
)

2108 
	`udñay
(50);

2109 
	`REG_SET_BIT
(
ah
, 
AR_RTC_FORCE_WAKE
,

2110 
AR_RTC_FORCE_WAKE_EN
);

2112 i‡(
i
 == 0) {

2113 
	`©h_îr
(
	`©h9k_hw_comm⁄
(
ah
),

2115 
POWER_UP_TIME
 / 20);

2116  
Ál£
;

2119 i‡(
	`©h9k_hw_mci_is_íabÀd
(
ah
))

2120 
	`¨9003_mci_£t_powî_awake
(
ah
);

2122 
	`REG_CLR_BIT
(
ah
, 
AR_STA_ID1
, 
AR_STA_ID1_PWR_SAV
);

2124  
åue
;

2125 
	}
}

2127 
boﬁ
 
	$©h9k_hw_£çowî
(
©h_hw
 *
ah
, 
©h9k_powî_mode
 
mode
)

2129 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

2130 
°©us
 = 
åue
;

2131 c⁄° *
modes
[] = {

2138 i‡(
ah
->
powî_mode
 =
mode
)

2139  
°©us
;

2141 
	`©h_dbg
(
comm⁄
, 
RESET
, "%s -> %s\n",

2142 
modes
[
ah
->
powî_mode
], modes[
mode
]);

2144 
mode
) {

2145 
ATH9K_PM_AWAKE
:

2146 
°©us
 = 
	`©h9k_hw_£t_powî_awake
(
ah
);

2148 
ATH9K_PM_FULL_SLEEP
:

2149 i‡(
	`©h9k_hw_mci_is_íabÀd
(
ah
))

2150 
	`¨9003_mci_£t_fuŒ_¶ìp
(
ah
);

2152 
	`©h9k_£t_powî_¶ìp
(
ah
);

2153 
ah
->
chù_fuŒ¶ìp
 = 
åue
;

2155 
ATH9K_PM_NETWORK_SLEEP
:

2156 
	`©h9k_£t_powî_√tw‹k_¶ìp
(
ah
);

2159 
	`©h_îr
(
comm⁄
, "Unknow¿powî modê%u\n", 
mode
);

2160  
Ál£
;

2162 
ah
->
powî_mode
 = 
mode
;

2170 i‡(!(
ah
->
ah_Êags
 & 
AH_UNPLUGGED
))

2171 
	`ATH_DBG_WARN_ON_ONCE
(!
°©us
);

2173  
°©us
;

2174 
	}
}

2175 
EXPORT_SYMBOL
(
©h9k_hw_£çowî
);

2181 
	$©h9k_hw_bóc⁄öô
(
©h_hw
 *
ah
, 
u32
 
√xt_bóc⁄
, u32 
bóc⁄_≥riod
)

2183 
Êags
 = 0;

2185 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

2187 
ah
->
›mode
) {

2188 
NL80211_IFTYPE_ADHOC
:

2189 
	`REG_SET_BIT
(
ah
, 
AR_TXCFG
,

2190 
AR_TXCFG_ADHOC_BEACON_ATIM_TX_POLICY
);

2191 
NL80211_IFTYPE_MESH_POINT
:

2192 
NL80211_IFTYPE_AP
:

2193 
	`REG_WRITE
(
ah
, 
AR_NEXT_TBTT_TIMER
, 
√xt_bóc⁄
);

2194 
	`REG_WRITE
(
ah
, 
AR_NEXT_DMA_BEACON_ALERT
, 
√xt_bóc⁄
 -

2195 
	`TU_TO_USEC
(
ah
->
c⁄fig
.
dma_bóc⁄_ª•⁄£_time
));

2196 
	`REG_WRITE
(
ah
, 
AR_NEXT_SWBA
, 
√xt_bóc⁄
 -

2197 
	`TU_TO_USEC
(
ah
->
c⁄fig
.
sw_bóc⁄_ª•⁄£_time
));

2198 
Êags
 |=

2199 
AR_TBTT_TIMER_EN
 | 
AR_DBA_TIMER_EN
 | 
AR_SWBA_TIMER_EN
;

2202 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
BEACON
,

2203 "%s: unsuµ‹ãd opmode: %d\n", 
__func__
, 
ah
->
›mode
);

2208 
	`REG_WRITE
(
ah
, 
AR_BEACON_PERIOD
, 
bóc⁄_≥riod
);

2209 
	`REG_WRITE
(
ah
, 
AR_DMA_BEACON_PERIOD
, 
bóc⁄_≥riod
);

2210 
	`REG_WRITE
(
ah
, 
AR_SWBA_PERIOD
, 
bóc⁄_≥riod
);

2212 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

2214 
	`REG_SET_BIT
(
ah
, 
AR_TIMER_MODE
, 
Êags
);

2215 
	}
}

2216 
EXPORT_SYMBOL
(
©h9k_hw_bóc⁄öô
);

2218 
	$©h9k_hw_£t_°a_bóc⁄_timîs
(
©h_hw
 *
ah
,

2219 c⁄° 
©h9k_bóc⁄_°©e
 *
bs
)

2221 
u32
 
√xtTbâ
, 
bóc⁄ötvÆ
, 
dtim≥riod
, 
bóc⁄timeout
;

2222 
©h9k_hw_ˇ∑bûôõs
 *
pC≠
 = &
ah
->
ˇps
;

2223 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

2225 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

2227 
	`REG_WRITE
(
ah
, 
AR_NEXT_TBTT_TIMER
, 
bs
->
bs_√xâbâ
);

2228 
	`REG_WRITE
(
ah
, 
AR_BEACON_PERIOD
, 
bs
->
bs_ötvÆ
);

2229 
	`REG_WRITE
(
ah
, 
AR_DMA_BEACON_PERIOD
, 
bs
->
bs_ötvÆ
);

2231 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

2233 
	`REG_RMW_FIELD
(
ah
, 
AR_RSSI_THR
,

2234 
AR_RSSI_THR_BM_THR
, 
bs
->
bs_bmis°hªshﬁd
);

2236 
bóc⁄ötvÆ
 = 
bs
->
bs_ötvÆ
;

2238 i‡(
bs
->
bs_¶ìpduøti⁄
 > 
bóc⁄ötvÆ
)

2239 
bóc⁄ötvÆ
 = 
bs
->
bs_¶ìpduøti⁄
;

2241 
dtim≥riod
 = 
bs
->
bs_dtim≥riod
;

2242 i‡(
bs
->
bs_¶ìpduøti⁄
 > 
dtim≥riod
)

2243 
dtim≥riod
 = 
bs
->
bs_¶ìpduøti⁄
;

2245 i‡(
bóc⁄ötvÆ
 =
dtim≥riod
)

2246 
√xtTbâ
 = 
bs
->
bs_√xtdtim
;

2248 
√xtTbâ
 = 
bs
->
bs_√xâbâ
;

2250 
	`©h_dbg
(
comm⁄
, 
BEACON
, "√xàDTIM %d\n", 
bs
->
bs_√xtdtim
);

2251 
	`©h_dbg
(
comm⁄
, 
BEACON
, "√xàbóc⁄ %d\n", 
√xtTbâ
);

2252 
	`©h_dbg
(
comm⁄
, 
BEACON
, "bóc⁄Öîiod %d\n", 
bóc⁄ötvÆ
);

2253 
	`©h_dbg
(
comm⁄
, 
BEACON
, "DTIMÖîiod %d\n", 
dtim≥riod
);

2255 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

2257 
	`REG_WRITE
(
ah
, 
AR_NEXT_DTIM
, 
bs
->
bs_√xtdtim
 - 
SLEEP_SLOP
);

2258 
	`REG_WRITE
(
ah
, 
AR_NEXT_TIM
, 
√xtTbâ
 - 
SLEEP_SLOP
);

2260 
	`REG_WRITE
(
ah
, 
AR_SLEEP1
,

2261 
	`SM
((
CAB_TIMEOUT_VAL
 << 3), 
AR_SLEEP1_CAB_TIMEOUT
)

2262 | 
AR_SLEEP1_ASSUME_DTIM
);

2264 i‡(
pC≠
->
hw_ˇps
 & 
ATH9K_HW_CAP_AUTOSLEEP
)

2265 
bóc⁄timeout
 = (
BEACON_TIMEOUT_VAL
 << 3);

2267 
bóc⁄timeout
 = 
MIN_BEACON_TIMEOUT_VAL
;

2269 
	`REG_WRITE
(
ah
, 
AR_SLEEP2
,

2270 
	`SM
(
bóc⁄timeout
, 
AR_SLEEP2_BEACON_TIMEOUT
));

2272 
	`REG_WRITE
(
ah
, 
AR_TIM_PERIOD
, 
bóc⁄ötvÆ
);

2273 
	`REG_WRITE
(
ah
, 
AR_DTIM_PERIOD
, 
dtim≥riod
);

2275 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

2277 
	`REG_SET_BIT
(
ah
, 
AR_TIMER_MODE
,

2278 
AR_TBTT_TIMER_EN
 | 
AR_TIM_TIMER_EN
 |

2279 
AR_DTIM_TIMER_EN
);

2282 
	`REG_WRITE
(
ah
, 
AR_TSFOOR_THRESHOLD
, 
bs
->
bs_tsfo‹_thªshﬁd
);

2283 
	}
}

2284 
EXPORT_SYMBOL
(
©h9k_hw_£t_°a_bóc⁄_timîs
);

2290 
u8
 
	$fixup_chaömask
(
u8
 
chù_chaömask
, u8 
ì¥om_chaömask
)

2292 
ì¥om_chaömask
 &
chù_chaömask
;

2293 i‡(
ì¥om_chaömask
)

2294  
ì¥om_chaömask
;

2296  
chù_chaömask
;

2297 
	}
}

2312 
boﬁ
 
	$©h9k_hw_dfs_ã°ed
(
©h_hw
 *
ah
)

2315 
ah
->
hw_vîsi⁄
.
macVîsi⁄
) {

2317 
AR_SREV_VERSION_9280
:

2319 
AR_SREV_VERSION_9580
:

2320  
åue
;

2322  
Ál£
;

2324 
	}
}

2326 
	$©h9k_hw_fûl_ˇp_öfo
(
©h_hw
 *
ah
)

2328 
©h9k_hw_ˇ∑bûôõs
 *
pC≠
 = &
ah
->
ˇps
;

2329 
©h_ªguœt‹y
 *
ªguœt‹y
 = 
	`©h9k_hw_ªguœt‹y
(
ah
);

2330 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

2331 
chù_chaömask
;

2333 
u16
 
ìvÆ
;

2334 
u8
 
™t_div_˘l1
, 
tx_chaömask
, 
rx_chaömask
;

2336 
ìvÆ
 = 
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_REG_0
);

2337 
ªguœt‹y
->
cuºít_rd
 = 
ìvÆ
;

2339 i‡(
ah
->
›mode
 !
NL80211_IFTYPE_AP
 &&

2340 
ah
->
hw_vîsi⁄
.
subvíd‹id
 =
AR_SUBVENDOR_ID_NEW_A
) {

2341 i‡(
ªguœt‹y
->
cuºít_rd
 == 0x64 ||

2342 
ªguœt‹y
->
cuºít_rd
 == 0x65)

2343 
ªguœt‹y
->
cuºít_rd
 += 5;

2344 i‡(
ªguœt‹y
->
cuºít_rd
 == 0x41)

2345 
ªguœt‹y
->
cuºít_rd
 = 0x43;

2346 
	`©h_dbg
(
comm⁄
, 
REGULATORY
, "regdomain mappedÅo 0x%x\n",

2347 
ªguœt‹y
->
cuºít_rd
);

2350 
ìvÆ
 = 
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_OP_MODE
);

2352 i‡(
ìvÆ
 & 
AR5416_OPFLAGS_11A
) {

2353 i‡(
ah
->
dißbÀ_5ghz
)

2354 
	`©h_w¨n
(
comm⁄
, "disabling 5GHz band\n");

2356 
pC≠
->
hw_ˇps
 |
ATH9K_HW_CAP_5GHZ
;

2359 i‡(
ìvÆ
 & 
AR5416_OPFLAGS_11G
) {

2360 i‡(
ah
->
dißbÀ_2ghz
)

2361 
	`©h_w¨n
(
comm⁄
, "disabling 2GHz band\n");

2363 
pC≠
->
hw_ˇps
 |
ATH9K_HW_CAP_2GHZ
;

2366 i‡((
pC≠
->
hw_ˇps
 & (
ATH9K_HW_CAP_2GHZ
 | 
ATH9K_HW_CAP_5GHZ
)) == 0) {

2367 
	`©h_îr
(
comm⁄
, "both bandsáre disabled\n");

2368  -
EINVAL
;

2371 i‡(
	`AR_SREV_9485
(
ah
) ||

2372 
	`AR_SREV_9285
(
ah
) ||

2373 
	`AR_SREV_9330
(
ah
) ||

2374 
	`AR_SREV_9565
(
ah
))

2375 
chù_chaömask
 = 1;

2376 i‡(
	`AR_SREV_9462
(
ah
))

2377 
chù_chaömask
 = 3;

2378 i‡(!
	`AR_SREV_9280_20_OR_LATER
(
ah
))

2379 
chù_chaömask
 = 7;

2380 i‡(!
	`AR_SREV_9300_20_OR_LATER
(
ah
Ë|| 
	`AR_SREV_9340
(ah))

2381 
chù_chaömask
 = 3;

2383 
chù_chaömask
 = 7;

2385 
pC≠
->
tx_chaömask
 = 
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_TX_MASK
);

2390 i‡((
ah
->
hw_vîsi⁄
.
devid
 =
AR5416_DEVID_PCI
) &&

2391 !(
ìvÆ
 & 
AR5416_OPFLAGS_11A
) &&

2392 !(
	`AR_SREV_9271
(
ah
)))

2394 
pC≠
->
rx_chaömask
 = 
	`©h9k_hw_gpio_gë
(
ah
, 0) ? 0x5 : 0x7;

2395 i‡(
	`AR_SREV_9100
(
ah
))

2396 
pC≠
->
rx_chaömask
 = 0x7;

2399 
pC≠
->
rx_chaömask
 = 
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_RX_MASK
);

2401 
pC≠
->
tx_chaömask
 = 
	`fixup_chaömask
(
chù_chaömask
,ÖCap->tx_chainmask);

2402 
pC≠
->
rx_chaömask
 = 
	`fixup_chaömask
(
chù_chaömask
,ÖCap->rx_chainmask);

2403 
ah
->
txchaömask
 = 
pC≠
->
tx_chaömask
;

2404 
ah
->
rxchaömask
 = 
pC≠
->
rx_chaömask
;

2406 
ah
->
misc_mode
 |
AR_PCU_MIC_NEW_LOC_ENA
;

2409 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
))

2410 
ah
->
misc_mode
 |
AR_PCU_ALWAYS_PERFORM_KEYSEARCH
;

2412 
comm⁄
->
¸y±_ˇps
 |
ATH_CRYPT_CAP_CIPHER_AESCCM
;

2414 i‡(
ah
->
hw_vîsi⁄
.
devid
 !
AR2427_DEVID_PCIE
)

2415 
pC≠
->
hw_ˇps
 |
ATH9K_HW_CAP_HT
;

2417 
pC≠
->
hw_ˇps
 &~
ATH9K_HW_CAP_HT
;

2419 i‡(
	`AR_SREV_9271
(
ah
))

2420 
pC≠
->
num_gpio_pös
 = 
AR9271_NUM_GPIO
;

2421 i‡(
	`AR_DEVID_7010
(
ah
))

2422 
pC≠
->
num_gpio_pös
 = 
AR7010_NUM_GPIO
;

2423 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
))

2424 
pC≠
->
num_gpio_pös
 = 
AR9300_NUM_GPIO
;

2425 i‡(
	`AR_SREV_9287_11_OR_LATER
(
ah
))

2426 
pC≠
->
num_gpio_pös
 = 
AR9287_NUM_GPIO
;

2427 i‡(
	`AR_SREV_9285_12_OR_LATER
(
ah
))

2428 
pC≠
->
num_gpio_pös
 = 
AR9285_NUM_GPIO
;

2429 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
))

2430 
pC≠
->
num_gpio_pös
 = 
AR928X_NUM_GPIO
;

2432 
pC≠
->
num_gpio_pös
 = 
AR_NUM_GPIO
;

2434 i‡(
	`AR_SREV_9160_10_OR_LATER
(
ah
Ë|| 
	`AR_SREV_9100
(ah))

2435 
pC≠
->
πs_aggr_limô
 = 
ATH_AMPDU_LIMIT_MAX
;

2437 
pC≠
->
πs_aggr_limô
 = (8 * 1024);

2439 #ifde‡
CPTCFG_ATH9K_RFKILL


2440 
ah
->
rfsûít
 =áh->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_RF_SILENT
);

2441 i‡(
ah
->
rfsûít
 & 
EEP_RFSILENT_ENABLED
) {

2442 
ah
->
rfkûl_gpio
 =

2443 
	`MS
(
ah
->
rfsûít
, 
EEP_RFSILENT_GPIO_SEL
);

2444 
ah
->
rfkûl_pﬁ¨ôy
 =

2445 
	`MS
(
ah
->
rfsûít
, 
EEP_RFSILENT_POLARITY
);

2447 
pC≠
->
hw_ˇps
 |
ATH9K_HW_CAP_RFSILENT
;

2450 i‡(
	`AR_SREV_9271
(
ah
Ë|| 
	`AR_SREV_9300_20_OR_LATER
(ah))

2451 
pC≠
->
hw_ˇps
 |
ATH9K_HW_CAP_AUTOSLEEP
;

2453 
pC≠
->
hw_ˇps
 &~
ATH9K_HW_CAP_AUTOSLEEP
;

2455 i‡(
	`AR_SREV_9280
(
ah
Ë|| 
	`AR_SREV_9285
(ah))

2456 
pC≠
->
hw_ˇps
 &~
ATH9K_HW_CAP_4KB_SPLITTRANS
;

2458 
pC≠
->
hw_ˇps
 |
ATH9K_HW_CAP_4KB_SPLITTRANS
;

2460 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
)) {

2461 
pC≠
->
hw_ˇps
 |
ATH9K_HW_CAP_EDMA
 | 
ATH9K_HW_CAP_FASTCLOCK
;

2462 i‡(!
	`AR_SREV_9330
(
ah
Ë&& !
	`AR_SREV_9485
◊hË&& !
	`AR_SREV_9565
(ah))

2463 
pC≠
->
hw_ˇps
 |
ATH9K_HW_CAP_LDPC
;

2465 
pC≠
->
rx_hp_qdïth
 = 
ATH9K_HW_RX_HP_QDEPTH
;

2466 
pC≠
->
rx_Õ_qdïth
 = 
ATH9K_HW_RX_LP_QDEPTH
;

2467 
pC≠
->
rx_°©us_Àn
 = (
¨9003_rxs
);

2468 
pC≠
->
tx_desc_Àn
 = (
¨9003_txc
);

2469 
pC≠
->
txs_Àn
 = (
¨9003_txs
);

2471 
pC≠
->
tx_desc_Àn
 = (
©h_desc
);

2472 i‡(
	`AR_SREV_9280_20
(
ah
))

2473 
pC≠
->
hw_ˇps
 |
ATH9K_HW_CAP_FASTCLOCK
;

2476 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
))

2477 
pC≠
->
hw_ˇps
 |
ATH9K_HW_CAP_RAC_SUPPORTED
;

2479 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
))

2480 
ah
->
ít_mode
 = 
	`REG_READ
◊h, 
AR_ENT_OTP
);

2482 i‡(
	`AR_SREV_9287_11_OR_LATER
(
ah
Ë|| 
	`AR_SREV_9271
(ah))

2483 
pC≠
->
hw_ˇps
 |
ATH9K_HW_CAP_SGI_20
;

2485 i‡(
	`AR_SREV_9285
(
ah
)) {

2486 i‡(
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_MODAL_VER
) >= 3) {

2487 
™t_div_˘l1
 =

2488 
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_ANT_DIV_CTL1
);

2489 i‡((
™t_div_˘l1
 & 0x1) && ((ant_div_ctl1 >> 3) & 0x1)) {

2490 
pC≠
->
hw_ˇps
 |
ATH9K_HW_CAP_ANT_DIV_COMB
;

2491 
	`©h_öfo
(
comm⁄
, "Enable LNA combining\n");

2496 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
)) {

2497 i‡(
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_CHAIN_MASK_REDUCE
))

2498 
pC≠
->
hw_ˇps
 |
ATH9K_HW_CAP_APM
;

2501 i‡(
	`AR_SREV_9330
(
ah
Ë|| 
	`AR_SREV_9485
◊hË|| 
	`AR_SREV_9565
(ah)) {

2502 
™t_div_˘l1
 = 
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_ANT_DIV_CTL1
);

2503 i‡((
™t_div_˘l1
 >> 0x6) == 0x3) {

2504 
pC≠
->
hw_ˇps
 |
ATH9K_HW_CAP_ANT_DIV_COMB
;

2505 
	`©h_öfo
(
comm⁄
, "Enable LNA combining\n");

2509 i‡(
	`©h9k_hw_dfs_ã°ed
(
ah
))

2510 
pC≠
->
hw_ˇps
 |
ATH9K_HW_CAP_DFS
;

2512 
tx_chaömask
 = 
pC≠
->tx_chainmask;

2513 
rx_chaömask
 = 
pC≠
->rx_chainmask;

2514 
tx_chaömask
 || 
rx_chaömask
) {

2515 i‡(
tx_chaömask
 & 
	`BIT
(0))

2516 
pC≠
->
max_txchaös
++;

2517 i‡(
rx_chaömask
 & 
	`BIT
(0))

2518 
pC≠
->
max_rxchaös
++;

2520 
tx_chaömask
 >>= 1;

2521 
rx_chaömask
 >>= 1;

2524 i‡(
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9565
(ah)) {

2525 i‡(!(
ah
->
ít_mode
 & 
AR_ENT_OTP_49GHZ_DISABLE
))

2526 
pC≠
->
hw_ˇps
 |
ATH9K_HW_CAP_MCI
;

2528 i‡(
	`AR_SREV_9462_20_OR_LATER
(
ah
))

2529 
pC≠
->
hw_ˇps
 |
ATH9K_HW_CAP_RTT
;

2532 i‡(
	`AR_SREV_9462
(
ah
))

2533 
pC≠
->
hw_ˇps
 |
ATH9K_HW_WOW_DEVICE_CAPABLE
;

2535 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
) &&

2536 
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
EEP_PAPRD
))

2537 
pC≠
->
hw_ˇps
 |
ATH9K_HW_CAP_PAPRD
;

2540 
	}
}

2546 
	$©h9k_hw_gpio_cfg_ouçut_mux
(
©h_hw
 *
ah
,

2547 
u32
 
gpio
, u32 
ty≥
)

2549 
addr
;

2550 
u32
 
gpio_shi·
, 
tmp
;

2552 i‡(
gpio
 > 11)

2553 
addr
 = 
AR_GPIO_OUTPUT_MUX3
;

2554 i‡(
gpio
 > 5)

2555 
addr
 = 
AR_GPIO_OUTPUT_MUX2
;

2557 
addr
 = 
AR_GPIO_OUTPUT_MUX1
;

2559 
gpio_shi·
 = (
gpio
 % 6) * 5;

2561 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
)

2562 || (
addr
 !
AR_GPIO_OUTPUT_MUX1
)) {

2563 
	`REG_RMW
(
ah
, 
addr
, (
ty≥
 << 
gpio_shi·
),

2564 (0x1‡<< 
gpio_shi·
));

2566 
tmp
 = 
	`REG_READ
(
ah
, 
addr
);

2567 
tmp
 = ((tmp & 0x1F0) << 1) | (tmp & ~0x1F0);

2568 
tmp
 &~(0x1‡<< 
gpio_shi·
);

2569 
tmp
 |(
ty≥
 << 
gpio_shi·
);

2570 
	`REG_WRITE
(
ah
, 
addr
, 
tmp
);

2572 
	}
}

2574 
	$©h9k_hw_cfg_gpio_öput
(
©h_hw
 *
ah
, 
u32
 
gpio
)

2576 
u32
 
gpio_shi·
;

2578 
	`BUG_ON
(
gpio
 >
ah
->
ˇps
.
num_gpio_pös
);

2580 i‡(
	`AR_DEVID_7010
(
ah
)) {

2581 
gpio_shi·
 = 
gpio
;

2582 
	`REG_RMW
(
ah
, 
AR7010_GPIO_OE
,

2583 (
AR7010_GPIO_OE_AS_INPUT
 << 
gpio_shi·
),

2584 (
AR7010_GPIO_OE_MASK
 << 
gpio_shi·
));

2588 
gpio_shi·
 = 
gpio
 << 1;

2589 
	`REG_RMW
(
ah
,

2590 
AR_GPIO_OE_OUT
,

2591 (
AR_GPIO_OE_OUT_DRV_NO
 << 
gpio_shi·
),

2592 (
AR_GPIO_OE_OUT_DRV
 << 
gpio_shi·
));

2593 
	}
}

2594 
EXPORT_SYMBOL
(
©h9k_hw_cfg_gpio_öput
);

2596 
u32
 
	$©h9k_hw_gpio_gë
(
©h_hw
 *
ah
, 
u32
 
gpio
)

2598 
	#MS_REG_READ
(
x
, 
y
) \

2599 (
	`MS
(
	`REG_READ
(
ah
, 
AR_GPIO_IN_OUT
), 
x
##
_GPIO_IN_VAL
Ë& (
	`AR_GPIO_BIT
(
y
)))

	)

2601 i‡(
gpio
 >
ah
->
ˇps
.
num_gpio_pös
)

2604 i‡(
	`AR_DEVID_7010
(
ah
)) {

2605 
u32
 
vÆ
;

2606 
vÆ
 = 
	`REG_READ
(
ah
, 
AR7010_GPIO_IN
);

2607  (
	`MS
(
vÆ
, 
AR7010_GPIO_IN_VAL
Ë& 
	`AR_GPIO_BIT
(
gpio
)) == 0;

2608 } i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
))

2609  (
	`MS
(
	`REG_READ
(
ah
, 
AR_GPIO_IN
), 
AR9300_GPIO_IN_VAL
) &

2610 
	`AR_GPIO_BIT
(
gpio
)) != 0;

2611 i‡(
	`AR_SREV_9271
(
ah
))

2612  
	`MS_REG_READ
(
AR9271
, 
gpio
) != 0;

2613 i‡(
	`AR_SREV_9287_11_OR_LATER
(
ah
))

2614  
	`MS_REG_READ
(
AR9287
, 
gpio
) != 0;

2615 i‡(
	`AR_SREV_9285_12_OR_LATER
(
ah
))

2616  
	`MS_REG_READ
(
AR9285
, 
gpio
) != 0;

2617 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
))

2618  
	`MS_REG_READ
(
AR928X
, 
gpio
) != 0;

2620  
	`MS_REG_READ
(
AR
, 
gpio
) != 0;

2621 
	}
}

2622 
EXPORT_SYMBOL
(
©h9k_hw_gpio_gë
);

2624 
	$©h9k_hw_cfg_ouçut
(
©h_hw
 *
ah
, 
u32
 
gpio
,

2625 
u32
 
ah_sig«l_ty≥
)

2627 
u32
 
gpio_shi·
;

2629 i‡(
	`AR_DEVID_7010
(
ah
)) {

2630 
gpio_shi·
 = 
gpio
;

2631 
	`REG_RMW
(
ah
, 
AR7010_GPIO_OE
,

2632 (
AR7010_GPIO_OE_AS_OUTPUT
 << 
gpio_shi·
),

2633 (
AR7010_GPIO_OE_MASK
 << 
gpio_shi·
));

2637 
	`©h9k_hw_gpio_cfg_ouçut_mux
(
ah
, 
gpio
, 
ah_sig«l_ty≥
);

2638 
gpio_shi·
 = 2 * 
gpio
;

2639 
	`REG_RMW
(
ah
,

2640 
AR_GPIO_OE_OUT
,

2641 (
AR_GPIO_OE_OUT_DRV_ALL
 << 
gpio_shi·
),

2642 (
AR_GPIO_OE_OUT_DRV
 << 
gpio_shi·
));

2643 
	}
}

2644 
EXPORT_SYMBOL
(
©h9k_hw_cfg_ouçut
);

2646 
	$©h9k_hw_£t_gpio
(
©h_hw
 *
ah
, 
u32
 
gpio
, u32 
vÆ
)

2648 i‡(
	`AR_DEVID_7010
(
ah
)) {

2649 
vÆ
 = val ? 0 : 1;

2650 
	`REG_RMW
(
ah
, 
AR7010_GPIO_OUT
, ((
vÆ
&1Ë<< 
gpio
),

2651 
	`AR_GPIO_BIT
(
gpio
));

2655 i‡(
	`AR_SREV_9271
(
ah
))

2656 
vÆ
 = ~val;

2658 
	`REG_RMW
(
ah
, 
AR_GPIO_IN_OUT
, ((
vÆ
 & 1Ë<< 
gpio
),

2659 
	`AR_GPIO_BIT
(
gpio
));

2660 
	}
}

2661 
EXPORT_SYMBOL
(
©h9k_hw_£t_gpio
);

2663 
	$©h9k_hw_£è¡í«
(
©h_hw
 *
ah
, 
u32
 
™ã¬a
)

2665 
	`REG_WRITE
(
ah
, 
AR_DEF_ANTENNA
, (
™ã¬a
 & 0x7));

2666 
	}
}

2667 
EXPORT_SYMBOL
(
©h9k_hw_£è¡í«
);

2673 
u32
 
	$©h9k_hw_gërxfûãr
(
©h_hw
 *
ah
)

2675 
u32
 
bôs
 = 
	`REG_READ
(
ah
, 
AR_RX_FILTER
);

2676 
u32
 
phybôs
 = 
	`REG_READ
(
ah
, 
AR_PHY_ERR
);

2678 i‡(
phybôs
 & 
AR_PHY_ERR_RADAR
)

2679 
bôs
 |
ATH9K_RX_FILTER_PHYRADAR
;

2680 i‡(
phybôs
 & (
AR_PHY_ERR_OFDM_TIMING
 | 
AR_PHY_ERR_CCK_TIMING
))

2681 
bôs
 |
ATH9K_RX_FILTER_PHYERR
;

2683  
bôs
;

2684 
	}
}

2685 
EXPORT_SYMBOL
(
©h9k_hw_gërxfûãr
);

2687 
	$©h9k_hw_£åxfûãr
(
©h_hw
 *
ah
, 
u32
 
bôs
)

2689 
u32
 
phybôs
;

2691 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

2693 i‡(
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9565
(ah))

2694 
bôs
 |
ATH9K_RX_FILTER_CONTROL_WRAPPER
;

2696 
	`REG_WRITE
(
ah
, 
AR_RX_FILTER
, 
bôs
);

2698 
phybôs
 = 0;

2699 i‡(
bôs
 & 
ATH9K_RX_FILTER_PHYRADAR
)

2700 
phybôs
 |
AR_PHY_ERR_RADAR
;

2701 i‡(
bôs
 & 
ATH9K_RX_FILTER_PHYERR
)

2702 
phybôs
 |
AR_PHY_ERR_OFDM_TIMING
 | 
AR_PHY_ERR_CCK_TIMING
;

2703 
	`REG_WRITE
(
ah
, 
AR_PHY_ERR
, 
phybôs
);

2705 i‡(
phybôs
)

2706 
	`REG_SET_BIT
(
ah
, 
AR_RXCFG
, 
AR_RXCFG_ZLFDMA
);

2708 
	`REG_CLR_BIT
(
ah
, 
AR_RXCFG
, 
AR_RXCFG_ZLFDMA
);

2710 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

2711 
	}
}

2712 
EXPORT_SYMBOL
(
©h9k_hw_£åxfûãr
);

2714 
boﬁ
 
	$©h9k_hw_phy_dißbÀ
(
©h_hw
 *
ah
)

2716 i‡(
	`©h9k_hw_mci_is_íabÀd
(
ah
))

2717 
	`¨9003_mci_bt_gaö_˘æ
(
ah
);

2719 i‡(!
	`©h9k_hw_£t_ª£t_ªg
(
ah
, 
ATH9K_RESET_WARM
))

2720  
Ál£
;

2722 
	`©h9k_hw_öô_∂l
(
ah
, 
NULL
);

2723 
ah
->
htc_ª£t_öô
 = 
åue
;

2724  
åue
;

2725 
	}
}

2726 
EXPORT_SYMBOL
(
©h9k_hw_phy_dißbÀ
);

2728 
boﬁ
 
	$©h9k_hw_dißbÀ
(
©h_hw
 *
ah
)

2730 i‡(!
	`©h9k_hw_£çowî
(
ah
, 
ATH9K_PM_AWAKE
))

2731  
Ál£
;

2733 i‡(!
	`©h9k_hw_£t_ª£t_ªg
(
ah
, 
ATH9K_RESET_COLD
))

2734  
Ál£
;

2736 
	`©h9k_hw_öô_∂l
(
ah
, 
NULL
);

2737  
åue
;

2738 
	}
}

2739 
EXPORT_SYMBOL
(
©h9k_hw_dißbÀ
);

2741 
	$gë_™ã¬a_gaö
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
)

2743 
ì¥om_∑øm
 
gaö_∑øm
;

2745 i‡(
	`IS_CHAN_2GHZ
(
ch™
))

2746 
gaö_∑øm
 = 
EEP_ANTENNA_GAIN_2G
;

2748 
gaö_∑øm
 = 
EEP_ANTENNA_GAIN_5G
;

2750  
ah
->
ìp_›s
->
	`gë_ì¥om
◊h, 
gaö_∑øm
);

2751 
	}
}

2753 
	$©h9k_hw_≠∂y_txpowî
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
,

2754 
boﬁ
 
ã°
)

2756 
©h_ªguœt‹y
 *
ªg
 = 
	`©h9k_hw_ªguœt‹y
(
ah
);

2757 
õì80211_ch™√l
 *
ch™√l
;

2758 
ch™_pwr
, 
√w_pwr
, 
max_gaö
;

2759 
™t_gaö
, 
™t_ªdu˘i⁄
 = 0;

2761 i‡(!
ch™
)

2764 
ch™√l
 = 
ch™
->chan;

2765 
ch™_pwr
 = 
	`mö_t
(, 
ch™√l
->
max_powî
 * 2, 
MAX_RATE_POWER
);

2766 
√w_pwr
 = 
	`mö_t
(, 
ch™_pwr
, 
ªg
->
powî_limô
);

2767 
max_gaö
 = 
ch™_pwr
 - 
√w_pwr
 + 
ªg
->
max_™ã¬a_gaö
 * 2;

2769 
™t_gaö
 = 
	`gë_™ã¬a_gaö
(
ah
, 
ch™
);

2770 i‡(
™t_gaö
 > 
max_gaö
)

2771 
™t_ªdu˘i⁄
 = 
™t_gaö
 - 
max_gaö
;

2773 
ah
->
ìp_›s
->
	`£t_txpowî
◊h, 
ch™
,

2774 
	`©h9k_ªgd_gë_˘l
(
ªg
, 
ch™
),

2775 
™t_ªdu˘i⁄
, 
√w_pwr
, 
ã°
);

2776 
	}
}

2778 
	$©h9k_hw_£t_txpowîlimô
(
©h_hw
 *
ah
, 
u32
 
limô
, 
boﬁ
 
ã°
)

2780 
©h_ªguœt‹y
 *
ªg
 = 
	`©h9k_hw_ªguœt‹y
(
ah
);

2781 
©h9k_ch™√l
 *
ch™
 = 
ah
->
curch™
;

2782 
õì80211_ch™√l
 *
ch™√l
 = 
ch™
->chan;

2784 
ªg
->
powî_limô
 = 
	`mö_t
(
u32
, 
limô
, 
MAX_RATE_POWER
);

2785 i‡(
ã°
)

2786 
ch™√l
->
max_powî
 = 
MAX_RATE_POWER
 / 2;

2788 
	`©h9k_hw_≠∂y_txpowî
(
ah
, 
ch™
, 
ã°
);

2790 i‡(
ã°
)

2791 
ch™√l
->
max_powî
 = 
	`DIV_ROUND_UP
(
ªg
->
max_powî_Àvñ
, 2);

2792 
	}
}

2793 
EXPORT_SYMBOL
(
©h9k_hw_£t_txpowîlimô
);

2795 
	$©h9k_hw_£t›mode
(
©h_hw
 *
ah
)

2797 
	`©h9k_hw_£t_›î©ög_mode
(
ah
,áh->
›mode
);

2798 
	}
}

2799 
EXPORT_SYMBOL
(
©h9k_hw_£t›mode
);

2801 
	$©h9k_hw_£tmˇ°fûãr
(
©h_hw
 *
ah
, 
u32
 
fûãr0
, u32 
fûãr1
)

2803 
	`REG_WRITE
(
ah
, 
AR_MCAST_FIL0
, 
fûãr0
);

2804 
	`REG_WRITE
(
ah
, 
AR_MCAST_FIL1
, 
fûãr1
);

2805 
	}
}

2806 
EXPORT_SYMBOL
(
©h9k_hw_£tmˇ°fûãr
);

2808 
	$©h9k_hw_wrôe_associd
(
©h_hw
 *
ah
)

2810 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

2812 
	`REG_WRITE
(
ah
, 
AR_BSS_ID0
, 
	`gë_u«lig√d_À32
(
comm⁄
->
curbssid
));

2813 
	`REG_WRITE
(
ah
, 
AR_BSS_ID1
, 
	`gë_u«lig√d_À16
(
comm⁄
->
curbssid
 + 4) |

2814 ((
comm⁄
->
cuøid
 & 0x3fffË<< 
AR_BSS_ID1_AID_S
));

2815 
	}
}

2816 
EXPORT_SYMBOL
(
©h9k_hw_wrôe_associd
);

2818 
	#ATH9K_MAX_TSF_READ
 10

	)

2820 
u64
 
	$©h9k_hw_gëtsf64
(
©h_hw
 *
ah
)

2822 
u32
 
tsf_lowî
, 
tsf_uµî1
, 
tsf_uµî2
;

2823 
i
;

2825 
tsf_uµî1
 = 
	`REG_READ
(
ah
, 
AR_TSF_U32
);

2826 
i
 = 0; i < 
ATH9K_MAX_TSF_READ
; i++) {

2827 
tsf_lowî
 = 
	`REG_READ
(
ah
, 
AR_TSF_L32
);

2828 
tsf_uµî2
 = 
	`REG_READ
(
ah
, 
AR_TSF_U32
);

2829 i‡(
tsf_uµî2
 =
tsf_uµî1
)

2831 
tsf_uµî1
 = 
tsf_uµî2
;

2834 
	`WARN_ON
–
i
 =
ATH9K_MAX_TSF_READ
 );

2836  (((
u64
)
tsf_uµî1
 << 32Ë| 
tsf_lowî
);

2837 
	}
}

2838 
EXPORT_SYMBOL
(
©h9k_hw_gëtsf64
);

2840 
	$©h9k_hw_£âsf64
(
©h_hw
 *
ah
, 
u64
 
tsf64
)

2842 
	`REG_WRITE
(
ah
, 
AR_TSF_L32
, 
tsf64
 & 0xffffffff);

2843 
	`REG_WRITE
(
ah
, 
AR_TSF_U32
, (
tsf64
 >> 32) & 0xffffffff);

2844 
	}
}

2845 
EXPORT_SYMBOL
(
©h9k_hw_£âsf64
);

2847 
	$©h9k_hw_ª£t_tsf
(
©h_hw
 *
ah
)

2849 i‡(!
	`©h9k_hw_waô
(
ah
, 
AR_SLP32_MODE
, 
AR_SLP32_TSF_WRITE_STATUS
, 0,

2850 
AH_TSF_WRITE_TIMEOUT
))

2851 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
RESET
,

2854 
	`REG_WRITE
(
ah
, 
AR_RESET_TSF
, 
AR_RESET_TSF_ONCE
);

2855 
	}
}

2856 
EXPORT_SYMBOL
(
©h9k_hw_ª£t_tsf
);

2858 
	$©h9k_hw_£t_tsÁdju°
(
©h_hw
 *
ah
, 
boﬁ
 
£t
)

2860 i‡(
£t
)

2861 
ah
->
misc_mode
 |
AR_PCU_TX_ADD_TSF
;

2863 
ah
->
misc_mode
 &~
AR_PCU_TX_ADD_TSF
;

2864 
	}
}

2865 
EXPORT_SYMBOL
(
©h9k_hw_£t_tsÁdju°
);

2867 
	$©h9k_hw_£t11nmac2040
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
)

2869 
u32
 
macmode
;

2871 i‡(
	`IS_CHAN_HT40
(
ch™
Ë&& !
ah
->
c⁄fig
.
cwm_ign‹e_extcˇ
)

2872 
macmode
 = 
AR_2040_JOINED_RX_CLEAR
;

2874 
macmode
 = 0;

2876 
	`REG_WRITE
(
ah
, 
AR_2040_MODE
, 
macmode
);

2877 
	}
}

2881 c⁄° 
©h_gí_timî_c⁄figuøti⁄
 
	ggí_tmr_c⁄figuøti⁄
[] =

2883 {
AR_NEXT_NDP_TIMER
, 
AR_NDP_PERIOD
, 
AR_TIMER_MODE
, 0x0080},

2884 {
AR_NEXT_NDP_TIMER
, 
AR_NDP_PERIOD
, 
AR_TIMER_MODE
, 0x0080},

2885 {
AR_NEXT_NDP_TIMER
, 
AR_NDP_PERIOD
, 
AR_TIMER_MODE
, 0x0080},

2886 {
AR_NEXT_NDP_TIMER
, 
AR_NDP_PERIOD
, 
AR_TIMER_MODE
, 0x0080},

2887 {
AR_NEXT_NDP_TIMER
, 
AR_NDP_PERIOD
, 
AR_TIMER_MODE
, 0x0080},

2888 {
AR_NEXT_NDP_TIMER
, 
AR_NDP_PERIOD
, 
AR_TIMER_MODE
, 0x0080},

2889 {
AR_NEXT_NDP_TIMER
, 
AR_NDP_PERIOD
, 
AR_TIMER_MODE
, 0x0080},

2890 {
AR_NEXT_NDP_TIMER
, 
AR_NDP_PERIOD
, 
AR_TIMER_MODE
, 0x0080},

2891 {
AR_NEXT_NDP2_TIMER
, 
AR_NDP2_PERIOD
, 
AR_NDP2_TIMER_MODE
, 0x0001},

2892 {
AR_NEXT_NDP2_TIMER
 + 1*4, 
AR_NDP2_PERIOD
 + 1*4,

2893 
AR_NDP2_TIMER_MODE
, 0x0002},

2894 {
AR_NEXT_NDP2_TIMER
 + 2*4, 
AR_NDP2_PERIOD
 + 2*4,

2895 
AR_NDP2_TIMER_MODE
, 0x0004},

2896 {
AR_NEXT_NDP2_TIMER
 + 3*4, 
AR_NDP2_PERIOD
 + 3*4,

2897 
AR_NDP2_TIMER_MODE
, 0x0008},

2898 {
AR_NEXT_NDP2_TIMER
 + 4*4, 
AR_NDP2_PERIOD
 + 4*4,

2899 
AR_NDP2_TIMER_MODE
, 0x0010},

2900 {
AR_NEXT_NDP2_TIMER
 + 5*4, 
AR_NDP2_PERIOD
 + 5*4,

2901 
AR_NDP2_TIMER_MODE
, 0x0020},

2902 {
AR_NEXT_NDP2_TIMER
 + 6*4, 
AR_NDP2_PERIOD
 + 6*4,

2903 
AR_NDP2_TIMER_MODE
, 0x0040},

2904 {
AR_NEXT_NDP2_TIMER
 + 7*4, 
AR_NDP2_PERIOD
 + 7*4,

2905 
AR_NDP2_TIMER_MODE
, 0x0080}

2910 
u32
 
	$©h9k_hw_gëtsf32
(
©h_hw
 *
ah
)

2912  
	`REG_READ
(
ah
, 
AR_TSF_L32
);

2913 
	}
}

2914 
EXPORT_SYMBOL
(
©h9k_hw_gëtsf32
);

2916 
©h_gí_timî
 *
©h_gí_timî_Æloc
(
©h_hw
 *
ah
,

2917 (*
åiggî
)(*),

2918 (*
ovîÊow
)(*),

2919 *
¨g
,

2920 
u8
 
timî_ödex
)

2922 
©h_gí_timî_èbÀ
 *
timî_èbÀ
 = &
ah
->
hw_gí_timîs
;

2923 
©h_gí_timî
 *
timî
;

2925 i‡((
timî_ödex
 < 
AR_FIRST_NDP_TIMER
) ||

2926 (
timî_ödex
 >
ATH_MAX_GEN_TIMER
))

2927  
NULL
;

2929 
timî
 = 
	`kzÆloc
((
©h_gí_timî
), 
GFP_KERNEL
);

2930 i‡(
timî
 =
NULL
)

2931  
NULL
;

2934 
timî_èbÀ
->
timîs
[
timî_ödex
] = 
timî
;

2935 
timî
->
ödex
 = 
timî_ödex
;

2936 
timî
->
åiggî
 =Årigger;

2937 
timî
->
ovîÊow
 = overflow;

2938 
timî
->
¨g
 =árg;

2940  
timî
;

2941 
	}
}

2942 
EXPORT_SYMBOL
(
©h_gí_timî_Æloc
);

2944 
	$©h9k_hw_gí_timî_°¨t
(
©h_hw
 *
ah
,

2945 
©h_gí_timî
 *
timî
,

2946 
u32
 
timî_√xt
,

2947 
u32
 
timî_≥riod
)

2949 
©h_gí_timî_èbÀ
 *
timî_èbÀ
 = &
ah
->
hw_gí_timîs
;

2950 
u32
 
mask
 = 0;

2952 
timî_èbÀ
->
timî_mask
 |
	`BIT
(
timî
->
ödex
);

2957 
	`REG_WRITE
(
ah
, 
gí_tmr_c⁄figuøti⁄
[
timî
->
ödex
].
√xt_addr
,

2958 
timî_√xt
);

2959 
	`REG_WRITE
(
ah
, 
gí_tmr_c⁄figuøti⁄
[
timî
->
ödex
].
≥riod_addr
,

2960 
timî_≥riod
);

2961 
	`REG_SET_BIT
(
ah
, 
gí_tmr_c⁄figuøti⁄
[
timî
->
ödex
].
mode_addr
,

2962 
gí_tmr_c⁄figuøti⁄
[
timî
->
ödex
].
mode_mask
);

2964 i‡(
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9565
(ah)) {

2970 i‡((
timî
->
ödex
 < 
AR_GEN_TIMER_BANK_1_LEN
))

2971 
	`REG_CLR_BIT
(
ah
, 
AR_MAC_PCU_GEN_TIMER_TSF_SEL
,

2972 (1 << 
timî
->
ödex
));

2974 
	`REG_SET_BIT
(
ah
, 
AR_MAC_PCU_GEN_TIMER_TSF_SEL
,

2975 (1 << 
timî
->
ödex
));

2978 i‡(
timî
->
åiggî
)

2979 
mask
 |
	`SM
(
	`AR_GENTMR_BIT
(
timî
->
ödex
),

2980 
AR_IMR_S5_GENTIMER_TRIG
);

2981 i‡(
timî
->
ovîÊow
)

2982 
mask
 |
	`SM
(
	`AR_GENTMR_BIT
(
timî
->
ödex
),

2983 
AR_IMR_S5_GENTIMER_THRESH
);

2985 
	`REG_SET_BIT
(
ah
, 
AR_IMR_S5
, 
mask
);

2987 i‡((
ah
->
imask
 & 
ATH9K_INT_GENTIMER
) == 0) {

2988 
ah
->
imask
 |
ATH9K_INT_GENTIMER
;

2989 
	`©h9k_hw_£t_öãºu±s
(
ah
);

2991 
	}
}

2992 
EXPORT_SYMBOL
(
©h9k_hw_gí_timî_°¨t
);

2994 
	$©h9k_hw_gí_timî_°›
(
©h_hw
 *
ah
, 
©h_gí_timî
 *
timî
)

2996 
©h_gí_timî_èbÀ
 *
timî_èbÀ
 = &
ah
->
hw_gí_timîs
;

2999 
	`REG_CLR_BIT
(
ah
, 
gí_tmr_c⁄figuøti⁄
[
timî
->
ödex
].
mode_addr
,

3000 
gí_tmr_c⁄figuøti⁄
[
timî
->
ödex
].
mode_mask
);

3002 i‡(
	`AR_SREV_9462
(
ah
Ë|| 
	`AR_SREV_9565
(ah)) {

3006 i‡((
timî
->
ödex
 >
AR_GEN_TIMER_BANK_1_LEN
)) {

3007 
	`REG_CLR_BIT
(
ah
, 
AR_MAC_PCU_GEN_TIMER_TSF_SEL
,

3008 (1 << 
timî
->
ödex
));

3013 
	`REG_CLR_BIT
(
ah
, 
AR_IMR_S5
,

3014 (
	`SM
(
	`AR_GENTMR_BIT
(
timî
->
ödex
), 
AR_IMR_S5_GENTIMER_THRESH
) |

3015 
	`SM
(
	`AR_GENTMR_BIT
(
timî
->
ödex
), 
AR_IMR_S5_GENTIMER_TRIG
)));

3017 
timî_èbÀ
->
timî_mask
 &~
	`BIT
(
timî
->
ödex
);

3019 i‡(
timî_èbÀ
->
timî_mask
 == 0) {

3020 
ah
->
imask
 &~
ATH9K_INT_GENTIMER
;

3021 
	`©h9k_hw_£t_öãºu±s
(
ah
);

3023 
	}
}

3024 
EXPORT_SYMBOL
(
©h9k_hw_gí_timî_°›
);

3026 
	$©h_gí_timî_‰ì
(
©h_hw
 *
ah
, 
©h_gí_timî
 *
timî
)

3028 
©h_gí_timî_èbÀ
 *
timî_èbÀ
 = &
ah
->
hw_gí_timîs
;

3031 
timî_èbÀ
->
timîs
[
timî
->
ödex
] = 
NULL
;

3032 
	`k‰ì
(
timî
);

3033 
	}
}

3034 
EXPORT_SYMBOL
(
©h_gí_timî_‰ì
);

3039 
	$©h_gí_timî_i§
(
©h_hw
 *
ah
)

3041 
©h_gí_timî_èbÀ
 *
timî_èbÀ
 = &
ah
->
hw_gí_timîs
;

3042 
©h_gí_timî
 *
timî
;

3043 
åiggî_mask
, 
thªsh_mask
;

3044 
ödex
;

3047 
åiggî_mask
 = 
ah
->
öå_gí_timî_åiggî
;

3048 
thªsh_mask
 = 
ah
->
öå_gí_timî_thªsh
;

3049 
åiggî_mask
 &
timî_èbÀ
->
timî_mask
;

3050 
thªsh_mask
 &
timî_èbÀ
->
timî_mask
;

3052 
	`f‹_óch_£t_bô
(
ödex
, &
thªsh_mask
, 
	`ARRAY_SIZE
(
timî_èbÀ
->
timîs
)) {

3053 
timî
 = 
timî_èbÀ
->
timîs
[
ödex
];

3054 i‡(!
timî
)

3056 i‡(!
timî
->
ovîÊow
)

3059 
åiggî_mask
 &~
	`BIT
(
ödex
);

3060 
timî
->
	`ovîÊow
—imî->
¨g
);

3063 
	`f‹_óch_£t_bô
(
ödex
, &
åiggî_mask
, 
	`ARRAY_SIZE
(
timî_èbÀ
->
timîs
)) {

3064 
timî
 = 
timî_èbÀ
->
timîs
[
ödex
];

3065 i‡(!
timî
)

3067 i‡(!
timî
->
åiggî
)

3069 
timî
->
	`åiggî
—imî->
¨g
);

3071 
	}
}

3072 
EXPORT_SYMBOL
(
©h_gí_timî_i§
);

3079 
u32
 
	mvîsi⁄
;

3080 c⁄° * 
	m«me
;

3081 } 
	g©h_mac_bb_«mes
[] = {

3083 { 
AR_SREV_VERSION_5416_PCI
, "5416" },

3084 { 
AR_SREV_VERSION_5416_PCIE
, "5418" },

3085 { 
AR_SREV_VERSION_9100
, "9100" },

3086 { 
AR_SREV_VERSION_9160
, "9160" },

3088 { 
AR_SREV_VERSION_9280
, "9280" },

3089 { 
AR_SREV_VERSION_9285
, "9285" },

3090 { 
AR_SREV_VERSION_9287
, "9287" },

3091 { 
AR_SREV_VERSION_9271
, "9271" },

3092 { 
AR_SREV_VERSION_9300
, "9300" },

3093 { 
AR_SREV_VERSION_9330
, "9330" },

3094 { 
AR_SREV_VERSION_9340
, "9340" },

3095 { 
AR_SREV_VERSION_9485
, "9485" },

3096 { 
AR_SREV_VERSION_9462
, "9462" },

3097 { 
AR_SREV_VERSION_9550
, "9550" },

3098 { 
AR_SREV_VERSION_9565
, "9565" },

3099 { 
AR_SREV_VERSION_9531
, "9531" },

3104 
u16
 
	mvîsi⁄
;

3105 c⁄° * 
	m«me
;

3106 } 
	g©h_rf_«mes
[] = {

3108 { 
AR_RAD5133_SREV_MAJOR
, "5133" },

3109 { 
AR_RAD5122_SREV_MAJOR
, "5122" },

3110 { 
AR_RAD2133_SREV_MAJOR
, "2133" },

3111 { 
AR_RAD2122_SREV_MAJOR
, "2122" }

3117 c⁄° *
	$©h9k_hw_mac_bb_«me
(
u32
 
mac_bb_vîsi⁄
)

3119 
i
;

3121 
i
=0; i<
	`ARRAY_SIZE
(
©h_mac_bb_«mes
); i++) {

3122 i‡(
©h_mac_bb_«mes
[
i
].
vîsi⁄
 =
mac_bb_vîsi⁄
) {

3123  
©h_mac_bb_«mes
[
i
].
«me
;

3128 
	}
}

3134 c⁄° *
	$©h9k_hw_rf_«me
(
u16
 
rf_vîsi⁄
)

3136 
i
;

3138 
i
=0; i<
	`ARRAY_SIZE
(
©h_rf_«mes
); i++) {

3139 i‡(
©h_rf_«mes
[
i
].
vîsi⁄
 =
rf_vîsi⁄
) {

3140  
©h_rf_«mes
[
i
].
«me
;

3145 
	}
}

3147 
	$©h9k_hw_«me
(
©h_hw
 *
ah
, *
hw_«me
, 
size_t
 
Àn
)

3149 
u£d
;

3152 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
)) {

3153 
u£d
 = 
	`s˙¥ötf
(
hw_«me
, 
Àn
,

3155 
	`©h9k_hw_mac_bb_«me
(
ah
->
hw_vîsi⁄
.
macVîsi⁄
),

3156 
ah
->
hw_vîsi⁄
.
macRev
);

3159 
u£d
 = 
	`s˙¥ötf
(
hw_«me
, 
Àn
,

3161 
	`©h9k_hw_mac_bb_«me
(
ah
->
hw_vîsi⁄
.
macVîsi⁄
),

3162 
ah
->
hw_vîsi⁄
.
macRev
,

3163 
	`©h9k_hw_rf_«me
((
ah
->
hw_vîsi⁄
.
™Æog5GhzRev


3164 & 
AR_RADIO_SREV_MAJOR
)),

3165 
ah
->
hw_vîsi⁄
.
phyRev
);

3168 
hw_«me
[
u£d
] = '\0';

3169 
	}
}

3170 
EXPORT_SYMBOL
(
©h9k_hw_«me
);

	@hw.h

17 #i‚de‡
HW_H


18 
	#HW_H


	)

20 
	~<löux/if_ëhî.h
>

21 
	~<löux/dñay.h
>

22 
	~<löux/io.h
>

23 
	~<löux/fúmw¨e.h
>

25 
	~"mac.h
"

26 
	~"™i.h
"

27 
	~"ì¥om.h
"

28 
	~"ˇlib.h
"

29 
	~"ªg.h
"

30 
	~"phy.h
"

31 
	~"btc€x.h
"

33 
	~"../ªgd.h
"

35 
	#ATHEROS_VENDOR_ID
 0x168c

	)

37 
	#AR9300_DEVID_INVALID
 0xabcd

	)

38 
	#AR5416_DEVID_PCI
 0x0023

	)

39 
	#AR5416_DEVID_PCIE
 0x0024

	)

40 
	#AR9160_DEVID_PCI
 0x0027

	)

41 
	#AR9280_DEVID_PCI
 0x0029

	)

42 
	#AR9280_DEVID_PCIE
 0x002a

	)

43 
	#AR9285_DEVID_PCIE
 0x002b

	)

44 
	#AR2427_DEVID_PCIE
 0x002c

	)

45 
	#AR9287_DEVID_PCI
 0x002d

	)

46 
	#AR9287_DEVID_PCIE
 0x002e

	)

47 
	#AR9300_DEVID_PCIE
 0x0030

	)

48 
	#AR9300_DEVID_AR9340
 0x0031

	)

49 
	#AR9300_DEVID_AR9485_PCIE
 0x0032

	)

50 
	#AR9300_DEVID_AR9580
 0x0033

	)

51 
	#AR9300_DEVID_AR9462
 0x0034

	)

52 
	#AR9300_DEVID_AR9330
 0x0035

	)

53 
	#AR9300_DEVID_QCA955X
 0x0038

	)

54 
	#AR9485_DEVID_AR1111
 0x0037

	)

55 
	#AR9300_DEVID_AR9565
 0x0036

	)

56 
	#AR9300_DEVID_AR953X
 0x003d

	)

58 
	#AR5416_AR9100_DEVID
 0x000b

	)

60 
	#AR_SUBVENDOR_ID_NOG
 0x0e11

	)

61 
	#AR_SUBVENDOR_ID_NEW_A
 0x7065

	)

62 
	#AR5416_MAGIC
 0x19641014

	)

64 
	#AR9280_COEX2WIRE_SUBSYSID
 0x309b

	)

65 
	#AT9285_COEX3WIRE_SA_SUBSYSID
 0x30Ø

	)

66 
	#AT9285_COEX3WIRE_DA_SUBSYSID
 0x30ab

	)

68 
	#ATH_AMPDU_LIMIT_MAX
 (64 * 1024 - 1)

	)

70 
	#ATH_DEFAULT_NOISE_FLOOR
 -95

	)

72 
	#ATH9K_RSSI_BAD
 -128

	)

74 
	#ATH9K_NUM_CHANNELS
 38

	)

77 
	#REG_WRITE
(
_ah
, 
_ªg
, 
_vÆ
) \

78 (
_ah
)->
ªg_›s
.
	`wrôe
((_ah), (
_vÆ
), (
_ªg
))

	)

80 
	#REG_READ
(
_ah
, 
_ªg
) \

81 (
_ah
)->
ªg_›s
.
	`ªad
((_ah), (
_ªg
))

	)

83 
	#REG_READ_MULTI
(
_ah
, 
_addr
, 
_vÆ
, 
_˙t
) \

84 (
_ah
)->
ªg_›s
.
	`mu…i_ªad
((_ah), (
_addr
), (
_vÆ
), (
_˙t
))

	)

86 
	#REG_RMW
(
_ah
, 
_ªg
, 
_£t
, 
_˛r
) \

87 (
_ah
)->
ªg_›s
.
	`rmw
((_ah), (
_ªg
), (
_£t
), (
_˛r
))

	)

89 
	#ENABLE_REGWRITE_BUFFER
(
_ah
) \

91 i‡((
_ah
)->
ªg_›s
.
íabÀ_wrôe_buf„r
) \

92 (
_ah
)->
ªg_›s
.
	`íabÀ_wrôe_buf„r
((_ah)); \

93 } 0)

	)

95 
	#REGWRITE_BUFFER_FLUSH
(
_ah
) \

97 i‡((
_ah
)->
ªg_›s
.
wrôe_Êush
) \

98 (
_ah
)->
ªg_›s
.
	`wrôe_Êush
((_ah)); \

99 } 0)

	)

101 
	#PR_EEP
(
_s
, 
_vÆ
) \

103 
Àn
 +
	`s˙¥ötf
(
buf
 +Üí, 
size
 -Üen, "%20s : %10d\n",\

104 
_s
, (
_vÆ
)); \

105 } 0)

	)

107 
	#SM
(
_v
, 
_f
Ë(((_vË<< _f##
_S
Ë& _f)

	)

108 
	#MS
(
_v
, 
_f
Ë(((_vË& _fË>> _f##
_S
)

	)

109 
	#REG_RMW_FIELD
(
_a
, 
_r
, 
_f
, 
_v
) \

110 
	`REG_RMW
(
_a
, 
_r
, (((
_v
Ë<< 
_f
##
_S
Ë& _f), (_f))

	)

111 
	#REG_READ_FIELD
(
_a
, 
_r
, 
_f
) \

112 (((
	`REG_READ
(
_a
, 
_r
Ë& 
_f
Ë>> _f##
_S
))

	)

113 
	#REG_SET_BIT
(
_a
, 
_r
, 
_f
) \

114 
	`REG_RMW
(
_a
, 
_r
, (
_f
), 0)

	)

115 
	#REG_CLR_BIT
(
_a
, 
_r
, 
_f
) \

116 
	`REG_RMW
(
_a
, 
_r
, 0, (
_f
))

	)

118 
	#DO_DELAY
(
x
) do { \

119 i‡(((++(
x
) % 64) == 0) && \

120 (
	`©h9k_hw_comm⁄
(
ah
)->
bus_›s
->
©h_bus_ty≥
 \

121 !
ATH_USB
)) \

122 
	`udñay
(1); \

123 } 0)

	)

125 
	#REG_WRITE_ARRAY
(
öüºay
, 
cﬁumn
, 
ªgWr
) \

126 
	`©h9k_hw_wrôe_¨øy
(
ah
, 
öüºay
, 
cﬁumn
, &(
ªgWr
))

	)

128 
	#AR_GPIO_OUTPUT_MUX_AS_OUTPUT
 0

	)

129 
	#AR_GPIO_OUTPUT_MUX_AS_PCIE_ATTENTION_LED
 1

	)

130 
	#AR_GPIO_OUTPUT_MUX_AS_PCIE_POWER_LED
 2

	)

131 
	#AR_GPIO_OUTPUT_MUX_AS_TX_FRAME
 3

	)

132 
	#AR_GPIO_OUTPUT_MUX_AS_RX_CLEAR_EXTERNAL
 4

	)

133 
	#AR_GPIO_OUTPUT_MUX_AS_MAC_NETWORK_LED
 5

	)

134 
	#AR_GPIO_OUTPUT_MUX_AS_MAC_POWER_LED
 6

	)

135 
	#AR_GPIO_OUTPUT_MUX_AS_MCI_WLAN_DATA
 0x16

	)

136 
	#AR_GPIO_OUTPUT_MUX_AS_MCI_WLAN_CLK
 0x17

	)

137 
	#AR_GPIO_OUTPUT_MUX_AS_MCI_BT_DATA
 0x18

	)

138 
	#AR_GPIO_OUTPUT_MUX_AS_MCI_BT_CLK
 0x19

	)

139 
	#AR_GPIO_OUTPUT_MUX_AS_WL_IN_TX
 0x14

	)

140 
	#AR_GPIO_OUTPUT_MUX_AS_WL_IN_RX
 0x13

	)

141 
	#AR_GPIO_OUTPUT_MUX_AS_BT_IN_TX
 9

	)

142 
	#AR_GPIO_OUTPUT_MUX_AS_BT_IN_RX
 8

	)

143 
	#AR_GPIO_OUTPUT_MUX_AS_RUCKUS_STROBE
 0x1d

	)

144 
	#AR_GPIO_OUTPUT_MUX_AS_RUCKUS_DATA
 0x1e

	)

146 
	#AR_GPIOD_MASK
 0x00001FFF

	)

147 
	#AR_GPIO_BIT
(
_gpio
Ë(1 << (_gpio))

	)

149 
	#BASE_ACTIVATE_DELAY
 100

	)

150 
	#RTC_PLL_SETTLE_DELAY
 (
	`AR_SREV_9340
(
ah
Ë? 1000 : 100)

	)

151 
	#COEF_SCALE_S
 24

	)

152 
	#HT40_CHANNEL_CENTER_SHIFT
 10

	)

154 
	#ATH9K_ANTENNA0_CHAINMASK
 0x1

	)

155 
	#ATH9K_ANTENNA1_CHAINMASK
 0x2

	)

157 
	#ATH9K_NUM_DMA_DEBUG_REGS
 8

	)

158 
	#ATH9K_NUM_QUEUES
 10

	)

160 
	#MAX_RATE_POWER
 63

	)

161 
	#AH_WAIT_TIMEOUT
 100000

	)

162 
	#AH_TSF_WRITE_TIMEOUT
 100

	)

163 
	#AH_TIME_QUANTUM
 10

	)

164 
	#AR_KEYTABLE_SIZE
 128

	)

165 
	#POWER_UP_TIME
 10000

	)

166 
	#SPUR_RSSI_THRESH
 40

	)

167 
	#UPPER_5G_SUB_BAND_START
 5700

	)

168 
	#MID_5G_SUB_BAND_START
 5400

	)

170 
	#CAB_TIMEOUT_VAL
 10

	)

171 
	#BEACON_TIMEOUT_VAL
 10

	)

172 
	#MIN_BEACON_TIMEOUT_VAL
 1

	)

173 
	#SLEEP_SLOP
 
	`TU_TO_USEC
(3)

	)

175 
	#INIT_CONFIG_STATUS
 0x00000000

	)

176 
	#INIT_RSSI_THR
 0x00000700

	)

177 
	#INIT_BCON_CNTRL_REG
 0x00000000

	)

179 
	#TU_TO_USEC
(
_tu
Ë((_tuË<< 10)

	)

181 
	#ATH9K_HW_RX_HP_QDEPTH
 16

	)

182 
	#ATH9K_HW_RX_LP_QDEPTH
 128

	)

184 
	#PAPRD_GAIN_TABLE_ENTRIES
 32

	)

185 
	#PAPRD_TABLE_SZ
 24

	)

186 
	#PAPRD_IDEAL_AGC2_PWR_RANGE
 0xe0

	)

193 
	#KAL_FRAME_LEN
 28

	)

194 
	#KAL_FRAME_TYPE
 0x2

	)

195 
	#KAL_FRAME_SUB_TYPE
 0x4

	)

196 
	#KAL_DURATION_ID
 0x3d

	)

197 
	#KAL_NUM_DATA_WORDS
 6

	)

198 
	#KAL_NUM_DESC_WORDS
 12

	)

199 
	#KAL_ANTENNA_MODE
 1

	)

200 
	#KAL_TO_DS
 1

	)

201 
	#KAL_DELAY
 4

	)

202 
	#KAL_TIMEOUT
 900

	)

204 
	#MAX_PATTERN_SIZE
 256

	)

205 
	#MAX_PATTERN_MASK_SIZE
 32

	)

206 
	#MAX_NUM_PATTERN
 8

	)

207 
	#MAX_NUM_USER_PATTERN
 6

	)

214 
	#AH_WOW_USER_PATTERN_EN
 
	`BIT
(0)

	)

215 
	#AH_WOW_MAGIC_PATTERN_EN
 
	`BIT
(1)

	)

216 
	#AH_WOW_LINK_CHANGE
 
	`BIT
(2)

	)

217 
	#AH_WOW_BEACON_MISS
 
	`BIT
(3)

	)

219 
	e©h_hw_txq_subty≥
 {

220 
	mATH_TXQ_AC_BK
 = 0,

221 
	mATH_TXQ_AC_BE
 = 1,

222 
	mATH_TXQ_AC_VI
 = 2,

223 
	mATH_TXQ_AC_VO
 = 3,

226 
	e©h_öi_subsys
 {

227 
	mATH_INI_PRE
 = 0,

228 
	mATH_INI_CORE
,

229 
	mATH_INI_POST
,

230 
	mATH_INI_NUM_SPLIT
,

233 
	e©h9k_hw_ˇps
 {

234 
	mATH9K_HW_CAP_HT
 = 
BIT
(0),

235 
	mATH9K_HW_CAP_RFSILENT
 = 
BIT
(1),

236 
	mATH9K_HW_CAP_AUTOSLEEP
 = 
BIT
(2),

237 
	mATH9K_HW_CAP_4KB_SPLITTRANS
 = 
BIT
(3),

238 
	mATH9K_HW_CAP_EDMA
 = 
BIT
(4),

239 
	mATH9K_HW_CAP_RAC_SUPPORTED
 = 
BIT
(5),

240 
	mATH9K_HW_CAP_LDPC
 = 
BIT
(6),

241 
	mATH9K_HW_CAP_FASTCLOCK
 = 
BIT
(7),

242 
	mATH9K_HW_CAP_SGI_20
 = 
BIT
(8),

243 
	mATH9K_HW_CAP_ANT_DIV_COMB
 = 
BIT
(10),

244 
	mATH9K_HW_CAP_2GHZ
 = 
BIT
(11),

245 
	mATH9K_HW_CAP_5GHZ
 = 
BIT
(12),

246 
	mATH9K_HW_CAP_APM
 = 
BIT
(13),

247 #ifde‡
CPTCFG_ATH9K_PCOEM


248 
	mATH9K_HW_CAP_RTT
 = 
BIT
(14),

249 
	mATH9K_HW_CAP_MCI
 = 
BIT
(15),

250 
	mATH9K_HW_WOW_DEVICE_CAPABLE
 = 
BIT
(16),

251 
	mATH9K_HW_CAP_BT_ANT_DIV
 = 
BIT
(17),

253 
	mATH9K_HW_CAP_RTT
 = 0,

254 
	mATH9K_HW_CAP_MCI
 = 0,

255 
	mATH9K_HW_WOW_DEVICE_CAPABLE
 = 0,

256 
	mATH9K_HW_CAP_BT_ANT_DIV
 = 0,

258 
	mATH9K_HW_CAP_DFS
 = 
BIT
(18),

259 
	mATH9K_HW_CAP_PAPRD
 = 
BIT
(19),

260 
	mATH9K_HW_CAP_FCC_BAND_SWITCH
 = 
BIT
(20),

274 
	s©h9k_hw_ˇ∑bûôõs
 {

275 
u32
 
	mhw_ˇps
;

276 
u16
 
	mπs_aggr_limô
;

277 
u8
 
	mtx_chaömask
;

278 
u8
 
	mrx_chaömask
;

279 
u8
 
	mmax_txchaös
;

280 
u8
 
	mmax_rxchaös
;

281 
u8
 
	mnum_gpio_pös
;

282 
u8
 
	mrx_hp_qdïth
;

283 
u8
 
	mrx_Õ_qdïth
;

284 
u8
 
	mrx_°©us_Àn
;

285 
u8
 
	mtx_desc_Àn
;

286 
u8
 
	mtxs_Àn
;

289 
	#AR_NO_SPUR
 0x8000

	)

290 
	#AR_BASE_FREQ_2GHZ
 2300

	)

291 
	#AR_BASE_FREQ_5GHZ
 4900

	)

292 
	#AR_SPUR_FEEQ_BOUND_HT40
 19

	)

293 
	#AR_SPUR_FEEQ_BOUND_HT20
 10

	)

295 
	e©h9k_hw_h™g_checks
 {

296 
	mHW_BB_WATCHDOG
 = 
BIT
(0),

297 
	mHW_PHYRESTART_CLC_WAR
 = 
BIT
(1),

298 
	mHW_BB_RIFS_HANG
 = 
BIT
(2),

299 
	mHW_BB_DFS_HANG
 = 
BIT
(3),

300 
	mHW_BB_RX_CLEAR_STUCK_HANG
 = 
BIT
(4),

301 
	mHW_MAC_HANG
 = 
BIT
(5),

304 
	s©h9k_›s_c⁄fig
 {

305 
	mdma_bóc⁄_ª•⁄£_time
;

306 
	msw_bóc⁄_ª•⁄£_time
;

307 
u32
 
	mcwm_ign‹e_extcˇ
;

308 
u32
 
	mpcõ_w´n
;

309 
u8
 
	m™Æog_shi·ªg
;

310 
u32
 
	mofdm_åig_low
;

311 
u32
 
	mofdm_åig_high
;

312 
u32
 
	mcck_åig_high
;

313 
u32
 
	mcck_åig_low
;

314 
u32
 
	míabÀ_∑¥d
;

315 
	m£rülize_ªgmode
;

316 
boﬁ
 
	mrx_öå_môig©i⁄
;

317 
boﬁ
 
	mtx_öå_môig©i⁄
;

318 
u8
 
	mmax_txåig_Àvñ
;

319 
u16
 
	m™i_pﬁl_öãrvÆ
;

320 
u16
 
	mhw_h™g_checks
;

321 
u16
 
	mrimt_fú°
;

322 
u16
 
	mrimt_œ°
;

325 
u32
 
	ma•m_l1_fix
;

326 
u32
 
	mx a_gpio
;

327 
u32
 
	m™t_˘æ_comm2g_swôch_íabÀ
;

328 
boﬁ
 
	mx©ãn_m¨gö_cfg
;

329 
boﬁ
 
	mÆt_mögaöidx
;

330 
boﬁ
 
	mno_∂l_pwrßve
;

331 
boﬁ
 
	mtx_gaö_bufÁlo
;

334 
	e©h9k_öt
 {

335 
	mATH9K_INT_RX
 = 0x00000001,

336 
	mATH9K_INT_RXDESC
 = 0x00000002,

337 
	mATH9K_INT_RXHP
 = 0x00000001,

338 
	mATH9K_INT_RXLP
 = 0x00000002,

339 
	mATH9K_INT_RXNOFRM
 = 0x00000008,

340 
	mATH9K_INT_RXEOL
 = 0x00000010,

341 
	mATH9K_INT_RXORN
 = 0x00000020,

342 
	mATH9K_INT_TX
 = 0x00000040,

343 
	mATH9K_INT_TXDESC
 = 0x00000080,

344 
	mATH9K_INT_TIM_TIMER
 = 0x00000100,

345 
	mATH9K_INT_MCI
 = 0x00000200,

346 
	mATH9K_INT_BB_WATCHDOG
 = 0x00000400,

347 
	mATH9K_INT_TXURN
 = 0x00000800,

348 
	mATH9K_INT_MIB
 = 0x00001000,

349 
	mATH9K_INT_RXPHY
 = 0x00004000,

350 
	mATH9K_INT_RXKCM
 = 0x00008000,

351 
	mATH9K_INT_SWBA
 = 0x00010000,

352 
	mATH9K_INT_BMISS
 = 0x00040000,

353 
	mATH9K_INT_BNR
 = 0x00100000,

354 
	mATH9K_INT_TIM
 = 0x00200000,

355 
	mATH9K_INT_DTIM
 = 0x00400000,

356 
	mATH9K_INT_DTIMSYNC
 = 0x00800000,

357 
	mATH9K_INT_GPIO
 = 0x01000000,

358 
	mATH9K_INT_CABEND
 = 0x02000000,

359 
	mATH9K_INT_TSFOOR
 = 0x04000000,

360 
	mATH9K_INT_GENTIMER
 = 0x08000000,

361 
	mATH9K_INT_CST
 = 0x10000000,

362 
	mATH9K_INT_GTT
 = 0x20000000,

363 
	mATH9K_INT_FATAL
 = 0x40000000,

364 
	mATH9K_INT_GLOBAL
 = 0x80000000,

365 
	mATH9K_INT_BMISC
 = 
ATH9K_INT_TIM
 |

366 
ATH9K_INT_DTIM
 |

367 
ATH9K_INT_DTIMSYNC
 |

368 
ATH9K_INT_TSFOOR
 |

369 
ATH9K_INT_CABEND
,

370 
	mATH9K_INT_COMMON
 = 
ATH9K_INT_RXNOFRM
 |

371 
ATH9K_INT_RXDESC
 |

372 
ATH9K_INT_RXEOL
 |

373 
ATH9K_INT_RXORN
 |

374 
ATH9K_INT_TXURN
 |

375 
ATH9K_INT_TXDESC
 |

376 
ATH9K_INT_MIB
 |

377 
ATH9K_INT_RXPHY
 |

378 
ATH9K_INT_RXKCM
 |

379 
ATH9K_INT_SWBA
 |

380 
ATH9K_INT_BMISS
 |

381 
ATH9K_INT_GPIO
,

382 
	mATH9K_INT_NOCARD
 = 0xffffffff

385 
	#MAX_RTT_TABLE_ENTRY
 6

	)

386 
	#MAX_IQCAL_MEASUREMENT
 8

	)

387 
	#MAX_CL_TAB_ENTRY
 16

	)

388 
	#CL_TAB_ENTRY
(
ªg_ba£
Ë‘eg_ba£ + (4 * 
j
))

	)

390 
	e©h9k_ˇl_Êags
 {

391 
	mRTT_DONE
,

392 
	mPAPRD_PACKET_SENT
,

393 
	mPAPRD_DONE
,

394 
	mNFCAL_PENDING
,

395 
	mNFCAL_INTF
,

396 
	mTXIQCAL_DONE
,

397 
	mTXCLCAL_DONE
,

398 
	mSW_PKDET_DONE
,

401 
	s©h9k_hw_ˇl_d©a
 {

402 
u16
 
	mch™√l
;

403 
u16
 
	mch™√lFœgs
;

404 
	mˇl_Êags
;

405 
öt32_t
 
	mCÆVÆid
;

406 
öt8_t
 
	miCoff
;

407 
öt8_t
 
	mqCoff
;

408 
u8
 
	mˇldac
[2];

409 
u16
 
	msmÆl_sig«l_gaö
[
AR9300_MAX_CHAINS
];

410 
u32
 
	m∑_èbÀ
[
AR9300_MAX_CHAINS
][
PAPRD_TABLE_SZ
];

411 
u32
 
	mnum_mósuªs
[
AR9300_MAX_CHAINS
];

412 
	mtx_c‹r_c€ff
[
MAX_IQCAL_MEASUREMENT
][
AR9300_MAX_CHAINS
];

413 
u32
 
	mtx_˛ˇl
[
AR9300_MAX_CHAINS
][
MAX_CL_TAB_ENTRY
];

414 
u32
 
	mπt_èbÀ
[
AR9300_MAX_CHAINS
][
MAX_RTT_TABLE_ENTRY
];

415 
©h9k_nfˇl_hi°
 
	mnfCÆHi°
[
NUM_NF_READINGS
];

418 
	s©h9k_ch™√l
 {

419 
õì80211_ch™√l
 *
	mch™
;

420 
u16
 
	mch™√l
;

421 
u16
 
	mch™√lFœgs
;

422 
s16
 
	mnoi£Êo‹
;

425 
	#CHANNEL_5GHZ
 
	`BIT
(0)

	)

426 
	#CHANNEL_HALF
 
	`BIT
(1)

	)

427 
	#CHANNEL_QUARTER
 
	`BIT
(2)

	)

428 
	#CHANNEL_HT
 
	`BIT
(3)

	)

429 
	#CHANNEL_HT40PLUS
 
	`BIT
(4)

	)

430 
	#CHANNEL_HT40MINUS
 
	`BIT
(5)

	)

432 
	#IS_CHAN_5GHZ
(
_c
Ë(!!((_c)->
ch™√lFœgs
 & 
CHANNEL_5GHZ
))

	)

433 
	#IS_CHAN_2GHZ
(
_c
Ë(!
	`IS_CHAN_5GHZ
(_c))

	)

435 
	#IS_CHAN_HALF_RATE
(
_c
Ë(!!((_c)->
ch™√lFœgs
 & 
CHANNEL_HALF
))

	)

436 
	#IS_CHAN_QUARTER_RATE
(
_c
Ë(!!((_c)->
ch™√lFœgs
 & 
CHANNEL_QUARTER
))

	)

437 
	#IS_CHAN_A_FAST_CLOCK
(
_ah
, 
_c
) \

438 (
	`IS_CHAN_5GHZ
(
_c
Ë&& ((
_ah
)->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_FASTCLOCK
))

	)

440 
	#IS_CHAN_HT
(
_c
Ë((_c)->
ch™√lFœgs
 & 
CHANNEL_HT
)

	)

442 
	#IS_CHAN_HT20
(
_c
Ë(
	`IS_CHAN_HT
(_cË&& !
	`IS_CHAN_HT40
(_c))

	)

444 
	#IS_CHAN_HT40
(
_c
) \

445 (!!((
_c
)->
ch™√lFœgs
 & (
CHANNEL_HT40PLUS
 | 
CHANNEL_HT40MINUS
)))

	)

447 
	#IS_CHAN_HT40PLUS
(
_c
Ë((_c)->
ch™√lFœgs
 & 
CHANNEL_HT40PLUS
)

	)

448 
	#IS_CHAN_HT40MINUS
(
_c
Ë((_c)->
ch™√lFœgs
 & 
CHANNEL_HT40MINUS
)

	)

450 
	e©h9k_powî_mode
 {

451 
	mATH9K_PM_AWAKE
 = 0,

452 
	mATH9K_PM_FULL_SLEEP
,

453 
	mATH9K_PM_NETWORK_SLEEP
,

454 
	mATH9K_PM_UNDEFINED


457 
	e£r_ªg_mode
 {

458 
	mSER_REG_MODE_OFF
 = 0,

459 
	mSER_REG_MODE_ON
 = 1,

460 
	mSER_REG_MODE_AUTO
 = 2,

463 
	e©h9k_rx_qty≥
 {

464 
	mATH9K_RX_QUEUE_HP
,

465 
	mATH9K_RX_QUEUE_LP
,

466 
	mATH9K_RX_QUEUE_MAX
,

469 
	s©h9k_bóc⁄_°©e
 {

470 
u32
 
	mbs_√xâbâ
;

471 
u32
 
	mbs_√xtdtim
;

472 
u32
 
	mbs_ötvÆ
;

473 
	#ATH9K_TSFOOR_THRESHOLD
 0x00004240

	)

474 
u32
 
	mbs_dtim≥riod
;

475 
u16
 
	mbs_bmis°hªshﬁd
;

476 
u32
 
	mbs_¶ìpduøti⁄
;

477 
u32
 
	mbs_tsfo‹_thªshﬁd
;

480 
	sch™_˚¡îs
 {

481 
u16
 
	msy¡h_˚¡î
;

482 
u16
 
	m˘l_˚¡î
;

483 
u16
 
	mext_˚¡î
;

487 
	mATH9K_RESET_POWER_ON
,

488 
	mATH9K_RESET_WARM
,

489 
	mATH9K_RESET_COLD
,

493 
	mATH_DIAG_DISABLE_RX
,

494 
	mATH_DIAG_DISABLE_TX
,

495 
	mATH_DIAG_TRIGGER_ERROR
,

498 
	s©h9k_hw_vîsi⁄
 {

499 
u32
 
	mmagic
;

500 
u16
 
	mdevid
;

501 
u16
 
	msubvíd‹id
;

502 
u32
 
	mmacVîsi⁄
;

503 
u16
 
	mmacRev
;

504 
u16
 
	mphyRev
;

505 
u16
 
	m™Æog5GhzRev
;

506 
u16
 
	m™Æog2GhzRev
;

507 
©h_usb_dev
 
	musbdev
;

512 
	#ATH_MAX_GEN_TIMER
 16

	)

514 
	#AR_GENTMR_BIT
(
_ödex
Ë(1 << (_ödex))

	)

516 
	s©h_gí_timî_c⁄figuøti⁄
 {

517 
u32
 
	m√xt_addr
;

518 
u32
 
	m≥riod_addr
;

519 
u32
 
	mmode_addr
;

520 
u32
 
	mmode_mask
;

523 
	s©h_gí_timî
 {

524 (*
	måiggî
)(*
	m¨g
);

525 (*
	movîÊow
)(*
	m¨g
);

526 *
	m¨g
;

527 
u8
 
	mödex
;

530 
	s©h_gí_timî_èbÀ
 {

531 
©h_gí_timî
 *
	mtimîs
[
ATH_MAX_GEN_TIMER
];

532 
u16
 
	mtimî_mask
;

535 
	s©h_hw_™tcomb_c⁄f
 {

536 
u8
 
	mmaö_ a_c⁄f
;

537 
u8
 
	mÆt_ a_c⁄f
;

538 
u8
 
	mÁ°_div_büs
;

539 
u8
 
	mmaö_gaötb
;

540 
u8
 
	mÆt_gaötb
;

541 
	m a1_ a2_dñè
;

542 
	m a1_ a2_swôch_dñè
;

543 
u8
 
	mdiv_group
;

566 
	s©h_hw_ød¨_c⁄f
 {

567 
	mpul£_öb™d
;

568 
	mpul£_öb™d_°ï
;

569 
	mpul£_height
;

570 
	mpul£_rssi
;

571 
	mpul£_maxÀn
;

573 
	mød¨_rssi
;

574 
	mød¨_öb™d
;

575 
	mfú_powî
;

577 
boﬁ
 
	mext_ch™√l
;

602 
	s©h_hw_¥iv©e_›s
 {

603 (*
	möô_h™g_checks
)(
©h_hw
 *
	mah
);

604 
boﬁ
 (*
dëe˘_mac_h™g
)(
©h_hw
 *
	mah
);

605 
boﬁ
 (*
dëe˘_bb_h™g
)(
©h_hw
 *
	mah
);

608 (*
	möô_ˇl_£âögs
)(
©h_hw
 *
	mah
);

609 
boﬁ
 (*
öô_ˇl
)(
©h_hw
 *
	mah
, 
©h9k_ch™√l
 *
	mch™
);

611 (*
	möô_mode_gaö_ªgs
)(
©h_hw
 *
	mah
);

612 (*
	m£tup_ˇlibøti⁄
)(
©h_hw
 *
	mah
,

613 
©h9k_ˇl_li°
 *
	mcuºCÆ
);

616 (*
	mrf_£t_‰eq
)(
©h_hw
 *
	mah
,

617 
©h9k_ch™√l
 *
	mch™
);

618 (*
	m•ur_môig©e_‰eq
)(
©h_hw
 *
	mah
,

619 
©h9k_ch™√l
 *
	mch™
);

620 
boﬁ
 (*
£t_rf_ªgs
)(
©h_hw
 *
	mah
,

621 
©h9k_ch™√l
 *
	mch™
,

622 
u16
 
	mmodesIndex
);

623 (*
	m£t_ch™√l_ªgs
)(
©h_hw
 *
	mah
, 
©h9k_ch™√l
 *
	mch™
);

624 (*
	möô_bb
)(
©h_hw
 *
	mah
,

625 
©h9k_ch™√l
 *
	mch™
);

626 (*
	m¥o˚ss_öi
)(
©h_hw
 *
	mah
, 
©h9k_ch™√l
 *
	mch™
);

627 (*
	mﬁc_öô
)(
©h_hw
 *
	mah
);

628 (*
	m£t_rfmode
)(
©h_hw
 *
	mah
, 
©h9k_ch™√l
 *
	mch™
);

629 (*
	mm¨k_phy_öa˘ive
)(
©h_hw
 *
	mah
);

630 (*
	m£t_dñè_¶›e
)(
©h_hw
 *
	mah
, 
©h9k_ch™√l
 *
	mch™
);

631 
boﬁ
 (*
rfbus_ªq
)(
©h_hw
 *
	mah
);

632 (*
	mrfbus_d⁄e
)(
©h_hw
 *
	mah
);

633 (*
	mª°‹e_chaömask
)(
©h_hw
 *
	mah
);

634 
u32
 (*
compuã_∂l_c⁄åﬁ
)(
©h_hw
 *
	mah
,

635 
©h9k_ch™√l
 *
	mch™
);

636 
boﬁ
 (*
™i_c⁄åﬁ
)(
©h_hw
 *
	mah
, 
©h9k_™i_cmd
 
	mcmd
,

637 
	m∑øm
);

638 (*
	mdo_gënf
)(
©h_hw
 *
	mah
, 
öt16_t
 
	mnÁºay
[
NUM_NF_READINGS
]);

639 (*
	m£t_ød¨_∑øms
)(
©h_hw
 *
	mah
,

640 
©h_hw_ød¨_c⁄f
 *
	mc⁄f
);

641 (*
	mÁ°_ch™_ch™ge
)(
©h_hw
 *
	mah
, 
©h9k_ch™√l
 *
	mch™
,

642 
u8
 *
	möi_ªlﬂded
);

645 (*
	m™i_ˇche_öi_ªgs
)(
©h_hw
 *
	mah
);

670 
	s©h_•ec_sˇn
 {

671 
boﬁ
 
	míabÀd
;

672 
boﬁ
 
	msh‹t_ª≥©
;

673 
boﬁ
 
	mídÀss
;

674 
u8
 
	mcou¡
;

675 
u8
 
	m≥riod
;

676 
u8
 
	mf·_≥riod
;

693 
	s©h_hw_›s
 {

694 (*
	mc⁄fig_pci_powîßve
)(
©h_hw
 *
	mah
,

695 
boﬁ
 
	mpowî_off
);

696 (*
	mrx_íabÀ
)(
©h_hw
 *
	mah
);

697 (*
	m£t_desc_lök
)(*
	mds
, 
u32
 
	mlök
);

698 (*
	mˇlibøã
)(
©h_hw
 *
	mah
, 
©h9k_ch™√l
 *
	mch™
,

699 
u8
 
	mrxchaömask
, 
boﬁ
 
	ml⁄gˇl
);

700 
boﬁ
 (*
gë_i§
)(
©h_hw
 *
	mah
, 
©h9k_öt
 *
	mmasked
,

701 
u32
 *
	msync_ˇu£_p
);

702 (*
	m£t_txdesc
)(
©h_hw
 *
	mah
, *
	mds
,

703 
©h_tx_öfo
 *
	mi
);

704 (*
	m¥oc_txdesc
)(
©h_hw
 *
	mah
, *
	mds
,

705 
©h_tx_°©us
 *
	mts
);

706 (*
	m™tdiv_comb_c⁄f_gë
)(
©h_hw
 *
	mah
,

707 
©h_hw_™tcomb_c⁄f
 *
	m™tc⁄f
);

708 (*
	m™tdiv_comb_c⁄f_£t
)(
©h_hw
 *
	mah
,

709 
©h_hw_™tcomb_c⁄f
 *
	m™tc⁄f
);

710 (*
	mgë_adc_íå›y
)(
©h_hw
 *
	mah
, 
u8
 *
	mbuf
, 
size_t
 
	mÀn
);

711 (*
	m•e˘øl_sˇn_c⁄fig
)(
©h_hw
 *
	mah
,

712 
©h_•ec_sˇn
 *
	m∑øm
);

713 (*
	m•e˘øl_sˇn_åiggî
)(
©h_hw
 *
	mah
);

714 (*
	m•e˘øl_sˇn_waô
)(
©h_hw
 *
	mah
);

716 (*
	mtx99_°¨t
)(
©h_hw
 *
	mah
, 
u32
 
	mqnum
);

717 (*
	mtx99_°›
)(
©h_hw
 *
	mah
);

718 (*
	mtx99_£t_txpowî
)(
©h_hw
 *
	mah
, 
u8
 
	mpowî
);

720 #ifde‡
CPTCFG_ATH9K_BTCOEX_SUPPORT


721 (*
	m£t_bt_™t_divîsôy
)(
©h_hw
 *
	mhw
, 
boﬁ
 
	míabÀ
);

725 
	s©h_nf_limôs
 {

726 
s16
 
	mmax
;

727 
s16
 
	mmö
;

728 
s16
 
	mnomöÆ
;

731 
	e©h_ˇl_li°
 {

732 
	mTX_IQ_CAL
 = 
BIT
(0),

733 
	mTX_IQ_ON_AGC_CAL
 = 
BIT
(1),

734 
	mTX_CL_CAL
 = 
BIT
(2),

738 
	#AH_USE_EEPROM
 0x1

	)

739 
	#AH_UNPLUGGED
 0x2

	)

740 
	#AH_FASTCC
 0x4

	)

741 
	#AH_NO_EEP_SWAP
 0x8

	)

743 
	s©h_hw
 {

744 
©h_›s
 
	mªg_›s
;

746 
devi˚
 *
	mdev
;

747 
õì80211_hw
 *
	mhw
;

748 
©h_comm⁄
 
	mcomm⁄
;

749 
©h9k_hw_vîsi⁄
 
	mhw_vîsi⁄
;

750 
©h9k_›s_c⁄fig
 
	mc⁄fig
;

751 
©h9k_hw_ˇ∑bûôõs
 
	mˇps
;

752 
©h9k_ch™√l
 
	mch™√ls
[
ATH9K_NUM_CHANNELS
];

753 
©h9k_ch™√l
 *
	mcurch™
;

756 
¨5416_ì¥om_def
 
	mdef
;

757 
¨5416_ì¥om_4k
 
	mm≠4k
;

758 
¨9287_ì¥om
 
	mm≠9287
;

759 
¨9300_ì¥om
 
	m¨9300_ìp
;

760 } 
	mì¥om
;

761 c⁄° 
ì¥om_›s
 *
	mìp_›s
;

763 
boﬁ
 
	msw_mgmt_¸y±o
;

764 
boﬁ
 
	mis_pcõx¥ess
;

765 
boﬁ
 
	ma•m_íabÀd
;

766 
boﬁ
 
	mis_m⁄ô‹ög
;

767 
boﬁ
 
	m√ed_™_t›2_fixup
;

768 
u16
 
	mtx_åig_Àvñ
;

770 
u32
 
	mnf_ªgs
[6];

771 
©h_nf_limôs
 
	mnf_2g
;

772 
©h_nf_limôs
 
	mnf_5g
;

773 
u16
 
	mrfsûít
;

774 
u32
 
	mrfkûl_gpio
;

775 
u32
 
	mrfkûl_pﬁ¨ôy
;

776 
u32
 
	mah_Êags
;

778 
	mdüg
;

780 
boﬁ
 
	mª£t_powî_⁄
;

781 
boﬁ
 
	mhtc_ª£t_öô
;

783 
∆80211_i·y≥
 
	m›mode
;

784 
©h9k_powî_mode
 
	mpowî_mode
;

786 
s8
 
	mnoi£
;

787 
©h9k_hw_ˇl_d©a
 *
	mˇld©a
;

788 
©h9k_∑ˇl_öfo
 
	m∑ˇl_öfo
;

789 
¨5416Sèts
 
	m°©s
;

790 
©h9k_tx_queue_öfo
 
	mtxq
[
ATH9K_NUM_TX_QUEUES
];

792 
©h9k_öt
 
	mimask
;

793 
u32
 
	mimrs2_ªg
;

794 
u32
 
	mtxok_öãºu±_mask
;

795 
u32
 
	mtxîr_öãºu±_mask
;

796 
u32
 
	mtxdesc_öãºu±_mask
;

797 
u32
 
	mtxeﬁ_öãºu±_mask
;

798 
u32
 
	mtxu∫_öãºu±_mask
;

799 
©omic_t
 
	möå_ªf_˙t
;

800 
boﬁ
 
	mchù_fuŒ¶ìp
;

801 
u32
 
	mmodes_ödex
;

804 
u32
 
	msuµ_ˇls
;

805 
©h9k_ˇl_li°
 
	miq_ˇld©a
;

806 
©h9k_ˇl_li°
 
	madcgaö_ˇld©a
;

807 
©h9k_ˇl_li°
 
	madcdc_ˇld©a
;

808 
©h9k_ˇl_li°
 *
	mˇl_li°
;

809 
©h9k_ˇl_li°
 *
	mˇl_li°_œ°
;

810 
©h9k_ˇl_li°
 *
	mˇl_li°_cuº
;

811 
	#tŸÆPowîMósI
 
mós0
.
unsign


	)

812 
	#tŸÆPowîMósQ
 
mós1
.
unsign


	)

813 
	#tŸÆIqC‹rMós
 
mós2
.
sign


	)

814 
	#tŸÆAdcIOddPha£
 
mós0
.
unsign


	)

815 
	#tŸÆAdcIEvíPha£
 
mós1
.
unsign


	)

816 
	#tŸÆAdcQOddPha£
 
mós2
.
unsign


	)

817 
	#tŸÆAdcQEvíPha£
 
mós3
.
unsign


	)

818 
	#tŸÆAdcDcOff£tIOddPha£
 
mós0
.
sign


	)

819 
	#tŸÆAdcDcOff£tIEvíPha£
 
mós1
.
sign


	)

820 
	#tŸÆAdcDcOff£tQOddPha£
 
mós2
.
sign


	)

821 
	#tŸÆAdcDcOff£tQEvíPha£
 
mós3
.
sign


	)

823 
u32
 
	munsign
[
AR5416_MAX_CHAINS
];

824 
öt32_t
 
	msign
[
AR5416_MAX_CHAINS
];

825 } 
	mmós0
;

827 
u32
 
	munsign
[
AR5416_MAX_CHAINS
];

828 
öt32_t
 
	msign
[
AR5416_MAX_CHAINS
];

829 } 
	mmós1
;

831 
u32
 
	munsign
[
AR5416_MAX_CHAINS
];

832 
öt32_t
 
	msign
[
AR5416_MAX_CHAINS
];

833 } 
	mmós2
;

835 
u32
 
	munsign
[
AR5416_MAX_CHAINS
];

836 
öt32_t
 
	msign
[
AR5416_MAX_CHAINS
];

837 } 
	mmós3
;

838 
u16
 
	mˇl_ßm∂es
;

839 
u8
 
	míabÀd_ˇls
;

841 
u32
 
	m°a_id1_deÁu…s
;

842 
u32
 
	mmisc_mode
;

845 
©h_hw_¥iv©e_›s
 
	m¥iv©e_›s
;

847 
©h_hw_›s
 
	m›s
;

850 
u32
 *
	m™ÆogB™k6D©a
;

852 
	mcovîage_˛ass
;

853 
u32
 
	m¶Ÿtime
;

854 
u32
 
	mglobÆtxtimeout
;

857 
u32
 
	m™ùîiod
;

858 
©h9k_™i_cmd
 
	m™i_fun˘i⁄
;

859 
u32
 
	m™i_skù_cou¡
;

860 
¨5416AniSèã
 
	m™i
;

862 #ifde‡
CPTCFG_ATH9K_BTCOEX_SUPPORT


863 
©h_btc€x_hw
 
	mbtc€x_hw
;

866 
u32
 
	möå_txqs
;

867 
u8
 
	mtxchaömask
;

868 
u8
 
	mrxchaömask
;

870 
©h_hw_ød¨_c⁄f
 
	mød¨_c⁄f
;

872 
u32
 
	m‹igöÆGaö
[22];

873 
	möôPDADC
;

874 
	mPDADCdñè
;

875 
	mÀd_pö
;

876 
u32
 
	mgpio_mask
;

877 
u32
 
	mgpio_vÆ
;

879 
¨5416IniAºay
 
	möi_dfs
;

880 
¨5416IniAºay
 
	möiModes
;

881 
¨5416IniAºay
 
	möiComm⁄
;

882 
¨5416IniAºay
 
	möiBB_RfGaö
;

883 
¨5416IniAºay
 
	möiB™k6
;

884 
¨5416IniAºay
 
	möiAddac
;

885 
¨5416IniAºay
 
	möiPcõSîdes
;

886 
¨5416IniAºay
 
	möiPcõSîdesLowPowî
;

887 
¨5416IniAºay
 
	möiModesFa°Clock
;

888 
¨5416IniAºay
 
	möiAddôi⁄Æ
;

889 
¨5416IniAºay
 
	möiModesRxGaö
;

890 
¨5416IniAºay
 
	möi_modes_rx_gaö_bounds
;

891 
¨5416IniAºay
 
	möiModesTxGaö
;

892 
¨5416IniAºay
 
	möiCckfúN‹mÆ
;

893 
¨5416IniAºay
 
	möiCckfúJ≠™2484
;

894 
¨5416IniAºay
 
	möiModes_9271_ANI_ªg
;

895 
¨5416IniAºay
 
	möi_ødio_po°_sys2™t
;

896 
¨5416IniAºay
 
	möi_modes_rxgaö_5g_x a
;

897 
¨5416IniAºay
 
	möi_modes_rxgaö_bb_c‹e
;

898 
¨5416IniAºay
 
	möi_modes_rxgaö_bb_po°ambÀ
;

900 
¨5416IniAºay
 
	möiMac
[
ATH_INI_NUM_SPLIT
];

901 
¨5416IniAºay
 
	möiBB
[
ATH_INI_NUM_SPLIT
];

902 
¨5416IniAºay
 
	möiRadio
[
ATH_INI_NUM_SPLIT
];

903 
¨5416IniAºay
 
	möiSOC
[
ATH_INI_NUM_SPLIT
];

905 
u32
 
	möå_gí_timî_åiggî
;

906 
u32
 
	möå_gí_timî_thªsh
;

907 
©h_gí_timî_èbÀ
 
	mhw_gí_timîs
;

909 
¨9003_txs
 *
	mts_rög
;

910 
u32
 
	mts_∑ddr_°¨t
;

911 
u32
 
	mts_∑ddr_íd
;

912 
u16
 
	mts_èû
;

913 
u16
 
	mts_size
;

915 
u32
 
	mbb_w©chdog_œ°_°©us
;

916 
u32
 
	mbb_w©chdog_timeout_ms
;

917 
u8
 
	mbb_h™g_rx_ofdm
;

919 
	m∑¥d_èrgë_powî
;

920 
	m∑¥d_åaöög_powî
;

921 
	m∑¥d_øãmask
;

922 
	m∑¥d_øãmask_ht40
;

923 
boﬁ
 
	m∑¥d_èbÀ_wrôe_d⁄e
;

924 
u32
 
	m∑¥d_gaö_èbÀ_íåõs
[
PAPRD_GAIN_TABLE_ENTRIES
];

925 
u8
 
	m∑¥d_gaö_èbÀ_ödex
[
PAPRD_GAIN_TABLE_ENTRIES
];

931 
u32
 
	mWARegVÆ
;

934 
u32
 
	mít_mode
;

936 #ifde‡
CPTCFG_ATH9K_WOW


937 
u32
 
	mwow_evít_mask
;

939 
boﬁ
 
	mis_˛k_25mhz
;

940 (*
	mgë_mac_ªvisi⁄
)();

941 (*
	mexã∫Æ_ª£t
)();

942 
boﬁ
 
	mdißbÀ_2ghz
;

943 
boﬁ
 
	mdißbÀ_5ghz
;

945 c⁄° 
fúmw¨e
 *
	mì¥om_blob
;

948 
	s©h_bus_›s
 {

949 
©h_bus_ty≥
 
	m©h_bus_ty≥
;

950 (*
	mªad_ˇchesize
)(
©h_comm⁄
 *
	mcomm⁄
, *
	mcsz
);

951 
boﬁ
 (*
ì¥om_ªad
)(
©h_comm⁄
 *
	mcomm⁄
, 
u32
 
	moff
, 
u16
 *
	md©a
);

952 (*
	mbt_c€x_¥ï
)(
©h_comm⁄
 *
	mcomm⁄
);

953 (*
	ma•m_öô
)(
©h_comm⁄
 *
	mcomm⁄
);

956 
ölöe
 
©h_comm⁄
 *
	$©h9k_hw_comm⁄
(
©h_hw
 *
ah
)

958  &
ah
->
comm⁄
;

959 
	}
}

961 
ölöe
 
©h_ªguœt‹y
 *
	$©h9k_hw_ªguœt‹y
(
©h_hw
 *
ah
)

963  &(
	`©h9k_hw_comm⁄
(
ah
)->
ªguœt‹y
);

964 
	}
}

966 
ölöe
 
©h_hw_¥iv©e_›s
 *
	$©h9k_hw_¥iv©e_›s
(
©h_hw
 *
ah
)

968  &
ah
->
¥iv©e_›s
;

969 
	}
}

971 
ölöe
 
©h_hw_›s
 *
	$©h9k_hw_›s
(
©h_hw
 *
ah
)

973  &
ah
->
›s
;

974 
	}
}

976 
ölöe
 
u8
 
	$gë_°ªams
(
mask
)

978  !!(
mask
 & 
	`BIT
(0)) + !!(mask & BIT(1)) + !!(mask & BIT(2));

979 
	}
}

982 
©h9k_hw_deöô
(
©h_hw
 *
ah
);

983 
©h9k_hw_öô
(
©h_hw
 *
ah
);

984 
©h9k_hw_ª£t
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
,

985 
©h9k_hw_ˇl_d©a
 *
ˇld©a
, 
boﬁ
 
Á°cc
);

986 
©h9k_hw_fûl_ˇp_öfo
(
©h_hw
 *
ah
);

987 
u32
 
©h9k_ªgd_gë_˘l
(
©h_ªguœt‹y
 *
ªg
, 
©h9k_ch™√l
 *
ch™
);

990 
©h9k_hw_cfg_gpio_öput
(
©h_hw
 *
ah
, 
u32
 
gpio
);

991 
u32
 
©h9k_hw_gpio_gë
(
©h_hw
 *
ah
, u32 
gpio
);

992 
©h9k_hw_cfg_ouçut
(
©h_hw
 *
ah
, 
u32
 
gpio
,

993 
u32
 
ah_sig«l_ty≥
);

994 
©h9k_hw_£t_gpio
(
©h_hw
 *
ah
, 
u32
 
gpio
, u32 
vÆ
);

995 
©h9k_hw_£è¡í«
(
©h_hw
 *
ah
, 
u32
 
™ã¬a
);

998 
©h9k_hw_sy¡h_dñay
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
,

999 
hw_dñay
);

1000 
boﬁ
 
©h9k_hw_waô
(
©h_hw
 *
ah
, 
u32
 
ªg
, u32 
mask
, u32 
vÆ
, u32 
timeout
);

1001 
©h9k_hw_wrôe_¨øy
(
©h_hw
 *
ah
, c⁄° 
¨5416IniAºay
 *
¨øy
,

1002 
cﬁumn
, *
wrôe˙t
);

1003 
u32
 
©h9k_hw_ªvî£_bôs
(u32 
vÆ
, u32 
n
);

1004 
u16
 
©h9k_hw_compuãtxtime
(
©h_hw
 *
ah
,

1005 
u8
 
phy
, 
kbps
,

1006 
u32
 
‰ameLí
, 
u16
 
øãix
, 
boﬁ
 
sh‹tPªambÀ
);

1007 
©h9k_hw_gë_ch™√l_˚¡îs
(
©h_hw
 *
ah
,

1008 
©h9k_ch™√l
 *
ch™
,

1009 
ch™_˚¡îs
 *
˚¡îs
);

1010 
u32
 
©h9k_hw_gërxfûãr
(
©h_hw
 *
ah
);

1011 
©h9k_hw_£åxfûãr
(
©h_hw
 *
ah
, 
u32
 
bôs
);

1012 
boﬁ
 
©h9k_hw_phy_dißbÀ
(
©h_hw
 *
ah
);

1013 
boﬁ
 
©h9k_hw_dißbÀ
(
©h_hw
 *
ah
);

1014 
©h9k_hw_£t_txpowîlimô
(
©h_hw
 *
ah
, 
u32
 
limô
, 
boﬁ
 
ã°
);

1015 
©h9k_hw_£t›mode
(
©h_hw
 *
ah
);

1016 
©h9k_hw_£tmˇ°fûãr
(
©h_hw
 *
ah
, 
u32
 
fûãr0
, u32 
fûãr1
);

1017 
©h9k_hw_wrôe_associd
(
©h_hw
 *
ah
);

1018 
u32
 
©h9k_hw_gëtsf32
(
©h_hw
 *
ah
);

1019 
u64
 
©h9k_hw_gëtsf64
(
©h_hw
 *
ah
);

1020 
©h9k_hw_£âsf64
(
©h_hw
 *
ah
, 
u64
 
tsf64
);

1021 
©h9k_hw_ª£t_tsf
(
©h_hw
 *
ah
);

1022 
©h9k_hw_£t_tsÁdju°
(
©h_hw
 *
ah
, 
boﬁ
 
£t
);

1023 
©h9k_hw_öô_globÆ_£âögs
(
©h_hw
 *
ah
);

1024 
u32
 
¨9003_gë_∂l_sqsum_dvc
(
©h_hw
 *
ah
);

1025 
©h9k_hw_£t11nmac2040
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
);

1026 
©h9k_hw_bóc⁄öô
(
©h_hw
 *
ah
, 
u32
 
√xt_bóc⁄
, u32 
bóc⁄_≥riod
);

1027 
©h9k_hw_£t_°a_bóc⁄_timîs
(
©h_hw
 *
ah
,

1028 c⁄° 
©h9k_bóc⁄_°©e
 *
bs
);

1029 
©h9k_hw_check_«v
(
©h_hw
 *
ah
);

1030 
boﬁ
 
©h9k_hw_check_Æive
(
©h_hw
 *
ah
);

1032 
boﬁ
 
©h9k_hw_£çowî
(
©h_hw
 *
ah
, 
©h9k_powî_mode
 
mode
);

1033 
©h9k_hw_upd©e_düg
(
©h_hw
 *
ah
);

1036 
©h_gí_timî
 *
©h_gí_timî_Æloc
(
©h_hw
 *
ah
,

1037 (*
åiggî
)(*),

1038 (*
ovîÊow
)(*),

1039 *
¨g
,

1040 
u8
 
timî_ödex
);

1041 
	`©h9k_hw_gí_timî_°¨t
(
©h_hw
 *
ah
,

1042 
©h_gí_timî
 *
timî
,

1043 
u32
 
timî_√xt
,

1044 
u32
 
timî_≥riod
);

1045 
	`©h9k_hw_gí_timî_°›
(
©h_hw
 *
ah
, 
©h_gí_timî
 *
timî
);

1047 
	`©h_gí_timî_‰ì
(
©h_hw
 *
ah
, 
©h_gí_timî
 *
timî
);

1048 
	`©h_gí_timî_i§
(
©h_hw
 *
hw
);

1050 
	`©h9k_hw_«me
(
©h_hw
 *
ah
, *
hw_«me
, 
size_t
 
Àn
);

1053 
	`©h9k_hw_gë_dñè_¶›e_vÆs
(
©h_hw
 *
ah
, 
u32
 
c€f_sˇÀd
,

1054 
u32
 *
c€f_m™tisß
, u32 *
c€f_exp⁄ít
);

1055 
	`©h9k_hw_≠∂y_txpowî
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
,

1056 
boﬁ
 
ã°
);

1062 
	`¨9002_hw_rf_˛aim
(
©h_hw
 *
ah
);

1063 
	`¨9002_hw_íabÀ_async_fifo
(
©h_hw
 *
ah
);

1069 
boﬁ
 
	`¨9003_hw_bb_w©chdog_check
(
©h_hw
 *
ah
);

1070 
	`¨9003_hw_bb_w©chdog_c⁄fig
(
©h_hw
 *
ah
);

1071 
	`¨9003_hw_bb_w©chdog_ªad
(
©h_hw
 *
ah
);

1072 
	`¨9003_hw_bb_w©chdog_dbg_öfo
(
©h_hw
 *
ah
);

1073 
	`¨9003_hw_dißbÀ_phy_ª°¨t
(
©h_hw
 *
ah
);

1074 
	`¨9003_∑¥d_íabÀ
(
©h_hw
 *
ah
, 
boﬁ
 
vÆ
);

1075 
	`¨9003_∑¥d_p›uœã_sögÀ_èbÀ
(
©h_hw
 *
ah
,

1076 
©h9k_hw_ˇl_d©a
 *
ˇld©a
,

1077 
chaö
);

1078 
	`¨9003_∑¥d_¸óã_curve
(
©h_hw
 *
ah
,

1079 
©h9k_hw_ˇl_d©a
 *
ˇld©a
, 
chaö
);

1080 
	`¨9003_∑¥d_£tup_gaö_èbÀ
(
©h_hw
 *
ah
, 
chaö
);

1081 
	`¨9003_∑¥d_öô_èbÀ
(
©h_hw
 *
ah
);

1082 
boﬁ
 
	`¨9003_∑¥d_is_d⁄e
(
©h_hw
 *
ah
);

1083 
boﬁ
 
	`¨9003_is_∑¥d_íabÀd
(
©h_hw
 *
ah
);

1084 
	`¨9003_hw_£t_chaö_masks
(
©h_hw
 *
ah
, 
u8
 
rx
, u8 
tx
);

1087 
	`¨5008_hw_©èch_phy_›s
(
©h_hw
 *
ah
);

1088 
	`¨9002_hw_©èch_phy_›s
(
©h_hw
 *
ah
);

1089 
	`¨9003_hw_©èch_phy_›s
(
©h_hw
 *
ah
);

1091 
	`¨9002_hw_©èch_ˇlib_›s
(
©h_hw
 *
ah
);

1092 
	`¨9003_hw_©èch_ˇlib_›s
(
©h_hw
 *
ah
);

1094 
	`¨9002_hw_©èch_›s
(
©h_hw
 *
ah
);

1095 
	`¨9003_hw_©èch_›s
(
©h_hw
 *
ah
);

1097 
	`¨9002_hw_lﬂd_™i_ªg
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
);

1099 
	`©h9k_™i_ª£t
(
©h_hw
 *
ah
, 
boﬁ
 
is_sˇ¬ög
);

1100 
	`©h9k_hw_™i_m⁄ô‹
(
©h_hw
 *
ah
, 
©h9k_ch™√l
 *
ch™
);

1102 #ifde‡
CPTCFG_ATH9K_BTCOEX_SUPPORT


1103 
ölöe
 
boﬁ
 
	$©h9k_hw_btc€x_is_íabÀd
(
©h_hw
 *
ah
)

1105  
ah
->
btc€x_hw
.
íabÀd
;

1106 
	}
}

1107 
ölöe
 
boﬁ
 
	$©h9k_hw_mci_is_íabÀd
(
©h_hw
 *
ah
)

1109  
ah
->
comm⁄
.
btc€x_íabÀd
 &&

1110 (
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_MCI
);

1112 
	}
}

1113 
©h9k_hw_btc€x_íabÀ
(
©h_hw
 *
ah
);

1114 
ölöe
 
©h_btc€x_scheme


1115 
	$©h9k_hw_gë_btc€x_scheme
(
©h_hw
 *
ah
)

1117  
ah
->
btc€x_hw
.
scheme
;

1118 
	}
}

1120 
ölöe
 
boﬁ
 
	$©h9k_hw_btc€x_is_íabÀd
(
©h_hw
 *
ah
)

1122  
Ál£
;

1123 
	}
}

1124 
ölöe
 
boﬁ
 
	$©h9k_hw_mci_is_íabÀd
(
©h_hw
 *
ah
)

1126  
Ál£
;

1127 
	}
}

1128 
ölöe
 
	$©h9k_hw_btc€x_íabÀ
(
©h_hw
 *
ah
)

1130 
	}
}

1131 
ölöe
 
©h_btc€x_scheme


1132 
	$©h9k_hw_gë_btc€x_scheme
(
©h_hw
 *
ah
)

1134  
ATH_BTCOEX_CFG_NONE
;

1135 
	}
}

1139 #ifde‡
CPTCFG_ATH9K_WOW


1140 c⁄° *
©h9k_hw_wow_evít_to_°rög
(
u32
 
wow_evít
);

1141 
©h9k_hw_wow_≠∂y_∑âîn
(
©h_hw
 *
ah
, 
u8
 *
u£r_∑âîn
,

1142 
u8
 *
u£r_mask
, 
∑âîn_cou¡
,

1143 
∑âîn_Àn
);

1144 
u32
 
©h9k_hw_wow_wakeup
(
©h_hw
 *
ah
);

1145 
©h9k_hw_wow_íabÀ
(
©h_hw
 *
ah
, 
u32
 
∑âîn_íabÀ
);

1147 
ölöe
 c⁄° *
	$©h9k_hw_wow_evít_to_°rög
(
u32
 
wow_evít
)

1149  
NULL
;

1150 
	}
}

1151 
ölöe
 
	$©h9k_hw_wow_≠∂y_∑âîn
(
©h_hw
 *
ah
,

1152 
u8
 *
u£r_∑âîn
,

1153 
u8
 *
u£r_mask
,

1154 
∑âîn_cou¡
,

1155 
∑âîn_Àn
)

1157 
	}
}

1158 
ölöe
 
u32
 
	$©h9k_hw_wow_wakeup
(
©h_hw
 *
ah
)

1161 
	}
}

1162 
ölöe
 
	$©h9k_hw_wow_íabÀ
(
©h_hw
 *
ah
, 
u32
 
∑âîn_íabÀ
)

1164 
	}
}

1167 
	#ATH9K_CLOCK_RATE_CCK
 22

	)

1168 
	#ATH9K_CLOCK_RATE_5GHZ_OFDM
 40

	)

1169 
	#ATH9K_CLOCK_RATE_2GHZ_OFDM
 44

	)

1170 
	#ATH9K_CLOCK_FAST_RATE_5GHZ_OFDM
 44

	)

	@init.c

17 
	#¥_fmt
(
fmt
Ë
KBUILD_MODNAME
 ": " 
	)
fmt

19 
	~<löux/dma-m≠pög.h
>

20 
	~<löux/¶ab.h
>

21 
	~<löux/©h9k_∂©f‹m.h
>

22 
	~<löux/moduÀ.h
>

23 
	~<löux/ªœy.h
>

24 
	~<√t/õì80211_ødiŸ≠.h
>

26 
	~"©h9k.h
"

28 
	s©h9k_ì¥om_˘x
 {

29 
com∂ëi⁄
 
	mcom∂ëe
;

30 
©h_hw
 *
	mah
;

33 *
	gdev_öfo
 = "ath9k";

35 
MODULE_AUTHOR
("Atheros Communications");

36 
MODULE_DESCRIPTION
("Support for Atheros 802.11n wireless LAN cards.");

37 
MODULE_SUPPORTED_DEVICE
("Atheros 802.11n WLAN cards");

38 
MODULE_LICENSE
("Dual BSD/GPL");

40 
	g©h9k_debug
 = 
ATH_DBG_DEFAULT
;

41 
moduÀ_∑øm_«med
(
debug
, 
©h9k_debug
, 
uöt
, 0);

42 
MODULE_PARM_DESC
(
debug
, "Debugging mask");

44 
	g©h9k_mod∑øm_nohw¸y±
;

45 
moduÀ_∑øm_«med
(
nohw¸y±
, 
©h9k_mod∑øm_nohw¸y±
, , 0444);

46 
MODULE_PARM_DESC
(
nohw¸y±
, "Disable hardwareÉncryption");

48 
	gÀd_blök
 = 1;

49 
moduÀ_∑øm_«med
(
blök
, 
Àd_blök
, , 0444);

50 
MODULE_PARM_DESC
(
blök
, "Enable LED blink onáctivity");

52 
	g©h9k_btc€x_íabÀ
;

53 
moduÀ_∑øm_«med
(
btc€x_íabÀ
, 
©h9k_btc€x_íabÀ
, , 0444);

54 
MODULE_PARM_DESC
(
btc€x_íabÀ
, "Enable wifi-BT coexistence");

56 
	g©h9k_bt_™t_divîsôy
;

57 
moduÀ_∑øm_«med
(
bt_™t_divîsôy
, 
©h9k_bt_™t_divîsôy
, , 0444);

58 
MODULE_PARM_DESC
(
bt_™t_divîsôy
, "Enable WLAN/BT RXántenna diversity");

60 
	g©h9k_ps_íabÀ
;

61 
moduÀ_∑øm_«med
(
ps_íabÀ
, 
©h9k_ps_íabÀ
, , 0444);

62 
MODULE_PARM_DESC
(
ps_íabÀ
, "Enable WLAN PowerSave");

64 
boﬁ
 
	gis_©h9k_u∆ﬂded
;

66 #ifde‡
CPTCFG_MAC80211_LEDS


67 c⁄° 
õì80211_çt_blök
 
	g©h9k_çt_blök
[] = {

68 { .
throughput
 = 0 * 1024, .
	gblök_time
 = 334 },

69 { .
	gthroughput
 = 1 * 1024, .
	gblök_time
 = 260 },

70 { .
	gthroughput
 = 5 * 1024, .
	gblök_time
 = 220 },

71 { .
	gthroughput
 = 10 * 1024, .
	gblök_time
 = 190 },

72 { .
	gthroughput
 = 20 * 1024, .
	gblök_time
 = 170 },

73 { .
	gthroughput
 = 50 * 1024, .
	gblök_time
 = 150 },

74 { .
	gthroughput
 = 70 * 1024, .
	gblök_time
 = 130 },

75 { .
	gthroughput
 = 100 * 1024, .
	gblök_time
 = 110 },

76 { .
	gthroughput
 = 200 * 1024, .
	gblök_time
 = 80 },

77 { .
	gthroughput
 = 300 * 1024, .
	gblök_time
 = 50 },

81 
©h9k_deöô_so·c
(
©h_so·c
 *
sc
);

89 
	$©h9k_iowrôe32
(*
hw_¥iv
, 
u32
 
vÆ
, u32 
ªg_off£t
)

91 
©h_hw
 *
ah
 = (©h_hw *Ë
hw_¥iv
;

92 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

93 
©h_so·c
 *
sc
 = (©h_so·¯*Ë
comm⁄
->
¥iv
;

95 i‡(
NR_CPUS
 > 1 && 
ah
->
c⁄fig
.
£rülize_ªgmode
 =
SER_REG_MODE_ON
) {

96 
Êags
;

97 
	`•ö_lock_úqßve
(&
sc
->
sc_£rül_rw
, 
Êags
);

98 
	`iowrôe32
(
vÆ
, 
sc
->
mem
 + 
ªg_off£t
);

99 
	`•ö_u∆ock_úqª°‹e
(&
sc
->
sc_£rül_rw
, 
Êags
);

101 
	`iowrôe32
(
vÆ
, 
sc
->
mem
 + 
ªg_off£t
);

102 
	}
}

104 
	$©h9k_i‹ód32
(*
hw_¥iv
, 
u32
 
ªg_off£t
)

106 
©h_hw
 *
ah
 = (©h_hw *Ë
hw_¥iv
;

107 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

108 
©h_so·c
 *
sc
 = (©h_so·¯*Ë
comm⁄
->
¥iv
;

109 
u32
 
vÆ
;

111 i‡(
NR_CPUS
 > 1 && 
ah
->
c⁄fig
.
£rülize_ªgmode
 =
SER_REG_MODE_ON
) {

112 
Êags
;

113 
	`•ö_lock_úqßve
(&
sc
->
sc_£rül_rw
, 
Êags
);

114 
vÆ
 = 
	`i‹ód32
(
sc
->
mem
 + 
ªg_off£t
);

115 
	`•ö_u∆ock_úqª°‹e
(&
sc
->
sc_£rül_rw
, 
Êags
);

117 
vÆ
 = 
	`i‹ód32
(
sc
->
mem
 + 
ªg_off£t
);

118  
vÆ
;

119 
	}
}

121 
	$__©h9k_ªg_rmw
(
©h_so·c
 *
sc
, 
u32
 
ªg_off£t
,

122 
u32
 
£t
, u32 
˛r
)

124 
u32
 
vÆ
;

126 
vÆ
 = 
	`i‹ód32
(
sc
->
mem
 + 
ªg_off£t
);

127 
vÆ
 &~
˛r
;

128 
vÆ
 |
£t
;

129 
	`iowrôe32
(
vÆ
, 
sc
->
mem
 + 
ªg_off£t
);

131  
vÆ
;

132 
	}
}

134 
	$©h9k_ªg_rmw
(*
hw_¥iv
, 
u32
 
ªg_off£t
, u32 
£t
, u32 
˛r
)

136 
©h_hw
 *
ah
 = (©h_hw *Ë
hw_¥iv
;

137 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

138 
©h_so·c
 *
sc
 = (©h_so·¯*Ë
comm⁄
->
¥iv
;

139 
	`unöôülized_v¨
(
Êags
);

140 
u32
 
vÆ
;

142 i‡(
NR_CPUS
 > 1 && 
ah
->
c⁄fig
.
£rülize_ªgmode
 =
SER_REG_MODE_ON
) {

143 
	`•ö_lock_úqßve
(&
sc
->
sc_£rül_rw
, 
Êags
);

144 
vÆ
 = 
	`__©h9k_ªg_rmw
(
sc
, 
ªg_off£t
, 
£t
, 
˛r
);

145 
	`•ö_u∆ock_úqª°‹e
(&
sc
->
sc_£rül_rw
, 
Êags
);

147 
vÆ
 = 
	`__©h9k_ªg_rmw
(
sc
, 
ªg_off£t
, 
£t
, 
˛r
);

149  
vÆ
;

150 
	}
}

156 
	$©h9k_ªg_nŸifõr
(
wùhy
 *wiphy,

157 
ªguœt‹y_ªque°
 *
ªque°
)

159 
õì80211_hw
 *
hw
 = 
	`wùhy_to_õì80211_hw
(
wùhy
);

160 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

161 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

162 
©h_ªguœt‹y
 *
ªg
 = 
	`©h9k_hw_ªguœt‹y
(
ah
);

164 
	`©h_ªg_nŸifõr_≠∂y
(
wùhy
, 
ªque°
, 
ªg
);

167 i‡(
ah
->
curch™
) {

168 
sc
->
c⁄fig
.
txpowlimô
 = 2 * 
ah
->
curch™
->
ch™
->
max_powî
;

169 
	`©h9k_ps_wakeup
(
sc
);

170 
	`©h9k_hw_£t_txpowîlimô
(
ah
, 
sc
->
c⁄fig
.
txpowlimô
, 
Ál£
);

171 
sc
->
cuπxpow
 = 
	`©h9k_hw_ªguœt‹y
(
ah
)->
powî_limô
;

173 i‡(
sc
->
dfs_dëe˘‹
 !
NULL
)

174 
sc
->
dfs_dëe˘‹
->
	`£t_dfs_domaö
(sc->dfs_detector,

175 
ªque°
->
dfs_ªgi⁄
);

176 
	`©h9k_ps_ª°‹e
(
sc
);

178 
	}
}

185 
	$©h_descdma_£tup
(
©h_so·c
 *
sc
, 
©h_descdma
 *
dd
,

186 
li°_hód
 *
hód
, c⁄° *
«me
,

187 
nbuf
, 
ndesc
, 
boﬁ
 
is_tx
)

189 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

190 
u8
 *
ds
;

191 
i
, 
bsize
, 
desc_Àn
;

193 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "%s DMA: %u buffers %u desc/buf\n",

194 
«me
, 
nbuf
, 
ndesc
);

196 
	`INIT_LIST_HEAD
(
hód
);

198 i‡(
is_tx
)

199 
desc_Àn
 = 
sc
->
sc_ah
->
ˇps
.
tx_desc_Àn
;

201 
desc_Àn
 = (
©h_desc
);

204 i‡((
desc_Àn
 % 4) != 0) {

205 
	`©h_îr
(
comm⁄
, "ath_descÇot DWORDáligned\n");

206 
	`BUG_ON
((
desc_Àn
 % 4) != 0);

207  -
ENOMEM
;

210 
dd
->
dd_desc_Àn
 = 
desc_Àn
 * 
nbuf
 * 
ndesc
;

217 i‡(!(
sc
->
sc_ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_4KB_SPLITTRANS
)) {

218 
u32
 
ndesc_skù≥d
 =

219 
	`ATH_DESC_4KB_BOUND_NUM_SKIPPED
(
dd
->
dd_desc_Àn
);

220 
u32
 
dma_Àn
;

222 
ndesc_skù≥d
) {

223 
dma_Àn
 = 
ndesc_skù≥d
 * 
desc_Àn
;

224 
dd
->
dd_desc_Àn
 +
dma_Àn
;

226 
ndesc_skù≥d
 = 
	`ATH_DESC_4KB_BOUND_NUM_SKIPPED
(
dma_Àn
);

231 
dd
->
dd_desc
 = 
	`dmam_Æloc_cohîít
(
sc
->
dev
, dd->
dd_desc_Àn
,

232 &
dd
->
dd_desc_∑ddr
, 
GFP_KERNEL
);

233 i‡(!
dd
->
dd_desc
)

234  -
ENOMEM
;

236 
ds
 = (
u8
 *Ë
dd
->
dd_desc
;

237 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "%s DMA map: %p (%u) -> %llx (%u)\n",

238 
«me
, 
ds
, (
u32
Ë
dd
->
dd_desc_Àn
,

239 
	`ôo64
(
dd
->
dd_desc_∑ddr
), (
u32
Ëdd->
dd_desc_Àn
);

242 i‡(
is_tx
) {

243 
©h_buf
 *
bf
;

245 
bsize
 = (
©h_buf
Ë* 
nbuf
;

246 
bf
 = 
	`devm_kzÆloc
(
sc
->
dev
, 
bsize
, 
GFP_KERNEL
);

247 i‡(!
bf
)

248  -
ENOMEM
;

250 
i
 = 0; i < 
nbuf
; i++, 
bf
++, 
ds
 +(
desc_Àn
 * 
ndesc
)) {

251 
bf
->
bf_desc
 = 
ds
;

252 
bf
->
bf_daddr
 = 
	`DS2PHYS
(
dd
, 
ds
);

254 i‡(!(
sc
->
sc_ah
->
ˇps
.
hw_ˇps
 &

255 
ATH9K_HW_CAP_4KB_SPLITTRANS
)) {

261 
	`ATH_DESC_4KB_BOUND_CHECK
(
bf
->
bf_daddr
)) {

262 
	`BUG_ON
((
ˇddr_t
Ë
bf
->
bf_desc
 >=

263 ((
ˇddr_t
Ë
dd
->
dd_desc
 +

264 
dd
->
dd_desc_Àn
));

266 
ds
 +(
desc_Àn
 * 
ndesc
);

267 
bf
->
bf_desc
 = 
ds
;

268 
bf
->
bf_daddr
 = 
	`DS2PHYS
(
dd
, 
ds
);

271 
	`li°_add_èû
(&
bf
->
li°
, 
hód
);

274 
©h_rxbuf
 *
bf
;

276 
bsize
 = (
©h_rxbuf
Ë* 
nbuf
;

277 
bf
 = 
	`devm_kzÆloc
(
sc
->
dev
, 
bsize
, 
GFP_KERNEL
);

278 i‡(!
bf
)

279  -
ENOMEM
;

281 
i
 = 0; i < 
nbuf
; i++, 
bf
++, 
ds
 +(
desc_Àn
 * 
ndesc
)) {

282 
bf
->
bf_desc
 = 
ds
;

283 
bf
->
bf_daddr
 = 
	`DS2PHYS
(
dd
, 
ds
);

285 i‡(!(
sc
->
sc_ah
->
ˇps
.
hw_ˇps
 &

286 
ATH9K_HW_CAP_4KB_SPLITTRANS
)) {

292 
	`ATH_DESC_4KB_BOUND_CHECK
(
bf
->
bf_daddr
)) {

293 
	`BUG_ON
((
ˇddr_t
Ë
bf
->
bf_desc
 >=

294 ((
ˇddr_t
Ë
dd
->
dd_desc
 +

295 
dd
->
dd_desc_Àn
));

297 
ds
 +(
desc_Àn
 * 
ndesc
);

298 
bf
->
bf_desc
 = 
ds
;

299 
bf
->
bf_daddr
 = 
	`DS2PHYS
(
dd
, 
ds
);

302 
	`li°_add_èû
(&
bf
->
li°
, 
hód
);

306 
	}
}

308 
	$©h9k_öô_queues
(
©h_so·c
 *
sc
)

310 
i
 = 0;

312 
sc
->
bóc⁄
.
bóc⁄q
 = 
	`©h9k_hw_bóc⁄q_£tup
(sc->
sc_ah
);

313 
sc
->
bóc⁄
.
ˇbq
 = 
	`©h_txq_£tup
(sc, 
ATH9K_TX_QUEUE_CAB
, 0);

314 
	`©h_ˇbq_upd©e
(
sc
);

316 
sc
->
tx
.
u≠sdq
 = 
	`©h_txq_£tup
(sc, 
ATH9K_TX_QUEUE_UAPSD
, 0);

318 
i
 = 0; i < 
IEEE80211_NUM_ACS
; i++) {

319 
sc
->
tx
.
txq_m≠
[
i
] = 
	`©h_txq_£tup
(sc, 
ATH9K_TX_QUEUE_DATA
, i);

320 
sc
->
tx
.
txq_m≠
[
i
]->
mac80211_qnum
 = i;

321 
sc
->
tx
.
txq_max_≥ndög
[
i
] = 
ATH_MAX_QDEPTH
;

324 
	}
}

326 
	$©h9k_öô_misc
(
©h_so·c
 *
sc
)

328 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

329 
i
 = 0;

331 
	`£tup_timî
(&
comm⁄
->
™i
.
timî
, 
©h_™i_ˇlibøã
, ()
sc
);

333 
comm⁄
->
œ°_rssi
 = 
ATH_RSSI_DUMMY_MARKER
;

334 
sc
->
c⁄fig
.
txpowlimô
 = 
ATH_TXPOWER_MAX
;

335 
	`mem˝y
(
comm⁄
->
bssidmask
, 
©h_bˇ°_mac
, 
ETH_ALEN
);

336 
sc
->
bóc⁄
.
¶Ÿtime
 = 
ATH9K_SLOT_TIME_9
;

338 
i
 = 0; i < 
	`ARRAY_SIZE
(
sc
->
bóc⁄
.
b¶Ÿ
); i++)

339 
sc
->
bóc⁄
.
b¶Ÿ
[
i
] = 
NULL
;

341 i‡(
sc
->
sc_ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_ANT_DIV_COMB
)

342 
sc
->
™t_comb
.
cou¡
 = 
ATH_ANT_DIV_COMB_INIT_COUNT
;

344 
sc
->
•ec_c⁄fig
.
íabÀd
 = 0;

345 
sc
->
•ec_c⁄fig
.
sh‹t_ª≥©
 = 
åue
;

346 
sc
->
•ec_c⁄fig
.
cou¡
 = 8;

347 
sc
->
•ec_c⁄fig
.
ídÀss
 = 
Ál£
;

348 
sc
->
•ec_c⁄fig
.
≥riod
 = 0xFF;

349 
sc
->
•ec_c⁄fig
.
f·_≥riod
 = 0xF;

350 
	}
}

352 
	$©h9k_öô_pc€m_∂©f‹m
(
©h_so·c
 *
sc
)

354 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

355 
©h9k_hw_ˇ∑bûôõs
 *
pC≠
 = &
ah
->
ˇps
;

356 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

358 i‡(!
	`IS_ENABLED
(
CPTCFG_ATH9K_PCOEM
))

361 i‡(
comm⁄
->
bus_›s
->
©h_bus_ty≥
 !
ATH_PCI
)

364 i‡(
sc
->
drivî_d©a
 & (
ATH9K_PCI_CUS198
 |

365 
ATH9K_PCI_CUS230
)) {

366 
ah
->
c⁄fig
.
x a_gpio
 = 9;

367 
ah
->
c⁄fig
.
x©ãn_m¨gö_cfg
 = 
åue
;

368 
ah
->
c⁄fig
.
Æt_mögaöidx
 = 
åue
;

369 
ah
->
c⁄fig
.
™t_˘æ_comm2g_swôch_íabÀ
 = 0x000BBB88;

370 
sc
->
™t_comb
.
low_rssi_thªsh
 = 20;

371 
sc
->
™t_comb
.
Á°_div_büs
 = 3;

373 
	`©h_öfo
(
comm⁄
, "SetÖarameters for %s\n",

374 (
sc
->
drivî_d©a
 & 
ATH9K_PCI_CUS198
) ?

378 i‡(
sc
->
drivî_d©a
 & 
ATH9K_PCI_CUS217
)

379 
	`©h_öfo
(
comm⁄
, "CUS217 card detected\n");

381 i‡(
sc
->
drivî_d©a
 & 
ATH9K_PCI_CUS252
)

382 
	`©h_öfo
(
comm⁄
, "CUS252 card detected\n");

384 i‡(
sc
->
drivî_d©a
 & 
ATH9K_PCI_AR9565_1ANT
)

385 
	`©h_öfo
(
comm⁄
, "WB335 1-ANT card detected\n");

387 i‡(
sc
->
drivî_d©a
 & 
ATH9K_PCI_AR9565_2ANT
)

388 
	`©h_öfo
(
comm⁄
, "WB335 2-ANT card detected\n");

390 i‡(
sc
->
drivî_d©a
 & 
ATH9K_PCI_KILLER
)

391 
	`©h_öfo
(
comm⁄
, "Killer Wireless card detected\n");

399 i‡(
sc
->
drivî_d©a
 & (
ATH9K_PCI_AR9565_1ANT
 | 
ATH9K_PCI_AR9565_2ANT
)) {

400 i‡(!(
sc
->
drivî_d©a
 & 
ATH9K_PCI_BT_ANT_DIV
))

401 
pC≠
->
hw_ˇps
 &~
ATH9K_HW_CAP_ANT_DIV_COMB
;

404 i‡(
sc
->
drivî_d©a
 & 
ATH9K_PCI_BT_ANT_DIV
) {

405 
pC≠
->
hw_ˇps
 |
ATH9K_HW_CAP_BT_ANT_DIV
;

406 
	`©h_öfo
(
comm⁄
, "Set BT/WLAN RX diversity capability\n");

409 i‡(
sc
->
drivî_d©a
 & 
ATH9K_PCI_D3_L1_WAR
) {

410 
ah
->
c⁄fig
.
pcõ_w´n
 = 0x0040473b;

411 
	`©h_öfo
(
comm⁄
, "Enable WAR for ASPM D3/L1\n");

414 i‡(
sc
->
drivî_d©a
 & 
ATH9K_PCI_NO_PLL_PWRSAVE
) {

415 
ah
->
c⁄fig
.
no_∂l_pwrßve
 = 
åue
;

416 
	`©h_öfo
(
comm⁄
, "Disable PLL PowerSave\n");

418 
	}
}

420 
	$©h9k_ì¥om_ªque°_cb
(c⁄° 
fúmw¨e
 *
ì¥om_blob
,

421 *
˘x
)

423 
©h9k_ì¥om_˘x
 *
ec
 = 
˘x
;

425 i‡(
ì¥om_blob
)

426 
ec
->
ah
->
ì¥om_blob
 =Éeprom_blob;

428 
	`com∂ëe
(&
ec
->
com∂ëe
);

429 
	}
}

431 
	$©h9k_ì¥om_ªque°
(
©h_so·c
 *
sc
, c⁄° *
«me
)

433 
©h9k_ì¥om_˘x
 
ec
;

434 
©h_hw
 *
ah
 =áh = 
sc
->
sc_ah
;

435 
îr
;

438 
	`öô_com∂ëi⁄
(&
ec
.
com∂ëe
);

439 
ec
.
ah
 = 
sc
->
sc_ah
;

441 
îr
 = 
	`ªque°_fúmw¨e_nowaô
(
THIS_MODULE
, 1, 
«me
, 
sc
->
dev
, 
GFP_KERNEL
,

442 &
ec
, 
©h9k_ì¥om_ªque°_cb
);

443 i‡(
îr
 < 0) {

444 
	`©h_îr
(
	`©h9k_hw_comm⁄
(
ah
),

446  
îr
;

449 
	`waô_f‹_com∂ëi⁄
(&
ec
.
com∂ëe
);

451 i‡(!
ah
->
ì¥om_blob
) {

452 
	`©h_îr
(
	`©h9k_hw_comm⁄
(
ah
),

453 "U«bÀÅÿlﬂd EEPROM fûê%s\n", 
«me
);

454  -
EINVAL
;

458 
	}
}

460 
	$©h9k_ì¥om_ªÀa£
(
©h_so·c
 *
sc
)

462 
	`ªÀa£_fúmw¨e
(
sc
->
sc_ah
->
ì¥om_blob
);

463 
	}
}

465 
	$©h9k_öô_soc_∂©f‹m
(
©h_so·c
 *
sc
)

467 
©h9k_∂©f‹m_d©a
 *
pd©a
 = 
sc
->
dev
->
∂©f‹m_d©a
;

468 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

469 
ªt
 = 0;

471 i‡(!
pd©a
)

474 i‡(
pd©a
->
ì¥om_«me
) {

475 
ªt
 = 
	`©h9k_ì¥om_ªque°
(
sc
, 
pd©a
->
ì¥om_«me
);

476 i‡(
ªt
)

477  
ªt
;

480 i‡(
pd©a
->
tx_gaö_bufÁlo
)

481 
ah
->
c⁄fig
.
tx_gaö_bufÁlo
 = 
åue
;

483  
ªt
;

484 
	}
}

486 
	$©h9k_öô_so·c
(
u16
 
devid
, 
©h_so·c
 *
sc
,

487 c⁄° 
©h_bus_›s
 *
bus_›s
)

489 
©h9k_∂©f‹m_d©a
 *
pd©a
 = 
sc
->
dev
->
∂©f‹m_d©a
;

490 
©h_hw
 *
ah
 = 
NULL
;

491 
©h9k_hw_ˇ∑bûôõs
 *
pC≠
;

492 
©h_comm⁄
 *
comm⁄
;

493 
ªt
 = 0, 
i
;

494 
csz
 = 0;

496 
ah
 = 
	`devm_kzÆloc
(
sc
->
dev
, (
©h_hw
), 
GFP_KERNEL
);

497 i‡(!
ah
)

498  -
ENOMEM
;

500 
ah
->
dev
 = 
sc
->dev;

501 
ah
->
hw
 = 
sc
->hw;

502 
ah
->
hw_vîsi⁄
.
devid
 = devid;

503 
ah
->
ªg_›s
.
ªad
 = 
©h9k_i‹ód32
;

504 
ah
->
ªg_›s
.
wrôe
 = 
©h9k_iowrôe32
;

505 
ah
->
ªg_›s
.
rmw
 = 
©h9k_ªg_rmw
;

506 
sc
->
sc_ah
 = 
ah
;

507 
pC≠
 = &
ah
->
ˇps
;

509 
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

510 
sc
->
dfs_dëe˘‹
 = 
	`dfs_∑âîn_dëe˘‹_öô
(
comm⁄
, 
NL80211_DFS_UNSET
);

511 
sc
->
tx99_powî
 = 
MAX_RATE_POWER
 + 1;

512 
	`öô_waôqueue_hód
(&
sc
->
tx_waô
);

514 i‡(!
pd©a
 ||Öd©a->
u£_ì¥om
) {

515 
ah
->
ah_Êags
 |
AH_USE_EEPROM
;

516 
sc
->
sc_ah
->
Àd_pö
 = -1;

518 
sc
->
sc_ah
->
gpio_mask
 = 
pd©a
->gpio_mask;

519 
sc
->
sc_ah
->
gpio_vÆ
 = 
pd©a
->gpio_val;

520 
sc
->
sc_ah
->
Àd_pö
 = 
pd©a
->led_pin;

521 
ah
->
is_˛k_25mhz
 = 
pd©a
->is_clk_25mhz;

522 
ah
->
gë_mac_ªvisi⁄
 = 
pd©a
->get_mac_revision;

523 
ah
->
exã∫Æ_ª£t
 = 
pd©a
->external_reset;

524 
ah
->
dißbÀ_2ghz
 = 
pd©a
->disable_2ghz;

525 
ah
->
dißbÀ_5ghz
 = 
pd©a
->disable_5ghz;

526 i‡(!
pd©a
->
ídün_check
)

527 
ah
->
ah_Êags
 |
AH_NO_EEP_SWAP
;

530 
comm⁄
->
›s
 = &
ah
->
ªg_›s
;

531 
comm⁄
->
bus_›s
 = bus_ops;

532 
comm⁄
->
ah
 =áh;

533 
comm⁄
->
hw
 = 
sc
->hw;

534 
comm⁄
->
¥iv
 = 
sc
;

535 
comm⁄
->
debug_mask
 = 
©h9k_debug
;

536 
comm⁄
->
btc€x_íabÀd
 = 
©h9k_btc€x_íabÀ
 == 1;

537 
comm⁄
->
dißbÀ_™i
 = 
Ál£
;

542 
	`©h9k_öô_pc€m_∂©f‹m
(
sc
);

544 
ªt
 = 
	`©h9k_öô_soc_∂©f‹m
(
sc
);

545 i‡(
ªt
)

546  
ªt
;

555 i‡(!
comm⁄
->
btc€x_íabÀd
 && 
©h9k_bt_™t_divîsôy
 &&

556 (
pC≠
->
hw_ˇps
 & 
ATH9K_HW_CAP_BT_ANT_DIV
))

557 
comm⁄
->
bt_™t_divîsôy
 = 1;

559 
	`•ö_lock_öô
(&
comm⁄
->
cc_lock
);

560 
	`•ö_lock_öô
(&
sc
->
sc_£rül_rw
);

561 
	`•ö_lock_öô
(&
sc
->
sc_pm_lock
);

562 
	`muãx_öô
(&
sc
->
muãx
);

563 
	`èskÀt_öô
(&
sc
->
öå_tq
, 
©h9k_èskÀt
, ()sc);

564 
	`èskÀt_öô
(&
sc
->
bc⁄_èskÀt
, 
©h9k_bóc⁄_èskÀt
,

565 ()
sc
);

567 
	`£tup_timî
(&
sc
->
¶ìp_timî
, 
©h_ps_fuŒ_¶ìp
, ()sc);

568 
	`INIT_WORK
(&
sc
->
hw_ª£t_w‹k
, 
©h_ª£t_w‹k
);

569 
	`INIT_WORK
(&
sc
->
∑¥d_w‹k
, 
©h_∑¥d_ˇlibøã
);

570 
	`INIT_DELAYED_WORK
(&
sc
->
hw_∂l_w‹k
, 
©h_hw_∂l_w‹k
);

576 
	`©h_ªad_ˇchesize
(
comm⁄
, &
csz
);

577 
comm⁄
->
ˇchñsz
 = 
csz
 << 2;

580 
ªt
 = 
	`©h9k_hw_öô
(
ah
);

581 i‡(
ªt
)

582 
îr_hw
;

584 i‡(
pd©a
 &&Öd©a->
maˇddr
)

585 
	`mem˝y
(
comm⁄
->
maˇddr
, 
pd©a
->maˇddr, 
ETH_ALEN
);

587 
ªt
 = 
	`©h9k_öô_queues
(
sc
);

588 i‡(
ªt
)

589 
îr_queues
;

591 
ªt
 = 
	`©h9k_öô_btc€x
(
sc
);

592 i‡(
ªt
)

593 
îr_btc€x
;

595 
ªt
 = 
	`©h9k_cmn_öô_ch™√ls_øãs
(
comm⁄
);

596 i‡(
ªt
)

597 
îr_btc€x
;

599 
sc
->
p2p_ps_timî
 = 
	`©h_gí_timî_Æloc
(sc->
sc_ah
, 
©h9k_p2p_ps_timî
,

600 
NULL
, 
sc
, 
AR_FIRST_NDP_TIMER
);

602 
	`©h9k_cmn_öô_¸y±o
(
sc
->
sc_ah
);

603 
	`©h9k_öô_misc
(
sc
);

604 
	`©h_fûl_Àd_pö
(
sc
);

606 i‡(
comm⁄
->
bus_›s
->
a•m_öô
)

607 
comm⁄
->
bus_›s
->
	`a•m_öô
(common);

611 
îr_btc€x
:

612 
i
 = 0; i < 
ATH9K_NUM_TX_QUEUES
; i++)

613 i‡(
	`ATH_TXQ_SETUP
(
sc
, 
i
))

614 
	`©h_tx_˛ónupq
(
sc
, &sc->
tx
.
txq
[
i
]);

615 
îr_queues
:

616 
	`©h9k_hw_deöô
(
ah
);

617 
îr_hw
:

618 
	`©h9k_ì¥om_ªÀa£
(
sc
);

619 
	`dev_k‰ì_skb_™y
(
sc
->
tx99_skb
);

620  
ªt
;

621 
	}
}

623 
	$©h9k_öô_b™d_txpowî
(
©h_so·c
 *
sc
, 
b™d
)

625 
õì80211_suµ‹ãd_b™d
 *
sb™d
;

626 
õì80211_ch™√l
 *
ch™
;

627 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

628 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

629 
cfg80211_ch™_def
 
ch™def
;

630 
i
;

632 
sb™d
 = &
comm⁄
->
sb™ds
[
b™d
];

633 
i
 = 0; i < 
sb™d
->
n_ch™√ls
; i++) {

634 
ch™
 = &
sb™d
->
ch™√ls
[
i
];

635 
ah
->
curch™
 = &ah->
ch™√ls
[
ch™
->
hw_vÆue
];

636 
	`cfg80211_ch™def_¸óã
(&
ch™def
, 
ch™
, 
NL80211_CHAN_HT20
);

637 
	`©h9k_cmn_gë_ch™√l
(
sc
->
hw
, 
ah
, &
ch™def
);

638 
	`©h9k_hw_£t_txpowîlimô
(
ah
, 
MAX_RATE_POWER
, 
åue
);

640 
	}
}

642 
	$©h9k_öô_txpowî_limôs
(
©h_so·c
 *
sc
)

644 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

645 
©h9k_ch™√l
 *
curch™
 = 
ah
->curchan;

647 i‡(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_2GHZ
)

648 
	`©h9k_öô_b™d_txpowî
(
sc
, 
IEEE80211_BAND_2GHZ
);

649 i‡(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_5GHZ
)

650 
	`©h9k_öô_b™d_txpowî
(
sc
, 
IEEE80211_BAND_5GHZ
);

652 i‡(
curch™
)

653 
ah
->
curch™
 = curchan;

654 
	}
}

656 c⁄° 
õì80211_iÁ˚_limô
 
	gif_limôs
[] = {

657 { .
max
 = 2048, .
	gty≥s
 = 
BIT
(
NL80211_IFTYPE_STATION
) |

658 
BIT
(
NL80211_IFTYPE_WDS
) },

659 { .
	gmax
 = 8, .
	gty≥s
 =

660 #ifde‡
CPTCFG_MAC80211_MESH


661 
BIT
(
NL80211_IFTYPE_MESH_POINT
) |

663 
BIT
(
NL80211_IFTYPE_AP
) },

664 { .
	gmax
 = 1, .
	gty≥s
 = 
BIT
(
NL80211_IFTYPE_P2P_CLIENT
) |

665 
BIT
(
NL80211_IFTYPE_P2P_GO
) },

666 { .
	gmax
 = 1, .
	gty≥s
 = 
BIT
(
NL80211_IFTYPE_ADHOC
) },

669 c⁄° 
õì80211_iÁ˚_limô
 
	gif_dfs_limôs
[] = {

670 { .
max
 = 1, .
	gty≥s
 = 
BIT
(
NL80211_IFTYPE_AP
) |

671 #ifde‡
CPTCFG_MAC80211_MESH


672 
BIT
(
NL80211_IFTYPE_MESH_POINT
) |

674 
BIT
(
NL80211_IFTYPE_ADHOC
) },

677 c⁄° 
õì80211_iÁ˚_combö©i⁄
 
	gif_comb
[] = {

679 .
limôs
 = 
if_limôs
,

680 .
	gn_limôs
 = 
ARRAY_SIZE
(
if_limôs
),

681 .
	gmax_öãrÁ˚s
 = 2048,

682 .
	gnum_dif„ª¡_ch™√ls
 = 1,

683 .
	gbóc⁄_öt_ö‰a_m©ch
 = 
åue
,

685 #ifde‡
CPTCFG_ATH9K_DFS_CERTIFIED


687 .
	glimôs
 = 
if_dfs_limôs
,

688 .
	gn_limôs
 = 
ARRAY_SIZE
(
if_dfs_limôs
),

689 .
	gmax_öãrÁ˚s
 = 1,

690 .
	gnum_dif„ª¡_ch™√ls
 = 1,

691 .
	gbóc⁄_öt_ö‰a_m©ch
 = 
åue
,

692 .
	gød¨_dëe˘_widths
 = 
BIT
(
NL80211_CHAN_WIDTH_20_NOHT
) |

693 
BIT
(
NL80211_CHAN_WIDTH_20
),

698 
	$©h9k_£t_hw_ˇ∑b
(
©h_so·c
 *
sc
, 
õì80211_hw
 *
hw
)

700 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

701 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

703 
hw
->
Êags
 = 
IEEE80211_HW_RX_INCLUDES_FCS
 |

704 
IEEE80211_HW_HOST_BROADCAST_PS_BUFFERING
 |

705 
IEEE80211_HW_SIGNAL_DBM
 |

706 
IEEE80211_HW_PS_NULLFUNC_STACK
 |

707 
IEEE80211_HW_SPECTRUM_MGMT
 |

708 
IEEE80211_HW_REPORTS_TX_ACK_STATUS
 |

709 
IEEE80211_HW_SUPPORTS_RC_TABLE
 |

710 
IEEE80211_HW_SUPPORTS_HT_CCK_RATES
;

712 i‡(
©h9k_ps_íabÀ
)

713 
hw
->
Êags
 |
IEEE80211_HW_SUPPORTS_PS
;

715 i‡(
sc
->
sc_ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_HT
) {

716 
hw
->
Êags
 |
IEEE80211_HW_AMPDU_AGGREGATION
;

718 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
))

719 
hw
->
ødiŸ≠_mcs_dëaûs
 |=

720 
IEEE80211_RADIOTAP_MCS_HAVE_STBC
;

723 i‡(
	`AR_SREV_9160_10_OR_LATER
(
sc
->
sc_ah
Ë|| 
©h9k_mod∑øm_nohw¸y±
)

724 
hw
->
Êags
 |
IEEE80211_HW_MFP_CAPABLE
;

726 
hw
->
wùhy
->
„©uªs
 |(
NL80211_FEATURE_ACTIVE_MONITOR
 |

727 
NL80211_FEATURE_AP_MODE_CHAN_WIDTH_CHANGE
);

729 i‡(!
	`c⁄fig_íabÀd
(
CPTCFG_ATH9K_TX99
)) {

730 
hw
->
wùhy
->
öãrÁ˚_modes
 =

731 
	`BIT
(
NL80211_IFTYPE_P2P_GO
) |

732 
	`BIT
(
NL80211_IFTYPE_P2P_CLIENT
) |

733 
	`BIT
(
NL80211_IFTYPE_AP
) |

734 
	`BIT
(
NL80211_IFTYPE_WDS
) |

735 
	`BIT
(
NL80211_IFTYPE_STATION
) |

736 
	`BIT
(
NL80211_IFTYPE_ADHOC
) |

737 
	`BIT
(
NL80211_IFTYPE_MESH_POINT
);

738 
hw
->
wùhy
->
iÁ˚_combö©i⁄s
 = 
if_comb
;

739 
hw
->
wùhy
->
n_iÁ˚_combö©i⁄s
 = 
	`ARRAY_SIZE
(
if_comb
);

742 
hw
->
wùhy
->
Êags
 &~
WIPHY_FLAG_PS_ON_BY_DEFAULT
;

744 
hw
->
wùhy
->
Êags
 |
WIPHY_FLAG_IBSS_RSN
;

745 
hw
->
wùhy
->
Êags
 |
WIPHY_FLAG_SUPPORTS_TDLS
;

746 
hw
->
wùhy
->
Êags
 |
WIPHY_FLAG_HAS_REMAIN_ON_CHANNEL
;

747 
hw
->
wùhy
->
Êags
 |
WIPHY_FLAG_SUPPORTS_5_10_MHZ
;

748 
hw
->
wùhy
->
Êags
 |
WIPHY_FLAG_HAS_CHANNEL_SWITCH
;

749 
hw
->
wùhy
->
Êags
 |
WIPHY_FLAG_AP_UAPSD
;

751 
hw
->
queues
 = 4;

752 
hw
->
max_øãs
 = 4;

753 
hw
->
max_li°í_öãrvÆ
 = 1;

754 
hw
->
max_øã_åõs
 = 10;

755 
hw
->
°a_d©a_size
 = (
©h_node
);

756 
hw
->
vif_d©a_size
 = (
©h_vif
);

758 
hw
->
wùhy
->
avaûabÀ_™ã¬as_rx
 = 
	`BIT
(
ah
->
ˇps
.
max_rxchaös
) - 1;

759 
hw
->
wùhy
->
avaûabÀ_™ã¬as_tx
 = 
	`BIT
(
ah
->
ˇps
.
max_txchaös
) - 1;

762 i‡(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_ANT_DIV_COMB
)

763 
hw
->
wùhy
->
avaûabÀ_™ã¬as_rx
 = 
	`BIT
(0) | BIT(1);

765 
sc
->
™t_rx
 = 
hw
->
wùhy
->
avaûabÀ_™ã¬as_rx
;

766 
sc
->
™t_tx
 = 
hw
->
wùhy
->
avaûabÀ_™ã¬as_tx
;

768 i‡(
sc
->
sc_ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_2GHZ
)

769 
hw
->
wùhy
->
b™ds
[
IEEE80211_BAND_2GHZ
] =

770 &
comm⁄
->
sb™ds
[
IEEE80211_BAND_2GHZ
];

771 i‡(
sc
->
sc_ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_5GHZ
)

772 
hw
->
wùhy
->
b™ds
[
IEEE80211_BAND_5GHZ
] =

773 &
comm⁄
->
sb™ds
[
IEEE80211_BAND_5GHZ
];

775 
	`©h9k_öô_wow
(
hw
);

776 
	`©h9k_cmn_ªlﬂd_chaömask
(
ah
);

778 
	`SET_IEEE80211_PERM_ADDR
(
hw
, 
comm⁄
->
maˇddr
);

779 
	}
}

781 
	$©h_gë_öôül_íå›y
(
©h_so·c
 *
sc
)

783 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

784 
buf
[256];

787 
	`©h9k_hw_ª£t
(
ah
,áh->
curch™
, 
NULL
, 
Ál£
);

789 
	`©h9k_hw_gë_adc_íå›y
(
ah
, 
buf
, (buf));

790 
	`add_devi˚_øndom√ss
(
buf
, (buf));

791 
	}
}

793 
	$©h9k_öô_devi˚
(
u16
 
devid
, 
©h_so·c
 *
sc
,

794 c⁄° 
©h_bus_›s
 *
bus_›s
)

796 
õì80211_hw
 *
hw
 = 
sc
->hw;

797 
©h_comm⁄
 *
comm⁄
;

798 
©h_hw
 *
ah
;

799 
îr‹
 = 0;

800 
©h_ªguœt‹y
 *
ªg
;

803 
îr‹
 = 
	`©h9k_öô_so·c
(
devid
, 
sc
, 
bus_›s
);

804 i‡(
îr‹
)

805  
îr‹
;

807 
ah
 = 
sc
->
sc_ah
;

808 
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

809 
	`©h9k_£t_hw_ˇ∑b
(
sc
, 
hw
);

812 
	`£t_bô
(
ATH_OP_INVALID
, &
comm⁄
->
›_Êags
);

815 
îr‹
 = 
	`©h_ªgd_öô
(&
comm⁄
->
ªguœt‹y
, 
sc
->
hw
->
wùhy
,

816 
©h9k_ªg_nŸifõr
);

817 i‡(
îr‹
)

818 
deöô
;

820 
ªg
 = &
comm⁄
->
ªguœt‹y
;

823 
îr‹
 = 
	`©h_tx_öô
(
sc
, 
ATH_TXBUF
);

824 i‡(
îr‹
 != 0)

825 
deöô
;

828 
îr‹
 = 
	`©h_rx_öô
(
sc
, 
ATH_RXBUF
);

829 i‡(
îr‹
 != 0)

830 
deöô
;

832 
	`©h9k_öô_txpowî_limôs
(
sc
);

834 #ifde‡
CPTCFG_MAC80211_LEDS


836 
sc
->
Àd_deÁu…_åiggî
 = 
	`õì80211_¸óã_çt_Àd_åiggî
(sc->
hw
,

837 
IEEE80211_TPT_LEDTRIG_FL_RADIO
, 
©h9k_çt_blök
,

838 
	`ARRAY_SIZE
(
©h9k_çt_blök
));

841 
	`©h_gë_öôül_íå›y
(
sc
);

844 
îr‹
 = 
	`õì80211_ªgi°î_hw
(
hw
);

845 i‡(
îr‹
)

846 
rx_˛ónup
;

848 
îr‹
 = 
	`©h9k_öô_debug
(
ah
);

849 i‡(
îr‹
) {

850 
	`©h_îr
(
comm⁄
, "UnableÅo create debugfs files\n");

851 
uƒegi°î
;

855 i‡(!
	`©h_is_w‹ld_ªgd
(
ªg
)) {

856 
îr‹
 = 
	`ªguœt‹y_höt
(
hw
->
wùhy
, 
ªg
->
Æpha2
);

857 i‡(
îr‹
)

858 
debug_˛ónup
;

861 
	`©h_öô_Àds
(
sc
);

862 
	`©h_°¨t_rfkûl_pﬁl
(
sc
);

866 
debug_˛ónup
:

867 
	`©h9k_deöô_debug
(
sc
);

868 
uƒegi°î
:

869 
	`õì80211_uƒegi°î_hw
(
hw
);

870 
rx_˛ónup
:

871 
	`©h_rx_˛ónup
(
sc
);

872 
deöô
:

873 
	`©h9k_deöô_so·c
(
sc
);

874  
îr‹
;

875 
	}
}

881 
	$©h9k_deöô_so·c
(
©h_so·c
 *
sc
)

883 
i
 = 0;

885 i‡(
sc
->
p2p_ps_timî
)

886 
	`©h_gí_timî_‰ì
(
sc
->
sc_ah
, sc->
p2p_ps_timî
);

888 
	`©h9k_deöô_btc€x
(
sc
);

890 
i
 = 0; i < 
ATH9K_NUM_TX_QUEUES
; i++)

891 i‡(
	`ATH_TXQ_SETUP
(
sc
, 
i
))

892 
	`©h_tx_˛ónupq
(
sc
, &sc->
tx
.
txq
[
i
]);

894 
	`dñ_timî_sync
(&
sc
->
¶ìp_timî
);

895 
	`©h9k_hw_deöô
(
sc
->
sc_ah
);

896 i‡(
sc
->
dfs_dëe˘‹
 !
NULL
)

897 
sc
->
dfs_dëe˘‹
->
	`exô
(sc->dfs_detector);

899 
	`©h9k_ì¥om_ªÀa£
(
sc
);

900 
	}
}

902 
	$©h9k_deöô_devi˚
(
©h_so·c
 *
sc
)

904 
õì80211_hw
 *
hw
 = 
sc
->hw;

906 
	`©h9k_ps_wakeup
(
sc
);

908 
	`wùhy_rfkûl_°›_pﬁlög
(
sc
->
hw
->
wùhy
);

909 
	`©h_deöô_Àds
(
sc
);

911 
	`©h9k_ps_ª°‹e
(
sc
);

913 
	`©h9k_deöô_debug
(
sc
);

914 
	`õì80211_uƒegi°î_hw
(
hw
);

915 
	`©h_rx_˛ónup
(
sc
);

916 
	`©h9k_deöô_so·c
(
sc
);

917 
	}
}

923 
__öô
 
	$©h9k_öô
()

925 
îr‹
;

927 
îr‹
 = 
	`©h_ahb_öô
();

928 i‡(
îr‹
 < 0) {

929 
îr‹
 = -
ENODEV
;

930 
îr_out
;

933 
îr‹
 = 
	`©h_pci_öô
();

934 i‡(
îr‹
 < 0) {

935 
	`¥_îr
("No PCI devices found, driverÇot installed\n");

936 
îr‹
 = -
ENODEV
;

937 
îr_ahb_exô
;

942 
îr_ahb_exô
:

943 
	`©h_ahb_exô
();

944 
îr_out
:

945  
îr‹
;

946 
	}
}

947 
moduÀ_öô
(
©h9k_öô
);

949 
__exô
 
	$©h9k_exô
()

951 
is_©h9k_u∆ﬂded
 = 
åue
;

952 
	`©h_ahb_exô
();

953 
	`©h_pci_exô
();

954 
	`¥_öfo
("%s: Drivî u∆ﬂded\n", 
dev_öfo
);

955 
	}
}

956 
moduÀ_exô
(
©h9k_exô
);

	@link.c

17 
	~"©h9k.h
"

23 
	$©h_tx_com∂ëe_pﬁl_w‹k
(
w‹k_°ru˘
 *
w‹k
)

25 
©h_so·c
 *
sc
 = 
	`c⁄èöî_of
(
w‹k
, ath_softc,

26 
tx_com∂ëe_w‹k
.
w‹k
);

27 
©h_txq
 *
txq
;

28 
i
;

29 
boﬁ
 
√edª£t
 = 
Ál£
;

32 i‡(
sc
->
tx99_°©e
) {

33 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
), 
RESET
,

38 
i
 = 0; i < 
IEEE80211_NUM_ACS
; i++) {

39 
txq
 = 
sc
->
tx
.
txq_m≠
[
i
];

41 
	`©h_txq_lock
(
sc
, 
txq
);

42 i‡(
txq
->
axq_dïth
) {

43 i‡(
txq
->
axq_tx_ö¥ogªss
) {

44 
√edª£t
 = 
åue
;

45 
	`©h_txq_u∆ock
(
sc
, 
txq
);

48 
txq
->
axq_tx_ö¥ogªss
 = 
åue
;

51 
	`©h_txq_u∆ock
(
sc
, 
txq
);

54 i‡(
√edª£t
) {

55 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
), 
RESET
,

57 
	`©h9k_queue_ª£t
(
sc
, 
RESET_TYPE_TX_HANG
);

61 
	`õì80211_queue_dñayed_w‹k
(
sc
->
hw
, &sc->
tx_com∂ëe_w‹k
,

62 
	`m£cs_to_jiffõs
(
ATH_TX_COMPLETE_POLL_INT
));

63 
	}
}

68 
boﬁ
 
	$©h_hw_check
(
©h_so·c
 *
sc
)

70 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

71 
©h_ª£t_ty≥
 
ty≥
;

72 
boﬁ
 
is_Æive
;

74 
	`©h9k_ps_wakeup
(
sc
);

76 
is_Æive
 = 
	`©h9k_hw_check_Æive
(
sc
->
sc_ah
);

78 i‡(!
is_Æive
) {

79 
	`©h_dbg
(
comm⁄
, 
RESET
,

81 
ty≥
 = 
RESET_TYPE_MAC_HANG
;

82 
	`©h9k_queue_ª£t
(
sc
, 
ty≥
);

85 
	`©h9k_ps_ª°‹e
(
sc
);

87  
is_Æive
;

88 
	}
}

93 
boﬁ
 
	$©h_hw_∂l_rx_h™g_check
(
©h_so·c
 *
sc
, 
u32
 
∂l_sqsum
)

95 
cou¡
;

96 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

98 i‡(
∂l_sqsum
 >= 0x40000) {

99 
cou¡
++;

100 i‡(
cou¡
 == 3) {

101 
	`©h_dbg
(
comm⁄
, 
RESET
, "PLL WAR,ÑesettingÅhe chip\n");

102 
	`©h9k_queue_ª£t
(
sc
, 
RESET_TYPE_PLL_HANG
);

103 
cou¡
 = 0;

104  
åue
;

107 
cou¡
 = 0;

110  
Ál£
;

111 
	}
}

113 
	$©h_hw_∂l_w‹k
(
w‹k_°ru˘
 *
w‹k
)

115 
u32
 
∂l_sqsum
;

116 
©h_so·c
 *
sc
 = 
	`c⁄èöî_of
(
w‹k
, ath_softc,

117 
hw_∂l_w‹k
.
w‹k
);

118 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

125 i‡(!
	`ã°_bô
(
ATH_OP_BEACONS
, &
comm⁄
->
›_Êags
))

128 i‡(
sc
->
tx99_°©e
)

131 
	`©h9k_ps_wakeup
(
sc
);

132 
∂l_sqsum
 = 
	`¨9003_gë_∂l_sqsum_dvc
(
sc
->
sc_ah
);

133 
	`©h9k_ps_ª°‹e
(
sc
);

134 i‡(
	`©h_hw_∂l_rx_h™g_check
(
sc
, 
∂l_sqsum
))

137 
	`õì80211_queue_dñayed_w‹k
(
sc
->
hw
, &sc->
hw_∂l_w‹k
,

138 
	`m£cs_to_jiffõs
(
ATH_PLL_WORK_INTERVAL
));

139 
	}
}

144 
	$©h_∑¥d_a˘iv©e
(
©h_so·c
 *
sc
)

146 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

147 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

148 
©h9k_hw_ˇl_d©a
 *
ˇld©a
 = 
ah
->caldata;

149 
chaö
;

151 i‡(!
ˇld©a
 || !
	`ã°_bô
(
PAPRD_DONE
, &ˇld©a->
ˇl_Êags
)) {

152 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "FailedÅoáctivate PAPRD\n");

156 
	`¨9003_∑¥d_íabÀ
(
ah
, 
Ál£
);

157 
chaö
 = 0; chaö < 
AR9300_MAX_CHAINS
; chain++) {

158 i‡(!(
ah
->
txchaömask
 & 
	`BIT
(
chaö
)))

161 
	`¨9003_∑¥d_p›uœã_sögÀ_èbÀ
(
ah
, 
ˇld©a
, 
chaö
);

164 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "Activating PAPRD\n");

165 
	`¨9003_∑¥d_íabÀ
(
ah
, 
åue
);

166 
	}
}

168 
boﬁ
 
	$©h_∑¥d_£nd_‰ame
(
©h_so·c
 *
sc
, 
sk_buff
 *
skb
, 
chaö
)

170 
õì80211_hw
 *
hw
 = 
sc
->hw;

171 
õì80211_tx_öfo
 *
tx_öfo
 = 
	`IEEE80211_SKB_CB
(
skb
);

172 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

173 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

174 
©h_tx_c⁄åﬁ
 
tx˘l
;

175 
time_À·
;

177 
	`mem£t
(&
tx˘l
, 0, (txctl));

178 
tx˘l
.
txq
 = 
sc
->
tx
.
txq_m≠
[
IEEE80211_AC_BE
];

180 
	`mem£t
(
tx_öfo
, 0, (*tx_info));

181 
tx_öfo
->
b™d
 = 
hw
->
c⁄f
.
ch™def
.
ch™
->band;

182 
tx_öfo
->
Êags
 |
IEEE80211_TX_CTL_NO_ACK
;

183 
tx_öfo
->
c⁄åﬁ
.
øãs
[0].
idx
 = 0;

184 
tx_öfo
->
c⁄åﬁ
.
øãs
[0].
cou¡
 = 1;

185 
tx_öfo
->
c⁄åﬁ
.
øãs
[0].
Êags
 = 
IEEE80211_TX_RC_MCS
;

186 
tx_öfo
->
c⁄åﬁ
.
øãs
[1].
idx
 = -1;

188 
	`öô_com∂ëi⁄
(&
sc
->
∑¥d_com∂ëe
);

189 
tx˘l
.
∑¥d
 = 
	`BIT
(
chaö
);

191 i‡(
	`©h_tx_°¨t
(
hw
, 
skb
, &
tx˘l
) != 0) {

192 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "PAPRD TX failed\n");

193 
	`dev_k‰ì_skb_™y
(
skb
);

194  
Ál£
;

197 
time_À·
 = 
	`waô_f‹_com∂ëi⁄_timeout
(&
sc
->
∑¥d_com∂ëe
,

198 
	`m£cs_to_jiffõs
(
ATH_PAPRD_TIMEOUT
));

200 i‡(!
time_À·
)

201 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

203 
chaö
);

205  !!
time_À·
;

206 
	}
}

208 
	$©h_∑¥d_ˇlibøã
(
w‹k_°ru˘
 *
w‹k
)

210 
©h_so·c
 *
sc
 = 
	`c⁄èöî_of
(
w‹k
, ©h_so·c, 
∑¥d_w‹k
);

211 
õì80211_hw
 *
hw
 = 
sc
->hw;

212 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

213 
õì80211_hdr
 *
hdr
;

214 
sk_buff
 *
skb
 = 
NULL
;

215 
©h9k_hw_ˇl_d©a
 *
ˇld©a
 = 
ah
->caldata;

216 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

217 
·y≥
;

218 
chaö_ok
 = 0;

219 
chaö
;

220 
Àn
 = 1800;

221 
ªt
;

223 i‡(!
ˇld©a
 ||

224 !
	`ã°_bô
(
PAPRD_PACKET_SENT
, &
ˇld©a
->
ˇl_Êags
) ||

225 
	`ã°_bô
(
PAPRD_DONE
, &
ˇld©a
->
ˇl_Êags
)) {

226 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
, "Skipping PAPRD calibration\n");

230 
	`©h9k_ps_wakeup
(
sc
);

232 i‡(
	`¨9003_∑¥d_öô_èbÀ
(
ah
) < 0)

233 
Áû_∑¥d
;

235 
skb
 = 
	`Æloc_skb
(
Àn
, 
GFP_KERNEL
);

236 i‡(!
skb
)

237 
Áû_∑¥d
;

239 
	`skb_put
(
skb
, 
Àn
);

240 
	`mem£t
(
skb
->
d©a
, 0, 
Àn
);

241 
hdr
 = (
õì80211_hdr
 *)
skb
->
d©a
;

242 
·y≥
 = 
IEEE80211_FTYPE_DATA
 | 
IEEE80211_STYPE_NULLFUNC
;

243 
hdr
->
‰ame_c⁄åﬁ
 = 
	`˝u_to_À16
(
·y≥
);

244 
hdr
->
duøti⁄_id
 = 
	`˝u_to_À16
(10);

245 
	`mem˝y
(
hdr
->
addr1
, 
hw
->
wùhy
->
≥rm_addr
, 
ETH_ALEN
);

246 
	`mem˝y
(
hdr
->
addr2
, 
hw
->
wùhy
->
≥rm_addr
, 
ETH_ALEN
);

247 
	`mem˝y
(
hdr
->
addr3
, 
hw
->
wùhy
->
≥rm_addr
, 
ETH_ALEN
);

249 
chaö
 = 0; chaö < 
AR9300_MAX_CHAINS
; chain++) {

250 i‡(!(
ah
->
txchaömask
 & 
	`BIT
(
chaö
)))

253 
chaö_ok
 = 0;

254 
	`¨9003_∑¥d_£tup_gaö_èbÀ
(
ah
, 
chaö
);

256 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

257 "Sídög PAPRDÅøöög fømê⁄ chaö %d\n", 
chaö
);

258 i‡(!
	`©h_∑¥d_£nd_‰ame
(
sc
, 
skb
, 
chaö
))

259 
Áû_∑¥d
;

261 i‡(!
	`¨9003_∑¥d_is_d⁄e
(
ah
)) {

262 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

263 "PAPRDÇŸ yë d⁄ê⁄ chaö %d\n", 
chaö
);

267 
ªt
 = 
	`¨9003_∑¥d_¸óã_curve
(
ah
, 
ˇld©a
, 
chaö
);

268 i‡(
ªt
 =-
EINPROGRESS
) {

269 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

271 
chaö
);

273 } i‡(
ªt
) {

274 
	`©h_dbg
(
comm⁄
, 
CALIBRATE
,

276 
chaö
);

280 
chaö_ok
 = 1;

282 
	`k‰ì_skb
(
skb
);

284 i‡(
chaö_ok
) {

285 
	`£t_bô
(
PAPRD_DONE
, &
ˇld©a
->
ˇl_Êags
);

286 
	`©h_∑¥d_a˘iv©e
(
sc
);

289 
Áû_∑¥d
:

290 
	`©h9k_ps_ª°‹e
(
sc
);

291 
	}
}

300 
	$©h_™i_ˇlibøã
(
d©a
)

302 
©h_so·c
 *
sc
 = (©h_so·¯*)
d©a
;

303 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

304 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

305 
boﬁ
 
l⁄gˇl
 = 
Ál£
;

306 
boﬁ
 
sh‹tˇl
 = 
Ál£
;

307 
boﬁ
 
™iÊag
 = 
Ál£
;

308 
time°amp
 = 
	`jiffõs_to_m£cs
(
jiffõs
);

309 
u32
 
ˇl_öãrvÆ
, 
sh‹t_ˇl_öãrvÆ
, 
l⁄g_ˇl_öãrvÆ
;

310 
Êags
;

312 i‡(
ah
->
ˇld©a
 && 
	`ã°_bô
(
NFCAL_INTF
, &ah->ˇld©a->
ˇl_Êags
))

313 
l⁄g_ˇl_öãrvÆ
 = 
ATH_LONG_CALINTERVAL_INT
;

315 
l⁄g_ˇl_öãrvÆ
 = 
ATH_LONG_CALINTERVAL
;

317 
sh‹t_ˇl_öãrvÆ
 = (
ah
->
›mode
 =
NL80211_IFTYPE_AP
) ?

318 
ATH_AP_SHORT_CALINTERVAL
 : 
ATH_STA_SHORT_CALINTERVAL
;

321 i‡(
sc
->
sc_ah
->
powî_mode
 !
ATH9K_PM_AWAKE
) {

322 i‡(++
ah
->
™i_skù_cou¡
 >
ATH_ANI_MAX_SKIP_COUNT
) {

323 
	`•ö_lock_úqßve
(&
sc
->
sc_pm_lock
, 
Êags
);

324 
sc
->
ps_Êags
 |
PS_WAIT_FOR_ANI
;

325 
	`•ö_u∆ock_úqª°‹e
(&
sc
->
sc_pm_lock
, 
Êags
);

327 
£t_timî
;

329 
ah
->
™i_skù_cou¡
 = 0;

330 
	`•ö_lock_úqßve
(&
sc
->
sc_pm_lock
, 
Êags
);

331 
sc
->
ps_Êags
 &~
PS_WAIT_FOR_ANI
;

332 
	`•ö_u∆ock_úqª°‹e
(&
sc
->
sc_pm_lock
, 
Êags
);

334 
	`©h9k_ps_wakeup
(
sc
);

337 i‡((
time°amp
 - 
comm⁄
->
™i
.
l⁄gˇl_timî
Ë>
l⁄g_ˇl_öãrvÆ
) {

338 
l⁄gˇl
 = 
åue
;

339 
comm⁄
->
™i
.
l⁄gˇl_timî
 = 
time°amp
;

343 i‡(!
comm⁄
->
™i
.
ˇld⁄e
) {

344 i‡((
time°amp
 - 
comm⁄
->
™i
.
sh‹tˇl_timî
Ë>
sh‹t_ˇl_öãrvÆ
) {

345 
sh‹tˇl
 = 
åue
;

346 
comm⁄
->
™i
.
sh‹tˇl_timî
 = 
time°amp
;

347 
comm⁄
->
™i
.
ª£tˇl_timî
 = 
time°amp
;

350 i‡((
time°amp
 - 
comm⁄
->
™i
.
ª£tˇl_timî
) >=

351 
ATH_RESTART_CALINTERVAL
) {

352 
comm⁄
->
™i
.
ˇld⁄e
 = 
	`©h9k_hw_ª£t_ˇlvÆid
(
ah
);

353 i‡(
comm⁄
->
™i
.
ˇld⁄e
)

354 
comm⁄
->
™i
.
ª£tˇl_timî
 = 
time°amp
;

359 i‡((
time°amp
 - 
comm⁄
->
™i
.
check™i_timî
Ë>
ah
->
c⁄fig
.
™i_pﬁl_öãrvÆ
) {

360 
™iÊag
 = 
åue
;

361 
comm⁄
->
™i
.
check™i_timî
 = 
time°amp
;

365 i‡(
™iÊag
) {

366 
	`•ö_lock
(&
comm⁄
->
cc_lock
);

367 
	`©h9k_hw_™i_m⁄ô‹
(
ah
,áh->
curch™
);

368 
	`©h_upd©e_survey_°©s
(
sc
);

369 
	`•ö_u∆ock
(&
comm⁄
->
cc_lock
);

373 i‡(
l⁄gˇl
 || 
sh‹tˇl
) {

374 
ªt
 = 
	`©h9k_hw_ˇlibøã
(
ah
,áh->
curch™
,áh->
rxchaömask
,

375 
l⁄gˇl
);

376 i‡(
ªt
 < 0) {

377 
	`©h9k_queue_ª£t
(
sc
, 
RESET_TYPE_CALIBRATION
);

381 
comm⁄
->
™i
.
ˇld⁄e
 = 
ªt
;

384 
	`©h_dbg
(
comm⁄
, 
ANI
,

386 
jiffõs
,

387 
l⁄gˇl
 ? "l⁄g" : "", 
sh‹tˇl
 ? "short" : "",

388 
™iÊag
 ? "™i" : "", 
comm⁄
->
™i
.
ˇld⁄e
 ? "true" : "false");

390 
	`©h9k_ps_ª°‹e
(
sc
);

392 
£t_timî
:

398 
ˇl_öãrvÆ
 = 
ATH_LONG_CALINTERVAL
;

399 
ˇl_öãrvÆ
 = 
	`mö
(ˇl_öãrvÆ, (
u32
)
ah
->
c⁄fig
.
™i_pﬁl_öãrvÆ
);

400 i‡(!
comm⁄
->
™i
.
ˇld⁄e
)

401 
ˇl_öãrvÆ
 = 
	`mö
(ˇl_öãrvÆ, (
u32
)
sh‹t_ˇl_öãrvÆ
);

403 
	`mod_timî
(&
comm⁄
->
™i
.
timî
, 
jiffõs
 + 
	`m£cs_to_jiffõs
(
ˇl_öãrvÆ
));

405 i‡(
	`¨9003_is_∑¥d_íabÀd
(
ah
Ë&&áh->
ˇld©a
) {

406 i‡(!
	`ã°_bô
(
PAPRD_DONE
, &
ah
->
ˇld©a
->
ˇl_Êags
)) {

407 
	`õì80211_queue_w‹k
(
sc
->
hw
, &sc->
∑¥d_w‹k
);

408 } i‡(!
ah
->
∑¥d_èbÀ_wrôe_d⁄e
) {

409 
	`©h9k_ps_wakeup
(
sc
);

410 
	`©h_∑¥d_a˘iv©e
(
sc
);

411 
	`©h9k_ps_ª°‹e
(
sc
);

414 
	}
}

416 
	$©h_°¨t_™i
(
©h_so·c
 *
sc
)

418 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

419 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

420 
time°amp
 = 
	`jiffõs_to_m£cs
(
jiffõs
);

422 i‡(
comm⁄
->
dißbÀ_™i
 ||

423 !
	`ã°_bô
(
ATH_OP_ANI_RUN
, &
comm⁄
->
›_Êags
) ||

424 (
sc
->
hw
->
c⁄f
.
Êags
 & 
IEEE80211_CONF_OFFCHANNEL
))

427 
comm⁄
->
™i
.
l⁄gˇl_timî
 = 
time°amp
;

428 
comm⁄
->
™i
.
sh‹tˇl_timî
 = 
time°amp
;

429 
comm⁄
->
™i
.
check™i_timî
 = 
time°amp
;

431 
	`©h_dbg
(
comm⁄
, 
ANI
, "Starting ANI\n");

432 
	`mod_timî
(&
comm⁄
->
™i
.
timî
,

433 
jiffõs
 + 
	`m£cs_to_jiffõs
((
u32
)
ah
->
c⁄fig
.
™i_pﬁl_öãrvÆ
));

434 
	}
}

436 
	$©h_°›_™i
(
©h_so·c
 *
sc
)

438 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

440 
	`©h_dbg
(
comm⁄
, 
ANI
, "Stopping ANI\n");

441 
	`dñ_timî_sync
(&
comm⁄
->
™i
.
timî
);

442 
	}
}

444 
	$©h_check_™i
(
©h_so·c
 *
sc
)

446 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

447 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

448 
©h_bóc⁄_c⁄fig
 *
cur_c⁄f
 = &
sc
->
cur_bóc⁄_c⁄f
;

454 i‡(
ah
->
›mode
 =
NL80211_IFTYPE_ADHOC
) {

455 i‡(!
cur_c⁄f
->
íabÀ_bóc⁄
)

456 
°›_™i
;

457 } i‡(
ah
->
›mode
 =
NL80211_IFTYPE_AP
) {

458 i‡(!
cur_c⁄f
->
íabÀ_bóc⁄
) {

463 i‡(!
	`ã°_bô
(
ATH_OP_PRIM_STA_VIF
, &
comm⁄
->
›_Êags
))

464 
°›_™i
;

466 } i‡(
ah
->
›mode
 =
NL80211_IFTYPE_STATION
) {

467 i‡(!
	`ã°_bô
(
ATH_OP_PRIM_STA_VIF
, &
comm⁄
->
›_Êags
))

468 
°›_™i
;

471 i‡(!
	`ã°_bô
(
ATH_OP_ANI_RUN
, &
comm⁄
->
›_Êags
)) {

472 
	`£t_bô
(
ATH_OP_ANI_RUN
, &
comm⁄
->
›_Êags
);

473 
	`©h_°¨t_™i
(
sc
);

478 
°›_™i
:

479 
	`˛ór_bô
(
ATH_OP_ANI_RUN
, &
comm⁄
->
›_Êags
);

480 
	`©h_°›_™i
(
sc
);

481 
	}
}

483 
	$©h_upd©e_survey_nf
(
©h_so·c
 *
sc
, 
ch™√l
)

485 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

486 
©h9k_ch™√l
 *
ch™
 = &
ah
->
ch™√ls
[
ch™√l
];

487 
survey_öfo
 *
survey
 = &
sc
->survey[
ch™√l
];

489 i‡(
ch™
->
noi£Êo‹
) {

490 
survey
->
fûÀd
 |
SURVEY_INFO_NOISE_DBM
;

491 
survey
->
noi£
 = 
	`©h9k_hw_gëch™_noi£
(
ah
, 
ch™
,

492 
ch™
->
noi£Êo‹
);

494 
	}
}

501 
	$©h_upd©e_survey_°©s
(
©h_so·c
 *
sc
)

503 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

504 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

505 
pos
 = 
ah
->
curch™
 - &ah->
ch™√ls
[0];

506 
survey_öfo
 *
survey
 = &
sc
->survey[
pos
];

507 
©h_cy˛e_cou¡îs
 *
cc
 = &
comm⁄
->
cc_survey
;

508 
div
 = 
comm⁄
->
˛ockøã
 * 1000;

509 
ªt
 = 0;

511 i‡(!
ah
->
curch™
)

514 i‡(
ah
->
powî_mode
 =
ATH9K_PM_AWAKE
)

515 
	`©h_hw_cy˛e_cou¡îs_upd©e
(
comm⁄
);

517 i‡(
cc
->
cy˛es
 > 0) {

518 
survey
->
fûÀd
 |
SURVEY_INFO_CHANNEL_TIME
 |

519 
SURVEY_INFO_CHANNEL_TIME_BUSY
 |

520 
SURVEY_INFO_CHANNEL_TIME_RX
 |

521 
SURVEY_INFO_CHANNEL_TIME_TX
;

522 
survey
->
ch™√l_time
 +
cc
->
cy˛es
 / 
div
;

523 
survey
->
ch™√l_time_busy
 +
cc
->
rx_busy
 / 
div
;

524 
survey
->
ch™√l_time_rx
 +
cc
->
rx_‰ame
 / 
div
;

525 
survey
->
ch™√l_time_tx
 +
cc
->
tx_‰ame
 / 
div
;

528 i‡(
cc
->
cy˛es
 < 
div
)

531 i‡(
cc
->
cy˛es
 > 0)

532 
ªt
 = 
cc
->
rx_busy
 * 100 / cc->
cy˛es
;

534 
	`mem£t
(
cc
, 0, (*cc));

536 
	`©h_upd©e_survey_nf
(
sc
, 
pos
);

538  
ªt
;

539 
	}
}

	@mac.c

17 
	~"hw.h
"

18 
	~"hw-›s.h
"

19 
	~<löux/exp‹t.h
>

21 
	$©h9k_hw_£t_txq_öãºu±s
(
©h_hw
 *
ah
,

22 
©h9k_tx_queue_öfo
 *
qi
)

24 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
INTERRUPT
,

26 
ah
->
txok_öãºu±_mask
,áh->
txîr_öãºu±_mask
,

27 
ah
->
txdesc_öãºu±_mask
,áh->
txeﬁ_öãºu±_mask
,

28 
ah
->
txu∫_öãºu±_mask
);

30 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

32 
	`REG_WRITE
(
ah
, 
AR_IMR_S0
,

33 
	`SM
(
ah
->
txok_öãºu±_mask
, 
AR_IMR_S0_QCU_TXOK
)

34 | 
	`SM
(
ah
->
txdesc_öãºu±_mask
, 
AR_IMR_S0_QCU_TXDESC
));

35 
	`REG_WRITE
(
ah
, 
AR_IMR_S1
,

36 
	`SM
(
ah
->
txîr_öãºu±_mask
, 
AR_IMR_S1_QCU_TXERR
)

37 | 
	`SM
(
ah
->
txeﬁ_öãºu±_mask
, 
AR_IMR_S1_QCU_TXEOL
));

39 
ah
->
imrs2_ªg
 &~
AR_IMR_S2_QCU_TXURN
;

40 
ah
->
imrs2_ªg
 |◊h->
txu∫_öãºu±_mask
 & 
AR_IMR_S2_QCU_TXURN
);

41 
	`REG_WRITE
(
ah
, 
AR_IMR_S2
,áh->
imrs2_ªg
);

43 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

44 
	}
}

46 
u32
 
	$©h9k_hw_gëtxbuf
(
©h_hw
 *
ah
, 
u32
 
q
)

48  
	`REG_READ
(
ah
, 
	`AR_QTXDP
(
q
));

49 
	}
}

50 
EXPORT_SYMBOL
(
©h9k_hw_gëtxbuf
);

52 
	$©h9k_hw_puâxbuf
(
©h_hw
 *
ah
, 
u32
 
q
, u32 
txdp
)

54 
	`REG_WRITE
(
ah
, 
	`AR_QTXDP
(
q
), 
txdp
);

55 
	}
}

56 
EXPORT_SYMBOL
(
©h9k_hw_puâxbuf
);

58 
	$©h9k_hw_tx°¨t
(
©h_hw
 *
ah
, 
u32
 
q
)

60 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
QUEUE
, "E«bÀ TXE o¿queue: %u\n", 
q
);

61 
	`REG_WRITE
(
ah
, 
AR_Q_TXE
, 1 << 
q
);

62 
	}
}

63 
EXPORT_SYMBOL
(
©h9k_hw_tx°¨t
);

65 
u32
 
	$©h9k_hw_numtx≥ndög
(
©h_hw
 *
ah
, 
u32
 
q
)

67 
u32
 
≈íd
;

69 
≈íd
 = 
	`REG_READ
(
ah
, 
	`AR_QSTS
(
q
)Ë& 
AR_Q_STS_PEND_FR_CNT
;

70 i‡(
≈íd
 == 0) {

72 i‡(
	`REG_READ
(
ah
, 
AR_Q_TXE
Ë& (1 << 
q
))

73 
≈íd
 = 1;

76  
≈íd
;

77 
	}
}

78 
EXPORT_SYMBOL
(
©h9k_hw_numtx≥ndög
);

105 
boﬁ
 
	$©h9k_hw_upd©ëxåigÀvñ
(
©h_hw
 *
ah
, 
boﬁ
 
bIncTrigLevñ
)

107 
u32
 
txcfg
, 
curLevñ
, 
√wLevñ
;

109 i‡(
ah
->
tx_åig_Àvñ
 >ah->
c⁄fig
.
max_txåig_Àvñ
)

110  
Ál£
;

112 
	`©h9k_hw_dißbÀ_öãºu±s
(
ah
);

114 
txcfg
 = 
	`REG_READ
(
ah
, 
AR_TXCFG
);

115 
curLevñ
 = 
	`MS
(
txcfg
, 
AR_FTRIG
);

116 
√wLevñ
 = 
curLevñ
;

117 i‡(
bIncTrigLevñ
) {

118 i‡(
curLevñ
 < 
ah
->
c⁄fig
.
max_txåig_Àvñ
)

119 
√wLevñ
++;

120 } i‡(
curLevñ
 > 
MIN_TX_FIFO_THRESHOLD
)

121 
√wLevñ
--;

122 i‡(
√wLevñ
 !
curLevñ
)

123 
	`REG_WRITE
(
ah
, 
AR_TXCFG
,

124 (
txcfg
 & ~
AR_FTRIG
Ë| 
	`SM
(
√wLevñ
, AR_FTRIG));

126 
	`©h9k_hw_íabÀ_öãºu±s
(
ah
);

128 
ah
->
tx_åig_Àvñ
 = 
√wLevñ
;

130  
√wLevñ
 !
curLevñ
;

131 
	}
}

132 
EXPORT_SYMBOL
(
©h9k_hw_upd©ëxåigÀvñ
);

134 
	$©h9k_hw_ab‹t_tx_dma
(
©h_hw
 *
ah
)

136 
maxdñay
 = 1000;

137 
i
, 
q
;

139 i‡(
ah
->
curch™
) {

140 i‡(
	`IS_CHAN_HALF_RATE
(
ah
->
curch™
))

141 
maxdñay
 *= 2;

142 i‡(
	`IS_CHAN_QUARTER_RATE
(
ah
->
curch™
))

143 
maxdñay
 *= 4;

146 
	`REG_WRITE
(
ah
, 
AR_Q_TXD
, 
AR_Q_TXD_M
);

148 
	`REG_SET_BIT
(
ah
, 
AR_PCU_MISC
, 
AR_PCU_FORCE_QUIET_COLL
 | 
AR_PCU_CLEAR_VMF
);

149 
	`REG_SET_BIT
(
ah
, 
AR_DIAG_SW
, 
AR_DIAG_FORCE_CH_IDLE_HIGH
);

150 
	`REG_SET_BIT
(
ah
, 
AR_D_GBL_IFS_MISC
, 
AR_D_GBL_IFS_MISC_IGNORE_BACKOFF
);

152 
q
 = 0; q < 
AR_NUM_QCU
; q++) {

153 
i
 = 0; i < 
maxdñay
; i++) {

154 i‡(
i
)

155 
	`udñay
(5);

157 i‡(!
	`©h9k_hw_numtx≥ndög
(
ah
, 
q
))

162 
	`REG_CLR_BIT
(
ah
, 
AR_PCU_MISC
, 
AR_PCU_FORCE_QUIET_COLL
 | 
AR_PCU_CLEAR_VMF
);

163 
	`REG_CLR_BIT
(
ah
, 
AR_DIAG_SW
, 
AR_DIAG_FORCE_CH_IDLE_HIGH
);

164 
	`REG_CLR_BIT
(
ah
, 
AR_D_GBL_IFS_MISC
, 
AR_D_GBL_IFS_MISC_IGNORE_BACKOFF
);

166 
	`REG_WRITE
(
ah
, 
AR_Q_TXD
, 0);

167 
	}
}

168 
EXPORT_SYMBOL
(
©h9k_hw_ab‹t_tx_dma
);

170 
boﬁ
 
	$©h9k_hw_°›_dma_queue
(
©h_hw
 *
ah
, 
u32
 
q
)

172 
	#ATH9K_TX_STOP_DMA_TIMEOUT
 1000

	)

173 
	#ATH9K_TIME_QUANTUM
 100

	)

174 
waô_time
 = 
ATH9K_TX_STOP_DMA_TIMEOUT
 / 
ATH9K_TIME_QUANTUM
;

175 
waô
;

177 
	`REG_WRITE
(
ah
, 
AR_Q_TXD
, 1 << 
q
);

179 
waô
 = 
waô_time
; wait != 0; wait--) {

180 i‡(
waô
 !
waô_time
)

181 
	`udñay
(
ATH9K_TIME_QUANTUM
);

183 i‡(
	`©h9k_hw_numtx≥ndög
(
ah
, 
q
) == 0)

187 
	`REG_WRITE
(
ah
, 
AR_Q_TXD
, 0);

189  
waô
 != 0;

191 #unde‡
ATH9K_TX_STOP_DMA_TIMEOUT


192 #unde‡
ATH9K_TIME_QUANTUM


193 
	}
}

194 
EXPORT_SYMBOL
(
©h9k_hw_°›_dma_queue
);

196 
boﬁ
 
	$©h9k_hw_£t_txq_¥›s
(
©h_hw
 *
ah
, 
q
,

197 c⁄° 
©h9k_tx_queue_öfo
 *
qöfo
)

199 
u32
 
cw
;

200 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

201 
©h9k_tx_queue_öfo
 *
qi
;

203 
qi
 = &
ah
->
txq
[
q
];

204 i‡(
qi
->
tqi_ty≥
 =
ATH9K_TX_QUEUE_INACTIVE
) {

205 
	`©h_dbg
(
comm⁄
, 
QUEUE
,

206 "Së TXQÖr›îtõs, i«˘ivêqueue: %u\n", 
q
);

207  
Ál£
;

210 
	`©h_dbg
(
comm⁄
, 
QUEUE
, "Së queuê¥›îtõ†f‹: %u\n", 
q
);

212 
qi
->
tqi_vî
 = 
qöfo
->tqi_ver;

213 
qi
->
tqi_subty≥
 = 
qöfo
->tqi_subtype;

214 
qi
->
tqi_qÊags
 = 
qöfo
->tqi_qflags;

215 
qi
->
tqi_¥i‹ôy
 = 
qöfo
->tqi_priority;

216 i‡(
qöfo
->
tqi_aifs
 !
ATH9K_TXQ_USEDEFAULT
)

217 
qi
->
tqi_aifs
 = 
	`mö
(
qöfo
->tqi_aifs, 255U);

219 
qi
->
tqi_aifs
 = 
INIT_AIFS
;

220 i‡(
qöfo
->
tqi_cwmö
 !
ATH9K_TXQ_USEDEFAULT
) {

221 
cw
 = 
	`mö
(
qöfo
->
tqi_cwmö
, 1024U);

222 
qi
->
tqi_cwmö
 = 1;

223 
qi
->
tqi_cwmö
 < 
cw
)

224 
qi
->
tqi_cwmö
 = (qi->tqi_cwmin << 1) | 1;

226 
qi
->
tqi_cwmö
 = 
qöfo
->tqi_cwmin;

227 i‡(
qöfo
->
tqi_cwmax
 !
ATH9K_TXQ_USEDEFAULT
) {

228 
cw
 = 
	`mö
(
qöfo
->
tqi_cwmax
, 1024U);

229 
qi
->
tqi_cwmax
 = 1;

230 
qi
->
tqi_cwmax
 < 
cw
)

231 
qi
->
tqi_cwmax
 = (qi->tqi_cwmax << 1) | 1;

233 
qi
->
tqi_cwmax
 = 
INIT_CWMAX
;

235 i‡(
qöfo
->
tqi_shªåy
 != 0)

236 
qi
->
tqi_shªåy
 = 
	`mö
((
u32
Ë
qöfo
->tqi_shretry, 15U);

238 
qi
->
tqi_shªåy
 = 
INIT_SH_RETRY
;

239 i‡(
qöfo
->
tqi_lgªåy
 != 0)

240 
qi
->
tqi_lgªåy
 = 
	`mö
((
u32
Ë
qöfo
->tqi_lgretry, 15U);

242 
qi
->
tqi_lgªåy
 = 
INIT_LG_RETRY
;

243 
qi
->
tqi_cbrPîiod
 = 
qöfo
->tqi_cbrPeriod;

244 
qi
->
tqi_cbrOvîÊowLimô
 = 
qöfo
->tqi_cbrOverflowLimit;

245 
qi
->
tqi_bur°Time
 = 
qöfo
->tqi_burstTime;

246 
qi
->
tqi_ªadyTime
 = 
qöfo
->tqi_readyTime;

248 
qöfo
->
tqi_subty≥
) {

249 
ATH9K_WME_UPSD
:

250 i‡(
qi
->
tqi_ty≥
 =
ATH9K_TX_QUEUE_DATA
)

251 
qi
->
tqi_ötFœgs
 = 
ATH9K_TXQ_USE_LOCKOUT_BKOFF_DIS
;

257  
åue
;

258 
	}
}

259 
EXPORT_SYMBOL
(
©h9k_hw_£t_txq_¥›s
);

261 
boﬁ
 
	$©h9k_hw_gë_txq_¥›s
(
©h_hw
 *
ah
, 
q
,

262 
©h9k_tx_queue_öfo
 *
qöfo
)

264 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

265 
©h9k_tx_queue_öfo
 *
qi
;

267 
qi
 = &
ah
->
txq
[
q
];

268 i‡(
qi
->
tqi_ty≥
 =
ATH9K_TX_QUEUE_INACTIVE
) {

269 
	`©h_dbg
(
comm⁄
, 
QUEUE
,

270 "Gë TXQÖr›îtõs, i«˘ivêqueue: %u\n", 
q
);

271  
Ál£
;

274 
qöfo
->
tqi_qÊags
 = 
qi
->tqi_qflags;

275 
qöfo
->
tqi_vî
 = 
qi
->tqi_ver;

276 
qöfo
->
tqi_subty≥
 = 
qi
->tqi_subtype;

277 
qöfo
->
tqi_qÊags
 = 
qi
->tqi_qflags;

278 
qöfo
->
tqi_¥i‹ôy
 = 
qi
->tqi_priority;

279 
qöfo
->
tqi_aifs
 = 
qi
->tqi_aifs;

280 
qöfo
->
tqi_cwmö
 = 
qi
->tqi_cwmin;

281 
qöfo
->
tqi_cwmax
 = 
qi
->tqi_cwmax;

282 
qöfo
->
tqi_shªåy
 = 
qi
->tqi_shretry;

283 
qöfo
->
tqi_lgªåy
 = 
qi
->tqi_lgretry;

284 
qöfo
->
tqi_cbrPîiod
 = 
qi
->tqi_cbrPeriod;

285 
qöfo
->
tqi_cbrOvîÊowLimô
 = 
qi
->tqi_cbrOverflowLimit;

286 
qöfo
->
tqi_bur°Time
 = 
qi
->tqi_burstTime;

287 
qöfo
->
tqi_ªadyTime
 = 
qi
->tqi_readyTime;

289  
åue
;

290 
	}
}

291 
EXPORT_SYMBOL
(
©h9k_hw_gë_txq_¥›s
);

293 
	$©h9k_hw_£tu±xqueue
(
©h_hw
 *
ah
, 
©h9k_tx_queue
 
ty≥
,

294 c⁄° 
©h9k_tx_queue_öfo
 *
qöfo
)

296 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

297 
©h9k_tx_queue_öfo
 *
qi
;

298 
q
;

300 
ty≥
) {

301 
ATH9K_TX_QUEUE_BEACON
:

302 
q
 = 
ATH9K_NUM_TX_QUEUES
 - 1;

304 
ATH9K_TX_QUEUE_CAB
:

305 
q
 = 
ATH9K_NUM_TX_QUEUES
 - 2;

307 
ATH9K_TX_QUEUE_PSPOLL
:

308 
q
 = 1;

310 
ATH9K_TX_QUEUE_UAPSD
:

311 
q
 = 
ATH9K_NUM_TX_QUEUES
 - 3;

313 
ATH9K_TX_QUEUE_DATA
:

314 
q
 = 
qöfo
->
tqi_subty≥
;

317 
	`©h_îr
(
comm⁄
, "InvÆid TX queuêty≥: %u\n", 
ty≥
);

321 
	`©h_dbg
(
comm⁄
, 
QUEUE
, "Sëu∞TX queue: %u\n", 
q
);

323 
qi
 = &
ah
->
txq
[
q
];

324 i‡(
qi
->
tqi_ty≥
 !
ATH9K_TX_QUEUE_INACTIVE
) {

325 
	`©h_îr
(
comm⁄
, "TX queue: %uáÃódyá˘ive\n", 
q
);

328 
	`mem£t
(
qi
, 0, (
©h9k_tx_queue_öfo
));

329 
qi
->
tqi_ty≥
 = 
ty≥
;

330 
qi
->
tqi_physCompBuf
 = 
qöfo
->tqi_physCompBuf;

331 (Ë
	`©h9k_hw_£t_txq_¥›s
(
ah
, 
q
, 
qöfo
);

333  
q
;

334 
	}
}

335 
EXPORT_SYMBOL
(
©h9k_hw_£tu±xqueue
);

337 
	$©h9k_hw_˛ór_queue_öãºu±s
(
©h_hw
 *
ah
, 
u32
 
q
)

339 
ah
->
txok_öãºu±_mask
 &~(1 << 
q
);

340 
ah
->
txîr_öãºu±_mask
 &~(1 << 
q
);

341 
ah
->
txdesc_öãºu±_mask
 &~(1 << 
q
);

342 
ah
->
txeﬁ_öãºu±_mask
 &~(1 << 
q
);

343 
ah
->
txu∫_öãºu±_mask
 &~(1 << 
q
);

344 
	}
}

346 
boﬁ
 
	$©h9k_hw_ªÀa£txqueue
(
©h_hw
 *
ah
, 
u32
 
q
)

348 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

349 
©h9k_tx_queue_öfo
 *
qi
;

351 
qi
 = &
ah
->
txq
[
q
];

352 i‡(
qi
->
tqi_ty≥
 =
ATH9K_TX_QUEUE_INACTIVE
) {

353 
	`©h_dbg
(
comm⁄
, 
QUEUE
, "Rñó£ TXQ, i«˘ivêqueue: %u\n", 
q
);

354  
Ál£
;

357 
	`©h_dbg
(
comm⁄
, 
QUEUE
, "Rñó£ TX queue: %u\n", 
q
);

359 
qi
->
tqi_ty≥
 = 
ATH9K_TX_QUEUE_INACTIVE
;

360 
	`©h9k_hw_˛ór_queue_öãºu±s
(
ah
, 
q
);

361 
	`©h9k_hw_£t_txq_öãºu±s
(
ah
, 
qi
);

363  
åue
;

364 
	}
}

365 
EXPORT_SYMBOL
(
©h9k_hw_ªÀa£txqueue
);

367 
boﬁ
 
	$©h9k_hw_ª£âxqueue
(
©h_hw
 *
ah
, 
u32
 
q
)

369 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

370 
©h9k_tx_queue_öfo
 *
qi
;

371 
u32
 
cwMö
, 
ch™CwMö
, 
vÆue
;

373 
qi
 = &
ah
->
txq
[
q
];

374 i‡(
qi
->
tqi_ty≥
 =
ATH9K_TX_QUEUE_INACTIVE
) {

375 
	`©h_dbg
(
comm⁄
, 
QUEUE
, "Re£àTXQ, i«˘ivêqueue: %u\n", 
q
);

376  
åue
;

379 
	`©h_dbg
(
comm⁄
, 
QUEUE
, "Re£àTX queue: %u\n", 
q
);

381 i‡(
qi
->
tqi_cwmö
 =
ATH9K_TXQ_USEDEFAULT
) {

382 
ch™CwMö
 = 
INIT_CWMIN
;

384 
cwMö
 = 1; cwMö < 
ch™CwMö
; cwMin = (cwMin << 1) | 1);

386 
cwMö
 = 
qi
->
tqi_cwmö
;

388 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

390 
	`REG_WRITE
(
ah
, 
	`AR_DLCL_IFS
(
q
),

391 
	`SM
(
cwMö
, 
AR_D_LCL_IFS_CWMIN
) |

392 
	`SM
(
qi
->
tqi_cwmax
, 
AR_D_LCL_IFS_CWMAX
) |

393 
	`SM
(
qi
->
tqi_aifs
, 
AR_D_LCL_IFS_AIFS
));

395 
	`REG_WRITE
(
ah
, 
	`AR_DRETRY_LIMIT
(
q
),

396 
	`SM
(
INIT_SSH_RETRY
, 
AR_D_RETRY_LIMIT_STA_SH
) |

397 
	`SM
(
INIT_SLG_RETRY
, 
AR_D_RETRY_LIMIT_STA_LG
) |

398 
	`SM
(
qi
->
tqi_shªåy
, 
AR_D_RETRY_LIMIT_FR_SH
));

400 
	`REG_WRITE
(
ah
, 
	`AR_QMISC
(
q
), 
AR_Q_MISC_DCU_EARLY_TERM_REQ
);

402 i‡(
	`AR_SREV_9340
(
ah
Ë&& !
	`AR_SREV_9340_13_OR_LATER
(ah))

403 
	`REG_WRITE
(
ah
, 
	`AR_DMISC
(
q
),

404 
AR_D_MISC_CW_BKOFF_EN
 | 
AR_D_MISC_FRAG_WAIT_EN
 | 0x1);

406 
	`REG_WRITE
(
ah
, 
	`AR_DMISC
(
q
),

407 
AR_D_MISC_CW_BKOFF_EN
 | 
AR_D_MISC_FRAG_WAIT_EN
 | 0x2);

409 i‡(
qi
->
tqi_cbrPîiod
) {

410 
	`REG_WRITE
(
ah
, 
	`AR_QCBRCFG
(
q
),

411 
	`SM
(
qi
->
tqi_cbrPîiod
, 
AR_Q_CBRCFG_INTERVAL
) |

412 
	`SM
(
qi
->
tqi_cbrOvîÊowLimô
, 
AR_Q_CBRCFG_OVF_THRESH
));

413 
	`REG_SET_BIT
(
ah
, 
	`AR_QMISC
(
q
), 
AR_Q_MISC_FSP_CBR
 |

414 (
qi
->
tqi_cbrOvîÊowLimô
 ?

415 
AR_Q_MISC_CBR_EXP_CNTR_LIMIT_EN
 : 0));

417 i‡(
qi
->
tqi_ªadyTime
 && (qi->
tqi_ty≥
 !
ATH9K_TX_QUEUE_CAB
)) {

418 
	`REG_WRITE
(
ah
, 
	`AR_QRDYTIMECFG
(
q
),

419 
	`SM
(
qi
->
tqi_ªadyTime
, 
AR_Q_RDYTIMECFG_DURATION
) |

420 
AR_Q_RDYTIMECFG_EN
);

423 
	`REG_WRITE
(
ah
, 
	`AR_DCHNTIME
(
q
),

424 
	`SM
(
qi
->
tqi_bur°Time
, 
AR_D_CHNTIME_DUR
) |

425 (
qi
->
tqi_bur°Time
 ? 
AR_D_CHNTIME_EN
 : 0));

427 i‡(
qi
->
tqi_bur°Time


428 && (
qi
->
tqi_qÊags
 & 
TXQ_FLAG_RDYTIME_EXP_POLICY_ENABLE
))

429 
	`REG_SET_BIT
(
ah
, 
	`AR_QMISC
(
q
), 
AR_Q_MISC_RDYTIME_EXP_POLICY
);

431 i‡(
qi
->
tqi_qÊags
 & 
TXQ_FLAG_BACKOFF_DISABLE
)

432 
	`REG_SET_BIT
(
ah
, 
	`AR_DMISC
(
q
), 
AR_D_MISC_POST_FR_BKOFF_DIS
);

434 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

436 i‡(
qi
->
tqi_qÊags
 & 
TXQ_FLAG_FRAG_BURST_BACKOFF_ENABLE
)

437 
	`REG_SET_BIT
(
ah
, 
	`AR_DMISC
(
q
), 
AR_D_MISC_FRAG_BKOFF_EN
);

439 
qi
->
tqi_ty≥
) {

440 
ATH9K_TX_QUEUE_BEACON
:

441 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

443 
	`REG_SET_BIT
(
ah
, 
	`AR_QMISC
(
q
),

444 
AR_Q_MISC_FSP_DBA_GATED


445 | 
AR_Q_MISC_BEACON_USE


446 | 
AR_Q_MISC_CBR_INCR_DIS1
);

448 
	`REG_SET_BIT
(
ah
, 
	`AR_DMISC
(
q
),

449 (
AR_D_MISC_ARB_LOCKOUT_CNTRL_GLOBAL
 <<

450 
AR_D_MISC_ARB_LOCKOUT_CNTRL_S
)

451 | 
AR_D_MISC_BEACON_USE


452 | 
AR_D_MISC_POST_FR_BKOFF_DIS
);

454 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

461 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
) &&

462 
ah
->
›mode
 !
NL80211_IFTYPE_ADHOC
) {

463 
	`REG_WRITE
(
ah
, 
	`AR_DLCL_IFS
(
q
), 
	`SM
(0, 
AR_D_LCL_IFS_CWMIN
)

464 | 
	`SM
(0, 
AR_D_LCL_IFS_CWMAX
)

465 | 
	`SM
(
qi
->
tqi_aifs
, 
AR_D_LCL_IFS_AIFS
));

468 
ATH9K_TX_QUEUE_CAB
:

469 
	`ENABLE_REGWRITE_BUFFER
(
ah
);

471 
	`REG_SET_BIT
(
ah
, 
	`AR_QMISC
(
q
),

472 
AR_Q_MISC_FSP_DBA_GATED


473 | 
AR_Q_MISC_CBR_INCR_DIS1


474 | 
AR_Q_MISC_CBR_INCR_DIS0
);

475 
vÆue
 = (
qi
->
tqi_ªadyTime
 -

476 (
ah
->
c⁄fig
.
sw_bóc⁄_ª•⁄£_time
 -

477 
ah
->
c⁄fig
.
dma_bóc⁄_ª•⁄£_time
)) * 1024;

478 
	`REG_WRITE
(
ah
, 
	`AR_QRDYTIMECFG
(
q
),

479 
vÆue
 | 
AR_Q_RDYTIMECFG_EN
);

480 
	`REG_SET_BIT
(
ah
, 
	`AR_DMISC
(
q
),

481 (
AR_D_MISC_ARB_LOCKOUT_CNTRL_GLOBAL
 <<

482 
AR_D_MISC_ARB_LOCKOUT_CNTRL_S
));

484 
	`REGWRITE_BUFFER_FLUSH
(
ah
);

487 
ATH9K_TX_QUEUE_PSPOLL
:

488 
	`REG_SET_BIT
(
ah
, 
	`AR_QMISC
(
q
), 
AR_Q_MISC_CBR_INCR_DIS1
);

490 
ATH9K_TX_QUEUE_UAPSD
:

491 
	`REG_SET_BIT
(
ah
, 
	`AR_DMISC
(
q
), 
AR_D_MISC_POST_FR_BKOFF_DIS
);

497 i‡(
qi
->
tqi_ötFœgs
 & 
ATH9K_TXQ_USE_LOCKOUT_BKOFF_DIS
) {

498 
	`REG_SET_BIT
(
ah
, 
	`AR_DMISC
(
q
),

499 
	`SM
(
AR_D_MISC_ARB_LOCKOUT_CNTRL_GLOBAL
,

500 
AR_D_MISC_ARB_LOCKOUT_CNTRL
) |

501 
AR_D_MISC_POST_FR_BKOFF_DIS
);

504 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
))

505 
	`REG_WRITE
(
ah
, 
AR_Q_DESC_CRCCHK
, 
AR_Q_DESC_CRCCHK_EN
);

507 
	`©h9k_hw_˛ór_queue_öãºu±s
(
ah
, 
q
);

508 i‡(
qi
->
tqi_qÊags
 & 
TXQ_FLAG_TXINT_ENABLE
) {

509 
ah
->
txok_öãºu±_mask
 |1 << 
q
;

510 
ah
->
txîr_öãºu±_mask
 |1 << 
q
;

512 i‡(
qi
->
tqi_qÊags
 & 
TXQ_FLAG_TXDESCINT_ENABLE
)

513 
ah
->
txdesc_öãºu±_mask
 |1 << 
q
;

514 i‡(
qi
->
tqi_qÊags
 & 
TXQ_FLAG_TXEOLINT_ENABLE
)

515 
ah
->
txeﬁ_öãºu±_mask
 |1 << 
q
;

516 i‡(
qi
->
tqi_qÊags
 & 
TXQ_FLAG_TXURNINT_ENABLE
)

517 
ah
->
txu∫_öãºu±_mask
 |1 << 
q
;

518 
	`©h9k_hw_£t_txq_öãºu±s
(
ah
, 
qi
);

520  
åue
;

521 
	}
}

522 
EXPORT_SYMBOL
(
©h9k_hw_ª£âxqueue
);

524 
	$©h9k_hw_rx¥ocdesc
(
©h_hw
 *
ah
, 
©h_desc
 *
ds
,

525 
©h_rx_°©us
 *
rs
)

527 
¨5416_desc
 
ads
;

528 
¨5416_desc
 *
ad•
 = 
	`AR5416DESC
(
ds
);

529 
u32
 
phyîr
;

531 i‡((
ad•
->
ds_rx°©us8
 & 
AR_RxD⁄e
) == 0)

532  -
EINPROGRESS
;

534 
ads
.
u
.
rx
 = 
ad•
->u.rx;

536 
rs
->
rs_°©us
 = 0;

537 
rs
->
rs_Êags
 = 0;

538 
rs
->
Êag
 = 0;

540 
rs
->
rs_d©Æí
 = 
ads
.
ds_rx°©us1
 & 
AR_D©aLí
;

541 
rs
->
rs_t°amp
 = 
ads
.
AR_RcvTime°amp
;

543 i‡(
ads
.
ds_rx°©us8
 & 
AR_Po°DñimCRCEº
) {

544 
rs
->
rs_rssi
 = 
ATH9K_RSSI_BAD
;

545 
rs
->
rs_rssi_˘l
[0] = 
ATH9K_RSSI_BAD
;

546 
rs
->
rs_rssi_˘l
[1] = 
ATH9K_RSSI_BAD
;

547 
rs
->
rs_rssi_˘l
[2] = 
ATH9K_RSSI_BAD
;

548 
rs
->
rs_rssi_ext
[0] = 
ATH9K_RSSI_BAD
;

549 
rs
->
rs_rssi_ext
[1] = 
ATH9K_RSSI_BAD
;

550 
rs
->
rs_rssi_ext
[2] = 
ATH9K_RSSI_BAD
;

552 
rs
->
rs_rssi
 = 
	`MS
(
ads
.
ds_rx°©us4
, 
AR_RxRSSIComböed
);

553 
rs
->
rs_rssi_˘l
[0] = 
	`MS
(
ads
.
ds_rx°©us0
,

554 
AR_RxRSSIA¡00
);

555 
rs
->
rs_rssi_˘l
[1] = 
	`MS
(
ads
.
ds_rx°©us0
,

556 
AR_RxRSSIA¡01
);

557 
rs
->
rs_rssi_˘l
[2] = 
	`MS
(
ads
.
ds_rx°©us0
,

558 
AR_RxRSSIA¡02
);

559 
rs
->
rs_rssi_ext
[0] = 
	`MS
(
ads
.
ds_rx°©us4
,

560 
AR_RxRSSIA¡10
);

561 
rs
->
rs_rssi_ext
[1] = 
	`MS
(
ads
.
ds_rx°©us4
,

562 
AR_RxRSSIA¡11
);

563 
rs
->
rs_rssi_ext
[2] = 
	`MS
(
ads
.
ds_rx°©us4
,

564 
AR_RxRSSIA¡12
);

566 i‡(
ads
.
ds_rx°©us8
 & 
AR_RxKeyIdxVÆid
)

567 
rs
->
rs_keyix
 = 
	`MS
(
ads
.
ds_rx°©us8
, 
AR_KeyIdx
);

569 
rs
->
rs_keyix
 = 
ATH9K_RXKEYIX_INVALID
;

571 
rs
->
rs_øã
 = 
	`MS
(
ads
.
ds_rx°©us0
, 
AR_RxR©e
);

572 
rs
->
rs_m‹e
 = (
ads
.
ds_rx°©us1
 & 
AR_RxM‹e
) ? 1 : 0;

574 
rs
->
rs_fú°aggr
 = (
ads
.
ds_rx°©us8
 & 
AR_RxFú°Aggr
) ? 1 : 0;

575 
rs
->
rs_ißggr
 = (
ads
.
ds_rx°©us8
 & 
AR_RxAggr
) ? 1 : 0;

576 
rs
->
rs_m‹óggr
 = (
ads
.
ds_rx°©us8
 & 
AR_RxM‹eAggr
) ? 1 : 0;

577 
rs
->
rs_™ã¬a
 = 
	`MS
(
ads
.
ds_rx°©us3
, 
AR_RxA¡í«
);

580 
rs
->
Êag
 |=

581 (
ads
.
ds_rx°©us3
 & 
AR_GI
Ë? 
RX_FLAG_SHORT_GI
 : 0;

582 
rs
->
Êag
 |=

583 (
ads
.
ds_rx°©us3
 & 
AR_2040
Ë? 
RX_FLAG_40MHZ
 : 0;

584 i‡(
	`AR_SREV_9280_20_OR_LATER
(
ah
))

585 
rs
->
Êag
 |=

586 (
ads
.
ds_rx°©us3
 & 
AR_STBC
) ?

588 (1 << 
RX_FLAG_STBC_SHIFT
) : 0;

590 i‡(
ads
.
ds_rx°©us8
 & 
AR_PªDñimCRCEº
)

591 
rs
->
rs_Êags
 |
ATH9K_RX_DELIM_CRC_PRE
;

592 i‡(
ads
.
ds_rx°©us8
 & 
AR_Po°DñimCRCEº
)

593 
rs
->
rs_Êags
 |
ATH9K_RX_DELIM_CRC_POST
;

594 i‡(
ads
.
ds_rx°©us8
 & 
AR_De¸y±BusyEº
)

595 
rs
->
rs_Êags
 |
ATH9K_RX_DECRYPT_BUSY
;

597 i‡((
ads
.
ds_rx°©us8
 & 
AR_RxFømeOK
) == 0) {

604 i‡(
ads
.
ds_rx°©us8
 & 
AR_PHYEº
) {

605 
rs
->
rs_°©us
 |
ATH9K_RXERR_PHY
;

606 
phyîr
 = 
	`MS
(
ads
.
ds_rx°©us8
, 
AR_PHYEºCode
);

607 
rs
->
rs_phyîr
 = 
phyîr
;

608 } i‡(
ads
.
ds_rx°©us8
 & 
AR_CRCEº
)

609 
rs
->
rs_°©us
 |
ATH9K_RXERR_CRC
;

610 i‡(
ads
.
ds_rx°©us8
 & 
AR_De¸y±CRCEº
)

611 
rs
->
rs_°©us
 |
ATH9K_RXERR_DECRYPT
;

612 i‡(
ads
.
ds_rx°©us8
 & 
AR_Mich´lEº
)

613 
rs
->
rs_°©us
 |
ATH9K_RXERR_MIC
;

615 i‡(
ads
.
ds_rx°©us8
 &

616 (
AR_CRCEº
 | 
AR_PHYEº
 | 
AR_De¸y±CRCEº
 | 
AR_Mich´lEº
))

617 
rs
->
rs_°©us
 |
ATH9K_RXERR_CORRUPT_DESC
;

620 i‡(
rs
->
rs_øã
 >= 0x90)

621 
rs
->
rs_°©us
 |
ATH9K_RXERR_CORRUPT_DESC
;

624 i‡(
ads
.
ds_rx°©us8
 & 
AR_KeyMiss
)

625 
rs
->
rs_°©us
 |
ATH9K_RXERR_KEYMISS
;

628 
	}
}

629 
EXPORT_SYMBOL
(
©h9k_hw_rx¥ocdesc
);

638 
boﬁ
 
	$©h9k_hw_£åxab‹t
(
©h_hw
 *
ah
, 
boﬁ
 
£t
)

640 
u32
 
ªg
;

642 i‡(
£t
) {

643 
	`REG_SET_BIT
(
ah
, 
AR_DIAG_SW
,

644 (
AR_DIAG_RX_DIS
 | 
AR_DIAG_RX_ABORT
));

646 i‡(!
	`©h9k_hw_waô
(
ah
, 
AR_OBS_BUS_1
, 
AR_OBS_BUS_1_RX_STATE
,

647 0, 
AH_WAIT_TIMEOUT
)) {

648 
	`REG_CLR_BIT
(
ah
, 
AR_DIAG_SW
,

649 (
AR_DIAG_RX_DIS
 |

650 
AR_DIAG_RX_ABORT
));

652 
ªg
 = 
	`REG_READ
(
ah
, 
AR_OBS_BUS_1
);

653 
	`©h_îr
(
	`©h9k_hw_comm⁄
(
ah
),

655 
ªg
);

657  
Ál£
;

660 
	`REG_CLR_BIT
(
ah
, 
AR_DIAG_SW
,

661 (
AR_DIAG_RX_DIS
 | 
AR_DIAG_RX_ABORT
));

664  
åue
;

665 
	}
}

666 
EXPORT_SYMBOL
(
©h9k_hw_£åxab‹t
);

668 
	$©h9k_hw_puåxbuf
(
©h_hw
 *
ah
, 
u32
 
rxdp
)

670 
	`REG_WRITE
(
ah
, 
AR_RXDP
, 
rxdp
);

671 
	}
}

672 
EXPORT_SYMBOL
(
©h9k_hw_puåxbuf
);

674 
	$©h9k_hw_°¨çcuª˚ive
(
©h_hw
 *
ah
, 
boﬁ
 
is_sˇ¬ög
)

676 
	`©h9k_íabÀ_mib_cou¡îs
(
ah
);

678 
	`©h9k_™i_ª£t
(
ah
, 
is_sˇ¬ög
);

680 
	`REG_CLR_BIT
(
ah
, 
AR_DIAG_SW
, (
AR_DIAG_RX_DIS
 | 
AR_DIAG_RX_ABORT
));

681 
	}
}

682 
EXPORT_SYMBOL
(
©h9k_hw_°¨çcuª˚ive
);

684 
	$©h9k_hw_ab‹çcuªcv
(
©h_hw
 *
ah
)

686 
	`REG_SET_BIT
(
ah
, 
AR_DIAG_SW
, 
AR_DIAG_RX_ABORT
 | 
AR_DIAG_RX_DIS
);

688 
	`©h9k_hw_dißbÀ_mib_cou¡îs
(
ah
);

689 
	}
}

690 
EXPORT_SYMBOL
(
©h9k_hw_ab‹çcuªcv
);

692 
boﬁ
 
	$©h9k_hw_°›dm¨ecv
(
©h_hw
 *
ah
, 
boﬁ
 *
ª£t
)

694 
	#AH_RX_STOP_DMA_TIMEOUT
 10000

	)

695 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

696 
u32
 
mac_°©us
 = 0, 
œ°_mac_°©us
 = 0;

697 
i
;

700 
	`REG_WRITE
(
ah
, 
AR_MACMISC
,

701 ((
AR_MACMISC_DMA_OBS_LINE_8
 << 
AR_MACMISC_DMA_OBS_S
) |

702 (
AR_MACMISC_MISC_OBS_BUS_1
 <<

703 
AR_MACMISC_MISC_OBS_BUS_MSB_S
)));

705 
	`REG_WRITE
(
ah
, 
AR_CR
, 
AR_CR_RXD
);

708 
i
 = 
AH_RX_STOP_DMA_TIMEOUT
 / 
AH_TIME_QUANTUM
; i != 0; i--) {

709 i‡((
	`REG_READ
(
ah
, 
AR_CR
Ë& 
AR_CR_RXE
) == 0)

712 i‡(!
	`AR_SREV_9300_20_OR_LATER
(
ah
)) {

713 
mac_°©us
 = 
	`REG_READ
(
ah
, 
AR_DMADBG_7
) & 0x7f0;

714 i‡(
mac_°©us
 =0x1c0 && mac_°©u†=
œ°_mac_°©us
) {

715 *
ª£t
 = 
åue
;

719 
œ°_mac_°©us
 = 
mac_°©us
;

722 
	`udñay
(
AH_TIME_QUANTUM
);

725 i‡(
i
 == 0) {

726 i‡(!
	`AR_SREV_9300_20_OR_LATER
(
ah
) &&

727 (
mac_°©us
 & 0x700) == 0) {

732 *
ª£t
 = 
åue
;

733  
åue
;

736 
	`©h_îr
(
comm⁄
,

738 
AH_RX_STOP_DMA_TIMEOUT
 / 1000,

739 
	`REG_READ
(
ah
, 
AR_CR
),

740 
	`REG_READ
(
ah
, 
AR_DIAG_SW
),

741 
	`REG_READ
(
ah
, 
AR_DMADBG_7
));

742  
Ál£
;

744  
åue
;

747 #unde‡
AH_RX_STOP_DMA_TIMEOUT


748 
	}
}

749 
EXPORT_SYMBOL
(
©h9k_hw_°›dm¨ecv
);

751 
	$©h9k_hw_bóc⁄q_£tup
(
©h_hw
 *
ah
)

753 
©h9k_tx_queue_öfo
 
qi
;

755 
	`mem£t
(&
qi
, 0, (qi));

756 
qi
.
tqi_aifs
 = 1;

757 
qi
.
tqi_cwmö
 = 0;

758 
qi
.
tqi_cwmax
 = 0;

760 i‡(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_EDMA
)

761 
qi
.
tqi_qÊags
 = 
TXQ_FLAG_TXINT_ENABLE
;

763  
	`©h9k_hw_£tu±xqueue
(
ah
, 
ATH9K_TX_QUEUE_BEACON
, &
qi
);

764 
	}
}

765 
EXPORT_SYMBOL
(
©h9k_hw_bóc⁄q_£tup
);

767 
boﬁ
 
	$©h9k_hw_öå≥nd
(
©h_hw
 *
ah
)

769 
u32
 
ho°_i§
;

771 i‡(
	`AR_SREV_9100
(
ah
))

772  
åue
;

774 
ho°_i§
 = 
	`REG_READ
(
ah
, 
AR_INTR_ASYNC_CAUSE
);

776 i‡(((
ho°_i§
 & 
AR_INTR_MAC_IRQ
) ||

777 (
ho°_i§
 & 
AR_INTR_ASYNC_MASK_MCI
)) &&

778 (
ho°_i§
 !
AR_INTR_SPURIOUS
))

779  
åue
;

781 
ho°_i§
 = 
	`REG_READ
(
ah
, 
AR_INTR_SYNC_CAUSE
);

782 i‡((
ho°_i§
 & 
AR_INTR_SYNC_DEFAULT
)

783 && (
ho°_i§
 !
AR_INTR_SPURIOUS
))

784  
åue
;

786  
Ál£
;

787 
	}
}

788 
EXPORT_SYMBOL
(
©h9k_hw_öå≥nd
);

790 
	$©h9k_hw_kûl_öãºu±s
(
©h_hw
 *
ah
)

792 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

794 
	`©h_dbg
(
comm⁄
, 
INTERRUPT
, "disable IER\n");

795 
	`REG_WRITE
(
ah
, 
AR_IER
, 
AR_IER_DISABLE
);

796 (Ë
	`REG_READ
(
ah
, 
AR_IER
);

797 i‡(!
	`AR_SREV_9100
(
ah
)) {

798 
	`REG_WRITE
(
ah
, 
AR_INTR_ASYNC_ENABLE
, 0);

799 (Ë
	`REG_READ
(
ah
, 
AR_INTR_ASYNC_ENABLE
);

801 
	`REG_WRITE
(
ah
, 
AR_INTR_SYNC_ENABLE
, 0);

802 (Ë
	`REG_READ
(
ah
, 
AR_INTR_SYNC_ENABLE
);

804 
	}
}

805 
EXPORT_SYMBOL
(
©h9k_hw_kûl_öãºu±s
);

807 
	$©h9k_hw_dißbÀ_öãºu±s
(
©h_hw
 *
ah
)

809 i‡(!(
ah
->
imask
 & 
ATH9K_INT_GLOBAL
))

810 
	`©omic_£t
(&
ah
->
öå_ªf_˙t
, -1);

812 
	`©omic_dec
(&
ah
->
öå_ªf_˙t
);

814 
	`©h9k_hw_kûl_öãºu±s
(
ah
);

815 
	}
}

816 
EXPORT_SYMBOL
(
©h9k_hw_dißbÀ_öãºu±s
);

818 
	$©h9k_hw_íabÀ_öãºu±s
(
©h_hw
 *
ah
)

820 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

821 
u32
 
sync_deÁu…
 = 
AR_INTR_SYNC_DEFAULT
;

822 
u32
 
async_mask
;

824 i‡(!(
ah
->
imask
 & 
ATH9K_INT_GLOBAL
))

827 i‡(!
	`©omic_öc_™d_ã°
(&
ah
->
öå_ªf_˙t
)) {

828 
	`©h_dbg
(
comm⁄
, 
INTERRUPT
, "DoÇotÉnable IERÑef count %d\n",

829 
	`©omic_ªad
(&
ah
->
öå_ªf_˙t
));

833 i‡(
	`AR_SREV_9340
(
ah
Ë|| 
	`AR_SREV_9550
◊hË|| 
	`AR_SREV_9531
(ah))

834 
sync_deÁu…
 &~
AR_INTR_SYNC_HOST1_FATAL
;

836 
async_mask
 = 
AR_INTR_MAC_IRQ
;

838 i‡(
ah
->
imask
 & 
ATH9K_INT_MCI
)

839 
async_mask
 |
AR_INTR_ASYNC_MASK_MCI
;

841 
	`©h_dbg
(
comm⁄
, 
INTERRUPT
, "enable IER\n");

842 
	`REG_WRITE
(
ah
, 
AR_IER
, 
AR_IER_ENABLE
);

843 i‡(!
	`AR_SREV_9100
(
ah
)) {

844 
	`REG_WRITE
(
ah
, 
AR_INTR_ASYNC_ENABLE
, 
async_mask
);

845 
	`REG_WRITE
(
ah
, 
AR_INTR_ASYNC_MASK
, 
async_mask
);

847 
	`REG_WRITE
(
ah
, 
AR_INTR_SYNC_ENABLE
, 
sync_deÁu…
);

848 
	`REG_WRITE
(
ah
, 
AR_INTR_SYNC_MASK
, 
sync_deÁu…
);

850 
	`©h_dbg
(
comm⁄
, 
INTERRUPT
, "AR_IMR 0x%x IER 0x%x\n",

851 
	`REG_READ
(
ah
, 
AR_IMR
), REG_READ◊h, 
AR_IER
));

852 
	}
}

853 
EXPORT_SYMBOL
(
©h9k_hw_íabÀ_öãºu±s
);

855 
	$©h9k_hw_£t_öãºu±s
(
©h_hw
 *
ah
)

857 
©h9k_öt
 
öts
 = 
ah
->
imask
;

858 
u32
 
mask
, 
mask2
;

859 
©h9k_hw_ˇ∑bûôõs
 *
pC≠
 = &
ah
->
ˇps
;

860 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

862 i‡(!(
öts
 & 
ATH9K_INT_GLOBAL
))

863 
	`©h9k_hw_dißbÀ_öãºu±s
(
ah
);

865 
	`©h_dbg
(
comm⁄
, 
INTERRUPT
, "New i¡îru± mask 0x%x\n", 
öts
);

867 
mask
 = 
öts
 & 
ATH9K_INT_COMMON
;

868 
mask2
 = 0;

870 i‡(
öts
 & 
ATH9K_INT_TX
) {

871 i‡(
ah
->
c⁄fig
.
tx_öå_môig©i⁄
)

872 
mask
 |
AR_IMR_TXMINTR
 | 
AR_IMR_TXINTM
;

874 i‡(
ah
->
txok_öãºu±_mask
)

875 
mask
 |
AR_IMR_TXOK
;

876 i‡(
ah
->
txdesc_öãºu±_mask
)

877 
mask
 |
AR_IMR_TXDESC
;

879 i‡(
ah
->
txîr_öãºu±_mask
)

880 
mask
 |
AR_IMR_TXERR
;

881 i‡(
ah
->
txeﬁ_öãºu±_mask
)

882 
mask
 |
AR_IMR_TXEOL
;

884 i‡(
öts
 & 
ATH9K_INT_RX
) {

885 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
)) {

886 
mask
 |
AR_IMR_RXERR
 | 
AR_IMR_RXOK_HP
;

887 i‡(
ah
->
c⁄fig
.
rx_öå_môig©i⁄
) {

888 
mask
 &~
AR_IMR_RXOK_LP
;

889 
mask
 |
AR_IMR_RXMINTR
 | 
AR_IMR_RXINTM
;

891 
mask
 |
AR_IMR_RXOK_LP
;

894 i‡(
ah
->
c⁄fig
.
rx_öå_môig©i⁄
)

895 
mask
 |
AR_IMR_RXMINTR
 | 
AR_IMR_RXINTM
;

897 
mask
 |
AR_IMR_RXOK
 | 
AR_IMR_RXDESC
;

899 i‡(!(
pC≠
->
hw_ˇps
 & 
ATH9K_HW_CAP_AUTOSLEEP
))

900 
mask
 |
AR_IMR_GENTMR
;

903 i‡(
öts
 & 
ATH9K_INT_GENTIMER
)

904 
mask
 |
AR_IMR_GENTMR
;

906 i‡(
öts
 & (
ATH9K_INT_BMISC
)) {

907 
mask
 |
AR_IMR_BCNMISC
;

908 i‡(
öts
 & 
ATH9K_INT_TIM
)

909 
mask2
 |
AR_IMR_S2_TIM
;

910 i‡(
öts
 & 
ATH9K_INT_DTIM
)

911 
mask2
 |
AR_IMR_S2_DTIM
;

912 i‡(
öts
 & 
ATH9K_INT_DTIMSYNC
)

913 
mask2
 |
AR_IMR_S2_DTIMSYNC
;

914 i‡(
öts
 & 
ATH9K_INT_CABEND
)

915 
mask2
 |
AR_IMR_S2_CABEND
;

916 i‡(
öts
 & 
ATH9K_INT_TSFOOR
)

917 
mask2
 |
AR_IMR_S2_TSFOOR
;

920 i‡(
öts
 & (
ATH9K_INT_GTT
 | 
ATH9K_INT_CST
)) {

921 
mask
 |
AR_IMR_BCNMISC
;

922 i‡(
öts
 & 
ATH9K_INT_GTT
)

923 
mask2
 |
AR_IMR_S2_GTT
;

924 i‡(
öts
 & 
ATH9K_INT_CST
)

925 
mask2
 |
AR_IMR_S2_CST
;

928 i‡(
ah
->
c⁄fig
.
hw_h™g_checks
 & 
HW_BB_WATCHDOG
) {

929 i‡(
öts
 & 
ATH9K_INT_BB_WATCHDOG
) {

930 
mask
 |
AR_IMR_BCNMISC
;

931 
mask2
 |
AR_IMR_S2_BB_WATCHDOG
;

935 
	`©h_dbg
(
comm⁄
, 
INTERRUPT
, "√w IMR 0x%x\n", 
mask
);

936 
	`REG_WRITE
(
ah
, 
AR_IMR
, 
mask
);

937 
ah
->
imrs2_ªg
 &~(
AR_IMR_S2_TIM
 |

938 
AR_IMR_S2_DTIM
 |

939 
AR_IMR_S2_DTIMSYNC
 |

940 
AR_IMR_S2_CABEND
 |

941 
AR_IMR_S2_CABTO
 |

942 
AR_IMR_S2_TSFOOR
 |

943 
AR_IMR_S2_GTT
 |

944 
AR_IMR_S2_CST
);

946 i‡(
ah
->
c⁄fig
.
hw_h™g_checks
 & 
HW_BB_WATCHDOG
) {

947 i‡(
öts
 & 
ATH9K_INT_BB_WATCHDOG
)

948 
ah
->
imrs2_ªg
 &~
AR_IMR_S2_BB_WATCHDOG
;

951 
ah
->
imrs2_ªg
 |
mask2
;

952 
	`REG_WRITE
(
ah
, 
AR_IMR_S2
,áh->
imrs2_ªg
);

954 i‡(!(
pC≠
->
hw_ˇps
 & 
ATH9K_HW_CAP_AUTOSLEEP
)) {

955 i‡(
öts
 & 
ATH9K_INT_TIM_TIMER
)

956 
	`REG_SET_BIT
(
ah
, 
AR_IMR_S5
, 
AR_IMR_S5_TIM_TIMER
);

958 
	`REG_CLR_BIT
(
ah
, 
AR_IMR_S5
, 
AR_IMR_S5_TIM_TIMER
);

962 
	}
}

963 
EXPORT_SYMBOL
(
©h9k_hw_£t_öãºu±s
);

965 
	#ATH9K_HW_MAX_DCU
 10

	)

966 
	#ATH9K_HW_SLICE_PER_DCU
 16

	)

967 
	#ATH9K_HW_BIT_IN_SLICE
 16

	)

968 
	$©h9k_hw_£t_tx_fûãr
(
©h_hw
 *
ah
, 
u8
 
de°idx
, 
boﬁ
 
£t
)

970 
dcu_idx
;

971 
u32
 
fûãr
;

973 
dcu_idx
 = 0; dcu_idx < 10; dcu_idx++) {

974 
fûãr
 = 
	`SM
(
£t
, 
AR_D_TXBLK_WRITE_COMMAND
);

975 
fûãr
 |
	`SM
(
dcu_idx
, 
AR_D_TXBLK_WRITE_DCU
);

976 
fûãr
 |
	`SM
((
de°idx
 / 
ATH9K_HW_SLICE_PER_DCU
),

977 
AR_D_TXBLK_WRITE_SLICE
);

978 
fûãr
 |
	`BIT
(
de°idx
 % 
ATH9K_HW_BIT_IN_SLICE
);

979 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
PS
,

981 
dcu_idx
, 
de°idx
, 
£t
, 
fûãr
);

982 
	`REG_WRITE
(
ah
, 
AR_D_TXBLK_BASE
, 
fûãr
);

984 
	}
}

985 
EXPORT_SYMBOL
(
©h9k_hw_£t_tx_fûãr
);

	@mac.h

17 #i‚de‡
MAC_H


18 
	#MAC_H


	)

20 
	#£t11nTrõs
(
_£rõs
, 
_ödex
) \

21 (
	`SM
((
_£rõs
)[
_ödex
].
Trõs
, 
AR_XmôD©aTrõs
##_ödex))

	)

23 
	#£t11nR©e
(
_£rõs
, 
_ödex
) \

24 (
	`SM
((
_£rõs
)[
_ödex
].
R©e
, 
AR_XmôR©e
##_ödex))

	)

26 
	#£t11nPktDurRTSCTS
(
_£rõs
, 
_ödex
) \

27 (
	`SM
((
_£rõs
)[
_ödex
].
PktDuøti⁄
, 
AR_PackëDur
##_index) | \

28 ((
_£rõs
)[
_ödex
].
R©eFœgs
 & 
ATH9K_RATESERIES_RTS_CTS
 ? \

29 
AR_RTSCTSQuÆ
##
_ödex
 : 0))

	)

31 
	#£t11nR©eFœgs
(
_£rõs
, 
_ödex
) \

32 (((
_£rõs
)[
_ödex
].
R©eFœgs
 & 
ATH9K_RATESERIES_2040
 ? \

33 
AR_2040_
##
_ödex
 : 0) \

34 |((
_£rõs
)[
_ödex
].
R©eFœgs
 & 
ATH9K_RATESERIES_HALFGI
 ? \

35 
AR_GI
##
_ödex
 : 0) \

36 |((
_£rõs
)[
_ödex
].
R©eFœgs
 & 
ATH9K_RATESERIES_STBC
 ? \

37 
AR_STBC
##
_ödex
 : 0) \

38 |
	`SM
((
_£rõs
)[
_ödex
].
ChSñ
, 
AR_ChaöSñ
##_ödex))

	)

40 
	#CCK_SIFS_TIME
 10

	)

41 
	#CCK_PREAMBLE_BITS
 144

	)

42 
	#CCK_PLCP_BITS
 48

	)

44 
	#OFDM_SIFS_TIME
 16

	)

45 
	#OFDM_PREAMBLE_TIME
 20

	)

46 
	#OFDM_PLCP_BITS
 22

	)

47 
	#OFDM_SYMBOL_TIME
 4

	)

49 
	#OFDM_SIFS_TIME_HALF
 32

	)

50 
	#OFDM_PREAMBLE_TIME_HALF
 40

	)

51 
	#OFDM_PLCP_BITS_HALF
 22

	)

52 
	#OFDM_SYMBOL_TIME_HALF
 8

	)

54 
	#OFDM_SIFS_TIME_QUARTER
 64

	)

55 
	#OFDM_PREAMBLE_TIME_QUARTER
 80

	)

56 
	#OFDM_PLCP_BITS_QUARTER
 22

	)

57 
	#OFDM_SYMBOL_TIME_QUARTER
 16

	)

59 
	#INIT_AIFS
 2

	)

60 
	#INIT_CWMIN
 15

	)

61 
	#INIT_CWMIN_11B
 31

	)

62 
	#INIT_CWMAX
 1023

	)

63 
	#INIT_SH_RETRY
 10

	)

64 
	#INIT_LG_RETRY
 10

	)

65 
	#INIT_SSH_RETRY
 32

	)

66 
	#INIT_SLG_RETRY
 32

	)

68 
	#ATH9K_SLOT_TIME_6
 6

	)

69 
	#ATH9K_SLOT_TIME_9
 9

	)

70 
	#ATH9K_SLOT_TIME_20
 20

	)

72 
	#ATH9K_TXERR_XRETRY
 0x01

	)

73 
	#ATH9K_TXERR_FILT
 0x02

	)

74 
	#ATH9K_TXERR_FIFO
 0x04

	)

75 
	#ATH9K_TXERR_XTXOP
 0x08

	)

76 
	#ATH9K_TXERR_TIMER_EXPIRED
 0x10

	)

77 
	#ATH9K_TX_ACKED
 0x20

	)

78 
	#ATH9K_TX_FLUSH
 0x40

	)

79 
	#ATH9K_TXERR_MASK
 \

80 (
ATH9K_TXERR_XRETRY
 | 
ATH9K_TXERR_FILT
 | 
ATH9K_TXERR_FIFO
 | \

81 
ATH9K_TXERR_XTXOP
 | 
ATH9K_TXERR_TIMER_EXPIRED
 | 
ATH9K_TX_FLUSH
)

	)

83 
	#ATH9K_TX_BA
 0x01

	)

84 
	#ATH9K_TX_PWRMGMT
 0x02

	)

85 
	#ATH9K_TX_DESC_CFG_ERR
 0x04

	)

86 
	#ATH9K_TX_DATA_UNDERRUN
 0x08

	)

87 
	#ATH9K_TX_DELIM_UNDERRUN
 0x10

	)

88 
	#ATH9K_TX_SW_FILTERED
 0x80

	)

91 
	#MIN_TX_FIFO_THRESHOLD
 0x1

	)

98 
	#MAX_TX_FIFO_THRESHOLD
 ((4096 / 64Ë- 1)

	)

100 
	s©h_tx_°©us
 {

101 
u32
 
	mts_t°amp
;

102 
u16
 
	mts_£qnum
;

103 
u8
 
	mts_°©us
;

104 
u8
 
	mts_øãödex
;

105 
öt8_t
 
	mts_rssi
;

106 
u8
 
	mts_sh‹åëry
;

107 
u8
 
	mts_l⁄gªåy
;

108 
u8
 
	mts_vútcﬁ
;

109 
u8
 
	mts_Êags
;

110 
öt8_t
 
	mts_rssi_˘l0
;

111 
öt8_t
 
	mts_rssi_˘l1
;

112 
öt8_t
 
	mts_rssi_˘l2
;

113 
öt8_t
 
	mts_rssi_ext0
;

114 
öt8_t
 
	mts_rssi_ext1
;

115 
öt8_t
 
	mts_rssi_ext2
;

116 
u8
 
	mqid
;

117 
u16
 
	mdesc_id
;

118 
u8
 
	mtid
;

119 
u32
 
	mba_low
;

120 
u32
 
	mba_high
;

121 
u32
 
	mevm0
;

122 
u32
 
	mevm1
;

123 
u32
 
	mevm2
;

126 
	s©h_rx_°©us
 {

127 
u32
 
	mrs_t°amp
;

128 
u16
 
	mrs_d©Æí
;

129 
u8
 
	mrs_°©us
;

130 
u8
 
	mrs_phyîr
;

131 
öt8_t
 
	mrs_rssi
;

132 
u8
 
	mrs_keyix
;

133 
u8
 
	mrs_øã
;

134 
u8
 
	mrs_™ã¬a
;

135 
u8
 
	mrs_m‹e
;

136 
öt8_t
 
	mrs_rssi_˘l
[3];

137 
öt8_t
 
	mrs_rssi_ext
[3];

138 
u8
 
	mrs_ißggr
;

139 
u8
 
	mrs_fú°aggr
;

140 
u8
 
	mrs_m‹óggr
;

141 
u8
 
	mrs_num_dñims
;

142 
u8
 
	mrs_Êags
;

143 
boﬁ
 
	mis_mybóc⁄
;

144 
u32
 
	mevm0
;

145 
u32
 
	mevm1
;

146 
u32
 
	mevm2
;

147 
u32
 
	mevm3
;

148 
u32
 
	mevm4
;

149 
u32
 
	mÊag
;

152 
	s©h_htc_rx_°©us
 {

153 
__be64
 
	mrs_t°amp
;

154 
__be16
 
	mrs_d©Æí
;

155 
u8
 
	mrs_°©us
;

156 
u8
 
	mrs_phyîr
;

157 
öt8_t
 
	mrs_rssi
;

158 
öt8_t
 
	mrs_rssi_˘l
[3];

159 
öt8_t
 
	mrs_rssi_ext
[3];

160 
u8
 
	mrs_keyix
;

161 
u8
 
	mrs_øã
;

162 
u8
 
	mrs_™ã¬a
;

163 
u8
 
	mrs_m‹e
;

164 
u8
 
	mrs_ißggr
;

165 
u8
 
	mrs_m‹óggr
;

166 
u8
 
	mrs_num_dñims
;

167 
u8
 
	mrs_Êags
;

168 
u8
 
	mrs_dummy
;

170 
__be32
 
	mevm0
;

171 
__be32
 
	mevm1
;

172 
__be32
 
	mevm2
;

175 
	#ATH9K_RXERR_CRC
 0x01

	)

176 
	#ATH9K_RXERR_PHY
 0x02

	)

177 
	#ATH9K_RXERR_FIFO
 0x04

	)

178 
	#ATH9K_RXERR_DECRYPT
 0x08

	)

179 
	#ATH9K_RXERR_MIC
 0x10

	)

180 
	#ATH9K_RXERR_KEYMISS
 0x20

	)

181 
	#ATH9K_RXERR_CORRUPT_DESC
 0x40

	)

183 
	#ATH9K_RX_MORE
 0x01

	)

184 
	#ATH9K_RX_MORE_AGGR
 0x02

	)

185 
	#ATH9K_RX_GI
 0x04

	)

186 
	#ATH9K_RX_2040
 0x08

	)

187 
	#ATH9K_RX_DELIM_CRC_PRE
 0x10

	)

188 
	#ATH9K_RX_DELIM_CRC_POST
 0x20

	)

189 
	#ATH9K_RX_DECRYPT_BUSY
 0x40

	)

191 
	#ATH9K_RXKEYIX_INVALID
 ((
u8
)-1)

	)

192 
	#ATH9K_TXKEYIX_INVALID
 ((
u8
)-1)

	)

194 
	e©h9k_phyîr
 {

195 
	mATH9K_PHYERR_UNDERRUN
 = 0,

196 
	mATH9K_PHYERR_TIMING
 = 1,

197 
	mATH9K_PHYERR_PARITY
 = 2,

198 
	mATH9K_PHYERR_RATE
 = 3,

199 
	mATH9K_PHYERR_LENGTH
 = 4,

200 
	mATH9K_PHYERR_RADAR
 = 5,

201 
	mATH9K_PHYERR_SERVICE
 = 6,

202 
	mATH9K_PHYERR_TOR
 = 7,

204 
	mATH9K_PHYERR_OFDM_TIMING
 = 17,

205 
	mATH9K_PHYERR_OFDM_SIGNAL_PARITY
 = 18,

206 
	mATH9K_PHYERR_OFDM_RATE_ILLEGAL
 = 19,

207 
	mATH9K_PHYERR_OFDM_LENGTH_ILLEGAL
 = 20,

208 
	mATH9K_PHYERR_OFDM_POWER_DROP
 = 21,

209 
	mATH9K_PHYERR_OFDM_SERVICE
 = 22,

210 
	mATH9K_PHYERR_OFDM_RESTART
 = 23,

211 
	mATH9K_PHYERR_FALSE_RADAR_EXT
 = 24,

213 
	mATH9K_PHYERR_CCK_TIMING
 = 25,

214 
	mATH9K_PHYERR_CCK_HEADER_CRC
 = 26,

215 
	mATH9K_PHYERR_CCK_RATE_ILLEGAL
 = 27,

216 
	mATH9K_PHYERR_CCK_SERVICE
 = 30,

217 
	mATH9K_PHYERR_CCK_RESTART
 = 31,

218 
	mATH9K_PHYERR_CCK_LENGTH_ILLEGAL
 = 32,

219 
	mATH9K_PHYERR_CCK_POWER_DROP
 = 33,

221 
	mATH9K_PHYERR_HT_CRC_ERROR
 = 34,

222 
	mATH9K_PHYERR_HT_LENGTH_ILLEGAL
 = 35,

223 
	mATH9K_PHYERR_HT_RATE_ILLEGAL
 = 36,

225 
	mATH9K_PHYERR_SPECTRAL
 = 38,

226 
	mATH9K_PHYERR_MAX
 = 39,

229 
	s©h_desc
 {

230 
u32
 
	mds_lök
;

231 
u32
 
	mds_d©a
;

232 
u32
 
	mds_˘l0
;

233 
u32
 
	mds_˘l1
;

234 
u32
 
	mds_hw
[20];

235 *
	mds_vd©a
;

236 } 
__∑cked
 
__Æig√d
(4);

238 
	#ATH9K_TXDESC_NOACK
 0x0002

	)

239 
	#ATH9K_TXDESC_RTSENA
 0x0004

	)

240 
	#ATH9K_TXDESC_CTSENA
 0x0008

	)

254 
	#ATH9K_TXDESC_INTREQ
 0x0010

	)

255 
	#ATH9K_TXDESC_VEOL
 0x0020

	)

256 
	#ATH9K_TXDESC_EXT_ONLY
 0x0040

	)

257 
	#ATH9K_TXDESC_EXT_AND_CTL
 0x0080

	)

258 
	#ATH9K_TXDESC_VMF
 0x0100

	)

259 
	#ATH9K_TXDESC_FRAG_IS_ON
 0x0200

	)

260 
	#ATH9K_TXDESC_LOWRXCHAIN
 0x0400

	)

261 
	#ATH9K_TXDESC_LDPC
 0x0800

	)

262 
	#ATH9K_TXDESC_CLRDMASK
 0x1000

	)

264 
	#ATH9K_TXDESC_PAPRD
 0x70000

	)

265 
	#ATH9K_TXDESC_PAPRD_S
 16

	)

267 
	#ATH9K_RXDESC_INTREQ
 0x0020

	)

269 
	s¨5416_desc
 {

270 
u32
 
	mds_lök
;

271 
u32
 
	mds_d©a
;

272 
u32
 
	mds_˘l0
;

273 
u32
 
	mds_˘l1
;

276 
u32
 
	m˘l2
;

277 
u32
 
	m˘l3
;

278 
u32
 
	m˘l4
;

279 
u32
 
	m˘l5
;

280 
u32
 
	m˘l6
;

281 
u32
 
	m˘l7
;

282 
u32
 
	m˘l8
;

283 
u32
 
	m˘l9
;

284 
u32
 
	m˘l10
;

285 
u32
 
	m˘l11
;

286 
u32
 
	m°©us0
;

287 
u32
 
	m°©us1
;

288 
u32
 
	m°©us2
;

289 
u32
 
	m°©us3
;

290 
u32
 
	m°©us4
;

291 
u32
 
	m°©us5
;

292 
u32
 
	m°©us6
;

293 
u32
 
	m°©us7
;

294 
u32
 
	m°©us8
;

295 
u32
 
	m°©us9
;

296 } 
	mtx
;

298 
u32
 
	m°©us0
;

299 
u32
 
	m°©us1
;

300 
u32
 
	m°©us2
;

301 
u32
 
	m°©us3
;

302 
u32
 
	m°©us4
;

303 
u32
 
	m°©us5
;

304 
u32
 
	m°©us6
;

305 
u32
 
	m°©us7
;

306 
u32
 
	m°©us8
;

307 } 
	mrx
;

308 } 
	mu
;

309 } 
__∑cked
 
__Æig√d
(4);

311 
	#AR5416DESC
(
_ds
Ë((
¨5416_desc
 *)(_ds))

	)

312 
	#AR5416DESC_CONST
(
_ds
Ë((c⁄° 
¨5416_desc
 *)(_ds))

	)

314 
	#ds_˘l2
 
u
.
tx
.
˘l2


	)

315 
	#ds_˘l3
 
u
.
tx
.
˘l3


	)

316 
	#ds_˘l4
 
u
.
tx
.
˘l4


	)

317 
	#ds_˘l5
 
u
.
tx
.
˘l5


	)

318 
	#ds_˘l6
 
u
.
tx
.
˘l6


	)

319 
	#ds_˘l7
 
u
.
tx
.
˘l7


	)

320 
	#ds_˘l8
 
u
.
tx
.
˘l8


	)

321 
	#ds_˘l9
 
u
.
tx
.
˘l9


	)

322 
	#ds_˘l10
 
u
.
tx
.
˘l10


	)

323 
	#ds_˘l11
 
u
.
tx
.
˘l11


	)

325 
	#ds_tx°©us0
 
u
.
tx
.
°©us0


	)

326 
	#ds_tx°©us1
 
u
.
tx
.
°©us1


	)

327 
	#ds_tx°©us2
 
u
.
tx
.
°©us2


	)

328 
	#ds_tx°©us3
 
u
.
tx
.
°©us3


	)

329 
	#ds_tx°©us4
 
u
.
tx
.
°©us4


	)

330 
	#ds_tx°©us5
 
u
.
tx
.
°©us5


	)

331 
	#ds_tx°©us6
 
u
.
tx
.
°©us6


	)

332 
	#ds_tx°©us7
 
u
.
tx
.
°©us7


	)

333 
	#ds_tx°©us8
 
u
.
tx
.
°©us8


	)

334 
	#ds_tx°©us9
 
u
.
tx
.
°©us9


	)

336 
	#ds_rx°©us0
 
u
.
rx
.
°©us0


	)

337 
	#ds_rx°©us1
 
u
.
rx
.
°©us1


	)

338 
	#ds_rx°©us2
 
u
.
rx
.
°©us2


	)

339 
	#ds_rx°©us3
 
u
.
rx
.
°©us3


	)

340 
	#ds_rx°©us4
 
u
.
rx
.
°©us4


	)

341 
	#ds_rx°©us5
 
u
.
rx
.
°©us5


	)

342 
	#ds_rx°©us6
 
u
.
rx
.
°©us6


	)

343 
	#ds_rx°©us7
 
u
.
rx
.
°©us7


	)

344 
	#ds_rx°©us8
 
u
.
rx
.
°©us8


	)

346 
	#AR_FømeLí
 0x00000fff

	)

347 
	#AR_VútM‹eFøg
 0x00001000

	)

348 
	#AR_TxCéRsvd00
 0x0000e000

	)

349 
	#AR_XmôPowî
 0x003f0000

	)

350 
	#AR_XmôPowî_S
 16

	)

351 
	#AR_RTSE«bÀ
 0x00400000

	)

352 
	#AR_VEOL
 0x00800000

	)

353 
	#AR_CÃDe°Mask
 0x01000000

	)

354 
	#AR_TxCéRsvd01
 0x1e000000

	)

355 
	#AR_TxI¡rReq
 0x20000000

	)

356 
	#AR_De°IdxVÆid
 0x40000000

	)

357 
	#AR_CTSE«bÀ
 0x80000000

	)

359 
	#AR_TxM‹e
 0x00001000

	)

360 
	#AR_De°Idx
 0x000„000

	)

361 
	#AR_De°Idx_S
 13

	)

362 
	#AR_FømeTy≥
 0x00f00000

	)

363 
	#AR_FømeTy≥_S
 20

	)

364 
	#AR_NoAck
 0x01000000

	)

365 
	#AR_In£πTS
 0x02000000

	)

366 
	#AR_C‹ru±FCS
 0x04000000

	)

367 
	#AR_ExtO∆y
 0x08000000

	)

368 
	#AR_ExtAndCé
 0x10000000

	)

369 
	#AR_M‹eAggr
 0x20000000

	)

370 
	#AR_IsAggr
 0x40000000

	)

372 
	#AR_Bur°Dur
 0x00007fff

	)

373 
	#AR_Bur°Dur_S
 0

	)

374 
	#AR_DurUpd©eE«
 0x00008000

	)

375 
	#AR_XmôD©aTrõs0
 0x000f0000

	)

376 
	#AR_XmôD©aTrõs0_S
 16

	)

377 
	#AR_XmôD©aTrõs1
 0x00f00000

	)

378 
	#AR_XmôD©aTrõs1_S
 20

	)

379 
	#AR_XmôD©aTrõs2
 0x0f000000

	)

380 
	#AR_XmôD©aTrõs2_S
 24

	)

381 
	#AR_XmôD©aTrõs3
 0xf0000000

	)

382 
	#AR_XmôD©aTrõs3_S
 28

	)

384 
	#AR_XmôR©e0
 0x000000ff

	)

385 
	#AR_XmôR©e0_S
 0

	)

386 
	#AR_XmôR©e1
 0x0000ff00

	)

387 
	#AR_XmôR©e1_S
 8

	)

388 
	#AR_XmôR©e2
 0x00ff0000

	)

389 
	#AR_XmôR©e2_S
 16

	)

390 
	#AR_XmôR©e3
 0xff000000

	)

391 
	#AR_XmôR©e3_S
 24

	)

393 
	#AR_PackëDur0
 0x00007fff

	)

394 
	#AR_PackëDur0_S
 0

	)

395 
	#AR_RTSCTSQuÆ0
 0x00008000

	)

396 
	#AR_PackëDur1
 0x7fff0000

	)

397 
	#AR_PackëDur1_S
 16

	)

398 
	#AR_RTSCTSQuÆ1
 0x80000000

	)

400 
	#AR_PackëDur2
 0x00007fff

	)

401 
	#AR_PackëDur2_S
 0

	)

402 
	#AR_RTSCTSQuÆ2
 0x00008000

	)

403 
	#AR_PackëDur3
 0x7fff0000

	)

404 
	#AR_PackëDur3_S
 16

	)

405 
	#AR_RTSCTSQuÆ3
 0x80000000

	)

407 
	#AR_AggrLí
 0x0000ffff

	)

408 
	#AR_AggrLí_S
 0

	)

409 
	#AR_TxCéRsvd60
 0x00030000

	)

410 
	#AR_PadDñim
 0x03fc0000

	)

411 
	#AR_PadDñim_S
 18

	)

412 
	#AR_En¸Ty≥
 0x0c000000

	)

413 
	#AR_En¸Ty≥_S
 26

	)

414 
	#AR_TxCéRsvd61
 0xf0000000

	)

415 
	#AR_LDPC
 0x80000000

	)

417 
	#AR_2040_0
 0x00000001

	)

418 
	#AR_GI0
 0x00000002

	)

419 
	#AR_ChaöSñ0
 0x0000001c

	)

420 
	#AR_ChaöSñ0_S
 2

	)

421 
	#AR_2040_1
 0x00000020

	)

422 
	#AR_GI1
 0x00000040

	)

423 
	#AR_ChaöSñ1
 0x00000380

	)

424 
	#AR_ChaöSñ1_S
 7

	)

425 
	#AR_2040_2
 0x00000400

	)

426 
	#AR_GI2
 0x00000800

	)

427 
	#AR_ChaöSñ2
 0x00007000

	)

428 
	#AR_ChaöSñ2_S
 12

	)

429 
	#AR_2040_3
 0x00008000

	)

430 
	#AR_GI3
 0x00010000

	)

431 
	#AR_ChaöSñ3
 0x000e0000

	)

432 
	#AR_ChaöSñ3_S
 17

	)

433 
	#AR_RTSCTSR©e
 0x0ff00000

	)

434 
	#AR_RTSCTSR©e_S
 20

	)

435 
	#AR_STBC0
 0x10000000

	)

436 
	#AR_STBC1
 0x20000000

	)

437 
	#AR_STBC2
 0x40000000

	)

438 
	#AR_STBC3
 0x80000000

	)

440 
	#AR_TxRSSIA¡00
 0x000000ff

	)

441 
	#AR_TxRSSIA¡00_S
 0

	)

442 
	#AR_TxRSSIA¡01
 0x0000ff00

	)

443 
	#AR_TxRSSIA¡01_S
 8

	)

444 
	#AR_TxRSSIA¡02
 0x00ff0000

	)

445 
	#AR_TxRSSIA¡02_S
 16

	)

446 
	#AR_TxSètusRsvd00
 0x3f000000

	)

447 
	#AR_TxBaSètus
 0x40000000

	)

448 
	#AR_TxSètusRsvd01
 0x80000000

	)

455 
	#AR_FrmXmôOK
 0x00000001

	)

456 
	#AR_Ex˚ssiveRërõs
 0x00000002

	)

457 
	#AR_FIFOUndîrun
 0x00000004

	)

458 
	#AR_Fûãªd
 0x00000008

	)

459 
	#AR_RTSFaûC¡
 0x000000f0

	)

460 
	#AR_RTSFaûC¡_S
 4

	)

461 
	#AR_D©aFaûC¡
 0x00000f00

	)

462 
	#AR_D©aFaûC¡_S
 8

	)

463 
	#AR_VútRëryC¡
 0x0000f000

	)

464 
	#AR_VútRëryC¡_S
 12

	)

465 
	#AR_TxDñimUndîrun
 0x00010000

	)

466 
	#AR_TxD©aUndîrun
 0x00020000

	)

467 
	#AR_DescCfgEº
 0x00040000

	)

468 
	#AR_TxTimîExpúed
 0x00080000

	)

469 
	#AR_TxSètusRsvd10
 0xfff00000

	)

471 
	#AR_SídTime°amp
 
ds_tx°©us2


	)

472 
	#AR_BaBôm≠Low
 
ds_tx°©us3


	)

473 
	#AR_BaBôm≠High
 
ds_tx°©us4


	)

475 
	#AR_TxRSSIA¡10
 0x000000ff

	)

476 
	#AR_TxRSSIA¡10_S
 0

	)

477 
	#AR_TxRSSIA¡11
 0x0000ff00

	)

478 
	#AR_TxRSSIA¡11_S
 8

	)

479 
	#AR_TxRSSIA¡12
 0x00ff0000

	)

480 
	#AR_TxRSSIA¡12_S
 16

	)

481 
	#AR_TxRSSIComböed
 0xff000000

	)

482 
	#AR_TxRSSIComböed_S
 24

	)

484 
	#AR_TxTid
 0xf0000000

	)

485 
	#AR_TxTid_S
 28

	)

487 
	#AR_TxEVM0
 
ds_tx°©us5


	)

488 
	#AR_TxEVM1
 
ds_tx°©us6


	)

489 
	#AR_TxEVM2
 
ds_tx°©us7


	)

491 
	#AR_TxD⁄e
 0x00000001

	)

492 
	#AR_SeqNum
 0x00001f„

	)

493 
	#AR_SeqNum_S
 1

	)

494 
	#AR_TxSètusRsvd80
 0x0001e000

	)

495 
	#AR_TxOpEx˚eded
 0x00020000

	)

496 
	#AR_TxSètusRsvd81
 0x001c0000

	)

497 
	#AR_FöÆTxIdx
 0x00600000

	)

498 
	#AR_FöÆTxIdx_S
 21

	)

499 
	#AR_TxSètusRsvd82
 0x01800000

	)

500 
	#AR_PowîMgmt
 0x02000000

	)

501 
	#AR_TxSètusRsvd83
 0xfc000000

	)

503 
	#AR_RxCTLRsvd00
 0xffffffff

	)

505 
	#AR_RxCéRsvd00
 0x00001000

	)

506 
	#AR_RxI¡rReq
 0x00002000

	)

507 
	#AR_RxCéRsvd01
 0xffffc000

	)

509 
	#AR_RxRSSIA¡00
 0x000000ff

	)

510 
	#AR_RxRSSIA¡00_S
 0

	)

511 
	#AR_RxRSSIA¡01
 0x0000ff00

	)

512 
	#AR_RxRSSIA¡01_S
 8

	)

513 
	#AR_RxRSSIA¡02
 0x00ff0000

	)

514 
	#AR_RxRSSIA¡02_S
 16

	)

515 
	#AR_RxR©e
 0xff000000

	)

516 
	#AR_RxR©e_S
 24

	)

517 
	#AR_RxSètusRsvd00
 0xff000000

	)

519 
	#AR_D©aLí
 0x00000fff

	)

520 
	#AR_RxM‹e
 0x00001000

	)

521 
	#AR_NumDñim
 0x003fc000

	)

522 
	#AR_NumDñim_S
 14

	)

523 
	#AR_RxSètusRsvd10
 0xff800000

	)

525 
	#AR_RcvTime°amp
 
ds_rx°©us2


	)

527 
	#AR_GI
 0x00000001

	)

528 
	#AR_2040
 0x00000002

	)

529 
	#AR_P¨ÆÀl40
 0x00000004

	)

530 
	#AR_P¨ÆÀl40_S
 2

	)

531 
	#AR_STBC
 0x00000008

	)

532 
	#AR_RxSètusRsvd30
 0x000000f0

	)

533 
	#AR_RxA¡í«
 0xffffff00

	)

534 
	#AR_RxA¡í«_S
 8

	)

536 
	#AR_RxRSSIA¡10
 0x000000ff

	)

537 
	#AR_RxRSSIA¡10_S
 0

	)

538 
	#AR_RxRSSIA¡11
 0x0000ff00

	)

539 
	#AR_RxRSSIA¡11_S
 8

	)

540 
	#AR_RxRSSIA¡12
 0x00ff0000

	)

541 
	#AR_RxRSSIA¡12_S
 16

	)

542 
	#AR_RxRSSIComböed
 0xff000000

	)

543 
	#AR_RxRSSIComböed_S
 24

	)

545 
	#AR_RxEVM0
 
ds_rx°©us4


	)

546 
	#AR_RxEVM1
 
ds_rx°©us5


	)

547 
	#AR_RxEVM2
 
ds_rx°©us6


	)

549 
	#AR_RxD⁄e
 0x00000001

	)

550 
	#AR_RxFømeOK
 0x00000002

	)

551 
	#AR_CRCEº
 0x00000004

	)

552 
	#AR_De¸y±CRCEº
 0x00000008

	)

553 
	#AR_PHYEº
 0x00000010

	)

554 
	#AR_Mich´lEº
 0x00000020

	)

555 
	#AR_PªDñimCRCEº
 0x00000040

	)

556 
	#AR_RxSètusRsvd70
 0x00000080

	)

557 
	#AR_RxKeyIdxVÆid
 0x00000100

	)

558 
	#AR_KeyIdx
 0x0000„00

	)

559 
	#AR_KeyIdx_S
 9

	)

560 
	#AR_PHYEºCode
 0x0000ff00

	)

561 
	#AR_PHYEºCode_S
 8

	)

562 
	#AR_RxM‹eAggr
 0x00010000

	)

563 
	#AR_RxAggr
 0x00020000

	)

564 
	#AR_Po°DñimCRCEº
 0x00040000

	)

565 
	#AR_RxSètusRsvd71
 0x3ff80000

	)

566 
	#AR_RxFú°Aggr
 0x20000000

	)

567 
	#AR_De¸y±BusyEº
 0x40000000

	)

568 
	#AR_KeyMiss
 0x80000000

	)

570 
	e©h9k_tx_queue
 {

571 
	mATH9K_TX_QUEUE_INACTIVE
 = 0,

572 
	mATH9K_TX_QUEUE_DATA
,

573 
	mATH9K_TX_QUEUE_BEACON
,

574 
	mATH9K_TX_QUEUE_CAB
,

575 
	mATH9K_TX_QUEUE_UAPSD
,

576 
	mATH9K_TX_QUEUE_PSPOLL


579 
	#ATH9K_NUM_TX_QUEUES
 10

	)

582 
	#ATH9K_WME_UPSD
 4

	)

584 
	e©h9k_tx_queue_Êags
 {

585 
	mTXQ_FLAG_TXINT_ENABLE
 = 0x0001,

586 
	mTXQ_FLAG_TXDESCINT_ENABLE
 = 0x0002,

587 
	mTXQ_FLAG_TXEOLINT_ENABLE
 = 0x0004,

588 
	mTXQ_FLAG_TXURNINT_ENABLE
 = 0x0008,

589 
	mTXQ_FLAG_BACKOFF_DISABLE
 = 0x0010,

590 
	mTXQ_FLAG_COMPRESSION_ENABLE
 = 0x0020,

591 
	mTXQ_FLAG_RDYTIME_EXP_POLICY_ENABLE
 = 0x0040,

592 
	mTXQ_FLAG_FRAG_BURST_BACKOFF_ENABLE
 = 0x0080,

595 
	#ATH9K_TXQ_USEDEFAULT
 ((
u32
Ë-1)

	)

596 
	#ATH9K_TXQ_USE_LOCKOUT_BKOFF_DIS
 0x00000001

	)

598 
	#ATH9K_DECOMP_MASK_SIZE
 128

	)

600 
	e©h9k_pkt_ty≥
 {

601 
	mATH9K_PKT_TYPE_NORMAL
 = 0,

602 
	mATH9K_PKT_TYPE_ATIM
,

603 
	mATH9K_PKT_TYPE_PSPOLL
,

604 
	mATH9K_PKT_TYPE_BEACON
,

605 
	mATH9K_PKT_TYPE_PROBE_RESP
,

606 
	mATH9K_PKT_TYPE_CHIRP
,

607 
	mATH9K_PKT_TYPE_GRP_POLL
,

610 
	s©h9k_tx_queue_öfo
 {

611 
u32
 
	mtqi_vî
;

612 
©h9k_tx_queue
 
	mtqi_ty≥
;

613 
	mtqi_subty≥
;

614 
©h9k_tx_queue_Êags
 
	mtqi_qÊags
;

615 
u32
 
	mtqi_¥i‹ôy
;

616 
u32
 
	mtqi_aifs
;

617 
u32
 
	mtqi_cwmö
;

618 
u32
 
	mtqi_cwmax
;

619 
u16
 
	mtqi_shªåy
;

620 
u16
 
	mtqi_lgªåy
;

621 
u32
 
	mtqi_cbrPîiod
;

622 
u32
 
	mtqi_cbrOvîÊowLimô
;

623 
u32
 
	mtqi_bur°Time
;

624 
u32
 
	mtqi_ªadyTime
;

625 
u32
 
	mtqi_physCompBuf
;

626 
u32
 
	mtqi_ötFœgs
;

629 
	e©h9k_rx_fûãr
 {

630 
	mATH9K_RX_FILTER_UCAST
 = 0x00000001,

631 
	mATH9K_RX_FILTER_MCAST
 = 0x00000002,

632 
	mATH9K_RX_FILTER_BCAST
 = 0x00000004,

633 
	mATH9K_RX_FILTER_CONTROL
 = 0x00000008,

634 
	mATH9K_RX_FILTER_BEACON
 = 0x00000010,

635 
	mATH9K_RX_FILTER_PROM
 = 0x00000020,

636 
	mATH9K_RX_FILTER_PROBEREQ
 = 0x00000080,

637 
	mATH9K_RX_FILTER_PHYERR
 = 0x00000100,

638 
	mATH9K_RX_FILTER_MYBEACON
 = 0x00000200,

639 
	mATH9K_RX_FILTER_COMP_BAR
 = 0x00000400,

640 
	mATH9K_RX_FILTER_COMP_BA
 = 0x00000800,

641 
	mATH9K_RX_FILTER_UNCOMP_BA_BAR
 = 0x00001000,

642 
	mATH9K_RX_FILTER_PSPOLL
 = 0x00004000,

643 
	mATH9K_RX_FILTER_PHYRADAR
 = 0x00002000,

644 
	mATH9K_RX_FILTER_MCAST_BCAST_ALL
 = 0x00008000,

645 
	mATH9K_RX_FILTER_CONTROL_WRAPPER
 = 0x00080000,

646 
	mATH9K_RX_FILTER_4ADDRESS
 = 0x00100000,

649 
	#ATH9K_RATESERIES_RTS_CTS
 0x0001

	)

650 
	#ATH9K_RATESERIES_2040
 0x0002

	)

651 
	#ATH9K_RATESERIES_HALFGI
 0x0004

	)

652 
	#ATH9K_RATESERIES_STBC
 0x0008

	)

654 
	s©h9k_11n_øã_£rõs
 {

655 
u32
 
	mTrõs
;

656 
u32
 
	mR©e
;

657 
u32
 
	mPktDuøti⁄
;

658 
u32
 
	mChSñ
;

659 
u32
 
	mR©eFœgs
;

662 
	eaggr_ty≥
 {

663 
	mAGGR_BUF_NONE
,

664 
	mAGGR_BUF_FIRST
,

665 
	mAGGR_BUF_MIDDLE
,

666 
	mAGGR_BUF_LAST
,

669 
	e©h9k_key_ty≥
 {

670 
	mATH9K_KEY_TYPE_CLEAR
,

671 
	mATH9K_KEY_TYPE_WEP
,

672 
	mATH9K_KEY_TYPE_AES
,

673 
	mATH9K_KEY_TYPE_TKIP
,

676 
	s©h_tx_öfo
 {

677 
u8
 
	mqcu
;

679 
boﬁ
 
	mis_fú°
;

680 
boﬁ
 
	mis_œ°
;

682 
aggr_ty≥
 
	maggr
;

683 
u8
 
	mndñim
;

684 
u16
 
	maggr_Àn
;

686 
dma_addr_t
 
	mlök
;

687 
	mpkt_Àn
;

688 
u32
 
	mÊags
;

690 
dma_addr_t
 
	mbuf_addr
[4];

691 
	mbuf_Àn
[4];

693 
©h9k_11n_øã_£rõs
 
	møãs
[4];

694 
u8
 
	mπs˘s_øã
;

695 
boﬁ
 
	mdur_upd©e
;

697 
©h9k_pkt_ty≥
 
	mty≥
;

698 
©h9k_key_ty≥
 
	mkeyty≥
;

699 
u8
 
	mkeyix
;

700 
u8
 
	mtxpowî
;

703 
	g©h_hw
;

704 
	g©h9k_ch™√l
;

705 
	g©h9k_öt
;

707 
u32
 
©h9k_hw_gëtxbuf
(
©h_hw
 *
ah
, u32 
q
);

708 
©h9k_hw_puâxbuf
(
©h_hw
 *
ah
, 
u32
 
q
, u32 
txdp
);

709 
©h9k_hw_tx°¨t
(
©h_hw
 *
ah
, 
u32
 
q
);

710 
u32
 
©h9k_hw_numtx≥ndög
(
©h_hw
 *
ah
, u32 
q
);

711 
boﬁ
 
©h9k_hw_upd©ëxåigÀvñ
(
©h_hw
 *
ah
, boﬁ 
bIncTrigLevñ
);

712 
boﬁ
 
©h9k_hw_°›_dma_queue
(
©h_hw
 *
ah
, 
u32
 
q
);

713 
©h9k_hw_ab‹t_tx_dma
(
©h_hw
 *
ah
);

714 
boﬁ
 
©h9k_hw_£t_txq_¥›s
(
©h_hw
 *
ah
, 
q
,

715 c⁄° 
©h9k_tx_queue_öfo
 *
qöfo
);

716 
boﬁ
 
©h9k_hw_gë_txq_¥›s
(
©h_hw
 *
ah
, 
q
,

717 
©h9k_tx_queue_öfo
 *
qöfo
);

718 
©h9k_hw_£tu±xqueue
(
©h_hw
 *
ah
, 
©h9k_tx_queue
 
ty≥
,

719 c⁄° 
©h9k_tx_queue_öfo
 *
qöfo
);

720 
boﬁ
 
©h9k_hw_ªÀa£txqueue
(
©h_hw
 *
ah
, 
u32
 
q
);

721 
boﬁ
 
©h9k_hw_ª£âxqueue
(
©h_hw
 *
ah
, 
u32
 
q
);

722 
©h9k_hw_rx¥ocdesc
(
©h_hw
 *
ah
, 
©h_desc
 *
ds
,

723 
©h_rx_°©us
 *
rs
);

724 
©h9k_hw_£tu¥xdesc
(
©h_hw
 *
ah
, 
©h_desc
 *
ds
,

725 
u32
 
size
, u32 
Êags
);

726 
boﬁ
 
©h9k_hw_£åxab‹t
(
©h_hw
 *
ah
, boﬁ 
£t
);

727 
©h9k_hw_puåxbuf
(
©h_hw
 *
ah
, 
u32
 
rxdp
);

728 
©h9k_hw_°¨çcuª˚ive
(
©h_hw
 *
ah
, 
boﬁ
 
is_sˇ¬ög
);

729 
©h9k_hw_ab‹çcuªcv
(
©h_hw
 *
ah
);

730 
boﬁ
 
©h9k_hw_°›dm¨ecv
(
©h_hw
 *
ah
, boﬁ *
ª£t
);

731 
©h9k_hw_bóc⁄q_£tup
(
©h_hw
 *
ah
);

732 
©h9k_hw_£t_tx_fûãr
(
©h_hw
 *
ah
, 
u8
 
de°idx
, 
boﬁ
 
£t
);

735 
boﬁ
 
©h9k_hw_öå≥nd
(
©h_hw
 *
ah
);

736 
©h9k_hw_£t_öãºu±s
(
©h_hw
 *
ah
);

737 
©h9k_hw_íabÀ_öãºu±s
(
©h_hw
 *
ah
);

738 
©h9k_hw_dißbÀ_öãºu±s
(
©h_hw
 *
ah
);

739 
©h9k_hw_kûl_öãºu±s
(
©h_hw
 *
ah
);

741 
¨9002_hw_©èch_mac_›s
(
©h_hw
 *
ah
);

	@main.c

17 
	~<löux/∆80211.h
>

18 
	~<löux/dñay.h
>

19 
	~"©h9k.h
"

20 
	~"btc€x.h
"

22 
©h9k_£t_assoc_°©e
(
©h_so·c
 *
sc
,

23 
õì80211_vif
 *
vif
);

25 
u8
 
	$©h9k_∑r£_mpdudísôy
(
u8
 
mpdudísôy
)

38 
mpdudísôy
) {

58 
	}
}

60 
boﬁ
 
	$©h9k_has_≥ndög_‰ames
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
)

62 
boﬁ
 
≥ndög
 = 
Ál£
;

64 
	`•ö_lock_bh
(&
txq
->
axq_lock
);

66 i‡(
txq
->
axq_dïth
 || !
	`li°_em±y
(&txq->
axq_acq
))

67 
≥ndög
 = 
åue
;

69 
	`•ö_u∆ock_bh
(&
txq
->
axq_lock
);

70  
≥ndög
;

71 
	}
}

73 
boﬁ
 
	$©h9k_£çowî
(
©h_so·c
 *
sc
, 
©h9k_powî_mode
 
mode
)

75 
Êags
;

76 
boﬁ
 
ªt
;

78 
	`•ö_lock_úqßve
(&
sc
->
sc_pm_lock
, 
Êags
);

79 
ªt
 = 
	`©h9k_hw_£çowî
(
sc
->
sc_ah
, 
mode
);

80 
	`•ö_u∆ock_úqª°‹e
(&
sc
->
sc_pm_lock
, 
Êags
);

82  
ªt
;

83 
	}
}

85 
	$©h_ps_fuŒ_¶ìp
(
d©a
)

87 
©h_so·c
 *
sc
 = (©h_so·¯*Ë
d©a
;

88 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

89 
boﬁ
 
ª£t
;

91 
	`•ö_lock
(&
comm⁄
->
cc_lock
);

92 
	`©h_hw_cy˛e_cou¡îs_upd©e
(
comm⁄
);

93 
	`•ö_u∆ock
(&
comm⁄
->
cc_lock
);

95 
	`©h9k_hw_£åxab‹t
(
sc
->
sc_ah
, 1);

96 
	`©h9k_hw_°›dm¨ecv
(
sc
->
sc_ah
, &
ª£t
);

98 
	`©h9k_hw_£çowî
(
sc
->
sc_ah
, 
ATH9K_PM_FULL_SLEEP
);

99 
	}
}

101 
	$©h9k_ps_wakeup
(
©h_so·c
 *
sc
)

103 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

104 
Êags
;

105 
©h9k_powî_mode
 
powî_mode
;

107 
	`•ö_lock_úqßve
(&
sc
->
sc_pm_lock
, 
Êags
);

108 i‡(++
sc
->
ps_u£cou¡
 != 1)

109 
u∆ock
;

111 
	`dñ_timî_sync
(&
sc
->
¶ìp_timî
);

112 
powî_mode
 = 
sc
->
sc_ah
->power_mode;

113 
	`©h9k_hw_£çowî
(
sc
->
sc_ah
, 
ATH9K_PM_AWAKE
);

120 i‡(
powî_mode
 !
ATH9K_PM_AWAKE
) {

121 
	`•ö_lock
(&
comm⁄
->
cc_lock
);

122 
	`©h_hw_cy˛e_cou¡îs_upd©e
(
comm⁄
);

123 
	`mem£t
(&
comm⁄
->
cc_survey
, 0, (common->cc_survey));

124 
	`mem£t
(&
comm⁄
->
cc_™i
, 0, (common->cc_ani));

125 
	`•ö_u∆ock
(&
comm⁄
->
cc_lock
);

128 
u∆ock
:

129 
	`•ö_u∆ock_úqª°‹e
(&
sc
->
sc_pm_lock
, 
Êags
);

130 
	}
}

132 
	$©h9k_ps_ª°‹e
(
©h_so·c
 *
sc
)

134 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

135 
©h9k_powî_mode
 
mode
;

136 
Êags
;

138 
	`•ö_lock_úqßve
(&
sc
->
sc_pm_lock
, 
Êags
);

139 i‡(--
sc
->
ps_u£cou¡
 != 0)

140 
u∆ock
;

142 i‡(
sc
->
ps_idÀ
) {

143 
	`mod_timî
(&
sc
->
¶ìp_timî
, 
jiffõs
 + 
HZ
 / 10);

144 
u∆ock
;

147 i‡(
sc
->
ps_íabÀd
 &&

148 !(
sc
->
ps_Êags
 & (
PS_WAIT_FOR_BEACON
 |

149 
PS_WAIT_FOR_CAB
 |

150 
PS_WAIT_FOR_PSPOLL_DATA
 |

151 
PS_WAIT_FOR_TX_ACK
 |

152 
PS_WAIT_FOR_ANI
))) {

153 
mode
 = 
ATH9K_PM_NETWORK_SLEEP
;

154 i‡(
	`©h9k_hw_btc€x_is_íabÀd
(
sc
->
sc_ah
))

155 
	`©h9k_btc€x_°›_gí_timî
(
sc
);

157 
u∆ock
;

160 
	`•ö_lock
(&
comm⁄
->
cc_lock
);

161 
	`©h_hw_cy˛e_cou¡îs_upd©e
(
comm⁄
);

162 
	`•ö_u∆ock
(&
comm⁄
->
cc_lock
);

164 
	`©h9k_hw_£çowî
(
sc
->
sc_ah
, 
mode
);

166 
u∆ock
:

167 
	`•ö_u∆ock_úqª°‹e
(&
sc
->
sc_pm_lock
, 
Êags
);

168 
	}
}

170 
	$__©h_ˇn˚l_w‹k
(
©h_so·c
 *
sc
)

172 
	`ˇn˚l_w‹k_sync
(&
sc
->
∑¥d_w‹k
);

173 
	`ˇn˚l_dñayed_w‹k_sync
(&
sc
->
tx_com∂ëe_w‹k
);

174 
	`ˇn˚l_dñayed_w‹k_sync
(&
sc
->
hw_∂l_w‹k
);

176 #ifde‡
CPTCFG_ATH9K_BTCOEX_SUPPORT


177 i‡(
	`©h9k_hw_mci_is_íabÀd
(
sc
->
sc_ah
))

178 
	`ˇn˚l_w‹k_sync
(&
sc
->
mci_w‹k
);

180 
	}
}

182 
	$©h_ˇn˚l_w‹k
(
©h_so·c
 *
sc
)

184 
	`__©h_ˇn˚l_w‹k
(
sc
);

185 
	`ˇn˚l_w‹k_sync
(&
sc
->
hw_ª£t_w‹k
);

186 
	}
}

188 
	$©h_ª°¨t_w‹k
(
©h_so·c
 *
sc
)

190 
	`õì80211_queue_dñayed_w‹k
(
sc
->
hw
, &sc->
tx_com∂ëe_w‹k
, 0);

192 i‡(
	`AR_SREV_9340
(
sc
->
sc_ah
Ë|| 
	`AR_SREV_9330
(sc->sc_ah))

193 
	`õì80211_queue_dñayed_w‹k
(
sc
->
hw
, &sc->
hw_∂l_w‹k
,

194 
	`m£cs_to_jiffõs
(
ATH_PLL_WORK_INTERVAL
));

196 
	`©h_°¨t_™i
(
sc
);

197 
	}
}

199 
boﬁ
 
	$©h_¥ï¨e_ª£t
(
©h_so·c
 *
sc
)

201 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

202 
boﬁ
 
ªt
 = 
åue
;

204 
	`õì80211_°›_queues
(
sc
->
hw
);

205 
	`©h_°›_™i
(
sc
);

206 
	`©h9k_hw_dißbÀ_öãºu±s
(
ah
);

208 i‡(!
	`©h_døö_Æl_txq
(
sc
))

209 
ªt
 = 
Ál£
;

211 i‡(!
	`©h_°›ªcv
(
sc
))

212 
ªt
 = 
Ál£
;

214  
ªt
;

215 
	}
}

217 
boﬁ
 
	$©h_com∂ëe_ª£t
(
©h_so·c
 *
sc
, 
boﬁ
 
°¨t
)

219 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

220 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

221 
Êags
;

222 
i
;

224 i‡(
	`©h_°¨åecv
(
sc
) != 0) {

225 
	`©h_îr
(
comm⁄
, "UnableÅoÑestartÑecvÜogic\n");

226  
Ál£
;

229 
	`©h9k_cmn_upd©e_txpow
(
ah
, 
sc
->
cuπxpow
,

230 
sc
->
c⁄fig
.
txpowlimô
, &sc->
cuπxpow
);

232 
	`˛ór_bô
(
ATH_OP_HW_RESET
, &
comm⁄
->
›_Êags
);

233 
	`©h9k_hw_£t_öãºu±s
(
ah
);

234 
	`©h9k_hw_íabÀ_öãºu±s
(
ah
);

236 i‡(!(
sc
->
hw
->
c⁄f
.
Êags
 & 
IEEE80211_CONF_OFFCHANNEL
Ë&& 
°¨t
) {

237 i‡(!
	`ã°_bô
(
ATH_OP_BEACONS
, &
comm⁄
->
›_Êags
))

238 
w‹k
;

240 i‡(
ah
->
›mode
 =
NL80211_IFTYPE_STATION
 &&

241 
	`ã°_bô
(
ATH_OP_PRIM_STA_VIF
, &
comm⁄
->
›_Êags
)) {

242 
	`•ö_lock_úqßve
(&
sc
->
sc_pm_lock
, 
Êags
);

243 
sc
->
ps_Êags
 |
PS_BEACON_SYNC
 | 
PS_WAIT_FOR_BEACON
;

244 
	`•ö_u∆ock_úqª°‹e
(&
sc
->
sc_pm_lock
, 
Êags
);

246 
	`©h9k_£t_bóc⁄
(
sc
);

248 
w‹k
:

249 
	`©h_ª°¨t_w‹k
(
sc
);

251 
i
 = 0; i < 
ATH9K_NUM_TX_QUEUES
; i++) {

252 i‡(!
	`ATH_TXQ_SETUP
(
sc
, 
i
))

255 
	`•ö_lock_bh
(&
sc
->
tx
.
txq
[
i
].
axq_lock
);

256 
	`©h_txq_scheduÀ
(
sc
, &sc->
tx
.
txq
[
i
]);

257 
	`•ö_u∆ock_bh
(&
sc
->
tx
.
txq
[
i
].
axq_lock
);

261 
sc
->
gâ_˙t
 = 0;

262 
	`õì80211_wake_queues
(
sc
->
hw
);

264 
	`©h9k_p2p_ps_timî
(
sc
);

266  
åue
;

267 
	}
}

269 
	$©h_ª£t_öã∫Æ
(
©h_so·c
 *
sc
, 
©h9k_ch™√l
 *
hch™
)

271 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

272 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

273 
©h9k_hw_ˇl_d©a
 *
ˇld©a
 = 
NULL
;

274 
boﬁ
 
Á°cc
 = 
åue
;

275 
r
;

277 
	`__©h_ˇn˚l_w‹k
(
sc
);

279 
	`èskÀt_dißbÀ
(&
sc
->
öå_tq
);

280 
	`•ö_lock_bh
(&
sc
->
sc_pcu_lock
);

282 i‡(!(
sc
->
hw
->
c⁄f
.
Êags
 & 
IEEE80211_CONF_OFFCHANNEL
)) {

283 
Á°cc
 = 
Ál£
;

284 
ˇld©a
 = &
sc
->caldata;

287 i‡(!
hch™
) {

288 
Á°cc
 = 
Ál£
;

289 
hch™
 = 
ah
->
curch™
;

292 i‡(!
	`©h_¥ï¨e_ª£t
(
sc
))

293 
Á°cc
 = 
Ál£
;

295 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "ResetÅo %u MHz, HT40: %d fastcc: %d\n",

296 
hch™
->
ch™√l
, 
	`IS_CHAN_HT40
(hch™), 
Á°cc
);

298 
r
 = 
	`©h9k_hw_ª£t
(
ah
, 
hch™
, 
ˇld©a
, 
Á°cc
);

299 i‡(
r
) {

300 
	`©h_îr
(
comm⁄
,

301 "U«bÀÅÿª£àch™√l,Ñe£à°©u†%d\n", 
r
);

303 
	`©h9k_hw_íabÀ_öãºu±s
(
ah
);

304 
	`©h9k_queue_ª£t
(
sc
, 
RESET_TYPE_BB_HANG
);

306 
out
;

309 i‡(
	`©h9k_hw_mci_is_íabÀd
(
sc
->
sc_ah
) &&

310 (
sc
->
hw
->
c⁄f
.
Êags
 & 
IEEE80211_CONF_OFFCHANNEL
))

311 
	`©h9k_mci_£t_txpowî
(
sc
, 
åue
, 
Ál£
);

313 i‡(!
	`©h_com∂ëe_ª£t
(
sc
, 
åue
)) {

314 
r
 = -
EIO
;

315 
out
;

318 
sc
->
hw
->
cur_powî_Àvñ
 = sc->
cuπxpow
 / 2;

320 
out
:

321 
	`•ö_u∆ock_bh
(&
sc
->
sc_pcu_lock
);

322 
	`èskÀt_íabÀ
(&
sc
->
öå_tq
);

324  
r
;

325 
	}
}

333 
	$©h_£t_ch™√l
(
©h_so·c
 *
sc
, 
cfg80211_ch™_def
 *
ch™def
)

335 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

336 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

337 
õì80211_hw
 *
hw
 = 
sc
->hw;

338 
©h9k_ch™√l
 *
hch™
;

339 
õì80211_ch™√l
 *
ch™
 = 
ch™def
->chan;

340 
boﬁ
 
offch™√l
;

341 
pos
 = 
ch™
->
hw_vÆue
;

342 
ﬁd_pos
 = -1;

343 
r
;

345 i‡(
	`ã°_bô
(
ATH_OP_INVALID
, &
comm⁄
->
›_Êags
))

346  -
EIO
;

348 
offch™√l
 = !!(
hw
->
c⁄f
.
Êags
 & 
IEEE80211_CONF_OFFCHANNEL
);

350 i‡(
ah
->
curch™
)

351 
ﬁd_pos
 = 
ah
->
curch™
 - &ah->
ch™√ls
[0];

353 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "Set channel: %d MHz width: %d\n",

354 
ch™
->
˚¡î_‰eq
, 
ch™def
->
width
);

357 
	`•ö_lock_bh
(&
comm⁄
->
cc_lock
);

358 
	`©h_upd©e_survey_°©s
(
sc
);

359 
	`•ö_u∆ock_bh
(&
comm⁄
->
cc_lock
);

361 
	`©h9k_cmn_gë_ch™√l
(
hw
, 
ah
, 
ch™def
);

369 i‡(!
offch™√l
 && 
sc
->
cur_survey
 !&sc->
survey
[
pos
]) {

370 i‡(
sc
->
cur_survey
)

371 
sc
->
cur_survey
->
fûÀd
 &~
SURVEY_INFO_IN_USE
;

373 
sc
->
cur_survey
 = &sc->
survey
[
pos
];

375 
	`mem£t
(
sc
->
cur_survey
, 0, (
survey_öfo
));

376 
sc
->
cur_survey
->
fûÀd
 |
SURVEY_INFO_IN_USE
;

377 } i‡(!(
sc
->
survey
[
pos
].
fûÀd
 & 
SURVEY_INFO_IN_USE
)) {

378 
	`mem£t
(&
sc
->
survey
[
pos
], 0, (
survey_öfo
));

381 
hch™
 = &
sc
->
sc_ah
->
ch™√ls
[
pos
];

382 
r
 = 
	`©h_ª£t_öã∫Æ
(
sc
, 
hch™
);

383 i‡(
r
)

384  
r
;

391 i‡(
ﬁd_pos
 >= 0)

392 
	`©h_upd©e_survey_nf
(
sc
, 
ﬁd_pos
);

398 i‡(
hw
->
c⁄f
.
ød¨_íabÀd
) {

399 
u32
 
rxfûãr
;

402 
	`©h9k_hw_£t_ød¨_∑øms
(
ah
);

403 
rxfûãr
 = 
	`©h9k_hw_gërxfûãr
(
ah
);

404 
rxfûãr
 |
ATH9K_RX_FILTER_PHYRADAR
 |

405 
ATH9K_RX_FILTER_PHYERR
;

406 
	`©h9k_hw_£åxfûãr
(
ah
, 
rxfûãr
);

407 
	`©h_dbg
(
comm⁄
, 
DFS
, "DFSÉnabledát freq %d\n",

408 
ch™
->
˚¡î_‰eq
);

411 i‡(
	`ã°_bô
(
ATH_OP_SCANNING
, &
comm⁄
->
›_Êags
) &&

412 
sc
->
•e˘øl_mode
 =
SPECTRAL_CHANSCAN
)

413 
	`©h9k_•e˘øl_sˇn_åiggî
(
hw
);

417 
	}
}

419 
	$©h_node_©èch
(
©h_so·c
 *
sc
, 
õì80211_°a
 *
°a
,

420 
õì80211_vif
 *
vif
)

422 
©h_node
 *
™
;

423 
™
 = (
©h_node
 *)
°a
->
drv_¥iv
;

425 
™
->
sc
 = sc;

426 
™
->
°a
 = sta;

427 
™
->
vif
 = vif;

428 
	`mem£t
(&
™
->
key_idx
, 0, (an->key_idx));

430 
	`©h_tx_node_öô
(
sc
, 
™
);

431 
	}
}

433 
	$©h_node_dëach
(
©h_so·c
 *
sc
, 
õì80211_°a
 *
°a
)

435 
©h_node
 *
™
 = (©h_nodê*)
°a
->
drv_¥iv
;

436 
	`©h_tx_node_˛ónup
(
sc
, 
™
);

437 
	}
}

439 
	$©h9k_èskÀt
(
d©a
)

441 
©h_so·c
 *
sc
 = (©h_so·¯*)
d©a
;

442 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

443 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

444 
©h_ª£t_ty≥
 
ty≥
;

445 
Êags
;

446 
u32
 
°©us
 = 
sc
->
öå°©us
;

447 
u32
 
rxmask
;

449 
	`©h9k_ps_wakeup
(
sc
);

450 
	`•ö_lock
(&
sc
->
sc_pcu_lock
);

452 i‡(
°©us
 & 
ATH9K_INT_FATAL
) {

453 
ty≥
 = 
RESET_TYPE_FATAL_INT
;

454 
	`©h9k_queue_ª£t
(
sc
, 
ty≥
);

460 
	`©omic_öc
(&
ah
->
öå_ªf_˙t
);

461 
	`©h_dbg
(
comm⁄
, 
RESET
, "FATAL: Skipping interrupts\n");

462 
out
;

465 i‡((
ah
->
c⁄fig
.
hw_h™g_checks
 & 
HW_BB_WATCHDOG
) &&

466 (
°©us
 & 
ATH9K_INT_BB_WATCHDOG
)) {

467 
	`•ö_lock
(&
comm⁄
->
cc_lock
);

468 
	`©h_hw_cy˛e_cou¡îs_upd©e
(
comm⁄
);

469 
	`¨9003_hw_bb_w©chdog_dbg_öfo
(
ah
);

470 
	`•ö_u∆ock
(&
comm⁄
->
cc_lock
);

472 i‡(
	`¨9003_hw_bb_w©chdog_check
(
ah
)) {

473 
ty≥
 = 
RESET_TYPE_BB_WATCHDOG
;

474 
	`©h9k_queue_ª£t
(
sc
, 
ty≥
);

480 
	`©omic_öc
(&
ah
->
öå_ªf_˙t
);

481 
	`©h_dbg
(
comm⁄
, 
RESET
,

483 
out
;

487 i‡(
°©us
 & 
ATH9K_INT_GTT
) {

488 
sc
->
gâ_˙t
++;

490 i‡((
sc
->
gâ_˙t
 >
MAX_GTT_CNT
Ë&& !
	`©h9k_hw_check_Æive
(
ah
)) {

491 
ty≥
 = 
RESET_TYPE_TX_GTT
;

492 
	`©h9k_queue_ª£t
(
sc
, 
ty≥
);

493 
	`©omic_öc
(&
ah
->
öå_ªf_˙t
);

494 
	`©h_dbg
(
comm⁄
, 
RESET
,

496 
out
;

500 
	`•ö_lock_úqßve
(&
sc
->
sc_pm_lock
, 
Êags
);

501 i‡((
°©us
 & 
ATH9K_INT_TSFOOR
Ë&& 
sc
->
ps_íabÀd
) {

506 
	`©h_dbg
(
comm⁄
, 
PS
, "TSFOOR - Sync withÇext Beacon\n");

507 
sc
->
ps_Êags
 |
PS_WAIT_FOR_BEACON
 | 
PS_BEACON_SYNC
;

509 
	`•ö_u∆ock_úqª°‹e
(&
sc
->
sc_pm_lock
, 
Êags
);

511 i‡(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_EDMA
)

512 
rxmask
 = (
ATH9K_INT_RXHP
 | 
ATH9K_INT_RXLP
 | 
ATH9K_INT_RXEOL
 |

513 
ATH9K_INT_RXORN
);

515 
rxmask
 = (
ATH9K_INT_RX
 | 
ATH9K_INT_RXEOL
 | 
ATH9K_INT_RXORN
);

517 i‡(
°©us
 & 
rxmask
) {

519 i‡((
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_EDMA
) &&

520 (
°©us
 & 
ATH9K_INT_RXHP
))

521 
	`©h_rx_èskÀt
(
sc
, 0, 
åue
);

523 
	`©h_rx_èskÀt
(
sc
, 0, 
Ál£
);

526 i‡(
°©us
 & 
ATH9K_INT_TX
) {

527 i‡(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_EDMA
) {

534 
sc
->
gâ_˙t
 = 0;

536 
	`©h_tx_edma_èskÀt
(
sc
);

538 
	`©h_tx_èskÀt
(
sc
);

541 
	`wake_up
(&
sc
->
tx_waô
);

544 i‡(
°©us
 & 
ATH9K_INT_GENTIMER
)

545 
	`©h_gí_timî_i§
(
sc
->
sc_ah
);

547 
	`©h9k_btc€x_h™dÀ_öãºu±
(
sc
, 
°©us
);

550 
	`©h9k_hw_íabÀ_öãºu±s
(
ah
);

551 
out
:

552 
	`•ö_u∆ock
(&
sc
->
sc_pcu_lock
);

553 
	`©h9k_ps_ª°‹e
(
sc
);

554 
	}
}

556 
úqªtu∫_t
 
	$©h_i§
(
úq
, *
dev
)

558 
	#SCHED_INTR
 ( \

559 
ATH9K_INT_FATAL
 | \

560 
ATH9K_INT_BB_WATCHDOG
 | \

561 
ATH9K_INT_RXORN
 | \

562 
ATH9K_INT_RXEOL
 | \

563 
ATH9K_INT_RX
 | \

564 
ATH9K_INT_RXLP
 | \

565 
ATH9K_INT_RXHP
 | \

566 
ATH9K_INT_TX
 | \

567 
ATH9K_INT_BMISS
 | \

568 
ATH9K_INT_CST
 | \

569 
ATH9K_INT_GTT
 | \

570 
ATH9K_INT_TSFOOR
 | \

571 
ATH9K_INT_GENTIMER
 | \

572 
ATH9K_INT_MCI
)

	)

574 
©h_so·c
 *
sc
 = 
dev
;

575 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

576 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

577 
©h9k_öt
 
°©us
;

578 
u32
 
sync_ˇu£
 = 0;

579 
boﬁ
 
sched
 = 
Ál£
;

586 i‡(
	`ã°_bô
(
ATH_OP_INVALID
, &
comm⁄
->
›_Êags
))

587  
IRQ_NONE
;

591 i‡(!
	`©h9k_hw_öå≥nd
(
ah
))

592  
IRQ_NONE
;

594 i‡(
	`ã°_bô
(
ATH_OP_HW_RESET
, &
comm⁄
->
›_Êags
)) {

595 
	`©h9k_hw_kûl_öãºu±s
(
ah
);

596  
IRQ_HANDLED
;

605 
	`©h9k_hw_gëi§
(
ah
, &
°©us
, &
sync_ˇu£
);

606 
	`©h9k_debug_sync_ˇu£
(
sc
, 
sync_ˇu£
);

607 
°©us
 &
ah
->
imask
;

609 i‡(
	`ã°_bô
(
ATH_DIAG_TRIGGER_ERROR
, &
ah
->
düg
)) {

610 
°©us
 |
ATH9K_INT_FATAL
;

611 
	`˛ór_bô
(
ATH_DIAG_TRIGGER_ERROR
, &
ah
->
düg
);

618 i‡(!
°©us
)

619  
IRQ_NONE
;

622 
sc
->
öå°©us
 = 
°©us
;

624 i‡(
°©us
 & 
SCHED_INTR
)

625 
sched
 = 
åue
;

631 i‡(
°©us
 & 
ATH9K_INT_FATAL
)

632 
chù_ª£t
;

634 i‡((
ah
->
c⁄fig
.
hw_h™g_checks
 & 
HW_BB_WATCHDOG
) &&

635 (
°©us
 & 
ATH9K_INT_BB_WATCHDOG
))

636 
chù_ª£t
;

638 #ifde‡
CPTCFG_ATH9K_WOW


639 i‡(
°©us
 & 
ATH9K_INT_BMISS
) {

640 i‡(
	`©omic_ªad
(&
sc
->
wow_¶ìp_¥oc_öå
) == 0) {

641 
	`©omic_öc
(&
sc
->
wow_gŸ_bmiss_öå
);

642 
	`©omic_dec
(&
sc
->
wow_¶ìp_¥oc_öå
);

647 i‡(
°©us
 & 
ATH9K_INT_SWBA
)

648 
	`èskÀt_scheduÀ
(&
sc
->
bc⁄_èskÀt
);

650 i‡(
°©us
 & 
ATH9K_INT_TXURN
)

651 
	`©h9k_hw_upd©ëxåigÀvñ
(
ah
, 
åue
);

653 i‡(
°©us
 & 
ATH9K_INT_RXEOL
) {

654 
ah
->
imask
 &~(
ATH9K_INT_RXEOL
 | 
ATH9K_INT_RXORN
);

655 
	`©h9k_hw_£t_öãºu±s
(
ah
);

658 i‡(!(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_AUTOSLEEP
))

659 i‡(
°©us
 & 
ATH9K_INT_TIM_TIMER
) {

660 i‡(
	`ATH_DBG_WARN_ON_ONCE
(
sc
->
ps_idÀ
))

661 
chù_ª£t
;

664 
	`©h9k_£çowî
(
sc
, 
ATH9K_PM_AWAKE
);

665 
	`•ö_lock
(&
sc
->
sc_pm_lock
);

666 
	`©h9k_hw_£åxab‹t
(
sc
->
sc_ah
, 0);

667 
sc
->
ps_Êags
 |
PS_WAIT_FOR_BEACON
;

668 
	`•ö_u∆ock
(&
sc
->
sc_pm_lock
);

671 
chù_ª£t
:

673 
	`©h_debug_°©_öãºu±
(
sc
, 
°©us
);

675 i‡(
sched
) {

677 
	`©h9k_hw_dißbÀ_öãºu±s
(
ah
);

678 
	`èskÀt_scheduÀ
(&
sc
->
öå_tq
);

681  
IRQ_HANDLED
;

683 #unde‡
SCHED_INTR


684 
	}
}

686 
	$©h_ª£t
(
©h_so·c
 *
sc
)

688 
r
;

690 
	`©h9k_ps_wakeup
(
sc
);

691 
r
 = 
	`©h_ª£t_öã∫Æ
(
sc
, 
NULL
);

692 
	`©h9k_ps_ª°‹e
(
sc
);

694  
r
;

695 
	}
}

697 
	$©h9k_queue_ª£t
(
©h_so·c
 *
sc
, 
©h_ª£t_ty≥
 
ty≥
)

699 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

700 #ifde‡
CPTCFG_ATH9K_DEBUGFS


701 
	`RESET_STAT_INC
(
sc
, 
ty≥
);

703 
	`£t_bô
(
ATH_OP_HW_RESET
, &
comm⁄
->
›_Êags
);

704 
	`õì80211_queue_w‹k
(
sc
->
hw
, &sc->
hw_ª£t_w‹k
);

705 
	}
}

707 
	$©h_ª£t_w‹k
(
w‹k_°ru˘
 *
w‹k
)

709 
©h_so·c
 *
sc
 = 
	`c⁄èöî_of
(
w‹k
, ©h_so·c, 
hw_ª£t_w‹k
);

711 
	`©h_ª£t
(
sc
);

712 
	}
}

718 
	$©h9k_°¨t
(
õì80211_hw
 *
hw
)

720 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

721 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

722 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

723 
õì80211_ch™√l
 *
curch™
 = 
hw
->
c⁄f
.
ch™def
.
ch™
;

724 
©h9k_ch™√l
 *
öô_ch™√l
;

725 
r
;

727 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

729 
curch™
->
˚¡î_‰eq
);

731 
	`©h9k_ps_wakeup
(
sc
);

732 
	`muãx_lock
(&
sc
->
muãx
);

734 
öô_ch™√l
 = 
	`©h9k_cmn_gë_ch™√l
(
hw
, 
ah
, &hw->
c⁄f
.
ch™def
);

737 
	`©h9k_hw_c⁄figpcùowîßve
(
ah
, 
Ál£
);

746 
	`•ö_lock_bh
(&
sc
->
sc_pcu_lock
);

748 
	`©omic_£t
(&
ah
->
öå_ªf_˙t
, -1);

750 
r
 = 
	`©h9k_hw_ª£t
(
ah
, 
öô_ch™√l
,áh->
ˇld©a
, 
Ál£
);

751 i‡(
r
) {

752 
	`©h_îr
(
comm⁄
,

754 
r
, 
curch™
->
˚¡î_‰eq
);

755 
ah
->
ª£t_powî_⁄
 = 
Ál£
;

759 
ah
->
imask
 = 
ATH9K_INT_TX
 | 
ATH9K_INT_RXEOL
 |

760 
ATH9K_INT_RXORN
 | 
ATH9K_INT_FATAL
 |

761 
ATH9K_INT_GLOBAL
;

763 i‡(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_EDMA
)

764 
ah
->
imask
 |
ATH9K_INT_RXHP
 |

765 
ATH9K_INT_RXLP
;

767 
ah
->
imask
 |
ATH9K_INT_RX
;

769 i‡(
ah
->
c⁄fig
.
hw_h™g_checks
 & 
HW_BB_WATCHDOG
)

770 
ah
->
imask
 |
ATH9K_INT_BB_WATCHDOG
;

776 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
))

777 
ah
->
imask
 |
ATH9K_INT_GTT
;

779 i‡(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_HT
)

780 
ah
->
imask
 |
ATH9K_INT_CST
;

782 
	`©h_mci_íabÀ
(
sc
);

784 
	`˛ór_bô
(
ATH_OP_INVALID
, &
comm⁄
->
›_Êags
);

785 
sc
->
sc_ah
->
is_m⁄ô‹ög
 = 
Ál£
;

787 i‡(!
	`©h_com∂ëe_ª£t
(
sc
, 
Ál£
))

788 
ah
->
ª£t_powî_⁄
 = 
Ál£
;

790 i‡(
ah
->
Àd_pö
 >= 0) {

791 
	`©h9k_hw_cfg_ouçut
(
ah
,áh->
Àd_pö
,

792 
AR_GPIO_OUTPUT_MUX_AS_OUTPUT
);

793 
	`©h9k_hw_£t_gpio
(
ah
,áh->
Àd_pö
, 0);

800 
	`©h9k_cmn_öô_¸y±o
(
sc
->
sc_ah
);

802 
	`©h9k_hw_ª£t_tsf
(
ah
);

804 
	`•ö_u∆ock_bh
(&
sc
->
sc_pcu_lock
);

806 
	`muãx_u∆ock
(&
sc
->
muãx
);

808 
	`©h9k_ps_ª°‹e
(
sc
);

811 
	}
}

813 
	$©h9k_tx
(
õì80211_hw
 *
hw
,

814 
õì80211_tx_c⁄åﬁ
 *
c⁄åﬁ
,

815 
sk_buff
 *
skb
)

817 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

818 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

819 
©h_tx_c⁄åﬁ
 
tx˘l
;

820 
õì80211_hdr
 *
hdr
 = (õì80211_hd∏*Ë
skb
->
d©a
;

821 
Êags
;

823 i‡(
sc
->
ps_íabÀd
) {

828 i‡(
	`õì80211_is_d©a
(
hdr
->
‰ame_c⁄åﬁ
) &&

829 !
	`õì80211_is_nuŒfunc
(
hdr
->
‰ame_c⁄åﬁ
) &&

830 !
	`õì80211_has_pm
(
hdr
->
‰ame_c⁄åﬁ
)) {

831 
	`©h_dbg
(
comm⁄
, 
PS
,

833 
hdr
->
‰ame_c⁄åﬁ
 |
	`˝u_to_À16
(
IEEE80211_FCTL_PM
);

837 i‡(
	`u∆ikñy
(
sc
->
sc_ah
->
powî_mode
 =
ATH9K_PM_NETWORK_SLEEP
)) {

843 
	`©h9k_ps_wakeup
(
sc
);

844 
	`•ö_lock_úqßve
(&
sc
->
sc_pm_lock
, 
Êags
);

845 i‡(!(
sc
->
sc_ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_AUTOSLEEP
))

846 
	`©h9k_hw_£åxab‹t
(
sc
->
sc_ah
, 0);

847 i‡(
	`õì80211_is_p•ﬁl
(
hdr
->
‰ame_c⁄åﬁ
)) {

848 
	`©h_dbg
(
comm⁄
, 
PS
,

850 
sc
->
ps_Êags
 |
PS_WAIT_FOR_PSPOLL_DATA
;

852 
	`©h_dbg
(
comm⁄
, 
PS
, "Wake upÅo complete TX\n");

853 
sc
->
ps_Êags
 |
PS_WAIT_FOR_TX_ACK
;

860 
	`•ö_u∆ock_úqª°‹e
(&
sc
->
sc_pm_lock
, 
Êags
);

861 
	`©h9k_ps_ª°‹e
(
sc
);

868 i‡(
	`u∆ikñy
(
sc
->
sc_ah
->
powî_mode
 =
ATH9K_PM_FULL_SLEEP
)) {

869 
	`©h_îr
(
comm⁄
, "TX while HW is in FULL_SLEEP mode\n");

870 
exô
;

873 
	`mem£t
(&
tx˘l
, 0, (
©h_tx_c⁄åﬁ
));

874 
tx˘l
.
txq
 = 
sc
->
tx
.
txq_m≠
[
	`skb_gë_queue_m≠pög
(
skb
)];

875 
tx˘l
.
°a
 = 
c⁄åﬁ
->sta;

877 
	`©h_dbg
(
comm⁄
, 
XMIT
, "å™smôtögÖackë, skb: %p\n", 
skb
);

879 i‡(
	`©h_tx_°¨t
(
hw
, 
skb
, &
tx˘l
) != 0) {

880 
	`©h_dbg
(
comm⁄
, 
XMIT
, "TX failed\n");

881 
	`TX_STAT_INC
(
tx˘l
.
txq
->
axq_qnum
, 
txÁûed
);

882 
exô
;

886 
exô
:

887 
	`õì80211_‰ì_txskb
(
hw
, 
skb
);

888 
	}
}

890 
	$©h9k_°›
(
õì80211_hw
 *
hw
)

892 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

893 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

894 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

895 
boﬁ
 
¥ev_idÀ
;

897 
	`muãx_lock
(&
sc
->
muãx
);

899 
	`©h_ˇn˚l_w‹k
(
sc
);

901 i‡(
	`ã°_bô
(
ATH_OP_INVALID
, &
comm⁄
->
›_Êags
)) {

902 
	`©h_dbg
(
comm⁄
, 
ANY
, "DeviceÇotÖresent\n");

903 
	`muãx_u∆ock
(&
sc
->
muãx
);

908 
	`©h9k_ps_wakeup
(
sc
);

910 
	`•ö_lock_bh
(&
sc
->
sc_pcu_lock
);

913 
ah
->
imask
 &~
ATH9K_INT_GLOBAL
;

917 
	`©h9k_hw_dißbÀ_öãºu±s
(
ah
);

919 
	`•ö_u∆ock_bh
(&
sc
->
sc_pcu_lock
);

923 
	`synchr⁄ize_úq
(
sc
->
úq
);

924 
	`èskÀt_kûl
(&
sc
->
öå_tq
);

925 
	`èskÀt_kûl
(&
sc
->
bc⁄_èskÀt
);

927 
¥ev_idÀ
 = 
sc
->
ps_idÀ
;

928 
sc
->
ps_idÀ
 = 
åue
;

930 
	`•ö_lock_bh
(&
sc
->
sc_pcu_lock
);

932 i‡(
ah
->
Àd_pö
 >= 0) {

933 
	`©h9k_hw_£t_gpio
(
ah
,áh->
Àd_pö
, 1);

934 
	`©h9k_hw_cfg_gpio_öput
(
ah
,áh->
Àd_pö
);

937 
	`©h_¥ï¨e_ª£t
(
sc
);

939 i‡(
sc
->
rx
.
‰ag
) {

940 
	`dev_k‰ì_skb_™y
(
sc
->
rx
.
‰ag
);

941 
sc
->
rx
.
‰ag
 = 
NULL
;

944 i‡(!
ah
->
curch™
)

945 
ah
->
curch™
 = 
	`©h9k_cmn_gë_ch™√l
(
hw
,áh, &hw->
c⁄f
.
ch™def
);

947 
	`©h9k_hw_ª£t
(
ah
,áh->
curch™
,áh->
ˇld©a
, 
Ál£
);

948 
	`©h9k_hw_phy_dißbÀ
(
ah
);

950 
	`©h9k_hw_c⁄figpcùowîßve
(
ah
, 
åue
);

952 
	`•ö_u∆ock_bh
(&
sc
->
sc_pcu_lock
);

954 
	`©h9k_ps_ª°‹e
(
sc
);

956 
	`£t_bô
(
ATH_OP_INVALID
, &
comm⁄
->
›_Êags
);

957 
sc
->
ps_idÀ
 = 
¥ev_idÀ
;

959 
	`muãx_u∆ock
(&
sc
->
muãx
);

961 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "Driver halt\n");

962 
	}
}

964 
boﬁ
 
	$©h9k_u£s_bóc⁄s
(
ty≥
)

966 
ty≥
) {

967 
NL80211_IFTYPE_AP
:

968 
NL80211_IFTYPE_ADHOC
:

969 
NL80211_IFTYPE_MESH_POINT
:

970  
åue
;

972  
Ál£
;

974 
	}
}

976 
	$©h9k_vif_ôî
(*
d©a
, 
u8
 *
mac
, 
õì80211_vif
 *
vif
)

978 
©h9k_vif_ôî_d©a
 *
ôî_d©a
 = 
d©a
;

979 
i
;

981 i‡(
ôî_d©a
->
has_hw_maˇddr
) {

982 
i
 = 0; i < 
ETH_ALEN
; i++)

983 
ôî_d©a
->
mask
[
i
] &=

984 ~(
ôî_d©a
->
hw_maˇddr
[
i
] ^ 
mac
[i]);

986 
	`mem˝y
(
ôî_d©a
->
hw_maˇddr
, 
mac
, 
ETH_ALEN
);

987 
ôî_d©a
->
has_hw_maˇddr
 = 
åue
;

990 
vif
->
ty≥
) {

991 
NL80211_IFTYPE_AP
:

992 
ôî_d©a
->
«ps
++;

994 
NL80211_IFTYPE_STATION
:

995 
ôî_d©a
->
n°©i⁄s
++;

997 
NL80211_IFTYPE_ADHOC
:

998 
ôî_d©a
->
«dhocs
++;

1000 
NL80211_IFTYPE_MESH_POINT
:

1001 
ôî_d©a
->
nmeshes
++;

1003 
NL80211_IFTYPE_WDS
:

1004 
ôî_d©a
->
nwds
++;

1009 
	}
}

1011 
	$©h9k_°a_vif_ôî
(*
d©a
, 
u8
 *
mac
, 
õì80211_vif
 *
vif
)

1013 
©h_so·c
 *
sc
 = 
d©a
;

1014 
©h_vif
 *
avp
 = (*)
vif
->
drv_¥iv
;

1016 i‡(
vif
->
ty≥
 !
NL80211_IFTYPE_STATION
)

1019 i‡(
avp
->
¥im¨y_°a_vif
)

1020 
	`©h9k_£t_assoc_°©e
(
sc
, 
vif
);

1021 
	}
}

1024 
	$©h9k_ˇlcuœã_ôî_d©a
(
õì80211_hw
 *
hw
,

1025 
õì80211_vif
 *
vif
,

1026 
©h9k_vif_ôî_d©a
 *
ôî_d©a
)

1028 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

1029 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

1030 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1037 
	`mem£t
(
ôî_d©a
, 0, (*iter_data));

1038 
	`mem£t
(&
ôî_d©a
->
mask
, 0xff, 
ETH_ALEN
);

1040 i‡(
vif
)

1041 
	`©h9k_vif_ôî
(
ôî_d©a
, 
vif
->
addr
, vif);

1044 
	`õì80211_ôî©e_a˘ive_öãrÁ˚s_©omic
(

1045 
sc
->
hw
, 
IEEE80211_IFACE_ITER_RESUME_ALL
,

1046 
©h9k_vif_ôî
, 
ôî_d©a
);

1048 
	`mem˝y
(
comm⁄
->
maˇddr
, 
ôî_d©a
->
hw_maˇddr
, 
ETH_ALEN
);

1049 
	}
}

1052 
	$©h9k_ˇlcuœã_summ¨y_°©e
(
õì80211_hw
 *
hw
,

1053 
õì80211_vif
 *
vif
)

1055 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

1056 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

1057 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1058 
©h9k_vif_ôî_d©a
 
ôî_d©a
;

1059 
∆80211_i·y≥
 
ﬁd_›mode
 = 
ah
->
›mode
;

1061 
	`©h9k_ˇlcuœã_ôî_d©a
(
hw
, 
vif
, &
ôî_d©a
);

1063 
	`mem˝y
(
comm⁄
->
bssidmask
, 
ôî_d©a
.
mask
, 
ETH_ALEN
);

1064 
	`©h_hw_£tbssidmask
(
comm⁄
);

1066 i‡(
ôî_d©a
.
«ps
 > 0) {

1067 
	`©h9k_hw_£t_tsÁdju°
(
ah
, 
åue
);

1068 
ah
->
›mode
 = 
NL80211_IFTYPE_AP
;

1070 
	`©h9k_hw_£t_tsÁdju°
(
ah
, 
Ál£
);

1072 i‡(
ôî_d©a
.
nmeshes
)

1073 
ah
->
›mode
 = 
NL80211_IFTYPE_MESH_POINT
;

1074 i‡(
ôî_d©a
.
nwds
)

1075 
ah
->
›mode
 = 
NL80211_IFTYPE_AP
;

1076 i‡(
ôî_d©a
.
«dhocs
)

1077 
ah
->
›mode
 = 
NL80211_IFTYPE_ADHOC
;

1079 
ah
->
›mode
 = 
NL80211_IFTYPE_STATION
;

1082 
	`©h9k_hw_£t›mode
(
ah
);

1084 i‡((
ôî_d©a
.
n°©i⁄s
 + iãr_d©a.
«dhocs
 + iãr_d©a.
nmeshes
) > 0)

1085 
ah
->
imask
 |
ATH9K_INT_TSFOOR
;

1087 
ah
->
imask
 &~
ATH9K_INT_TSFOOR
;

1089 
	`©h9k_hw_£t_öãºu±s
(
ah
);

1095 i‡(
ah
->
›mode
 =
NL80211_IFTYPE_STATION
 &&

1096 
ﬁd_›mode
 =
NL80211_IFTYPE_AP
 &&

1097 
	`ã°_bô
(
ATH_OP_PRIM_STA_VIF
, &
comm⁄
->
›_Êags
)) {

1098 
	`õì80211_ôî©e_a˘ive_öãrÁ˚s_©omic
(

1099 
sc
->
hw
, 
IEEE80211_IFACE_ITER_RESUME_ALL
,

1100 
©h9k_°a_vif_ôî
, 
sc
);

1102 
	}
}

1104 
	$©h9k_add_öãrÁ˚
(
õì80211_hw
 *
hw
,

1105 
õì80211_vif
 *
vif
)

1107 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

1108 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

1109 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1110 
©h_vif
 *
avp
 = (*)
vif
->
drv_¥iv
;

1111 
©h_node
 *
™
 = &
avp
->
mˇ°_node
;

1113 
	`muãx_lock
(&
sc
->
muãx
);

1115 i‡(
	`c⁄fig_íabÀd
(
CPTCFG_ATH9K_TX99
)) {

1116 i‡(
sc
->
nvifs
 >= 1) {

1117 
	`muãx_u∆ock
(&
sc
->
muãx
);

1118  -
EOPNOTSUPP
;

1120 
sc
->
tx99_vif
 = 
vif
;

1123 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "Aâachá VIF o‡ty≥: %d\n", 
vif
->
ty≥
);

1124 
sc
->
nvifs
++;

1126 
	`©h9k_ps_wakeup
(
sc
);

1127 
	`©h9k_ˇlcuœã_summ¨y_°©e
(
hw
, 
vif
);

1128 
	`©h9k_ps_ª°‹e
(
sc
);

1130 i‡(
	`©h9k_u£s_bóc⁄s
(
vif
->
ty≥
))

1131 
	`©h9k_bóc⁄_assign_¶Ÿ
(
sc
, 
vif
);

1133 
avp
->
vif
 = vif;

1135 
™
->
sc
 = sc;

1136 
™
->
°a
 = 
NULL
;

1137 
™
->
vif
 = vif;

1138 
™
->
no_ps_fûãr
 = 
åue
;

1139 
	`©h_tx_node_öô
(
sc
, 
™
);

1141 
	`muãx_u∆ock
(&
sc
->
muãx
);

1143 
	}
}

1145 
	$©h9k_ch™ge_öãrÁ˚
(
õì80211_hw
 *
hw
,

1146 
õì80211_vif
 *
vif
,

1147 
∆80211_i·y≥
 
√w_ty≥
,

1148 
boﬁ
 
p2p
)

1150 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

1151 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

1153 
	`muãx_lock
(&
sc
->
muãx
);

1155 i‡(
	`c⁄fig_íabÀd
(
CPTCFG_ATH9K_TX99
)) {

1156 
	`muãx_u∆ock
(&
sc
->
muãx
);

1157  -
EOPNOTSUPP
;

1160 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "Change Interface\n");

1162 i‡(
	`©h9k_u£s_bóc⁄s
(
vif
->
ty≥
))

1163 
	`©h9k_bóc⁄_ªmove_¶Ÿ
(
sc
, 
vif
);

1165 
vif
->
ty≥
 = 
√w_ty≥
;

1166 
vif
->
p2p
 =Ö2p;

1168 
	`©h9k_ps_wakeup
(
sc
);

1169 
	`©h9k_ˇlcuœã_summ¨y_°©e
(
hw
, 
vif
);

1170 
	`©h9k_ps_ª°‹e
(
sc
);

1172 i‡(
	`©h9k_u£s_bóc⁄s
(
vif
->
ty≥
))

1173 
	`©h9k_bóc⁄_assign_¶Ÿ
(
sc
, 
vif
);

1175 
	`muãx_u∆ock
(&
sc
->
muãx
);

1177 
	}
}

1180 
	$©h9k_upd©e_p2p_ps_timî
(
©h_so·c
 *
sc
, 
©h_vif
 *
avp
)

1182 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

1183 
s32
 
tsf
, 
èrgë_tsf
;

1185 i‡(!
avp
 || !avp->
nﬂ
.
has_√xt_tsf
)

1188 
	`©h9k_hw_gí_timî_°›
(
ah
, 
sc
->
p2p_ps_timî
);

1190 
tsf
 = 
	`©h9k_hw_gëtsf32
(
sc
->
sc_ah
);

1192 
èrgë_tsf
 = 
avp
->
nﬂ
.
√xt_tsf
;

1193 i‡(!
avp
->
nﬂ
.
ab£¡
)

1194 
èrgë_tsf
 -
ATH_P2P_PS_STOP_TIME
;

1196 i‡(
èrgë_tsf
 - 
tsf
 < 
ATH_P2P_PS_STOP_TIME
)

1197 
èrgë_tsf
 = 
tsf
 + 
ATH_P2P_PS_STOP_TIME
;

1199 
	`©h9k_hw_gí_timî_°¨t
(
ah
, 
sc
->
p2p_ps_timî
, (
u32
Ë
èrgë_tsf
, 1000000);

1200 
	}
}

1202 
	$©h9k_ªmove_öãrÁ˚
(
õì80211_hw
 *
hw
,

1203 
õì80211_vif
 *
vif
)

1205 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

1206 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

1207 
©h_vif
 *
avp
 = (*)
vif
->
drv_¥iv
;

1209 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "Detach Interface\n");

1211 
	`muãx_lock
(&
sc
->
muãx
);

1213 
	`•ö_lock_bh
(&
sc
->
sc_pcu_lock
);

1214 i‡(
avp
 =
sc
->
p2p_ps_vif
) {

1215 
sc
->
p2p_ps_vif
 = 
NULL
;

1216 
	`©h9k_upd©e_p2p_ps_timî
(
sc
, 
NULL
);

1218 
	`•ö_u∆ock_bh
(&
sc
->
sc_pcu_lock
);

1220 
sc
->
nvifs
--;

1221 
sc
->
tx99_vif
 = 
NULL
;

1223 i‡(
	`©h9k_u£s_bóc⁄s
(
vif
->
ty≥
))

1224 
	`©h9k_bóc⁄_ªmove_¶Ÿ
(
sc
, 
vif
);

1226 
	`©h9k_ps_wakeup
(
sc
);

1227 
	`©h9k_ˇlcuœã_summ¨y_°©e
(
hw
, 
NULL
);

1228 
	`©h9k_ps_ª°‹e
(
sc
);

1230 
	`©h_tx_node_˛ónup
(
sc
, &
avp
->
mˇ°_node
);

1232 
	`muãx_u∆ock
(&
sc
->
muãx
);

1233 
	}
}

1235 
	$©h9k_íabÀ_ps
(
©h_so·c
 *
sc
)

1237 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

1238 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1240 i‡(
	`c⁄fig_íabÀd
(
CPTCFG_ATH9K_TX99
))

1243 
sc
->
ps_íabÀd
 = 
åue
;

1244 i‡(!(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_AUTOSLEEP
)) {

1245 i‡((
ah
->
imask
 & 
ATH9K_INT_TIM_TIMER
) == 0) {

1246 
ah
->
imask
 |
ATH9K_INT_TIM_TIMER
;

1247 
	`©h9k_hw_£t_öãºu±s
(
ah
);

1249 
	`©h9k_hw_£åxab‹t
(
ah
, 1);

1251 
	`©h_dbg
(
comm⁄
, 
PS
, "PowerSaveÉnabled\n");

1252 
	}
}

1254 
	$©h9k_dißbÀ_ps
(
©h_so·c
 *
sc
)

1256 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

1257 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1259 i‡(
	`c⁄fig_íabÀd
(
CPTCFG_ATH9K_TX99
))

1262 
sc
->
ps_íabÀd
 = 
Ál£
;

1263 
	`©h9k_hw_£çowî
(
ah
, 
ATH9K_PM_AWAKE
);

1264 i‡(!(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_AUTOSLEEP
)) {

1265 
	`©h9k_hw_£åxab‹t
(
ah
, 0);

1266 
sc
->
ps_Êags
 &~(
PS_WAIT_FOR_BEACON
 |

1267 
PS_WAIT_FOR_CAB
 |

1268 
PS_WAIT_FOR_PSPOLL_DATA
 |

1269 
PS_WAIT_FOR_TX_ACK
);

1270 i‡(
ah
->
imask
 & 
ATH9K_INT_TIM_TIMER
) {

1271 
ah
->
imask
 &~
ATH9K_INT_TIM_TIMER
;

1272 
	`©h9k_hw_£t_öãºu±s
(
ah
);

1275 
	`©h_dbg
(
comm⁄
, 
PS
, "PowerSave disabled\n");

1276 
	}
}

1278 
	$©h9k_•e˘øl_sˇn_åiggî
(
õì80211_hw
 *
hw
)

1280 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

1281 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

1282 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1283 
u32
 
rxfûãr
;

1285 i‡(
	`c⁄fig_íabÀd
(
CPTCFG_ATH9K_TX99
))

1288 i‡(!
	`©h9k_hw_›s
(
ah
)->
•e˘øl_sˇn_åiggî
) {

1289 
	`©h_îr
(
comm⁄
, "spectrumánalyzerÇot implemented onÅhis hardware\n");

1293 
	`©h9k_ps_wakeup
(
sc
);

1294 
rxfûãr
 = 
	`©h9k_hw_gërxfûãr
(
ah
);

1295 
	`©h9k_hw_£åxfûãr
(
ah
, 
rxfûãr
 |

1296 
ATH9K_RX_FILTER_PHYRADAR
 |

1297 
ATH9K_RX_FILTER_PHYERR
);

1304 
	`©h9k_•e˘øl_sˇn_c⁄fig
(
hw
, 
sc
->
•e˘øl_mode
);

1305 
	`©h9k_hw_›s
(
ah
)->
	`•e˘øl_sˇn_åiggî
(ah);

1306 
	`©h9k_ps_ª°‹e
(
sc
);

1307 
	}
}

1309 
	$©h9k_•e˘øl_sˇn_c⁄fig
(
õì80211_hw
 *
hw
,

1310 
•e˘øl_mode
 spectral_mode)

1312 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

1313 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

1314 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1316 i‡(!
	`©h9k_hw_›s
(
ah
)->
•e˘øl_sˇn_åiggî
) {

1317 
	`©h_îr
(
comm⁄
, "spectrumánalyzerÇot implemented onÅhis hardware\n");

1321 
•e˘øl_mode
) {

1322 
SPECTRAL_DISABLED
:

1323 
sc
->
•ec_c⁄fig
.
íabÀd
 = 0;

1325 
SPECTRAL_BACKGROUND
:

1329 
sc
->
•ec_c⁄fig
.
ídÀss
 = 1;

1330 
sc
->
•ec_c⁄fig
.
íabÀd
 = 1;

1332 
SPECTRAL_CHANSCAN
:

1333 
SPECTRAL_MANUAL
:

1334 
sc
->
•ec_c⁄fig
.
ídÀss
 = 0;

1335 
sc
->
•ec_c⁄fig
.
íabÀd
 = 1;

1341 
	`©h9k_ps_wakeup
(
sc
);

1342 
	`©h9k_hw_›s
(
ah
)->
	`•e˘øl_sˇn_c⁄fig
◊h, &
sc
->
•ec_c⁄fig
);

1343 
	`©h9k_ps_ª°‹e
(
sc
);

1345 
sc
->
•e˘øl_mode
 = spectral_mode;

1348 
	}
}

1350 
	$©h9k_c⁄fig
(
õì80211_hw
 *
hw
, 
u32
 
ch™ged
)

1352 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

1353 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

1354 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1355 
õì80211_c⁄f
 *
c⁄f
 = &
hw
->conf;

1356 
boﬁ
 
ª£t_ch™√l
 = 
Ál£
;

1358 
	`©h9k_ps_wakeup
(
sc
);

1359 
	`muãx_lock
(&
sc
->
muãx
);

1361 i‡(
ch™ged
 & 
IEEE80211_CONF_CHANGE_IDLE
) {

1362 
sc
->
ps_idÀ
 = !!(
c⁄f
->
Êags
 & 
IEEE80211_CONF_IDLE
);

1363 i‡(
sc
->
ps_idÀ
) {

1364 
	`©h_ˇn˚l_w‹k
(
sc
);

1365 
	`©h9k_°›_btc€x
(
sc
);

1367 
	`©h9k_°¨t_btc€x
(
sc
);

1372 
ª£t_ch™√l
 = 
ah
->
chù_fuŒ¶ìp
;

1382 i‡(
ch™ged
 & 
IEEE80211_CONF_CHANGE_PS
) {

1383 
Êags
;

1384 
	`•ö_lock_úqßve
(&
sc
->
sc_pm_lock
, 
Êags
);

1385 i‡(
c⁄f
->
Êags
 & 
IEEE80211_CONF_PS
)

1386 
	`©h9k_íabÀ_ps
(
sc
);

1388 
	`©h9k_dißbÀ_ps
(
sc
);

1389 
	`•ö_u∆ock_úqª°‹e
(&
sc
->
sc_pm_lock
, 
Êags
);

1392 i‡(
ch™ged
 & 
IEEE80211_CONF_CHANGE_MONITOR
) {

1393 i‡(
c⁄f
->
Êags
 & 
IEEE80211_CONF_MONITOR
) {

1394 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "Monitor mode isÉnabled\n");

1395 
sc
->
sc_ah
->
is_m⁄ô‹ög
 = 
åue
;

1397 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "Monitor mode is disabled\n");

1398 
sc
->
sc_ah
->
is_m⁄ô‹ög
 = 
Ál£
;

1402 i‡((
ch™ged
 & 
IEEE80211_CONF_CHANGE_CHANNEL
Ë|| 
ª£t_ch™√l
) {

1403 i‡(
	`©h_£t_ch™√l
(
sc
, &
hw
->
c⁄f
.
ch™def
) < 0) {

1404 
	`©h_îr
(
comm⁄
, "UnableÅo set channel\n");

1405 
	`muãx_u∆ock
(&
sc
->
muãx
);

1406 
	`©h9k_ps_ª°‹e
(
sc
);

1407  -
EINVAL
;

1411 i‡(
ch™ged
 & 
IEEE80211_CONF_CHANGE_POWER
) {

1412 
©h_ªguœt‹y
 *
ªg
 = 
	`©h9k_hw_ªguœt‹y
(
ah
);

1414 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "SëÖowî: %d\n", 
c⁄f
->
powî_Àvñ
);

1415 
ªg
->
max_™ã¬a_gaö
 = 
c⁄f
->max_antenna_gain;

1416 
sc
->
c⁄fig
.
txpowlimô
 = 2 * 
c⁄f
->
powî_Àvñ
;

1417 
	`©h9k_cmn_upd©e_txpow
(
ah
, 
sc
->
cuπxpow
,

1418 
sc
->
c⁄fig
.
txpowlimô
, &sc->
cuπxpow
);

1419 
hw
->
cur_powî_Àvñ
 = 
sc
->
cuπxpow
 / 2;

1422 
	`muãx_u∆ock
(&
sc
->
muãx
);

1423 
	`©h9k_ps_ª°‹e
(
sc
);

1426 
	}
}

1428 
	#SUPPORTED_FILTERS
 \

1429 (
FIF_PROMISC_IN_BSS
 | \

1430 
FIF_ALLMULTI
 | \

1431 
FIF_CONTROL
 | \

1432 
FIF_PSPOLL
 | \

1433 
FIF_OTHER_BSS
 | \

1434 
FIF_BCN_PRBRESP_PROMISC
 | \

1435 
FIF_PROBE_REQ
 | \

1436 
FIF_FCSFAIL
)

	)

1439 
	$©h9k_c⁄figuª_fûãr
(
õì80211_hw
 *
hw
,

1440 
ch™ged_Êags
,

1441 *
tŸÆ_Êags
,

1442 
u64
 
mu…iˇ°
)

1444 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

1445 
u32
 
rfût
;

1447 
ch™ged_Êags
 &
SUPPORTED_FILTERS
;

1448 *
tŸÆ_Êags
 &
SUPPORTED_FILTERS
;

1450 
sc
->
rx
.
rxfûãr
 = *
tŸÆ_Êags
;

1451 
	`©h9k_ps_wakeup
(
sc
);

1452 
rfût
 = 
	`©h_ˇl¸xfûãr
(
sc
);

1453 
	`©h9k_hw_£åxfûãr
(
sc
->
sc_ah
, 
rfût
);

1454 
	`©h9k_ps_ª°‹e
(
sc
);

1456 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
), 
CONFIG
, "Set HW RX filter: 0x%x\n",

1457 
rfût
);

1458 
	}
}

1460 
	$©h9k_°a_add
(
õì80211_hw
 *
hw
,

1461 
õì80211_vif
 *
vif
,

1462 
õì80211_°a
 *
°a
)

1464 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

1465 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

1466 
©h_node
 *
™
 = (©h_nodê*Ë
°a
->
drv_¥iv
;

1467 
õì80211_key_c⁄f
 
ps_key
 = { };

1468 
key
;

1470 
	`©h_node_©èch
(
sc
, 
°a
, 
vif
);

1472 i‡(
vif
->
ty≥
 !
NL80211_IFTYPE_AP
 &&

1473 
vif
->
ty≥
 !
NL80211_IFTYPE_AP_VLAN
)

1476 
key
 = 
	`©h_key_c⁄fig
(
comm⁄
, 
vif
, 
°a
, &
ps_key
);

1477 i‡(
key
 > 0) {

1478 
™
->
ps_key
 = 
key
;

1479 
™
->
key_idx
[0] = 
key
;

1483 
	}
}

1485 
	$©h9k_dñ_ps_key
(
©h_so·c
 *
sc
,

1486 
õì80211_vif
 *
vif
,

1487 
õì80211_°a
 *
°a
)

1489 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

1490 
©h_node
 *
™
 = (©h_nodê*Ë
°a
->
drv_¥iv
;

1491 
õì80211_key_c⁄f
 
ps_key
 = { .
hw_key_idx
 = 
™
->ps_key };

1493 i‡(!
™
->
ps_key
)

1496 
	`©h_key_dñëe
(
comm⁄
, &
ps_key
);

1497 
™
->
ps_key
 = 0;

1498 
™
->
key_idx
[0] = 0;

1499 
	}
}

1501 
	$©h9k_°a_ªmove
(
õì80211_hw
 *
hw
,

1502 
õì80211_vif
 *
vif
,

1503 
õì80211_°a
 *
°a
)

1505 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

1507 
	`©h9k_dñ_ps_key
(
sc
, 
vif
, 
°a
);

1508 
	`©h_node_dëach
(
sc
, 
°a
);

1511 
	}
}

1513 
	$©h9k_°a_£t_tx_fûãr
(
©h_hw
 *
ah
,

1514 
©h_node
 *
™
,

1515 
boﬁ
 
£t
)

1517 
i
;

1519 
i
 = 0; i < 
	`ARRAY_SIZE
(
™
->
key_idx
); i++) {

1520 i‡(!
™
->
key_idx
[
i
])

1522 
	`©h9k_hw_£t_tx_fûãr
(
ah
, 
™
->
key_idx
[
i
], 
£t
);

1524 
	}
}

1526 
	$©h9k_°a_nŸify
(
õì80211_hw
 *
hw
,

1527 
õì80211_vif
 *
vif
,

1528 
°a_nŸify_cmd
 
cmd
,

1529 
õì80211_°a
 *
°a
)

1531 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

1532 
©h_node
 *
™
 = (©h_nodê*Ë
°a
->
drv_¥iv
;

1534 
cmd
) {

1535 
STA_NOTIFY_SLEEP
:

1536 
™
->
¶ìpög
 = 
åue
;

1537 
	`©h_tx_aggr_¶ìp
(
°a
, 
sc
, 
™
);

1538 
	`©h9k_°a_£t_tx_fûãr
(
sc
->
sc_ah
, 
™
, 
åue
);

1540 
STA_NOTIFY_AWAKE
:

1541 
	`©h9k_°a_£t_tx_fûãr
(
sc
->
sc_ah
, 
™
, 
Ál£
);

1542 
™
->
¶ìpög
 = 
Ál£
;

1543 
	`©h_tx_aggr_wakeup
(
sc
, 
™
);

1546 
	}
}

1548 
	$©h9k_c⁄f_tx
(
õì80211_hw
 *
hw
,

1549 
õì80211_vif
 *
vif
, 
u16
 
queue
,

1550 c⁄° 
õì80211_tx_queue_∑øms
 *
∑øms
)

1552 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

1553 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

1554 
©h_txq
 *
txq
;

1555 
©h9k_tx_queue_öfo
 
qi
;

1556 
ªt
 = 0;

1558 i‡(
queue
 >
IEEE80211_NUM_ACS
)

1561 
txq
 = 
sc
->
tx
.
txq_m≠
[
queue
];

1563 
	`©h9k_ps_wakeup
(
sc
);

1564 
	`muãx_lock
(&
sc
->
muãx
);

1566 
	`mem£t
(&
qi
, 0, (
©h9k_tx_queue_öfo
));

1568 
qi
.
tqi_aifs
 = 
∑øms
->
aifs
;

1569 
qi
.
tqi_cwmö
 = 
∑øms
->
cw_mö
;

1570 
qi
.
tqi_cwmax
 = 
∑øms
->
cw_max
;

1571 
qi
.
tqi_bur°Time
 = 
∑øms
->
tx›
 * 32;

1573 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

1575 
queue
, 
txq
->
axq_qnum
, 
∑øms
->
aifs
,Ö¨ams->
cw_mö
,

1576 
∑øms
->
cw_max
,Ö¨ams->
tx›
);

1578 
	`©h_upd©e_max_aggr_‰amñí
(
sc
, 
queue
, 
qi
.
tqi_bur°Time
);

1579 
ªt
 = 
	`©h_txq_upd©e
(
sc
, 
txq
->
axq_qnum
, &
qi
);

1580 i‡(
ªt
)

1581 
	`©h_îr
(
comm⁄
, "TXQ Update failed\n");

1583 
	`muãx_u∆ock
(&
sc
->
muãx
);

1584 
	`©h9k_ps_ª°‹e
(
sc
);

1586  
ªt
;

1587 
	}
}

1589 
	$©h9k_£t_key
(
õì80211_hw
 *
hw
,

1590 
£t_key_cmd
 
cmd
,

1591 
õì80211_vif
 *
vif
,

1592 
õì80211_°a
 *
°a
,

1593 
õì80211_key_c⁄f
 *
key
)

1595 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

1596 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

1597 
©h_node
 *
™
 = 
NULL
;

1598 
ªt
 = 0, 
i
;

1600 i‡(
©h9k_mod∑øm_nohw¸y±
)

1601  -
ENOSPC
;

1603 i‡((
vif
->
ty≥
 =
NL80211_IFTYPE_ADHOC
 ||

1604 
vif
->
ty≥
 =
NL80211_IFTYPE_MESH_POINT
) &&

1605 (
key
->
cùhî
 =
WLAN_CIPHER_SUITE_TKIP
 ||

1606 
key
->
cùhî
 =
WLAN_CIPHER_SUITE_CCMP
) &&

1607 !(
key
->
Êags
 & 
IEEE80211_KEY_FLAG_PAIRWISE
)) {

1615  -
EOPNOTSUPP
;

1618 
	`muãx_lock
(&
sc
->
muãx
);

1619 
	`©h9k_ps_wakeup
(
sc
);

1620 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "Së HW Key %d\n", 
cmd
);

1621 i‡(
°a
)

1622 
™
 = (
©h_node
 *)
°a
->
drv_¥iv
;

1624 
cmd
) {

1625 
SET_KEY
:

1626 i‡(
°a
)

1627 
	`©h9k_dñ_ps_key
(
sc
, 
vif
, 
°a
);

1629 
key
->
hw_key_idx
 = 0;

1630 
ªt
 = 
	`©h_key_c⁄fig
(
comm⁄
, 
vif
, 
°a
, 
key
);

1631 i‡(
ªt
 >= 0) {

1632 
key
->
hw_key_idx
 = 
ªt
;

1634 
key
->
Êags
 |
IEEE80211_KEY_FLAG_GENERATE_IV
;

1635 i‡(
key
->
cùhî
 =
WLAN_CIPHER_SUITE_TKIP
)

1636 
key
->
Êags
 |
IEEE80211_KEY_FLAG_GENERATE_MMIC
;

1637 i‡(
sc
->
sc_ah
->
sw_mgmt_¸y±o
 &&

1638 
key
->
cùhî
 =
WLAN_CIPHER_SUITE_CCMP
)

1639 
key
->
Êags
 |
IEEE80211_KEY_FLAG_SW_MGMT_TX
;

1640 
ªt
 = 0;

1642 i‡(
™
 && 
key
->
hw_key_idx
) {

1643 
i
 = 0; i < 
	`ARRAY_SIZE
(
™
->
key_idx
); i++) {

1644 i‡(
™
->
key_idx
[
i
])

1646 
™
->
key_idx
[
i
] = 
key
->
hw_key_idx
;

1649 
	`WARN_ON
(
i
 =
	`ARRAY_SIZE
(
™
->
key_idx
));

1652 
DISABLE_KEY
:

1653 
	`©h_key_dñëe
(
comm⁄
, 
key
);

1654 i‡(
™
) {

1655 
i
 = 0; i < 
	`ARRAY_SIZE
(
™
->
key_idx
); i++) {

1656 i‡(
™
->
key_idx
[
i
] !
key
->
hw_key_idx
)

1658 
™
->
key_idx
[
i
] = 0;

1662 
key
->
hw_key_idx
 = 0;

1665 
ªt
 = -
EINVAL
;

1668 
	`©h9k_ps_ª°‹e
(
sc
);

1669 
	`muãx_u∆ock
(&
sc
->
muãx
);

1671  
ªt
;

1672 
	}
}

1674 
	$©h9k_£t_assoc_°©e
(
©h_so·c
 *
sc
,

1675 
õì80211_vif
 *
vif
)

1677 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

1678 
©h_vif
 *
avp
 = (*)
vif
->
drv_¥iv
;

1679 
õì80211_bss_c⁄f
 *
bss_c⁄f
 = &
vif
->bss_conf;

1680 
Êags
;

1682 
	`£t_bô
(
ATH_OP_PRIM_STA_VIF
, &
comm⁄
->
›_Êags
);

1683 
avp
->
¥im¨y_°a_vif
 = 
åue
;

1691 i‡(
sc
->
sc_ah
->
›mode
 !
NL80211_IFTYPE_STATION
)

1694 
	`mem˝y
(
comm⁄
->
curbssid
, 
bss_c⁄f
->
bssid
, 
ETH_ALEN
);

1695 
comm⁄
->
cuøid
 = 
bss_c⁄f
->
aid
;

1696 
	`©h9k_hw_wrôe_associd
(
sc
->
sc_ah
);

1698 
comm⁄
->
œ°_rssi
 = 
ATH_RSSI_DUMMY_MARKER
;

1699 
sc
->
sc_ah
->
°©s
.
avgbrssi
 = 
ATH_RSSI_DUMMY_MARKER
;

1701 
	`•ö_lock_úqßve
(&
sc
->
sc_pm_lock
, 
Êags
);

1702 
sc
->
ps_Êags
 |
PS_BEACON_SYNC
 | 
PS_WAIT_FOR_BEACON
;

1703 
	`•ö_u∆ock_úqª°‹e
(&
sc
->
sc_pm_lock
, 
Êags
);

1705 i‡(
	`©h9k_hw_mci_is_íabÀd
(
sc
->
sc_ah
))

1706 
	`©h9k_mci_upd©e_wœn_ch™√ls
(
sc
, 
Ál£
);

1708 
	`©h_dbg
(
comm⁄
, 
CONFIG
,

1710 
vif
->
addr
, 
comm⁄
->
curbssid
);

1711 
	}
}

1713 
	$©h9k_bss_assoc_ôî
(*
d©a
, 
u8
 *
mac
, 
õì80211_vif
 *
vif
)

1715 
©h_so·c
 *
sc
 = 
d©a
;

1716 
õì80211_bss_c⁄f
 *
bss_c⁄f
 = &
vif
->bss_conf;

1717 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

1719 i‡(
	`ã°_bô
(
ATH_OP_PRIM_STA_VIF
, &
comm⁄
->
›_Êags
))

1722 i‡(
bss_c⁄f
->
assoc
)

1723 
	`©h9k_£t_assoc_°©e
(
sc
, 
vif
);

1724 
	}
}

1726 
	$©h9k_p2p_ps_timî
(*
¥iv
)

1728 
©h_so·c
 *
sc
 = 
¥iv
;

1729 
©h_vif
 *
avp
 = 
sc
->
p2p_ps_vif
;

1730 
õì80211_vif
 *
vif
;

1731 
õì80211_°a
 *
°a
;

1732 
©h_node
 *
™
;

1733 
u32
 
tsf
;

1735 i‡(!
avp
)

1738 
tsf
 = 
	`©h9k_hw_gëtsf32
(
sc
->
sc_ah
);

1739 i‡(!
avp
->
nﬂ
.
ab£¡
)

1740 
tsf
 +
ATH_P2P_PS_STOP_TIME
;

1742 i‡(!
avp
->
nﬂ
.
has_√xt_tsf
 ||

1743 
avp
->
nﬂ
.
√xt_tsf
 - 
tsf
 > 
	`BIT
(31))

1744 
	`õì80211_upd©e_p2p_nﬂ
(&
avp
->
nﬂ
, 
tsf
);

1746 
	`©h9k_upd©e_p2p_ps_timî
(
sc
, 
avp
);

1748 
	`rcu_ªad_lock
();

1750 
vif
 = 
avp
->vif;

1751 
°a
 = 
	`õì80211_föd_°a
(
vif
, vif->
bss_c⁄f
.
bssid
);

1752 i‡(!
°a
)

1753 
out
;

1755 
™
 = (*Ë
°a
->
drv_¥iv
;

1756 i‡(
™
->
¶ìpög
 =!!
avp
->
nﬂ
.
ab£¡
)

1757 
out
;

1759 
™
->
¶ìpög
 = 
avp
->
nﬂ
.
ab£¡
;

1760 i‡(
™
->
¶ìpög
)

1761 
	`©h_tx_aggr_¶ìp
(
°a
, 
sc
, 
™
);

1763 
	`©h_tx_aggr_wakeup
(
sc
, 
™
);

1765 
out
:

1766 
	`rcu_ªad_u∆ock
();

1767 
	}
}

1769 
	$©h9k_upd©e_p2p_ps
(
©h_so·c
 *
sc
, 
õì80211_vif
 *
vif
)

1771 
©h_vif
 *
avp
 = (*)
vif
->
drv_¥iv
;

1772 
u32
 
tsf
;

1774 i‡(!
sc
->
p2p_ps_timî
)

1777 i‡(
vif
->
ty≥
 !
NL80211_IFTYPE_STATION
 || !vif->
p2p
)

1780 
sc
->
p2p_ps_vif
 = 
avp
;

1781 
tsf
 = 
	`©h9k_hw_gëtsf32
(
sc
->
sc_ah
);

1782 
	`õì80211_∑r£_p2p_nﬂ
(&
vif
->
bss_c⁄f
.
p2p_nﬂ_©å
, &
avp
->
nﬂ
, 
tsf
);

1783 
	`©h9k_upd©e_p2p_ps_timî
(
sc
, 
avp
);

1784 
	}
}

1786 
	$©h9k_bss_öfo_ch™ged
(
õì80211_hw
 *
hw
,

1787 
õì80211_vif
 *
vif
,

1788 
õì80211_bss_c⁄f
 *
bss_c⁄f
,

1789 
u32
 
ch™ged
)

1791 
	#CHECK_ANI
 \

1792 (
BSS_CHANGED_ASSOC
 | \

1793 
BSS_CHANGED_IBSS
 | \

1794 
BSS_CHANGED_BEACON_ENABLED
)

	)

1796 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

1797 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

1798 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1799 
©h_vif
 *
avp
 = (*)
vif
->
drv_¥iv
;

1800 
Êags
;

1801 
¶Ÿtime
;

1803 
	`©h9k_ps_wakeup
(
sc
);

1804 
	`muãx_lock
(&
sc
->
muãx
);

1806 i‡(
ch™ged
 & 
BSS_CHANGED_ASSOC
) {

1807 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "BSSID %pM Changed ASSOC %d\n",

1808 
bss_c⁄f
->
bssid
, bss_c⁄f->
assoc
);

1810 i‡(
avp
->
¥im¨y_°a_vif
 && !
bss_c⁄f
->
assoc
) {

1811 
	`˛ór_bô
(
ATH_OP_PRIM_STA_VIF
, &
comm⁄
->
›_Êags
);

1812 
avp
->
¥im¨y_°a_vif
 = 
Ál£
;

1814 i‡(
ah
->
›mode
 =
NL80211_IFTYPE_STATION
)

1815 
	`˛ór_bô
(
ATH_OP_BEACONS
, &
comm⁄
->
›_Êags
);

1818 
	`õì80211_ôî©e_a˘ive_öãrÁ˚s_©omic
(

1819 
sc
->
hw
, 
IEEE80211_IFACE_ITER_RESUME_ALL
,

1820 
©h9k_bss_assoc_ôî
, 
sc
);

1822 i‡(!
	`ã°_bô
(
ATH_OP_PRIM_STA_VIF
, &
comm⁄
->
›_Êags
) &&

1823 
ah
->
›mode
 =
NL80211_IFTYPE_STATION
) {

1824 
	`mem£t
(
comm⁄
->
curbssid
, 0, 
ETH_ALEN
);

1825 
comm⁄
->
cuøid
 = 0;

1826 
	`©h9k_hw_wrôe_associd
(
sc
->
sc_ah
);

1827 i‡(
	`©h9k_hw_mci_is_íabÀd
(
sc
->
sc_ah
))

1828 
	`©h9k_mci_upd©e_wœn_ch™√ls
(
sc
, 
åue
);

1832 i‡(
ch™ged
 & 
BSS_CHANGED_IBSS
) {

1833 
	`mem˝y
(
comm⁄
->
curbssid
, 
bss_c⁄f
->
bssid
, 
ETH_ALEN
);

1834 
comm⁄
->
cuøid
 = 
bss_c⁄f
->
aid
;

1835 
	`©h9k_hw_wrôe_associd
(
sc
->
sc_ah
);

1838 i‡((
ch™ged
 & 
BSS_CHANGED_BEACON_ENABLED
) ||

1839 (
ch™ged
 & 
BSS_CHANGED_BEACON_INT
))

1840 
	`©h9k_bóc⁄_c⁄fig
(
sc
, 
vif
, 
ch™ged
);

1842 i‡(
ch™ged
 & 
BSS_CHANGED_ERP_SLOT
) {

1843 i‡(
bss_c⁄f
->
u£_sh‹t_¶Ÿ
)

1844 
¶Ÿtime
 = 9;

1846 
¶Ÿtime
 = 20;

1847 i‡(
vif
->
ty≥
 =
NL80211_IFTYPE_AP
) {

1853 
sc
->
bóc⁄
.
¶Ÿtime
 = slottime;

1854 
sc
->
bóc⁄
.
upd©e¶Ÿ
 = 
UPDATE
;

1856 
ah
->
¶Ÿtime
 = slottime;

1857 
	`©h9k_hw_öô_globÆ_£âögs
(
ah
);

1861 i‡(
ch™ged
 & 
BSS_CHANGED_P2P_PS
) {

1862 
	`•ö_lock_bh
(&
sc
->
sc_pcu_lock
);

1863 
	`•ö_lock_úqßve
(&
sc
->
sc_pm_lock
, 
Êags
);

1864 i‡(!(
sc
->
ps_Êags
 & 
PS_BEACON_SYNC
))

1865 
	`©h9k_upd©e_p2p_ps
(
sc
, 
vif
);

1866 
	`•ö_u∆ock_úqª°‹e
(&
sc
->
sc_pm_lock
, 
Êags
);

1867 
	`•ö_u∆ock_bh
(&
sc
->
sc_pcu_lock
);

1870 i‡(
ch™ged
 & 
CHECK_ANI
)

1871 
	`©h_check_™i
(
sc
);

1873 
	`muãx_u∆ock
(&
sc
->
muãx
);

1874 
	`©h9k_ps_ª°‹e
(
sc
);

1876 #unde‡
CHECK_ANI


1877 
	}
}

1879 
u64
 
	$©h9k_gë_tsf
(
õì80211_hw
 *
hw
, 
õì80211_vif
 *
vif
)

1881 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

1882 
u64
 
tsf
;

1884 
	`muãx_lock
(&
sc
->
muãx
);

1885 
	`©h9k_ps_wakeup
(
sc
);

1886 
tsf
 = 
	`©h9k_hw_gëtsf64
(
sc
->
sc_ah
);

1887 
	`©h9k_ps_ª°‹e
(
sc
);

1888 
	`muãx_u∆ock
(&
sc
->
muãx
);

1890  
tsf
;

1891 
	}
}

1893 
	$©h9k_£t_tsf
(
õì80211_hw
 *
hw
,

1894 
õì80211_vif
 *
vif
,

1895 
u64
 
tsf
)

1897 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

1899 
	`muãx_lock
(&
sc
->
muãx
);

1900 
	`©h9k_ps_wakeup
(
sc
);

1901 
	`©h9k_hw_£âsf64
(
sc
->
sc_ah
, 
tsf
);

1902 
	`©h9k_ps_ª°‹e
(
sc
);

1903 
	`muãx_u∆ock
(&
sc
->
muãx
);

1904 
	}
}

1906 
	$©h9k_ª£t_tsf
(
õì80211_hw
 *
hw
, 
õì80211_vif
 *
vif
)

1908 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

1910 
	`muãx_lock
(&
sc
->
muãx
);

1912 
	`©h9k_ps_wakeup
(
sc
);

1913 
	`©h9k_hw_ª£t_tsf
(
sc
->
sc_ah
);

1914 
	`©h9k_ps_ª°‹e
(
sc
);

1916 
	`muãx_u∆ock
(&
sc
->
muãx
);

1917 
	}
}

1919 
	$©h9k_ampdu_a˘i⁄
(
õì80211_hw
 *
hw
,

1920 
õì80211_vif
 *
vif
,

1921 
õì80211_ampdu_mlme_a˘i⁄
 
a˘i⁄
,

1922 
õì80211_°a
 *
°a
,

1923 
u16
 
tid
, u16 *
s¢
, 
u8
 
buf_size
)

1925 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

1926 
boﬁ
 
Êush
 = 
Ál£
;

1927 
ªt
 = 0;

1929 
	`muãx_lock
(&
sc
->
muãx
);

1931 
a˘i⁄
) {

1932 
IEEE80211_AMPDU_RX_START
:

1934 
IEEE80211_AMPDU_RX_STOP
:

1936 
IEEE80211_AMPDU_TX_START
:

1937 
	`©h9k_ps_wakeup
(
sc
);

1938 
ªt
 = 
	`©h_tx_aggr_°¨t
(
sc
, 
°a
, 
tid
, 
s¢
);

1939 i‡(!
ªt
)

1940 
	`õì80211_°¨t_tx_ba_cb_úqß„
(
vif
, 
°a
->
addr
, 
tid
);

1941 
	`©h9k_ps_ª°‹e
(
sc
);

1943 
IEEE80211_AMPDU_TX_STOP_FLUSH
:

1944 
IEEE80211_AMPDU_TX_STOP_FLUSH_CONT
:

1945 
Êush
 = 
åue
;

1946 
IEEE80211_AMPDU_TX_STOP_CONT
:

1947 
	`©h9k_ps_wakeup
(
sc
);

1948 
	`©h_tx_aggr_°›
(
sc
, 
°a
, 
tid
);

1949 i‡(!
Êush
)

1950 
	`õì80211_°›_tx_ba_cb_úqß„
(
vif
, 
°a
->
addr
, 
tid
);

1951 
	`©h9k_ps_ª°‹e
(
sc
);

1953 
IEEE80211_AMPDU_TX_OPERATIONAL
:

1954 
	`©h9k_ps_wakeup
(
sc
);

1955 
	`©h_tx_aggr_ªsume
(
sc
, 
°a
, 
tid
);

1956 
	`©h9k_ps_ª°‹e
(
sc
);

1959 
	`©h_îr
(
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
), "Unknown AMPDUáction\n");

1962 
	`muãx_u∆ock
(&
sc
->
muãx
);

1964  
ªt
;

1965 
	}
}

1967 
	$©h9k_gë_survey
(
õì80211_hw
 *
hw
, 
idx
,

1968 
survey_öfo
 *
survey
)

1970 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

1971 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

1972 
õì80211_suµ‹ãd_b™d
 *
sb™d
;

1973 
õì80211_ch™√l
 *
ch™
;

1974 
pos
;

1976 i‡(
	`c⁄fig_íabÀd
(
CPTCFG_ATH9K_TX99
))

1977  -
EOPNOTSUPP
;

1979 
	`•ö_lock_bh
(&
comm⁄
->
cc_lock
);

1980 i‡(
idx
 == 0)

1981 
	`©h_upd©e_survey_°©s
(
sc
);

1983 
sb™d
 = 
hw
->
wùhy
->
b™ds
[
IEEE80211_BAND_2GHZ
];

1984 i‡(
sb™d
 && 
idx
 >sb™d->
n_ch™√ls
) {

1985 
idx
 -
sb™d
->
n_ch™√ls
;

1986 
sb™d
 = 
NULL
;

1989 i‡(!
sb™d
)

1990 
sb™d
 = 
hw
->
wùhy
->
b™ds
[
IEEE80211_BAND_5GHZ
];

1992 i‡(!
sb™d
 || 
idx
 >sb™d->
n_ch™√ls
) {

1993 
	`•ö_u∆ock_bh
(&
comm⁄
->
cc_lock
);

1994  -
ENOENT
;

1997 
ch™
 = &
sb™d
->
ch™√ls
[
idx
];

1998 
pos
 = 
ch™
->
hw_vÆue
;

1999 
	`mem˝y
(
survey
, &
sc
->survey[
pos
], (*survey));

2000 
survey
->
ch™√l
 = 
ch™
;

2001 
	`•ö_u∆ock_bh
(&
comm⁄
->
cc_lock
);

2004 
	}
}

2006 
	$©h9k_£t_covîage_˛ass
(
õì80211_hw
 *
hw
, 
u8
 
covîage_˛ass
)

2008 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

2009 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

2011 i‡(
	`c⁄fig_íabÀd
(
CPTCFG_ATH9K_TX99
))

2014 
	`muãx_lock
(&
sc
->
muãx
);

2015 
ah
->
covîage_˛ass
 = coverage_class;

2017 
	`©h9k_ps_wakeup
(
sc
);

2018 
	`©h9k_hw_öô_globÆ_£âögs
(
ah
);

2019 
	`©h9k_ps_ª°‹e
(
sc
);

2021 
	`muãx_u∆ock
(&
sc
->
muãx
);

2022 
	}
}

2024 
boﬁ
 
	$©h9k_has_tx_≥ndög
(
©h_so·c
 *
sc
)

2026 
i
, 
≈íd
 = 0;

2028 
i
 = 0; i < 
ATH9K_NUM_TX_QUEUES
; i++) {

2029 i‡(!
	`ATH_TXQ_SETUP
(
sc
, 
i
))

2032 i‡(!
sc
->
tx
.
txq
[
i
].
axq_dïth
)

2035 
≈íd
 = 
	`©h9k_has_≥ndög_‰ames
(
sc
, &sc->
tx
.
txq
[
i
]);

2036 i‡(
≈íd
)

2040  !!
≈íd
;

2041 
	}
}

2043 
	$©h9k_Êush
(
õì80211_hw
 *
hw
, 
õì80211_vif
 *
vif
,

2044 
u32
 
queues
, 
boﬁ
 
dr›
)

2046 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

2047 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

2048 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

2049 
timeout
 = 
HZ
 / 5;

2050 
boﬁ
 
døö_txq
;

2052 
	`muãx_lock
(&
sc
->
muãx
);

2053 
	`ˇn˚l_dñayed_w‹k_sync
(&
sc
->
tx_com∂ëe_w‹k
);

2055 i‡(
ah
->
ah_Êags
 & 
AH_UNPLUGGED
) {

2056 
	`©h_dbg
(
comm⁄
, 
ANY
, "Device has been unplugged!\n");

2057 
	`muãx_u∆ock
(&
sc
->
muãx
);

2061 i‡(
	`ã°_bô
(
ATH_OP_INVALID
, &
comm⁄
->
›_Êags
)) {

2062 
	`©h_dbg
(
comm⁄
, 
ANY
, "DeviceÇotÖresent\n");

2063 
	`muãx_u∆ock
(&
sc
->
muãx
);

2067 i‡(
	`waô_evít_timeout
(
sc
->
tx_waô
, !
	`©h9k_has_tx_≥ndög
(sc),

2068 
timeout
) > 0)

2069 
dr›
 = 
Ál£
;

2071 i‡(
dr›
) {

2072 
	`©h9k_ps_wakeup
(
sc
);

2073 
	`•ö_lock_bh
(&
sc
->
sc_pcu_lock
);

2074 
døö_txq
 = 
	`©h_døö_Æl_txq
(
sc
);

2075 
	`•ö_u∆ock_bh
(&
sc
->
sc_pcu_lock
);

2077 i‡(!
døö_txq
)

2078 
	`©h_ª£t
(
sc
);

2080 
	`©h9k_ps_ª°‹e
(
sc
);

2081 
	`õì80211_wake_queues
(
hw
);

2084 
	`õì80211_queue_dñayed_w‹k
(
hw
, &
sc
->
tx_com∂ëe_w‹k
, 0);

2085 
	`muãx_u∆ock
(&
sc
->
muãx
);

2086 
	}
}

2088 
boﬁ
 
	$©h9k_tx_‰ames_≥ndög
(
õì80211_hw
 *
hw
)

2090 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

2091 
i
;

2093 
i
 = 0; i < 
ATH9K_NUM_TX_QUEUES
; i++) {

2094 i‡(!
	`ATH_TXQ_SETUP
(
sc
, 
i
))

2097 i‡(
	`©h9k_has_≥ndög_‰ames
(
sc
, &sc->
tx
.
txq
[
i
]))

2098  
åue
;

2100  
Ál£
;

2101 
	}
}

2103 
	$©h9k_tx_œ°_bóc⁄
(
õì80211_hw
 *
hw
)

2105 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

2106 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

2107 
õì80211_vif
 *
vif
;

2108 
©h_vif
 *
avp
;

2109 
©h_buf
 *
bf
;

2110 
©h_tx_°©us
 
ts
;

2111 
boﬁ
 
edma
 = !!(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_EDMA
);

2112 
°©us
;

2114 
vif
 = 
sc
->
bóc⁄
.
b¶Ÿ
[0];

2115 i‡(!
vif
)

2118 i‡(!
vif
->
bss_c⁄f
.
íabÀ_bóc⁄
)

2121 
avp
 = (*)
vif
->
drv_¥iv
;

2123 i‡(!
sc
->
bóc⁄
.
tx_¥o˚s£d
 && !
edma
) {

2124 
	`èskÀt_dißbÀ
(&
sc
->
bc⁄_èskÀt
);

2126 
bf
 = 
avp
->
av_bcbuf
;

2127 i‡(!
bf
 || !bf->
bf_mpdu
)

2128 
skù
;

2130 
°©us
 = 
	`©h9k_hw_tx¥ocdesc
(
ah
, 
bf
->
bf_desc
, &
ts
);

2131 i‡(
°©us
 =-
EINPROGRESS
)

2132 
skù
;

2134 
sc
->
bóc⁄
.
tx_¥o˚s£d
 = 
åue
;

2135 
sc
->
bóc⁄
.
tx_œ°
 = !(
ts
.
ts_°©us
 & 
ATH9K_TXERR_MASK
);

2137 
skù
:

2138 
	`èskÀt_íabÀ
(&
sc
->
bc⁄_èskÀt
);

2141  
sc
->
bóc⁄
.
tx_œ°
;

2142 
	}
}

2144 
	$©h9k_gë_°©s
(
õì80211_hw
 *
hw
,

2145 
õì80211_low_Àvñ_°©s
 *
°©s
)

2147 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

2148 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

2149 
©h9k_mib_°©s
 *
mib_°©s
 = &
ah
->
ah_mibSèts
;

2151 
°©s
->
dŸ11ACKFaûuªCou¡
 = 
mib_°©s
->
ackrcv_bad
;

2152 
°©s
->
dŸ11RTSFaûuªCou¡
 = 
mib_°©s
->
πs_bad
;

2153 
°©s
->
dŸ11FCSEº‹Cou¡
 = 
mib_°©s
->
fcs_bad
;

2154 
°©s
->
dŸ11RTSSuc˚ssCou¡
 = 
mib_°©s
->
πs_good
;

2156 
	}
}

2158 
u32
 
	$fûl_chaömask
(
u32
 
ˇp
, u32 
√w
)

2160 
u32
 
fûÀd
 = 0;

2161 
i
;

2163 
i
 = 0; 
ˇp
 && 
√w
; i++, cap >>= 1) {

2164 i‡(!(
ˇp
 & 
	`BIT
(0)))

2167 i‡(
√w
 & 
	`BIT
(0))

2168 
fûÀd
 |
	`BIT
(
i
);

2170 
√w
 >>= 1;

2173  
fûÀd
;

2174 
	}
}

2176 
boﬁ
 
	$vÆid©e_™ã¬a_mask
(
©h_hw
 *
ah
, 
u32
 
vÆ
)

2178 i‡(
	`AR_SREV_9300_20_OR_LATER
(
ah
))

2179  
åue
;

2181 
vÆ
 & 0x7) {

2185  
åue
;

2187  (
ah
->
ˇps
.
rx_chaömask
 == 1);

2189  
Ál£
;

2191 
	}
}

2193 
	$©h9k_£t_™ã¬a
(
õì80211_hw
 *
hw
, 
u32
 
tx_™t
, u32 
rx_™t
)

2195 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

2196 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

2198 i‡(
ah
->
ˇps
.
rx_chaömask
 != 1)

2199 
rx_™t
 |
tx_™t
;

2201 i‡(!
	`vÆid©e_™ã¬a_mask
(
ah
, 
rx_™t
Ë|| !
tx_™t
)

2202  -
EINVAL
;

2204 
sc
->
™t_rx
 = 
rx_™t
;

2205 
sc
->
™t_tx
 = 
tx_™t
;

2207 i‡(
ah
->
ˇps
.
rx_chaömask
 == 1)

2211 i‡(
	`AR_SREV_9100
(
ah
))

2212 
ah
->
rxchaömask
 = 0x7;

2214 
ah
->
rxchaömask
 = 
	`fûl_chaömask
◊h->
ˇps
.
rx_chaömask
, 
rx_™t
);

2216 
ah
->
txchaömask
 = 
	`fûl_chaömask
◊h->
ˇps
.
tx_chaömask
, 
tx_™t
);

2217 
	`©h9k_cmn_ªlﬂd_chaömask
(
ah
);

2220 
	}
}

2222 
	$©h9k_gë_™ã¬a
(
õì80211_hw
 *
hw
, 
u32
 *
tx_™t
, u32 *
rx_™t
)

2224 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

2226 *
tx_™t
 = 
sc
->
™t_tx
;

2227 *
rx_™t
 = 
sc
->
™t_rx
;

2229 
	}
}

2231 
	$©h9k_sw_sˇn_°¨t
(
õì80211_hw
 *
hw
)

2233 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

2234 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

2235 
	`£t_bô
(
ATH_OP_SCANNING
, &
comm⁄
->
›_Êags
);

2236 
	}
}

2238 
	$©h9k_sw_sˇn_com∂ëe
(
õì80211_hw
 *
hw
)

2240 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

2241 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

2242 
	`˛ór_bô
(
ATH_OP_SCANNING
, &
comm⁄
->
›_Êags
);

2243 
	}
}

2245 
õì80211_›s
 
	g©h9k_›s
 = {

2246 .
tx
 = 
©h9k_tx
,

2247 .
	g°¨t
 = 
©h9k_°¨t
,

2248 .
	g°›
 = 
©h9k_°›
,

2249 .
	gadd_öãrÁ˚
 = 
©h9k_add_öãrÁ˚
,

2250 .
	gch™ge_öãrÁ˚
 = 
©h9k_ch™ge_öãrÁ˚
,

2251 .
	gªmove_öãrÁ˚
 = 
©h9k_ªmove_öãrÁ˚
,

2252 .
	gc⁄fig
 = 
©h9k_c⁄fig
,

2253 .
	gc⁄figuª_fûãr
 = 
©h9k_c⁄figuª_fûãr
,

2254 .
	g°a_add
 = 
©h9k_°a_add
,

2255 .
	g°a_ªmove
 = 
©h9k_°a_ªmove
,

2256 .
	g°a_nŸify
 = 
©h9k_°a_nŸify
,

2257 .
	gc⁄f_tx
 = 
©h9k_c⁄f_tx
,

2258 .
	gbss_öfo_ch™ged
 = 
©h9k_bss_öfo_ch™ged
,

2259 .
	g£t_key
 = 
©h9k_£t_key
,

2260 .
	ggë_tsf
 = 
©h9k_gë_tsf
,

2261 .
	g£t_tsf
 = 
©h9k_£t_tsf
,

2262 .
	gª£t_tsf
 = 
©h9k_ª£t_tsf
,

2263 .
	gampdu_a˘i⁄
 = 
©h9k_ampdu_a˘i⁄
,

2264 .
	ggë_survey
 = 
©h9k_gë_survey
,

2265 .
	grfkûl_pﬁl
 = 
©h9k_rfkûl_pﬁl_°©e
,

2266 .
	g£t_covîage_˛ass
 = 
©h9k_£t_covîage_˛ass
,

2267 .
	gÊush
 = 
©h9k_Êush
,

2268 .
	gtx_‰ames_≥ndög
 = 
©h9k_tx_‰ames_≥ndög
,

2269 .
	gtx_œ°_bóc⁄
 = 
©h9k_tx_œ°_bóc⁄
,

2270 .
	gªÀa£_buf„ªd_‰ames
 = 
©h9k_ªÀa£_buf„ªd_‰ames
,

2271 .
	ggë_°©s
 = 
©h9k_gë_°©s
,

2272 .
	g£t_™ã¬a
 = 
©h9k_£t_™ã¬a
,

2273 .
	ggë_™ã¬a
 = 
©h9k_gë_™ã¬a
,

2275 #ifde‡
CPTCFG_ATH9K_WOW


2276 .
	gsu•íd
 = 
©h9k_su•íd
,

2277 .
	gªsume
 = 
©h9k_ªsume
,

2278 .
	g£t_wakeup
 = 
©h9k_£t_wakeup
,

2281 #ifde‡
CPTCFG_ATH9K_DEBUGFS


2282 .
	ggë_ë_s£t_cou¡
 = 
©h9k_gë_ë_s£t_cou¡
,

2283 .
	ggë_ë_°©s
 = 
©h9k_gë_ë_°©s
,

2284 .
	ggë_ë_°rögs
 = 
©h9k_gë_ë_°rögs
,

2287 #i‡
deföed
(
CPTCFG_MAC80211_DEBUGFS
Ë&& deföed(
CPTCFG_ATH9K_STATION_STATISTICS
)

2288 .
	g°a_add_debugfs
 = 
©h9k_°a_add_debugfs
,

2290 .
	gsw_sˇn_°¨t
 = 
©h9k_sw_sˇn_°¨t
,

2291 .
	gsw_sˇn_com∂ëe
 = 
©h9k_sw_sˇn_com∂ëe
,

	@mci.c

17 
	~<löux/dma-m≠pög.h
>

18 
	~<löux/¶ab.h
>

20 
	~"©h9k.h
"

21 
	~"mci.h
"

23 c⁄° 
u8
 
	g©h_mci_duty_cy˛e
[] = { 55, 50, 60, 70, 80, 85, 90, 95, 98 };

25 
©h_mci_¥ofûe_öfo
*

26 
	$©h_mci_föd_¥ofûe
(
©h_mci_¥ofûe
 *
mci
,

27 
©h_mci_¥ofûe_öfo
 *
öfo
)

29 
©h_mci_¥ofûe_öfo
 *
íåy
;

31 i‡(
	`li°_em±y
(&
mci
->
öfo
))

32  
NULL
;

34 
	`li°_f‹_óch_íåy
(
íåy
, &
mci
->
öfo
, 
li°
) {

35 i‡(
íåy
->
c⁄n_h™dÀ
 =
öfo
->conn_handle)

36  
íåy
;

38  
NULL
;

39 
	}
}

41 
boﬁ
 
	$©h_mci_add_¥ofûe
(
©h_comm⁄
 *
comm⁄
,

42 
©h_mci_¥ofûe
 *
mci
,

43 
©h_mci_¥ofûe_öfo
 *
öfo
)

45 
©h_mci_¥ofûe_öfo
 *
íåy
;

46 
u8
 
voi˚_¥i‹ôy
[] = { 110, 110, 110, 112, 110, 110, 114, 116, 118 };

48 i‡((
mci
->
num_sco
 =
ATH_MCI_MAX_SCO_PROFILE
) &&

49 (
öfo
->
ty≥
 =
MCI_GPM_COEX_PROFILE_VOICE
))

50  
Ál£
;

52 i‡(((
	`NUM_PROF
(
mci
Ë- mci->
num_sco
Ë=
ATH_MCI_MAX_ACL_PROFILE
) &&

53 (
öfo
->
ty≥
 !
MCI_GPM_COEX_PROFILE_VOICE
))

54  
Ál£
;

56 
íåy
 = 
	`kzÆloc
((*íåy), 
GFP_ATOMIC
);

57 i‡(!
íåy
)

58  
Ál£
;

60 
	`mem˝y
(
íåy
, 
öfo
, 10);

61 
	`INC_PROF
(
mci
, 
öfo
);

62 
	`li°_add_èû
(&
íåy
->
li°
, &
mci
->
öfo
);

63 i‡(
öfo
->
ty≥
 =
MCI_GPM_COEX_PROFILE_VOICE
) {

64 i‡(
öfo
->
voi˚_ty≥
 < (
voi˚_¥i‹ôy
))

65 
mci
->
voi˚_¥i‹ôy
 = voi˚_¥i‹ôy[
öfo
->
voi˚_ty≥
];

67 
mci
->
voi˚_¥i‹ôy
 = 110;

70  
åue
;

71 
	}
}

73 
	$©h_mci_dñ_¥ofûe
(
©h_comm⁄
 *
comm⁄
,

74 
©h_mci_¥ofûe
 *
mci
,

75 
©h_mci_¥ofûe_öfo
 *
íåy
)

77 i‡(!
íåy
)

80 
	`DEC_PROF
(
mci
, 
íåy
);

81 
	`li°_dñ
(&
íåy
->
li°
);

82 
	`k‰ì
(
íåy
);

83 
	}
}

85 
	$©h_mci_Êush_¥ofûe
(
©h_mci_¥ofûe
 *
mci
)

87 
©h_mci_¥ofûe_öfo
 *
öfo
, *
töfo
;

89 
mci
->
aggr_limô
 = 0;

90 
mci
->
num_mgmt
 = 0;

92 i‡(
	`li°_em±y
(&
mci
->
öfo
))

95 
	`li°_f‹_óch_íåy_ß„
(
öfo
, 
töfo
, &
mci
->öfo, 
li°
) {

96 
	`li°_dñ
(&
öfo
->
li°
);

97 
	`DEC_PROF
(
mci
, 
öfo
);

98 
	`k‰ì
(
öfo
);

100 
	}
}

102 
	$©h_mci_adju°_aggr_limô
(
©h_btc€x
 *
btc€x
)

104 
©h_mci_¥ofûe
 *
mci
 = &
btc€x
->mci;

105 
u32
 
wœn_aútime
 = 
btc€x
->
btc€x_≥riod
 *

106 (100 - 
btc€x
->
duty_cy˛e
) / 100;

114 i‡((
wœn_aútime
 <= 4) &&

115 (!
mci
->
aggr_limô
 || (mci->aggr_limô > (2 * 
wœn_aútime
))))

116 
mci
->
aggr_limô
 = 2 * 
wœn_aútime
;

117 
	}
}

119 
	$©h_mci_upd©e_scheme
(
©h_so·c
 *
sc
)

121 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

122 
©h_btc€x
 *
btc€x
 = &
sc
->btcoex;

123 
©h_mci_¥ofûe
 *
mci
 = &
btc€x
->mci;

124 
©h9k_hw_mci
 *
mci_hw
 = &
sc
->
sc_ah
->
btc€x_hw
.
mci
;

125 
©h_mci_¥ofûe_öfo
 *
öfo
;

126 
u32
 
num_¥ofûe
 = 
	`NUM_PROF
(
mci
);

128 i‡(
mci_hw
->
c⁄fig
 & 
ATH_MCI_CONFIG_DISABLE_TUNING
)

129 
skù_tunög
;

131 
mci
->
aggr_limô
 = 0;

132 
btc€x
->
duty_cy˛e
 = 
©h_mci_duty_cy˛e
[
num_¥ofûe
];

133 
btc€x
->
btc€x_≥riod
 = 
ATH_MCI_DEF_BT_PERIOD
;

134 i‡(
	`NUM_PROF
(
mci
))

135 
btc€x
->
bt_°omp_ty≥
 = 
ATH_BTCOEX_STOMP_LOW
;

137 
btc€x
->
bt_°omp_ty≥
 = 
mci
->
num_mgmt
 ? 
ATH_BTCOEX_STOMP_ALL
 :

138 
ATH_BTCOEX_STOMP_LOW
;

140 i‡(
num_¥ofûe
 == 1) {

141 
öfo
 = 
	`li°_fú°_íåy
(&
mci
->info,

142 
©h_mci_¥ofûe_öfo
,

143 
li°
);

144 i‡(
mci
->
num_sco
) {

145 i‡(
öfo
->
T
 == 12)

146 
mci
->
aggr_limô
 = 8;

147 i‡(
öfo
->
T
 == 6) {

148 
mci
->
aggr_limô
 = 6;

149 
btc€x
->
duty_cy˛e
 = 30;

151 
mci
->
aggr_limô
 = 6;

152 
	`©h_dbg
(
comm⁄
, 
MCI
,

154 
mci
->
aggr_limô
);

155 } i‡(
mci
->
num_∑n
 || mci->
num_Ÿhî_a˛
) {

160 
btc€x
->
duty_cy˛e
 = 
	`AR_SREV_9565
(
sc
->
sc_ah
) ? 40 : 35;

161 
btc€x
->
btc€x_≥riod
 = 53;

162 
	`©h_dbg
(
comm⁄
, 
MCI
,

164 
btc€x
->
duty_cy˛e
, btc€x->
btc€x_≥riod
);

165 } i‡(
mci
->
num_hid
) {

166 
btc€x
->
duty_cy˛e
 = 30;

167 
mci
->
aggr_limô
 = 6;

168 
	`©h_dbg
(
comm⁄
, 
MCI
,

172 } i‡(
num_¥ofûe
 == 2) {

173 i‡(
mci
->
num_hid
 == 2)

174 
btc€x
->
duty_cy˛e
 = 30;

175 
mci
->
aggr_limô
 = 6;

176 
	`©h_dbg
(
comm⁄
, 
MCI
,

178 
btc€x
->
duty_cy˛e
);

179 } i‡(
num_¥ofûe
 >= 3) {

180 
mci
->
aggr_limô
 = 4;

181 
	`©h_dbg
(
comm⁄
, 
MCI
,

185 
skù_tunög
:

186 i‡(
	`IS_CHAN_2GHZ
(
sc
->
sc_ah
->
curch™
)) {

187 i‡(
	`IS_CHAN_HT
(
sc
->
sc_ah
->
curch™
))

188 
	`©h_mci_adju°_aggr_limô
(
btc€x
);

190 
btc€x
->
btc€x_≥riod
 >>= 1;

193 
	`©h9k_btc€x_timî_∑u£
(
sc
);

194 
	`©h9k_hw_btc€x_dißbÀ
(
sc
->
sc_ah
);

196 i‡(
	`IS_CHAN_5GHZ
(
sc
->
sc_ah
->
curch™
))

199 
btc€x
->
duty_cy˛e
 +(
mci
->
num_bdr
 ? 
ATH_MCI_BDR_DUTY_CYCLE
 : 0);

200 i‡(
btc€x
->
duty_cy˛e
 > 
ATH_MCI_MAX_DUTY_CYCLE
)

201 
btc€x
->
duty_cy˛e
 = 
ATH_MCI_MAX_DUTY_CYCLE
;

203 
btc€x
->
btc€x_no_°omp
 = btc€x->
btc€x_≥riod
 *

204 (100 - 
btc€x
->
duty_cy˛e
) / 100;

206 
	`©h9k_hw_btc€x_íabÀ
(
sc
->
sc_ah
);

207 
	`©h9k_btc€x_timî_ªsume
(
sc
);

208 
	}
}

210 
	$©h_mci_ˇl_msg
(
©h_so·c
 *
sc
, 
u8
 
›code
, u8 *
rx_∑ylﬂd
)

212 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

213 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

214 
©h9k_hw_mci
 *
mci_hw
 = &
ah
->
btc€x_hw
.
mci
;

215 
u32
 
∑ylﬂd
[4] = {0, 0, 0, 0};

217 
›code
) {

218 
MCI_GPM_BT_CAL_REQ
:

219 i‡(
mci_hw
->
bt_°©e
 =
MCI_BT_AWAKE
) {

220 
mci_hw
->
bt_°©e
 = 
MCI_BT_CAL_START
;

221 
	`©h9k_queue_ª£t
(
sc
, 
RESET_TYPE_MCI
);

223 
	`©h_dbg
(
comm⁄
, 
MCI
, "MCI Sèã : %d\n", 
mci_hw
->
bt_°©e
);

225 
MCI_GPM_BT_CAL_GRANT
:

226 
	`MCI_GPM_SET_CAL_TYPE
(
∑ylﬂd
, 
MCI_GPM_WLAN_CAL_DONE
);

227 
	`¨9003_mci_£nd_mesßge
(
sc
->
sc_ah
, 
MCI_GPM
, 0, 
∑ylﬂd
,

228 16, 
Ál£
, 
åue
);

231 
	`©h_dbg
(
comm⁄
, 
MCI
, "Unknown GPM CAL message\n");

234 
	}
}

236 
	$©h9k_mci_w‹k
(
w‹k_°ru˘
 *
w‹k
)

238 
©h_so·c
 *
sc
 = 
	`c⁄èöî_of
(
w‹k
, ©h_so·c, 
mci_w‹k
);

240 
	`©h_mci_upd©e_scheme
(
sc
);

241 
	}
}

243 
	$©h_mci_upd©e_°omp_tx¥io
(
u8
 
cur_tx¥io
, u8 *
°omp_¥io
)

245 i‡(
cur_tx¥io
 < 
°omp_¥io
[
ATH_BTCOEX_STOMP_NONE
])

246 
°omp_¥io
[
ATH_BTCOEX_STOMP_NONE
] = 
cur_tx¥io
;

248 i‡(
cur_tx¥io
 > 
°omp_¥io
[
ATH_BTCOEX_STOMP_ALL
])

249 
°omp_¥io
[
ATH_BTCOEX_STOMP_ALL
] = 
cur_tx¥io
;

251 i‡((
cur_tx¥io
 > 
ATH_MCI_HI_PRIO
) &&

252 (
cur_tx¥io
 < 
°omp_¥io
[
ATH_BTCOEX_STOMP_LOW
]))

253 
°omp_¥io
[
ATH_BTCOEX_STOMP_LOW
] = 
cur_tx¥io
;

254 
	}
}

256 
	$©h_mci_£t_c⁄cur_tx¥io
(
©h_so·c
 *
sc
)

258 
©h_btc€x
 *
btc€x
 = &
sc
->btcoex;

259 
©h_mci_¥ofûe
 *
mci
 = &
btc€x
->mci;

260 
u8
 
°omp_tx¥io
[
ATH_BTCOEX_STOMP_MAX
];

262 
	`mem£t
(
°omp_tx¥io
, 0, (stomp_txprio));

263 i‡(
mci
->
num_mgmt
) {

264 
°omp_tx¥io
[
ATH_BTCOEX_STOMP_ALL
] = 
ATH_MCI_INQUIRY_PRIO
;

265 i‡(!
mci
->
num_∑n
 && !mci->
num_Ÿhî_a˛
)

266 
°omp_tx¥io
[
ATH_BTCOEX_STOMP_NONE
] =

267 
ATH_MCI_INQUIRY_PRIO
;

269 
u8
 
¥of_¥io
[] = { 50, 90, 94, 52 };

271 
°omp_tx¥io
[
ATH_BTCOEX_STOMP_LOW
] =

272 
°omp_tx¥io
[
ATH_BTCOEX_STOMP_NONE
] = 0xff;

274 i‡(
mci
->
num_sco
)

275 
	`©h_mci_upd©e_°omp_tx¥io
(
mci
->
voi˚_¥i‹ôy
,

276 
°omp_tx¥io
);

277 i‡(
mci
->
num_Ÿhî_a˛
)

278 
	`©h_mci_upd©e_°omp_tx¥io
(
¥of_¥io
[0], 
°omp_tx¥io
);

279 i‡(
mci
->
num_a2dp
)

280 
	`©h_mci_upd©e_°omp_tx¥io
(
¥of_¥io
[1], 
°omp_tx¥io
);

281 i‡(
mci
->
num_hid
)

282 
	`©h_mci_upd©e_°omp_tx¥io
(
¥of_¥io
[2], 
°omp_tx¥io
);

283 i‡(
mci
->
num_∑n
)

284 
	`©h_mci_upd©e_°omp_tx¥io
(
¥of_¥io
[3], 
°omp_tx¥io
);

286 i‡(
°omp_tx¥io
[
ATH_BTCOEX_STOMP_NONE
] == 0xff)

287 
°omp_tx¥io
[
ATH_BTCOEX_STOMP_NONE
] = 0;

289 i‡(
°omp_tx¥io
[
ATH_BTCOEX_STOMP_LOW
] == 0xff)

290 
°omp_tx¥io
[
ATH_BTCOEX_STOMP_LOW
] = 0;

292 
	`©h9k_hw_btc€x_£t_c⁄cur_tx¥io
(
sc
->
sc_ah
, 
°omp_tx¥io
);

293 
	}
}

295 
u8
 
	$©h_mci_¥o˚ss_¥ofûe
(
©h_so·c
 *
sc
,

296 
©h_mci_¥ofûe_öfo
 *
öfo
)

298 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

299 
©h_btc€x
 *
btc€x
 = &
sc
->btcoex;

300 
©h_mci_¥ofûe
 *
mci
 = &
btc€x
->mci;

301 
©h_mci_¥ofûe_öfo
 *
íåy
 = 
NULL
;

303 
íåy
 = 
	`©h_mci_föd_¥ofûe
(
mci
, 
öfo
);

304 i‡(
íåy
) {

313 i‡(
íåy
->
ty≥
 !
öfo
->type) {

314 
	`DEC_PROF
(
mci
, 
íåy
);

315 
	`INC_PROF
(
mci
, 
öfo
);

317 
	`mem˝y
(
íåy
, 
öfo
, 10);

320 i‡(
öfo
->
°¨t
) {

321 i‡(!
íåy
 && !
	`©h_mci_add_¥ofûe
(
comm⁄
, 
mci
, 
öfo
))

324 
	`©h_mci_dñ_¥ofûe
(
comm⁄
, 
mci
, 
íåy
);

326 
	`©h_mci_£t_c⁄cur_tx¥io
(
sc
);

328 
	}
}

330 
u8
 
	$©h_mci_¥o˚ss_°©us
(
©h_so·c
 *
sc
,

331 
©h_mci_¥ofûe_°©us
 *
°©us
)

333 
©h_btc€x
 *
btc€x
 = &
sc
->btcoex;

334 
©h_mci_¥ofûe
 *
mci
 = &
btc€x
->mci;

335 
©h_mci_¥ofûe_öfo
 
öfo
;

336 
i
 = 0, 
ﬁd_num_mgmt
 = 
mci
->
num_mgmt
;

339 i‡(
°©us
->
is_lök
)

342 
öfo
.
c⁄n_h™dÀ
 = 
°©us
->conn_handle;

343 i‡(
	`©h_mci_föd_¥ofûe
(
mci
, &
öfo
))

346 i‡(
°©us
->
c⁄n_h™dÀ
 >
ATH_MCI_MAX_PROFILE
)

349 i‡(
°©us
->
is_¸ôiˇl
)

350 
	`__£t_bô
(
°©us
->
c⁄n_h™dÀ
, 
mci
->status);

352 
	`__˛ór_bô
(
°©us
->
c⁄n_h™dÀ
, 
mci
->status);

354 
mci
->
num_mgmt
 = 0;

356 i‡(
	`ã°_bô
(
i
, 
mci
->
°©us
))

357 
mci
->
num_mgmt
++;

358 } ++
i
 < 
ATH_MCI_MAX_PROFILE
);

360 
	`©h_mci_£t_c⁄cur_tx¥io
(
sc
);

361 i‡(
ﬁd_num_mgmt
 !
mci
->
num_mgmt
)

365 
	}
}

367 
	$©h_mci_msg
(
©h_so·c
 *
sc
, 
u8
 
›code
, u8 *
rx_∑ylﬂd
)

369 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

370 
©h_mci_¥ofûe_öfo
 
¥ofûe_öfo
;

371 
©h_mci_¥ofûe_°©us
 
¥ofûe_°©us
;

372 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

373 
u8
 
maj‹
, 
mö‹
, 
upd©e_scheme
 = 0;

374 
u32
 
£q_num
;

376 i‡(
	`¨9003_mci_°©e
(
ah
, 
MCI_STATE_NEED_FLUSH_BT_INFO
) &&

377 
	`¨9003_mci_°©e
(
ah
, 
MCI_STATE_ENABLE
)) {

378 
	`©h_dbg
(
comm⁄
, 
MCI
, "(MCI) NeedÅo flush BTÖrofiles\n");

379 
	`©h_mci_Êush_¥ofûe
(&
sc
->
btc€x
.
mci
);

380 
	`¨9003_mci_°©e
(
ah
, 
MCI_STATE_SEND_STATUS_QUERY
);

383 
›code
) {

384 
MCI_GPM_COEX_VERSION_QUERY
:

385 
	`¨9003_mci_°©e
(
ah
, 
MCI_STATE_SEND_WLAN_COEX_VERSION
);

387 
MCI_GPM_COEX_VERSION_RESPONSE
:

388 
maj‹
 = *(
rx_∑ylﬂd
 + 
MCI_GPM_COEX_B_MAJOR_VERSION
);

389 
mö‹
 = *(
rx_∑ylﬂd
 + 
MCI_GPM_COEX_B_MINOR_VERSION
);

390 
	`¨9003_mci_£t_bt_vîsi⁄
(
ah
, 
maj‹
, 
mö‹
);

392 
MCI_GPM_COEX_STATUS_QUERY
:

393 
	`¨9003_mci_£nd_wœn_ch™√ls
(
ah
);

395 
MCI_GPM_COEX_BT_PROFILE_INFO
:

396 
	`mem˝y
(&
¥ofûe_öfo
,

397 (
rx_∑ylﬂd
 + 
MCI_GPM_COEX_B_PROFILE_TYPE
), 10);

399 i‡((
¥ofûe_öfo
.
ty≥
 =
MCI_GPM_COEX_PROFILE_UNKNOWN
) ||

400 (
¥ofûe_öfo
.
ty≥
 >
MCI_GPM_COEX_PROFILE_MAX
)) {

401 
	`©h_dbg
(
comm⁄
, 
MCI
,

403 
¥ofûe_öfo
.
ty≥
,

404 
¥ofûe_öfo
.
°¨t
);

408 
upd©e_scheme
 +
	`©h_mci_¥o˚ss_¥ofûe
(
sc
, &
¥ofûe_öfo
);

410 
MCI_GPM_COEX_BT_STATUS_UPDATE
:

411 
¥ofûe_°©us
.
is_lök
 = *(
rx_∑ylﬂd
 +

412 
MCI_GPM_COEX_B_STATUS_TYPE
);

413 
¥ofûe_°©us
.
c⁄n_h™dÀ
 = *(
rx_∑ylﬂd
 +

414 
MCI_GPM_COEX_B_STATUS_LINKID
);

415 
¥ofûe_°©us
.
is_¸ôiˇl
 = *(
rx_∑ylﬂd
 +

416 
MCI_GPM_COEX_B_STATUS_STATE
);

418 
£q_num
 = *((
u32
 *)(
rx_∑ylﬂd
 + 12));

419 
	`©h_dbg
(
comm⁄
, 
MCI
,

421 
¥ofûe_°©us
.
is_lök
,Örofûe_°©us.
c⁄n_h™dÀ
,

422 
¥ofûe_°©us
.
is_¸ôiˇl
, 
£q_num
);

424 
upd©e_scheme
 +
	`©h_mci_¥o˚ss_°©us
(
sc
, &
¥ofûe_°©us
);

427 
	`©h_dbg
(
comm⁄
, 
MCI
, "Unknow¿GPM COEX mesßgê0x%02x\n", 
›code
);

430 i‡(
upd©e_scheme
)

431 
	`õì80211_queue_w‹k
(
sc
->
hw
, &sc->
mci_w‹k
);

432 
	}
}

434 
	$©h_mci_£tup
(
©h_so·c
 *
sc
)

436 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

437 
©h_mci_c€x
 *
mci
 = &
sc
->
mci_c€x
;

438 
©h_mci_buf
 *
buf
 = &
mci
->
sched_buf
;

439 
ªt
;

441 
buf
->
bf_addr
 = 
	`dmam_Æloc_cohîít
(
sc
->
dev
,

442 
ATH_MCI_SCHED_BUF_SIZE
 + 
ATH_MCI_GPM_BUF_SIZE
,

443 &
buf
->
bf_∑ddr
, 
GFP_KERNEL
);

445 i‡(
buf
->
bf_addr
 =
NULL
) {

446 
	`©h_dbg
(
comm⁄
, 
FATAL
, "MCI bufferálloc failed\n");

447  -
ENOMEM
;

450 
	`mem£t
(
buf
->
bf_addr
, 
MCI_GPM_RSVD_PATTERN
,

451 
ATH_MCI_SCHED_BUF_SIZE
 + 
ATH_MCI_GPM_BUF_SIZE
);

453 
mci
->
sched_buf
.
bf_Àn
 = 
ATH_MCI_SCHED_BUF_SIZE
;

455 
mci
->
gpm_buf
.
bf_Àn
 = 
ATH_MCI_GPM_BUF_SIZE
;

456 
mci
->
gpm_buf
.
bf_addr
 = (
u8
 *)mci->
sched_buf
.bf_add∏+ mci->sched_buf.
bf_Àn
;

457 
mci
->
gpm_buf
.
bf_∑ddr
 = mci->
sched_buf
.bf_∑dd∏+ mci->sched_buf.
bf_Àn
;

459 
ªt
 = 
	`¨9003_mci_£tup
(
sc
->
sc_ah
, 
mci
->
gpm_buf
.
bf_∑ddr
,

460 
mci
->
gpm_buf
.
bf_addr
, (mci->gpm_buf.
bf_Àn
 >> 4),

461 
mci
->
sched_buf
.
bf_∑ddr
);

462 i‡(
ªt
) {

463 
	`©h_îr
(
comm⁄
, "FailedÅo initialize MCI\n");

464  
ªt
;

467 
	`INIT_WORK
(&
sc
->
mci_w‹k
, 
©h9k_mci_w‹k
);

468 
	`©h_dbg
(
comm⁄
, 
MCI
, "MCI Initialized\n");

471 
	}
}

473 
	$©h_mci_˛ónup
(
©h_so·c
 *
sc
)

475 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

476 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

478 
	`¨9003_mci_˛ónup
(
ah
);

480 
	`©h_dbg
(
comm⁄
, 
MCI
, "MCI De-Initialized\n");

481 
	}
}

483 
	$©h_mci_öå
(
©h_so·c
 *
sc
)

485 
©h_mci_c€x
 *
mci
 = &
sc
->
mci_c€x
;

486 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

487 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

488 
©h9k_hw_mci
 *
mci_hw
 = &
ah
->
btc€x_hw
.
mci
;

489 
u32
 
mci_öt
, 
mci_öt_rxmsg
;

490 
u32
 
off£t
, 
subty≥
, 
›code
;

491 
u32
 *
pgpm
;

492 
u32
 
m‹e_d©a
 = 
MCI_GPM_MORE
;

493 
boﬁ
 
skù_gpm
 = 
Ál£
;

495 
	`¨9003_mci_gë_öãºu±
(
sc
->
sc_ah
, &
mci_öt
, &
mci_öt_rxmsg
);

497 i‡(
	`¨9003_mci_°©e
(
ah
, 
MCI_STATE_ENABLE
) == 0) {

498 
	`¨9003_mci_gë_√xt_gpm_off£t
(
ah
, 
åue
, 
NULL
);

502 i‡(
mci_öt_rxmsg
 & 
AR_MCI_INTERRUPT_RX_MSG_REQ_WAKE
) {

503 
u32
 
∑ylﬂd
[4] = { 0xffffffff, 0xffffffff,

511 
	`¨9003_mci_£nd_mesßge
(
ah
, 
MCI_REMOTE_RESET
, 0,

512 
∑ylﬂd
, 16, 
åue
, 
Ál£
);

513 
	`¨9003_mci_£nd_mesßge
(
ah
, 
MCI_SYS_WAKING
, 0,

514 
NULL
, 0, 
åue
, 
Ál£
);

516 
mci_öt_rxmsg
 &~
AR_MCI_INTERRUPT_RX_MSG_REQ_WAKE
;

517 
	`¨9003_mci_°©e
(
ah
, 
MCI_STATE_RESET_REQ_WAKE
);

522 
	`¨9003_mci_°©e
(
ah
, 
MCI_STATE_SET_BT_AWAKE
);

525 i‡(
mci_öt_rxmsg
 & 
AR_MCI_INTERRUPT_RX_MSG_SYS_WAKING
) {

526 
mci_öt_rxmsg
 &~
AR_MCI_INTERRUPT_RX_MSG_SYS_WAKING
;

528 i‡((
mci_hw
->
bt_°©e
 =
MCI_BT_SLEEP
) &&

529 (
	`¨9003_mci_°©e
(
ah
, 
MCI_STATE_REMOTE_SLEEP
) !=

530 
MCI_BT_SLEEP
))

531 
	`¨9003_mci_°©e
(
ah
, 
MCI_STATE_SET_BT_AWAKE
);

534 i‡(
mci_öt_rxmsg
 & 
AR_MCI_INTERRUPT_RX_MSG_SYS_SLEEPING
) {

535 
mci_öt_rxmsg
 &~
AR_MCI_INTERRUPT_RX_MSG_SYS_SLEEPING
;

537 i‡((
mci_hw
->
bt_°©e
 =
MCI_BT_AWAKE
) &&

538 (
	`¨9003_mci_°©e
(
ah
, 
MCI_STATE_REMOTE_SLEEP
) !=

539 
MCI_BT_AWAKE
))

540 
mci_hw
->
bt_°©e
 = 
MCI_BT_SLEEP
;

543 i‡((
mci_öt
 & 
AR_MCI_INTERRUPT_RX_INVALID_HDR
) ||

544 (
mci_öt
 & 
AR_MCI_INTERRUPT_CONT_INFO_TIMEOUT
)) {

545 
	`¨9003_mci_°©e
(
ah
, 
MCI_STATE_RECOVER_RX
);

546 
skù_gpm
 = 
åue
;

549 i‡(
mci_öt_rxmsg
 & 
AR_MCI_INTERRUPT_RX_MSG_SCHD_INFO
) {

550 
mci_öt_rxmsg
 &~
AR_MCI_INTERRUPT_RX_MSG_SCHD_INFO
;

551 
off£t
 = 
	`¨9003_mci_°©e
(
ah
, 
MCI_STATE_LAST_SCHD_MSG_OFFSET
);

554 i‡(
mci_öt_rxmsg
 & 
AR_MCI_INTERRUPT_RX_MSG_GPM
) {

555 
mci_öt_rxmsg
 &~
AR_MCI_INTERRUPT_RX_MSG_GPM
;

557 
m‹e_d©a
 =
MCI_GPM_MORE
) {

558 i‡(
	`ã°_bô
(
ATH_OP_HW_RESET
, &
comm⁄
->
›_Êags
))

561 
pgpm
 = 
mci
->
gpm_buf
.
bf_addr
;

562 
off£t
 = 
	`¨9003_mci_gë_√xt_gpm_off£t
(
ah
, 
Ál£
,

563 &
m‹e_d©a
);

565 i‡(
off£t
 =
MCI_GPM_INVALID
)

568 
pgpm
 +(
off£t
 >> 2);

574 
subty≥
 = 
	`MCI_GPM_TYPE
(
pgpm
);

575 
›code
 = 
	`MCI_GPM_OPCODE
(
pgpm
);

577 i‡(
skù_gpm
)

578 
ªcy˛e
;

580 i‡(
	`MCI_GPM_IS_CAL_TYPE
(
subty≥
)) {

581 
	`©h_mci_ˇl_msg
(
sc
, 
subty≥
, (
u8
 *)
pgpm
);

583 
subty≥
) {

584 
MCI_GPM_COEX_AGENT
:

585 
	`©h_mci_msg
(
sc
, 
›code
, (
u8
 *)
pgpm
);

591 
ªcy˛e
:

592 
	`MCI_GPM_RECYCLE
(
pgpm
);

596 i‡(
mci_öt_rxmsg
 & 
AR_MCI_INTERRUPT_RX_HW_MSG_MASK
) {

597 i‡(
mci_öt_rxmsg
 & 
AR_MCI_INTERRUPT_RX_MSG_LNA_CONTROL
)

598 
mci_öt_rxmsg
 &~
AR_MCI_INTERRUPT_RX_MSG_LNA_CONTROL
;

600 i‡(
mci_öt_rxmsg
 & 
AR_MCI_INTERRUPT_RX_MSG_LNA_INFO
)

601 
mci_öt_rxmsg
 &~
AR_MCI_INTERRUPT_RX_MSG_LNA_INFO
;

603 i‡(
mci_öt_rxmsg
 & 
AR_MCI_INTERRUPT_RX_MSG_CONT_INFO
) {

604 
vÆue_dbm
 = 
	`MS
(
mci_hw
->
c⁄t_°©us
,

605 
AR_MCI_CONT_RSSI_POWER
);

607 
mci_öt_rxmsg
 &~
AR_MCI_INTERRUPT_RX_MSG_CONT_INFO
;

609 
	`©h_dbg
(
comm⁄
, 
MCI
,

611 
	`MS
(
mci_hw
->
c⁄t_°©us
, 
AR_MCI_CONT_TXRX
) ?

613 
	`MS
(
mci_hw
->
c⁄t_°©us
, 
AR_MCI_CONT_PRIORITY
),

614 
vÆue_dbm
);

617 i‡(
mci_öt_rxmsg
 & 
AR_MCI_INTERRUPT_RX_MSG_CONT_NACK
)

618 
mci_öt_rxmsg
 &~
AR_MCI_INTERRUPT_RX_MSG_CONT_NACK
;

620 i‡(
mci_öt_rxmsg
 & 
AR_MCI_INTERRUPT_RX_MSG_CONT_RST
)

621 
mci_öt_rxmsg
 &~
AR_MCI_INTERRUPT_RX_MSG_CONT_RST
;

624 i‡((
mci_öt
 & 
AR_MCI_INTERRUPT_RX_INVALID_HDR
) ||

625 (
mci_öt
 & 
AR_MCI_INTERRUPT_CONT_INFO_TIMEOUT
)) {

626 
mci_öt
 &~(
AR_MCI_INTERRUPT_RX_INVALID_HDR
 |

627 
AR_MCI_INTERRUPT_CONT_INFO_TIMEOUT
);

628 
	`©h_mci_msg
(
sc
, 
MCI_GPM_COEX_NOOP
, 
NULL
);

630 
	}
}

632 
	$©h_mci_íabÀ
(
©h_so·c
 *
sc
)

634 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

636 i‡(!
comm⁄
->
btc€x_íabÀd
)

639 i‡(
sc
->
sc_ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_MCI
)

640 
sc
->
sc_ah
->
imask
 |
ATH9K_INT_MCI
;

641 
	}
}

643 
	$©h9k_mci_upd©e_wœn_ch™√ls
(
©h_so·c
 *
sc
, 
boﬁ
 
Ælow_Æl
)

645 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

646 
©h9k_hw_mci
 *
mci
 = &
ah
->
btc€x_hw
.mci;

647 
©h9k_ch™√l
 *
ch™
 = 
ah
->
curch™
;

648 
u32
 
ch™√lm≠
[] = {0x00000000, 0xffff0000, 0xffffffff, 0x7fffffff};

649 
i
;

650 
s16
 
ch™_°¨t
, 
ch™_íd
;

651 
u16
 
wœn_ch™
;

653 i‡(!
ch™
 || !
	`IS_CHAN_2GHZ
(chan))

656 i‡(
Ælow_Æl
)

657 
£nd_wœn_ch™
;

659 
wœn_ch™
 = 
ch™
->
ch™√l
 - 2402;

661 
ch™_°¨t
 = 
wœn_ch™
 - 10;

662 
ch™_íd
 = 
wœn_ch™
 + 10;

664 i‡(
	`IS_CHAN_HT40PLUS
(
ch™
))

665 
ch™_íd
 += 20;

666 i‡(
	`IS_CHAN_HT40MINUS
(
ch™
))

667 
ch™_°¨t
 -= 20;

670 
ch™_°¨t
 -= 7;

671 
ch™_íd
 += 7;

673 i‡(
ch™_°¨t
 <= 0)

674 
ch™_°¨t
 = 0;

675 i‡(
ch™_íd
 >
ATH_MCI_NUM_BT_CHANNELS
)

676 
ch™_íd
 = 
ATH_MCI_NUM_BT_CHANNELS
 - 1;

678 
	`©h_dbg
(
	`©h9k_hw_comm⁄
(
ah
), 
MCI
,

680 
wœn_ch™
, 
ch™_°¨t
, 
ch™_íd
);

682 
i
 = 
ch™_°¨t
; i < 
ch™_íd
; i++)

683 
	`MCI_GPM_CLR_CHANNEL_BIT
(&
ch™√lm≠
, 
i
);

685 
£nd_wœn_ch™
:

687 
i
 = 0; i < 4; i++)

688 
mci
->
wœn_ch™√ls
[
i
] = 
ch™√lm≠
[i];

689 
	`¨9003_mci_£nd_wœn_ch™√ls
(
ah
);

690 
	`¨9003_mci_°©e
(
ah
, 
MCI_STATE_SEND_VERSION_QUERY
);

691 
	}
}

693 
	$©h9k_mci_£t_txpowî
(
©h_so·c
 *
sc
, 
boﬁ
 
£tch™√l
,

694 
boﬁ
 
c⁄cur_tx
)

696 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

697 
©h9k_hw_mci
 *
mci_hw
 = &
sc
->
sc_ah
->
btc€x_hw
.
mci
;

698 
boﬁ
 
ﬁd_c⁄cur_tx
 = 
mci_hw
->
c⁄cur_tx
;

700 i‡(!(
mci_hw
->
c⁄fig
 & 
ATH_MCI_CONFIG_CONCUR_TX
)) {

701 
mci_hw
->
c⁄cur_tx
 = 
Ál£
;

705 i‡(!
	`IS_CHAN_2GHZ
(
ah
->
curch™
))

708 i‡(
£tch™√l
) {

709 
©h9k_hw_ˇl_d©a
 *
ˇld©a
 = &
sc
->caldata;

710 i‡(
	`IS_CHAN_HT40PLUS
(
ah
->
curch™
) &&

711 (
ah
->
curch™
->
ch™√l
 > 
ˇld©a
->channel) &&

712 (
ah
->
curch™
->
ch™√l
 <
ˇld©a
->channel + 20))

714 i‡(
	`IS_CHAN_HT40MINUS
(
ah
->
curch™
) &&

715 (
ah
->
curch™
->
ch™√l
 < 
ˇld©a
->channel) &&

716 (
ah
->
curch™
->
ch™√l
 >
ˇld©a
->channel - 20))

718 
mci_hw
->
c⁄cur_tx
 = 
Ál£
;

720 
mci_hw
->
c⁄cur_tx
 = concur_tx;

722 i‡(
ﬁd_c⁄cur_tx
 !
mci_hw
->
c⁄cur_tx
)

723 
	`©h9k_hw_£t_txpowîlimô
(
ah
, 
sc
->
c⁄fig
.
txpowlimô
, 
Ál£
);

724 
	}
}

726 
	$©h9k_mci_°omp_audio
(
©h_so·c
 *
sc
)

728 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

729 
©h_btc€x
 *
btc€x
 = &
sc
->btcoex;

730 
©h_mci_¥ofûe
 *
mci
 = &
btc€x
->mci;

732 i‡(!
mci
->
num_sco
 && !mci->
num_a2dp
)

735 i‡(
ah
->
°©s
.
avgbrssi
 > 25) {

736 
btc€x
->
°omp_audio
 = 0;

740 
btc€x
->
°omp_audio
++;

741 
	}
}

742 
	$©h9k_mci_upd©e_rssi
(
©h_so·c
 *
sc
)

744 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

745 
©h_btc€x
 *
btc€x
 = &
sc
->btcoex;

746 
©h9k_hw_mci
 *
mci_hw
 = &
sc
->
sc_ah
->
btc€x_hw
.
mci
;

748 
	`©h9k_mci_°omp_audio
(
sc
);

750 i‡(!(
mci_hw
->
c⁄fig
 & 
ATH_MCI_CONFIG_CONCUR_TX
))

753 i‡(
ah
->
°©s
.
avgbrssi
 >= 40) {

754 i‡(
btc€x
->
rssi_cou¡
 < 0)

755 
btc€x
->
rssi_cou¡
 = 0;

756 i‡(++
btc€x
->
rssi_cou¡
 >
ATH_MCI_CONCUR_TX_SWITCH
) {

757 
btc€x
->
rssi_cou¡
 = 0;

758 
	`©h9k_mci_£t_txpowî
(
sc
, 
Ál£
, 
åue
);

761 i‡(
btc€x
->
rssi_cou¡
 > 0)

762 
btc€x
->
rssi_cou¡
 = 0;

763 i‡(--
btc€x
->
rssi_cou¡
 <-
ATH_MCI_CONCUR_TX_SWITCH
) {

764 
btc€x
->
rssi_cou¡
 = 0;

765 
	`©h9k_mci_£t_txpowî
(
sc
, 
Ál£
, false);

768 
	}
}

	@mci.h

17 #i‚de‡
MCI_H


18 
	#MCI_H


	)

20 
	~"¨9003_mci.h
"

22 
	#ATH_MCI_SCHED_BUF_SIZE
 (16 * 16Ë

	)

23 
	#ATH_MCI_GPM_MAX_ENTRY
 16

	)

24 
	#ATH_MCI_GPM_BUF_SIZE
 (
ATH_MCI_GPM_MAX_ENTRY
 * 16)

	)

25 
	#ATH_MCI_DEF_BT_PERIOD
 40

	)

26 
	#ATH_MCI_BDR_DUTY_CYCLE
 20

	)

27 
	#ATH_MCI_MAX_DUTY_CYCLE
 90

	)

29 
	#ATH_MCI_DEF_AGGR_LIMIT
 6

	)

30 
	#ATH_MCI_MAX_ACL_PROFILE
 7

	)

31 
	#ATH_MCI_MAX_SCO_PROFILE
 1

	)

32 
	#ATH_MCI_MAX_PROFILE
 (
ATH_MCI_MAX_ACL_PROFILE
 +\

33 
ATH_MCI_MAX_SCO_PROFILE
)

	)

35 
	#ATH_MCI_INQUIRY_PRIO
 62

	)

36 
	#ATH_MCI_HI_PRIO
 60

	)

37 
	#ATH_MCI_NUM_BT_CHANNELS
 79

	)

38 
	#ATH_MCI_CONCUR_TX_SWITCH
 5

	)

40 
	#MCI_GPM_SET_CHANNEL_BIT
(
_p_gpm
, 
_bt_ch™
) \

42 i‡(
_bt_ch™
 < 
ATH_MCI_NUM_BT_CHANNELS
) { \

43 *(((
u8
 *)(
_p_gpm
)Ë+ 
MCI_GPM_COEX_B_CHANNEL_MAP
 + \

44 (
_bt_ch™
 / 8)) |= (1 << (_bt_chan & 7)); \

46 } 0)

	)

48 
	#MCI_GPM_CLR_CHANNEL_BIT
(
_p_gpm
, 
_bt_ch™
) \

50 i‡(
_bt_ch™
 < 
ATH_MCI_NUM_BT_CHANNELS
) { \

51 *(((
u8
 *)(
_p_gpm
)Ë+ 
MCI_GPM_COEX_B_CHANNEL_MAP
 + \

52 (
_bt_ch™
 / 8)) &= ~(1 << (_bt_chan & 7));\

54 } 0)

	)

56 
	#INC_PROF
(
_mci
, 
_öfo
) do { \

57 
_öfo
->
ty≥
) { \

58 
MCI_GPM_COEX_PROFILE_RFCOMM
:\

59 
_mci
->
num_Ÿhî_a˛
++; \

61 
MCI_GPM_COEX_PROFILE_A2DP
: \

62 
_mci
->
num_a2dp
++; \

63 i‡(!
_öfo
->
edr
) \

64 
_mci
->
num_bdr
++; \

66 
MCI_GPM_COEX_PROFILE_HID
: \

67 
_mci
->
num_hid
++; \

69 
MCI_GPM_COEX_PROFILE_BNEP
: \

70 
_mci
->
num_∑n
++; \

72 
MCI_GPM_COEX_PROFILE_VOICE
: \

73 
MCI_GPM_COEX_PROFILE_A2DPVO
:\

74 
_mci
->
num_sco
++; \

79 } 0)

	)

81 
	#DEC_PROF
(
_mci
, 
_öfo
) do { \

82 
_öfo
->
ty≥
) { \

83 
MCI_GPM_COEX_PROFILE_RFCOMM
:\

84 
_mci
->
num_Ÿhî_a˛
--; \

86 
MCI_GPM_COEX_PROFILE_A2DP
: \

87 
_mci
->
num_a2dp
--; \

88 i‡(!
_öfo
->
edr
) \

89 
_mci
->
num_bdr
--; \

91 
MCI_GPM_COEX_PROFILE_HID
: \

92 
_mci
->
num_hid
--; \

94 
MCI_GPM_COEX_PROFILE_BNEP
: \

95 
_mci
->
num_∑n
--; \

97 
MCI_GPM_COEX_PROFILE_VOICE
: \

98 
MCI_GPM_COEX_PROFILE_A2DPVO
:\

99 
_mci
->
num_sco
--; \

104 } 0)

	)

106 
	#NUM_PROF
(
_mci
Ë(_mci->
num_Ÿhî_a˛
 + _mci->
num_a2dp
 + \

107 
_mci
->
num_hid
 + _mci->
num_∑n
 + _mci->
num_sco
)

	)

109 
	s©h_mci_¥ofûe_öfo
 {

110 
u8
 
	mty≥
;

111 
u8
 
	mc⁄n_h™dÀ
;

112 
boﬁ
 
	m°¨t
;

113 
boﬁ
 
	mma°î
;

114 
boﬁ
 
	medr
;

115 
u8
 
	mvoi˚_ty≥
;

116 
u16
 
	mT
;

117 
u8
 
	mW
;

118 
u8
 
	mA
;

119 
li°_hód
 
	mli°
;

122 
	s©h_mci_¥ofûe_°©us
 {

123 
boﬁ
 
	mis_¸ôiˇl
;

124 
boﬁ
 
	mis_lök
;

125 
u8
 
	mc⁄n_h™dÀ
;

128 
	s©h_mci_¥ofûe
 {

129 
li°_hód
 
	möfo
;

130 
DECLARE_BITMAP
(
°©us
, 
ATH_MCI_MAX_PROFILE
);

131 
u16
 
	maggr_limô
;

132 
u8
 
	mnum_mgmt
;

133 
u8
 
	mnum_sco
;

134 
u8
 
	mnum_a2dp
;

135 
u8
 
	mnum_hid
;

136 
u8
 
	mnum_∑n
;

137 
u8
 
	mnum_Ÿhî_a˛
;

138 
u8
 
	mnum_bdr
;

139 
u8
 
	mvoi˚_¥i‹ôy
;

142 
	s©h_mci_buf
 {

143 *
	mbf_addr
;

144 
dma_addr_t
 
	mbf_∑ddr
;

145 
u32
 
	mbf_Àn
;

148 
	s©h_mci_c€x
 {

149 
©h_mci_buf
 
	msched_buf
;

150 
©h_mci_buf
 
	mgpm_buf
;

153 
©h_mci_Êush_¥ofûe
(
©h_mci_¥ofûe
 *
mci
);

154 
©h_mci_£tup
(
©h_so·c
 *
sc
);

155 
©h_mci_˛ónup
(
©h_so·c
 *
sc
);

156 
©h_mci_öå
(
©h_so·c
 *
sc
);

157 
©h9k_mci_upd©e_rssi
(
©h_so·c
 *
sc
);

159 #ifde‡
CPTCFG_ATH9K_BTCOEX_SUPPORT


160 
©h_mci_íabÀ
(
©h_so·c
 *
sc
);

161 
©h9k_mci_upd©e_wœn_ch™√ls
(
©h_so·c
 *
sc
, 
boﬁ
 
Ælow_Æl
);

162 
©h9k_mci_£t_txpowî
(
©h_so·c
 *
sc
, 
boﬁ
 
£tch™√l
,

163 
boﬁ
 
c⁄cur_tx
);

165 
ölöe
 
	$©h_mci_íabÀ
(
©h_so·c
 *
sc
)

167 
	}
}

168 
ölöe
 
	$©h9k_mci_upd©e_wœn_ch™√ls
(
©h_so·c
 *
sc
,

169 
boﬁ
 
Ælow_Æl
)

171 
	}
}

172 
ölöe
 
	$©h9k_mci_£t_txpowî
(
©h_so·c
 *
sc
, 
boﬁ
 
£tch™√l
,

173 
boﬁ
 
c⁄cur_tx
)

175 
	}
}

	@pci.c

17 
	#¥_fmt
(
fmt
Ë
KBUILD_MODNAME
 ": " 
	)
fmt

19 
	~<löux/∆80211.h
>

20 
	~<löux/pci.h
>

21 
	~<löux/pci-a•m.h
>

22 
	~<löux/©h9k_∂©f‹m.h
>

23 
	~<löux/moduÀ.h
>

24 
	~"©h9k.h
"

26 
DEFINE_PCI_DEVICE_TABLE
(
©h_pci_id_èbÀ
) = {

27 { 
PCI_VDEVICE
(
ATHEROS
, 0x0023) },

28 { 
PCI_VDEVICE
(
ATHEROS
, 0x0024) },

29 { 
PCI_VDEVICE
(
ATHEROS
, 0x0027) },

30 { 
PCI_VDEVICE
(
ATHEROS
, 0x0029) },

31 { 
PCI_VDEVICE
(
ATHEROS
, 0x002A) },

33 #ifde‡
CPTCFG_ATH9K_PCOEM


34 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

36 
PCI_VENDOR_ID_AZWAVE
,

38 .
drivî_d©a
 = 
ATH9K_PCI_D3_L1_WAR
 },

39 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

41 
PCI_VENDOR_ID_FOXCONN
,

43 .
	gdrivî_d©a
 = 
ATH9K_PCI_D3_L1_WAR
 },

44 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

48 .
	gdrivî_d©a
 = 
ATH9K_PCI_D3_L1_WAR
 },

49 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

53 .
	gdrivî_d©a
 = 
ATH9K_PCI_D3_L1_WAR
 },

54 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

56 
PCI_VENDOR_ID_QMI
,

58 .
	gdrivî_d©a
 = 
ATH9K_PCI_D3_L1_WAR
 },

59 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

63 .
	gdrivî_d©a
 = 
ATH9K_PCI_D3_L1_WAR
 },

64 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

68 .
	gdrivî_d©a
 = 
ATH9K_PCI_D3_L1_WAR
 },

69 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

73 .
	gdrivî_d©a
 = 
ATH9K_PCI_D3_L1_WAR
 },

74 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

78 .
	gdrivî_d©a
 = 
ATH9K_PCI_D3_L1_WAR
 },

81 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

83 
PCI_VENDOR_ID_AZWAVE
,

85 .
	gdrivî_d©a
 = 
ATH9K_PCI_BT_ANT_DIV
 },

88 { 
PCI_VDEVICE
(
ATHEROS
, 0x002B) },

89 { 
PCI_VDEVICE
(
ATHEROS
, 0x002C) },

90 { 
PCI_VDEVICE
(
ATHEROS
, 0x002D) },

91 { 
PCI_VDEVICE
(
ATHEROS
, 0x002E) },

94 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

98 .
	gdrivî_d©a
 = 
ATH9K_PCI_KILLER
 },

99 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

103 .
	gdrivî_d©a
 = 
ATH9K_PCI_KILLER
 },

105 { 
PCI_VDEVICE
(
ATHEROS
, 0x0030) },

107 #ifde‡
CPTCFG_ATH9K_PCOEM


109 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

111 
PCI_VENDOR_ID_AZWAVE
,

113 .
	gdrivî_d©a
 = 
ATH9K_PCI_CUS198
 | 
ATH9K_PCI_BT_ANT_DIV
 },

114 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

116 
PCI_VENDOR_ID_AZWAVE
,

118 .
	gdrivî_d©a
 = 
ATH9K_PCI_CUS198
 | 
ATH9K_PCI_BT_ANT_DIV
 },

119 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

121 
PCI_VENDOR_ID_AZWAVE
,

123 .
	gdrivî_d©a
 = 
ATH9K_PCI_CUS198
 | 
ATH9K_PCI_BT_ANT_DIV
 },

124 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

126 
PCI_VENDOR_ID_AZWAVE
,

128 .
	gdrivî_d©a
 = 
ATH9K_PCI_CUS198
 | 
ATH9K_PCI_BT_ANT_DIV
 },

131 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

133 
PCI_VENDOR_ID_AZWAVE
,

135 .
	gdrivî_d©a
 = 
ATH9K_PCI_CUS230
 | 
ATH9K_PCI_BT_ANT_DIV
 },

136 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

138 
PCI_VENDOR_ID_FOXCONN
,

140 .
	gdrivî_d©a
 = 
ATH9K_PCI_CUS230
 | 
ATH9K_PCI_BT_ANT_DIV
 },

143 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

145 
PCI_VENDOR_ID_ATHEROS
,

147 .
	gdrivî_d©a
 = 
ATH9K_PCI_BT_ANT_DIV
 },

148 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

150 
PCI_VENDOR_ID_ATHEROS
,

152 .
	gdrivî_d©a
 = 
ATH9K_PCI_BT_ANT_DIV
 },

153 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

157 .
	gdrivî_d©a
 = 
ATH9K_PCI_BT_ANT_DIV
 },

158 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

162 .
	gdrivî_d©a
 = 
ATH9K_PCI_BT_ANT_DIV
 },

163 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

165 
PCI_VENDOR_ID_SAMSUNG
,

167 .
	gdrivî_d©a
 = 
ATH9K_PCI_BT_ANT_DIV
 },

168 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

170 
PCI_VENDOR_ID_SAMSUNG
,

172 .
	gdrivî_d©a
 = 
ATH9K_PCI_BT_ANT_DIV
 },

173 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

175 
PCI_VENDOR_ID_SAMSUNG
,

177 .
	gdrivî_d©a
 = 
ATH9K_PCI_BT_ANT_DIV
 },

178 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

180 
PCI_VENDOR_ID_SAMSUNG
,

182 .
	gdrivî_d©a
 = 
ATH9K_PCI_BT_ANT_DIV
 },

183 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

185 
PCI_VENDOR_ID_SAMSUNG
,

187 .
	gdrivî_d©a
 = 
ATH9K_PCI_BT_ANT_DIV
 },

188 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

190 
PCI_VENDOR_ID_SAMSUNG
,

192 .
	gdrivî_d©a
 = 
ATH9K_PCI_BT_ANT_DIV
 },

193 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

195 
PCI_VENDOR_ID_SAMSUNG
,

197 .
	gdrivî_d©a
 = 
ATH9K_PCI_BT_ANT_DIV
 },

198 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

200 
PCI_VENDOR_ID_SAMSUNG
,

202 .
	gdrivî_d©a
 = 
ATH9K_PCI_BT_ANT_DIV
 },

203 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

205 
PCI_VENDOR_ID_LENOVO
,

207 .
	gdrivî_d©a
 = 
ATH9K_PCI_BT_ANT_DIV
 },

208 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

210 
PCI_VENDOR_ID_LENOVO
,

212 .
	gdrivî_d©a
 = 
ATH9K_PCI_BT_ANT_DIV
 },

215 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

217 
PCI_VENDOR_ID_AZWAVE
,

219 .
	gdrivî_d©a
 = 
ATH9K_PCI_NO_PLL_PWRSAVE
 },

220 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

222 
PCI_VENDOR_ID_AZWAVE
,

224 .
	gdrivî_d©a
 = 
ATH9K_PCI_NO_PLL_PWRSAVE
 },

225 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

229 .
	gdrivî_d©a
 = 
ATH9K_PCI_NO_PLL_PWRSAVE
 },

230 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

234 .
	gdrivî_d©a
 = 
ATH9K_PCI_NO_PLL_PWRSAVE
 },

235 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

239 .
	gdrivî_d©a
 = 
ATH9K_PCI_NO_PLL_PWRSAVE
 },

240 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

242 
PCI_VENDOR_ID_FOXCONN
,

244 .
	gdrivî_d©a
 = 
ATH9K_PCI_NO_PLL_PWRSAVE
 },

245 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

247 
PCI_VENDOR_ID_FOXCONN
,

249 .
	gdrivî_d©a
 = 
ATH9K_PCI_NO_PLL_PWRSAVE
 },

250 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

254 .
	gdrivî_d©a
 = 
ATH9K_PCI_NO_PLL_PWRSAVE
 },

255 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

259 .
	gdrivî_d©a
 = 
ATH9K_PCI_NO_PLL_PWRSAVE
 },

260 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

264 .
	gdrivî_d©a
 = 
ATH9K_PCI_NO_PLL_PWRSAVE
 },

265 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

267 
PCI_VENDOR_ID_AZWAVE
,

269 .
	gdrivî_d©a
 = 
ATH9K_PCI_NO_PLL_PWRSAVE
 },

270 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

272 
PCI_VENDOR_ID_AZWAVE
,

274 .
	gdrivî_d©a
 = 
ATH9K_PCI_NO_PLL_PWRSAVE
 },

275 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

277 
PCI_VENDOR_ID_AZWAVE
,

279 .
	gdrivî_d©a
 = 
ATH9K_PCI_NO_PLL_PWRSAVE
 },

280 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

282 
PCI_VENDOR_ID_AZWAVE
,

284 .
	gdrivî_d©a
 = 
ATH9K_PCI_NO_PLL_PWRSAVE
 },

285 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

289 .
	gdrivî_d©a
 = 
ATH9K_PCI_NO_PLL_PWRSAVE
 },

290 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

294 .
	gdrivî_d©a
 = 
ATH9K_PCI_NO_PLL_PWRSAVE
 },

295 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

297 
PCI_VENDOR_ID_ASUSTEK
,

299 .
	gdrivî_d©a
 = 
ATH9K_PCI_NO_PLL_PWRSAVE
 },

302 { 
PCI_VDEVICE
(
ATHEROS
, 0x0032) },

303 { 
PCI_VDEVICE
(
ATHEROS
, 0x0033) },

305 #ifde‡
CPTCFG_ATH9K_PCOEM


307 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

309 
PCI_VENDOR_ID_AZWAVE
,

311 .
	gdrivî_d©a
 = 
ATH9K_PCI_CUS217
 },

312 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

316 .
	gdrivî_d©a
 = 
ATH9K_PCI_CUS217
 },

319 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

321 
PCI_VENDOR_ID_ATHEROS
,

323 .
	gdrivî_d©a
 = 
ATH9K_PCI_WOW
 },

324 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

326 
PCI_VENDOR_ID_LENOVO
,

328 .
	gdrivî_d©a
 = 
ATH9K_PCI_WOW
 },

329 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

331 
PCI_VENDOR_ID_ATTANSIC
,

333 .
	gdrivî_d©a
 = 
ATH9K_PCI_WOW
 },

334 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

336 
PCI_VENDOR_ID_AZWAVE
,

338 .
	gdrivî_d©a
 = 
ATH9K_PCI_WOW
 },

339 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

341 
PCI_VENDOR_ID_ASUSTEK
,

343 .
	gdrivî_d©a
 = 
ATH9K_PCI_WOW
 },

344 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

348 .
	gdrivî_d©a
 = 
ATH9K_PCI_WOW
 },

349 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

353 .
	gdrivî_d©a
 = 
ATH9K_PCI_WOW
 },

354 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

356 
PCI_VENDOR_ID_HP
,

358 .
	gdrivî_d©a
 = 
ATH9K_PCI_WOW
 },

359 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

363 .
	gdrivî_d©a
 = 
ATH9K_PCI_WOW
 },

364 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

368 .
	gdrivî_d©a
 = 
ATH9K_PCI_WOW
 },

369 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

373 .
	gdrivî_d©a
 = 
ATH9K_PCI_WOW
 },

376 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

380 .
	gdrivî_d©a
 = 
ATH9K_PCI_KILLER
 },

382 { 
PCI_VDEVICE
(
ATHEROS
, 0x0034) },

383 { 
PCI_VDEVICE
(
ATHEROS
, 0x0037) },

386 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

388 
PCI_VENDOR_ID_ATHEROS
,

390 .
	gdrivî_d©a
 = 
ATH9K_PCI_CUS252
 |

391 
ATH9K_PCI_AR9565_2ANT
 |

392 
ATH9K_PCI_BT_ANT_DIV
 },

393 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

395 
PCI_VENDOR_ID_AZWAVE
,

397 .
	gdrivî_d©a
 = 
ATH9K_PCI_CUS252
 |

398 
ATH9K_PCI_AR9565_2ANT
 |

399 
ATH9K_PCI_BT_ANT_DIV
 },

402 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

404 
PCI_VENDOR_ID_FOXCONN
,

406 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_1ANT
 },

407 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

411 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_1ANT
 },

412 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

416 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_1ANT
 },

417 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

421 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_1ANT
 },

422 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

426 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_1ANT
 },

427 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

431 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_1ANT
 },

432 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

436 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_1ANT
 },

437 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

441 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_1ANT
 },

442 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

446 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_1ANT
 },

447 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

449 
PCI_VENDOR_ID_AZWAVE
,

451 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_1ANT
 },

454 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

456 
PCI_VENDOR_ID_ATHEROS
,

458 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_1ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

459 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

461 
PCI_VENDOR_ID_ATHEROS
,

463 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_1ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

464 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

466 
PCI_VENDOR_ID_ATHEROS
,

468 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_1ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

469 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

471 
PCI_VENDOR_ID_FOXCONN
,

473 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_1ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

474 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

478 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_1ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

479 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

483 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_1ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

484 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

488 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_1ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

489 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

493 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_1ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

494 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

498 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_1ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

499 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

503 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_1ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

504 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

506 
PCI_VENDOR_ID_AZWAVE
,

508 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_1ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

509 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

511 
PCI_VENDOR_ID_HP
,

513 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_1ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

514 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

516 
PCI_VENDOR_ID_HP
,

518 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_1ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

519 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

521 
PCI_VENDOR_ID_HP
,

523 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_1ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

524 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

526 
PCI_VENDOR_ID_DELL
,

528 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_1ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

531 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

533 
PCI_VENDOR_ID_SAMSUNG
,

535 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_2ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

536 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

538 
PCI_VENDOR_ID_SAMSUNG
,

540 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_2ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

541 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

543 
PCI_VENDOR_ID_SAMSUNG
,

545 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_2ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

546 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

548 
PCI_VENDOR_ID_SAMSUNG
,

550 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_2ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

551 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

553 
PCI_VENDOR_ID_SAMSUNG
,

555 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_2ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

556 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

558 
PCI_VENDOR_ID_ATHEROS
,

560 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_2ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

561 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

563 
PCI_VENDOR_ID_ATHEROS
,

565 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_2ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

566 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

570 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_2ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

571 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

575 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_2ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

576 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

580 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_2ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

581 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

585 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_2ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

586 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

590 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_2ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

591 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

593 
PCI_VENDOR_ID_AZWAVE
,

595 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_2ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

596 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

598 
PCI_VENDOR_ID_AZWAVE
,

600 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_2ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

601 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

603 
PCI_VENDOR_ID_AZWAVE
,

605 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_2ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

606 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

610 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_2ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

611 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

615 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_2ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

616 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

620 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_2ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

621 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

625 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_2ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

626 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

630 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_2ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

631 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

633 
PCI_VENDOR_ID_FOXCONN
,

635 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_2ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

636 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

638 
PCI_VENDOR_ID_FOXCONN
,

640 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_2ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

641 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

643 
PCI_VENDOR_ID_LENOVO
,

645 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_2ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

646 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

648 
PCI_VENDOR_ID_LENOVO
,

650 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_2ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

651 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

653 
PCI_VENDOR_ID_ASUSTEK
,

655 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_2ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

656 { 
PCI_DEVICE_SUB
(
PCI_VENDOR_ID_ATHEROS
,

658 
PCI_VENDOR_ID_DELL
,

660 .
	gdrivî_d©a
 = 
ATH9K_PCI_AR9565_2ANT
 | 
ATH9K_PCI_BT_ANT_DIV
 },

663 { 
PCI_VDEVICE
(
ATHEROS
, 0x0036),

664 .
	gdrivî_d©a
 = 
ATH9K_PCI_BT_ANT_DIV
 },

667 { 
PCI_VDEVICE
(
ATHEROS
, 0xabcd) },

673 
	$©h_pci_ªad_ˇchesize
(
©h_comm⁄
 *
comm⁄
, *
csz
)

675 
©h_so·c
 *
sc
 = (©h_so·¯*Ë
comm⁄
->
¥iv
;

676 
u8
 
u8tmp
;

678 
	`pci_ªad_c⁄fig_byã
(
	`to_pci_dev
(
sc
->
dev
), 
PCI_CACHE_LINE_SIZE
, &
u8tmp
);

679 *
csz
 = ()
u8tmp
;

687 i‡(*
csz
 == 0)

688 *
csz
 = 
DEFAULT_CACHELINE
 >> 2;

689 
	}
}

691 
boﬁ
 
	$©h_pci_ì¥om_ªad
(
©h_comm⁄
 *
comm⁄
, 
u32
 
off
, 
u16
 *
d©a
)

693 
©h_so·c
 *
sc
 = (©h_so·¯*Ë
comm⁄
->
¥iv
;

694 
©h9k_∂©f‹m_d©a
 *
pd©a
 = 
sc
->
dev
->
∂©f‹m_d©a
;

696 i‡(
pd©a
 && !pd©a->
u£_ì¥om
) {

697 i‡(
off
 >(
	`ARRAY_SIZE
(
pd©a
->
ì¥om_d©a
))) {

698 
	`©h_îr
(
comm⁄
,

700 
__func__
, 
off
);

703 *
d©a
 = 
pd©a
->
ì¥om_d©a
[
off
];

705 
©h_hw
 *
ah
 = (©h_hw *Ë
comm⁄
->ah;

707 
comm⁄
->
›s
->
	`ªad
(
ah
, 
AR5416_EEPROM_OFFSET
 +

708 (
off
 << 
AR5416_EEPROM_S
));

710 i‡(!
	`©h9k_hw_waô
(
ah
,

711 
AR_EEPROM_STATUS_DATA
,

712 
AR_EEPROM_STATUS_DATA_BUSY
 |

713 
AR_EEPROM_STATUS_DATA_PROT_ACCESS
, 0,

714 
AH_WAIT_TIMEOUT
)) {

715  
Ál£
;

718 *
d©a
 = 
	`MS
(
comm⁄
->
›s
->
	`ªad
(
ah
, 
AR_EEPROM_STATUS_DATA
),

719 
AR_EEPROM_STATUS_DATA_VAL
);

722  
åue
;

723 
	}
}

726 
	$©h_pci_a•m_öô
(
©h_comm⁄
 *
comm⁄
)

728 
©h_so·c
 *
sc
 = (©h_so·¯*Ë
comm⁄
->
¥iv
;

729 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

730 
pci_dev
 *
pdev
 = 
	`to_pci_dev
(
sc
->
dev
);

731 
pci_dev
 *
∑ª¡
;

732 
u16
 
a•m
;

734 i‡(!
ah
->
is_pcõx¥ess
)

737 
∑ª¡
 = 
pdev
->
bus
->
£lf
;

738 i‡(!
∑ª¡
)

741 i‡((
	`©h9k_hw_gë_btc€x_scheme
(
ah
Ë!
ATH_BTCOEX_CFG_NONE
) &&

742 (
	`AR_SREV_9285
(
ah
))) {

744 
	`pcõ_ˇ∑bûôy_˛ór_w‹d
(
pdev
, 
PCI_EXP_LNKCTL
,

745 
PCI_EXP_LNKCTL_ASPM_L0S
 | 
PCI_EXP_LNKCTL_ASPM_L1
);

751 
	`pcõ_ˇ∑bûôy_˛ór_w‹d
(
∑ª¡
, 
PCI_EXP_LNKCTL
,

752 
PCI_EXP_LNKCTL_ASPM_L0S
 | 
PCI_EXP_LNKCTL_ASPM_L1
);

754 
	`©h_öfo
(
comm⁄
, "Disabling ASPM since BTCOEX isÉnabled\n");

771 i‡(
	`AR_SREV_9462
(
ah
))

772 
	`pci_ªad_c⁄fig_dw‹d
(
pdev
, 0x70c, &
ah
->
c⁄fig
.
a•m_l1_fix
);

774 
	`pcõ_ˇ∑bûôy_ªad_w‹d
(
∑ª¡
, 
PCI_EXP_LNKCTL
, &
a•m
);

775 i‡(
a•m
 & (
PCI_EXP_LNKCTL_ASPM_L0S
 | 
PCI_EXP_LNKCTL_ASPM_L1
)) {

776 
ah
->
a•m_íabÀd
 = 
åue
;

778 
	`©h9k_hw_c⁄figpcùowîßve
(
ah
, 
Ál£
);

779 
	`©h_öfo
(
comm⁄
, "ASPMÉ«bÀd: 0x%x\n", 
a•m
);

781 
	}
}

783 c⁄° 
©h_bus_›s
 
	g©h_pci_bus_›s
 = {

784 .
©h_bus_ty≥
 = 
ATH_PCI
,

785 .
	gªad_ˇchesize
 = 
©h_pci_ªad_ˇchesize
,

786 .
	gì¥om_ªad
 = 
©h_pci_ì¥om_ªad
,

787 .
	ga•m_öô
 = 
©h_pci_a•m_öô
,

790 
	$©h_pci_¥obe
(
pci_dev
 *
pdev
, c⁄° 
pci_devi˚_id
 *
id
)

792 
©h_so·c
 *
sc
;

793 
õì80211_hw
 *
hw
;

794 
u8
 
csz
;

795 
u32
 
vÆ
;

796 
ªt
 = 0;

797 
hw_«me
[64];

799 i‡(
	`pcim_íabÀ_devi˚
(
pdev
))

800  -
EIO
;

802 
ªt
 = 
	`pci_£t_dma_mask
(
pdev
, 
	`DMA_BIT_MASK
(32));

803 i‡(
ªt
) {

804 
	`¥_îr
("32-bit DMAÇotávailable\n");

805  
ªt
;

808 
ªt
 = 
	`pci_£t_c⁄si°ít_dma_mask
(
pdev
, 
	`DMA_BIT_MASK
(32));

809 i‡(
ªt
) {

810 
	`¥_îr
("32-bit DMA consistent DMAÉnable failed\n");

811  
ªt
;

818 
	`pci_ªad_c⁄fig_byã
(
pdev
, 
PCI_CACHE_LINE_SIZE
, &
csz
);

819 i‡(
csz
 == 0) {

827 
csz
 = 
L1_CACHE_BYTES
 / (
u32
);

828 
	`pci_wrôe_c⁄fig_byã
(
pdev
, 
PCI_CACHE_LINE_SIZE
, 
csz
);

835 
	`pci_wrôe_c⁄fig_byã
(
pdev
, 
PCI_LATENCY_TIMER
, 0xa8);

837 
	`pci_£t_ma°î
(
pdev
);

843 
	`pci_ªad_c⁄fig_dw‹d
(
pdev
, 0x40, &
vÆ
);

844 i‡((
vÆ
 & 0x0000ff00) != 0)

845 
	`pci_wrôe_c⁄fig_dw‹d
(
pdev
, 0x40, 
vÆ
 & 0xffff00ff);

847 
ªt
 = 
	`pcim_iom≠_ªgi⁄s
(
pdev
, 
	`BIT
(0), "ath9k");

848 i‡(
ªt
) {

849 
	`dev_îr
(&
pdev
->
dev
, "PCI memoryÑegionÑeserveÉrror\n");

850  -
ENODEV
;

853 
hw
 = 
	`õì80211_Æloc_hw
((
©h_so·c
), &
©h9k_›s
);

854 i‡(!
hw
) {

855 
	`dev_îr
(&
pdev
->
dev
, "No memory for ieee80211_hw\n");

856  -
ENOMEM
;

859 
	`SET_IEEE80211_DEV
(
hw
, &
pdev
->
dev
);

860 
	`pci_£t_drvd©a
(
pdev
, 
hw
);

862 
sc
 = 
hw
->
¥iv
;

863 
sc
->
hw
 = hw;

864 
sc
->
dev
 = &
pdev
->dev;

865 
sc
->
mem
 = 
	`pcim_iom≠_èbÀ
(
pdev
)[0];

866 
sc
->
drivî_d©a
 = 
id
->driver_data;

868 
ªt
 = 
	`ªque°_úq
(
pdev
->
úq
, 
©h_i§
, 
IRQF_SHARED
, "©h9k", 
sc
);

869 i‡(
ªt
) {

870 
	`dev_îr
(&
pdev
->
dev
, "request_irq failed\n");

871 
îr_úq
;

874 
sc
->
úq
 = 
pdev
->irq;

876 
ªt
 = 
	`©h9k_öô_devi˚
(
id
->
devi˚
, 
sc
, &
©h_pci_bus_›s
);

877 i‡(
ªt
) {

878 
	`dev_îr
(&
pdev
->
dev
, "FailedÅo initialize device\n");

879 
îr_öô
;

882 
	`©h9k_hw_«me
(
sc
->
sc_ah
, 
hw_«me
, (hw_name));

883 
	`wùhy_öfo
(
hw
->
wùhy
, "%s mem=0x%lx, irq=%d\n",

884 
hw_«me
, ()
sc
->
mem
, 
pdev
->
úq
);

888 
îr_öô
:

889 
	`‰ì_úq
(
sc
->
úq
, sc);

890 
îr_úq
:

891 
	`õì80211_‰ì_hw
(
hw
);

892  
ªt
;

893 
	}
}

895 
	$©h_pci_ªmove
(
pci_dev
 *
pdev
)

897 
õì80211_hw
 *
hw
 = 
	`pci_gë_drvd©a
(
pdev
);

898 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

900 i‡(!
is_©h9k_u∆ﬂded
)

901 
sc
->
sc_ah
->
ah_Êags
 |
AH_UNPLUGGED
;

902 
	`©h9k_deöô_devi˚
(
sc
);

903 
	`‰ì_úq
(
sc
->
úq
, sc);

904 
	`õì80211_‰ì_hw
(
sc
->
hw
);

905 
	}
}

907 #ifde‡
CONFIG_PM_SLEEP


909 
	$©h_pci_su•íd
(
devi˚
 *device)

911 
pci_dev
 *
pdev
 = 
	`to_pci_dev
(
devi˚
);

912 
õì80211_hw
 *
hw
 = 
	`pci_gë_drvd©a
(
pdev
);

913 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

915 i‡(
sc
->
wow_íabÀd
)

922 
	`©h9k_°›_btc€x
(
sc
);

923 
	`©h9k_hw_dißbÀ
(
sc
->
sc_ah
);

924 
	`dñ_timî_sync
(&
sc
->
¶ìp_timî
);

925 
	`©h9k_hw_£çowî
(
sc
->
sc_ah
, 
ATH9K_PM_FULL_SLEEP
);

928 
	}
}

930 
	$©h_pci_ªsume
(
devi˚
 *device)

932 
pci_dev
 *
pdev
 = 
	`to_pci_dev
(
devi˚
);

933 
õì80211_hw
 *
hw
 = 
	`pci_gë_drvd©a
(
pdev
);

934 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

935 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

936 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

937 
u32
 
vÆ
;

944 
	`pci_ªad_c⁄fig_dw‹d
(
pdev
, 0x40, &
vÆ
);

945 i‡((
vÆ
 & 0x0000ff00) != 0)

946 
	`pci_wrôe_c⁄fig_dw‹d
(
pdev
, 0x40, 
vÆ
 & 0xffff00ff);

948 
	`©h_pci_a•m_öô
(
comm⁄
);

949 
ah
->
ª£t_powî_⁄
 = 
Ál£
;

952 
	}
}

954 
SIMPLE_DEV_PM_OPS
(
©h9k_pm_›s
, 
©h_pci_su•íd
, 
©h_pci_ªsume
);

956 
	#ATH9K_PM_OPS
 (&
©h9k_pm_›s
)

	)

960 
	#ATH9K_PM_OPS
 
NULL


	)

965 
MODULE_DEVICE_TABLE
(
pci
, 
©h_pci_id_èbÀ
);

967 
pci_drivî
 
	g©h_pci_drivî
 = {

968 .
«me
 = "ath9k",

969 .
	gid_èbÀ
 = 
©h_pci_id_èbÀ
,

970 .
	g¥obe
 = 
©h_pci_¥obe
,

971 .
	gªmove
 = 
©h_pci_ªmove
,

972 .
	gdrivî
.
	gpm
 = 
ATH9K_PM_OPS
,

975 
	$©h_pci_öô
()

977  
	`pci_ªgi°î_drivî
(&
©h_pci_drivî
);

978 
	}
}

980 
	$©h_pci_exô
()

982 
	`pci_uƒegi°î_drivî
(&
©h_pci_drivî
);

983 
	}
}

	@phy.h

17 #i‚de‡
PHY_H


18 
	#PHY_H


	)

20 
	#CHANSEL_DIV
 15

	)

21 
	#CHANSEL_2G
(
_‰eq
Ë(((_‰eqË* 0x10000Ë/ 
CHANSEL_DIV
)

	)

22 
	#CHANSEL_5G
(
_‰eq
Ë(((_‰eqË* 0x8000Ë/ 
CHANSEL_DIV
)

	)

24 
	#AR_PHY_BASE
 0x9800

	)

25 
	#AR_PHY
(
_n
Ë(
AR_PHY_BASE
 + ((_n)<<2))

	)

27 
	#AR_PHY_TX_PWRCTRL_TX_GAIN_TAB_MAX
 0x0007E000

	)

28 
	#AR_PHY_TX_PWRCTRL_TX_GAIN_TAB_MAX_S
 13

	)

29 
	#AR_PHY_TX_GAIN_CLC
 0x0000001E

	)

30 
	#AR_PHY_TX_GAIN_CLC_S
 1

	)

31 
	#AR_PHY_TX_GAIN
 0x0007F000

	)

32 
	#AR_PHY_TX_GAIN_S
 12

	)

34 
	#AR_PHY_CLC_TBL1
 0xa35c

	)

35 
	#AR_PHY_CLC_I0
 0x07ff0000

	)

36 
	#AR_PHY_CLC_I0_S
 16

	)

37 
	#AR_PHY_CLC_Q0
 0x0000ffd0

	)

38 
	#AR_PHY_CLC_Q0_S
 5

	)

40 
	#ANTSWAP_AB
 0x0001

	)

41 
	#REDUCE_CHAIN_0
 0x00000050

	)

42 
	#REDUCE_CHAIN_1
 0x00000051

	)

43 
	#AR_PHY_CHIP_ID
 0x9818

	)

45 
	#AR_PHY_TIMING11_SPUR_FREQ_SD
 0x3FF00000

	)

46 
	#AR_PHY_TIMING11_SPUR_FREQ_SD_S
 20

	)

48 
	#AR_PHY_PLL_CONTROL
 0x16180

	)

49 
	#AR_PHY_PLL_MODE
 0x16184

	)

51 
	#AR_PHY_USB_CTRL1
 0x16c84

	)

52 
	#AR_PHY_USB_CTRL2
 0x16c88

	)

54 
	e©h9k_™t_div_comb_ a_c⁄f
 {

55 
	mATH_ANT_DIV_COMB_LNA1_MINUS_LNA2
,

56 
	mATH_ANT_DIV_COMB_LNA2
,

57 
	mATH_ANT_DIV_COMB_LNA1
,

58 
	mATH_ANT_DIV_COMB_LNA1_PLUS_LNA2
,

	@recv.c

17 
	~<löux/dma-m≠pög.h
>

18 
	~"©h9k.h
"

19 
	~"¨9003_mac.h
"

21 
	#SKB_CB_ATHBUF
(
__skb
Ë(*((
©h_rxbuf
 **)__skb->
cb
))

	)

23 
ölöe
 
boﬁ
 
	$©h9k_check_auto_¶ìp
(
©h_so·c
 *
sc
)

25  
sc
->
ps_íabÀd
 &&

26 (
sc
->
sc_ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_AUTOSLEEP
);

27 
	}
}

37 
	$©h_rx_buf_lök
(
©h_so·c
 *
sc
, 
©h_rxbuf
 *
bf
,

38 
boﬁ
 
Êush
)

40 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

41 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

42 
©h_desc
 *
ds
;

43 
sk_buff
 *
skb
;

45 
ds
 = 
bf
->
bf_desc
;

46 
ds
->
ds_lök
 = 0;

47 
ds
->
ds_d©a
 = 
bf
->
bf_buf_addr
;

50 
skb
 = 
bf
->
bf_mpdu
;

51 
	`BUG_ON
(
skb
 =
NULL
);

52 
ds
->
ds_vd©a
 = 
skb
->
d©a
;

59 
	`©h9k_hw_£tu¥xdesc
(
ah
, 
ds
,

60 
comm⁄
->
rx_bufsize
,

63 i‡(
sc
->
rx
.
rxlök
)

64 *
sc
->
rx
.
rxlök
 = 
bf
->
bf_daddr
;

65 i‡(!
Êush
)

66 
	`©h9k_hw_puåxbuf
(
ah
, 
bf
->
bf_daddr
);

68 
sc
->
rx
.
rxlök
 = &
ds
->
ds_lök
;

69 
	}
}

71 
	$©h_rx_buf_ªlök
(
©h_so·c
 *
sc
, 
©h_rxbuf
 *
bf
,

72 
boﬁ
 
Êush
)

74 i‡(
sc
->
rx
.
buf_hﬁd
)

75 
	`©h_rx_buf_lök
(
sc
, sc->
rx
.
buf_hﬁd
, 
Êush
);

77 
sc
->
rx
.
buf_hﬁd
 = 
bf
;

78 
	}
}

80 
	$©h_£tdeÁ¡í«
(
©h_so·c
 *
sc
, 
u32
 
™ã¬a
)

83 
	`©h9k_hw_£è¡í«
(
sc
->
sc_ah
, 
™ã¬a
);

84 
sc
->
rx
.
deÁ¡
 = 
™ã¬a
;

85 
sc
->
rx
.
rxŸhî™t
 = 0;

86 
	}
}

88 
	$©h_›mode_öô
(
©h_so·c
 *
sc
)

90 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

91 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

93 
u32
 
rfût
, 
mfût
[2];

96 
rfût
 = 
	`©h_ˇl¸xfûãr
(
sc
);

97 
	`©h9k_hw_£åxfûãr
(
ah
, 
rfût
);

100 
	`©h_hw_£tbssidmask
(
comm⁄
);

103 
	`©h9k_hw_£t›mode
(
ah
);

106 
mfût
[0] = mfilt[1] = ~0;

107 
	`©h9k_hw_£tmˇ°fûãr
(
ah
, 
mfût
[0], mfilt[1]);

108 
	}
}

110 
boﬁ
 
	$©h_rx_edma_buf_lök
(
©h_so·c
 *
sc
,

111 
©h9k_rx_qty≥
 
qty≥
)

113 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

114 
©h_rx_edma
 *
rx_edma
;

115 
sk_buff
 *
skb
;

116 
©h_rxbuf
 *
bf
;

118 
rx_edma
 = &
sc
->
rx
.rx_edma[
qty≥
];

119 i‡(
	`skb_queue_Àn
(&
rx_edma
->
rx_fifo
Ë>rx_edma->
rx_fifo_hwsize
)

120  
Ál£
;

122 
bf
 = 
	`li°_fú°_íåy
(&
sc
->
rx
.
rxbuf
, 
©h_rxbuf
, 
li°
);

123 
	`li°_dñ_öô
(&
bf
->
li°
);

125 
skb
 = 
bf
->
bf_mpdu
;

127 
	`mem£t
(
skb
->
d©a
, 0, 
ah
->
ˇps
.
rx_°©us_Àn
);

128 
	`dma_sync_sögÀ_f‹_devi˚
(
sc
->
dev
, 
bf
->
bf_buf_addr
,

129 
ah
->
ˇps
.
rx_°©us_Àn
, 
DMA_TO_DEVICE
);

131 
	`SKB_CB_ATHBUF
(
skb
Ë
bf
;

132 
	`©h9k_hw_addrxbuf_edma
(
ah
, 
bf
->
bf_buf_addr
, 
qty≥
);

133 
	`__skb_queue_èû
(&
rx_edma
->
rx_fifo
, 
skb
);

135  
åue
;

136 
	}
}

138 
	$©h_rx_addbuf„r_edma
(
©h_so·c
 *
sc
,

139 
©h9k_rx_qty≥
 
qty≥
)

141 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

142 
©h_rxbuf
 *
bf
, *
tbf
;

144 i‡(
	`li°_em±y
(&
sc
->
rx
.
rxbuf
)) {

145 
	`©h_dbg
(
comm⁄
, 
QUEUE
, "No freeÑx bufávailable\n");

149 
	`li°_f‹_óch_íåy_ß„
(
bf
, 
tbf
, &
sc
->
rx
.
rxbuf
, 
li°
)

150 i‡(!
	`©h_rx_edma_buf_lök
(
sc
, 
qty≥
))

153 
	}
}

155 
	$©h_rx_ªmove_buf„r
(
©h_so·c
 *
sc
,

156 
©h9k_rx_qty≥
 
qty≥
)

158 
©h_rxbuf
 *
bf
;

159 
©h_rx_edma
 *
rx_edma
;

160 
sk_buff
 *
skb
;

162 
rx_edma
 = &
sc
->
rx
.rx_edma[
qty≥
];

164 (
skb
 = 
	`__skb_dequeue
(&
rx_edma
->
rx_fifo
)Ë!
NULL
) {

165 
bf
 = 
	`SKB_CB_ATHBUF
(
skb
);

166 
	`BUG_ON
(!
bf
);

167 
	`li°_add_èû
(&
bf
->
li°
, &
sc
->
rx
.
rxbuf
);

169 
	}
}

171 
	$©h_rx_edma_˛ónup
(
©h_so·c
 *
sc
)

173 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

174 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

175 
©h_rxbuf
 *
bf
;

177 
	`©h_rx_ªmove_buf„r
(
sc
, 
ATH9K_RX_QUEUE_LP
);

178 
	`©h_rx_ªmove_buf„r
(
sc
, 
ATH9K_RX_QUEUE_HP
);

180 
	`li°_f‹_óch_íåy
(
bf
, &
sc
->
rx
.
rxbuf
, 
li°
) {

181 i‡(
bf
->
bf_mpdu
) {

182 
	`dma_unm≠_sögÀ
(
sc
->
dev
, 
bf
->
bf_buf_addr
,

183 
comm⁄
->
rx_bufsize
,

184 
DMA_BIDIRECTIONAL
);

185 
	`dev_k‰ì_skb_™y
(
bf
->
bf_mpdu
);

186 
bf
->
bf_buf_addr
 = 0;

187 
bf
->
bf_mpdu
 = 
NULL
;

190 
	}
}

192 
	$©h_rx_edma_öô_queue
(
©h_rx_edma
 *
rx_edma
, 
size
)

194 
	`__skb_queue_hód_öô
(&
rx_edma
->
rx_fifo
);

195 
rx_edma
->
rx_fifo_hwsize
 = 
size
;

196 
	}
}

198 
	$©h_rx_edma_öô
(
©h_so·c
 *
sc
, 
nbufs
)

200 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

201 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

202 
sk_buff
 *
skb
;

203 
©h_rxbuf
 *
bf
;

204 
îr‹
 = 0, 
i
;

205 
u32
 
size
;

207 
	`©h9k_hw_£t_rx_bufsize
(
ah
, 
comm⁄
->
rx_bufsize
 -

208 
ah
->
ˇps
.
rx_°©us_Àn
);

210 
	`©h_rx_edma_öô_queue
(&
sc
->
rx
.
rx_edma
[
ATH9K_RX_QUEUE_LP
],

211 
ah
->
ˇps
.
rx_Õ_qdïth
);

212 
	`©h_rx_edma_öô_queue
(&
sc
->
rx
.
rx_edma
[
ATH9K_RX_QUEUE_HP
],

213 
ah
->
ˇps
.
rx_hp_qdïth
);

215 
size
 = (
©h_rxbuf
Ë* 
nbufs
;

216 
bf
 = 
	`devm_kzÆloc
(
sc
->
dev
, 
size
, 
GFP_KERNEL
);

217 i‡(!
bf
)

218  -
ENOMEM
;

220 
	`INIT_LIST_HEAD
(&
sc
->
rx
.
rxbuf
);

222 
i
 = 0; i < 
nbufs
; i++, 
bf
++) {

223 
skb
 = 
	`©h_rxbuf_Æloc
(
comm⁄
, comm⁄->
rx_bufsize
, 
GFP_KERNEL
);

224 i‡(!
skb
) {

225 
îr‹
 = -
ENOMEM
;

226 
rx_öô_Áû
;

229 
	`mem£t
(
skb
->
d©a
, 0, 
comm⁄
->
rx_bufsize
);

230 
bf
->
bf_mpdu
 = 
skb
;

232 
bf
->
bf_buf_addr
 = 
	`dma_m≠_sögÀ
(
sc
->
dev
, 
skb
->
d©a
,

233 
comm⁄
->
rx_bufsize
,

234 
DMA_BIDIRECTIONAL
);

235 i‡(
	`u∆ikñy
(
	`dma_m≠pög_îr‹
(
sc
->
dev
,

236 
bf
->
bf_buf_addr
))) {

237 
	`dev_k‰ì_skb_™y
(
skb
);

238 
bf
->
bf_mpdu
 = 
NULL
;

239 
bf
->
bf_buf_addr
 = 0;

240 
	`©h_îr
(
comm⁄
,

242 
îr‹
 = -
ENOMEM
;

243 
rx_öô_Áû
;

246 
	`li°_add_èû
(&
bf
->
li°
, &
sc
->
rx
.
rxbuf
);

251 
rx_öô_Áû
:

252 
	`©h_rx_edma_˛ónup
(
sc
);

253  
îr‹
;

254 
	}
}

256 
	$©h_edma_°¨t_ªcv
(
©h_so·c
 *
sc
)

258 
	`©h9k_hw_rxía
(
sc
->
sc_ah
);

259 
	`©h_rx_addbuf„r_edma
(
sc
, 
ATH9K_RX_QUEUE_HP
);

260 
	`©h_rx_addbuf„r_edma
(
sc
, 
ATH9K_RX_QUEUE_LP
);

261 
	`©h_›mode_öô
(
sc
);

262 
	`©h9k_hw_°¨çcuª˚ive
(
sc
->
sc_ah
, !!(sc->
hw
->
c⁄f
.
Êags
 & 
IEEE80211_CONF_OFFCHANNEL
));

263 
	}
}

265 
	$©h_edma_°›_ªcv
(
©h_so·c
 *
sc
)

267 
	`©h_rx_ªmove_buf„r
(
sc
, 
ATH9K_RX_QUEUE_HP
);

268 
	`©h_rx_ªmove_buf„r
(
sc
, 
ATH9K_RX_QUEUE_LP
);

269 
	}
}

271 
	$©h_rx_öô
(
©h_so·c
 *
sc
, 
nbufs
)

273 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

274 
sk_buff
 *
skb
;

275 
©h_rxbuf
 *
bf
;

276 
îr‹
 = 0;

278 
	`•ö_lock_öô
(&
sc
->
sc_pcu_lock
);

280 
comm⁄
->
rx_bufsize
 = 
IEEE80211_MAX_MPDU_LEN
 / 2 +

281 
sc
->
sc_ah
->
ˇps
.
rx_°©us_Àn
;

283 i‡(
sc
->
sc_ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_EDMA
)

284  
	`©h_rx_edma_öô
(
sc
, 
nbufs
);

286 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "cachelsz %uÑxbufsize %u\n",

287 
comm⁄
->
ˇchñsz
, comm⁄->
rx_bufsize
);

291 
îr‹
 = 
	`©h_descdma_£tup
(
sc
, &sc->
rx
.
rxdma
, &sc->rx.
rxbuf
,

292 "rx", 
nbufs
, 1, 0);

293 i‡(
îr‹
 != 0) {

294 
	`©h_îr
(
comm⁄
,

296 
îr‹
);

297 
îr
;

300 
	`li°_f‹_óch_íåy
(
bf
, &
sc
->
rx
.
rxbuf
, 
li°
) {

301 
skb
 = 
	`©h_rxbuf_Æloc
(
comm⁄
, comm⁄->
rx_bufsize
,

302 
GFP_KERNEL
);

303 i‡(
skb
 =
NULL
) {

304 
îr‹
 = -
ENOMEM
;

305 
îr
;

308 
bf
->
bf_mpdu
 = 
skb
;

309 
bf
->
bf_buf_addr
 = 
	`dma_m≠_sögÀ
(
sc
->
dev
, 
skb
->
d©a
,

310 
comm⁄
->
rx_bufsize
,

311 
DMA_FROM_DEVICE
);

312 i‡(
	`u∆ikñy
(
	`dma_m≠pög_îr‹
(
sc
->
dev
,

313 
bf
->
bf_buf_addr
))) {

314 
	`dev_k‰ì_skb_™y
(
skb
);

315 
bf
->
bf_mpdu
 = 
NULL
;

316 
bf
->
bf_buf_addr
 = 0;

317 
	`©h_îr
(
comm⁄
,

319 
îr‹
 = -
ENOMEM
;

320 
îr
;

323 
sc
->
rx
.
rxlök
 = 
NULL
;

324 
îr
:

325 i‡(
îr‹
)

326 
	`©h_rx_˛ónup
(
sc
);

328  
îr‹
;

329 
	}
}

331 
	$©h_rx_˛ónup
(
©h_so·c
 *
sc
)

333 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

334 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

335 
sk_buff
 *
skb
;

336 
©h_rxbuf
 *
bf
;

338 i‡(
sc
->
sc_ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_EDMA
) {

339 
	`©h_rx_edma_˛ónup
(
sc
);

343 
	`li°_f‹_óch_íåy
(
bf
, &
sc
->
rx
.
rxbuf
, 
li°
) {

344 
skb
 = 
bf
->
bf_mpdu
;

345 i‡(
skb
) {

346 
	`dma_unm≠_sögÀ
(
sc
->
dev
, 
bf
->
bf_buf_addr
,

347 
comm⁄
->
rx_bufsize
,

348 
DMA_FROM_DEVICE
);

349 
	`dev_k‰ì_skb
(
skb
);

350 
bf
->
bf_buf_addr
 = 0;

351 
bf
->
bf_mpdu
 = 
NULL
;

354 
	}
}

375 
u32
 
	$©h_ˇl¸xfûãr
(
©h_so·c
 *
sc
)

377 
u32
 
rfût
;

379 i‡(
	`c⁄fig_íabÀd
(
CPTCFG_ATH9K_TX99
))

382 
rfût
 = 
ATH9K_RX_FILTER_UCAST
 | 
ATH9K_RX_FILTER_BCAST


383 | 
ATH9K_RX_FILTER_MCAST
;

386 i‡(
sc
->
hw
->
c⁄f
.
ød¨_íabÀd
)

387 
rfût
 |
ATH9K_RX_FILTER_PHYRADAR
 | 
ATH9K_RX_FILTER_PHYERR
;

389 i‡(
sc
->
rx
.
rxfûãr
 & 
FIF_PROBE_REQ
)

390 
rfût
 |
ATH9K_RX_FILTER_PROBEREQ
;

397 i‡(
sc
->
sc_ah
->
is_m⁄ô‹ög
)

398 
rfût
 |
ATH9K_RX_FILTER_PROM
;

400 i‡(
sc
->
rx
.
rxfûãr
 & 
FIF_CONTROL
)

401 
rfût
 |
ATH9K_RX_FILTER_CONTROL
;

403 i‡((
sc
->
sc_ah
->
›mode
 =
NL80211_IFTYPE_STATION
) &&

404 (
sc
->
nvifs
 <= 1) &&

405 !(
sc
->
rx
.
rxfûãr
 & 
FIF_BCN_PRBRESP_PROMISC
))

406 
rfût
 |
ATH9K_RX_FILTER_MYBEACON
;

408 
rfût
 |
ATH9K_RX_FILTER_BEACON
;

410 i‡((
sc
->
sc_ah
->
›mode
 =
NL80211_IFTYPE_AP
) ||

411 (
sc
->
rx
.
rxfûãr
 & 
FIF_PSPOLL
))

412 
rfût
 |
ATH9K_RX_FILTER_PSPOLL
;

414 i‡(
	`c⁄f_is_ht
(&
sc
->
hw
->
c⁄f
))

415 
rfût
 |
ATH9K_RX_FILTER_COMP_BAR
;

417 i‡(
sc
->
nvifs
 > 1 || (sc->
rx
.
rxfûãr
 & 
FIF_OTHER_BSS
)) {

419 i‡(
sc
->
sc_ah
->
hw_vîsi⁄
.
macVîsi⁄
 <
AR_SREV_VERSION_9160
)

420 
rfût
 |
ATH9K_RX_FILTER_PROM
;

421 
rfût
 |
ATH9K_RX_FILTER_MCAST_BCAST_ALL
;

424 i‡(
	`AR_SREV_9550
(
sc
->
sc_ah
Ë|| 
	`AR_SREV_9531
(sc->sc_ah))

425 
rfût
 |
ATH9K_RX_FILTER_4ADDRESS
;

427  
rfût
;

429 
	}
}

431 
	$©h_°¨åecv
(
©h_so·c
 *
sc
)

433 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

434 
©h_rxbuf
 *
bf
, *
tbf
;

436 i‡(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_EDMA
) {

437 
	`©h_edma_°¨t_ªcv
(
sc
);

441 i‡(
	`li°_em±y
(&
sc
->
rx
.
rxbuf
))

442 
°¨t_ªcv
;

444 
sc
->
rx
.
buf_hﬁd
 = 
NULL
;

445 
sc
->
rx
.
rxlök
 = 
NULL
;

446 
	`li°_f‹_óch_íåy_ß„
(
bf
, 
tbf
, &
sc
->
rx
.
rxbuf
, 
li°
) {

447 
	`©h_rx_buf_lök
(
sc
, 
bf
, 
Ál£
);

451 i‡(
	`li°_em±y
(&
sc
->
rx
.
rxbuf
))

452 
°¨t_ªcv
;

454 
bf
 = 
	`li°_fú°_íåy
(&
sc
->
rx
.
rxbuf
, 
©h_rxbuf
, 
li°
);

455 
	`©h9k_hw_puåxbuf
(
ah
, 
bf
->
bf_daddr
);

456 
	`©h9k_hw_rxía
(
ah
);

458 
°¨t_ªcv
:

459 
	`©h_›mode_öô
(
sc
);

460 
	`©h9k_hw_°¨çcuª˚ive
(
ah
, !!(
sc
->
hw
->
c⁄f
.
Êags
 & 
IEEE80211_CONF_OFFCHANNEL
));

463 
	}
}

465 
	$©h_Êushªcv
(
©h_so·c
 *
sc
)

467 i‡(
sc
->
sc_ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_EDMA
)

468 
	`©h_rx_èskÀt
(
sc
, 1, 
åue
);

469 
	`©h_rx_èskÀt
(
sc
, 1, 
Ál£
);

470 
	}
}

472 
boﬁ
 
	$©h_°›ªcv
(
©h_so·c
 *
sc
)

474 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

475 
boﬁ
 
°›≥d
, 
ª£t
 = 
Ál£
;

477 
	`©h9k_hw_ab‹çcuªcv
(
ah
);

478 
	`©h9k_hw_£åxfûãr
(
ah
, 0);

479 
°›≥d
 = 
	`©h9k_hw_°›dm¨ecv
(
ah
, &
ª£t
);

481 
	`©h_Êushªcv
(
sc
);

483 i‡(
sc
->
sc_ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_EDMA
)

484 
	`©h_edma_°›_ªcv
(
sc
);

486 
sc
->
rx
.
rxlök
 = 
NULL
;

488 i‡(!(
ah
->
ah_Êags
 & 
AH_UNPLUGGED
) &&

489 
	`u∆ikñy
(!
°›≥d
)) {

490 
	`©h_îr
(
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
),

493 
	`ATH_DBG_WARN_ON_ONCE
(!
°›≥d
);

495  
°›≥d
 && !
ª£t
;

496 
	}
}

498 
boﬁ
 
	$©h_bóc⁄_dtim_≥ndög_ˇb
(
sk_buff
 *
skb
)

501 
õì80211_mgmt
 *
mgmt
;

502 
u8
 *
pos
, *
íd
, 
id
, 
ñí
;

503 
õì80211_tim_õ
 *
tim
;

505 
mgmt
 = (
õì80211_mgmt
 *)
skb
->
d©a
;

506 
pos
 = 
mgmt
->
u
.
bóc⁄
.
v¨übÀ
;

507 
íd
 = 
skb
->
d©a
 + skb->
Àn
;

509 
pos
 + 2 < 
íd
) {

510 
id
 = *
pos
++;

511 
ñí
 = *
pos
++;

512 i‡(
pos
 + 
ñí
 > 
íd
)

515 i‡(
id
 =
WLAN_EID_TIM
) {

516 i‡(
ñí
 < (*
tim
))

518 
tim
 = (
õì80211_tim_õ
 *Ë
pos
;

519 i‡(
tim
->
dtim_cou¡
 != 0)

521  
tim
->
bôm≠_˘æ
 & 0x01;

524 
pos
 +
ñí
;

527  
Ál£
;

528 
	}
}

530 
	$©h_rx_ps_bóc⁄
(
©h_so·c
 *
sc
, 
sk_buff
 *
skb
)

532 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

534 i‡(
skb
->
Àn
 < 24 + 8 + 2 + 2)

537 
sc
->
ps_Êags
 &~
PS_WAIT_FOR_BEACON
;

539 i‡(
sc
->
ps_Êags
 & 
PS_BEACON_SYNC
) {

540 
sc
->
ps_Êags
 &~
PS_BEACON_SYNC
;

541 
	`©h_dbg
(
comm⁄
, 
PS
,

543 i‡(!(
	`WARN_ON_ONCE
(
sc
->
cur_bóc⁄_c⁄f
.
bóc⁄_öãrvÆ
 == 0)))

544 
	`©h9k_£t_bóc⁄
(
sc
);

545 i‡(
sc
->
p2p_ps_vif
)

546 
	`©h9k_upd©e_p2p_ps
(
sc
, sc->
p2p_ps_vif
->
vif
);

549 i‡(
	`©h_bóc⁄_dtim_≥ndög_ˇb
(
skb
)) {

557 
	`©h_dbg
(
comm⁄
, 
PS
,

559 
sc
->
ps_Êags
 |
PS_WAIT_FOR_CAB
 | 
PS_WAIT_FOR_BEACON
;

563 i‡(
sc
->
ps_Êags
 & 
PS_WAIT_FOR_CAB
) {

569 
sc
->
ps_Êags
 &~
PS_WAIT_FOR_CAB
;

570 
	`©h_dbg
(
comm⁄
, 
PS
, "PS wait for CAB framesÅimed out\n");

572 
	}
}

574 
	$©h_rx_ps
(
©h_so·c
 *
sc
, 
sk_buff
 *
skb
, 
boﬁ
 
mybóc⁄
)

576 
õì80211_hdr
 *
hdr
;

577 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

579 
hdr
 = (
õì80211_hdr
 *)
skb
->
d©a
;

582 i‡(((
sc
->
ps_Êags
 & 
PS_WAIT_FOR_BEACON
Ë|| 
	`©h9k_check_auto_¶ìp
(sc))

583 && 
mybóc⁄
) {

584 
	`©h_rx_ps_bóc⁄
(
sc
, 
skb
);

585 } i‡((
sc
->
ps_Êags
 & 
PS_WAIT_FOR_CAB
) &&

586 (
	`õì80211_is_d©a
(
hdr
->
‰ame_c⁄åﬁ
) ||

587 
	`õì80211_is_a˘i⁄
(
hdr
->
‰ame_c⁄åﬁ
)) &&

588 
	`is_mu…iˇ°_ëhî_addr
(
hdr
->
addr1
) &&

589 !
	`õì80211_has_m‹ed©a
(
hdr
->
‰ame_c⁄åﬁ
)) {

594 
sc
->
ps_Êags
 &~(
PS_WAIT_FOR_CAB
 | 
PS_WAIT_FOR_BEACON
);

595 
	`©h_dbg
(
comm⁄
, 
PS
,

597 } i‡((
sc
->
ps_Êags
 & 
PS_WAIT_FOR_PSPOLL_DATA
) &&

598 !
	`is_mu…iˇ°_ëhî_addr
(
hdr
->
addr1
) &&

599 !
	`õì80211_has_m‹e‰ags
(
hdr
->
‰ame_c⁄åﬁ
)) {

600 
sc
->
ps_Êags
 &~
PS_WAIT_FOR_PSPOLL_DATA
;

601 
	`©h_dbg
(
comm⁄
, 
PS
,

603 
sc
->
ps_Êags
 & (
PS_WAIT_FOR_BEACON
 |

604 
PS_WAIT_FOR_CAB
 |

605 
PS_WAIT_FOR_PSPOLL_DATA
 |

606 
PS_WAIT_FOR_TX_ACK
));

608 
	}
}

610 
boﬁ
 
	$©h_edma_gë_buf„rs
(
©h_so·c
 *
sc
,

611 
©h9k_rx_qty≥
 
qty≥
,

612 
©h_rx_°©us
 *
rs
,

613 
©h_rxbuf
 **
de°
)

615 
©h_rx_edma
 *
rx_edma
 = &
sc
->
rx
.rx_edma[
qty≥
];

616 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

617 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

618 
sk_buff
 *
skb
;

619 
©h_rxbuf
 *
bf
;

620 
ªt
;

622 
skb
 = 
	`skb_≥ek
(&
rx_edma
->
rx_fifo
);

623 i‡(!
skb
)

624  
Ál£
;

626 
bf
 = 
	`SKB_CB_ATHBUF
(
skb
);

627 
	`BUG_ON
(!
bf
);

629 
	`dma_sync_sögÀ_f‹_˝u
(
sc
->
dev
, 
bf
->
bf_buf_addr
,

630 
comm⁄
->
rx_bufsize
, 
DMA_FROM_DEVICE
);

632 
ªt
 = 
	`©h9k_hw_¥o˚ss_rxdesc_edma
(
ah
, 
rs
, 
skb
->
d©a
);

633 i‡(
ªt
 =-
EINPROGRESS
) {

635 
	`dma_sync_sögÀ_f‹_devi˚
(
sc
->
dev
, 
bf
->
bf_buf_addr
,

636 
comm⁄
->
rx_bufsize
, 
DMA_FROM_DEVICE
);

637  
Ál£
;

640 
	`__skb_u∆ök
(
skb
, &
rx_edma
->
rx_fifo
);

641 i‡(
ªt
 =-
EINVAL
) {

643 
	`li°_add_èû
(&
bf
->
li°
, &
sc
->
rx
.
rxbuf
);

644 
	`©h_rx_edma_buf_lök
(
sc
, 
qty≥
);

646 
skb
 = 
	`skb_≥ek
(&
rx_edma
->
rx_fifo
);

647 i‡(
skb
) {

648 
bf
 = 
	`SKB_CB_ATHBUF
(
skb
);

649 
	`BUG_ON
(!
bf
);

651 
	`__skb_u∆ök
(
skb
, &
rx_edma
->
rx_fifo
);

652 
	`li°_add_èû
(&
bf
->
li°
, &
sc
->
rx
.
rxbuf
);

653 
	`©h_rx_edma_buf_lök
(
sc
, 
qty≥
);

656 
bf
 = 
NULL
;

659 *
de°
 = 
bf
;

660  
åue
;

661 
	}
}

663 
©h_rxbuf
 *
	$©h_edma_gë_√xt_rx_buf
(
©h_so·c
 *
sc
,

664 
©h_rx_°©us
 *
rs
,

665 
©h9k_rx_qty≥
 
qty≥
)

667 
©h_rxbuf
 *
bf
 = 
NULL
;

669 
	`©h_edma_gë_buf„rs
(
sc
, 
qty≥
, 
rs
, &
bf
)) {

670 i‡(!
bf
)

673  
bf
;

675  
NULL
;

676 
	}
}

678 
©h_rxbuf
 *
	$©h_gë_√xt_rx_buf
(
©h_so·c
 *
sc
,

679 
©h_rx_°©us
 *
rs
)

681 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

682 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

683 
©h_desc
 *
ds
;

684 
©h_rxbuf
 *
bf
;

685 
ªt
;

687 i‡(
	`li°_em±y
(&
sc
->
rx
.
rxbuf
)) {

688 
sc
->
rx
.
rxlök
 = 
NULL
;

689  
NULL
;

692 
bf
 = 
	`li°_fú°_íåy
(&
sc
->
rx
.
rxbuf
, 
©h_rxbuf
, 
li°
);

693 i‡(
bf
 =
sc
->
rx
.
buf_hﬁd
)

694  
NULL
;

696 
ds
 = 
bf
->
bf_desc
;

709 
ªt
 = 
	`©h9k_hw_rx¥ocdesc
(
ah
, 
ds
, 
rs
);

710 i‡(
ªt
 =-
EINPROGRESS
) {

711 
©h_rx_°©us
 
ås
;

712 
©h_rxbuf
 *
tbf
;

713 
©h_desc
 *
tds
;

715 
	`mem£t
(&
ås
, 0, (trs));

716 i‡(
	`li°_is_œ°
(&
bf
->
li°
, &
sc
->
rx
.
rxbuf
)) {

717 
sc
->
rx
.
rxlök
 = 
NULL
;

718  
NULL
;

721 
tbf
 = 
	`li°_íåy
(
bf
->
li°
.
√xt
, 
©h_rxbuf
,Üist);

734 
tds
 = 
tbf
->
bf_desc
;

735 
ªt
 = 
	`©h9k_hw_rx¥ocdesc
(
ah
, 
tds
, &
ås
);

736 i‡(
ªt
 =-
EINPROGRESS
)

737  
NULL
;

743 
ªt
 = 
	`©h9k_hw_rx¥ocdesc
(
ah
, 
ds
, 
rs
);

744 i‡(
ªt
 =-
EINPROGRESS
) {

749 
rs
->
rs_d©Æí
 = 0;

750 
rs
->
rs_m‹e
 = 
åue
;

754 
	`li°_dñ
(&
bf
->
li°
);

755 i‡(!
bf
->
bf_mpdu
)

756  
bf
;

763 
	`dma_sync_sögÀ_f‹_˝u
(
sc
->
dev
, 
bf
->
bf_buf_addr
,

764 
comm⁄
->
rx_bufsize
,

765 
DMA_FROM_DEVICE
);

767  
bf
;

768 
	}
}

770 
	$©h9k_¥o˚ss_tsf
(
©h_rx_°©us
 *
rs
,

771 
õì80211_rx_°©us
 *
rxs
,

772 
u64
 
tsf
)

774 
u32
 
tsf_lowî
 = 
tsf
 & 0xffffffff;

776 
rxs
->
ma˘ime
 = (
tsf
 & ~0xffffffffULLË| 
rs
->
rs_t°amp
;

777 i‡(
rs
->
rs_t°amp
 > 
tsf_lowî
 &&

778 
	`u∆ikñy
(
rs
->
rs_t°amp
 - 
tsf_lowî
 > 0x10000000))

779 
rxs
->
ma˘ime
 -= 0x100000000ULL;

781 i‡(
rs
->
rs_t°amp
 < 
tsf_lowî
 &&

782 
	`u∆ikñy
(
tsf_lowî
 - 
rs
->
rs_t°amp
 > 0x10000000))

783 
rxs
->
ma˘ime
 += 0x100000000ULL;

784 
	}
}

791 
	$©h9k_rx_skb_¥ïro˚ss
(
©h_so·c
 *
sc
,

792 
sk_buff
 *
skb
,

793 
©h_rx_°©us
 *
rx_°©s
,

794 
õì80211_rx_°©us
 *
rx_°©us
,

795 
boﬁ
 *
de¸y±_îr‹
, 
u64
 
tsf
)

797 
õì80211_hw
 *
hw
 = 
sc
->hw;

798 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

799 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

800 
õì80211_hdr
 *
hdr
;

801 
boﬁ
 
disˇrd_cuºít
 = 
sc
->
rx
.
disˇrd_√xt
;

807 i‡(
disˇrd_cuºít
)

808 
c‹ru±
;

810 
sc
->
rx
.
disˇrd_√xt
 = 
Ál£
;

815 i‡(!
rx_°©s
->
rs_d©Æí
) {

816 
	`RX_STAT_INC
(
rx_Àn_îr
);

817 
c‹ru±
;

825 i‡(
rx_°©s
->
rs_d©Æí
 > (
comm⁄
->
rx_bufsize
 - 
ah
->
ˇps
.
rx_°©us_Àn
)) {

826 
	`RX_STAT_INC
(
rx_Àn_îr
);

827 
c‹ru±
;

831 i‡(
rx_°©s
->
rs_m‹e
)

841 i‡(
rx_°©s
->
rs_°©us
 & 
ATH9K_RXERR_CORRUPT_DESC
)

842 
c‹ru±
;

844 
hdr
 = (
õì80211_hdr
 *Ë(
skb
->
d©a
 + 
ah
->
ˇps
.
rx_°©us_Àn
);

846 
	`©h9k_¥o˚ss_tsf
(
rx_°©s
, 
rx_°©us
, 
tsf
);

847 
	`©h_debug_°©_rx
(
sc
, 
rx_°©s
);

853 i‡(
rx_°©s
->
rs_°©us
 & 
ATH9K_RXERR_PHY
) {

854 
	`©h9k_dfs_¥o˚ss_phyîr
(
sc
, 
hdr
, 
rx_°©s
, 
rx_°©us
->
ma˘ime
);

855 i‡(
	`©h_¥o˚ss_f·
(
sc
, 
hdr
, 
rx_°©s
, 
rx_°©us
->
ma˘ime
))

856 
	`RX_STAT_INC
(
rx_•e˘øl
);

858  -
EINVAL
;

865 i‡(!
	`©h9k_cmn_rx_ac˚±
(
comm⁄
, 
hdr
, 
rx_°©us
, 
rx_°©s
, 
de¸y±_îr‹
, 
sc
->
rx
.
rxfûãr
))

866  -
EINVAL
;

868 i‡(
	`©h_is_mybóc⁄
(
comm⁄
, 
hdr
)) {

869 
	`RX_STAT_INC
(
rx_bóc⁄s
);

870 
rx_°©s
->
is_mybóc⁄
 = 
åue
;

876 i‡(
	`WARN_ON
(!
ah
->
curch™
))

877  -
EINVAL
;

879 i‡(
	`©h9k_cmn_¥o˚ss_øã
(
comm⁄
, 
hw
, 
rx_°©s
, 
rx_°©us
)) {

884 
	`©h_dbg
(
comm⁄
, 
ANY
, "unsupported hw bitrate detected 0x%02x using 1 Mbit\n",

885 
rx_°©s
->
rs_øã
);

886 
	`RX_STAT_INC
(
rx_øã_îr
);

887  -
EINVAL
;

890 
	`©h9k_cmn_¥o˚ss_rssi
(
comm⁄
, 
hw
, 
rx_°©s
, 
rx_°©us
);

892 
rx_°©us
->
b™d
 = 
ah
->
curch™
->
ch™
->band;

893 
rx_°©us
->
‰eq
 = 
ah
->
curch™
->
ch™
->
˚¡î_‰eq
;

894 
rx_°©us
->
™ã¬a
 = 
rx_°©s
->
rs_™ã¬a
;

895 
rx_°©us
->
Êag
 |
RX_FLAG_MACTIME_END
;

897 #ifde‡
CPTCFG_ATH9K_BTCOEX_SUPPORT


898 i‡(
	`õì80211_is_d©a_¥e£¡
(
hdr
->
‰ame_c⁄åﬁ
) &&

899 !
	`õì80211_is_qos_nuŒfunc
(
hdr
->
‰ame_c⁄åﬁ
))

900 
sc
->
rx
.
num_pkts
++;

905 
c‹ru±
:

906 
sc
->
rx
.
disˇrd_√xt
 = 
rx_°©s
->
rs_m‹e
;

907  -
EINVAL
;

908 
	}
}

920 
	$©h9k_™ã¬a_check
(
©h_so·c
 *
sc
,

921 
©h_rx_°©us
 *
rs
)

923 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

924 
©h9k_hw_ˇ∑bûôõs
 *
pC≠
 = &
ah
->
ˇps
;

925 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

927 i‡(!(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_ANT_DIV_COMB
))

934 i‡(
sc
->
rx
.
deÁ¡
 !
rs
->
rs_™ã¬a
) {

935 i‡(++
sc
->
rx
.
rxŸhî™t
 >= 3)

936 
	`©h_£tdeÁ¡í«
(
sc
, 
rs
->
rs_™ã¬a
);

938 
sc
->
rx
.
rxŸhî™t
 = 0;

941 i‡(
pC≠
->
hw_ˇps
 & 
ATH9K_HW_CAP_BT_ANT_DIV
) {

942 i‡(
comm⁄
->
bt_™t_divîsôy
)

943 
	`©h_™t_comb_sˇn
(
sc
, 
rs
);

945 
	`©h_™t_comb_sˇn
(
sc
, 
rs
);

947 
	}
}

949 
	$©h9k_≠∂y_ampdu_dëaûs
(
©h_so·c
 *
sc
,

950 
©h_rx_°©us
 *
rs
, 
õì80211_rx_°©us
 *
rxs
)

952 i‡(
rs
->
rs_ißggr
) {

953 
rxs
->
Êag
 |
RX_FLAG_AMPDU_DETAILS
 | 
RX_FLAG_AMPDU_LAST_KNOWN
;

955 
rxs
->
ampdu_ª„ªn˚
 = 
sc
->
rx
.
ampdu_ªf
;

957 i‡(!
rs
->
rs_m‹óggr
) {

958 
rxs
->
Êag
 |
RX_FLAG_AMPDU_IS_LAST
;

959 
sc
->
rx
.
ampdu_ªf
++;

962 i‡(
rs
->
rs_Êags
 & 
ATH9K_RX_DELIM_CRC_PRE
)

963 
rxs
->
Êag
 |
RX_FLAG_AMPDU_DELIM_CRC_ERROR
;

965 
	}
}

967 
	$©h_rx_èskÀt
(
©h_so·c
 *
sc
, 
Êush
, 
boﬁ
 
hp
)

969 
©h_rxbuf
 *
bf
;

970 
sk_buff
 *
skb
 = 
NULL
, *
ªqueue_skb
, *
hdr_skb
;

971 
õì80211_rx_°©us
 *
rxs
;

972 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

973 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

974 
õì80211_hw
 *
hw
 = 
sc
->hw;

975 
ªtvÆ
;

976 
©h_rx_°©us
 
rs
;

977 
©h9k_rx_qty≥
 
qty≥
;

978 
boﬁ
 
edma
 = !!(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_EDMA
);

979 
dma_ty≥
;

980 
u64
 
tsf
 = 0;

981 
Êags
;

982 
dma_addr_t
 
√w_buf_addr
;

983 
budgë
 = 512;

985 i‡(
edma
)

986 
dma_ty≥
 = 
DMA_BIDIRECTIONAL
;

988 
dma_ty≥
 = 
DMA_FROM_DEVICE
;

990 
qty≥
 = 
hp
 ? 
ATH9K_RX_QUEUE_HP
 : 
ATH9K_RX_QUEUE_LP
;

992 
tsf
 = 
	`©h9k_hw_gëtsf64
(
ah
);

995 
boﬁ
 
de¸y±_îr‹
 = 
Ál£
;

997 
	`mem£t
(&
rs
, 0, (rs));

998 i‡(
edma
)

999 
bf
 = 
	`©h_edma_gë_√xt_rx_buf
(
sc
, &
rs
, 
qty≥
);

1001 
bf
 = 
	`©h_gë_√xt_rx_buf
(
sc
, &
rs
);

1003 i‡(!
bf
)

1006 
skb
 = 
bf
->
bf_mpdu
;

1007 i‡(!
skb
)

1014 i‡(
sc
->
rx
.
‰ag
)

1015 
hdr_skb
 = 
sc
->
rx
.
‰ag
;

1017 
hdr_skb
 = 
skb
;

1019 
rxs
 = 
	`IEEE80211_SKB_RXCB
(
hdr_skb
);

1020 
	`mem£t
(
rxs
, 0, (
õì80211_rx_°©us
));

1022 
ªtvÆ
 = 
	`©h9k_rx_skb_¥ïro˚ss
(
sc
, 
hdr_skb
, &
rs
, 
rxs
,

1023 &
de¸y±_îr‹
, 
tsf
);

1024 i‡(
ªtvÆ
)

1025 
ªqueue_dr›_‰ag
;

1029 
ªqueue_skb
 = 
	`©h_rxbuf_Æloc
(
comm⁄
, comm⁄->
rx_bufsize
, 
GFP_ATOMIC
);

1035 i‡(!
ªqueue_skb
) {

1036 
	`RX_STAT_INC
(
rx_oom_îr
);

1037 
ªqueue_dr›_‰ag
;

1041 
√w_buf_addr
 = 
	`dma_m≠_sögÀ
(
sc
->
dev
, 
ªqueue_skb
->
d©a
,

1042 
comm⁄
->
rx_bufsize
, 
dma_ty≥
);

1043 i‡(
	`u∆ikñy
(
	`dma_m≠pög_îr‹
(
sc
->
dev
, 
√w_buf_addr
))) {

1044 
	`dev_k‰ì_skb_™y
(
ªqueue_skb
);

1045 
ªqueue_dr›_‰ag
;

1049 
	`dma_unm≠_sögÀ
(
sc
->
dev
, 
bf
->
bf_buf_addr
,

1050 
comm⁄
->
rx_bufsize
, 
dma_ty≥
);

1052 
bf
->
bf_mpdu
 = 
ªqueue_skb
;

1053 
bf
->
bf_buf_addr
 = 
√w_buf_addr
;

1055 
	`skb_put
(
skb
, 
rs
.
rs_d©Æí
 + 
ah
->
ˇps
.
rx_°©us_Àn
);

1056 i‡(
ah
->
ˇps
.
rx_°©us_Àn
)

1057 
	`skb_puŒ
(
skb
, 
ah
->
ˇps
.
rx_°©us_Àn
);

1059 i‡(!
rs
.
rs_m‹e
)

1060 
	`©h9k_cmn_rx_skb_po°¥o˚ss
(
comm⁄
, 
hdr_skb
, &
rs
,

1061 
rxs
, 
de¸y±_îr‹
);

1063 i‡(
rs
.
rs_m‹e
) {

1064 
	`RX_STAT_INC
(
rx_‰ags
);

1070 i‡(
sc
->
rx
.
‰ag
) {

1072 
	`dev_k‰ì_skb_™y
(
sc
->
rx
.
‰ag
);

1073 
	`dev_k‰ì_skb_™y
(
skb
);

1074 
	`RX_STAT_INC
(
rx_too_m™y_‰ags_îr
);

1075 
skb
 = 
NULL
;

1077 
sc
->
rx
.
‰ag
 = 
skb
;

1078 
ªqueue
;

1081 i‡(
sc
->
rx
.
‰ag
) {

1082 
•a˚
 = 
skb
->
Àn
 - 
	`skb_èûroom
(
hdr_skb
);

1084 i‡(
	`pskb_ex∑nd_hód
(
hdr_skb
, 0, 
•a˚
, 
GFP_ATOMIC
) < 0) {

1085 
	`dev_k‰ì_skb
(
skb
);

1086 
	`RX_STAT_INC
(
rx_oom_îr
);

1087 
ªqueue_dr›_‰ag
;

1090 
sc
->
rx
.
‰ag
 = 
NULL
;

1092 
	`skb_c›y_‰om_löór_d©a
(
skb
, 
	`skb_put
(
hdr_skb
, skb->
Àn
),

1093 
skb
->
Àn
);

1094 
	`dev_k‰ì_skb_™y
(
skb
);

1095 
skb
 = 
hdr_skb
;

1098 i‡(
rxs
->
Êag
 & 
RX_FLAG_MMIC_STRIPPED
)

1099 
	`skb_åim
(
skb
, skb->
Àn
 - 8);

1101 
	`•ö_lock_úqßve
(&
sc
->
sc_pm_lock
, 
Êags
);

1102 i‡((
sc
->
ps_Êags
 & (
PS_WAIT_FOR_BEACON
 |

1103 
PS_WAIT_FOR_CAB
 |

1104 
PS_WAIT_FOR_PSPOLL_DATA
)) ||

1105 
	`©h9k_check_auto_¶ìp
(
sc
))

1106 
	`©h_rx_ps
(
sc
, 
skb
, 
rs
.
is_mybóc⁄
);

1107 
	`•ö_u∆ock_úqª°‹e
(&
sc
->
sc_pm_lock
, 
Êags
);

1109 
	`©h9k_™ã¬a_check
(
sc
, &
rs
);

1110 
	`©h9k_≠∂y_ampdu_dëaûs
(
sc
, &
rs
, 
rxs
);

1111 
	`©h_debug_øã_°©s
(
sc
, &
rs
, 
skb
);

1113 
	`õì80211_rx
(
hw
, 
skb
);

1115 
ªqueue_dr›_‰ag
:

1116 i‡(
sc
->
rx
.
‰ag
) {

1117 
	`dev_k‰ì_skb_™y
(
sc
->
rx
.
‰ag
);

1118 
sc
->
rx
.
‰ag
 = 
NULL
;

1120 
ªqueue
:

1121 
	`li°_add_èû
(&
bf
->
li°
, &
sc
->
rx
.
rxbuf
);

1123 i‡(!
edma
) {

1124 
	`©h_rx_buf_ªlök
(
sc
, 
bf
, 
Êush
);

1125 i‡(!
Êush
)

1126 
	`©h9k_hw_rxía
(
ah
);

1127 } i‡(!
Êush
) {

1128 
	`©h_rx_edma_buf_lök
(
sc
, 
qty≥
);

1131 i‡(!
budgë
--)

1135 i‡(!(
ah
->
imask
 & 
ATH9K_INT_RXEOL
)) {

1136 
ah
->
imask
 |(
ATH9K_INT_RXEOL
 | 
ATH9K_INT_RXORN
);

1137 
	`©h9k_hw_£t_öãºu±s
(
ah
);

1141 
	}
}

	@reg.h

17 #i‚de‡
REG_H


18 
	#REG_H


	)

20 
	~"../ªg.h
"

22 
	#AR_CR
 0x0008

	)

23 
	#AR_CR_RXE
 (
	`AR_SREV_9300_20_OR_LATER
(
ah
Ë? 0x0000000¯: 0x00000004)

	)

24 
	#AR_CR_RXD
 0x00000020

	)

25 
	#AR_CR_SWI
 0x00000040

	)

27 
	#AR_RXDP
 0x000C

	)

29 
	#AR_CFG
 0x0014

	)

30 
	#AR_CFG_SWTD
 0x00000001

	)

31 
	#AR_CFG_SWTB
 0x00000002

	)

32 
	#AR_CFG_SWRD
 0x00000004

	)

33 
	#AR_CFG_SWRB
 0x00000008

	)

34 
	#AR_CFG_SWRG
 0x00000010

	)

35 
	#AR_CFG_AP_ADHOC_INDICATION
 0x00000020

	)

36 
	#AR_CFG_PHOK
 0x00000100

	)

37 
	#AR_CFG_CLK_GATE_DIS
 0x00000400

	)

38 
	#AR_CFG_EEBS
 0x00000200

	)

39 
	#AR_CFG_PCI_MASTER_REQ_Q_THRESH
 0x00060000

	)

40 
	#AR_CFG_PCI_MASTER_REQ_Q_THRESH_S
 17

	)

42 
	#AR_RXBP_THRESH
 0x0018

	)

43 
	#AR_RXBP_THRESH_HP
 0x0000000f

	)

44 
	#AR_RXBP_THRESH_HP_S
 0

	)

45 
	#AR_RXBP_THRESH_LP
 0x00003f00

	)

46 
	#AR_RXBP_THRESH_LP_S
 8

	)

48 
	#AR_MIRT
 0x0020

	)

49 
	#AR_MIRT_VAL
 0x0000ffff

	)

50 
	#AR_MIRT_VAL_S
 16

	)

52 
	#AR_IER
 0x0024

	)

53 
	#AR_IER_ENABLE
 0x00000001

	)

54 
	#AR_IER_DISABLE
 0x00000000

	)

56 
	#AR_TIMT
 0x0028

	)

57 
	#AR_TIMT_LAST
 0x0000ffff

	)

58 
	#AR_TIMT_LAST_S
 0

	)

59 
	#AR_TIMT_FIRST
 0xffff0000

	)

60 
	#AR_TIMT_FIRST_S
 16

	)

62 
	#AR_RIMT
 0x002C

	)

63 
	#AR_RIMT_LAST
 0x0000ffff

	)

64 
	#AR_RIMT_LAST_S
 0

	)

65 
	#AR_RIMT_FIRST
 0xffff0000

	)

66 
	#AR_RIMT_FIRST_S
 16

	)

68 
	#AR_DMASIZE_4B
 0x00000000

	)

69 
	#AR_DMASIZE_8B
 0x00000001

	)

70 
	#AR_DMASIZE_16B
 0x00000002

	)

71 
	#AR_DMASIZE_32B
 0x00000003

	)

72 
	#AR_DMASIZE_64B
 0x00000004

	)

73 
	#AR_DMASIZE_128B
 0x00000005

	)

74 
	#AR_DMASIZE_256B
 0x00000006

	)

75 
	#AR_DMASIZE_512B
 0x00000007

	)

77 
	#AR_TXCFG
 0x0030

	)

78 
	#AR_TXCFG_DMASZ_MASK
 0x00000007

	)

79 
	#AR_TXCFG_DMASZ_4B
 0

	)

80 
	#AR_TXCFG_DMASZ_8B
 1

	)

81 
	#AR_TXCFG_DMASZ_16B
 2

	)

82 
	#AR_TXCFG_DMASZ_32B
 3

	)

83 
	#AR_TXCFG_DMASZ_64B
 4

	)

84 
	#AR_TXCFG_DMASZ_128B
 5

	)

85 
	#AR_TXCFG_DMASZ_256B
 6

	)

86 
	#AR_TXCFG_DMASZ_512B
 7

	)

87 
	#AR_FTRIG
 0x000003F0

	)

88 
	#AR_FTRIG_S
 4

	)

89 
	#AR_FTRIG_IMMED
 0x00000000

	)

90 
	#AR_FTRIG_64B
 0x00000010

	)

91 
	#AR_FTRIG_128B
 0x00000020

	)

92 
	#AR_FTRIG_192B
 0x00000030

	)

93 
	#AR_FTRIG_256B
 0x00000040

	)

94 
	#AR_FTRIG_512B
 0x00000080

	)

95 
	#AR_TXCFG_ADHOC_BEACON_ATIM_TX_POLICY
 0x00000800

	)

97 
	#AR_RXCFG
 0x0034

	)

98 
	#AR_RXCFG_CHIRP
 0x00000008

	)

99 
	#AR_RXCFG_ZLFDMA
 0x00000010

	)

100 
	#AR_RXCFG_DMASZ_MASK
 0x00000007

	)

101 
	#AR_RXCFG_DMASZ_4B
 0

	)

102 
	#AR_RXCFG_DMASZ_8B
 1

	)

103 
	#AR_RXCFG_DMASZ_16B
 2

	)

104 
	#AR_RXCFG_DMASZ_32B
 3

	)

105 
	#AR_RXCFG_DMASZ_64B
 4

	)

106 
	#AR_RXCFG_DMASZ_128B
 5

	)

107 
	#AR_RXCFG_DMASZ_256B
 6

	)

108 
	#AR_RXCFG_DMASZ_512B
 7

	)

110 
	#AR_TOPS
 0x0044

	)

111 
	#AR_TOPS_MASK
 0x0000FFFF

	)

113 
	#AR_RXNPTO
 0x0048

	)

114 
	#AR_RXNPTO_MASK
 0x000003FF

	)

116 
	#AR_TXNPTO
 0x004C

	)

117 
	#AR_TXNPTO_MASK
 0x000003FF

	)

118 
	#AR_TXNPTO_QCU_MASK
 0x000FFC00

	)

120 
	#AR_RPGTO
 0x0050

	)

121 
	#AR_RPGTO_MASK
 0x000003FF

	)

123 
	#AR_RPCNT
 0x0054

	)

124 
	#AR_RPCNT_MASK
 0x0000001F

	)

126 
	#AR_MACMISC
 0x0058

	)

127 
	#AR_MACMISC_PCI_EXT_FORCE
 0x00000010

	)

128 
	#AR_MACMISC_DMA_OBS
 0x000001E0

	)

129 
	#AR_MACMISC_DMA_OBS_S
 5

	)

130 
	#AR_MACMISC_DMA_OBS_LINE_0
 0

	)

131 
	#AR_MACMISC_DMA_OBS_LINE_1
 1

	)

132 
	#AR_MACMISC_DMA_OBS_LINE_2
 2

	)

133 
	#AR_MACMISC_DMA_OBS_LINE_3
 3

	)

134 
	#AR_MACMISC_DMA_OBS_LINE_4
 4

	)

135 
	#AR_MACMISC_DMA_OBS_LINE_5
 5

	)

136 
	#AR_MACMISC_DMA_OBS_LINE_6
 6

	)

137 
	#AR_MACMISC_DMA_OBS_LINE_7
 7

	)

138 
	#AR_MACMISC_DMA_OBS_LINE_8
 8

	)

139 
	#AR_MACMISC_MISC_OBS
 0x00000E00

	)

140 
	#AR_MACMISC_MISC_OBS_S
 9

	)

141 
	#AR_MACMISC_MISC_OBS_BUS_LSB
 0x00007000

	)

142 
	#AR_MACMISC_MISC_OBS_BUS_LSB_S
 12

	)

143 
	#AR_MACMISC_MISC_OBS_BUS_MSB
 0x00038000

	)

144 
	#AR_MACMISC_MISC_OBS_BUS_MSB_S
 15

	)

145 
	#AR_MACMISC_MISC_OBS_BUS_1
 1

	)

147 
	#AR_DATABUF_SIZE
 0x0060

	)

148 
	#AR_DATABUF_SIZE_MASK
 0x00000FFF

	)

150 
	#AR_GTXTO
 0x0064

	)

151 
	#AR_GTXTO_TIMEOUT_COUNTER
 0x0000FFFF

	)

152 
	#AR_GTXTO_TIMEOUT_LIMIT
 0xFFFF0000

	)

153 
	#AR_GTXTO_TIMEOUT_LIMIT_S
 16

	)

155 
	#AR_GTTM
 0x0068

	)

156 
	#AR_GTTM_USEC
 0x00000001

	)

157 
	#AR_GTTM_IGNORE_IDLE
 0x00000002

	)

158 
	#AR_GTTM_RESET_IDLE
 0x00000004

	)

159 
	#AR_GTTM_CST_USEC
 0x00000008

	)

161 
	#AR_CST
 0x006C

	)

162 
	#AR_CST_TIMEOUT_COUNTER
 0x0000FFFF

	)

163 
	#AR_CST_TIMEOUT_LIMIT
 0xFFFF0000

	)

164 
	#AR_CST_TIMEOUT_LIMIT_S
 16

	)

166 
	#AR_HP_RXDP
 0x0074

	)

167 
	#AR_LP_RXDP
 0x0078

	)

169 
	#AR_ISR
 0x0080

	)

170 
	#AR_ISR_RXOK
 0x00000001

	)

171 
	#AR_ISR_RXDESC
 0x00000002

	)

172 
	#AR_ISR_HP_RXOK
 0x00000001

	)

173 
	#AR_ISR_LP_RXOK
 0x00000002

	)

174 
	#AR_ISR_RXERR
 0x00000004

	)

175 
	#AR_ISR_RXNOPKT
 0x00000008

	)

176 
	#AR_ISR_RXEOL
 0x00000010

	)

177 
	#AR_ISR_RXORN
 0x00000020

	)

178 
	#AR_ISR_TXOK
 0x00000040

	)

179 
	#AR_ISR_TXDESC
 0x00000080

	)

180 
	#AR_ISR_TXERR
 0x00000100

	)

181 
	#AR_ISR_TXNOPKT
 0x00000200

	)

182 
	#AR_ISR_TXEOL
 0x00000400

	)

183 
	#AR_ISR_TXURN
 0x00000800

	)

184 
	#AR_ISR_MIB
 0x00001000

	)

185 
	#AR_ISR_SWI
 0x00002000

	)

186 
	#AR_ISR_RXPHY
 0x00004000

	)

187 
	#AR_ISR_RXKCM
 0x00008000

	)

188 
	#AR_ISR_SWBA
 0x00010000

	)

189 
	#AR_ISR_BRSSI
 0x00020000

	)

190 
	#AR_ISR_BMISS
 0x00040000

	)

191 
	#AR_ISR_BNR
 0x00100000

	)

192 
	#AR_ISR_RXCHIRP
 0x00200000

	)

193 
	#AR_ISR_BCNMISC
 0x00800000

	)

194 
	#AR_ISR_TIM
 0x00800000

	)

195 
	#AR_ISR_QCBROVF
 0x02000000

	)

196 
	#AR_ISR_QCBRURN
 0x04000000

	)

197 
	#AR_ISR_QTRIG
 0x08000000

	)

198 
	#AR_ISR_GENTMR
 0x10000000

	)

200 
	#AR_ISR_TXMINTR
 0x00080000

	)

201 
	#AR_ISR_RXMINTR
 0x01000000

	)

202 
	#AR_ISR_TXINTM
 0x40000000

	)

203 
	#AR_ISR_RXINTM
 0x80000000

	)

205 
	#AR_ISR_S0
 0x0084

	)

206 
	#AR_ISR_S0_QCU_TXOK
 0x000003FF

	)

207 
	#AR_ISR_S0_QCU_TXOK_S
 0

	)

208 
	#AR_ISR_S0_QCU_TXDESC
 0x03FF0000

	)

209 
	#AR_ISR_S0_QCU_TXDESC_S
 16

	)

211 
	#AR_ISR_S1
 0x0088

	)

212 
	#AR_ISR_S1_QCU_TXERR
 0x000003FF

	)

213 
	#AR_ISR_S1_QCU_TXERR_S
 0

	)

214 
	#AR_ISR_S1_QCU_TXEOL
 0x03FF0000

	)

215 
	#AR_ISR_S1_QCU_TXEOL_S
 16

	)

217 
	#AR_ISR_S2
 0x008c

	)

218 
	#AR_ISR_S2_QCU_TXURN
 0x000003FF

	)

219 
	#AR_ISR_S2_BB_WATCHDOG
 0x00010000

	)

220 
	#AR_ISR_S2_CST
 0x00400000

	)

221 
	#AR_ISR_S2_GTT
 0x00800000

	)

222 
	#AR_ISR_S2_TIM
 0x01000000

	)

223 
	#AR_ISR_S2_CABEND
 0x02000000

	)

224 
	#AR_ISR_S2_DTIMSYNC
 0x04000000

	)

225 
	#AR_ISR_S2_BCNTO
 0x08000000

	)

226 
	#AR_ISR_S2_CABTO
 0x10000000

	)

227 
	#AR_ISR_S2_DTIM
 0x20000000

	)

228 
	#AR_ISR_S2_TSFOOR
 0x40000000

	)

229 
	#AR_ISR_S2_TBTT_TIME
 0x80000000

	)

231 
	#AR_ISR_S3
 0x0090

	)

232 
	#AR_ISR_S3_QCU_QCBROVF
 0x000003FF

	)

233 
	#AR_ISR_S3_QCU_QCBRURN
 0x03FF0000

	)

235 
	#AR_ISR_S4
 0x0094

	)

236 
	#AR_ISR_S4_QCU_QTRIG
 0x000003FF

	)

237 
	#AR_ISR_S4_RESV0
 0xFFFFFC00

	)

239 
	#AR_ISR_S5
 0x0098

	)

240 
	#AR_ISR_S5_TIMER_TRIG
 0x000000FF

	)

241 
	#AR_ISR_S5_TIMER_THRESH
 0x0007FE00

	)

242 
	#AR_ISR_S5_TIM_TIMER
 0x00000010

	)

243 
	#AR_ISR_S5_DTIM_TIMER
 0x00000020

	)

244 
	#AR_IMR_S5
 0x00b8

	)

245 
	#AR_IMR_S5_TIM_TIMER
 0x00000010

	)

246 
	#AR_IMR_S5_DTIM_TIMER
 0x00000020

	)

247 
	#AR_ISR_S5_GENTIMER_TRIG
 0x0000FF80

	)

248 
	#AR_ISR_S5_GENTIMER_TRIG_S
 0

	)

249 
	#AR_ISR_S5_GENTIMER_THRESH
 0xFF800000

	)

250 
	#AR_ISR_S5_GENTIMER_THRESH_S
 16

	)

251 
	#AR_IMR_S5_GENTIMER_TRIG
 0x0000FF80

	)

252 
	#AR_IMR_S5_GENTIMER_TRIG_S
 0

	)

253 
	#AR_IMR_S5_GENTIMER_THRESH
 0xFF800000

	)

254 
	#AR_IMR_S5_GENTIMER_THRESH_S
 16

	)

256 
	#AR_IMR
 0x00a0

	)

257 
	#AR_IMR_RXOK
 0x00000001

	)

258 
	#AR_IMR_RXDESC
 0x00000002

	)

259 
	#AR_IMR_RXOK_HP
 0x00000001

	)

260 
	#AR_IMR_RXOK_LP
 0x00000002

	)

261 
	#AR_IMR_RXERR
 0x00000004

	)

262 
	#AR_IMR_RXNOPKT
 0x00000008

	)

263 
	#AR_IMR_RXEOL
 0x00000010

	)

264 
	#AR_IMR_RXORN
 0x00000020

	)

265 
	#AR_IMR_TXOK
 0x00000040

	)

266 
	#AR_IMR_TXDESC
 0x00000080

	)

267 
	#AR_IMR_TXERR
 0x00000100

	)

268 
	#AR_IMR_TXNOPKT
 0x00000200

	)

269 
	#AR_IMR_TXEOL
 0x00000400

	)

270 
	#AR_IMR_TXURN
 0x00000800

	)

271 
	#AR_IMR_MIB
 0x00001000

	)

272 
	#AR_IMR_SWI
 0x00002000

	)

273 
	#AR_IMR_RXPHY
 0x00004000

	)

274 
	#AR_IMR_RXKCM
 0x00008000

	)

275 
	#AR_IMR_SWBA
 0x00010000

	)

276 
	#AR_IMR_BRSSI
 0x00020000

	)

277 
	#AR_IMR_BMISS
 0x00040000

	)

278 
	#AR_IMR_BNR
 0x00100000

	)

279 
	#AR_IMR_RXCHIRP
 0x00200000

	)

280 
	#AR_IMR_BCNMISC
 0x00800000

	)

281 
	#AR_IMR_TIM
 0x00800000

	)

282 
	#AR_IMR_QCBROVF
 0x02000000

	)

283 
	#AR_IMR_QCBRURN
 0x04000000

	)

284 
	#AR_IMR_QTRIG
 0x08000000

	)

285 
	#AR_IMR_GENTMR
 0x10000000

	)

287 
	#AR_IMR_TXMINTR
 0x00080000

	)

288 
	#AR_IMR_RXMINTR
 0x01000000

	)

289 
	#AR_IMR_TXINTM
 0x40000000

	)

290 
	#AR_IMR_RXINTM
 0x80000000

	)

292 
	#AR_IMR_S0
 0x00a4

	)

293 
	#AR_IMR_S0_QCU_TXOK
 0x000003FF

	)

294 
	#AR_IMR_S0_QCU_TXOK_S
 0

	)

295 
	#AR_IMR_S0_QCU_TXDESC
 0x03FF0000

	)

296 
	#AR_IMR_S0_QCU_TXDESC_S
 16

	)

298 
	#AR_IMR_S1
 0x00a8

	)

299 
	#AR_IMR_S1_QCU_TXERR
 0x000003FF

	)

300 
	#AR_IMR_S1_QCU_TXERR_S
 0

	)

301 
	#AR_IMR_S1_QCU_TXEOL
 0x03FF0000

	)

302 
	#AR_IMR_S1_QCU_TXEOL_S
 16

	)

304 
	#AR_IMR_S2
 0x00ac

	)

305 
	#AR_IMR_S2_QCU_TXURN
 0x000003FF

	)

306 
	#AR_IMR_S2_QCU_TXURN_S
 0

	)

307 
	#AR_IMR_S2_BB_WATCHDOG
 0x00010000

	)

308 
	#AR_IMR_S2_CST
 0x00400000

	)

309 
	#AR_IMR_S2_GTT
 0x00800000

	)

310 
	#AR_IMR_S2_TIM
 0x01000000

	)

311 
	#AR_IMR_S2_CABEND
 0x02000000

	)

312 
	#AR_IMR_S2_DTIMSYNC
 0x04000000

	)

313 
	#AR_IMR_S2_BCNTO
 0x08000000

	)

314 
	#AR_IMR_S2_CABTO
 0x10000000

	)

315 
	#AR_IMR_S2_DTIM
 0x20000000

	)

316 
	#AR_IMR_S2_TSFOOR
 0x40000000

	)

318 
	#AR_IMR_S3
 0x00b0

	)

319 
	#AR_IMR_S3_QCU_QCBROVF
 0x000003FF

	)

320 
	#AR_IMR_S3_QCU_QCBRURN
 0x03FF0000

	)

321 
	#AR_IMR_S3_QCU_QCBRURN_S
 16

	)

323 
	#AR_IMR_S4
 0x00b4

	)

324 
	#AR_IMR_S4_QCU_QTRIG
 0x000003FF

	)

325 
	#AR_IMR_S4_RESV0
 0xFFFFFC00

	)

327 
	#AR_IMR_S5
 0x00b8

	)

328 
	#AR_IMR_S5_TIMER_TRIG
 0x000000FF

	)

329 
	#AR_IMR_S5_TIMER_THRESH
 0x0000FF00

	)

332 
	#AR_ISR_RAC
 0x00c0

	)

333 
	#AR_ISR_S0_S
 0x00c4

	)

334 
	#AR_ISR_S0_QCU_TXOK
 0x000003FF

	)

335 
	#AR_ISR_S0_QCU_TXOK_S
 0

	)

336 
	#AR_ISR_S0_QCU_TXDESC
 0x03FF0000

	)

337 
	#AR_ISR_S0_QCU_TXDESC_S
 16

	)

339 
	#AR_ISR_S1_S
 0x00c8

	)

340 
	#AR_ISR_S1_QCU_TXERR
 0x000003FF

	)

341 
	#AR_ISR_S1_QCU_TXERR_S
 0

	)

342 
	#AR_ISR_S1_QCU_TXEOL
 0x03FF0000

	)

343 
	#AR_ISR_S1_QCU_TXEOL_S
 16

	)

345 
	#AR_ISR_S2_S
 (
	`AR_SREV_9300_20_OR_LATER
(
ah
Ë? 0x00d0 : 0x00cc)

	)

346 
	#AR_ISR_S3_S
 (
	`AR_SREV_9300_20_OR_LATER
(
ah
Ë? 0x00d4 : 0x00d0)

	)

347 
	#AR_ISR_S4_S
 (
	`AR_SREV_9300_20_OR_LATER
(
ah
Ë? 0x00d8 : 0x00d4)

	)

348 
	#AR_ISR_S5_S
 (
	`AR_SREV_9300_20_OR_LATER
(
ah
Ë? 0x00d¯: 0x00d8)

	)

349 
	#AR_DMADBG_0
 0x00e0

	)

350 
	#AR_DMADBG_1
 0x00e4

	)

351 
	#AR_DMADBG_2
 0x00e8

	)

352 
	#AR_DMADBG_3
 0x00ec

	)

353 
	#AR_DMADBG_4
 0x00f0

	)

354 
	#AR_DMADBG_5
 0x00f4

	)

355 
	#AR_DMADBG_6
 0x00f8

	)

356 
	#AR_DMADBG_7
 0x00fc

	)

358 
	#AR_NUM_QCU
 10

	)

359 
	#AR_QCU_0
 0x0001

	)

360 
	#AR_QCU_1
 0x0002

	)

361 
	#AR_QCU_2
 0x0004

	)

362 
	#AR_QCU_3
 0x0008

	)

363 
	#AR_QCU_4
 0x0010

	)

364 
	#AR_QCU_5
 0x0020

	)

365 
	#AR_QCU_6
 0x0040

	)

366 
	#AR_QCU_7
 0x0080

	)

367 
	#AR_QCU_8
 0x0100

	)

368 
	#AR_QCU_9
 0x0200

	)

370 
	#AR_Q0_TXDP
 0x0800

	)

371 
	#AR_Q1_TXDP
 0x0804

	)

372 
	#AR_Q2_TXDP
 0x0808

	)

373 
	#AR_Q3_TXDP
 0x080c

	)

374 
	#AR_Q4_TXDP
 0x0810

	)

375 
	#AR_Q5_TXDP
 0x0814

	)

376 
	#AR_Q6_TXDP
 0x0818

	)

377 
	#AR_Q7_TXDP
 0x081c

	)

378 
	#AR_Q8_TXDP
 0x0820

	)

379 
	#AR_Q9_TXDP
 0x0824

	)

380 
	#AR_QTXDP
(
_i
Ë(
AR_Q0_TXDP
 + ((_i)<<2))

	)

382 
	#AR_Q_STATUS_RING_START
 0x830

	)

383 
	#AR_Q_STATUS_RING_END
 0x834

	)

385 
	#AR_Q_TXE
 0x0840

	)

386 
	#AR_Q_TXE_M
 0x000003FF

	)

388 
	#AR_Q_TXD
 0x0880

	)

389 
	#AR_Q_TXD_M
 0x000003FF

	)

391 
	#AR_Q0_CBRCFG
 0x08c0

	)

392 
	#AR_Q1_CBRCFG
 0x08c4

	)

393 
	#AR_Q2_CBRCFG
 0x08c8

	)

394 
	#AR_Q3_CBRCFG
 0x08cc

	)

395 
	#AR_Q4_CBRCFG
 0x08d0

	)

396 
	#AR_Q5_CBRCFG
 0x08d4

	)

397 
	#AR_Q6_CBRCFG
 0x08d8

	)

398 
	#AR_Q7_CBRCFG
 0x08dc

	)

399 
	#AR_Q8_CBRCFG
 0x08e0

	)

400 
	#AR_Q9_CBRCFG
 0x08e4

	)

401 
	#AR_QCBRCFG
(
_i
Ë(
AR_Q0_CBRCFG
 + ((_i)<<2))

	)

402 
	#AR_Q_CBRCFG_INTERVAL
 0x00FFFFFF

	)

403 
	#AR_Q_CBRCFG_INTERVAL_S
 0

	)

404 
	#AR_Q_CBRCFG_OVF_THRESH
 0xFF000000

	)

405 
	#AR_Q_CBRCFG_OVF_THRESH_S
 24

	)

407 
	#AR_Q0_RDYTIMECFG
 0x0900

	)

408 
	#AR_Q1_RDYTIMECFG
 0x0904

	)

409 
	#AR_Q2_RDYTIMECFG
 0x0908

	)

410 
	#AR_Q3_RDYTIMECFG
 0x090c

	)

411 
	#AR_Q4_RDYTIMECFG
 0x0910

	)

412 
	#AR_Q5_RDYTIMECFG
 0x0914

	)

413 
	#AR_Q6_RDYTIMECFG
 0x0918

	)

414 
	#AR_Q7_RDYTIMECFG
 0x091c

	)

415 
	#AR_Q8_RDYTIMECFG
 0x0920

	)

416 
	#AR_Q9_RDYTIMECFG
 0x0924

	)

417 
	#AR_QRDYTIMECFG
(
_i
Ë(
AR_Q0_RDYTIMECFG
 + ((_i)<<2))

	)

418 
	#AR_Q_RDYTIMECFG_DURATION
 0x00FFFFFF

	)

419 
	#AR_Q_RDYTIMECFG_DURATION_S
 0

	)

420 
	#AR_Q_RDYTIMECFG_EN
 0x01000000

	)

422 
	#AR_Q_ONESHOTARM_SC
 0x0940

	)

423 
	#AR_Q_ONESHOTARM_SC_M
 0x000003FF

	)

424 
	#AR_Q_ONESHOTARM_SC_RESV0
 0xFFFFFC00

	)

426 
	#AR_Q_ONESHOTARM_CC
 0x0980

	)

427 
	#AR_Q_ONESHOTARM_CC_M
 0x000003FF

	)

428 
	#AR_Q_ONESHOTARM_CC_RESV0
 0xFFFFFC00

	)

430 
	#AR_Q0_MISC
 0x09c0

	)

431 
	#AR_Q1_MISC
 0x09c4

	)

432 
	#AR_Q2_MISC
 0x09c8

	)

433 
	#AR_Q3_MISC
 0x09cc

	)

434 
	#AR_Q4_MISC
 0x09d0

	)

435 
	#AR_Q5_MISC
 0x09d4

	)

436 
	#AR_Q6_MISC
 0x09d8

	)

437 
	#AR_Q7_MISC
 0x09dc

	)

438 
	#AR_Q8_MISC
 0x09e0

	)

439 
	#AR_Q9_MISC
 0x09e4

	)

440 
	#AR_QMISC
(
_i
Ë(
AR_Q0_MISC
 + ((_i)<<2))

	)

441 
	#AR_Q_MISC_FSP
 0x0000000F

	)

442 
	#AR_Q_MISC_FSP_ASAP
 0

	)

443 
	#AR_Q_MISC_FSP_CBR
 1

	)

444 
	#AR_Q_MISC_FSP_DBA_GATED
 2

	)

445 
	#AR_Q_MISC_FSP_TIM_GATED
 3

	)

446 
	#AR_Q_MISC_FSP_BEACON_SENT_GATED
 4

	)

447 
	#AR_Q_MISC_FSP_BEACON_RCVD_GATED
 5

	)

448 
	#AR_Q_MISC_ONE_SHOT_EN
 0x00000010

	)

449 
	#AR_Q_MISC_CBR_INCR_DIS1
 0x00000020

	)

450 
	#AR_Q_MISC_CBR_INCR_DIS0
 0x00000040

	)

451 
	#AR_Q_MISC_BEACON_USE
 0x00000080

	)

452 
	#AR_Q_MISC_CBR_EXP_CNTR_LIMIT_EN
 0x00000100

	)

453 
	#AR_Q_MISC_RDYTIME_EXP_POLICY
 0x00000200

	)

454 
	#AR_Q_MISC_RESET_CBR_EXP_CTR
 0x00000400

	)

455 
	#AR_Q_MISC_DCU_EARLY_TERM_REQ
 0x00000800

	)

456 
	#AR_Q_MISC_RESV0
 0xFFFFF000

	)

458 
	#AR_Q0_STS
 0x0a00

	)

459 
	#AR_Q1_STS
 0x0a04

	)

460 
	#AR_Q2_STS
 0x0a08

	)

461 
	#AR_Q3_STS
 0x0a0c

	)

462 
	#AR_Q4_STS
 0x0a10

	)

463 
	#AR_Q5_STS
 0x0a14

	)

464 
	#AR_Q6_STS
 0x0a18

	)

465 
	#AR_Q7_STS
 0x0a1c

	)

466 
	#AR_Q8_STS
 0x0a20

	)

467 
	#AR_Q9_STS
 0x0a24

	)

468 
	#AR_QSTS
(
_i
Ë(
AR_Q0_STS
 + ((_i)<<2))

	)

469 
	#AR_Q_STS_PEND_FR_CNT
 0x00000003

	)

470 
	#AR_Q_STS_RESV0
 0x000000FC

	)

471 
	#AR_Q_STS_CBR_EXP_CNT
 0x0000FF00

	)

472 
	#AR_Q_STS_RESV1
 0xFFFF0000

	)

474 
	#AR_Q_RDYTIMESHDN
 0x0a40

	)

475 
	#AR_Q_RDYTIMESHDN_M
 0x000003FF

	)

478 
	#AR_Q_DESC_CRCCHK
 0xa44

	)

480 
	#AR_Q_DESC_CRCCHK_EN
 1

	)

482 
	#AR_NUM_DCU
 10

	)

483 
	#AR_DCU_0
 0x0001

	)

484 
	#AR_DCU_1
 0x0002

	)

485 
	#AR_DCU_2
 0x0004

	)

486 
	#AR_DCU_3
 0x0008

	)

487 
	#AR_DCU_4
 0x0010

	)

488 
	#AR_DCU_5
 0x0020

	)

489 
	#AR_DCU_6
 0x0040

	)

490 
	#AR_DCU_7
 0x0080

	)

491 
	#AR_DCU_8
 0x0100

	)

492 
	#AR_DCU_9
 0x0200

	)

494 
	#AR_D0_QCUMASK
 0x1000

	)

495 
	#AR_D1_QCUMASK
 0x1004

	)

496 
	#AR_D2_QCUMASK
 0x1008

	)

497 
	#AR_D3_QCUMASK
 0x100c

	)

498 
	#AR_D4_QCUMASK
 0x1010

	)

499 
	#AR_D5_QCUMASK
 0x1014

	)

500 
	#AR_D6_QCUMASK
 0x1018

	)

501 
	#AR_D7_QCUMASK
 0x101c

	)

502 
	#AR_D8_QCUMASK
 0x1020

	)

503 
	#AR_D9_QCUMASK
 0x1024

	)

504 
	#AR_DQCUMASK
(
_i
Ë(
AR_D0_QCUMASK
 + ((_i)<<2))

	)

505 
	#AR_D_QCUMASK
 0x000003FF

	)

506 
	#AR_D_QCUMASK_RESV0
 0xFFFFFC00

	)

508 
	#AR_D0_LCL_IFS
 0x1040

	)

509 
	#AR_D1_LCL_IFS
 0x1044

	)

510 
	#AR_D2_LCL_IFS
 0x1048

	)

511 
	#AR_D3_LCL_IFS
 0x104c

	)

512 
	#AR_D4_LCL_IFS
 0x1050

	)

513 
	#AR_D5_LCL_IFS
 0x1054

	)

514 
	#AR_D6_LCL_IFS
 0x1058

	)

515 
	#AR_D7_LCL_IFS
 0x105c

	)

516 
	#AR_D8_LCL_IFS
 0x1060

	)

517 
	#AR_D9_LCL_IFS
 0x1064

	)

518 
	#AR_DLCL_IFS
(
_i
Ë(
AR_D0_LCL_IFS
 + ((_i)<<2))

	)

519 
	#AR_D_LCL_IFS_CWMIN
 0x000003FF

	)

520 
	#AR_D_LCL_IFS_CWMIN_S
 0

	)

521 
	#AR_D_LCL_IFS_CWMAX
 0x000FFC00

	)

522 
	#AR_D_LCL_IFS_CWMAX_S
 10

	)

523 
	#AR_D_LCL_IFS_AIFS
 0x0FF00000

	)

524 
	#AR_D_LCL_IFS_AIFS_S
 20

	)

526 
	#AR_D_LCL_IFS_RESV0
 0xF0000000

	)

528 
	#AR_D0_RETRY_LIMIT
 0x1080

	)

529 
	#AR_D1_RETRY_LIMIT
 0x1084

	)

530 
	#AR_D2_RETRY_LIMIT
 0x1088

	)

531 
	#AR_D3_RETRY_LIMIT
 0x108c

	)

532 
	#AR_D4_RETRY_LIMIT
 0x1090

	)

533 
	#AR_D5_RETRY_LIMIT
 0x1094

	)

534 
	#AR_D6_RETRY_LIMIT
 0x1098

	)

535 
	#AR_D7_RETRY_LIMIT
 0x109c

	)

536 
	#AR_D8_RETRY_LIMIT
 0x10a0

	)

537 
	#AR_D9_RETRY_LIMIT
 0x10a4

	)

538 
	#AR_DRETRY_LIMIT
(
_i
Ë(
AR_D0_RETRY_LIMIT
 + ((_i)<<2))

	)

539 
	#AR_D_RETRY_LIMIT_FR_SH
 0x0000000F

	)

540 
	#AR_D_RETRY_LIMIT_FR_SH_S
 0

	)

541 
	#AR_D_RETRY_LIMIT_STA_SH
 0x00003F00

	)

542 
	#AR_D_RETRY_LIMIT_STA_SH_S
 8

	)

543 
	#AR_D_RETRY_LIMIT_STA_LG
 0x000FC000

	)

544 
	#AR_D_RETRY_LIMIT_STA_LG_S
 14

	)

545 
	#AR_D_RETRY_LIMIT_RESV0
 0xFFF00000

	)

547 
	#AR_D0_CHNTIME
 0x10c0

	)

548 
	#AR_D1_CHNTIME
 0x10c4

	)

549 
	#AR_D2_CHNTIME
 0x10c8

	)

550 
	#AR_D3_CHNTIME
 0x10cc

	)

551 
	#AR_D4_CHNTIME
 0x10d0

	)

552 
	#AR_D5_CHNTIME
 0x10d4

	)

553 
	#AR_D6_CHNTIME
 0x10d8

	)

554 
	#AR_D7_CHNTIME
 0x10dc

	)

555 
	#AR_D8_CHNTIME
 0x10e0

	)

556 
	#AR_D9_CHNTIME
 0x10e4

	)

557 
	#AR_DCHNTIME
(
_i
Ë(
AR_D0_CHNTIME
 + ((_i)<<2))

	)

558 
	#AR_D_CHNTIME_DUR
 0x000FFFFF

	)

559 
	#AR_D_CHNTIME_DUR_S
 0

	)

560 
	#AR_D_CHNTIME_EN
 0x00100000

	)

561 
	#AR_D_CHNTIME_RESV0
 0xFFE00000

	)

563 
	#AR_D0_MISC
 0x1100

	)

564 
	#AR_D1_MISC
 0x1104

	)

565 
	#AR_D2_MISC
 0x1108

	)

566 
	#AR_D3_MISC
 0x110c

	)

567 
	#AR_D4_MISC
 0x1110

	)

568 
	#AR_D5_MISC
 0x1114

	)

569 
	#AR_D6_MISC
 0x1118

	)

570 
	#AR_D7_MISC
 0x111c

	)

571 
	#AR_D8_MISC
 0x1120

	)

572 
	#AR_D9_MISC
 0x1124

	)

573 
	#AR_DMISC
(
_i
Ë(
AR_D0_MISC
 + ((_i)<<2))

	)

574 
	#AR_D_MISC_BKOFF_THRESH
 0x0000003F

	)

575 
	#AR_D_MISC_RETRY_CNT_RESET_EN
 0x00000040

	)

576 
	#AR_D_MISC_CW_RESET_EN
 0x00000080

	)

577 
	#AR_D_MISC_FRAG_WAIT_EN
 0x00000100

	)

578 
	#AR_D_MISC_FRAG_BKOFF_EN
 0x00000200

	)

579 
	#AR_D_MISC_CW_BKOFF_EN
 0x00001000

	)

580 
	#AR_D_MISC_VIR_COL_HANDLING
 0x0000C000

	)

581 
	#AR_D_MISC_VIR_COL_HANDLING_S
 14

	)

582 
	#AR_D_MISC_VIR_COL_HANDLING_DEFAULT
 0

	)

583 
	#AR_D_MISC_VIR_COL_HANDLING_IGNORE
 1

	)

584 
	#AR_D_MISC_BEACON_USE
 0x00010000

	)

585 
	#AR_D_MISC_ARB_LOCKOUT_CNTRL
 0x00060000

	)

586 
	#AR_D_MISC_ARB_LOCKOUT_CNTRL_S
 17

	)

587 
	#AR_D_MISC_ARB_LOCKOUT_CNTRL_NONE
 0

	)

588 
	#AR_D_MISC_ARB_LOCKOUT_CNTRL_INTRA_FR
 1

	)

589 
	#AR_D_MISC_ARB_LOCKOUT_CNTRL_GLOBAL
 2

	)

590 
	#AR_D_MISC_ARB_LOCKOUT_IGNORE
 0x00080000

	)

591 
	#AR_D_MISC_SEQ_NUM_INCR_DIS
 0x00100000

	)

592 
	#AR_D_MISC_POST_FR_BKOFF_DIS
 0x00200000

	)

593 
	#AR_D_MISC_VIT_COL_CW_BKOFF_EN
 0x00400000

	)

594 
	#AR_D_MISC_BLOWN_IFS_RETRY_EN
 0x00800000

	)

595 
	#AR_D_MISC_RESV0
 0xFF000000

	)

597 
	#AR_D_SEQNUM
 0x1140

	)

599 
	#AR_D_GBL_IFS_SIFS
 0x1030

	)

600 
	#AR_D_GBL_IFS_SIFS_M
 0x0000FFFF

	)

601 
	#AR_D_GBL_IFS_SIFS_RESV0
 0xFFFFFFFF

	)

603 
	#AR_D_TXBLK_BASE
 0x1038

	)

604 
	#AR_D_TXBLK_WRITE_BITMASK
 0x0000FFFF

	)

605 
	#AR_D_TXBLK_WRITE_BITMASK_S
 0

	)

606 
	#AR_D_TXBLK_WRITE_SLICE
 0x000F0000

	)

607 
	#AR_D_TXBLK_WRITE_SLICE_S
 16

	)

608 
	#AR_D_TXBLK_WRITE_DCU
 0x00F00000

	)

609 
	#AR_D_TXBLK_WRITE_DCU_S
 20

	)

610 
	#AR_D_TXBLK_WRITE_COMMAND
 0x0F000000

	)

611 
	#AR_D_TXBLK_WRITE_COMMAND_S
 24

	)

613 
	#AR_D_GBL_IFS_SLOT
 0x1070

	)

614 
	#AR_D_GBL_IFS_SLOT_M
 0x0000FFFF

	)

615 
	#AR_D_GBL_IFS_SLOT_RESV0
 0xFFFF0000

	)

617 
	#AR_D_GBL_IFS_EIFS
 0x10b0

	)

618 
	#AR_D_GBL_IFS_EIFS_M
 0x0000FFFF

	)

619 
	#AR_D_GBL_IFS_EIFS_RESV0
 0xFFFF0000

	)

620 
	#AR_D_GBL_IFS_EIFS_ASYNC_FIFO
 363

	)

622 
	#AR_D_GBL_IFS_MISC
 0x10f0

	)

623 
	#AR_D_GBL_IFS_MISC_LFSR_SLICE_SEL
 0x00000007

	)

624 
	#AR_D_GBL_IFS_MISC_TURBO_MODE
 0x00000008

	)

625 
	#AR_D_GBL_IFS_MISC_USEC_DURATION
 0x000FFC00

	)

626 
	#AR_D_GBL_IFS_MISC_DCU_ARBITER_DLY
 0x00300000

	)

627 
	#AR_D_GBL_IFS_MISC_RANDOM_LFSR_SLICE_DIS
 0x01000000

	)

628 
	#AR_D_GBL_IFS_MISC_SLOT_XMIT_WIND_LEN
 0x06000000

	)

629 
	#AR_D_GBL_IFS_MISC_FORCE_XMIT_SLOT_BOUND
 0x08000000

	)

630 
	#AR_D_GBL_IFS_MISC_IGNORE_BACKOFF
 0x10000000

	)

632 
	#AR_D_FPCTL
 0x1230

	)

633 
	#AR_D_FPCTL_DCU
 0x0000000F

	)

634 
	#AR_D_FPCTL_DCU_S
 0

	)

635 
	#AR_D_FPCTL_PREFETCH_EN
 0x00000010

	)

636 
	#AR_D_FPCTL_BURST_PREFETCH
 0x00007FE0

	)

637 
	#AR_D_FPCTL_BURST_PREFETCH_S
 5

	)

639 
	#AR_D_TXPSE
 0x1270

	)

640 
	#AR_D_TXPSE_CTRL
 0x000003FF

	)

641 
	#AR_D_TXPSE_RESV0
 0x0000FC00

	)

642 
	#AR_D_TXPSE_STATUS
 0x00010000

	)

643 
	#AR_D_TXPSE_RESV1
 0xFFFE0000

	)

645 
	#AR_D_TXSLOTMASK
 0x12f0

	)

646 
	#AR_D_TXSLOTMASK_NUM
 0x0000000F

	)

648 
	#AR_CFG_LED
 0x1f04

	)

649 
	#AR_CFG_SCLK_RATE_IND
 0x00000003

	)

650 
	#AR_CFG_SCLK_RATE_IND_S
 0

	)

651 
	#AR_CFG_SCLK_32MHZ
 0x00000000

	)

652 
	#AR_CFG_SCLK_4MHZ
 0x00000001

	)

653 
	#AR_CFG_SCLK_1MHZ
 0x00000002

	)

654 
	#AR_CFG_SCLK_32KHZ
 0x00000003

	)

655 
	#AR_CFG_LED_BLINK_SLOW
 0x00000008

	)

656 
	#AR_CFG_LED_BLINK_THRESH_SEL
 0x00000070

	)

657 
	#AR_CFG_LED_MODE_SEL
 0x00000380

	)

658 
	#AR_CFG_LED_MODE_SEL_S
 7

	)

659 
	#AR_CFG_LED_POWER
 0x00000280

	)

660 
	#AR_CFG_LED_POWER_S
 7

	)

661 
	#AR_CFG_LED_NETWORK
 0x00000300

	)

662 
	#AR_CFG_LED_NETWORK_S
 7

	)

663 
	#AR_CFG_LED_MODE_PROP
 0x0

	)

664 
	#AR_CFG_LED_MODE_RPROP
 0x1

	)

665 
	#AR_CFG_LED_MODE_SPLIT
 0x2

	)

666 
	#AR_CFG_LED_MODE_RAND
 0x3

	)

667 
	#AR_CFG_LED_MODE_POWER_OFF
 0x4

	)

668 
	#AR_CFG_LED_MODE_POWER_ON
 0x5

	)

669 
	#AR_CFG_LED_MODE_NETWORK_OFF
 0x4

	)

670 
	#AR_CFG_LED_MODE_NETWORK_ON
 0x6

	)

671 
	#AR_CFG_LED_ASSOC_CTL
 0x00000c00

	)

672 
	#AR_CFG_LED_ASSOC_CTL_S
 10

	)

673 
	#AR_CFG_LED_ASSOC_NONE
 0x0

	)

674 
	#AR_CFG_LED_ASSOC_ACTIVE
 0x1

	)

675 
	#AR_CFG_LED_ASSOC_PENDING
 0x2

	)

677 
	#AR_CFG_LED_BLINK_SLOW
 0x00000008

	)

678 
	#AR_CFG_LED_BLINK_SLOW_S
 3

	)

680 
	#AR_CFG_LED_BLINK_THRESH_SEL
 0x00000070

	)

681 
	#AR_CFG_LED_BLINK_THRESH_SEL_S
 4

	)

683 
	#AR_MAC_SLEEP
 0x1f00

	)

684 
	#AR_MAC_SLEEP_MAC_AWAKE
 0x00000000

	)

685 
	#AR_MAC_SLEEP_MAC_ASLEEP
 0x00000001

	)

687 
	#AR_RC
 0x4000

	)

688 
	#AR_RC_AHB
 0x00000001

	)

689 
	#AR_RC_APB
 0x00000002

	)

690 
	#AR_RC_HOSTIF
 0x00000100

	)

692 
	#AR_WA
 (
	`AR_SREV_9340
(
ah
Ë? 0x40c4 : 0x4004)

	)

693 
	#AR_WA_BIT6
 (1 << 6)

	)

694 
	#AR_WA_BIT7
 (1 << 7)

	)

695 
	#AR_WA_BIT23
 (1 << 23)

	)

696 
	#AR_WA_D3_L1_DISABLE
 (1 << 14)

	)

697 
	#AR_WA_UNTIE_RESET_EN
 (1 << 15Ë

	)

699 
	#AR_WA_D3_TO_L1_DISABLE_REAL
 (1 << 16)

	)

700 
	#AR_WA_ASPM_TIMER_BASED_DISABLE
 (1 << 17)

	)

701 
	#AR_WA_RESET_EN
 (1 << 18Ë

	)

703 
	#AR_WA_ANALOG_SHIFT
 (1 << 20)

	)

704 
	#AR_WA_POR_SHORT
 (1 << 21Ë

	)

705 
	#AR_WA_BIT22
 (1 << 22)

	)

706 
	#AR9285_WA_DEFAULT
 0x004a050b

	)

707 
	#AR9280_WA_DEFAULT
 0x0040073b

	)

708 
	#AR_WA_DEFAULT
 0x0000073f

	)

711 
	#AR_PM_STATE
 0x4008

	)

712 
	#AR_PM_STATE_PME_D3COLD_VAUX
 0x00100000

	)

714 
	#AR_HOST_TIMEOUT
 (
	`AR_SREV_9340
(
ah
Ë? 0x4008 : 0x4018)

	)

715 
	#AR_HOST_TIMEOUT_APB_CNTR
 0x0000FFFF

	)

716 
	#AR_HOST_TIMEOUT_APB_CNTR_S
 0

	)

717 
	#AR_HOST_TIMEOUT_LCL_CNTR
 0xFFFF0000

	)

718 
	#AR_HOST_TIMEOUT_LCL_CNTR_S
 16

	)

720 
	#AR_EEPROM
 0x401c

	)

721 
	#AR_EEPROM_ABSENT
 0x00000100

	)

722 
	#AR_EEPROM_CORRUPT
 0x00000200

	)

723 
	#AR_EEPROM_PROT_MASK
 0x03FFFC00

	)

724 
	#AR_EEPROM_PROT_MASK_S
 10

	)

726 
	#EEPROM_PROTECT_RP_0_31
 0x0001

	)

727 
	#EEPROM_PROTECT_WP_0_31
 0x0002

	)

728 
	#EEPROM_PROTECT_RP_32_63
 0x0004

	)

729 
	#EEPROM_PROTECT_WP_32_63
 0x0008

	)

730 
	#EEPROM_PROTECT_RP_64_127
 0x0010

	)

731 
	#EEPROM_PROTECT_WP_64_127
 0x0020

	)

732 
	#EEPROM_PROTECT_RP_128_191
 0x0040

	)

733 
	#EEPROM_PROTECT_WP_128_191
 0x0080

	)

734 
	#EEPROM_PROTECT_RP_192_255
 0x0100

	)

735 
	#EEPROM_PROTECT_WP_192_255
 0x0200

	)

736 
	#EEPROM_PROTECT_RP_256_511
 0x0400

	)

737 
	#EEPROM_PROTECT_WP_256_511
 0x0800

	)

738 
	#EEPROM_PROTECT_RP_512_1023
 0x1000

	)

739 
	#EEPROM_PROTECT_WP_512_1023
 0x2000

	)

740 
	#EEPROM_PROTECT_RP_1024_2047
 0x4000

	)

741 
	#EEPROM_PROTECT_WP_1024_2047
 0x8000

	)

743 
	#AR_SREV
 \

744 ((
	`AR_SREV_9100
(
ah
)Ë? 0x0600 : (
	`AR_SREV_9340
(ah) \

745 ? 0x400¯: 0x4020))

	)

747 
	#AR_SREV_ID
 \

748 ((
	`AR_SREV_9100
(
ah
)Ë? 0x00000FFF : 0x000000FF)

	)

749 
	#AR_SREV_VERSION
 0x000000F0

	)

750 
	#AR_SREV_VERSION_S
 4

	)

751 
	#AR_SREV_REVISION
 0x00000007

	)

753 
	#AR_SREV_ID2
 0xFFFFFFFF

	)

754 
	#AR_SREV_VERSION2
 0xFFFC0000

	)

755 
	#AR_SREV_VERSION2_S
 18

	)

756 
	#AR_SREV_TYPE2
 0x0003F000

	)

757 
	#AR_SREV_TYPE2_S
 12

	)

758 
	#AR_SREV_TYPE2_CHAIN
 0x00001000

	)

759 
	#AR_SREV_TYPE2_HOST_MODE
 0x00002000

	)

760 
	#AR_SREV_REVISION2
 0x00000F00

	)

761 
	#AR_SREV_REVISION2_S
 8

	)

763 
	#AR_SREV_VERSION_5416_PCI
 0xD

	)

764 
	#AR_SREV_VERSION_5416_PCIE
 0xC

	)

765 
	#AR_SREV_REVISION_5416_10
 0

	)

766 
	#AR_SREV_REVISION_5416_20
 1

	)

767 
	#AR_SREV_REVISION_5416_22
 2

	)

768 
	#AR_SREV_VERSION_9100
 0x14

	)

769 
	#AR_SREV_VERSION_9160
 0x40

	)

770 
	#AR_SREV_REVISION_9160_10
 0

	)

771 
	#AR_SREV_REVISION_9160_11
 1

	)

772 
	#AR_SREV_VERSION_9280
 0x80

	)

773 
	#AR_SREV_REVISION_9280_10
 0

	)

774 
	#AR_SREV_REVISION_9280_20
 1

	)

775 
	#AR_SREV_REVISION_9280_21
 2

	)

776 
	#AR_SREV_VERSION_9285
 0xC0

	)

777 
	#AR_SREV_REVISION_9285_10
 0

	)

778 
	#AR_SREV_REVISION_9285_11
 1

	)

779 
	#AR_SREV_REVISION_9285_12
 2

	)

780 
	#AR_SREV_VERSION_9287
 0x180

	)

781 
	#AR_SREV_REVISION_9287_10
 0

	)

782 
	#AR_SREV_REVISION_9287_11
 1

	)

783 
	#AR_SREV_REVISION_9287_12
 2

	)

784 
	#AR_SREV_REVISION_9287_13
 3

	)

785 
	#AR_SREV_VERSION_9271
 0x140

	)

786 
	#AR_SREV_REVISION_9271_10
 0

	)

787 
	#AR_SREV_REVISION_9271_11
 1

	)

788 
	#AR_SREV_VERSION_9300
 0x1c0

	)

789 
	#AR_SREV_REVISION_9300_20
 2

	)

790 
	#AR_SREV_REVISION_9300_22
 3

	)

791 
	#AR_SREV_VERSION_9330
 0x200

	)

792 
	#AR_SREV_REVISION_9330_10
 0

	)

793 
	#AR_SREV_REVISION_9330_11
 1

	)

794 
	#AR_SREV_REVISION_9330_12
 2

	)

795 
	#AR_SREV_VERSION_9485
 0x240

	)

796 
	#AR_SREV_REVISION_9485_10
 0

	)

797 
	#AR_SREV_REVISION_9485_11
 1

	)

798 
	#AR_SREV_VERSION_9340
 0x300

	)

799 
	#AR_SREV_REVISION_9340_10
 0

	)

800 
	#AR_SREV_REVISION_9340_11
 1

	)

801 
	#AR_SREV_REVISION_9340_12
 2

	)

802 
	#AR_SREV_REVISION_9340_13
 3

	)

803 
	#AR_SREV_VERSION_9580
 0x1C0

	)

804 
	#AR_SREV_REVISION_9580_10
 4

	)

805 
	#AR_SREV_VERSION_9462
 0x280

	)

806 
	#AR_SREV_REVISION_9462_20
 2

	)

807 
	#AR_SREV_REVISION_9462_21
 3

	)

808 
	#AR_SREV_VERSION_9565
 0x2C0

	)

809 
	#AR_SREV_REVISION_9565_10
 0

	)

810 
	#AR_SREV_REVISION_9565_101
 1

	)

811 
	#AR_SREV_REVISION_9565_11
 2

	)

812 
	#AR_SREV_VERSION_9550
 0x400

	)

813 
	#AR_SREV_VERSION_9531
 0x500

	)

814 
	#AR_SREV_REVISION_9531_10
 0

	)

815 
	#AR_SREV_REVISION_9531_11
 1

	)

817 
	#AR_SREV_5416
(
_ah
) \

818 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_VERSION_5416_PCI
) || \

819 ((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_VERSION_5416_PCIE
))

	)

820 
	#AR_SREV_5416_22_OR_LATER
(
_ah
) \

821 (((
	`AR_SREV_5416
(
_ah
)) && \

822 ((
_ah
)->
hw_vîsi⁄
.
macRev
 >
AR_SREV_REVISION_5416_22
)) || \

823 ((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 >
AR_SREV_VERSION_9100
))

	)

825 
	#AR_SREV_9100
(
ah
) \

826 ((
ah
->
hw_vîsi⁄
.
macVîsi⁄
Ë=
AR_SREV_VERSION_9100
)

	)

827 
	#AR_SREV_9100_OR_LATER
(
_ah
) \

828 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 >
AR_SREV_VERSION_9100
))

	)

830 
	#AR_SREV_9160
(
_ah
) \

831 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_VERSION_9160
))

	)

832 
	#AR_SREV_9160_10_OR_LATER
(
_ah
) \

833 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 >
AR_SREV_VERSION_9160
))

	)

834 
	#AR_SREV_9160_11
(
_ah
) \

835 (
	`AR_SREV_9160
(
_ah
) && \

836 ((
_ah
)->
hw_vîsi⁄
.
macRev
 =
AR_SREV_REVISION_9160_11
))

	)

837 
	#AR_SREV_9280
(
_ah
) \

838 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_VERSION_9280
))

	)

839 
	#AR_SREV_9280_20_OR_LATER
(
_ah
) \

840 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 >
AR_SREV_VERSION_9280
))

	)

841 
	#AR_SREV_9280_20
(
_ah
) \

842 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_VERSION_9280
))

	)

844 
	#AR_SREV_9285
(
_ah
) \

845 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_VERSION_9285
))

	)

846 
	#AR_SREV_9285_12_OR_LATER
(
_ah
) \

847 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 >
AR_SREV_VERSION_9285
))

	)

849 
	#AR_SREV_9287
(
_ah
) \

850 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_VERSION_9287
))

	)

851 
	#AR_SREV_9287_11_OR_LATER
(
_ah
) \

852 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 >
AR_SREV_VERSION_9287
))

	)

853 
	#AR_SREV_9287_11
(
_ah
) \

854 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_VERSION_9287
) && \

855 ((
_ah
)->
hw_vîsi⁄
.
macRev
 =
AR_SREV_REVISION_9287_11
))

	)

856 
	#AR_SREV_9287_12
(
_ah
) \

857 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_VERSION_9287
) && \

858 ((
_ah
)->
hw_vîsi⁄
.
macRev
 =
AR_SREV_REVISION_9287_12
))

	)

859 
	#AR_SREV_9287_12_OR_LATER
(
_ah
) \

860 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 > 
AR_SREV_VERSION_9287
) || \

861 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_VERSION_9287
) && \

862 ((
_ah
)->
hw_vîsi⁄
.
macRev
 >
AR_SREV_REVISION_9287_12
)))

	)

863 
	#AR_SREV_9287_13_OR_LATER
(
_ah
) \

864 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 > 
AR_SREV_VERSION_9287
) || \

865 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_VERSION_9287
) && \

866 ((
_ah
)->
hw_vîsi⁄
.
macRev
 >
AR_SREV_REVISION_9287_13
)))

	)

868 
	#AR_SREV_9271
(
_ah
) \

869 (((
_ah
))->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_VERSION_9271
)

	)

870 
	#AR_SREV_9271_10
(
_ah
) \

871 (
	`AR_SREV_9271
(
_ah
) && \

872 ((
_ah
)->
hw_vîsi⁄
.
macRev
 =
AR_SREV_REVISION_9271_10
))

	)

873 
	#AR_SREV_9271_11
(
_ah
) \

874 (
	`AR_SREV_9271
(
_ah
) && \

875 ((
_ah
)->
hw_vîsi⁄
.
macRev
 =
AR_SREV_REVISION_9271_11
))

	)

877 
	#AR_SREV_9300
(
_ah
) \

878 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_VERSION_9300
))

	)

879 
	#AR_SREV_9300_20_OR_LATER
(
_ah
) \

880 ((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 >
AR_SREV_VERSION_9300
)

	)

881 
	#AR_SREV_9300_22
(
_ah
) \

882 (
	`AR_SREV_9300
(
ah
) && \

883 ((
_ah
)->
hw_vîsi⁄
.
macRev
 =
AR_SREV_REVISION_9300_22
))

	)

885 
	#AR_SREV_9330
(
_ah
) \

886 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_VERSION_9330
))

	)

887 
	#AR_SREV_9330_11
(
_ah
) \

888 (
	`AR_SREV_9330
((
_ah
)) && \

889 ((
_ah
)->
hw_vîsi⁄
.
macRev
 =
AR_SREV_REVISION_9330_11
))

	)

890 
	#AR_SREV_9330_12
(
_ah
) \

891 (
	`AR_SREV_9330
((
_ah
)) && \

892 ((
_ah
)->
hw_vîsi⁄
.
macRev
 =
AR_SREV_REVISION_9330_12
))

	)

894 #ifde‡
CPTCFG_ATH9K_PCOEM


895 
	#AR_SREV_9462
(
_ah
) \

896 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_VERSION_9462
))

	)

897 
	#AR_SREV_9485
(
_ah
) \

898 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_VERSION_9485
))

	)

899 
	#AR_SREV_9565
(
_ah
) \

900 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_VERSION_9565
))

	)

902 
	#AR_SREV_9462
(
_ah
Ë0

	)

903 
	#AR_SREV_9485
(
_ah
Ë0

	)

904 
	#AR_SREV_9565
(
_ah
Ë0

	)

907 
	#AR_SREV_9485_11_OR_LATER
(
_ah
) \

908 (
	`AR_SREV_9485
(
_ah
) && \

909 ((
_ah
)->
hw_vîsi⁄
.
macRev
 >
AR_SREV_REVISION_9485_11
))

	)

910 
	#AR_SREV_9485_OR_LATER
(
_ah
) \

911 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 >
AR_SREV_VERSION_9485
))

	)

913 
	#AR_SREV_9340
(
_ah
) \

914 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_VERSION_9340
))

	)

916 
	#AR_SREV_9340_13_OR_LATER
(
_ah
) \

917 (
	`AR_SREV_9340
((
_ah
)) && \

918 ((
_ah
)->
hw_vîsi⁄
.
macRev
 >
AR_SREV_REVISION_9340_13
))

	)

920 
	#AR_SREV_9285E_20
(
_ah
) \

921 (
	`AR_SREV_9285_12_OR_LATER
(
_ah
) && \

922 ((
	`REG_READ
(
_ah
, 
AR_AN_SYNTH9
Ë& 0x7Ë=0x1))

	)

924 
	#AR_SREV_9462_20
(
_ah
) \

925 (
	`AR_SREV_9462
(
_ah
) && \

926 ((
_ah
)->
hw_vîsi⁄
.
macRev
 =
AR_SREV_REVISION_9462_20
))

	)

927 
	#AR_SREV_9462_21
(
_ah
) \

928 (
	`AR_SREV_9462
(
_ah
) && \

929 ((
_ah
)->
hw_vîsi⁄
.
macRev
 =
AR_SREV_REVISION_9462_21
))

	)

930 
	#AR_SREV_9462_20_OR_LATER
(
_ah
) \

931 (
	`AR_SREV_9462
(
_ah
) && \

932 ((
_ah
)->
hw_vîsi⁄
.
macRev
 >
AR_SREV_REVISION_9462_20
))

	)

933 
	#AR_SREV_9462_21_OR_LATER
(
_ah
) \

934 (
	`AR_SREV_9462
(
_ah
) && \

935 ((
_ah
)->
hw_vîsi⁄
.
macRev
 >
AR_SREV_REVISION_9462_21
))

	)

937 
	#AR_SREV_9565_10
(
_ah
) \

938 (
	`AR_SREV_9565
(
_ah
) && \

939 ((
_ah
)->
hw_vîsi⁄
.
macRev
 =
AR_SREV_REVISION_9565_10
))

	)

940 
	#AR_SREV_9565_101
(
_ah
) \

941 (
	`AR_SREV_9565
(
_ah
) && \

942 ((
_ah
)->
hw_vîsi⁄
.
macRev
 =
AR_SREV_REVISION_9565_101
))

	)

943 
	#AR_SREV_9565_11
(
_ah
) \

944 (
	`AR_SREV_9565
(
_ah
) && \

945 ((
_ah
)->
hw_vîsi⁄
.
macRev
 =
AR_SREV_REVISION_9565_11
))

	)

946 
	#AR_SREV_9565_11_OR_LATER
(
_ah
) \

947 (
	`AR_SREV_9565
(
_ah
) && \

948 ((
_ah
)->
hw_vîsi⁄
.
macRev
 >
AR_SREV_REVISION_9565_11
))

	)

950 
	#AR_SREV_9550
(
_ah
) \

951 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_VERSION_9550
))

	)

953 
	#AR_SREV_9580
(
_ah
) \

954 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_VERSION_9580
) && \

955 ((
_ah
)->
hw_vîsi⁄
.
macRev
 >
AR_SREV_REVISION_9580_10
))

	)

956 
	#AR_SREV_9580_10
(
_ah
) \

957 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_VERSION_9580
) && \

958 ((
_ah
)->
hw_vîsi⁄
.
macRev
 =
AR_SREV_REVISION_9580_10
))

	)

960 
	#AR_SREV_9531
(
_ah
) \

961 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_VERSION_9531
))

	)

962 
	#AR_SREV_9531_10
(
_ah
) \

963 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_VERSION_9531
) && \

964 ((
_ah
)->
hw_vîsi⁄
.
macRev
 =
AR_SREV_REVISION_9531_10
))

	)

965 
	#AR_SREV_9531_11
(
_ah
) \

966 (((
_ah
)->
hw_vîsi⁄
.
macVîsi⁄
 =
AR_SREV_VERSION_9531
) && \

967 ((
_ah
)->
hw_vîsi⁄
.
macRev
 =
AR_SREV_REVISION_9531_11
))

	)

970 
	#AR_SREV_9580_10_OR_LATER
(
_ah
) \

971 (
	`AR_SREV_9580
(
_ah
))

	)

973 
	e©h_usb_dev
 {

974 
	mAR9280_USB
 = 1,

975 
	mAR9287_USB
 = 2,

976 
	mSTORAGE_DEVICE
 = 3,

979 
	#AR_DEVID_7010
(
_ah
) \

980 (((
_ah
)->
hw_vîsi⁄
.
usbdev
 =
AR9280_USB
) || \

981 ((
_ah
)->
hw_vîsi⁄
.
usbdev
 =
AR9287_USB
))

	)

983 
	#AR_RADIO_SREV_MAJOR
 0xf0

	)

984 
	#AR_RAD5133_SREV_MAJOR
 0xc0

	)

985 
	#AR_RAD2133_SREV_MAJOR
 0xd0

	)

986 
	#AR_RAD5122_SREV_MAJOR
 0xe0

	)

987 
	#AR_RAD2122_SREV_MAJOR
 0xf0

	)

989 
	#AR_AHB_MODE
 0x4024

	)

990 
	#AR_AHB_EXACT_WR_EN
 0x00000000

	)

991 
	#AR_AHB_BUF_WR_EN
 0x00000001

	)

992 
	#AR_AHB_EXACT_RD_EN
 0x00000000

	)

993 
	#AR_AHB_CACHELINE_RD_EN
 0x00000002

	)

994 
	#AR_AHB_PREFETCH_RD_EN
 0x00000004

	)

995 
	#AR_AHB_PAGE_SIZE_1K
 0x00000000

	)

996 
	#AR_AHB_PAGE_SIZE_2K
 0x00000008

	)

997 
	#AR_AHB_PAGE_SIZE_4K
 0x00000010

	)

998 
	#AR_AHB_CUSTOM_BURST_EN
 0x000000C0

	)

999 
	#AR_AHB_CUSTOM_BURST_EN_S
 6

	)

1000 
	#AR_AHB_CUSTOM_BURST_ASYNC_FIFO_VAL
 3

	)

1002 
	#AR_INTR_RTC_IRQ
 0x00000001

	)

1003 
	#AR_INTR_MAC_IRQ
 0x00000002

	)

1004 
	#AR_INTR_EEP_PROT_ACCESS
 0x00000004

	)

1005 
	#AR_INTR_MAC_AWAKE
 0x00020000

	)

1006 
	#AR_INTR_MAC_ASLEEP
 0x00040000

	)

1007 
	#AR_INTR_SPURIOUS
 0xFFFFFFFF

	)

1010 
	#AR_INTR_SYNC_CAUSE
 (
	`AR_SREV_9340
(
ah
Ë? 0x4010 : 0x4028)

	)

1011 
	#AR_INTR_SYNC_CAUSE_CLR
 (
	`AR_SREV_9340
(
ah
Ë? 0x4010 : 0x4028)

	)

1014 
	#AR_INTR_SYNC_ENABLE
 (
	`AR_SREV_9340
(
ah
Ë? 0x4014 : 0x402c)

	)

1015 
	#AR_INTR_SYNC_ENABLE_GPIO
 0xFFFC0000

	)

1016 
	#AR_INTR_SYNC_ENABLE_GPIO_S
 18

	)

1019 
	mAR_INTR_SYNC_RTC_IRQ
 = 0x00000001,

1020 
	mAR_INTR_SYNC_MAC_IRQ
 = 0x00000002,

1021 
	mAR_INTR_SYNC_EEPROM_ILLEGAL_ACCESS
 = 0x00000004,

1022 
	mAR_INTR_SYNC_APB_TIMEOUT
 = 0x00000008,

1023 
	mAR_INTR_SYNC_PCI_MODE_CONFLICT
 = 0x00000010,

1024 
	mAR_INTR_SYNC_HOST1_FATAL
 = 0x00000020,

1025 
	mAR_INTR_SYNC_HOST1_PERR
 = 0x00000040,

1026 
	mAR_INTR_SYNC_TRCV_FIFO_PERR
 = 0x00000080,

1027 
	mAR_INTR_SYNC_RADM_CPL_EP
 = 0x00000100,

1028 
	mAR_INTR_SYNC_RADM_CPL_DLLP_ABORT
 = 0x00000200,

1029 
	mAR_INTR_SYNC_RADM_CPL_TLP_ABORT
 = 0x00000400,

1030 
	mAR_INTR_SYNC_RADM_CPL_ECRC_ERR
 = 0x00000800,

1031 
	mAR_INTR_SYNC_RADM_CPL_TIMEOUT
 = 0x00001000,

1032 
	mAR_INTR_SYNC_LOCAL_TIMEOUT
 = 0x00002000,

1033 
	mAR_INTR_SYNC_PM_ACCESS
 = 0x00004000,

1034 
	mAR_INTR_SYNC_MAC_AWAKE
 = 0x00008000,

1035 
	mAR_INTR_SYNC_MAC_ASLEEP
 = 0x00010000,

1036 
	mAR_INTR_SYNC_MAC_SLEEP_ACCESS
 = 0x00020000,

1037 
	mAR_INTR_SYNC_ALL
 = 0x0003FFFF,

1040 
	mAR_INTR_SYNC_DEFAULT
 = (
AR_INTR_SYNC_HOST1_FATAL
 |

1041 
AR_INTR_SYNC_HOST1_PERR
 |

1042 
AR_INTR_SYNC_RADM_CPL_EP
 |

1043 
AR_INTR_SYNC_RADM_CPL_DLLP_ABORT
 |

1044 
AR_INTR_SYNC_RADM_CPL_TLP_ABORT
 |

1045 
AR_INTR_SYNC_RADM_CPL_ECRC_ERR
 |

1046 
AR_INTR_SYNC_RADM_CPL_TIMEOUT
 |

1047 
AR_INTR_SYNC_LOCAL_TIMEOUT
 |

1048 
AR_INTR_SYNC_MAC_SLEEP_ACCESS
),

1050 
	mAR9340_INTR_SYNC_LOCAL_TIMEOUT
 = 0x00000010,

1052 
	mAR_INTR_SYNC_SPURIOUS
 = 0xFFFFFFFF,

1056 
	#AR_INTR_ASYNC_MASK
 (
	`AR_SREV_9340
(
ah
Ë? 0x4018 : 0x4030)

	)

1057 
	#AR_INTR_ASYNC_MASK_GPIO
 0xFFFC0000

	)

1058 
	#AR_INTR_ASYNC_MASK_GPIO_S
 18

	)

1059 
	#AR_INTR_ASYNC_MASK_MCI
 0x00000080

	)

1060 
	#AR_INTR_ASYNC_MASK_MCI_S
 7

	)

1062 
	#AR_INTR_SYNC_MASK
 (
	`AR_SREV_9340
(
ah
Ë? 0x401¯: 0x4034)

	)

1063 
	#AR_INTR_SYNC_MASK_GPIO
 0xFFFC0000

	)

1064 
	#AR_INTR_SYNC_MASK_GPIO_S
 18

	)

1066 
	#AR_INTR_ASYNC_CAUSE_CLR
 (
	`AR_SREV_9340
(
ah
Ë? 0x4020 : 0x4038)

	)

1067 
	#AR_INTR_ASYNC_CAUSE
 (
	`AR_SREV_9340
(
ah
Ë? 0x4020 : 0x4038)

	)

1068 
	#AR_INTR_ASYNC_CAUSE_MCI
 0x00000080

	)

1069 
	#AR_INTR_ASYNC_USED
 (
AR_INTR_MAC_IRQ
 | \

1070 
AR_INTR_ASYNC_CAUSE_MCI
)

	)

1073 
	#AR_INTR_ASYNC_ENABLE_MCI
 0x00000080

	)

1074 
	#AR_INTR_ASYNC_ENABLE_MCI_S
 7

	)

1077 
	#AR_INTR_ASYNC_ENABLE
 (
	`AR_SREV_9340
(
ah
Ë? 0x4024 : 0x403c)

	)

1078 
	#AR_INTR_ASYNC_ENABLE_GPIO
 0xFFFC0000

	)

1079 
	#AR_INTR_ASYNC_ENABLE_GPIO_S
 18

	)

1081 
	#AR_PCIE_SERDES
 0x4040

	)

1082 
	#AR_PCIE_SERDES2
 0x4044

	)

1083 
	#AR_PCIE_PM_CTRL
 (
	`AR_SREV_9340
(
ah
Ë? 0x4004 : 0x4014)

	)

1084 
	#AR_PCIE_PM_CTRL_ENA
 0x00080000

	)

1086 
	#AR_PCIE_PHY_REG3
 0x18c08

	)

1088 
	#AR_NUM_GPIO
 14

	)

1089 
	#AR928X_NUM_GPIO
 10

	)

1090 
	#AR9285_NUM_GPIO
 12

	)

1091 
	#AR9287_NUM_GPIO
 11

	)

1092 
	#AR9271_NUM_GPIO
 16

	)

1093 
	#AR9300_NUM_GPIO
 17

	)

1094 
	#AR7010_NUM_GPIO
 16

	)

1096 
	#AR_GPIO_IN_OUT
 (
	`AR_SREV_9340
(
ah
Ë? 0x4028 : 0x4048)

	)

1097 
	#AR_GPIO_IN_VAL
 0x0FFFC000

	)

1098 
	#AR_GPIO_IN_VAL_S
 14

	)

1099 
	#AR928X_GPIO_IN_VAL
 0x000FFC00

	)

1100 
	#AR928X_GPIO_IN_VAL_S
 10

	)

1101 
	#AR9285_GPIO_IN_VAL
 0x00FFF000

	)

1102 
	#AR9285_GPIO_IN_VAL_S
 12

	)

1103 
	#AR9287_GPIO_IN_VAL
 0x003FF800

	)

1104 
	#AR9287_GPIO_IN_VAL_S
 11

	)

1105 
	#AR9271_GPIO_IN_VAL
 0xFFFF0000

	)

1106 
	#AR9271_GPIO_IN_VAL_S
 16

	)

1107 
	#AR7010_GPIO_IN_VAL
 0x0000FFFF

	)

1108 
	#AR7010_GPIO_IN_VAL_S
 0

	)

1110 
	#AR_GPIO_IN
 (
	`AR_SREV_9340
(
ah
Ë? 0x402¯: 0x404c)

	)

1111 
	#AR9300_GPIO_IN_VAL
 0x0001FFFF

	)

1112 
	#AR9300_GPIO_IN_VAL_S
 0

	)

1114 
	#AR_GPIO_OE_OUT
 (
	`AR_SREV_9340
(
ah
) ? 0x4030 : \

1115 (
	`AR_SREV_9300_20_OR_LATER
(
ah
Ë? 0x4050 : 0x404c))

	)

1116 
	#AR_GPIO_OE_OUT_DRV
 0x3

	)

1117 
	#AR_GPIO_OE_OUT_DRV_NO
 0x0

	)

1118 
	#AR_GPIO_OE_OUT_DRV_LOW
 0x1

	)

1119 
	#AR_GPIO_OE_OUT_DRV_HI
 0x2

	)

1120 
	#AR_GPIO_OE_OUT_DRV_ALL
 0x3

	)

1122 
	#AR7010_GPIO_OE
 0x52000

	)

1123 
	#AR7010_GPIO_OE_MASK
 0x1

	)

1124 
	#AR7010_GPIO_OE_AS_OUTPUT
 0x0

	)

1125 
	#AR7010_GPIO_OE_AS_INPUT
 0x1

	)

1126 
	#AR7010_GPIO_IN
 0x52004

	)

1127 
	#AR7010_GPIO_OUT
 0x52008

	)

1128 
	#AR7010_GPIO_SET
 0x5200C

	)

1129 
	#AR7010_GPIO_CLEAR
 0x52010

	)

1130 
	#AR7010_GPIO_INT
 0x52014

	)

1131 
	#AR7010_GPIO_INT_TYPE
 0x52018

	)

1132 
	#AR7010_GPIO_INT_POLARITY
 0x5201C

	)

1133 
	#AR7010_GPIO_PENDING
 0x52020

	)

1134 
	#AR7010_GPIO_INT_MASK
 0x52024

	)

1135 
	#AR7010_GPIO_FUNCTION
 0x52028

	)

1137 
	#AR_GPIO_INTR_POL
 (
	`AR_SREV_9340
(
ah
) ? 0x4038 : \

1138 (
	`AR_SREV_9300_20_OR_LATER
(
ah
Ë? 0x4058 : 0x4050))

	)

1139 
	#AR_GPIO_INTR_POL_VAL
 0x0001FFFF

	)

1140 
	#AR_GPIO_INTR_POL_VAL_S
 0

	)

1142 
	#AR_GPIO_INPUT_EN_VAL
 (
	`AR_SREV_9340
(
ah
) ? 0x403c : \

1143 (
	`AR_SREV_9300_20_OR_LATER
(
ah
Ë? 0x405¯: 0x4054))

	)

1144 
	#AR_GPIO_INPUT_EN_VAL_BT_PRIORITY_DEF
 0x00000004

	)

1145 
	#AR_GPIO_INPUT_EN_VAL_BT_PRIORITY_S
 2

	)

1146 
	#AR_GPIO_INPUT_EN_VAL_BT_FREQUENCY_DEF
 0x00000008

	)

1147 
	#AR_GPIO_INPUT_EN_VAL_BT_FREQUENCY_S
 3

	)

1148 
	#AR_GPIO_INPUT_EN_VAL_BT_ACTIVE_DEF
 0x00000010

	)

1149 
	#AR_GPIO_INPUT_EN_VAL_BT_ACTIVE_S
 4

	)

1150 
	#AR_GPIO_INPUT_EN_VAL_RFSILENT_DEF
 0x00000080

	)

1151 
	#AR_GPIO_INPUT_EN_VAL_RFSILENT_DEF_S
 7

	)

1152 
	#AR_GPIO_INPUT_EN_VAL_BT_PRIORITY_BB
 0x00000400

	)

1153 
	#AR_GPIO_INPUT_EN_VAL_BT_PRIORITY_BB_S
 10

	)

1154 
	#AR_GPIO_INPUT_EN_VAL_BT_ACTIVE_BB
 0x00001000

	)

1155 
	#AR_GPIO_INPUT_EN_VAL_BT_ACTIVE_BB_S
 12

	)

1156 
	#AR_GPIO_INPUT_EN_VAL_RFSILENT_BB
 0x00008000

	)

1157 
	#AR_GPIO_INPUT_EN_VAL_RFSILENT_BB_S
 15

	)

1158 
	#AR_GPIO_RTC_RESET_OVERRIDE_ENABLE
 0x00010000

	)

1159 
	#AR_GPIO_JTAG_DISABLE
 0x00020000

	)

1161 
	#AR_GPIO_INPUT_MUX1
 (
	`AR_SREV_9340
(
ah
) ? 0x4040 : \

1162 (
	`AR_SREV_9300_20_OR_LATER
(
ah
Ë? 0x4060 : 0x4058))

	)

1163 
	#AR_GPIO_INPUT_MUX1_BT_ACTIVE
 0x000f0000

	)

1164 
	#AR_GPIO_INPUT_MUX1_BT_ACTIVE_S
 16

	)

1165 
	#AR_GPIO_INPUT_MUX1_BT_PRIORITY
 0x00000f00

	)

1166 
	#AR_GPIO_INPUT_MUX1_BT_PRIORITY_S
 8

	)

1168 
	#AR_GPIO_INPUT_MUX2
 (
	`AR_SREV_9340
(
ah
) ? 0x4044 : \

1169 (
	`AR_SREV_9300_20_OR_LATER
(
ah
Ë? 0x4064 : 0x405c))

	)

1170 
	#AR_GPIO_INPUT_MUX2_CLK25
 0x0000000f

	)

1171 
	#AR_GPIO_INPUT_MUX2_CLK25_S
 0

	)

1172 
	#AR_GPIO_INPUT_MUX2_RFSILENT
 0x000000f0

	)

1173 
	#AR_GPIO_INPUT_MUX2_RFSILENT_S
 4

	)

1174 
	#AR_GPIO_INPUT_MUX2_RTC_RESET
 0x00000f00

	)

1175 
	#AR_GPIO_INPUT_MUX2_RTC_RESET_S
 8

	)

1177 
	#AR_GPIO_OUTPUT_MUX1
 (
	`AR_SREV_9340
(
ah
) ? 0x4048 : \

1178 (
	`AR_SREV_9300_20_OR_LATER
(
ah
Ë? 0x4068 : 0x4060))

	)

1179 
	#AR_GPIO_OUTPUT_MUX2
 (
	`AR_SREV_9340
(
ah
) ? 0x404c : \

1180 (
	`AR_SREV_9300_20_OR_LATER
(
ah
Ë? 0x406¯: 0x4064))

	)

1181 
	#AR_GPIO_OUTPUT_MUX3
 (
	`AR_SREV_9340
(
ah
) ? 0x4050 : \

1182 (
	`AR_SREV_9300_20_OR_LATER
(
ah
Ë? 0x4070 : 0x4068))

	)

1184 
	#AR_INPUT_STATE
 (
	`AR_SREV_9340
(
ah
) ? 0x4054 : \

1185 (
	`AR_SREV_9300_20_OR_LATER
(
ah
Ë? 0x4074 : 0x406c))

	)

1187 
	#AR_EEPROM_STATUS_DATA
 (
	`AR_SREV_9340
(
ah
) ? 0x40c8 : \

1188 (
	`AR_SREV_9300_20_OR_LATER
(
ah
Ë? 0x4084 : 0x407c))

	)

1189 
	#AR_EEPROM_STATUS_DATA_VAL
 0x0000ffff

	)

1190 
	#AR_EEPROM_STATUS_DATA_VAL_S
 0

	)

1191 
	#AR_EEPROM_STATUS_DATA_BUSY
 0x00010000

	)

1192 
	#AR_EEPROM_STATUS_DATA_BUSY_ACCESS
 0x00020000

	)

1193 
	#AR_EEPROM_STATUS_DATA_PROT_ACCESS
 0x00040000

	)

1194 
	#AR_EEPROM_STATUS_DATA_ABSENT_ACCESS
 0x00080000

	)

1196 
	#AR_OBS
 (
	`AR_SREV_9340
(
ah
) ? 0x405c : \

1197 (
	`AR_SREV_9300_20_OR_LATER
(
ah
Ë? 0x4088 : 0x4080))

	)

1199 
	#AR_GPIO_PDPU
 (
	`AR_SREV_9300_20_OR_LATER
(
ah
Ë? 0x4090 : 0x4088)

	)

1201 
	#AR_PCIE_MSI
 (
	`AR_SREV_9340
(
ah
) ? 0x40d8 : \

1202 (
	`AR_SREV_9300_20_OR_LATER
(
ah
Ë? 0x40a4 : 0x4094))

	)

1203 
	#AR_PCIE_MSI_ENABLE
 0x00000001

	)

1205 
	#AR_INTR_PRIO_SYNC_ENABLE
 (
	`AR_SREV_9340
(
ah
Ë? 0x4088 : 0x40c4)

	)

1206 
	#AR_INTR_PRIO_ASYNC_MASK
 (
	`AR_SREV_9340
(
ah
Ë? 0x408¯: 0x40c8)

	)

1207 
	#AR_INTR_PRIO_SYNC_MASK
 (
	`AR_SREV_9340
(
ah
Ë? 0x4090 : 0x40cc)

	)

1208 
	#AR_INTR_PRIO_ASYNC_ENABLE
 (
	`AR_SREV_9340
(
ah
Ë? 0x4094 : 0x40d4)

	)

1209 
	#AR_ENT_OTP
 0x40d8

	)

1210 
	#AR_ENT_OTP_CHAIN2_DISABLE
 0x00020000

	)

1211 
	#AR_ENT_OTP_49GHZ_DISABLE
 0x00100000

	)

1212 
	#AR_ENT_OTP_MIN_PKT_SIZE_DISABLE
 0x00800000

	)

1214 
	#AR_CH0_BB_DPLL1
 0x16180

	)

1215 
	#AR_CH0_BB_DPLL1_REFDIV
 0xF8000000

	)

1216 
	#AR_CH0_BB_DPLL1_REFDIV_S
 27

	)

1217 
	#AR_CH0_BB_DPLL1_NINI
 0x07FC0000

	)

1218 
	#AR_CH0_BB_DPLL1_NINI_S
 18

	)

1219 
	#AR_CH0_BB_DPLL1_NFRAC
 0x0003FFFF

	)

1220 
	#AR_CH0_BB_DPLL1_NFRAC_S
 0

	)

1222 
	#AR_CH0_BB_DPLL2
 0x16184

	)

1223 
	#AR_CH0_BB_DPLL2_LOCAL_PLL
 0x40000000

	)

1224 
	#AR_CH0_BB_DPLL2_LOCAL_PLL_S
 30

	)

1225 
	#AR_CH0_DPLL2_KI
 0x3C000000

	)

1226 
	#AR_CH0_DPLL2_KI_S
 26

	)

1227 
	#AR_CH0_DPLL2_KD
 0x03F80000

	)

1228 
	#AR_CH0_DPLL2_KD_S
 19

	)

1229 
	#AR_CH0_BB_DPLL2_EN_NEGTRIG
 0x00040000

	)

1230 
	#AR_CH0_BB_DPLL2_EN_NEGTRIG_S
 18

	)

1231 
	#AR_CH0_BB_DPLL2_PLL_PWD
 0x00010000

	)

1232 
	#AR_CH0_BB_DPLL2_PLL_PWD_S
 16

	)

1233 
	#AR_CH0_BB_DPLL2_OUTDIV
 0x0000E000

	)

1234 
	#AR_CH0_BB_DPLL2_OUTDIV_S
 13

	)

1236 
	#AR_CH0_BB_DPLL3
 0x16188

	)

1237 
	#AR_CH0_BB_DPLL3_PHASE_SHIFT
 0x3F800000

	)

1238 
	#AR_CH0_BB_DPLL3_PHASE_SHIFT_S
 23

	)

1240 
	#AR_CH0_DDR_DPLL2
 0x16244

	)

1241 
	#AR_CH0_DDR_DPLL3
 0x16248

	)

1242 
	#AR_CH0_DPLL3_PHASE_SHIFT
 0x3F800000

	)

1243 
	#AR_CH0_DPLL3_PHASE_SHIFT_S
 23

	)

1244 
	#AR_PHY_CCA_NOM_VAL_2GHZ
 -118

	)

1246 
	#AR_RTC_9300_SOC_PLL_DIV_INT
 0x0000003f

	)

1247 
	#AR_RTC_9300_SOC_PLL_DIV_INT_S
 0

	)

1248 
	#AR_RTC_9300_SOC_PLL_DIV_FRAC
 0x000fffc0

	)

1249 
	#AR_RTC_9300_SOC_PLL_DIV_FRAC_S
 6

	)

1250 
	#AR_RTC_9300_SOC_PLL_REFDIV
 0x01f00000

	)

1251 
	#AR_RTC_9300_SOC_PLL_REFDIV_S
 20

	)

1252 
	#AR_RTC_9300_SOC_PLL_CLKSEL
 0x06000000

	)

1253 
	#AR_RTC_9300_SOC_PLL_CLKSEL_S
 25

	)

1254 
	#AR_RTC_9300_SOC_PLL_BYPASS
 0x08000000

	)

1256 
	#AR_RTC_9300_PLL_DIV
 0x000003ff

	)

1257 
	#AR_RTC_9300_PLL_DIV_S
 0

	)

1258 
	#AR_RTC_9300_PLL_REFDIV
 0x00003C00

	)

1259 
	#AR_RTC_9300_PLL_REFDIV_S
 10

	)

1260 
	#AR_RTC_9300_PLL_CLKSEL
 0x0000C000

	)

1261 
	#AR_RTC_9300_PLL_CLKSEL_S
 14

	)

1262 
	#AR_RTC_9300_PLL_BYPASS
 0x00010000

	)

1264 
	#AR_RTC_9160_PLL_DIV
 0x000003ff

	)

1265 
	#AR_RTC_9160_PLL_DIV_S
 0

	)

1266 
	#AR_RTC_9160_PLL_REFDIV
 0x00003C00

	)

1267 
	#AR_RTC_9160_PLL_REFDIV_S
 10

	)

1268 
	#AR_RTC_9160_PLL_CLKSEL
 0x0000C000

	)

1269 
	#AR_RTC_9160_PLL_CLKSEL_S
 14

	)

1271 
	#AR_RTC_BASE
 0x00020000

	)

1272 
	#AR_RTC_RC
 \

1273 ((
	`AR_SREV_9100
(
ah
)Ë? (
AR_RTC_BASE
 + 0x0000Ë: 0x7000)

	)

1274 
	#AR_RTC_RC_M
 0x00000003

	)

1275 
	#AR_RTC_RC_MAC_WARM
 0x00000001

	)

1276 
	#AR_RTC_RC_MAC_COLD
 0x00000002

	)

1277 
	#AR_RTC_RC_COLD_RESET
 0x00000004

	)

1278 
	#AR_RTC_RC_WARM_RESET
 0x00000008

	)

1281 
	#AR_RTC_XTAL_CONTROL
 0x7004

	)

1284 
	#AR_RTC_REG_CONTROL0
 0x7008

	)

1287 
	#AR_RTC_REG_CONTROL1
 0x700c

	)

1288 
	#AR_RTC_REG_CONTROL1_SWREG_PROGRAM
 0x00000001

	)

1290 
	#AR_RTC_PLL_CONTROL
 \

1291 ((
	`AR_SREV_9100
(
ah
)Ë? (
AR_RTC_BASE
 + 0x0014Ë: 0x7014)

	)

1293 
	#AR_RTC_PLL_CONTROL2
 0x703c

	)

1295 
	#AR_RTC_PLL_DIV
 0x0000001f

	)

1296 
	#AR_RTC_PLL_DIV_S
 0

	)

1297 
	#AR_RTC_PLL_DIV2
 0x00000020

	)

1298 
	#AR_RTC_PLL_REFDIV_5
 0x000000c0

	)

1299 
	#AR_RTC_PLL_CLKSEL
 0x00000300

	)

1300 
	#AR_RTC_PLL_CLKSEL_S
 8

	)

1301 
	#AR_RTC_PLL_BYPASS
 0x00010000

	)

1302 
	#AR_RTC_PLL_NOPWD
 0x00040000

	)

1303 
	#AR_RTC_PLL_NOPWD_S
 18

	)

1305 
	#PLL3
 0x16188

	)

1306 
	#PLL3_DO_MEAS_MASK
 0x40000000

	)

1307 
	#PLL4
 0x1618c

	)

1308 
	#PLL4_MEAS_DONE
 0x8

	)

1309 
	#SQSUM_DVC_MASK
 0x007ffff8

	)

1311 
	#AR_RTC_RESET
 \

1312 ((
	`AR_SREV_9100
(
ah
)Ë? (
AR_RTC_BASE
 + 0x0040Ë: 0x7040)

	)

1313 
	#AR_RTC_RESET_EN
 (0x00000001)

	)

1315 
	#AR_RTC_STATUS
 \

1316 ((
	`AR_SREV_9100
(
ah
)Ë? (
AR_RTC_BASE
 + 0x0044Ë: 0x7044)

	)

1318 
	#AR_RTC_STATUS_M
 \

1319 ((
	`AR_SREV_9100
(
ah
)Ë? 0x0000003‡: 0x0000000f)

	)

1321 
	#AR_RTC_PM_STATUS_M
 0x0000000f

	)

1323 
	#AR_RTC_STATUS_SHUTDOWN
 0x00000001

	)

1324 
	#AR_RTC_STATUS_ON
 0x00000002

	)

1325 
	#AR_RTC_STATUS_SLEEP
 0x00000004

	)

1326 
	#AR_RTC_STATUS_WAKEUP
 0x00000008

	)

1328 
	#AR_RTC_SLEEP_CLK
 \

1329 ((
	`AR_SREV_9100
(
ah
)Ë? (
AR_RTC_BASE
 + 0x0048Ë: 0x7048)

	)

1330 
	#AR_RTC_FORCE_DERIVED_CLK
 0x2

	)

1331 
	#AR_RTC_FORCE_SWREG_PRD
 0x00000004

	)

1333 
	#AR_RTC_FORCE_WAKE
 \

1334 ((
	`AR_SREV_9100
(
ah
)Ë? (
AR_RTC_BASE
 + 0x004cË: 0x704c)

	)

1335 
	#AR_RTC_FORCE_WAKE_EN
 0x00000001

	)

1336 
	#AR_RTC_FORCE_WAKE_ON_INT
 0x00000002

	)

1339 
	#AR_RTC_INTR_CAUSE
 \

1340 ((
	`AR_SREV_9100
(
ah
)Ë? (
AR_RTC_BASE
 + 0x0050Ë: 0x7050)

	)

1342 
	#AR_RTC_INTR_ENABLE
 \

1343 ((
	`AR_SREV_9100
(
ah
)Ë? (
AR_RTC_BASE
 + 0x0054Ë: 0x7054)

	)

1345 
	#AR_RTC_INTR_MASK
 \

1346 ((
	`AR_SREV_9100
(
ah
)Ë? (
AR_RTC_BASE
 + 0x0058Ë: 0x7058)

	)

1348 
	#AR_RTC_KEEP_AWAKE
 0x7034

	)

1352 
	#AR_RTC_DERIVED_CLK
 \

1353 (
	`AR_SREV_9100
(
ah
Ë? (
AR_RTC_BASE
 + 0x0038Ë: 0x7038)

	)

1354 
	#AR_RTC_DERIVED_CLK_PERIOD
 0x0000ff„

	)

1355 
	#AR_RTC_DERIVED_CLK_PERIOD_S
 1

	)

1357 
	#AR_SEQ_MASK
 0x8060

	)

1359 
	#AR_AN_RF2G1_CH0
 0x7810

	)

1360 
	#AR_AN_RF2G1_CH0_OB
 0x03800000

	)

1361 
	#AR_AN_RF2G1_CH0_OB_S
 23

	)

1362 
	#AR_AN_RF2G1_CH0_DB
 0x1C000000

	)

1363 
	#AR_AN_RF2G1_CH0_DB_S
 26

	)

1365 
	#AR_AN_RF5G1_CH0
 0x7818

	)

1366 
	#AR_AN_RF5G1_CH0_OB5
 0x00070000

	)

1367 
	#AR_AN_RF5G1_CH0_OB5_S
 16

	)

1368 
	#AR_AN_RF5G1_CH0_DB5
 0x00380000

	)

1369 
	#AR_AN_RF5G1_CH0_DB5_S
 19

	)

1371 
	#AR_AN_RF2G1_CH1
 0x7834

	)

1372 
	#AR_AN_RF2G1_CH1_OB
 0x03800000

	)

1373 
	#AR_AN_RF2G1_CH1_OB_S
 23

	)

1374 
	#AR_AN_RF2G1_CH1_DB
 0x1C000000

	)

1375 
	#AR_AN_RF2G1_CH1_DB_S
 26

	)

1377 
	#AR_AN_RF5G1_CH1
 0x783C

	)

1378 
	#AR_AN_RF5G1_CH1_OB5
 0x00070000

	)

1379 
	#AR_AN_RF5G1_CH1_OB5_S
 16

	)

1380 
	#AR_AN_RF5G1_CH1_DB5
 0x00380000

	)

1381 
	#AR_AN_RF5G1_CH1_DB5_S
 19

	)

1383 
	#AR_AN_TOP1
 0x7890

	)

1384 
	#AR_AN_TOP1_DACIPMODE
 0x00040000

	)

1385 
	#AR_AN_TOP1_DACIPMODE_S
 18

	)

1387 
	#AR_AN_TOP2
 0x7894

	)

1388 
	#AR_AN_TOP2_XPABIAS_LVL
 0xC0000000

	)

1389 
	#AR_AN_TOP2_XPABIAS_LVL_S
 30

	)

1390 
	#AR_AN_TOP2_LOCALBIAS
 0x00200000

	)

1391 
	#AR_AN_TOP2_LOCALBIAS_S
 21

	)

1392 
	#AR_AN_TOP2_PWDCLKIND
 0x00400000

	)

1393 
	#AR_AN_TOP2_PWDCLKIND_S
 22

	)

1395 
	#AR_AN_SYNTH9
 0x7868

	)

1396 
	#AR_AN_SYNTH9_REFDIVA
 0xf8000000

	)

1397 
	#AR_AN_SYNTH9_REFDIVA_S
 27

	)

1399 
	#AR9285_AN_RF2G1
 0x7820

	)

1400 
	#AR9285_AN_RF2G1_ENPACAL
 0x00000800

	)

1401 
	#AR9285_AN_RF2G1_ENPACAL_S
 11

	)

1402 
	#AR9285_AN_RF2G1_PDPADRV1
 0x02000000

	)

1403 
	#AR9285_AN_RF2G1_PDPADRV1_S
 25

	)

1404 
	#AR9285_AN_RF2G1_PDPADRV2
 0x01000000

	)

1405 
	#AR9285_AN_RF2G1_PDPADRV2_S
 24

	)

1406 
	#AR9285_AN_RF2G1_PDPAOUT
 0x00800000

	)

1407 
	#AR9285_AN_RF2G1_PDPAOUT_S
 23

	)

1410 
	#AR9285_AN_RF2G2
 0x7824

	)

1411 
	#AR9285_AN_RF2G2_OFFCAL
 0x00001000

	)

1412 
	#AR9285_AN_RF2G2_OFFCAL_S
 12

	)

1414 
	#AR9285_AN_RF2G3
 0x7828

	)

1415 
	#AR9285_AN_RF2G3_PDVCCOMP
 0x02000000

	)

1416 
	#AR9285_AN_RF2G3_PDVCCOMP_S
 25

	)

1417 
	#AR9285_AN_RF2G3_OB_0
 0x00E00000

	)

1418 
	#AR9285_AN_RF2G3_OB_0_S
 21

	)

1419 
	#AR9285_AN_RF2G3_OB_1
 0x001C0000

	)

1420 
	#AR9285_AN_RF2G3_OB_1_S
 18

	)

1421 
	#AR9285_AN_RF2G3_OB_2
 0x00038000

	)

1422 
	#AR9285_AN_RF2G3_OB_2_S
 15

	)

1423 
	#AR9285_AN_RF2G3_OB_3
 0x00007000

	)

1424 
	#AR9285_AN_RF2G3_OB_3_S
 12

	)

1425 
	#AR9285_AN_RF2G3_OB_4
 0x00000E00

	)

1426 
	#AR9285_AN_RF2G3_OB_4_S
 9

	)

1428 
	#AR9285_AN_RF2G3_DB1_0
 0x000001C0

	)

1429 
	#AR9285_AN_RF2G3_DB1_0_S
 6

	)

1430 
	#AR9285_AN_RF2G3_DB1_1
 0x00000038

	)

1431 
	#AR9285_AN_RF2G3_DB1_1_S
 3

	)

1432 
	#AR9285_AN_RF2G3_DB1_2
 0x00000007

	)

1433 
	#AR9285_AN_RF2G3_DB1_2_S
 0

	)

1434 
	#AR9285_AN_RF2G4
 0x782C

	)

1435 
	#AR9285_AN_RF2G4_DB1_3
 0xE0000000

	)

1436 
	#AR9285_AN_RF2G4_DB1_3_S
 29

	)

1437 
	#AR9285_AN_RF2G4_DB1_4
 0x1C000000

	)

1438 
	#AR9285_AN_RF2G4_DB1_4_S
 26

	)

1440 
	#AR9285_AN_RF2G4_DB2_0
 0x03800000

	)

1441 
	#AR9285_AN_RF2G4_DB2_0_S
 23

	)

1442 
	#AR9285_AN_RF2G4_DB2_1
 0x00700000

	)

1443 
	#AR9285_AN_RF2G4_DB2_1_S
 20

	)

1444 
	#AR9285_AN_RF2G4_DB2_2
 0x000E0000

	)

1445 
	#AR9285_AN_RF2G4_DB2_2_S
 17

	)

1446 
	#AR9285_AN_RF2G4_DB2_3
 0x0001C000

	)

1447 
	#AR9285_AN_RF2G4_DB2_3_S
 14

	)

1448 
	#AR9285_AN_RF2G4_DB2_4
 0x00003800

	)

1449 
	#AR9285_AN_RF2G4_DB2_4_S
 11

	)

1451 
	#AR9285_RF2G5
 0x7830

	)

1452 
	#AR9285_RF2G5_IC50TX
 0xfffff8ff

	)

1453 
	#AR9285_RF2G5_IC50TX_SET
 0x00000400

	)

1454 
	#AR9285_RF2G5_IC50TX_XE_SET
 0x00000500

	)

1455 
	#AR9285_RF2G5_IC50TX_CLEAR
 0x00000700

	)

1456 
	#AR9285_RF2G5_IC50TX_CLEAR_S
 8

	)

1459 
	#AR9271_AN_RF2G3_OB_cck
 0x001C0000

	)

1460 
	#AR9271_AN_RF2G3_OB_cck_S
 18

	)

1461 
	#AR9271_AN_RF2G3_OB_psk
 0x00038000

	)

1462 
	#AR9271_AN_RF2G3_OB_psk_S
 15

	)

1463 
	#AR9271_AN_RF2G3_OB_qam
 0x00007000

	)

1464 
	#AR9271_AN_RF2G3_OB_qam_S
 12

	)

1466 
	#AR9271_AN_RF2G3_DB_1
 0x00E00000

	)

1467 
	#AR9271_AN_RF2G3_DB_1_S
 21

	)

1469 
	#AR9271_AN_RF2G3_CCOMP
 0xFFF

	)

1470 
	#AR9271_AN_RF2G3_CCOMP_S
 0

	)

1472 
	#AR9271_AN_RF2G4_DB_2
 0xE0000000

	)

1473 
	#AR9271_AN_RF2G4_DB_2_S
 29

	)

1475 
	#AR9285_AN_RF2G6
 0x7834

	)

1476 
	#AR9285_AN_RF2G6_CCOMP
 0x00007800

	)

1477 
	#AR9285_AN_RF2G6_CCOMP_S
 11

	)

1478 
	#AR9285_AN_RF2G6_OFFS
 0x03f00000

	)

1479 
	#AR9285_AN_RF2G6_OFFS_S
 20

	)

1481 
	#AR9271_AN_RF2G6_OFFS
 0x07f00000

	)

1482 
	#AR9271_AN_RF2G6_OFFS_S
 20

	)

1484 
	#AR9285_AN_RF2G7
 0x7838

	)

1485 
	#AR9285_AN_RF2G7_PWDDB
 0x00000002

	)

1486 
	#AR9285_AN_RF2G7_PWDDB_S
 1

	)

1487 
	#AR9285_AN_RF2G7_PADRVGN2TAB0
 0xE0000000

	)

1488 
	#AR9285_AN_RF2G7_PADRVGN2TAB0_S
 29

	)

1490 
	#AR9285_AN_RF2G8
 0x783C

	)

1491 
	#AR9285_AN_RF2G8_PADRVGN2TAB0
 0x0001C000

	)

1492 
	#AR9285_AN_RF2G8_PADRVGN2TAB0_S
 14

	)

1495 
	#AR9285_AN_RF2G9
 0x7840

	)

1496 
	#AR9285_AN_RXTXBB1
 0x7854

	)

1497 
	#AR9285_AN_RXTXBB1_PDRXTXBB1
 0x00000020

	)

1498 
	#AR9285_AN_RXTXBB1_PDRXTXBB1_S
 5

	)

1499 
	#AR9285_AN_RXTXBB1_PDV2I
 0x00000080

	)

1500 
	#AR9285_AN_RXTXBB1_PDV2I_S
 7

	)

1501 
	#AR9285_AN_RXTXBB1_PDDACIF
 0x00000100

	)

1502 
	#AR9285_AN_RXTXBB1_PDDACIF_S
 8

	)

1503 
	#AR9285_AN_RXTXBB1_SPARE9
 0x00000001

	)

1504 
	#AR9285_AN_RXTXBB1_SPARE9_S
 0

	)

1506 
	#AR9285_AN_TOP2
 0x7868

	)

1508 
	#AR9285_AN_TOP3
 0x786c

	)

1509 
	#AR9285_AN_TOP3_XPABIAS_LVL
 0x0000000C

	)

1510 
	#AR9285_AN_TOP3_XPABIAS_LVL_S
 2

	)

1511 
	#AR9285_AN_TOP3_PWDDAC
 0x00800000

	)

1512 
	#AR9285_AN_TOP3_PWDDAC_S
 23

	)

1514 
	#AR9285_AN_TOP4
 0x7870

	)

1515 
	#AR9285_AN_TOP4_DEFAULT
 0x10142c00

	)

1517 
	#AR9287_AN_RF2G3_CH0
 0x7808

	)

1518 
	#AR9287_AN_RF2G3_CH1
 0x785c

	)

1519 
	#AR9287_AN_RF2G3_DB1
 0xE0000000

	)

1520 
	#AR9287_AN_RF2G3_DB1_S
 29

	)

1521 
	#AR9287_AN_RF2G3_DB2
 0x1C000000

	)

1522 
	#AR9287_AN_RF2G3_DB2_S
 26

	)

1523 
	#AR9287_AN_RF2G3_OB_CCK
 0x03800000

	)

1524 
	#AR9287_AN_RF2G3_OB_CCK_S
 23

	)

1525 
	#AR9287_AN_RF2G3_OB_PSK
 0x00700000

	)

1526 
	#AR9287_AN_RF2G3_OB_PSK_S
 20

	)

1527 
	#AR9287_AN_RF2G3_OB_QAM
 0x000E0000

	)

1528 
	#AR9287_AN_RF2G3_OB_QAM_S
 17

	)

1529 
	#AR9287_AN_RF2G3_OB_PAL_OFF
 0x0001C000

	)

1530 
	#AR9287_AN_RF2G3_OB_PAL_OFF_S
 14

	)

1532 
	#AR9287_AN_TXPC0
 0x7898

	)

1533 
	#AR9287_AN_TXPC0_TXPCMODE
 0x0000C000

	)

1534 
	#AR9287_AN_TXPC0_TXPCMODE_S
 14

	)

1535 
	#AR9287_AN_TXPC0_TXPCMODE_NORMAL
 0

	)

1536 
	#AR9287_AN_TXPC0_TXPCMODE_TEST
 1

	)

1537 
	#AR9287_AN_TXPC0_TXPCMODE_TEMPSENSE
 2

	)

1538 
	#AR9287_AN_TXPC0_TXPCMODE_ATBTEST
 3

	)

1540 
	#AR9287_AN_TOP2
 0x78b4

	)

1541 
	#AR9287_AN_TOP2_XPABIAS_LVL
 0xC0000000

	)

1542 
	#AR9287_AN_TOP2_XPABIAS_LVL_S
 30

	)

1545 
	#AR9271_RESET_POWER_DOWN_CONTROL
 0x50044

	)

1546 
	#AR9271_RADIO_RF_RST
 0x20

	)

1547 
	#AR9271_GATE_MAC_CTL
 0x4000

	)

1549 
	#AR_STA_ID1_STA_AP
 0x00010000

	)

1550 
	#AR_STA_ID1_ADHOC
 0x00020000

	)

1551 
	#AR_STA_ID1_PWR_SAV
 0x00040000

	)

1552 
	#AR_STA_ID1_KSRCHDIS
 0x00080000

	)

1553 
	#AR_STA_ID1_PCF
 0x00100000

	)

1554 
	#AR_STA_ID1_USE_DEFANT
 0x00200000

	)

1555 
	#AR_STA_ID1_DEFANT_UPDATE
 0x00400000

	)

1556 
	#AR_STA_ID1_AR9100_BA_FIX
 0x00400000

	)

1557 
	#AR_STA_ID1_RTS_USE_DEF
 0x00800000

	)

1558 
	#AR_STA_ID1_ACKCTS_6MB
 0x01000000

	)

1559 
	#AR_STA_ID1_BASE_RATE_11B
 0x02000000

	)

1560 
	#AR_STA_ID1_SECTOR_SELF_GEN
 0x04000000

	)

1561 
	#AR_STA_ID1_CRPT_MIC_ENABLE
 0x08000000

	)

1562 
	#AR_STA_ID1_KSRCH_MODE
 0x10000000

	)

1563 
	#AR_STA_ID1_PRESERVE_SEQNUM
 0x20000000

	)

1564 
	#AR_STA_ID1_CBCIV_ENDIAN
 0x40000000

	)

1565 
	#AR_STA_ID1_MCAST_KSRCH
 0x80000000

	)

1567 
	#AR_BSS_ID0
 0x8008

	)

1568 
	#AR_BSS_ID1
 0x800C

	)

1569 
	#AR_BSS_ID1_U16
 0x0000FFFF

	)

1570 
	#AR_BSS_ID1_AID
 0x07FF0000

	)

1571 
	#AR_BSS_ID1_AID_S
 16

	)

1573 
	#AR_BCN_RSSI_AVE
 0x8010

	)

1574 
	#AR_BCN_RSSI_AVE_MASK
 0x00000FFF

	)

1576 
	#AR_TIME_OUT
 0x8014

	)

1577 
	#AR_TIME_OUT_ACK
 0x00003FFF

	)

1578 
	#AR_TIME_OUT_ACK_S
 0

	)

1579 
	#AR_TIME_OUT_CTS
 0x3FFF0000

	)

1580 
	#AR_TIME_OUT_CTS_S
 16

	)

1582 
	#AR_RSSI_THR
 0x8018

	)

1583 
	#AR_RSSI_THR_MASK
 0x000000FF

	)

1584 
	#AR_RSSI_THR_BM_THR
 0x0000FF00

	)

1585 
	#AR_RSSI_THR_BM_THR_S
 8

	)

1586 
	#AR_RSSI_BCN_WEIGHT
 0x1F000000

	)

1587 
	#AR_RSSI_BCN_WEIGHT_S
 24

	)

1588 
	#AR_RSSI_BCN_RSSI_RST
 0x20000000

	)

1590 
	#AR_USEC
 0x801c

	)

1591 
	#AR_USEC_USEC
 0x0000007F

	)

1592 
	#AR_USEC_TX_LAT
 0x007FC000

	)

1593 
	#AR_USEC_TX_LAT_S
 14

	)

1594 
	#AR_USEC_RX_LAT
 0x1F800000

	)

1595 
	#AR_USEC_RX_LAT_S
 23

	)

1596 
	#AR_USEC_ASYNC_FIFO
 0x12E00074

	)

1598 
	#AR_RESET_TSF
 0x8020

	)

1599 
	#AR_RESET_TSF_ONCE
 0x01000000

	)

1601 
	#AR_MAX_CFP_DUR
 0x8038

	)

1602 
	#AR_CFP_VAL
 0x0000FFFF

	)

1604 
	#AR_RX_FILTER
 0x803C

	)

1606 
	#AR_MCAST_FIL0
 0x8040

	)

1607 
	#AR_MCAST_FIL1
 0x8044

	)

1618 
	#AR_DIAG_SW
 0x8048

	)

1619 
	#AR_DIAG_CACHE_ACK
 0x00000001

	)

1620 
	#AR_DIAG_ACK_DIS
 0x00000002

	)

1621 
	#AR_DIAG_CTS_DIS
 0x00000004

	)

1622 
	#AR_DIAG_ENCRYPT_DIS
 0x00000008

	)

1623 
	#AR_DIAG_DECRYPT_DIS
 0x00000010

	)

1624 
	#AR_DIAG_RX_DIS
 0x00000020

	)

1625 
	#AR_DIAG_LOOP_BACK
 0x00000040

	)

1626 
	#AR_DIAG_CORR_FCS
 0x00000080

	)

1627 
	#AR_DIAG_CHAN_INFO
 0x00000100

	)

1628 
	#AR_DIAG_SCRAM_SEED
 0x0001FE00

	)

1629 
	#AR_DIAG_SCRAM_SEED_S
 8

	)

1630 
	#AR_DIAG_FRAME_NV0
 0x00020000

	)

1631 
	#AR_DIAG_OBS_PT_SEL1
 0x000C0000

	)

1632 
	#AR_DIAG_OBS_PT_SEL1_S
 18

	)

1633 
	#AR_DIAG_OBS_PT_SEL2
 0x08000000

	)

1634 
	#AR_DIAG_OBS_PT_SEL2_S
 27

	)

1635 
	#AR_DIAG_FORCE_RX_CLEAR
 0x00100000

	)

1636 
	#AR_DIAG_IGNORE_VIRT_CS
 0x00200000

	)

1637 
	#AR_DIAG_FORCE_CH_IDLE_HIGH
 0x00400000

	)

1638 
	#AR_DIAG_EIFS_CTRL_ENA
 0x00800000

	)

1639 
	#AR_DIAG_DUAL_CHAIN_INFO
 0x01000000

	)

1640 
	#AR_DIAG_RX_ABORT
 0x02000000

	)

1641 
	#AR_DIAG_SATURATE_CYCLE_CNT
 0x04000000

	)

1642 
	#AR_DIAG_OBS_PT_SEL2
 0x08000000

	)

1643 
	#AR_DIAG_RX_CLEAR_CTL_LOW
 0x10000000

	)

1644 
	#AR_DIAG_RX_CLEAR_EXT_LOW
 0x20000000

	)

1646 
	#AR_TSF_L32
 0x804c

	)

1647 
	#AR_TSF_U32
 0x8050

	)

1649 
	#AR_TST_ADDAC
 0x8054

	)

1650 
	#AR_DEF_ANTENNA
 0x8058

	)

1652 
	#AR_AES_MUTE_MASK0
 0x805c

	)

1653 
	#AR_AES_MUTE_MASK0_FC
 0x0000FFFF

	)

1654 
	#AR_AES_MUTE_MASK0_QOS
 0xFFFF0000

	)

1655 
	#AR_AES_MUTE_MASK0_QOS_S
 16

	)

1657 
	#AR_AES_MUTE_MASK1
 0x8060

	)

1658 
	#AR_AES_MUTE_MASK1_SEQ
 0x0000FFFF

	)

1659 
	#AR_AES_MUTE_MASK1_FC_MGMT
 0xFFFF0000

	)

1660 
	#AR_AES_MUTE_MASK1_FC_MGMT_S
 16

	)

1662 
	#AR_GATED_CLKS
 0x8064

	)

1663 
	#AR_GATED_CLKS_TX
 0x00000002

	)

1664 
	#AR_GATED_CLKS_RX
 0x00000004

	)

1665 
	#AR_GATED_CLKS_REG
 0x00000008

	)

1667 
	#AR_OBS_BUS_CTRL
 0x8068

	)

1668 
	#AR_OBS_BUS_SEL_1
 0x00040000

	)

1669 
	#AR_OBS_BUS_SEL_2
 0x00080000

	)

1670 
	#AR_OBS_BUS_SEL_3
 0x000C0000

	)

1671 
	#AR_OBS_BUS_SEL_4
 0x08040000

	)

1672 
	#AR_OBS_BUS_SEL_5
 0x08080000

	)

1674 
	#AR_OBS_BUS_1
 0x806c

	)

1675 
	#AR_OBS_BUS_1_PCU
 0x00000001

	)

1676 
	#AR_OBS_BUS_1_RX_END
 0x00000002

	)

1677 
	#AR_OBS_BUS_1_RX_WEP
 0x00000004

	)

1678 
	#AR_OBS_BUS_1_RX_BEACON
 0x00000008

	)

1679 
	#AR_OBS_BUS_1_RX_FILTER
 0x00000010

	)

1680 
	#AR_OBS_BUS_1_TX_HCF
 0x00000020

	)

1681 
	#AR_OBS_BUS_1_QUIET_TIME
 0x00000040

	)

1682 
	#AR_OBS_BUS_1_CHAN_IDLE
 0x00000080

	)

1683 
	#AR_OBS_BUS_1_TX_HOLD
 0x00000100

	)

1684 
	#AR_OBS_BUS_1_TX_FRAME
 0x00000200

	)

1685 
	#AR_OBS_BUS_1_RX_FRAME
 0x00000400

	)

1686 
	#AR_OBS_BUS_1_RX_CLEAR
 0x00000800

	)

1687 
	#AR_OBS_BUS_1_WEP_STATE
 0x0003F000

	)

1688 
	#AR_OBS_BUS_1_WEP_STATE_S
 12

	)

1689 
	#AR_OBS_BUS_1_RX_STATE
 0x01F00000

	)

1690 
	#AR_OBS_BUS_1_RX_STATE_S
 20

	)

1691 
	#AR_OBS_BUS_1_TX_STATE
 0x7E000000

	)

1692 
	#AR_OBS_BUS_1_TX_STATE_S
 25

	)

1694 
	#AR_LAST_TSTP
 0x8080

	)

1695 
	#AR_NAV
 0x8084

	)

1696 
	#AR_RTS_OK
 0x8088

	)

1697 
	#AR_RTS_FAIL
 0x808c

	)

1698 
	#AR_ACK_FAIL
 0x8090

	)

1699 
	#AR_FCS_FAIL
 0x8094

	)

1700 
	#AR_BEACON_CNT
 0x8098

	)

1702 
	#AR_SLEEP1
 0x80d4

	)

1703 
	#AR_SLEEP1_ASSUME_DTIM
 0x00080000

	)

1704 
	#AR_SLEEP1_CAB_TIMEOUT
 0xFFE00000

	)

1705 
	#AR_SLEEP1_CAB_TIMEOUT_S
 21

	)

1707 
	#AR_SLEEP2
 0x80d8

	)

1708 
	#AR_SLEEP2_BEACON_TIMEOUT
 0xFFE00000

	)

1709 
	#AR_SLEEP2_BEACON_TIMEOUT_S
 21

	)

1711 
	#AR_TPC
 0x80e8

	)

1712 
	#AR_TPC_ACK
 0x0000003f

	)

1713 
	#AR_TPC_ACK_S
 0

	)

1714 
	#AR_TPC_CTS
 0x00003f00

	)

1715 
	#AR_TPC_CTS_S
 8

	)

1716 
	#AR_TPC_CHIRP
 0x003f0000

	)

1717 
	#AR_TPC_CHIRP_S
 16

	)

1719 
	#AR_QUIET1
 0x80fc

	)

1720 
	#AR_QUIET1_NEXT_QUIET_S
 0

	)

1721 
	#AR_QUIET1_NEXT_QUIET_M
 0x0000ffff

	)

1722 
	#AR_QUIET1_QUIET_ENABLE
 0x00010000

	)

1723 
	#AR_QUIET1_QUIET_ACK_CTS_ENABLE
 0x00020000

	)

1724 
	#AR_QUIET1_QUIET_ACK_CTS_ENABLE_S
 17

	)

1725 
	#AR_QUIET2
 0x8100

	)

1726 
	#AR_QUIET2_QUIET_PERIOD_S
 0

	)

1727 
	#AR_QUIET2_QUIET_PERIOD_M
 0x0000ffff

	)

1728 
	#AR_QUIET2_QUIET_DUR_S
 16

	)

1729 
	#AR_QUIET2_QUIET_DUR
 0xffff0000

	)

1731 
	#AR_TSF_PARM
 0x8104

	)

1732 
	#AR_TSF_INCREMENT_M
 0x000000ff

	)

1733 
	#AR_TSF_INCREMENT_S
 0x00

	)

1735 
	#AR_QOS_NO_ACK
 0x8108

	)

1736 
	#AR_QOS_NO_ACK_TWO_BIT
 0x0000000f

	)

1737 
	#AR_QOS_NO_ACK_TWO_BIT_S
 0

	)

1738 
	#AR_QOS_NO_ACK_BIT_OFF
 0x00000070

	)

1739 
	#AR_QOS_NO_ACK_BIT_OFF_S
 4

	)

1740 
	#AR_QOS_NO_ACK_BYTE_OFF
 0x00000180

	)

1741 
	#AR_QOS_NO_ACK_BYTE_OFF_S
 7

	)

1743 
	#AR_PHY_ERR
 0x810c

	)

1745 
	#AR_PHY_ERR_DCHIRP
 0x00000008

	)

1746 
	#AR_PHY_ERR_RADAR
 0x00000020

	)

1747 
	#AR_PHY_ERR_OFDM_TIMING
 0x00020000

	)

1748 
	#AR_PHY_ERR_CCK_TIMING
 0x02000000

	)

1750 
	#AR_RXFIFO_CFG
 0x8114

	)

1753 
	#AR_MIC_QOS_CONTROL
 0x8118

	)

1754 
	#AR_MIC_QOS_SELECT
 0x811c

	)

1756 
	#AR_PCU_MISC
 0x8120

	)

1757 
	#AR_PCU_FORCE_BSSID_MATCH
 0x00000001

	)

1758 
	#AR_PCU_MIC_NEW_LOC_ENA
 0x00000004

	)

1759 
	#AR_PCU_TX_ADD_TSF
 0x00000008

	)

1760 
	#AR_PCU_CCK_SIFS_MODE
 0x00000010

	)

1761 
	#AR_PCU_RX_ANT_UPDT
 0x00000800

	)

1762 
	#AR_PCU_TXOP_TBTT_LIMIT_ENA
 0x00001000

	)

1763 
	#AR_PCU_MISS_BCN_IN_SLEEP
 0x00004000

	)

1764 
	#AR_PCU_BUG_12306_FIX_ENA
 0x00020000

	)

1765 
	#AR_PCU_FORCE_QUIET_COLL
 0x00040000

	)

1766 
	#AR_PCU_TBTT_PROTECT
 0x00200000

	)

1767 
	#AR_PCU_CLEAR_VMF
 0x01000000

	)

1768 
	#AR_PCU_CLEAR_BA_VALID
 0x04000000

	)

1769 
	#AR_PCU_ALWAYS_PERFORM_KEYSEARCH
 0x10000000

	)

1771 
	#AR_PCU_BT_ANT_PREVENT_RX
 0x00100000

	)

1772 
	#AR_PCU_BT_ANT_PREVENT_RX_S
 20

	)

1774 
	#AR_FILT_OFDM
 0x8124

	)

1775 
	#AR_FILT_OFDM_COUNT
 0x00FFFFFF

	)

1777 
	#AR_FILT_CCK
 0x8128

	)

1778 
	#AR_FILT_CCK_COUNT
 0x00FFFFFF

	)

1780 
	#AR_PHY_ERR_1
 0x812c

	)

1781 
	#AR_PHY_ERR_1_COUNT
 0x00FFFFFF

	)

1782 
	#AR_PHY_ERR_MASK_1
 0x8130

	)

1784 
	#AR_PHY_ERR_2
 0x8134

	)

1785 
	#AR_PHY_ERR_2_COUNT
 0x00FFFFFF

	)

1786 
	#AR_PHY_ERR_MASK_2
 0x8138

	)

1788 
	#AR_PHY_COUNTMAX
 (3 << 22)

	)

1789 
	#AR_MIBCNT_INTRMASK
 (3 << 22)

	)

1791 
	#AR_TSFOOR_THRESHOLD
 0x813c

	)

1792 
	#AR_TSFOOR_THRESHOLD_VAL
 0x0000FFFF

	)

1794 
	#AR_PHY_ERR_EIFS_MASK
 0x8144

	)

1796 
	#AR_PHY_ERR_3
 0x8168

	)

1797 
	#AR_PHY_ERR_3_COUNT
 0x00FFFFFF

	)

1798 
	#AR_PHY_ERR_MASK_3
 0x816c

	)

1800 
	#AR_BT_COEX_MODE
 0x8170

	)

1801 
	#AR_BT_TIME_EXTEND
 0x000000ff

	)

1802 
	#AR_BT_TIME_EXTEND_S
 0

	)

1803 
	#AR_BT_TXSTATE_EXTEND
 0x00000100

	)

1804 
	#AR_BT_TXSTATE_EXTEND_S
 8

	)

1805 
	#AR_BT_TX_FRAME_EXTEND
 0x00000200

	)

1806 
	#AR_BT_TX_FRAME_EXTEND_S
 9

	)

1807 
	#AR_BT_MODE
 0x00000c00

	)

1808 
	#AR_BT_MODE_S
 10

	)

1809 
	#AR_BT_QUIET
 0x00001000

	)

1810 
	#AR_BT_QUIET_S
 12

	)

1811 
	#AR_BT_QCU_THRESH
 0x0001e000

	)

1812 
	#AR_BT_QCU_THRESH_S
 13

	)

1813 
	#AR_BT_RX_CLEAR_POLARITY
 0x00020000

	)

1814 
	#AR_BT_RX_CLEAR_POLARITY_S
 17

	)

1815 
	#AR_BT_PRIORITY_TIME
 0x00fc0000

	)

1816 
	#AR_BT_PRIORITY_TIME_S
 18

	)

1817 
	#AR_BT_FIRST_SLOT_TIME
 0xff000000

	)

1818 
	#AR_BT_FIRST_SLOT_TIME_S
 24

	)

1820 
	#AR_BT_COEX_WEIGHT
 0x8174

	)

1821 
	#AR_BT_COEX_WGHT
 0xff55

	)

1822 
	#AR_STOMP_ALL_WLAN_WGHT
 0xfcfc

	)

1823 
	#AR_STOMP_LOW_WLAN_WGHT
 0xa8a8

	)

1824 
	#AR_STOMP_NONE_WLAN_WGHT
 0x0000

	)

1825 
	#AR_BTCOEX_BT_WGHT
 0x0000ffff

	)

1826 
	#AR_BTCOEX_BT_WGHT_S
 0

	)

1827 
	#AR_BTCOEX_WL_WGHT
 0xffff0000

	)

1828 
	#AR_BTCOEX_WL_WGHT_S
 16

	)

1830 
	#AR_BT_COEX_WL_WEIGHTS0
 0x8174

	)

1831 
	#AR_BT_COEX_WL_WEIGHTS1
 0x81c4

	)

1832 
	#AR_MCI_COEX_WL_WEIGHTS
(
_i
Ë(0x18b0 + (_ò<< 2))

	)

1833 
	#AR_BT_COEX_BT_WEIGHTS
(
_i
Ë(0x83a¯+ (_ò<< 2))

	)

1835 
	#AR9300_BT_WGHT
 0xcccc4444

	)

1837 
	#AR_BT_COEX_MODE2
 0x817c

	)

1838 
	#AR_BT_BCN_MISS_THRESH
 0x000000ff

	)

1839 
	#AR_BT_BCN_MISS_THRESH_S
 0

	)

1840 
	#AR_BT_BCN_MISS_CNT
 0x0000ff00

	)

1841 
	#AR_BT_BCN_MISS_CNT_S
 8

	)

1842 
	#AR_BT_HOLD_RX_CLEAR
 0x00010000

	)

1843 
	#AR_BT_HOLD_RX_CLEAR_S
 16

	)

1844 
	#AR_BT_DISABLE_BT_ANT
 0x00100000

	)

1845 
	#AR_BT_DISABLE_BT_ANT_S
 20

	)

1847 
	#AR_TXSIFS
 0x81d0

	)

1848 
	#AR_TXSIFS_TIME
 0x000000FF

	)

1849 
	#AR_TXSIFS_TX_LATENCY
 0x00000F00

	)

1850 
	#AR_TXSIFS_TX_LATENCY_S
 8

	)

1851 
	#AR_TXSIFS_ACK_SHIFT
 0x00007000

	)

1852 
	#AR_TXSIFS_ACK_SHIFT_S
 12

	)

1854 
	#AR_TXOP_X
 0x81ec

	)

1855 
	#AR_TXOP_X_VAL
 0x000000FF

	)

1858 
	#AR_TXOP_0_3
 0x81f0

	)

1859 
	#AR_TXOP_4_7
 0x81f4

	)

1860 
	#AR_TXOP_8_11
 0x81f8

	)

1861 
	#AR_TXOP_12_15
 0x81fc

	)

1863 
	#AR_NEXT_NDP2_TIMER
 0x8180

	)

1864 
	#AR_GEN_TIMER_BANK_1_LEN
 8

	)

1865 
	#AR_FIRST_NDP_TIMER
 7

	)

1866 
	#AR_NDP2_PERIOD
 0x81a0

	)

1867 
	#AR_NDP2_TIMER_MODE
 0x81c0

	)

1869 
	#AR_GEN_TIMERS
(
_i
Ë(0x8200 + ((_iË<< 2))

	)

1870 
	#AR_NEXT_TBTT_TIMER
 
	`AR_GEN_TIMERS
(0)

	)

1871 
	#AR_NEXT_DMA_BEACON_ALERT
 
	`AR_GEN_TIMERS
(1)

	)

1872 
	#AR_NEXT_SWBA
 
	`AR_GEN_TIMERS
(2)

	)

1873 
	#AR_NEXT_CFP
 
	`AR_GEN_TIMERS
(2)

	)

1874 
	#AR_NEXT_HCF
 
	`AR_GEN_TIMERS
(3)

	)

1875 
	#AR_NEXT_TIM
 
	`AR_GEN_TIMERS
(4)

	)

1876 
	#AR_NEXT_DTIM
 
	`AR_GEN_TIMERS
(5)

	)

1877 
	#AR_NEXT_QUIET_TIMER
 
	`AR_GEN_TIMERS
(6)

	)

1878 
	#AR_NEXT_NDP_TIMER
 
	`AR_GEN_TIMERS
(7)

	)

1880 
	#AR_BEACON_PERIOD
 
	`AR_GEN_TIMERS
(8)

	)

1881 
	#AR_DMA_BEACON_PERIOD
 
	`AR_GEN_TIMERS
(9)

	)

1882 
	#AR_SWBA_PERIOD
 
	`AR_GEN_TIMERS
(10)

	)

1883 
	#AR_HCF_PERIOD
 
	`AR_GEN_TIMERS
(11)

	)

1884 
	#AR_TIM_PERIOD
 
	`AR_GEN_TIMERS
(12)

	)

1885 
	#AR_DTIM_PERIOD
 
	`AR_GEN_TIMERS
(13)

	)

1886 
	#AR_QUIET_PERIOD
 
	`AR_GEN_TIMERS
(14)

	)

1887 
	#AR_NDP_PERIOD
 
	`AR_GEN_TIMERS
(15)

	)

1889 
	#AR_TIMER_MODE
 0x8240

	)

1890 
	#AR_TBTT_TIMER_EN
 0x00000001

	)

1891 
	#AR_DBA_TIMER_EN
 0x00000002

	)

1892 
	#AR_SWBA_TIMER_EN
 0x00000004

	)

1893 
	#AR_HCF_TIMER_EN
 0x00000008

	)

1894 
	#AR_TIM_TIMER_EN
 0x00000010

	)

1895 
	#AR_DTIM_TIMER_EN
 0x00000020

	)

1896 
	#AR_QUIET_TIMER_EN
 0x00000040

	)

1897 
	#AR_NDP_TIMER_EN
 0x00000080

	)

1898 
	#AR_TIMER_OVERFLOW_INDEX
 0x00000700

	)

1899 
	#AR_TIMER_OVERFLOW_INDEX_S
 8

	)

1900 
	#AR_TIMER_THRESH
 0xFFFFF000

	)

1901 
	#AR_TIMER_THRESH_S
 12

	)

1903 
	#AR_SLP32_MODE
 0x8244

	)

1904 
	#AR_SLP32_HALF_CLK_LATENCY
 0x000FFFFF

	)

1905 
	#AR_SLP32_ENA
 0x00100000

	)

1906 
	#AR_SLP32_TSF_WRITE_STATUS
 0x00200000

	)

1908 
	#AR_SLP32_WAKE
 0x8248

	)

1909 
	#AR_SLP32_WAKE_XTL_TIME
 0x0000FFFF

	)

1911 
	#AR_SLP32_INC
 0x824c

	)

1912 
	#AR_SLP32_TST_INC
 0x000FFFFF

	)

1914 
	#AR_SLP_CNT
 0x8250

	)

1915 
	#AR_SLP_CYCLE_CNT
 0x8254

	)

1917 
	#AR_SLP_MIB_CTRL
 0x8258

	)

1918 
	#AR_SLP_MIB_CLEAR
 0x00000001

	)

1919 
	#AR_SLP_MIB_PENDING
 0x00000002

	)

1921 
	#AR_MAC_PCU_LOGIC_ANALYZER
 0x8264

	)

1922 
	#AR_MAC_PCU_LOGIC_ANALYZER_DISBUG20768
 0x20000000

	)

1925 
	#AR_2040_MODE
 0x8318

	)

1926 
	#AR_2040_JOINED_RX_CLEAR
 0x00000001

	)

1929 
	#AR_EXTRCCNT
 0x8328

	)

1931 
	#AR_SELFGEN_MASK
 0x832c

	)

1933 
	#AR_PCU_TXBUF_CTRL
 0x8340

	)

1934 
	#AR_PCU_TXBUF_CTRL_SIZE_MASK
 0x7FF

	)

1935 
	#AR_PCU_TXBUF_CTRL_USABLE_SIZE
 0x700

	)

1936 
	#AR_9285_PCU_TXBUF_CTRL_USABLE_SIZE
 0x380

	)

1937 
	#AR_9340_PCU_TXBUF_CTRL_USABLE_SIZE
 0x500

	)

1939 
	#AR_PCU_MISC_MODE2
 0x8344

	)

1940 
	#AR_PCU_MISC_MODE2_MGMT_CRYPTO_ENABLE
 0x00000002

	)

1941 
	#AR_PCU_MISC_MODE2_NO_CRYPTO_FOR_NON_DATA_PKT
 0x00000004

	)

1943 
	#AR_PCU_MISC_MODE2_RESERVED
 0x00000038

	)

1944 
	#AR_PCU_MISC_MODE2_ADHOC_MCAST_KEYID_ENABLE
 0x00000040

	)

1945 
	#AR_PCU_MISC_MODE2_CFP_IGNORE
 0x00000080

	)

1946 
	#AR_PCU_MISC_MODE2_MGMT_QOS
 0x0000FF00

	)

1947 
	#AR_PCU_MISC_MODE2_MGMT_QOS_S
 8

	)

1948 
	#AR_PCU_MISC_MODE2_ENABLE_LOAD_NAV_BEACON_DURATION
 0x00010000

	)

1949 
	#AR_PCU_MISC_MODE2_ENABLE_AGGWEP
 0x00020000

	)

1950 
	#AR_PCU_MISC_MODE2_HWWAR1
 0x00100000

	)

1951 
	#AR_PCU_MISC_MODE2_HWWAR2
 0x02000000

	)

1952 
	#AR_PCU_MISC_MODE2_RESERVED2
 0xFFFE0000

	)

1954 
	#AR_PCU_MISC_MODE3
 0x83d0

	)

1956 
	#AR_MAC_PCU_ASYNC_FIFO_REG3
 0x8358

	)

1957 
	#AR_MAC_PCU_ASYNC_FIFO_REG3_DATAPATH_SEL
 0x00000400

	)

1958 
	#AR_MAC_PCU_ASYNC_FIFO_REG3_SOFT_RESET
 0x80000000

	)

1959 
	#AR_MAC_PCU_GEN_TIMER_TSF_SEL
 0x83d8

	)

1962 
	#AR_AES_MUTE_MASK0
 0x805c

	)

1963 
	#AR_AES_MUTE_MASK0_FC
 0x0000FFFF

	)

1964 
	#AR_AES_MUTE_MASK0_QOS
 0xFFFF0000

	)

1965 
	#AR_AES_MUTE_MASK0_QOS_S
 16

	)

1967 
	#AR_AES_MUTE_MASK1
 0x8060

	)

1968 
	#AR_AES_MUTE_MASK1_SEQ
 0x0000FFFF

	)

1969 
	#AR_AES_MUTE_MASK1_SEQ_S
 0

	)

1970 
	#AR_AES_MUTE_MASK1_FC_MGMT
 0xFFFF0000

	)

1971 
	#AR_AES_MUTE_MASK1_FC_MGMT_S
 16

	)

1973 
	#AR_RATE_DURATION_0
 0x8700

	)

1974 
	#AR_RATE_DURATION_31
 0x87CC

	)

1975 
	#AR_RATE_DURATION_32
 0x8780

	)

1976 
	#AR_RATE_DURATION
(
_n
Ë(
AR_RATE_DURATION_0
 + ((_n)<<2))

	)

1980 
	#AR_PMCTRL_AUX_PWR_DET
 0x10000000

	)

1981 
	#AR_PMCTRL_D3COLD_VAUX
 0x00800000

	)

1982 
	#AR_PMCTRL_HOST_PME_EN
 0x00400000

	)

1984 
	#AR_PMCTRL_WOW_PME_CLR
 0x00200000

	)

1985 
	#AR_PMCTRL_PWR_STATE_MASK
 0x0f000000

	)

1986 
	#AR_PMCTRL_PWR_STATE_D1D3
 0x0f000000

	)

1987 
	#AR_PMCTRL_PWR_STATE_D1D3_REAL
 0x0f000000

	)

1988 
	#AR_PMCTRL_PWR_STATE_D0
 0x08000000

	)

1989 
	#AR_PMCTRL_PWR_PM_CTRL_ENA
 0x00008000

	)

1991 
	#AR_WOW_BEACON_TIMO_MAX
 0xffffffff

	)

1997 
	#AR_WOW_PATTERN
 0x825C

	)

1998 
	#AR_WOW_COUNT
 0x8260

	)

1999 
	#AR_WOW_BCN_EN
 0x8270

	)

2000 
	#AR_WOW_BCN_TIMO
 0x8274

	)

2001 
	#AR_WOW_KEEP_ALIVE_TIMO
 0x8278

	)

2002 
	#AR_WOW_KEEP_ALIVE
 0x827c

	)

2003 
	#AR_WOW_US_SCALAR
 0x8284

	)

2004 
	#AR_WOW_KEEP_ALIVE_DELAY
 0x8288

	)

2005 
	#AR_WOW_PATTERN_MATCH
 0x828c

	)

2006 
	#AR_WOW_PATTERN_OFF1
 0x8290

	)

2007 
	#AR_WOW_PATTERN_OFF2
 0x8294

	)

2010 
	#AR_WOW_EXACT
 0x829c

	)

2011 
	#AR_WOW_LENGTH1
 0x8360

	)

2012 
	#AR_WOW_LENGTH2
 0X8364

	)

2014 
	#AR_WOW_PATTERN_MATCH_LT_256B
 0x8368

	)

2016 
	#AR_SW_WOW_CONTROL
 0x20018

	)

2017 
	#AR_SW_WOW_ENABLE
 0x1

	)

2018 
	#AR_SWITCH_TO_REFCLK
 0x2

	)

2019 
	#AR_RESET_CONTROL
 0x4

	)

2020 
	#AR_RESET_VALUE_MASK
 0x8

	)

2021 
	#AR_HW_WOW_DISABLE
 0x10

	)

2022 
	#AR_CLR_MAC_INTERRUPT
 0x20

	)

2023 
	#AR_CLR_KA_INTERRUPT
 0x40

	)

2026 
	#AR_WOW_BACK_OFF_SHIFT
(
x
Ë((x & 0xfË<< 28Ë

	)

2027 
	#AR_WOW_MAC_INTR_EN
 0x00040000

	)

2028 
	#AR_WOW_MAGIC_EN
 0x00010000

	)

2029 
	#AR_WOW_PATTERN_EN
(
x
Ë(x & 0xff)

	)

2030 
	#AR_WOW_PAT_FOUND_SHIFT
 8

	)

2031 
	#AR_WOW_PATTERN_FOUND
(
x
Ë(x & (0xf‡<< 
AR_WOW_PAT_FOUND_SHIFT
))

	)

2032 
	#AR_WOW_PATTERN_FOUND_MASK
 ((0xffË<< 
AR_WOW_PAT_FOUND_SHIFT
)

	)

2033 
	#AR_WOW_MAGIC_PAT_FOUND
 0x00020000

	)

2034 
	#AR_WOW_MAC_INTR
 0x00080000

	)

2035 
	#AR_WOW_KEEP_ALIVE_FAIL
 0x00100000

	)

2036 
	#AR_WOW_BEACON_FAIL
 0x00200000

	)

2038 
	#AR_WOW_STATUS
(
x
Ë(x & (
AR_WOW_PATTERN_FOUND_MASK
 | \

2039 
AR_WOW_MAGIC_PAT_FOUND
 | \

2040 
AR_WOW_KEEP_ALIVE_FAIL
 | \

2041 
AR_WOW_BEACON_FAIL
))

	)

2042 
	#AR_WOW_CLEAR_EVENTS
(
x
Ë(x & ~(
	`AR_WOW_PATTERN_EN
(0xff) | \

2043 
AR_WOW_MAGIC_EN
 | \

2044 
AR_WOW_MAC_INTR_EN
 | \

2045 
AR_WOW_BEACON_FAIL
 | \

2046 
AR_WOW_KEEP_ALIVE_FAIL
))

	)

2049 
	#AR_WOW_AIFS_CNT
(
x
Ë(x & 0xff)

	)

2050 
	#AR_WOW_SLOT_CNT
(
x
Ë((x & 0xffË<< 8)

	)

2051 
	#AR_WOW_KEEP_ALIVE_CNT
(
x
Ë((x & 0xffË<< 16)

	)

2054 
	#AR_WOW_BEACON_FAIL_EN
 0x00000001

	)

2057 
	#AR_WOW_BEACON_TIMO
 0x40000000

	)

2060 
	#AR_WOW_KEEP_ALIVE_TIMO_VALUE


	)

2061 
	#AR_WOW_KEEP_ALIVE_NEVER
 0xffffffff

	)

2064 
	#AR_WOW_KEEP_ALIVE_AUTO_DIS
 0x00000001

	)

2065 
	#AR_WOW_KEEP_ALIVE_FAIL_DIS
 0x00000002

	)

2068 
	#AR_WOW_KEEP_ALIVE_DELAY_VALUE
 0x000003e8

	)

2074 
	#AR_WOW_BMISSTHRESHOLD
 0x20

	)

2077 
	#AR_WOW_PAT_END_OF_PKT
(
x
Ë(x & 0xf)

	)

2078 
	#AR_WOW_PAT_OFF_MATCH
(
x
Ë((x & 0xfË<< 8)

	)

2084 
	#AR_WOW_PAT_BACKOFF
 0x00000004

	)

2085 
	#AR_WOW_CNT_AIFS_CNT
 0x00000022

	)

2086 
	#AR_WOW_CNT_SLOT_CNT
 0x00000009

	)

2090 
	#AR_WOW_CNT_KA_CNT
 0x00000008

	)

2093 
	#AR_WOW_TRANSMIT_BUFFER
 0xe000

	)

2095 
	#AR_WOW_TXBUF
(
i
Ë(
AR_WOW_TRANSMIT_BUFFER
 + ((iË<< 2))

	)

2097 
	#AR_WOW_KA_DESC_WORD2
 0xe000

	)

2099 
	#AR_WOW_KA_DATA_WORD0
 0xe030

	)

2102 
	#AR_WOW_TB_PATTERN
(
i
Ë(0xe100 + (ò<< 8))

	)

2103 
	#AR_WOW_TB_MASK
(
i
Ë(0xec00 + (ò<< 5))

	)

2106 
	#AR_WOW_PATTERN_SUPPORTED
 0xff

	)

2107 
	#AR_WOW_LENGTH_MAX
 0xff

	)

2108 
	#AR_WOW_LEN1_SHIFT
(
_i
Ë((0x3 - ((_iË& 0x3)Ë<< 0x3)

	)

2109 
	#AR_WOW_LENGTH1_MASK
(
_i
Ë(
AR_WOW_LENGTH_MAX
 << 
	`AR_WOW_LEN1_SHIFT
(_i))

	)

2110 
	#AR_WOW_LEN2_SHIFT
(
_i
Ë((0x7 - ((_iË& 0x7)Ë<< 0x3)

	)

2111 
	#AR_WOW_LENGTH2_MASK
(
_i
Ë(
AR_WOW_LENGTH_MAX
 << 
	`AR_WOW_LEN2_SHIFT
(_i))

	)

2113 
	#AR9271_CORE_CLOCK
 117

	)

2114 
	#AR9271_TARGET_BAUD_RATE
 19200

	)

2116 
	#AR_AGG_WEP_ENABLE_FIX
 0x00000008

	)

2117 
	#AR_ADHOC_MCAST_KEYID_ENABLE
 0x00000040

	)

2123 
	#AR_AGG_WEP_ENABLE
 0x00020000

	)

2129 
	#AR9300_SM_BASE
 0xa200

	)

2130 
	#AR9002_PHY_AGC_CONTROL
 0x9860

	)

2131 
	#AR9003_PHY_AGC_CONTROL
 
AR9300_SM_BASE
 + 0xc4

	)

2132 
	#AR_PHY_AGC_CONTROL
 (
	`AR_SREV_9300_20_OR_LATER
(
ah
Ë? 
AR9003_PHY_AGC_CONTROL
 : 
AR9002_PHY_AGC_CONTROL
)

	)

2133 
	#AR_PHY_AGC_CONTROL_CAL
 0x00000001

	)

2134 
	#AR_PHY_AGC_CONTROL_NF
 0x00000002

	)

2135 
	#AR_PHY_AGC_CONTROL_OFFSET_CAL
 0x00000800

	)

2136 
	#AR_PHY_AGC_CONTROL_ENABLE_NF
 0x00008000

	)

2137 
	#AR_PHY_AGC_CONTROL_FLTR_CAL
 0x00010000

	)

2138 
	#AR_PHY_AGC_CONTROL_NO_UPDATE_NF
 0x00020000

	)

2139 
	#AR_PHY_AGC_CONTROL_EXT_NF_PWR_MEAS
 0x00040000

	)

2140 
	#AR_PHY_AGC_CONTROL_CLC_SUCCESS
 0x00080000

	)

2141 
	#AR_PHY_AGC_CONTROL_PKDET_CAL
 0x00100000

	)

2142 
	#AR_PHY_AGC_CONTROL_YCOK_MAX
 0x000003c0

	)

2143 
	#AR_PHY_AGC_CONTROL_YCOK_MAX_S
 6

	)

2147 
	#AR_MCI_COMMAND0
 0x1800

	)

2148 
	#AR_MCI_COMMAND0_HEADER
 0xFF

	)

2149 
	#AR_MCI_COMMAND0_HEADER_S
 0

	)

2150 
	#AR_MCI_COMMAND0_LEN
 0x1f00

	)

2151 
	#AR_MCI_COMMAND0_LEN_S
 8

	)

2152 
	#AR_MCI_COMMAND0_DISABLE_TIMESTAMP
 0x2000

	)

2153 
	#AR_MCI_COMMAND0_DISABLE_TIMESTAMP_S
 13

	)

2155 
	#AR_MCI_COMMAND1
 0x1804

	)

2157 
	#AR_MCI_COMMAND2
 0x1808

	)

2158 
	#AR_MCI_COMMAND2_RESET_TX
 0x01

	)

2159 
	#AR_MCI_COMMAND2_RESET_TX_S
 0

	)

2160 
	#AR_MCI_COMMAND2_RESET_RX
 0x02

	)

2161 
	#AR_MCI_COMMAND2_RESET_RX_S
 1

	)

2162 
	#AR_MCI_COMMAND2_RESET_RX_NUM_CYCLES
 0x3FC

	)

2163 
	#AR_MCI_COMMAND2_RESET_RX_NUM_CYCLES_S
 2

	)

2164 
	#AR_MCI_COMMAND2_RESET_REQ_WAKEUP
 0x400

	)

2165 
	#AR_MCI_COMMAND2_RESET_REQ_WAKEUP_S
 10

	)

2167 
	#AR_MCI_RX_CTRL
 0x180c

	)

2169 
	#AR_MCI_TX_CTRL
 0x1810

	)

2171 
	#AR_MCI_TX_CTRL_CLK_DIV
 0x03

	)

2172 
	#AR_MCI_TX_CTRL_CLK_DIV_S
 0

	)

2173 
	#AR_MCI_TX_CTRL_DISABLE_LNA_UPDATE
 0x04

	)

2174 
	#AR_MCI_TX_CTRL_DISABLE_LNA_UPDATE_S
 2

	)

2175 
	#AR_MCI_TX_CTRL_GAIN_UPDATE_FREQ
 0xFFFFF8

	)

2176 
	#AR_MCI_TX_CTRL_GAIN_UPDATE_FREQ_S
 3

	)

2177 
	#AR_MCI_TX_CTRL_GAIN_UPDATE_NUM
 0xF000000

	)

2178 
	#AR_MCI_TX_CTRL_GAIN_UPDATE_NUM_S
 24

	)

2180 
	#AR_MCI_MSG_ATTRIBUTES_TABLE
 0x1814

	)

2181 
	#AR_MCI_MSG_ATTRIBUTES_TABLE_CHECKSUM
 0xFFFF

	)

2182 
	#AR_MCI_MSG_ATTRIBUTES_TABLE_CHECKSUM_S
 0

	)

2183 
	#AR_MCI_MSG_ATTRIBUTES_TABLE_INVALID_HDR
 0xFFFF0000

	)

2184 
	#AR_MCI_MSG_ATTRIBUTES_TABLE_INVALID_HDR_S
 16

	)

2186 
	#AR_MCI_SCHD_TABLE_0
 0x1818

	)

2187 
	#AR_MCI_SCHD_TABLE_1
 0x181c

	)

2188 
	#AR_MCI_GPM_0
 0x1820

	)

2189 
	#AR_MCI_GPM_1
 0x1824

	)

2190 
	#AR_MCI_GPM_WRITE_PTR
 0xFFFF0000

	)

2191 
	#AR_MCI_GPM_WRITE_PTR_S
 16

	)

2192 
	#AR_MCI_GPM_BUF_LEN
 0x0000FFFF

	)

2193 
	#AR_MCI_GPM_BUF_LEN_S
 0

	)

2195 
	#AR_MCI_INTERRUPT_RAW
 0x1828

	)

2196 
	#AR_MCI_INTERRUPT_EN
 0x182c

	)

2197 
	#AR_MCI_INTERRUPT_SW_MSG_DONE
 0x00000001

	)

2198 
	#AR_MCI_INTERRUPT_SW_MSG_DONE_S
 0

	)

2199 
	#AR_MCI_INTERRUPT_CPU_INT_MSG
 0x00000002

	)

2200 
	#AR_MCI_INTERRUPT_CPU_INT_MSG_S
 1

	)

2201 
	#AR_MCI_INTERRUPT_RX_CKSUM_FAIL
 0x00000004

	)

2202 
	#AR_MCI_INTERRUPT_RX_CKSUM_FAIL_S
 2

	)

2203 
	#AR_MCI_INTERRUPT_RX_INVALID_HDR
 0x00000008

	)

2204 
	#AR_MCI_INTERRUPT_RX_INVALID_HDR_S
 3

	)

2205 
	#AR_MCI_INTERRUPT_RX_HW_MSG_FAIL
 0x00000010

	)

2206 
	#AR_MCI_INTERRUPT_RX_HW_MSG_FAIL_S
 4

	)

2207 
	#AR_MCI_INTERRUPT_RX_SW_MSG_FAIL
 0x00000020

	)

2208 
	#AR_MCI_INTERRUPT_RX_SW_MSG_FAIL_S
 5

	)

2209 
	#AR_MCI_INTERRUPT_TX_HW_MSG_FAIL
 0x00000080

	)

2210 
	#AR_MCI_INTERRUPT_TX_HW_MSG_FAIL_S
 7

	)

2211 
	#AR_MCI_INTERRUPT_TX_SW_MSG_FAIL
 0x00000100

	)

2212 
	#AR_MCI_INTERRUPT_TX_SW_MSG_FAIL_S
 8

	)

2213 
	#AR_MCI_INTERRUPT_RX_MSG
 0x00000200

	)

2214 
	#AR_MCI_INTERRUPT_RX_MSG_S
 9

	)

2215 
	#AR_MCI_INTERRUPT_REMOTE_SLEEP_UPDATE
 0x00000400

	)

2216 
	#AR_MCI_INTERRUPT_REMOTE_SLEEP_UPDATE_S
 10

	)

2217 
	#AR_MCI_INTERRUPT_BT_PRI
 0x07fff800

	)

2218 
	#AR_MCI_INTERRUPT_BT_PRI_S
 11

	)

2219 
	#AR_MCI_INTERRUPT_BT_PRI_THRESH
 0x08000000

	)

2220 
	#AR_MCI_INTERRUPT_BT_PRI_THRESH_S
 27

	)

2221 
	#AR_MCI_INTERRUPT_BT_FREQ
 0x10000000

	)

2222 
	#AR_MCI_INTERRUPT_BT_FREQ_S
 28

	)

2223 
	#AR_MCI_INTERRUPT_BT_STOMP
 0x20000000

	)

2224 
	#AR_MCI_INTERRUPT_BT_STOMP_S
 29

	)

2225 
	#AR_MCI_INTERRUPT_BB_AIC_IRQ
 0x40000000

	)

2226 
	#AR_MCI_INTERRUPT_BB_AIC_IRQ_S
 30

	)

2227 
	#AR_MCI_INTERRUPT_CONT_INFO_TIMEOUT
 0x80000000

	)

2228 
	#AR_MCI_INTERRUPT_CONT_INFO_TIMEOUT_S
 31

	)

2230 
	#AR_MCI_INTERRUPT_DEFAULT
 (
AR_MCI_INTERRUPT_SW_MSG_DONE
 | \

2231 
AR_MCI_INTERRUPT_RX_INVALID_HDR
 | \

2232 
AR_MCI_INTERRUPT_RX_HW_MSG_FAIL
 | \

2233 
AR_MCI_INTERRUPT_RX_SW_MSG_FAIL
 | \

2234 
AR_MCI_INTERRUPT_TX_HW_MSG_FAIL
 | \

2235 
AR_MCI_INTERRUPT_TX_SW_MSG_FAIL
 | \

2236 
AR_MCI_INTERRUPT_RX_MSG
 | \

2237 
AR_MCI_INTERRUPT_REMOTE_SLEEP_UPDATE
 | \

2238 
AR_MCI_INTERRUPT_CONT_INFO_TIMEOUT
)

	)

2240 
	#AR_MCI_INTERRUPT_MSG_FAIL_MASK
 (
AR_MCI_INTERRUPT_RX_HW_MSG_FAIL
 | \

2241 
AR_MCI_INTERRUPT_RX_SW_MSG_FAIL
 | \

2242 
AR_MCI_INTERRUPT_TX_HW_MSG_FAIL
 | \

2243 
AR_MCI_INTERRUPT_TX_SW_MSG_FAIL
)

	)

2245 
	#AR_MCI_REMOTE_CPU_INT
 0x1830

	)

2246 
	#AR_MCI_REMOTE_CPU_INT_EN
 0x1834

	)

2247 
	#AR_MCI_INTERRUPT_RX_MSG_RAW
 0x1838

	)

2248 
	#AR_MCI_INTERRUPT_RX_MSG_EN
 0x183c

	)

2249 
	#AR_MCI_INTERRUPT_RX_MSG_REMOTE_RESET
 0x00000001

	)

2250 
	#AR_MCI_INTERRUPT_RX_MSG_REMOTE_RESET_S
 0

	)

2251 
	#AR_MCI_INTERRUPT_RX_MSG_LNA_CONTROL
 0x00000002

	)

2252 
	#AR_MCI_INTERRUPT_RX_MSG_LNA_CONTROL_S
 1

	)

2253 
	#AR_MCI_INTERRUPT_RX_MSG_CONT_NACK
 0x00000004

	)

2254 
	#AR_MCI_INTERRUPT_RX_MSG_CONT_NACK_S
 2

	)

2255 
	#AR_MCI_INTERRUPT_RX_MSG_CONT_INFO
 0x00000008

	)

2256 
	#AR_MCI_INTERRUPT_RX_MSG_CONT_INFO_S
 3

	)

2257 
	#AR_MCI_INTERRUPT_RX_MSG_CONT_RST
 0x00000010

	)

2258 
	#AR_MCI_INTERRUPT_RX_MSG_CONT_RST_S
 4

	)

2259 
	#AR_MCI_INTERRUPT_RX_MSG_SCHD_INFO
 0x00000020

	)

2260 
	#AR_MCI_INTERRUPT_RX_MSG_SCHD_INFO_S
 5

	)

2261 
	#AR_MCI_INTERRUPT_RX_MSG_CPU_INT
 0x00000040

	)

2262 
	#AR_MCI_INTERRUPT_RX_MSG_CPU_INT_S
 6

	)

2263 
	#AR_MCI_INTERRUPT_RX_MSG_GPM
 0x00000100

	)

2264 
	#AR_MCI_INTERRUPT_RX_MSG_GPM_S
 8

	)

2265 
	#AR_MCI_INTERRUPT_RX_MSG_LNA_INFO
 0x00000200

	)

2266 
	#AR_MCI_INTERRUPT_RX_MSG_LNA_INFO_S
 9

	)

2267 
	#AR_MCI_INTERRUPT_RX_MSG_SYS_SLEEPING
 0x00000400

	)

2268 
	#AR_MCI_INTERRUPT_RX_MSG_SYS_SLEEPING_S
 10

	)

2269 
	#AR_MCI_INTERRUPT_RX_MSG_SYS_WAKING
 0x00000800

	)

2270 
	#AR_MCI_INTERRUPT_RX_MSG_SYS_WAKING_S
 11

	)

2271 
	#AR_MCI_INTERRUPT_RX_MSG_REQ_WAKE
 0x00001000

	)

2272 
	#AR_MCI_INTERRUPT_RX_MSG_REQ_WAKE_S
 12

	)

2273 
	#AR_MCI_INTERRUPT_RX_HW_MSG_MASK
 (
AR_MCI_INTERRUPT_RX_MSG_SCHD_INFO
 | \

2274 
AR_MCI_INTERRUPT_RX_MSG_LNA_CONTROL
| \

2275 
AR_MCI_INTERRUPT_RX_MSG_LNA_INFO
 | \

2276 
AR_MCI_INTERRUPT_RX_MSG_CONT_NACK
 | \

2277 
AR_MCI_INTERRUPT_RX_MSG_CONT_INFO
 | \

2278 
AR_MCI_INTERRUPT_RX_MSG_CONT_RST
)

	)

2280 
	#AR_MCI_INTERRUPT_RX_MSG_DEFAULT
 (
AR_MCI_INTERRUPT_RX_MSG_GPM
 | \

2281 
AR_MCI_INTERRUPT_RX_MSG_REMOTE_RESET
| \

2282 
AR_MCI_INTERRUPT_RX_MSG_SYS_WAKING
 | \

2283 
AR_MCI_INTERRUPT_RX_MSG_SYS_SLEEPING
| \

2284 
AR_MCI_INTERRUPT_RX_MSG_REQ_WAKE
)

	)

2286 
	#AR_MCI_CPU_INT
 0x1840

	)

2288 
	#AR_MCI_RX_STATUS
 0x1844

	)

2289 
	#AR_MCI_RX_LAST_SCHD_MSG_INDEX
 0x00000F00

	)

2290 
	#AR_MCI_RX_LAST_SCHD_MSG_INDEX_S
 8

	)

2291 
	#AR_MCI_RX_REMOTE_SLEEP
 0x00001000

	)

2292 
	#AR_MCI_RX_REMOTE_SLEEP_S
 12

	)

2293 
	#AR_MCI_RX_MCI_CLK_REQ
 0x00002000

	)

2294 
	#AR_MCI_RX_MCI_CLK_REQ_S
 13

	)

2296 
	#AR_MCI_CONT_STATUS
 0x1848

	)

2297 
	#AR_MCI_CONT_RSSI_POWER
 0x000000FF

	)

2298 
	#AR_MCI_CONT_RSSI_POWER_S
 0

	)

2299 
	#AR_MCI_CONT_PRIORITY
 0x0000FF00

	)

2300 
	#AR_MCI_CONT_PRIORITY_S
 8

	)

2301 
	#AR_MCI_CONT_TXRX
 0x00010000

	)

2302 
	#AR_MCI_CONT_TXRX_S
 16

	)

2304 
	#AR_MCI_BT_PRI0
 0x184c

	)

2305 
	#AR_MCI_BT_PRI1
 0x1850

	)

2306 
	#AR_MCI_BT_PRI2
 0x1854

	)

2307 
	#AR_MCI_BT_PRI3
 0x1858

	)

2308 
	#AR_MCI_BT_PRI
 0x185c

	)

2309 
	#AR_MCI_WL_FREQ0
 0x1860

	)

2310 
	#AR_MCI_WL_FREQ1
 0x1864

	)

2311 
	#AR_MCI_WL_FREQ2
 0x1868

	)

2312 
	#AR_MCI_GAIN
 0x186c

	)

2313 
	#AR_MCI_WBTIMER1
 0x1870

	)

2314 
	#AR_MCI_WBTIMER2
 0x1874

	)

2315 
	#AR_MCI_WBTIMER3
 0x1878

	)

2316 
	#AR_MCI_WBTIMER4
 0x187c

	)

2317 
	#AR_MCI_MAXGAIN
 0x1880

	)

2318 
	#AR_MCI_HW_SCHD_TBL_CTL
 0x1884

	)

2319 
	#AR_MCI_HW_SCHD_TBL_D0
 0x1888

	)

2320 
	#AR_MCI_HW_SCHD_TBL_D1
 0x188c

	)

2321 
	#AR_MCI_HW_SCHD_TBL_D2
 0x1890

	)

2322 
	#AR_MCI_HW_SCHD_TBL_D3
 0x1894

	)

2323 
	#AR_MCI_TX_PAYLOAD0
 0x1898

	)

2324 
	#AR_MCI_TX_PAYLOAD1
 0x189c

	)

2325 
	#AR_MCI_TX_PAYLOAD2
 0x18a0

	)

2326 
	#AR_MCI_TX_PAYLOAD3
 0x18a4

	)

2327 
	#AR_BTCOEX_WBTIMER
 0x18a8

	)

2329 
	#AR_BTCOEX_CTRL
 0x18ac

	)

2330 
	#AR_BTCOEX_CTRL_AR9462_MODE
 0x00000001

	)

2331 
	#AR_BTCOEX_CTRL_AR9462_MODE_S
 0

	)

2332 
	#AR_BTCOEX_CTRL_WBTIMER_EN
 0x00000002

	)

2333 
	#AR_BTCOEX_CTRL_WBTIMER_EN_S
 1

	)

2334 
	#AR_BTCOEX_CTRL_MCI_MODE_EN
 0x00000004

	)

2335 
	#AR_BTCOEX_CTRL_MCI_MODE_EN_S
 2

	)

2336 
	#AR_BTCOEX_CTRL_LNA_SHARED
 0x00000008

	)

2337 
	#AR_BTCOEX_CTRL_LNA_SHARED_S
 3

	)

2338 
	#AR_BTCOEX_CTRL_PA_SHARED
 0x00000010

	)

2339 
	#AR_BTCOEX_CTRL_PA_SHARED_S
 4

	)

2340 
	#AR_BTCOEX_CTRL_ONE_STEP_LOOK_AHEAD_EN
 0x00000020

	)

2341 
	#AR_BTCOEX_CTRL_ONE_STEP_LOOK_AHEAD_EN_S
 5

	)

2342 
	#AR_BTCOEX_CTRL_TIME_TO_NEXT_BT_THRESH_EN
 0x00000040

	)

2343 
	#AR_BTCOEX_CTRL_TIME_TO_NEXT_BT_THRESH_EN_S
 6

	)

2344 
	#AR_BTCOEX_CTRL_NUM_ANTENNAS
 0x00000180

	)

2345 
	#AR_BTCOEX_CTRL_NUM_ANTENNAS_S
 7

	)

2346 
	#AR_BTCOEX_CTRL_RX_CHAIN_MASK
 0x00000E00

	)

2347 
	#AR_BTCOEX_CTRL_RX_CHAIN_MASK_S
 9

	)

2348 
	#AR_BTCOEX_CTRL_AGGR_THRESH
 0x00007000

	)

2349 
	#AR_BTCOEX_CTRL_AGGR_THRESH_S
 12

	)

2350 
	#AR_BTCOEX_CTRL_1_CHAIN_BCN
 0x00080000

	)

2351 
	#AR_BTCOEX_CTRL_1_CHAIN_BCN_S
 19

	)

2352 
	#AR_BTCOEX_CTRL_1_CHAIN_ACK
 0x00100000

	)

2353 
	#AR_BTCOEX_CTRL_1_CHAIN_ACK_S
 20

	)

2354 
	#AR_BTCOEX_CTRL_WAIT_BA_MARGIN
 0x1FE00000

	)

2355 
	#AR_BTCOEX_CTRL_WAIT_BA_MARGIN_S
 28

	)

2356 
	#AR_BTCOEX_CTRL_REDUCE_TXPWR
 0x20000000

	)

2357 
	#AR_BTCOEX_CTRL_REDUCE_TXPWR_S
 29

	)

2358 
	#AR_BTCOEX_CTRL_SPDT_ENABLE_10
 0x40000000

	)

2359 
	#AR_BTCOEX_CTRL_SPDT_ENABLE_10_S
 30

	)

2360 
	#AR_BTCOEX_CTRL_SPDT_POLARITY
 0x80000000

	)

2361 
	#AR_BTCOEX_CTRL_SPDT_POLARITY_S
 31

	)

2363 
	#AR_BTCOEX_MAX_TXPWR
(
_x
Ë(0x18c0 + ((_xË<< 2))

	)

2364 
	#AR_BTCOEX_WL_LNA
 0x1940

	)

2365 
	#AR_BTCOEX_RFGAIN_CTRL
 0x1944

	)

2366 
	#AR_BTCOEX_WL_LNA_TIMEOUT
 0x003FFFFF

	)

2367 
	#AR_BTCOEX_WL_LNA_TIMEOUT_S
 0

	)

2369 
	#AR_BTCOEX_CTRL2
 0x1948

	)

2370 
	#AR_BTCOEX_CTRL2_TXPWR_THRESH
 0x0007F800

	)

2371 
	#AR_BTCOEX_CTRL2_TXPWR_THRESH_S
 11

	)

2372 
	#AR_BTCOEX_CTRL2_TX_CHAIN_MASK
 0x00380000

	)

2373 
	#AR_BTCOEX_CTRL2_TX_CHAIN_MASK_S
 19

	)

2374 
	#AR_BTCOEX_CTRL2_RX_DEWEIGHT
 0x00400000

	)

2375 
	#AR_BTCOEX_CTRL2_RX_DEWEIGHT_S
 22

	)

2376 
	#AR_BTCOEX_CTRL2_GPIO_OBS_SEL
 0x00800000

	)

2377 
	#AR_BTCOEX_CTRL2_GPIO_OBS_SEL_S
 23

	)

2378 
	#AR_BTCOEX_CTRL2_MAC_BB_OBS_SEL
 0x01000000

	)

2379 
	#AR_BTCOEX_CTRL2_MAC_BB_OBS_SEL_S
 24

	)

2380 
	#AR_BTCOEX_CTRL2_DESC_BASED_TXPWR_ENABLE
 0x02000000

	)

2381 
	#AR_BTCOEX_CTRL2_DESC_BASED_TXPWR_ENABLE_S
 25

	)

2383 
	#AR_BTCOEX_CTRL_SPDT_ENABLE
 0x00000001

	)

2384 
	#AR_BTCOEX_CTRL_SPDT_ENABLE_S
 0

	)

2385 
	#AR_BTCOEX_CTRL_BT_OWN_SPDT_CTRL
 0x00000002

	)

2386 
	#AR_BTCOEX_CTRL_BT_OWN_SPDT_CTRL_S
 1

	)

2387 
	#AR_BTCOEX_CTRL_USE_LATCHED_BT_ANT
 0x00000004

	)

2388 
	#AR_BTCOEX_CTRL_USE_LATCHED_BT_ANT_S
 2

	)

2389 
	#AR_GLB_WLAN_UART_INTF_EN
 0x00020000

	)

2390 
	#AR_GLB_WLAN_UART_INTF_EN_S
 17

	)

2391 
	#AR_GLB_DS_JTAG_DISABLE
 0x00040000

	)

2392 
	#AR_GLB_DS_JTAG_DISABLE_S
 18

	)

2394 
	#AR_BTCOEX_RC
 0x194c

	)

2395 
	#AR_BTCOEX_MAX_RFGAIN
(
_x
Ë(0x1950 + ((_xË<< 2))

	)

2396 
	#AR_BTCOEX_DBG
 0x1a50

	)

2397 
	#AR_MCI_LAST_HW_MSG_HDR
 0x1a54

	)

2398 
	#AR_MCI_LAST_HW_MSG_BDY
 0x1a58

	)

2400 
	#AR_MCI_SCHD_TABLE_2
 0x1a5c

	)

2401 
	#AR_MCI_SCHD_TABLE_2_MEM_BASED
 0x00000001

	)

2402 
	#AR_MCI_SCHD_TABLE_2_MEM_BASED_S
 0

	)

2403 
	#AR_MCI_SCHD_TABLE_2_HW_BASED
 0x00000002

	)

2404 
	#AR_MCI_SCHD_TABLE_2_HW_BASED_S
 1

	)

2406 
	#AR_BTCOEX_CTRL3
 0x1a60

	)

2407 
	#AR_BTCOEX_CTRL3_CONT_INFO_TIMEOUT
 0x00000fff

	)

2408 
	#AR_BTCOEX_CTRL3_CONT_INFO_TIMEOUT_S
 0

	)

2410 
	#AR_GLB_SWREG_DISCONT_MODE
 0x2002c

	)

2411 
	#AR_GLB_SWREG_DISCONT_EN_BT_WLAN
 0x3

	)

2413 
	#AR_MCI_MISC
 0x1a74

	)

2414 
	#AR_MCI_MISC_HW_FIX_EN
 0x00000001

	)

2415 
	#AR_MCI_MISC_HW_FIX_EN_S
 0

	)

2416 
	#AR_MCI_DBG_CNT_CTRL
 0x1a78

	)

2417 
	#AR_MCI_DBG_CNT_CTRL_ENABLE
 0x00000001

	)

2418 
	#AR_MCI_DBG_CNT_CTRL_ENABLE_S
 0

	)

	@spectral.c

17 
	~<löux/ªœy.h
>

18 
	~"©h9k.h
"

20 
s8
 
	$fix_rssi_öv_⁄ly
(
u8
 
rssi_vÆ
)

22 i‡(
rssi_vÆ
 == 128)

23 
rssi_vÆ
 = 0;

24  (
s8
Ë
rssi_vÆ
;

25 
	}
}

27 
	$©h_debug_£nd_f·_ßm∂e
(
©h_so·c
 *
sc
,

28 
f·_ßm∂e_év
 *fft_sample_tlv)

30 
Àngth
;

31 i‡(!
sc
->
rfs_ch™_•ec_sˇn
)

34 
Àngth
 = 
	`__be16_to_˝u
(
f·_ßm∂e_év
->length) +

35 (*
f·_ßm∂e_év
);

36 
	`ªœy_wrôe
(
sc
->
rfs_ch™_•ec_sˇn
, 
f·_ßm∂e_év
, 
Àngth
);

37 
	}
}

40 
	$©h_¥o˚ss_f·
(
©h_so·c
 *
sc
, 
õì80211_hdr
 *
hdr
,

41 
©h_rx_°©us
 *
rs
, 
u64
 
tsf
)

43 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

44 
u8
 
num_bös
, *
bös
, *
vd©a
 = (u8 *)
hdr
;

45 
f·_ßm∂e_ht20
 
f·_ßm∂e_20
;

46 
f·_ßm∂e_ht20_40
 
f·_ßm∂e_40
;

47 
f·_ßm∂e_év
 *
év
;

48 
©h_ød¨_öfo
 *
ød¨_öfo
;

49 
Àn
 = 
rs
->
rs_d©Æí
;

50 
dc_pos
;

51 
u16
 
f·_Àn
, 
Àngth
, 
‰eq
 = 
ah
->
curch™
->
ch™
->
˚¡î_‰eq
;

52 
∆80211_ch™√l_ty≥
 
ch™_ty≥
;

58 i‡(
rs
->
rs_phyîr
 !
ATH9K_PHYERR_RADAR
 &&

59 
rs
->
rs_phyîr
 !
ATH9K_PHYERR_FALSE_RADAR_EXT
 &&

60 
rs
->
rs_phyîr
 !
ATH9K_PHYERR_SPECTRAL
)

66 
ød¨_öfo
 = ((
©h_ød¨_öfo
 *)&
vd©a
[
Àn
]) - 1;

67 i‡(!(
ød¨_öfo
->
pul£_bw_öfo
 & 
SPECTRAL_SCAN_BITMASK
))

70 
ch™_ty≥
 = 
	`cfg80211_gë_ch™def_ty≥
(&
sc
->
hw
->
c⁄f
.
ch™def
);

71 i‡((
ch™_ty≥
 =
NL80211_CHAN_HT40MINUS
) ||

72 (
ch™_ty≥
 =
NL80211_CHAN_HT40PLUS
)) {

73 
f·_Àn
 = 
SPECTRAL_HT20_40_TOTAL_DATA_LEN
;

74 
num_bös
 = 
SPECTRAL_HT20_40_NUM_BINS
;

75 
bös
 = (
u8
 *)
f·_ßm∂e_40
.
d©a
;

77 
f·_Àn
 = 
SPECTRAL_HT20_TOTAL_DATA_LEN
;

78 
num_bös
 = 
SPECTRAL_HT20_NUM_BINS
;

79 
bös
 = (
u8
 *)
f·_ßm∂e_20
.
d©a
;

83 i‡((
Àn
 > 
f·_Àn
 + 2) || (len < fft_len - 1))

86 
Àn
 - 
f·_Àn
) {

89 
	`mem˝y
(
bös
, 
vd©a
, 
num_bös
);

93 
	`mem˝y
(&
bös
[1], 
vd©a
, 
num_bös
 - 1);

94 
bös
[0] = 
vd©a
[0];

98 
	`mem˝y
(
bös
, 
vd©a
, 30);

99 
bös
[30] = 
vd©a
[31];

100 
	`mem˝y
(&
bös
[31], &
vd©a
[33], 
num_bös
 - 31);

104 
bös
[0] = 
vd©a
[0];

105 
	`mem˝y
(&
bös
[1], 
vd©a
, 30);

106 
bös
[31] = 
vd©a
[31];

107 
	`mem˝y
(&
bös
[32], &
vd©a
[33], 
num_bös
 - 32);

116 
dc_pos
 = 
num_bös
 / 2;

117 
bös
[
dc_pos
] = (bins[dc_pos + 1] + bins[dc_pos - 1]) / 2;

119 i‡((
ch™_ty≥
 =
NL80211_CHAN_HT40MINUS
) ||

120 (
ch™_ty≥
 =
NL80211_CHAN_HT40PLUS
)) {

121 
s8
 
lowî_rssi
, 
uµî_rssi
;

122 
s16
 
ext_nf
;

123 
u8
 
lowî_max_ödex
, 
uµî_max_ödex
;

124 
u8
 
lowî_bôm≠_w
, 
uµî_bôm≠_w
;

125 
u16
 
lowî_mag
, 
uµî_mag
;

126 
©h9k_hw_ˇl_d©a
 *
ˇld©a
 = 
ah
->caldata;

127 
©h_ht20_40_mag_öfo
 *
mag_öfo
;

129 i‡(
ˇld©a
)

130 
ext_nf
 = 
	`©h9k_hw_gëch™_noi£
(
ah
,áh->
curch™
,

131 
ˇld©a
->
nfCÆHi°
[3].
¥ivNF
);

133 
ext_nf
 = 
ATH_DEFAULT_NOISE_FLOOR
;

135 
Àngth
 = (
f·_ßm∂e_40
Ë- (
f·_ßm∂e_év
);

136 
f·_ßm∂e_40
.
év
.
ty≥
 = 
ATH_FFT_SAMPLE_HT20_40
;

137 
f·_ßm∂e_40
.
év
.
Àngth
 = 
	`__˝u_to_be16
(length);

138 
f·_ßm∂e_40
.
‰eq
 = 
	`__˝u_to_be16
(freq);

139 
f·_ßm∂e_40
.
ch™√l_ty≥
 = 
ch™_ty≥
;

141 i‡(
ch™_ty≥
 =
NL80211_CHAN_HT40PLUS
) {

142 
lowî_rssi
 = 
	`fix_rssi_öv_⁄ly
(
rs
->
rs_rssi_˘l
[0]);

143 
uµî_rssi
 = 
	`fix_rssi_öv_⁄ly
(
rs
->
rs_rssi_ext
[0]);

145 
f·_ßm∂e_40
.
lowî_noi£
 = 
ah
->
noi£
;

146 
f·_ßm∂e_40
.
uµî_noi£
 = 
ext_nf
;

148 
lowî_rssi
 = 
	`fix_rssi_öv_⁄ly
(
rs
->
rs_rssi_ext
[0]);

149 
uµî_rssi
 = 
	`fix_rssi_öv_⁄ly
(
rs
->
rs_rssi_˘l
[0]);

151 
f·_ßm∂e_40
.
lowî_noi£
 = 
ext_nf
;

152 
f·_ßm∂e_40
.
uµî_noi£
 = 
ah
->
noi£
;

154 
f·_ßm∂e_40
.
lowî_rssi
 =Üower_rssi;

155 
f·_ßm∂e_40
.
uµî_rssi
 = upper_rssi;

157 
mag_öfo
 = ((
©h_ht20_40_mag_öfo
 *)
ød¨_öfo
) - 1;

158 
lowî_mag
 = 
	`•e˘øl_max_magnôude
(
mag_öfo
->
lowî_bös
);

159 
uµî_mag
 = 
	`•e˘øl_max_magnôude
(
mag_öfo
->
uµî_bös
);

160 
f·_ßm∂e_40
.
lowî_max_magnôude
 = 
	`__˝u_to_be16
(
lowî_mag
);

161 
f·_ßm∂e_40
.
uµî_max_magnôude
 = 
	`__˝u_to_be16
(
uµî_mag
);

162 
lowî_max_ödex
 = 
	`•e˘øl_max_ödex
(
mag_öfo
->
lowî_bös
);

163 
uµî_max_ödex
 = 
	`•e˘øl_max_ödex
(
mag_öfo
->
uµî_bös
);

164 
f·_ßm∂e_40
.
lowî_max_ödex
 =Üower_max_index;

165 
f·_ßm∂e_40
.
uµî_max_ödex
 = upper_max_index;

166 
lowî_bôm≠_w
 = 
	`•e˘øl_bôm≠_weight
(
mag_öfo
->
lowî_bös
);

167 
uµî_bôm≠_w
 = 
	`•e˘øl_bôm≠_weight
(
mag_öfo
->
uµî_bös
);

168 
f·_ßm∂e_40
.
lowî_bôm≠_weight
 = 
lowî_bôm≠_w
;

169 
f·_ßm∂e_40
.
uµî_bôm≠_weight
 = 
uµî_bôm≠_w
;

170 
f·_ßm∂e_40
.
max_exp
 = 
mag_öfo
->max_exp & 0xf;

172 
f·_ßm∂e_40
.
tsf
 = 
	`__˝u_to_be64
(tsf);

174 
év
 = (
f·_ßm∂e_év
 *)&
f·_ßm∂e_40
;

176 
u8
 
max_ödex
, 
bôm≠_w
;

177 
u16
 
magnôude
;

178 
©h_ht20_mag_öfo
 *
mag_öfo
;

180 
Àngth
 = (
f·_ßm∂e_20
Ë- (
f·_ßm∂e_év
);

181 
f·_ßm∂e_20
.
év
.
ty≥
 = 
ATH_FFT_SAMPLE_HT20
;

182 
f·_ßm∂e_20
.
év
.
Àngth
 = 
	`__˝u_to_be16
(length);

183 
f·_ßm∂e_20
.
‰eq
 = 
	`__˝u_to_be16
(freq);

185 
f·_ßm∂e_20
.
rssi
 = 
	`fix_rssi_öv_⁄ly
(
rs
->
rs_rssi_˘l
[0]);

186 
f·_ßm∂e_20
.
noi£
 = 
ah
->noise;

188 
mag_öfo
 = ((
©h_ht20_mag_öfo
 *)
ød¨_öfo
) - 1;

189 
magnôude
 = 
	`•e˘øl_max_magnôude
(
mag_öfo
->
Æl_bös
);

190 
f·_ßm∂e_20
.
max_magnôude
 = 
	`__˝u_to_be16
(
magnôude
);

191 
max_ödex
 = 
	`•e˘øl_max_ödex
(
mag_öfo
->
Æl_bös
);

192 
f·_ßm∂e_20
.
max_ödex
 = max_index;

193 
bôm≠_w
 = 
	`•e˘øl_bôm≠_weight
(
mag_öfo
->
Æl_bös
);

194 
f·_ßm∂e_20
.
bôm≠_weight
 = 
bôm≠_w
;

195 
f·_ßm∂e_20
.
max_exp
 = 
mag_öfo
->max_exp & 0xf;

197 
f·_ßm∂e_20
.
tsf
 = 
	`__˝u_to_be64
(tsf);

199 
év
 = (
f·_ßm∂e_év
 *)&
f·_ßm∂e_20
;

202 
	`©h_debug_£nd_f·_ßm∂e
(
sc
, 
év
);

205 
	}
}

211 
ssize_t
 
	$ªad_fûe_•ec_sˇn_˘l
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

212 
size_t
 
cou¡
, 
loff_t
 *
µos
)

214 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

215 *
mode
 = "";

216 
Àn
;

218 
sc
->
•e˘øl_mode
) {

219 
SPECTRAL_DISABLED
:

220 
mode
 = "disable";

222 
SPECTRAL_BACKGROUND
:

223 
mode
 = "background";

225 
SPECTRAL_CHANSCAN
:

226 
mode
 = "chanscan";

228 
SPECTRAL_MANUAL
:

229 
mode
 = "manual";

232 
Àn
 = 
	`°æí
(
mode
);

233  
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
mode
, 
Àn
);

234 
	}
}

236 
ssize_t
 
	$wrôe_fûe_•ec_sˇn_˘l
(
fûe
 *file,

237 c⁄° 
__u£r
 *
u£r_buf
,

238 
size_t
 
cou¡
, 
loff_t
 *
µos
)

240 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

241 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

242 
buf
[32];

243 
ssize_t
 
Àn
;

245 i‡(
	`c⁄fig_íabÀd
(
CPTCFG_ATH9K_TX99
))

246  -
EOPNOTSUPP
;

248 
Àn
 = 
	`mö
(
cou¡
, (
buf
) - 1);

249 i‡(
	`c›y_‰om_u£r
(
buf
, 
u£r_buf
, 
Àn
))

250  -
EFAULT
;

252 
buf
[
Àn
] = '\0';

254 i‡(
	`°∫cmp
("åiggî", 
buf
, 7) == 0) {

255 
	`©h9k_•e˘øl_sˇn_åiggî
(
sc
->
hw
);

256 } i‡(
	`°∫cmp
("background", 
buf
, 9) == 0) {

257 
	`©h9k_•e˘øl_sˇn_c⁄fig
(
sc
->
hw
, 
SPECTRAL_BACKGROUND
);

258 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "spectral scan: background modeÉnabled\n");

259 } i‡(
	`°∫cmp
("ch™sˇn", 
buf
, 8) == 0) {

260 
	`©h9k_•e˘øl_sˇn_c⁄fig
(
sc
->
hw
, 
SPECTRAL_CHANSCAN
);

261 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "spectral scan: channel scan modeÉnabled\n");

262 } i‡(
	`°∫cmp
("m™uÆ", 
buf
, 6) == 0) {

263 
	`©h9k_•e˘øl_sˇn_c⁄fig
(
sc
->
hw
, 
SPECTRAL_MANUAL
);

264 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "spectral scan: manual modeÉnabled\n");

265 } i‡(
	`°∫cmp
("dißbÀ", 
buf
, 7) == 0) {

266 
	`©h9k_•e˘øl_sˇn_c⁄fig
(
sc
->
hw
, 
SPECTRAL_DISABLED
);

267 
	`©h_dbg
(
comm⁄
, 
CONFIG
, "spectral scan: disabled\n");

269  -
EINVAL
;

272  
cou¡
;

273 
	}
}

275 c⁄° 
fûe_›î©i⁄s
 
	gf›s_•ec_sˇn_˘l
 = {

276 .
ªad
 = 
ªad_fûe_•ec_sˇn_˘l
,

277 .
	gwrôe
 = 
wrôe_fûe_•ec_sˇn_˘l
,

278 .
	g›í
 = 
sim∂e_›í
,

279 .
	gow√r
 = 
THIS_MODULE
,

280 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

287 
ssize_t
 
	$ªad_fûe_•e˘øl_sh‹t_ª≥©
(
fûe
 *file,

288 
__u£r
 *
u£r_buf
,

289 
size_t
 
cou¡
, 
loff_t
 *
µos
)

291 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

292 
buf
[32];

293 
Àn
;

295 
Àn
 = 
	`•rötf
(
buf
, "%d\n", 
sc
->
•ec_c⁄fig
.
sh‹t_ª≥©
);

296  
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

297 
	}
}

299 
ssize_t
 
	$wrôe_fûe_•e˘øl_sh‹t_ª≥©
(
fûe
 *file,

300 c⁄° 
__u£r
 *
u£r_buf
,

301 
size_t
 
cou¡
, 
loff_t
 *
µos
)

303 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

304 
vÆ
;

305 
buf
[32];

306 
ssize_t
 
Àn
;

308 
Àn
 = 
	`mö
(
cou¡
, (
buf
) - 1);

309 i‡(
	`c›y_‰om_u£r
(
buf
, 
u£r_buf
, 
Àn
))

310  -
EFAULT
;

312 
buf
[
Àn
] = '\0';

313 i‡(
	`k°πoul
(
buf
, 0, &
vÆ
))

314  -
EINVAL
;

316 i‡(
vÆ
 < 0 || val > 1)

317  -
EINVAL
;

319 
sc
->
•ec_c⁄fig
.
sh‹t_ª≥©
 = 
vÆ
;

320  
cou¡
;

321 
	}
}

323 c⁄° 
fûe_›î©i⁄s
 
	gf›s_•e˘øl_sh‹t_ª≥©
 = {

324 .
ªad
 = 
ªad_fûe_•e˘øl_sh‹t_ª≥©
,

325 .
	gwrôe
 = 
wrôe_fûe_•e˘øl_sh‹t_ª≥©
,

326 .
	g›í
 = 
sim∂e_›í
,

327 .
	gow√r
 = 
THIS_MODULE
,

328 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

335 
ssize_t
 
	$ªad_fûe_•e˘øl_cou¡
(
fûe
 *file,

336 
__u£r
 *
u£r_buf
,

337 
size_t
 
cou¡
, 
loff_t
 *
µos
)

339 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

340 
buf
[32];

341 
Àn
;

343 
Àn
 = 
	`•rötf
(
buf
, "%d\n", 
sc
->
•ec_c⁄fig
.
cou¡
);

344  
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

345 
	}
}

347 
ssize_t
 
	$wrôe_fûe_•e˘øl_cou¡
(
fûe
 *file,

348 c⁄° 
__u£r
 *
u£r_buf
,

349 
size_t
 
cou¡
, 
loff_t
 *
µos
)

351 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

352 
vÆ
;

353 
buf
[32];

354 
ssize_t
 
Àn
;

356 
Àn
 = 
	`mö
(
cou¡
, (
buf
) - 1);

357 i‡(
	`c›y_‰om_u£r
(
buf
, 
u£r_buf
, 
Àn
))

358  -
EFAULT
;

360 
buf
[
Àn
] = '\0';

361 i‡(
	`k°πoul
(
buf
, 0, &
vÆ
))

362  -
EINVAL
;

364 i‡(
vÆ
 < 0 || val > 255)

365  -
EINVAL
;

367 
sc
->
•ec_c⁄fig
.
cou¡
 = 
vÆ
;

368  
cou¡
;

369 
	}
}

371 c⁄° 
fûe_›î©i⁄s
 
	gf›s_•e˘øl_cou¡
 = {

372 .
ªad
 = 
ªad_fûe_•e˘øl_cou¡
,

373 .
	gwrôe
 = 
wrôe_fûe_•e˘øl_cou¡
,

374 .
	g›í
 = 
sim∂e_›í
,

375 .
	gow√r
 = 
THIS_MODULE
,

376 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

383 
ssize_t
 
	$ªad_fûe_•e˘øl_≥riod
(
fûe
 *file,

384 
__u£r
 *
u£r_buf
,

385 
size_t
 
cou¡
, 
loff_t
 *
µos
)

387 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

388 
buf
[32];

389 
Àn
;

391 
Àn
 = 
	`•rötf
(
buf
, "%d\n", 
sc
->
•ec_c⁄fig
.
≥riod
);

392  
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

393 
	}
}

395 
ssize_t
 
	$wrôe_fûe_•e˘øl_≥riod
(
fûe
 *file,

396 c⁄° 
__u£r
 *
u£r_buf
,

397 
size_t
 
cou¡
, 
loff_t
 *
µos
)

399 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

400 
vÆ
;

401 
buf
[32];

402 
ssize_t
 
Àn
;

404 
Àn
 = 
	`mö
(
cou¡
, (
buf
) - 1);

405 i‡(
	`c›y_‰om_u£r
(
buf
, 
u£r_buf
, 
Àn
))

406  -
EFAULT
;

408 
buf
[
Àn
] = '\0';

409 i‡(
	`k°πoul
(
buf
, 0, &
vÆ
))

410  -
EINVAL
;

412 i‡(
vÆ
 < 0 || val > 255)

413  -
EINVAL
;

415 
sc
->
•ec_c⁄fig
.
≥riod
 = 
vÆ
;

416  
cou¡
;

417 
	}
}

419 c⁄° 
fûe_›î©i⁄s
 
	gf›s_•e˘øl_≥riod
 = {

420 .
ªad
 = 
ªad_fûe_•e˘øl_≥riod
,

421 .
	gwrôe
 = 
wrôe_fûe_•e˘øl_≥riod
,

422 .
	g›í
 = 
sim∂e_›í
,

423 .
	gow√r
 = 
THIS_MODULE
,

424 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

431 
ssize_t
 
	$ªad_fûe_•e˘øl_f·_≥riod
(
fûe
 *file,

432 
__u£r
 *
u£r_buf
,

433 
size_t
 
cou¡
, 
loff_t
 *
µos
)

435 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

436 
buf
[32];

437 
Àn
;

439 
Àn
 = 
	`•rötf
(
buf
, "%d\n", 
sc
->
•ec_c⁄fig
.
f·_≥riod
);

440  
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

441 
	}
}

443 
ssize_t
 
	$wrôe_fûe_•e˘øl_f·_≥riod
(
fûe
 *file,

444 c⁄° 
__u£r
 *
u£r_buf
,

445 
size_t
 
cou¡
, 
loff_t
 *
µos
)

447 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

448 
vÆ
;

449 
buf
[32];

450 
ssize_t
 
Àn
;

452 
Àn
 = 
	`mö
(
cou¡
, (
buf
) - 1);

453 i‡(
	`c›y_‰om_u£r
(
buf
, 
u£r_buf
, 
Àn
))

454  -
EFAULT
;

456 
buf
[
Àn
] = '\0';

457 i‡(
	`k°πoul
(
buf
, 0, &
vÆ
))

458  -
EINVAL
;

460 i‡(
vÆ
 < 0 || val > 15)

461  -
EINVAL
;

463 
sc
->
•ec_c⁄fig
.
f·_≥riod
 = 
vÆ
;

464  
cou¡
;

465 
	}
}

467 c⁄° 
fûe_›î©i⁄s
 
	gf›s_•e˘øl_f·_≥riod
 = {

468 .
ªad
 = 
ªad_fûe_•e˘øl_f·_≥riod
,

469 .
	gwrôe
 = 
wrôe_fûe_•e˘øl_f·_≥riod
,

470 .
	g›í
 = 
sim∂e_›í
,

471 .
	gow√r
 = 
THIS_MODULE
,

472 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

479 
díåy
 *
¸óã_buf_fûe_h™dÀr
(c⁄° *
fûíame
,

480 
díåy
 *
∑ª¡
,

481 #i‡(
LINUX_VERSION_CODE
 >
KERNEL_VERSION
(3,3,0))

482 
umode_t
 
mode
,

484 
mode
,

486 
rch™_buf
 *
buf
,

487 *
is_globÆ
)

489 
díåy
 *
	gbuf_fûe
;

491 
	gbuf_fûe
 = 
debugfs_¸óã_fûe
(
fûíame
, 
mode
, 
∑ª¡
, 
buf
,

492 &
ªœy_fûe_›î©i⁄s
);

493 *
	gis_globÆ
 = 1;

494  
	gbuf_fûe
;

497 
	$ªmove_buf_fûe_h™dÀr
(
díåy
 *dentry)

499 
	`debugfs_ªmove
(
díåy
);

502 
	}
}

504 
rch™_ˇŒbacks
 
	grfs_•ec_sˇn_cb
 = {

505 .
¸óã_buf_fûe
 = 
¸óã_buf_fûe_h™dÀr
,

506 .
	gªmove_buf_fûe
 = 
ªmove_buf_fûe_h™dÀr
,

513 
	$©h9k_•e˘øl_deöô_debug
(
©h_so·c
 *
sc
)

515 i‡(
	`c⁄fig_íabÀd
(
CPTCFG_ATH9K_DEBUGFS
Ë&& 
sc
->
rfs_ch™_•ec_sˇn
) {

516 
	`ªœy_˛o£
(
sc
->
rfs_ch™_•ec_sˇn
);

517 
sc
->
rfs_ch™_•ec_sˇn
 = 
NULL
;

519 
	}
}

521 
	$©h9k_•e˘øl_öô_debug
(
©h_so·c
 *
sc
)

523 
sc
->
rfs_ch™_•ec_sˇn
 = 
	`ªœy_›í
("spectral_scan",

524 
sc
->
debug
.
debugfs_phy
,

525 1024, 256, &
rfs_•ec_sˇn_cb
,

526 
NULL
);

527 
	`debugfs_¸óã_fûe
("spectral_scan_ctl",

528 
S_IRUSR
 | 
S_IWUSR
,

529 
sc
->
debug
.
debugfs_phy
, sc,

530 &
f›s_•ec_sˇn_˘l
);

531 
	`debugfs_¸óã_fûe
("spectral_short_repeat",

532 
S_IRUSR
 | 
S_IWUSR
,

533 
sc
->
debug
.
debugfs_phy
, sc,

534 &
f›s_•e˘øl_sh‹t_ª≥©
);

535 
	`debugfs_¸óã_fûe
("spectral_count",

536 
S_IRUSR
 | 
S_IWUSR
,

537 
sc
->
debug
.
debugfs_phy
, sc,

538 &
f›s_•e˘øl_cou¡
);

539 
	`debugfs_¸óã_fûe
("spectral_period",

540 
S_IRUSR
 | 
S_IWUSR
,

541 
sc
->
debug
.
debugfs_phy
, sc,

542 &
f›s_•e˘øl_≥riod
);

543 
	`debugfs_¸óã_fûe
("spectral_fft_period",

544 
S_IRUSR
 | 
S_IWUSR
,

545 
sc
->
debug
.
debugfs_phy
, sc,

546 &
f›s_•e˘øl_f·_≥riod
);

547 
	}
}

	@spectral.h

17 #i‚de‡
SPECTRAL_H


18 
	#SPECTRAL_H


	)

30 
	e•e˘øl_mode
 {

31 
	mSPECTRAL_DISABLED
 = 0,

32 
	mSPECTRAL_BACKGROUND
,

33 
	mSPECTRAL_MANUAL
,

34 
	mSPECTRAL_CHANSCAN
,

37 
	#SPECTRAL_SCAN_BITMASK
 0x10

	)

39 
	s©h_ød¨_öfo
 {

40 
u8
 
	mpul£_Àngth_¥i
;

41 
u8
 
	mpul£_Àngth_ext
;

42 
u8
 
	mpul£_bw_öfo
;

43 } 
	g__∑cked
;

52 
	s©h_ht20_mag_öfo
 {

53 
u8
 
	mÆl_bös
[3];

54 
u8
 
	mmax_exp
;

55 } 
	g__∑cked
;

57 
	#SPECTRAL_HT20_NUM_BINS
 56

	)

62 
	s©h_ht20_f·_∑ckë
 {

63 
u8
 
	md©a
[
SPECTRAL_HT20_NUM_BINS
];

64 
©h_ht20_mag_öfo
 
	mmag_öfo
;

65 
©h_ød¨_öfo
 
	mød¨_öfo
;

66 } 
	g__∑cked
;

68 
	#SPECTRAL_HT20_TOTAL_DATA_LEN
 ((
©h_ht20_f·_∑ckë
))

	)

80 
	s©h_ht20_40_mag_öfo
 {

81 
u8
 
	mlowî_bös
[3];

82 
u8
 
	muµî_bös
[3];

83 
u8
 
	mmax_exp
;

84 } 
	g__∑cked
;

86 
	#SPECTRAL_HT20_40_NUM_BINS
 128

	)

91 
	s©h_ht20_40_f·_∑ckë
 {

92 
u8
 
	md©a
[
SPECTRAL_HT20_40_NUM_BINS
];

93 
©h_ht20_40_mag_öfo
 
	mmag_öfo
;

94 
©h_ød¨_öfo
 
	mød¨_öfo
;

95 } 
	g__∑cked
;

98 
	#SPECTRAL_HT20_40_TOTAL_DATA_LEN
 ((
©h_ht20_40_f·_∑ckë
))

	)

101 
ölöe
 
u16
 
	$•e˘øl_max_magnôude
(
u8
 *
bös
)

103  (
bös
[0] & 0xc0) >> 6 |

104 (
bös
[1] & 0xff) << 2 |

105 (
bös
[2] & 0x03) << 10;

106 
	}
}

109 
ölöe
 
u8
 
	$•e˘øl_max_ödex
(
u8
 *
bös
)

111 
s8
 
m
 = (
bös
[2] & 0xfc) >> 2;

114 i‡(
m
 > 32)

115 
m
 |= 0xe0;

117 
m
 &= ~0xe0;

119  
m
 + 29;

120 
	}
}

123 
ölöe
 
u8
 
	$•e˘øl_bôm≠_weight
(
u8
 *
bös
)

125  
bös
[0] & 0x3f;

126 
	}
}

136 
	e©h_f·_ßm∂e_ty≥
 {

137 
	mATH_FFT_SAMPLE_HT20
 = 1,

138 
	mATH_FFT_SAMPLE_HT20_40
,

141 
	sf·_ßm∂e_év
 {

142 
u8
 
	mty≥
;

143 
__be16
 
	mÀngth
;

145 } 
	g__∑cked
;

147 
	sf·_ßm∂e_ht20
 {

148 
f·_ßm∂e_év
 
	mév
;

150 
u8
 
	mmax_exp
;

152 
__be16
 
	m‰eq
;

153 
s8
 
	mrssi
;

154 
s8
 
	mnoi£
;

156 
__be16
 
	mmax_magnôude
;

157 
u8
 
	mmax_ödex
;

158 
u8
 
	mbôm≠_weight
;

160 
__be64
 
	mtsf
;

162 
u8
 
	md©a
[
SPECTRAL_HT20_NUM_BINS
];

163 } 
	g__∑cked
;

165 
	sf·_ßm∂e_ht20_40
 {

166 
f·_ßm∂e_év
 
	mév
;

168 
u8
 
	mch™√l_ty≥
;

169 
__be16
 
	m‰eq
;

171 
s8
 
	mlowî_rssi
;

172 
s8
 
	muµî_rssi
;

174 
__be64
 
	mtsf
;

176 
s8
 
	mlowî_noi£
;

177 
s8
 
	muµî_noi£
;

179 
__be16
 
	mlowî_max_magnôude
;

180 
__be16
 
	muµî_max_magnôude
;

182 
u8
 
	mlowî_max_ödex
;

183 
u8
 
	muµî_max_ödex
;

185 
u8
 
	mlowî_bôm≠_weight
;

186 
u8
 
	muµî_bôm≠_weight
;

188 
u8
 
	mmax_exp
;

190 
u8
 
	md©a
[
SPECTRAL_HT20_40_NUM_BINS
];

191 } 
	g__∑cked
;

193 
©h9k_•e˘øl_öô_debug
(
©h_so·c
 *
sc
);

194 
©h9k_•e˘øl_deöô_debug
(
©h_so·c
 *
sc
);

196 
©h9k_•e˘øl_sˇn_åiggî
(
õì80211_hw
 *
hw
);

197 
©h9k_•e˘øl_sˇn_c⁄fig
(
õì80211_hw
 *
hw
,

198 
•e˘øl_mode
 spectral_mode);

200 #ifde‡
CPTCFG_ATH9K_DEBUGFS


201 
©h_¥o˚ss_f·
(
©h_so·c
 *
sc
, 
õì80211_hdr
 *
hdr
,

202 
©h_rx_°©us
 *
rs
, 
u64
 
tsf
);

204 
ölöe
 
	$©h_¥o˚ss_f·
(
©h_so·c
 *
sc
,

205 
õì80211_hdr
 *
hdr
,

206 
©h_rx_°©us
 *
rs
, 
u64
 
tsf
)

209 
	}
}

	@tx99.c

17 
	~"©h9k.h
"

19 
	$©h9k_tx99_°›
(
©h_so·c
 *
sc
)

21 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

22 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

24 
	`©h_døö_Æl_txq
(
sc
);

25 
	`©h_°¨åecv
(
sc
);

27 
	`©h9k_hw_£t_öãºu±s
(
ah
);

28 
	`©h9k_hw_íabÀ_öãºu±s
(
ah
);

30 
	`õì80211_wake_queues
(
sc
->
hw
);

32 
	`k‰ì_skb
(
sc
->
tx99_skb
);

33 
sc
->
tx99_skb
 = 
NULL
;

34 
sc
->
tx99_°©e
 = 
Ál£
;

36 
	`©h9k_hw_tx99_°›
(
sc
->
sc_ah
);

37 
	`©h_dbg
(
comm⁄
, 
XMIT
, "TX99 stopped\n");

38 
	}
}

40 
sk_buff
 *
	$©h9k_buûd_tx99_skb
(
©h_so·c
 *
sc
)

42 
u8
 
PN9D©a
[] = {0xff, 0x87, 0xb8, 0x59, 0xb7, 0xa1, 0xcc, 0x24,

50 
u32
 
Àn
 = 1200;

51 
õì80211_tx_øã
 *
øã
;

52 
õì80211_hw
 *
hw
 = 
sc
->hw;

53 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

54 
õì80211_hdr
 *
hdr
;

55 
õì80211_tx_öfo
 *
tx_öfo
;

56 
sk_buff
 *
skb
;

58 
skb
 = 
	`Æloc_skb
(
Àn
, 
GFP_KERNEL
);

59 i‡(!
skb
)

60  
NULL
;

62 
	`skb_put
(
skb
, 
Àn
);

64 
	`mem£t
(
skb
->
d©a
, 0, 
Àn
);

66 
hdr
 = (
õì80211_hdr
 *)
skb
->
d©a
;

67 
hdr
->
‰ame_c⁄åﬁ
 = 
	`˝u_to_À16
(
IEEE80211_FTYPE_DATA
);

68 
hdr
->
duøti⁄_id
 = 0;

70 
	`mem˝y
(
hdr
->
addr1
, 
hw
->
wùhy
->
≥rm_addr
, 
ETH_ALEN
);

71 
	`mem˝y
(
hdr
->
addr2
, 
hw
->
wùhy
->
≥rm_addr
, 
ETH_ALEN
);

72 
	`mem˝y
(
hdr
->
addr3
, 
hw
->
wùhy
->
≥rm_addr
, 
ETH_ALEN
);

74 
hdr
->
£q_˘æ
 |
	`˝u_to_À16
(
sc
->
tx
.
£q_no
);

76 
tx_öfo
 = 
	`IEEE80211_SKB_CB
(
skb
);

77 
	`mem£t
(
tx_öfo
, 0, (*tx_info));

78 
øã
 = &
tx_öfo
->
c⁄åﬁ
.
øãs
[0];

79 
tx_öfo
->
b™d
 = 
hw
->
c⁄f
.
ch™def
.
ch™
->band;

80 
tx_öfo
->
Êags
 = 
IEEE80211_TX_CTL_NO_ACK
;

81 
tx_öfo
->
c⁄åﬁ
.
vif
 = 
sc
->
tx99_vif
;

82 
øã
->
cou¡
 = 1;

83 i‡(
ah
->
curch™
 && 
	`IS_CHAN_HT
(ah->curchan)) {

84 
øã
->
Êags
 |
IEEE80211_TX_RC_MCS
;

85 i‡(
	`IS_CHAN_HT40
(
ah
->
curch™
))

86 
øã
->
Êags
 |
IEEE80211_TX_RC_40_MHZ_WIDTH
;

89 
	`mem˝y
(
skb
->
d©a
 + (*
hdr
), 
PN9D©a
, (PN9Data));

91  
skb
;

92 
	}
}

94 
	$©h9k_tx99_deöô
(
©h_so·c
 *
sc
)

96 
	`©h_ª£t
(
sc
);

98 
	`©h9k_ps_wakeup
(
sc
);

99 
	`©h9k_tx99_°›
(
sc
);

100 
	`©h9k_ps_ª°‹e
(
sc
);

101 
	}
}

103 
	$©h9k_tx99_öô
(
©h_so·c
 *
sc
)

105 
õì80211_hw
 *
hw
 = 
sc
->hw;

106 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

107 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

108 
©h_tx_c⁄åﬁ
 
tx˘l
;

109 
r
;

111 i‡(
	`ã°_bô
(
ATH_OP_INVALID
, &
comm⁄
->
›_Êags
)) {

112 
	`©h_îr
(
comm⁄
,

114  -
EINVAL
;

117 
sc
->
tx99_skb
 = 
	`©h9k_buûd_tx99_skb
(sc);

118 i‡(!
sc
->
tx99_skb
)

119  -
ENOMEM
;

121 
	`mem£t
(&
tx˘l
, 0, (txctl));

122 
tx˘l
.
txq
 = 
sc
->
tx
.
txq_m≠
[
IEEE80211_AC_VO
];

124 
	`©h_ª£t
(
sc
);

126 
	`©h9k_ps_wakeup
(
sc
);

128 
	`©h9k_hw_dißbÀ_öãºu±s
(
ah
);

129 
	`©omic_£t
(&
ah
->
öå_ªf_˙t
, -1);

130 
	`©h_døö_Æl_txq
(
sc
);

131 
	`©h_°›ªcv
(
sc
);

133 
sc
->
tx99_°©e
 = 
åue
;

135 
	`õì80211_°›_queues
(
hw
);

137 i‡(
sc
->
tx99_powî
 =
MAX_RATE_POWER
 + 1)

138 
sc
->
tx99_powî
 = 
MAX_RATE_POWER
;

140 
	`©h9k_hw_tx99_£t_txpowî
(
ah
, 
sc
->
tx99_powî
);

141 
r
 = 
	`©h9k_tx99_£nd
(
sc
, sc->
tx99_skb
, &
tx˘l
);

142 i‡(
r
) {

143 
	`©h_dbg
(
comm⁄
, 
XMIT
, "FailedÅo xmit TX99 skb\n");

144  
r
;

147 
	`©h_dbg
(
comm⁄
, 
XMIT
, "TX99 xmit started using %d ( %ddBm)\n",

148 
sc
->
tx99_powî
,

149 
sc
->
tx99_powî
 / 2);

154 
	}
}

156 
ssize_t
 
	$ªad_fûe_tx99
(
fûe
 *fûe, 
__u£r
 *
u£r_buf
,

157 
size_t
 
cou¡
, 
loff_t
 *
µos
)

159 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

160 
buf
[3];

161 
Àn
;

163 
Àn
 = 
	`•rötf
(
buf
, "%d\n", 
sc
->
tx99_°©e
);

164  
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

165 
	}
}

167 
ssize_t
 
	$wrôe_fûe_tx99
(
fûe
 *fûe, c⁄° 
__u£r
 *
u£r_buf
,

168 
size_t
 
cou¡
, 
loff_t
 *
µos
)

170 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

171 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

172 
buf
[32];

173 
boﬁ
 
°¨t
;

174 
ssize_t
 
Àn
;

175 
r
;

177 i‡(
sc
->
nvifs
 > 1)

178  -
EOPNOTSUPP
;

180 
Àn
 = 
	`mö
(
cou¡
, (
buf
) - 1);

181 i‡(
	`c›y_‰om_u£r
(
buf
, 
u£r_buf
, 
Àn
))

182  -
EFAULT
;

184 i‡(
	`°πoboﬁ
(
buf
, &
°¨t
))

185  -
EINVAL
;

187 i‡(
°¨t
 =
sc
->
tx99_°©e
) {

188 i‡(!
°¨t
)

189  
cou¡
;

190 
	`©h_dbg
(
comm⁄
, 
XMIT
, "Resetting TX99\n");

191 
	`©h9k_tx99_deöô
(
sc
);

194 i‡(!
°¨t
) {

195 
	`©h9k_tx99_deöô
(
sc
);

196  
cou¡
;

199 
r
 = 
	`©h9k_tx99_öô
(
sc
);

200 i‡(
r
)

201  
r
;

203  
cou¡
;

204 
	}
}

206 c⁄° 
fûe_›î©i⁄s
 
	gf›s_tx99
 = {

207 .
ªad
 = 
ªad_fûe_tx99
,

208 .
	gwrôe
 = 
wrôe_fûe_tx99
,

209 .
	g›í
 = 
sim∂e_›í
,

210 .
	gow√r
 = 
THIS_MODULE
,

211 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

214 
ssize_t
 
	$ªad_fûe_tx99_powî
(
fûe
 *file,

215 
__u£r
 *
u£r_buf
,

216 
size_t
 
cou¡
, 
loff_t
 *
µos
)

218 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

219 
buf
[32];

220 
Àn
;

222 
Àn
 = 
	`•rötf
(
buf
, "%d (%d dBm)\n",

223 
sc
->
tx99_powî
,

224 
sc
->
tx99_powî
 / 2);

226  
	`sim∂e_ªad_‰om_buf„r
(
u£r_buf
, 
cou¡
, 
µos
, 
buf
, 
Àn
);

227 
	}
}

229 
ssize_t
 
	$wrôe_fûe_tx99_powî
(
fûe
 *file,

230 c⁄° 
__u£r
 *
u£r_buf
,

231 
size_t
 
cou¡
, 
loff_t
 *
µos
)

233 
©h_so·c
 *
sc
 = 
fûe
->
¥iv©e_d©a
;

234 
r
;

235 
u8
 
tx_powî
;

237 
r
 = 
	`k°πou8_‰om_u£r
(
u£r_buf
, 
cou¡
, 0, &
tx_powî
);

238 i‡(
r
)

239  
r
;

241 i‡(
tx_powî
 > 
MAX_RATE_POWER
)

242  -
EINVAL
;

244 
sc
->
tx99_powî
 = 
tx_powî
;

246 
	`©h9k_ps_wakeup
(
sc
);

247 
	`©h9k_hw_tx99_£t_txpowî
(
sc
->
sc_ah
, sc->
tx99_powî
);

248 
	`©h9k_ps_ª°‹e
(
sc
);

250  
cou¡
;

251 
	}
}

253 c⁄° 
fûe_›î©i⁄s
 
	gf›s_tx99_powî
 = {

254 .
ªad
 = 
ªad_fûe_tx99_powî
,

255 .
	gwrôe
 = 
wrôe_fûe_tx99_powî
,

256 .
	g›í
 = 
sim∂e_›í
,

257 .
	gow√r
 = 
THIS_MODULE
,

258 .
	gŒ£ek
 = 
deÁu…_Œ£ek
,

261 
	$©h9k_tx99_öô_debug
(
©h_so·c
 *
sc
)

263 i‡(!
	`AR_SREV_9300_20_OR_LATER
(
sc
->
sc_ah
))

266 
	`debugfs_¸óã_fûe
("tx99", 
S_IRUSR
 | 
S_IWUSR
,

267 
sc
->
debug
.
debugfs_phy
, sc,

268 &
f›s_tx99
);

269 
	`debugfs_¸óã_fûe
("tx99_powî", 
S_IRUSR
 | 
S_IWUSR
,

270 
sc
->
debug
.
debugfs_phy
, sc,

271 &
f›s_tx99_powî
);

272 
	}
}

	@wmi.c

17 
	~"htc.h
"

19 c⁄° *
	$wmi_cmd_to_«me
(
wmi_cmd_id
 
wmi_cmd
)

21 
wmi_cmd
) {

22 
WMI_ECHO_CMDID
:

24 
WMI_ACCESS_MEMORY_CMDID
:

26 
WMI_GET_FW_VERSION
:

28 
WMI_DISABLE_INTR_CMDID
:

30 
WMI_ENABLE_INTR_CMDID
:

32 
WMI_ATH_INIT_CMDID
:

34 
WMI_ABORT_TXQ_CMDID
:

36 
WMI_STOP_TX_DMA_CMDID
:

38 
WMI_ABORT_TX_DMA_CMDID
:

40 
WMI_DRAIN_TXQ_CMDID
:

42 
WMI_DRAIN_TXQ_ALL_CMDID
:

44 
WMI_START_RECV_CMDID
:

46 
WMI_STOP_RECV_CMDID
:

48 
WMI_FLUSH_RECV_CMDID
:

50 
WMI_SET_MODE_CMDID
:

52 
WMI_NODE_CREATE_CMDID
:

54 
WMI_NODE_REMOVE_CMDID
:

56 
WMI_VAP_REMOVE_CMDID
:

58 
WMI_VAP_CREATE_CMDID
:

60 
WMI_REG_READ_CMDID
:

62 
WMI_REG_WRITE_CMDID
:

64 
WMI_RC_STATE_CHANGE_CMDID
:

66 
WMI_RC_RATE_UPDATE_CMDID
:

68 
WMI_TARGET_IC_UPDATE_CMDID
:

70 
WMI_TX_AGGR_ENABLE_CMDID
:

72 
WMI_TGT_DETACH_CMDID
:

74 
WMI_NODE_UPDATE_CMDID
:

76 
WMI_INT_STATS_CMDID
:

78 
WMI_TX_STATS_CMDID
:

80 
WMI_RX_STATS_CMDID
:

82 
WMI_BITRATE_MASK_CMDID
:

87 
	}
}

89 
wmi
 *
	$©h9k_öô_wmi
(
©h9k_htc_¥iv
 *
¥iv
)

91 
wmi
 *wmi;

93 
wmi
 = 
	`kzÆloc
((wmi), 
GFP_KERNEL
);

94 i‡(!
wmi
)

95  
NULL
;

97 
wmi
->
drv_¥iv
 = 
¥iv
;

98 
wmi
->
°›≥d
 = 
Ál£
;

99 
	`skb_queue_hód_öô
(&
wmi
->
wmi_evít_queue
);

100 
	`•ö_lock_öô
(&
wmi
->
wmi_lock
);

101 
	`•ö_lock_öô
(&
wmi
->
evít_lock
);

102 
	`muãx_öô
(&
wmi
->
›_muãx
);

103 
	`muãx_öô
(&
wmi
->
mu…i_wrôe_muãx
);

104 
	`öô_com∂ëi⁄
(&
wmi
->
cmd_waô
);

105 
	`INIT_LIST_HEAD
(&
wmi
->
≥ndög_tx_evíts
);

106 
	`èskÀt_öô
(&
wmi
->
wmi_evít_èskÀt
, 
©h9k_wmi_evít_èskÀt
,

107 ()
wmi
);

109  
wmi
;

110 
	}
}

112 
	$©h9k_deöô_wmi
(
©h9k_htc_¥iv
 *
¥iv
)

114 
wmi
 *wmò
¥iv
->wmi;

116 
	`muãx_lock
(&
wmi
->
›_muãx
);

117 
wmi
->
°›≥d
 = 
åue
;

118 
	`muãx_u∆ock
(&
wmi
->
›_muãx
);

120 
	`k‰ì
(
¥iv
->
wmi
);

121 
	}
}

123 
	$©h9k_wmi_evít_døö
(
©h9k_htc_¥iv
 *
¥iv
)

125 
Êags
;

127 
	`èskÀt_kûl
(&
¥iv
->
wmi
->
wmi_evít_èskÀt
);

128 
	`•ö_lock_úqßve
(&
¥iv
->
wmi
->
wmi_lock
, 
Êags
);

129 
	`__skb_queue_purge
(&
¥iv
->
wmi
->
wmi_evít_queue
);

130 
	`•ö_u∆ock_úqª°‹e
(&
¥iv
->
wmi
->
wmi_lock
, 
Êags
);

131 
	}
}

133 
	$©h9k_wmi_evít_èskÀt
(
d©a
)

135 
wmi
 *wmò(wmò*)
d©a
;

136 
©h9k_htc_¥iv
 *
¥iv
 = 
wmi
->
drv_¥iv
;

137 
wmi_cmd_hdr
 *
hdr
;

138 *
wmi_evít
;

139 
wmi_evít_swba
 *
swba
;

140 
sk_buff
 *
skb
 = 
NULL
;

141 
Êags
;

142 
u16
 
cmd_id
;

145 
	`•ö_lock_úqßve
(&
wmi
->
wmi_lock
, 
Êags
);

146 
skb
 = 
	`__skb_dequeue
(&
wmi
->
wmi_evít_queue
);

147 i‡(!
skb
) {

148 
	`•ö_u∆ock_úqª°‹e
(&
wmi
->
wmi_lock
, 
Êags
);

151 
	`•ö_u∆ock_úqª°‹e
(&
wmi
->
wmi_lock
, 
Êags
);

153 
hdr
 = (
wmi_cmd_hdr
 *Ë
skb
->
d©a
;

154 
cmd_id
 = 
	`be16_to_˝u
(
hdr
->
comm™d_id
);

155 
wmi_evít
 = 
	`skb_puŒ
(
skb
, (
wmi_cmd_hdr
));

157 
cmd_id
) {

158 
WMI_SWBA_EVENTID
:

159 
swba
 = (
wmi_evít_swba
 *Ë
wmi_evít
;

160 
	`©h9k_htc_swba
(
¥iv
, 
swba
);

162 
WMI_FATAL_EVENTID
:

163 
	`õì80211_queue_w‹k
(
wmi
->
drv_¥iv
->
hw
,

164 &
wmi
->
drv_¥iv
->
Áèl_w‹k
);

166 
WMI_TXSTATUS_EVENTID
:

167 
	`•ö_lock_bh
(&
¥iv
->
tx
.
tx_lock
);

168 i‡(
¥iv
->
tx
.
Êags
 & 
ATH9K_HTC_OP_TX_DRAIN
) {

169 
	`•ö_u∆ock_bh
(&
¥iv
->
tx
.
tx_lock
);

172 
	`•ö_u∆ock_bh
(&
¥iv
->
tx
.
tx_lock
);

174 
	`©h9k_htc_tx°©us
(
¥iv
, 
wmi_evít
);

180 
	`k‰ì_skb
(
skb
);

182 
	}
}

184 
	$©h9k_Áèl_w‹k
(
w‹k_°ru˘
 *
w‹k
)

186 
©h9k_htc_¥iv
 *
¥iv
 = 
	`c⁄èöî_of
(
w‹k
, ath9k_htc_priv,

187 
Áèl_w‹k
);

188 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
¥iv
->
ah
);

190 
	`©h_dbg
(
comm⁄
, 
FATAL
, "FATAL EventÑeceived,Ñesetting device\n");

191 
	`©h9k_htc_ª£t
(
¥iv
);

192 
	}
}

194 
	$©h9k_wmi_r•_ˇŒback
(
wmi
 *wmi, 
sk_buff
 *
skb
)

196 
	`skb_puŒ
(
skb
, (
wmi_cmd_hdr
));

198 i‡(
wmi
->
cmd_r•_buf
 !
NULL
 && wmi->
cmd_r•_Àn
 != 0)

199 
	`mem˝y
(
wmi
->
cmd_r•_buf
, 
skb
->
d©a
, wmi->
cmd_r•_Àn
);

201 
	`com∂ëe
(&
wmi
->
cmd_waô
);

202 
	}
}

204 
	$©h9k_wmi_˘æ_rx
(*
¥iv
, 
sk_buff
 *
skb
,

205 
htc_ídpoöt_id
 
ïid
)

207 
wmi
 *wmò(wmò*Ë
¥iv
;

208 
wmi_cmd_hdr
 *
hdr
;

209 
u16
 
cmd_id
;

211 i‡(
	`u∆ikñy
(
wmi
->
°›≥d
))

212 
‰ì_skb
;

214 
hdr
 = (
wmi_cmd_hdr
 *Ë
skb
->
d©a
;

215 
cmd_id
 = 
	`be16_to_˝u
(
hdr
->
comm™d_id
);

217 i‡(
cmd_id
 & 0x1000) {

218 
	`•ö_lock
(&
wmi
->
wmi_lock
);

219 
	`__skb_queue_èû
(&
wmi
->
wmi_evít_queue
, 
skb
);

220 
	`•ö_u∆ock
(&
wmi
->
wmi_lock
);

221 
	`èskÀt_scheduÀ
(&
wmi
->
wmi_evít_èskÀt
);

226 
	`•ö_lock
(&
wmi
->
wmi_lock
);

227 i‡(
cmd_id
 !
wmi
->
œ°_cmd_id
) {

228 
	`•ö_u∆ock
(&
wmi
->
wmi_lock
);

229 
‰ì_skb
;

231 
	`•ö_u∆ock
(&
wmi
->
wmi_lock
);

234 
	`©h9k_wmi_r•_ˇŒback
(
wmi
, 
skb
);

236 
‰ì_skb
:

237 
	`k‰ì_skb
(
skb
);

238 
	}
}

240 
	$©h9k_wmi_˘æ_tx
(*
¥iv
, 
sk_buff
 *
skb
,

241 
htc_ídpoöt_id
 
ïid
, 
boﬁ
 
txok
)

243 
	`k‰ì_skb
(
skb
);

244 
	}
}

246 
	$©h9k_wmi_c⁄√˘
(
htc_èrgë
 *
htc
, 
wmi
 *wmi,

247 
htc_ídpoöt_id
 *
wmi_˘æ_ïid
)

249 
htc_£rvi˚_c⁄ƒeq
 
c⁄√˘
;

250 
ªt
;

252 
wmi
->
htc
 = htc;

254 
	`mem£t
(&
c⁄√˘
, 0, (connect));

256 
c⁄√˘
.
ï_ˇŒbacks
.
¥iv
 = 
wmi
;

257 
c⁄√˘
.
ï_ˇŒbacks
.
tx
 = 
©h9k_wmi_˘æ_tx
;

258 
c⁄√˘
.
ï_ˇŒbacks
.
rx
 = 
©h9k_wmi_˘æ_rx
;

259 
c⁄√˘
.
£rvi˚_id
 = 
WMI_CONTROL_SVC
;

261 
ªt
 = 
	`htc_c⁄√˘_£rvi˚
(
htc
, &
c⁄√˘
, &
wmi
->
˘æ_ïid
);

262 i‡(
ªt
)

263  
ªt
;

265 *
wmi_˘æ_ïid
 = 
wmi
->
˘æ_ïid
;

268 
	}
}

270 
	$©h9k_wmi_cmd_issue
(
wmi
 *wmi,

271 
sk_buff
 *
skb
,

272 
wmi_cmd_id
 
cmd
, 
u16
 
Àn
)

274 
wmi_cmd_hdr
 *
hdr
;

276 
hdr
 = (
wmi_cmd_hdr
 *Ë
	`skb_push
(
skb
, (wmi_cmd_hdr));

277 
hdr
->
comm™d_id
 = 
	`˝u_to_be16
(
cmd
);

278 
hdr
->
£q_no
 = 
	`˝u_to_be16
(++
wmi
->
tx_£q_id
);

280  
	`htc_£nd_ïid
(
wmi
->
htc
, 
skb
, wmi->
˘æ_ïid
);

281 
	}
}

283 
	$©h9k_wmi_cmd
(
wmi
 *wmi, 
wmi_cmd_id
 
cmd_id
,

284 
u8
 *
cmd_buf
, 
u32
 
cmd_Àn
,

285 
u8
 *
r•_buf
, 
u32
 
r•_Àn
,

286 
u32
 
timeout
)

288 
©h_hw
 *
ah
 = 
wmi
->
drv_¥iv
->ah;

289 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

290 
u16
 
hódroom
 = (
htc_‰ame_hdr
) +

291 (
wmi_cmd_hdr
);

292 
sk_buff
 *
skb
;

293 
u8
 *
d©a
;

294 
time_À·
, 
ªt
 = 0;

295 
Êags
;

297 i‡(
ah
->
ah_Êags
 & 
AH_UNPLUGGED
)

300 
skb
 = 
	`Æloc_skb
(
hódroom
 + 
cmd_Àn
, 
GFP_ATOMIC
);

301 i‡(!
skb
)

302  -
ENOMEM
;

304 
	`skb_ª£rve
(
skb
, 
hódroom
);

306 i‡(
cmd_Àn
 !0 && 
cmd_buf
 !
NULL
) {

307 
d©a
 = (
u8
 *Ë
	`skb_put
(
skb
, 
cmd_Àn
);

308 
	`mem˝y
(
d©a
, 
cmd_buf
, 
cmd_Àn
);

311 
	`muãx_lock
(&
wmi
->
›_muãx
);

314 i‡(
	`u∆ikñy
(
wmi
->
°›≥d
)) {

315 
ªt
 = -
EPROTO
;

316 
out
;

320 
wmi
->
cmd_r•_buf
 = 
r•_buf
;

321 
wmi
->
cmd_r•_Àn
 = 
r•_Àn
;

323 
	`•ö_lock_úqßve
(&
wmi
->
wmi_lock
, 
Êags
);

324 
wmi
->
œ°_cmd_id
 = 
cmd_id
;

325 
	`•ö_u∆ock_úqª°‹e
(&
wmi
->
wmi_lock
, 
Êags
);

327 
ªt
 = 
	`©h9k_wmi_cmd_issue
(
wmi
, 
skb
, 
cmd_id
, 
cmd_Àn
);

328 i‡(
ªt
)

329 
out
;

331 
time_À·
 = 
	`waô_f‹_com∂ëi⁄_timeout
(&
wmi
->
cmd_waô
, 
timeout
);

332 i‡(!
time_À·
) {

333 
	`©h_dbg
(
comm⁄
, 
WMI
, "Timeout waiting for WMI command: %s\n",

334 
	`wmi_cmd_to_«me
(
cmd_id
));

335 
	`muãx_u∆ock
(&
wmi
->
›_muãx
);

336  -
ETIMEDOUT
;

339 
	`muãx_u∆ock
(&
wmi
->
›_muãx
);

343 
out
:

344 
	`©h_dbg
(
comm⁄
, 
WMI
, "WMI faûuª f‹: %s\n", 
	`wmi_cmd_to_«me
(
cmd_id
));

345 
	`muãx_u∆ock
(&
wmi
->
›_muãx
);

346 
	`k‰ì_skb
(
skb
);

348  
ªt
;

349 
	}
}

	@wmi.h

17 #i‚de‡
WMI_H


18 
	#WMI_H


	)

20 
	swmi_evít_txøã
 {

21 
__be32
 
	mtxøã
;

23 
u8
 
	mrssi_thªsh
;

24 
u8
 
	m≥r
;

25 } 
	mrc_°©s
;

26 } 
	g__∑cked
;

28 
	swmi_cmd_hdr
 {

29 
__be16
 
	mcomm™d_id
;

30 
__be16
 
	m£q_no
;

31 } 
	g__∑cked
;

33 
	swmi_fw_vîsi⁄
 {

34 
__be16
 
	mmaj‹
;

35 
__be16
 
	mmö‹
;

37 } 
	g__∑cked
;

39 
	swmi_evít_swba
 {

40 
__be64
 
	mtsf
;

41 
u8
 
	mbóc⁄_≥ndög
;

42 } 
	g__∑cked
;

49 
	#HTC_MAX_TX_STATUS
 12

	)

51 
	#ATH9K_HTC_TXSTAT_ACK
 
	`BIT
(0)

	)

52 
	#ATH9K_HTC_TXSTAT_FILT
 
	`BIT
(1)

	)

53 
	#ATH9K_HTC_TXSTAT_RTC_CTS
 
	`BIT
(2)

	)

54 
	#ATH9K_HTC_TXSTAT_MCS
 
	`BIT
(3)

	)

55 
	#ATH9K_HTC_TXSTAT_CW40
 
	`BIT
(4)

	)

56 
	#ATH9K_HTC_TXSTAT_SGI
 
	`BIT
(5)

	)

64 
	#ATH9K_HTC_TXSTAT_RATE
 0x0f

	)

65 
	#ATH9K_HTC_TXSTAT_RATE_S
 0

	)

67 
	#ATH9K_HTC_TXSTAT_EPID
 0xf0

	)

68 
	#ATH9K_HTC_TXSTAT_EPID_S
 4

	)

70 
	s__wmi_evít_tx°©us
 {

71 
u8
 
	mcookõ
;

72 
u8
 
	mts_øã
;

73 
u8
 
	mts_Êags
;

76 
	swmi_evít_tx°©us
 {

77 
u8
 
	m˙t
;

78 
__wmi_evít_tx°©us
 
	mtx°©us
[
HTC_MAX_TX_STATUS
];

79 } 
	g__∑cked
;

81 
	ewmi_cmd_id
 {

82 
	mWMI_ECHO_CMDID
 = 0x0001,

83 
	mWMI_ACCESS_MEMORY_CMDID
,

86 
	mWMI_GET_FW_VERSION
,

87 
	mWMI_DISABLE_INTR_CMDID
,

88 
	mWMI_ENABLE_INTR_CMDID
,

89 
	mWMI_ATH_INIT_CMDID
,

90 
	mWMI_ABORT_TXQ_CMDID
,

91 
	mWMI_STOP_TX_DMA_CMDID
,

92 
	mWMI_ABORT_TX_DMA_CMDID
,

93 
	mWMI_DRAIN_TXQ_CMDID
,

94 
	mWMI_DRAIN_TXQ_ALL_CMDID
,

95 
	mWMI_START_RECV_CMDID
,

96 
	mWMI_STOP_RECV_CMDID
,

97 
	mWMI_FLUSH_RECV_CMDID
,

98 
	mWMI_SET_MODE_CMDID
,

99 
	mWMI_NODE_CREATE_CMDID
,

100 
	mWMI_NODE_REMOVE_CMDID
,

101 
	mWMI_VAP_REMOVE_CMDID
,

102 
	mWMI_VAP_CREATE_CMDID
,

103 
	mWMI_REG_READ_CMDID
,

104 
	mWMI_REG_WRITE_CMDID
,

105 
	mWMI_RC_STATE_CHANGE_CMDID
,

106 
	mWMI_RC_RATE_UPDATE_CMDID
,

107 
	mWMI_TARGET_IC_UPDATE_CMDID
,

108 
	mWMI_TX_AGGR_ENABLE_CMDID
,

109 
	mWMI_TGT_DETACH_CMDID
,

110 
	mWMI_NODE_UPDATE_CMDID
,

111 
	mWMI_INT_STATS_CMDID
,

112 
	mWMI_TX_STATS_CMDID
,

113 
	mWMI_RX_STATS_CMDID
,

114 
	mWMI_BITRATE_MASK_CMDID
,

117 
	ewmi_evít_id
 {

118 
	mWMI_TGT_RDY_EVENTID
 = 0x1001,

119 
	mWMI_SWBA_EVENTID
,

120 
	mWMI_FATAL_EVENTID
,

121 
	mWMI_TXTO_EVENTID
,

122 
	mWMI_BMISS_EVENTID
,

123 
	mWMI_DELBA_EVENTID
,

124 
	mWMI_TXSTATUS_EVENTID
,

127 
	#MAX_CMD_NUMBER
 62

	)

129 
	sªgi°î_wrôe
 {

130 
__be32
 
	mªg
;

131 
__be32
 
	mvÆ
;

134 
	s©h9k_htc_tx_evít
 {

135 
	mcou¡
;

136 
__wmi_evít_tx°©us
 
	mtxs
;

137 
li°_hód
 
	mli°
;

140 
	swmi
 {

141 
©h9k_htc_¥iv
 *
	mdrv_¥iv
;

142 
htc_èrgë
 *
	mhtc
;

143 
htc_ídpoöt_id
 
	m˘æ_ïid
;

144 
muãx
 
	m›_muãx
;

145 
com∂ëi⁄
 
	mcmd_waô
;

146 
wmi_cmd_id
 
	mœ°_cmd_id
;

147 
sk_buff_hód
 
	mwmi_evít_queue
;

148 
èskÀt_°ru˘
 
	mwmi_evít_èskÀt
;

149 
u16
 
	mtx_£q_id
;

150 
u8
 *
	mcmd_r•_buf
;

151 
u32
 
	mcmd_r•_Àn
;

152 
boﬁ
 
	m°›≥d
;

154 
li°_hód
 
	m≥ndög_tx_evíts
;

155 
•ölock_t
 
	mevít_lock
;

157 
•ölock_t
 
	mwmi_lock
;

159 
©omic_t
 
	mmwrôe_˙t
;

160 
ªgi°î_wrôe
 
	mmu…i_wrôe
[
MAX_CMD_NUMBER
];

161 
u32
 
	mmu…i_wrôe_idx
;

162 
muãx
 
	mmu…i_wrôe_muãx
;

165 
wmi
 *
©h9k_öô_wmi
(
©h9k_htc_¥iv
 *
¥iv
);

166 
©h9k_deöô_wmi
(
©h9k_htc_¥iv
 *
¥iv
);

167 
©h9k_wmi_c⁄√˘
(
htc_èrgë
 *
htc
, 
wmi
 *wmi,

168 
htc_ídpoöt_id
 *
wmi_˘æ_ïid
);

169 
©h9k_wmi_cmd
(
wmi
 *wmi, 
wmi_cmd_id
 
cmd_id
,

170 
u8
 *
cmd_buf
, 
u32
 
cmd_Àn
,

171 
u8
 *
r•_buf
, 
u32
 
r•_Àn
,

172 
u32
 
timeout
);

173 
©h9k_wmi_evít_èskÀt
(
d©a
);

174 
©h9k_Áèl_w‹k
(
w‹k_°ru˘
 *
w‹k
);

175 
©h9k_wmi_evít_døö
(
©h9k_htc_¥iv
 *
¥iv
);

177 
	#WMI_CMD
(
_wmi_cmd
) \

179 
ªt
 = 
	`©h9k_wmi_cmd
(
¥iv
->
wmi
, 
_wmi_cmd
, 
NULL
, 0, \

180 (
u8
 *Ë&
cmd_r•
, \

181 (
cmd_r•
), 
HZ
*2); \

182 } 0)

	)

184 
	#WMI_CMD_BUF
(
_wmi_cmd
, 
_buf
) \

186 
ªt
 = 
	`©h9k_wmi_cmd
(
¥iv
->
wmi
, 
_wmi_cmd
, \

187 (
u8
 *Ë
_buf
, (*_buf), \

188 &
cmd_r•
, (cmd_r•), 
HZ
*2); \

189 } 0)

	)

	@wow.c

17 
	~"©h9k.h
"

19 c⁄° 
wùhy_wowœn_suµ‹t
 
	g©h9k_wowœn_suµ‹t
 = {

20 .
Êags
 = 
WIPHY_WOWLAN_MAGIC_PKT
 | 
WIPHY_WOWLAN_DISCONNECT
,

21 .
	gn_∑âîns
 = 
MAX_NUM_USER_PATTERN
,

22 .
	g∑âîn_mö_Àn
 = 1,

23 .
	g∑âîn_max_Àn
 = 
MAX_PATTERN_SIZE
,

26 
	$©h9k_wow_m≠_åiggîs
(
©h_so·c
 *
sc
,

27 
cfg80211_wowœn
 *
wowœn
,

28 
u32
 *
wow_åiggîs
)

30 i‡(
wowœn
->
disc⁄√˘
)

31 *
wow_åiggîs
 |
AH_WOW_LINK_CHANGE
 |

32 
AH_WOW_BEACON_MISS
;

33 i‡(
wowœn
->
magic_pkt
)

34 *
wow_åiggîs
 |
AH_WOW_MAGIC_PATTERN_EN
;

36 i‡(
wowœn
->
n_∑âîns
)

37 *
wow_åiggîs
 |
AH_WOW_USER_PATTERN_EN
;

39 
sc
->
wow_íabÀd
 = *
wow_åiggîs
;

41 
	}
}

43 
	$©h9k_wow_add_dißssoc_dóuth_∑âîn
(
©h_so·c
 *
sc
)

45 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

46 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

47 
∑âîn_cou¡
 = 0;

48 
i
, 
byã_˙t
;

49 
u8
 
dis_dóuth_∑âîn
[
MAX_PATTERN_SIZE
];

50 
u8
 
dis_dóuth_mask
[
MAX_PATTERN_SIZE
];

52 
	`mem£t
(
dis_dóuth_∑âîn
, 0, 
MAX_PATTERN_SIZE
);

53 
	`mem£t
(
dis_dóuth_mask
, 0, 
MAX_PATTERN_SIZE
);

85 
byã_˙t
 = 0;

89 
i
 = 0; i < 
MAX_PATTERN_MASK_SIZE
; i++)

90 
dis_dóuth_mask
[
i
] = 0xff;

93 
dis_dóuth_∑âîn
[
byã_˙t
] = 0xa0;

94 
byã_˙t
++;

97 
byã_˙t
 += 3;

103 
byã_˙t
 += 6;

106 
	`mem˝y
((
dis_dóuth_∑âîn
 + 
byã_˙t
), 
comm⁄
->
curbssid
, 
ETH_ALEN
);

108 
byã_˙t
 += 6;

112 
	`mem˝y
((
dis_dóuth_∑âîn
 + 
byã_˙t
), 
comm⁄
->
curbssid
, 
ETH_ALEN
);

116 
dis_dóuth_mask
[0] = 0xfe;

117 
dis_dóuth_mask
[1] = 0x03;

118 
dis_dóuth_mask
[2] = 0xc0;

120 
	`©h_dbg
(
comm⁄
, 
WOW
, "Adding disassoc/deauthÖatterns for WoW\n");

122 
	`©h9k_hw_wow_≠∂y_∑âîn
(
ah
, 
dis_dóuth_∑âîn
, 
dis_dóuth_mask
,

123 
∑âîn_cou¡
, 
byã_˙t
);

125 
∑âîn_cou¡
++;

130 
dis_dóuth_∑âîn
[0] = 0xC0;

132 
	`©h9k_hw_wow_≠∂y_∑âîn
(
ah
, 
dis_dóuth_∑âîn
, 
dis_dóuth_mask
,

133 
∑âîn_cou¡
, 
byã_˙t
);

135 
	}
}

137 
	$©h9k_wow_add_∑âîn
(
©h_so·c
 *
sc
,

138 
cfg80211_wowœn
 *
wowœn
)

140 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

141 
©h9k_wow_∑âîn
 *
wow_∑âîn
 = 
NULL
;

142 
cfg80211_pkt_∑âîn
 *
∑âîns
 = 
wowœn
->patterns;

143 
mask_Àn
;

144 
s8
 
i
 = 0;

146 i‡(!
wowœn
->
n_∑âîns
)

152 
i
 = 0; i < 
wowœn
->
n_∑âîns
; i++) {

154 
wow_∑âîn
 = 
	`kzÆloc
((*wow_∑âîn), 
GFP_KERNEL
);

156 i‡(!
wow_∑âîn
)

164 
mask_Àn
 = 
	`DIV_ROUND_UP
(
wowœn
->
∑âîns
[
i
].
∑âîn_Àn
, 8);

165 
	`mem£t
(
wow_∑âîn
->
∑âîn_byãs
, 0, 
MAX_PATTERN_SIZE
);

166 
	`mem£t
(
wow_∑âîn
->
mask_byãs
, 0, 
MAX_PATTERN_SIZE
);

167 
	`mem˝y
(
wow_∑âîn
->
∑âîn_byãs
, 
∑âîns
[
i
].
∑âîn
,

168 
∑âîns
[
i
].
∑âîn_Àn
);

169 
	`mem˝y
(
wow_∑âîn
->
mask_byãs
, 
∑âîns
[
i
].
mask
, 
mask_Àn
);

170 
wow_∑âîn
->
∑âîn_Àn
 = 
∑âîns
[
i
].pattern_len;

177 
	`©h9k_hw_wow_≠∂y_∑âîn
(
ah
, 
wow_∑âîn
->
∑âîn_byãs
,

178 
wow_∑âîn
->
mask_byãs
,

179 
i
 + 2,

180 
wow_∑âîn
->
∑âîn_Àn
);

181 
	`k‰ì
(
wow_∑âîn
);

185 
	}
}

187 
	$©h9k_su•íd
(
õì80211_hw
 *
hw
,

188 
cfg80211_wowœn
 *
wowœn
)

190 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

191 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

192 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

193 
u32
 
wow_åiggîs_íabÀd
 = 0;

194 
ªt
 = 0;

196 
	`muãx_lock
(&
sc
->
muãx
);

198 
	`©h_ˇn˚l_w‹k
(
sc
);

199 
	`©h_°›_™i
(
sc
);

201 i‡(
	`ã°_bô
(
ATH_OP_INVALID
, &
comm⁄
->
›_Êags
)) {

202 
	`©h_dbg
(
comm⁄
, 
ANY
, "DeviceÇotÖresent\n");

203 
ªt
 = -
EINVAL
;

204 
Áû_wow
;

207 i‡(
	`WARN_ON
(!
wowœn
)) {

208 
	`©h_dbg
(
comm⁄
, 
WOW
, "None ofÅhe WoWÅriggersÉnabled\n");

209 
ªt
 = -
EINVAL
;

210 
Áû_wow
;

213 i‡(!
	`devi˚_ˇn_wakeup
(
sc
->
dev
)) {

214 
	`©h_dbg
(
comm⁄
, 
WOW
, "device_can_wakeup failed, WoW isÇotÉnabled\n");

215 
ªt
 = 1;

216 
Áû_wow
;

227 i‡(!
	`ã°_bô
(
ATH_OP_PRIM_STA_VIF
, &
comm⁄
->
›_Êags
)) {

228 
	`©h_dbg
(
comm⁄
, 
WOW
, "None ofÅhe STA vifsáreássociated\n");

229 
ªt
 = 1;

230 
Áû_wow
;

233 i‡(
sc
->
nvifs
 > 1) {

234 
	`©h_dbg
(
comm⁄
, 
WOW
, "WoW for multivif isÇot yet supported\n");

235 
ªt
 = 1;

236 
Áû_wow
;

239 
	`©h9k_wow_m≠_åiggîs
(
sc
, 
wowœn
, &
wow_åiggîs_íabÀd
);

241 
	`©h_dbg
(
comm⁄
, 
WOW
, "WoWÅriggersÉnabled 0x%x\n",

242 
wow_åiggîs_íabÀd
);

244 
	`©h9k_ps_wakeup
(
sc
);

246 
	`©h9k_°›_btc€x
(
sc
);

252 
	`©h9k_wow_add_dißssoc_dóuth_∑âîn
(
sc
);

254 i‡(
wow_åiggîs_íabÀd
 & 
AH_WOW_USER_PATTERN_EN
)

255 
	`©h9k_wow_add_∑âîn
(
sc
, 
wowœn
);

257 
	`•ö_lock_bh
(&
sc
->
sc_pcu_lock
);

263 
sc
->
wow_öå_bef‹e_¶ìp
 = 
ah
->
imask
;

264 
ah
->
imask
 &~
ATH9K_INT_GLOBAL
;

265 
	`©h9k_hw_dißbÀ_öãºu±s
(
ah
);

266 
ah
->
imask
 = 
ATH9K_INT_BMISS
 | 
ATH9K_INT_GLOBAL
;

267 
	`©h9k_hw_£t_öãºu±s
(
ah
);

268 
	`©h9k_hw_íabÀ_öãºu±s
(
ah
);

270 
	`•ö_u∆ock_bh
(&
sc
->
sc_pcu_lock
);

276 
	`synchr⁄ize_úq
(
sc
->
úq
);

277 
	`èskÀt_kûl
(&
sc
->
öå_tq
);

279 
	`©h9k_hw_wow_íabÀ
(
ah
, 
wow_åiggîs_íabÀd
);

281 
	`©h9k_ps_ª°‹e
(
sc
);

282 
	`©h_dbg
(
comm⁄
, 
ANY
, "WoWÉnabled ináth9k\n");

283 
	`©omic_öc
(&
sc
->
wow_¶ìp_¥oc_öå
);

285 
Áû_wow
:

286 
	`muãx_u∆ock
(&
sc
->
muãx
);

287  
ªt
;

288 
	}
}

290 
	$©h9k_ªsume
(
õì80211_hw
 *
hw
)

292 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

293 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

294 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

295 
u32
 
wow_°©us
;

297 
	`muãx_lock
(&
sc
->
muãx
);

299 
	`©h9k_ps_wakeup
(
sc
);

301 
	`•ö_lock_bh
(&
sc
->
sc_pcu_lock
);

303 
	`©h9k_hw_dißbÀ_öãºu±s
(
ah
);

304 
ah
->
imask
 = 
sc
->
wow_öå_bef‹e_¶ìp
;

305 
	`©h9k_hw_£t_öãºu±s
(
ah
);

306 
	`©h9k_hw_íabÀ_öãºu±s
(
ah
);

308 
	`•ö_u∆ock_bh
(&
sc
->
sc_pcu_lock
);

310 
wow_°©us
 = 
	`©h9k_hw_wow_wakeup
(
ah
);

312 i‡(
	`©omic_ªad
(&
sc
->
wow_gŸ_bmiss_öå
) == 0) {

318 
wow_°©us
 |
AH_WOW_BEACON_MISS
;

319 
	`©omic_dec
(&
sc
->
wow_gŸ_bmiss_öå
);

320 
	`©h_dbg
(
comm⁄
, 
ANY
, "Beacon miss interruptÖicked up during WoW sleep\n");

323 
	`©omic_dec
(&
sc
->
wow_¶ìp_¥oc_öå
);

325 i‡(
wow_°©us
) {

326 
	`©h_dbg
(
comm⁄
, 
ANY
, "Waking up dueÅo WoWÅriggers %s with WoW status = %x\n",

327 
	`©h9k_hw_wow_evít_to_°rög
(
wow_°©us
), wow_status);

330 
	`©h_ª°¨t_w‹k
(
sc
);

331 
	`©h9k_°¨t_btc€x
(
sc
);

333 
	`©h9k_ps_ª°‹e
(
sc
);

334 
	`muãx_u∆ock
(&
sc
->
muãx
);

337 
	}
}

339 
	$©h9k_£t_wakeup
(
õì80211_hw
 *
hw
, 
boﬁ
 
íabÀd
)

341 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

343 
	`muãx_lock
(&
sc
->
muãx
);

344 
	`devi˚_öô_wakeup
(
sc
->
dev
, 1);

345 
	`devi˚_£t_wakeup_íabÀ
(
sc
->
dev
, 
íabÀd
);

346 
	`muãx_u∆ock
(&
sc
->
muãx
);

347 
	}
}

349 
	$©h9k_öô_wow
(
õì80211_hw
 *
hw
)

351 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

353 i‡((
sc
->
sc_ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_WOW_DEVICE_CAPABLE
) &&

354 (
sc
->
drivî_d©a
 & 
ATH9K_PCI_WOW
) &&

355 
	`devi˚_ˇn_wakeup
(
sc
->
dev
))

356 
hw
->
wùhy
->
wowœn
 = &
©h9k_wowœn_suµ‹t
;

358 
	`©omic_£t
(&
sc
->
wow_¶ìp_¥oc_öå
, -1);

359 
	`©omic_£t
(&
sc
->
wow_gŸ_bmiss_öå
, -1);

360 
	}
}

	@xmit.c

17 
	~<löux/dma-m≠pög.h
>

18 
	~"©h9k.h
"

19 
	~"¨9003_mac.h
"

21 
	#BITS_PER_BYTE
 8

	)

22 
	#OFDM_PLCP_BITS
 22

	)

23 
	#HT_RC_2_STREAMS
(
_rc
Ë((((_rcË& 0x78Ë>> 3Ë+ 1)

	)

24 
	#L_STF
 8

	)

25 
	#L_LTF
 8

	)

26 
	#L_SIG
 4

	)

27 
	#HT_SIG
 8

	)

28 
	#HT_STF
 4

	)

29 
	#HT_LTF
(
_ns
Ë(4 * (_ns))

	)

30 
	#SYMBOL_TIME
(
_ns
Ë((_nsË<< 2Ë

	)

31 
	#SYMBOL_TIME_HALFGI
(
_ns
Ë(((_nsË* 18 + 4Ë/ 5Ë

	)

32 
	#TIME_SYMBOLS
(
t
Ë(—Ë>> 2)

	)

33 
	#TIME_SYMBOLS_HALFGI
(
t
Ë((—Ë* 5 - 4Ë/ 18)

	)

34 
	#NUM_SYMBOLS_PER_USEC
(
_u£c
Ë(_u£¯>> 2)

	)

35 
	#NUM_SYMBOLS_PER_USEC_HALFGI
(
_u£c
Ë(((_u£c*5)-4)/18)

	)

38 
u16
 
	gbôs_≥r_symbﬁ
[][2] = {

50 
©h_tx_£nd_n‹mÆ
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
,

51 
©h_©x_tid
 *
tid
, 
sk_buff
 *
skb
);

52 
©h_tx_com∂ëe
(
©h_so·c
 *
sc
, 
sk_buff
 *
skb
,

53 
tx_Êags
, 
©h_txq
 *
txq
);

54 
©h_tx_com∂ëe_buf
(
©h_so·c
 *
sc
, 
©h_buf
 *
bf
,

55 
©h_txq
 *
txq
, 
li°_hód
 *
bf_q
,

56 
©h_tx_°©us
 *
ts
, 
txok
);

57 
©h_tx_txqaddbuf
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
,

58 
li°_hód
 *
hód
, 
boﬁ
 
öã∫Æ
);

59 
©h_tx_rc_°©us
(
©h_so·c
 *
sc
, 
©h_buf
 *
bf
,

60 
©h_tx_°©us
 *
ts
, 
n‰ames
, 
nbad
,

61 
txok
);

62 
©h_tx_upd©e_baw
(
©h_so·c
 *
sc
, 
©h_©x_tid
 *
tid
,

63 
£qno
);

64 
©h_buf
 *
©h_tx_£tup_buf„r
(
©h_so·c
 *
sc
,

65 
©h_txq
 *
txq
,

66 
©h_©x_tid
 *
tid
,

67 
sk_buff
 *
skb
);

70 
	mMCS_HT20
,

71 
	mMCS_HT20_SGI
,

72 
	mMCS_HT40
,

73 
	mMCS_HT40_SGI
,

80 
	$©h_txq_lock
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
)

81 
	`__acquúes
(&
txq
->
axq_lock
)

83 
	`•ö_lock_bh
(&
txq
->
axq_lock
);

84 
	}
}

86 
	$©h_txq_u∆ock
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
)

87 
	`__ªÀa£s
(&
txq
->
axq_lock
)

89 
	`•ö_u∆ock_bh
(&
txq
->
axq_lock
);

90 
	}
}

92 
	$©h_txq_u∆ock_com∂ëe
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
)

93 
	`__ªÀa£s
(&
txq
->
axq_lock
)

95 
sk_buff_hód
 
q
;

96 
sk_buff
 *
skb
;

98 
	`__skb_queue_hód_öô
(&
q
);

99 
	`skb_queue_•li˚_öô
(&
txq
->
com∂ëe_q
, &
q
);

100 
	`•ö_u∆ock_bh
(&
txq
->
axq_lock
);

102 (
skb
 = 
	`__skb_dequeue
(&
q
)))

103 
	`õì80211_tx_°©us
(
sc
->
hw
, 
skb
);

104 
	}
}

106 
	$©h_tx_queue_tid
(
©h_txq
 *
txq
, 
©h_©x_tid
 *
tid
)

108 
©h_©x_ac
 *
ac
 = 
tid
->ac;

110 i‡(
tid
->
sched
)

113 
tid
->
sched
 = 
åue
;

114 
	`li°_add_èû
(&
tid
->
li°
, &
ac
->
tid_q
);

116 i‡(
ac
->
sched
)

119 
ac
->
sched
 = 
åue
;

120 
	`li°_add_èû
(&
ac
->
li°
, &
txq
->
axq_acq
);

121 
	}
}

123 
©h_‰ame_öfo
 *
	$gë_‰ame_öfo
(
sk_buff
 *
skb
)

125 
õì80211_tx_öfo
 *
tx_öfo
 = 
	`IEEE80211_SKB_CB
(
skb
);

126 
	`BUILD_BUG_ON
((
©h_‰ame_öfo
) >

127 (
tx_öfo
->
øã_drivî_d©a
));

128  (
©h_‰ame_öfo
 *Ë&
tx_öfo
->
øã_drivî_d©a
[0];

129 
	}
}

131 
	$©h_£nd_b¨
(
©h_©x_tid
 *
tid
, 
u16
 
£qno
)

133 i‡(!
tid
->
™
->
°a
)

136 
	`õì80211_£nd_b¨
(
tid
->
™
->
vif
,Åid->™->
°a
->
addr
,Åid->
tidno
,

137 
£qno
 << 
IEEE80211_SEQ_SEQ_SHIFT
);

138 
	}
}

140 
	$©h_£t_øãs
(
õì80211_vif
 *
vif
, 
õì80211_°a
 *
°a
,

141 
©h_buf
 *
bf
)

143 
	`õì80211_gë_tx_øãs
(
vif
, 
°a
, 
bf
->
bf_mpdu
, bf->
øãs
,

144 
	`ARRAY_SIZE
(
bf
->
øãs
));

145 
	}
}

147 
	$©h_txq_skb_d⁄e
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
,

148 
sk_buff
 *
skb
)

150 
©h_‰ame_öfo
 *
fi
 = 
	`gë_‰ame_öfo
(
skb
);

151 
q
 = 
fi
->
txq
;

153 i‡(
q
 < 0)

156 
txq
 = 
sc
->
tx
.
txq_m≠
[
q
];

157 i‡(
	`WARN_ON
(--
txq
->
≥ndög_‰ames
 < 0))

158 
txq
->
≥ndög_‰ames
 = 0;

160 i‡(
txq
->
°›≥d
 &&

161 
txq
->
≥ndög_‰ames
 < 
sc
->
tx
.
txq_max_≥ndög
[
q
]) {

162 
	`õì80211_wake_queue
(
sc
->
hw
, 
q
);

163 
txq
->
°›≥d
 = 
Ál£
;

165 
	}
}

167 
©h_©x_tid
 *

168 
	$©h_gë_skb_tid
(
©h_so·c
 *
sc
, 
©h_node
 *
™
, 
sk_buff
 *
skb
)

170 
u8
 
tidno
 = 
skb
->
¥i‹ôy
 & 
IEEE80211_QOS_CTL_TID_MASK
;

171  
	`ATH_AN_2_TID
(
™
, 
tidno
);

172 
	}
}

174 
boﬁ
 
	$©h_tid_has_buf„ªd
(
©h_©x_tid
 *
tid
)

176  !
	`skb_queue_em±y
(&
tid
->
buf_q
Ë|| !skb_queue_em±y(&tid->
ªåy_q
);

177 
	}
}

179 
sk_buff
 *
	$©h_tid_dequeue
(
©h_©x_tid
 *
tid
)

181 
sk_buff
 *
skb
;

183 
skb
 = 
	`__skb_dequeue
(&
tid
->
ªåy_q
);

184 i‡(!
skb
)

185 
skb
 = 
	`__skb_dequeue
(&
tid
->
buf_q
);

187  
skb
;

188 
	}
}

196 
	$©h_tx_tid_ch™ge_°©e
(
©h_so·c
 *
sc
, 
©h_©x_tid
 *
tid
)

198 
©h_txq
 *
txq
 = 
tid
->
ac
->txq;

199 
õì80211_tx_öfo
 *
tx_öfo
;

200 
sk_buff
 *
skb
, *
tskb
;

201 
©h_buf
 *
bf
;

202 
©h_‰ame_öfo
 *
fi
;

204 
	`skb_queue_wÆk_ß„
(&
tid
->
buf_q
, 
skb
, 
tskb
) {

205 
fi
 = 
	`gë_‰ame_öfo
(
skb
);

206 
bf
 = 
fi
->bf;

208 
tx_öfo
 = 
	`IEEE80211_SKB_CB
(
skb
);

209 
tx_öfo
->
Êags
 &~
IEEE80211_TX_CTL_AMPDU
;

211 i‡(
bf
)

214 
bf
 = 
	`©h_tx_£tup_buf„r
(
sc
, 
txq
, 
tid
, 
skb
);

215 i‡(!
bf
) {

216 
	`__skb_u∆ök
(
skb
, &
tid
->
buf_q
);

217 
	`©h_txq_skb_d⁄e
(
sc
, 
txq
, 
skb
);

218 
	`õì80211_‰ì_txskb
(
sc
->
hw
, 
skb
);

223 
	}
}

225 
	$©h_tx_Êush_tid
(
©h_so·c
 *
sc
, 
©h_©x_tid
 *
tid
)

227 
©h_txq
 *
txq
 = 
tid
->
ac
->txq;

228 
sk_buff
 *
skb
;

229 
©h_buf
 *
bf
;

230 
li°_hód
 
bf_hód
;

231 
©h_tx_°©us
 
ts
;

232 
©h_‰ame_öfo
 *
fi
;

233 
boﬁ
 
£ndb¨
 = 
Ál£
;

235 
	`INIT_LIST_HEAD
(&
bf_hód
);

237 
	`mem£t
(&
ts
, 0, (ts));

239 (
skb
 = 
	`__skb_dequeue
(&
tid
->
ªåy_q
))) {

240 
fi
 = 
	`gë_‰ame_öfo
(
skb
);

241 
bf
 = 
fi
->bf;

242 i‡(!
bf
) {

243 
	`©h_txq_skb_d⁄e
(
sc
, 
txq
, 
skb
);

244 
	`õì80211_‰ì_txskb
(
sc
->
hw
, 
skb
);

248 i‡(
fi
->
baw_åacked
) {

249 
	`©h_tx_upd©e_baw
(
sc
, 
tid
, 
bf
->
bf_°©e
.
£qno
);

250 
£ndb¨
 = 
åue
;

253 
	`li°_add_èû
(&
bf
->
li°
, &
bf_hód
);

254 
	`©h_tx_com∂ëe_buf
(
sc
, 
bf
, 
txq
, &
bf_hód
, &
ts
, 0);

257 i‡(
£ndb¨
) {

258 
	`©h_txq_u∆ock
(
sc
, 
txq
);

259 
	`©h_£nd_b¨
(
tid
,Åid->
£q_°¨t
);

260 
	`©h_txq_lock
(
sc
, 
txq
);

262 
	}
}

264 
	$©h_tx_upd©e_baw
(
©h_so·c
 *
sc
, 
©h_©x_tid
 *
tid
,

265 
£qno
)

267 
ödex
, 
cödex
;

269 
ödex
 = 
	`ATH_BA_INDEX
(
tid
->
£q_°¨t
, 
£qno
);

270 
cödex
 = (
tid
->
baw_hód
 + 
ödex
Ë& (
ATH_TID_MAX_BUFS
 - 1);

272 
	`__˛ór_bô
(
cödex
, 
tid
->
tx_buf
);

274 
tid
->
baw_hód
 !tid->
baw_èû
 && !
	`ã°_bô
—id->baw_hód,Åid->
tx_buf
)) {

275 
	`INCR
(
tid
->
£q_°¨t
, 
IEEE80211_SEQ_MAX
);

276 
	`INCR
(
tid
->
baw_hód
, 
ATH_TID_MAX_BUFS
);

277 i‡(
tid
->
b¨_ödex
 >= 0)

278 
tid
->
b¨_ödex
--;

280 
	}
}

282 
	$©h_tx_addto_baw
(
©h_so·c
 *
sc
, 
©h_©x_tid
 *
tid
,

283 
©h_buf
 *
bf
)

285 
©h_‰ame_öfo
 *
fi
 = 
	`gë_‰ame_öfo
(
bf
->
bf_mpdu
);

286 
u16
 
£qno
 = 
bf
->
bf_°©e
.seqno;

287 
ödex
, 
cödex
;

289 
ödex
 = 
	`ATH_BA_INDEX
(
tid
->
£q_°¨t
, 
£qno
);

290 
cödex
 = (
tid
->
baw_hód
 + 
ödex
Ë& (
ATH_TID_MAX_BUFS
 - 1);

291 
	`__£t_bô
(
cödex
, 
tid
->
tx_buf
);

292 
fi
->
baw_åacked
 = 1;

294 i‡(
ödex
 >((
tid
->
baw_èû
 -Åid->
baw_hód
) &

295 (
ATH_TID_MAX_BUFS
 - 1))) {

296 
tid
->
baw_èû
 = 
cödex
;

297 
	`INCR
(
tid
->
baw_èû
, 
ATH_TID_MAX_BUFS
);

299 
	}
}

301 
	$©h_tid_døö
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
,

302 
©h_©x_tid
 *
tid
)

305 
sk_buff
 *
skb
;

306 
©h_buf
 *
bf
;

307 
li°_hód
 
bf_hód
;

308 
©h_tx_°©us
 
ts
;

309 
©h_‰ame_öfo
 *
fi
;

311 
	`mem£t
(&
ts
, 0, (ts));

312 
	`INIT_LIST_HEAD
(&
bf_hód
);

314 (
skb
 = 
	`©h_tid_dequeue
(
tid
))) {

315 
fi
 = 
	`gë_‰ame_öfo
(
skb
);

316 
bf
 = 
fi
->bf;

318 i‡(!
bf
) {

319 
	`©h_tx_com∂ëe
(
sc
, 
skb
, 
ATH_TX_ERROR
, 
txq
);

323 
	`li°_add_èû
(&
bf
->
li°
, &
bf_hód
);

324 
	`©h_tx_com∂ëe_buf
(
sc
, 
bf
, 
txq
, &
bf_hód
, &
ts
, 0);

326 
	}
}

328 
	$©h_tx_£t_ªåy
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
,

329 
sk_buff
 *
skb
, 
cou¡
)

331 
©h_‰ame_öfo
 *
fi
 = 
	`gë_‰ame_öfo
(
skb
);

332 
©h_buf
 *
bf
 = 
fi
->bf;

333 
õì80211_hdr
 *
hdr
;

334 
¥ev
 = 
fi
->
ªåõs
;

336 
	`TX_STAT_INC
(
txq
->
axq_qnum
, 
a_ªåõs
);

337 
fi
->
ªåõs
 +
cou¡
;

339 i‡(
¥ev
 > 0)

342 
hdr
 = (
õì80211_hdr
 *)
skb
->
d©a
;

343 
hdr
->
‰ame_c⁄åﬁ
 |
	`˝u_to_À16
(
IEEE80211_FCTL_RETRY
);

344 
	`dma_sync_sögÀ_f‹_devi˚
(
sc
->
dev
, 
bf
->
bf_buf_addr
,

345 (*
hdr
), 
DMA_TO_DEVICE
);

346 
	}
}

348 
©h_buf
 *
	$©h_tx_gë_buf„r
(
©h_so·c
 *
sc
)

350 
©h_buf
 *
bf
 = 
NULL
;

352 
	`•ö_lock_bh
(&
sc
->
tx
.
txbuÊock
);

354 i‡(
	`u∆ikñy
(
	`li°_em±y
(&
sc
->
tx
.
txbuf
))) {

355 
	`•ö_u∆ock_bh
(&
sc
->
tx
.
txbuÊock
);

356  
NULL
;

359 
bf
 = 
	`li°_fú°_íåy
(&
sc
->
tx
.
txbuf
, 
©h_buf
, 
li°
);

360 
	`li°_dñ
(&
bf
->
li°
);

362 
	`•ö_u∆ock_bh
(&
sc
->
tx
.
txbuÊock
);

364  
bf
;

365 
	}
}

367 
	$©h_tx_ªtu∫_buf„r
(
©h_so·c
 *
sc
, 
©h_buf
 *
bf
)

369 
	`•ö_lock_bh
(&
sc
->
tx
.
txbuÊock
);

370 
	`li°_add_èû
(&
bf
->
li°
, &
sc
->
tx
.
txbuf
);

371 
	`•ö_u∆ock_bh
(&
sc
->
tx
.
txbuÊock
);

372 
	}
}

374 
©h_buf
* 
	$©h_˛⁄e_txbuf
(
©h_so·c
 *
sc
, 
©h_buf
 *
bf
)

376 
©h_buf
 *
tbf
;

378 
tbf
 = 
	`©h_tx_gë_buf„r
(
sc
);

379 i‡(
	`WARN_ON
(!
tbf
))

380  
NULL
;

382 
	`ATH_TXBUF_RESET
(
tbf
);

384 
tbf
->
bf_mpdu
 = 
bf
->bf_mpdu;

385 
tbf
->
bf_buf_addr
 = 
bf
->bf_buf_addr;

386 
	`mem˝y
(
tbf
->
bf_desc
, 
bf
->bf_desc, 
sc
->
sc_ah
->
ˇps
.
tx_desc_Àn
);

387 
tbf
->
bf_°©e
 = 
bf
->bf_state;

388 
tbf
->
bf_°©e
.
°Æe
 = 
Ál£
;

390  
tbf
;

391 
	}
}

393 
	$©h_tx_cou¡_‰ames
(
©h_so·c
 *
sc
, 
©h_buf
 *
bf
,

394 
©h_tx_°©us
 *
ts
, 
txok
,

395 *
n‰ames
, *
nbad
)

397 
©h_‰ame_öfo
 *
fi
;

398 
u16
 
£q_°
 = 0;

399 
u32
 
ba
[
WME_BA_BMP_SIZE
 >> 5];

400 
ba_ödex
;

401 
ißggr
 = 0;

403 *
nbad
 = 0;

404 *
n‰ames
 = 0;

406 
ißggr
 = 
	`bf_ißggr
(
bf
);

407 i‡(
ißggr
) {

408 
£q_°
 = 
ts
->
ts_£qnum
;

409 
	`mem˝y
(
ba
, &
ts
->
ba_low
, 
WME_BA_BMP_SIZE
 >> 3);

412 
bf
) {

413 
fi
 = 
	`gë_‰ame_öfo
(
bf
->
bf_mpdu
);

414 
ba_ödex
 = 
	`ATH_BA_INDEX
(
£q_°
, 
bf
->
bf_°©e
.
£qno
);

416 (*
n‰ames
)++;

417 i‡(!
txok
 || (
ißggr
 && !
	`ATH_BA_ISSET
(
ba
, 
ba_ödex
)))

418 (*
nbad
)++;

420 
bf
 = bf->
bf_√xt
;

422 
	}
}

425 
	$©h_tx_com∂ëe_aggr
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
,

426 
©h_buf
 *
bf
, 
li°_hód
 *
bf_q
,

427 
©h_tx_°©us
 *
ts
, 
txok
)

429 
©h_node
 *
™
 = 
NULL
;

430 
sk_buff
 *
skb
;

431 
õì80211_°a
 *
°a
;

432 
õì80211_hw
 *
hw
 = 
sc
->hw;

433 
õì80211_hdr
 *
hdr
;

434 
õì80211_tx_öfo
 *
tx_öfo
;

435 
©h_©x_tid
 *
tid
 = 
NULL
;

436 
©h_buf
 *
bf_√xt
, *
bf_œ°
 = 
bf
->
bf_œ°bf
;

437 
li°_hód
 
bf_hód
;

438 
sk_buff_hód
 
bf_≥ndög
;

439 
u16
 
£q_°
 = 0, 
acked_˙t
 = 0, 
txÁû_˙t
 = 0, 
£q_fú°
;

440 
u32
 
ba
[
WME_BA_BMP_SIZE
 >> 5];

441 
ißggr
, 
txÁû
, 
tx≥ndög
, 
£ndb¨
 = 0, 
√edª£t
 = 0, 
nbad
 = 0;

442 
boﬁ
 
rc_upd©e
 = 
åue
, 
isba
;

443 
õì80211_tx_øã
 
øãs
[4];

444 
©h_‰ame_öfo
 *
fi
;

445 
n‰ames
;

446 
boﬁ
 
Êush
 = !!(
ts
->
ts_°©us
 & 
ATH9K_TX_FLUSH
);

447 
i
, 
ªåõs
;

448 
b¨_ödex
 = -1;

450 
skb
 = 
bf
->
bf_mpdu
;

451 
hdr
 = (
õì80211_hdr
 *)
skb
->
d©a
;

453 
tx_öfo
 = 
	`IEEE80211_SKB_CB
(
skb
);

455 
	`mem˝y
(
øãs
, 
bf
->rates, (rates));

457 
ªåõs
 = 
ts
->
ts_l⁄gªåy
 + 1;

458 
i
 = 0; i < 
ts
->
ts_øãödex
; i++)

459 
ªåõs
 +
øãs
[
i
].
cou¡
;

461 
	`rcu_ªad_lock
();

463 
°a
 = 
	`õì80211_föd_°a_by_iÁddr
(
hw
, 
hdr
->
addr1
, hdr->
addr2
);

464 i‡(!
°a
) {

465 
	`rcu_ªad_u∆ock
();

467 
	`INIT_LIST_HEAD
(&
bf_hód
);

468 
bf
) {

469 
bf_√xt
 = 
bf
->bf_next;

471 i‡(!
bf
->
bf_°©e
.
°Æe
 || 
bf_√xt
 !
NULL
)

472 
	`li°_move_èû
(&
bf
->
li°
, &
bf_hód
);

474 
	`©h_tx_com∂ëe_buf
(
sc
, 
bf
, 
txq
, &
bf_hód
, 
ts
, 0);

476 
bf
 = 
bf_√xt
;

481 
™
 = (
©h_node
 *)
°a
->
drv_¥iv
;

482 
tid
 = 
	`©h_gë_skb_tid
(
sc
, 
™
, 
skb
);

483 
£q_fú°
 = 
tid
->
£q_°¨t
;

484 
isba
 = 
ts
->
ts_Êags
 & 
ATH9K_TX_BA
;

494 i‡(
isba
 && 
tid
->
tidno
 !
ts
->tid)

495 
txok
 = 
Ál£
;

497 
ißggr
 = 
	`bf_ißggr
(
bf
);

498 
	`mem£t
(
ba
, 0, 
WME_BA_BMP_SIZE
 >> 3);

500 i‡(
ißggr
 && 
txok
) {

501 i‡(
ts
->
ts_Êags
 & 
ATH9K_TX_BA
) {

502 
£q_°
 = 
ts
->
ts_£qnum
;

503 
	`mem˝y
(
ba
, &
ts
->
ba_low
, 
WME_BA_BMP_SIZE
 >> 3);

512 i‡(
sc
->
sc_ah
->
›mode
 =
NL80211_IFTYPE_STATION
)

513 
√edª£t
 = 1;

517 
	`__skb_queue_hód_öô
(&
bf_≥ndög
);

519 
	`©h_tx_cou¡_‰ames
(
sc
, 
bf
, 
ts
, 
txok
, &
n‰ames
, &
nbad
);

520 
bf
) {

521 
u16
 
£qno
 = 
bf
->
bf_°©e
.seqno;

523 
txÁû
 = 
tx≥ndög
 = 
£ndb¨
 = 0;

524 
bf_√xt
 = 
bf
->bf_next;

526 
skb
 = 
bf
->
bf_mpdu
;

527 
tx_öfo
 = 
	`IEEE80211_SKB_CB
(
skb
);

528 
fi
 = 
	`gë_‰ame_öfo
(
skb
);

530 i‡(!
	`BAW_WITHIN
(
tid
->
£q_°¨t
,Åid->
baw_size
, 
£qno
) ||

531 !
tid
->
a˘ive
) {

536 
txÁû
 = 1;

537 } i‡(
	`ATH_BA_ISSET
(
ba
, 
	`ATH_BA_INDEX
(
£q_°
, 
£qno
))) {

540 
acked_˙t
++;

541 } i‡(!
ißggr
 && 
txok
) {

543 
acked_˙t
++;

544 } i‡(
Êush
) {

545 
tx≥ndög
 = 1;

546 } i‡(
fi
->
ªåõs
 < 
ATH_MAX_SW_RETRIES
) {

547 i‡(
txok
 || !
™
->
¶ìpög
)

548 
	`©h_tx_£t_ªåy
(
sc
, 
txq
, 
bf
->
bf_mpdu
,

549 
ªåõs
);

551 
tx≥ndög
 = 1;

553 
txÁû
 = 1;

554 
txÁû_˙t
++;

555 
b¨_ödex
 = 
	`max_t
(, bar_index,

556 
	`ATH_BA_INDEX
(
£q_fú°
, 
£qno
));

563 
	`INIT_LIST_HEAD
(&
bf_hód
);

564 i‡(
bf_√xt
 !
NULL
 || !
bf_œ°
->
bf_°©e
.
°Æe
)

565 
	`li°_move_èû
(&
bf
->
li°
, &
bf_hód
);

567 i‡(!
tx≥ndög
) {

572 
	`©h_tx_upd©e_baw
(
sc
, 
tid
, 
£qno
);

574 i‡(
rc_upd©e
 && (
acked_˙t
 =1 || 
txÁû_˙t
 == 1)) {

575 
	`mem˝y
(
tx_öfo
->
c⁄åﬁ
.
øãs
,Ñates, (rates));

576 
	`©h_tx_rc_°©us
(
sc
, 
bf
, 
ts
, 
n‰ames
, 
nbad
, 
txok
);

577 
rc_upd©e
 = 
Ál£
;

580 
	`©h_tx_com∂ëe_buf
(
sc
, 
bf
, 
txq
, &
bf_hód
, 
ts
,

581 !
txÁû
);

583 i‡(
tx_öfo
->
Êags
 & 
IEEE80211_TX_STATUS_EOSP
) {

584 
tx_öfo
->
Êags
 &~
IEEE80211_TX_STATUS_EOSP
;

585 
	`õì80211_°a_eo•
(
°a
);

588 i‡(
bf
->
bf_√xt
 =
NULL
 && 
bf_œ°
->
bf_°©e
.
°Æe
) {

589 
©h_buf
 *
tbf
;

591 
tbf
 = 
	`©h_˛⁄e_txbuf
(
sc
, 
bf_œ°
);

597 i‡(!
tbf
) {

598 
	`©h_tx_upd©e_baw
(
sc
, 
tid
, 
£qno
);

600 
	`©h_tx_com∂ëe_buf
(
sc
, 
bf
, 
txq
,

601 &
bf_hód
, 
ts
, 0);

602 
b¨_ödex
 = 
	`max_t
(, bar_index,

603 
	`ATH_BA_INDEX
(
£q_fú°
, 
£qno
));

607 
fi
->
bf
 = 
tbf
;

614 
	`__skb_queue_èû
(&
bf_≥ndög
, 
skb
);

617 
bf
 = 
bf_√xt
;

621 i‡(!
	`skb_queue_em±y
(&
bf_≥ndög
)) {

622 i‡(
™
->
¶ìpög
)

623 
	`õì80211_°a_£t_buf„ªd
(
°a
, 
tid
->
tidno
, 
åue
);

625 
	`skb_queue_•li˚_èû
(&
bf_≥ndög
, &
tid
->
ªåy_q
);

626 i‡(!
™
->
¶ìpög
) {

627 
	`©h_tx_queue_tid
(
txq
, 
tid
);

629 i‡(
ts
->
ts_°©us
 & (
ATH9K_TXERR_FILT
 | 
ATH9K_TXERR_XRETRY
))

630 
tid
->
ac
->
˛ór_ps_fûãr
 = 
åue
;

634 i‡(
b¨_ödex
 >= 0) {

635 
u16
 
b¨_£q
 = 
	`ATH_BA_INDEX2SEQ
(
£q_fú°
, 
b¨_ödex
);

637 i‡(
	`BAW_WITHIN
(
tid
->
£q_°¨t
,Åid->
baw_size
, 
b¨_£q
))

638 
tid
->
b¨_ödex
 = 
	`ATH_BA_INDEX
—id->
£q_°¨t
, 
b¨_£q
);

640 
	`©h_txq_u∆ock
(
sc
, 
txq
);

641 
	`©h_£nd_b¨
(
tid
, 
	`ATH_BA_INDEX2SEQ
(
£q_fú°
, 
b¨_ödex
 + 1));

642 
	`©h_txq_lock
(
sc
, 
txq
);

645 
	`rcu_ªad_u∆ock
();

647 i‡(
√edª£t
)

648 
	`©h9k_queue_ª£t
(
sc
, 
RESET_TYPE_TX_ERROR
);

649 
	}
}

651 
boﬁ
 
	$bf_is_ampdu_nŸ_¥obög
(
©h_buf
 *
bf
)

653 
õì80211_tx_öfo
 *
öfo
 = 
	`IEEE80211_SKB_CB
(
bf
->
bf_mpdu
);

654  
	`bf_ißmpdu
(
bf
Ë&& !(
öfo
->
Êags
 & 
IEEE80211_TX_CTL_RATE_CTRL_PROBE
);

655 
	}
}

657 
	$©h_tx_¥o˚ss_buf„r
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
,

658 
©h_tx_°©us
 *
ts
, 
©h_buf
 *
bf
,

659 
li°_hód
 *
bf_hód
)

661 
õì80211_tx_öfo
 *
öfo
;

662 
boﬁ
 
txok
, 
Êush
;

664 
txok
 = !(
ts
->
ts_°©us
 & 
ATH9K_TXERR_MASK
);

665 
Êush
 = !!(
ts
->
ts_°©us
 & 
ATH9K_TX_FLUSH
);

666 
txq
->
axq_tx_ö¥ogªss
 = 
Ál£
;

668 
txq
->
axq_dïth
--;

669 i‡(
	`bf_is_ampdu_nŸ_¥obög
(
bf
))

670 
txq
->
axq_ampdu_dïth
--;

672 i‡(!
	`bf_ißmpdu
(
bf
)) {

673 i‡(!
Êush
) {

674 
öfo
 = 
	`IEEE80211_SKB_CB
(
bf
->
bf_mpdu
);

675 
	`mem˝y
(
öfo
->
c⁄åﬁ
.
øãs
, 
bf
->rates,

676 (
öfo
->
c⁄åﬁ
.
øãs
));

677 
	`©h_tx_rc_°©us
(
sc
, 
bf
, 
ts
, 1, 
txok
 ? 0 : 1,Åxok);

679 
	`©h_tx_com∂ëe_buf
(
sc
, 
bf
, 
txq
, 
bf_hód
, 
ts
, 
txok
);

681 
	`©h_tx_com∂ëe_aggr
(
sc
, 
txq
, 
bf
, 
bf_hód
, 
ts
, 
txok
);

683 i‡(!
Êush
)

684 
	`©h_txq_scheduÀ
(
sc
, 
txq
);

685 
	}
}

687 
boﬁ
 
	$©h_lookup_Àgacy
(
©h_buf
 *
bf
)

689 
sk_buff
 *
skb
;

690 
õì80211_tx_öfo
 *
tx_öfo
;

691 
õì80211_tx_øã
 *
øãs
;

692 
i
;

694 
skb
 = 
bf
->
bf_mpdu
;

695 
tx_öfo
 = 
	`IEEE80211_SKB_CB
(
skb
);

696 
øãs
 = 
tx_öfo
->
c⁄åﬁ
.rates;

698 
i
 = 0; i < 4; i++) {

699 i‡(!
øãs
[
i
].
cou¡
 ||Ñ©es[i].
idx
 < 0)

702 i‡(!(
øãs
[
i
].
Êags
 & 
IEEE80211_TX_RC_MCS
))

703  
åue
;

706  
Ál£
;

707 
	}
}

709 
u32
 
	$©h_lookup_øã
(
©h_so·c
 *
sc
, 
©h_buf
 *
bf
,

710 
©h_©x_tid
 *
tid
)

712 
sk_buff
 *
skb
;

713 
õì80211_tx_öfo
 *
tx_öfo
;

714 
õì80211_tx_øã
 *
øãs
;

715 
u32
 
max_4ms_‰amñí
, 
‰mÀn
;

716 
u16
 
aggr_limô
, 
bt_aggr_limô
, 
Àgacy
 = 0;

717 
q
 = 
tid
->
ac
->
txq
->
mac80211_qnum
;

718 
i
;

720 
skb
 = 
bf
->
bf_mpdu
;

721 
tx_öfo
 = 
	`IEEE80211_SKB_CB
(
skb
);

722 
øãs
 = 
bf
->rates;

728 
max_4ms_‰amñí
 = 
ATH_AMPDU_LIMIT_MAX
;

730 
i
 = 0; i < 4; i++) {

731 
modeidx
;

733 i‡(!
øãs
[
i
].
cou¡
)

736 i‡(!(
øãs
[
i
].
Êags
 & 
IEEE80211_TX_RC_MCS
)) {

737 
Àgacy
 = 1;

741 i‡(
øãs
[
i
].
Êags
 & 
IEEE80211_TX_RC_40_MHZ_WIDTH
)

742 
modeidx
 = 
MCS_HT40
;

744 
modeidx
 = 
MCS_HT20
;

746 i‡(
øãs
[
i
].
Êags
 & 
IEEE80211_TX_RC_SHORT_GI
)

747 
modeidx
++;

749 
‰mÀn
 = 
sc
->
tx
.
max_aggr_‰amñí
[
q
][
modeidx
][
øãs
[
i
].
idx
];

750 
max_4ms_‰amñí
 = 
	`mö
(max_4ms_‰amñí, 
‰mÀn
);

758 i‡(
tx_öfo
->
Êags
 & 
IEEE80211_TX_CTL_RATE_CTRL_PROBE
 || 
Àgacy
)

761 
aggr_limô
 = 
	`mö
(
max_4ms_‰amñí
, (
u32
)
ATH_AMPDU_LIMIT_MAX
);

766 
bt_aggr_limô
 = 
	`©h9k_btc€x_aggr_limô
(
sc
, 
max_4ms_‰amñí
);

767 i‡(
bt_aggr_limô
)

768 
aggr_limô
 = 
bt_aggr_limô
;

770 i‡(
tid
->
™
->
maxampdu
)

771 
aggr_limô
 = 
	`mö
◊ggr_limô, 
tid
->
™
->
maxampdu
);

773  
aggr_limô
;

774 
	}
}

780 
	$©h_compuã_num_dñims
(
©h_so·c
 *
sc
, 
©h_©x_tid
 *
tid
,

781 
©h_buf
 *
bf
, 
u16
 
‰mÀn
,

782 
boﬁ
 
fú°_sub‰m
)

784 
	#FIRST_DESC_NDELIMS
 60

	)

785 
u32
 
nsymbôs
, 
nsymbﬁs
;

786 
u16
 
möÀn
;

787 
u8
 
Êags
, 
rix
;

788 
width
, 
°ªams
, 
hÆf_gi
, 
ndñim
, 
mödñim
;

789 
©h_‰ame_öfo
 *
fi
 = 
	`gë_‰ame_öfo
(
bf
->
bf_mpdu
);

792 
ndñim
 = 
	`ATH_AGGR_GET_NDELIM
(
‰mÀn
);

800 i‡((
fi
->
keyix
 !
ATH9K_TXKEYIX_INVALID
) &&

801 !(
sc
->
sc_ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_EDMA
))

802 
ndñim
 +
ATH_AGGR_ENCRYPTDELIM
;

808 i‡(
fú°_sub‰m
 && !
	`AR_SREV_9580_10_OR_LATER
(
sc
->
sc_ah
) &&

809 (
sc
->
sc_ah
->
ít_mode
 & 
AR_ENT_OTP_MIN_PKT_SIZE_DISABLE
))

810 
ndñim
 = 
	`max
“dñim, 
FIRST_DESC_NDELIMS
);

822 i‡(
tid
->
™
->
mpdudísôy
 == 0)

823  
ndñim
;

825 
rix
 = 
bf
->
øãs
[0].
idx
;

826 
Êags
 = 
bf
->
øãs
[0].flags;

827 
width
 = (
Êags
 & 
IEEE80211_TX_RC_40_MHZ_WIDTH
) ? 1 : 0;

828 
hÆf_gi
 = (
Êags
 & 
IEEE80211_TX_RC_SHORT_GI
) ? 1 : 0;

830 i‡(
hÆf_gi
)

831 
nsymbﬁs
 = 
	`NUM_SYMBOLS_PER_USEC_HALFGI
(
tid
->
™
->
mpdudísôy
);

833 
nsymbﬁs
 = 
	`NUM_SYMBOLS_PER_USEC
(
tid
->
™
->
mpdudísôy
);

835 i‡(
nsymbﬁs
 == 0)

836 
nsymbﬁs
 = 1;

838 
°ªams
 = 
	`HT_RC_2_STREAMS
(
rix
);

839 
nsymbôs
 = 
bôs_≥r_symbﬁ
[
rix
 % 8][
width
] * 
°ªams
;

840 
möÀn
 = (
nsymbﬁs
 * 
nsymbôs
Ë/ 
BITS_PER_BYTE
;

842 i‡(
‰mÀn
 < 
möÀn
) {

843 
mödñim
 = (
möÀn
 - 
‰mÀn
Ë/ 
ATH_AGGR_DELIM_SZ
;

844 
ndñim
 = 
	`max
(
mödñim
,Çdelim);

847  
ndñim
;

848 
	}
}

850 
©h_buf
 *

851 
	$©h_tx_gë_tid_sub‰ame
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
,

852 
©h_©x_tid
 *
tid
, 
sk_buff_hód
 **
q
)

854 
õì80211_tx_öfo
 *
tx_öfo
;

855 
©h_‰ame_öfo
 *
fi
;

856 
sk_buff
 *
skb
;

857 
©h_buf
 *
bf
;

858 
u16
 
£qno
;

861 *
q
 = &
tid
->
ªåy_q
;

862 i‡(
	`skb_queue_em±y
(*
q
))

863 *
q
 = &
tid
->
buf_q
;

865 
skb
 = 
	`skb_≥ek
(*
q
);

866 i‡(!
skb
)

869 
fi
 = 
	`gë_‰ame_öfo
(
skb
);

870 
bf
 = 
fi
->bf;

871 i‡(!
fi
->
bf
)

872 
bf
 = 
	`©h_tx_£tup_buf„r
(
sc
, 
txq
, 
tid
, 
skb
);

874 
bf
->
bf_°©e
.
°Æe
 = 
Ál£
;

876 i‡(!
bf
) {

877 
	`__skb_u∆ök
(
skb
, *
q
);

878 
	`©h_txq_skb_d⁄e
(
sc
, 
txq
, 
skb
);

879 
	`õì80211_‰ì_txskb
(
sc
->
hw
, 
skb
);

883 
bf
->
bf_√xt
 = 
NULL
;

884 
bf
->
bf_œ°bf
 = bf;

886 
tx_öfo
 = 
	`IEEE80211_SKB_CB
(
skb
);

887 
tx_öfo
->
Êags
 &~
IEEE80211_TX_CTL_CLEAR_PS_FILT
;

894 i‡(!
tid
->
a˘ive
)

895 
tx_öfo
->
Êags
 &~
IEEE80211_TX_CTL_AMPDU
;

897 i‡(!(
tx_öfo
->
Êags
 & 
IEEE80211_TX_CTL_AMPDU
)) {

898 
bf
->
bf_°©e
.
bf_ty≥
 = 0;

899  
bf
;

902 
bf
->
bf_°©e
.
bf_ty≥
 = 
BUF_AMPDU
 | 
BUF_AGGR
;

903 
£qno
 = 
bf
->
bf_°©e
.seqno;

906 i‡(!
	`BAW_WITHIN
(
tid
->
£q_°¨t
,Åid->
baw_size
, 
£qno
))

909 i‡(
tid
->
b¨_ödex
 > 
	`ATH_BA_INDEX
—id->
£q_°¨t
, 
£qno
)) {

910 
©h_tx_°©us
 
ts
 = {};

911 
li°_hód
 
bf_hód
;

913 
	`INIT_LIST_HEAD
(&
bf_hód
);

914 
	`li°_add
(&
bf
->
li°
, &
bf_hód
);

915 
	`__skb_u∆ök
(
skb
, *
q
);

916 
	`©h_tx_upd©e_baw
(
sc
, 
tid
, 
£qno
);

917 
	`©h_tx_com∂ëe_buf
(
sc
, 
bf
, 
txq
, &
bf_hód
, &
ts
, 0);

921  
bf
;

924  
NULL
;

925 
	}
}

927 
boﬁ


928 
	$©h_tx_f‹m_aggr
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
,

929 
©h_©x_tid
 *
tid
, 
li°_hód
 *
bf_q
,

930 
©h_buf
 *
bf_fú°
, 
sk_buff_hód
 *
tid_q
,

931 *
aggr_Àn
)

933 
	#PADBYTES
(
_Àn
Ë((4 - ((_ÀnË% 4)Ë% 4)

	)

934 
©h_buf
 *
bf
 = 
bf_fú°
, *
bf_¥ev
 = 
NULL
;

935 
n‰ames
 = 0, 
ndñim
;

936 
u16
 
aggr_limô
 = 0, 
Æ
 = 0, 
b∑d
 = 0,

937 
Æ_dñè
, 
h_baw
 = 
tid
->
baw_size
 / 2;

938 
õì80211_tx_öfo
 *
tx_öfo
;

939 
©h_‰ame_öfo
 *
fi
;

940 
sk_buff
 *
skb
;

941 
boﬁ
 
˛o£d
 = 
Ál£
;

943 
bf
 = 
bf_fú°
;

944 
aggr_limô
 = 
	`©h_lookup_øã
(
sc
, 
bf
, 
tid
);

947 
skb
 = 
bf
->
bf_mpdu
;

948 
fi
 = 
	`gë_‰ame_öfo
(
skb
);

951 
Æ_dñè
 = 
ATH_AGGR_DELIM_SZ
 + 
fi
->
‰amñí
;

952 i‡(
n‰ames
) {

953 i‡(
aggr_limô
 < 
Æ
 + 
b∑d
 + 
Æ_dñè
 ||

954 
	`©h_lookup_Àgacy
(
bf
Ë|| 
n‰ames
 >
h_baw
)

957 
tx_öfo
 = 
	`IEEE80211_SKB_CB
(
bf
->
bf_mpdu
);

958 i‡((
tx_öfo
->
Êags
 & 
IEEE80211_TX_CTL_RATE_CTRL_PROBE
) ||

959 !(
tx_öfo
->
Êags
 & 
IEEE80211_TX_CTL_AMPDU
))

964 
Æ
 +
b∑d
 + 
Æ_dñè
;

970 
ndñim
 = 
	`©h_compuã_num_dñims
(
sc
, 
tid
, 
bf_fú°
, 
fi
->
‰amñí
,

971 !
n‰ames
);

972 
b∑d
 = 
	`PADBYTES
(
Æ_dñè
Ë+ (
ndñim
 << 2);

974 
n‰ames
++;

975 
bf
->
bf_√xt
 = 
NULL
;

978 i‡(!
fi
->
baw_åacked
)

979 
	`©h_tx_addto_baw
(
sc
, 
tid
, 
bf
);

980 
bf
->
bf_°©e
.
ndñim
 =Çdelim;

982 
	`__skb_u∆ök
(
skb
, 
tid_q
);

983 
	`li°_add_èû
(&
bf
->
li°
, 
bf_q
);

984 i‡(
bf_¥ev
)

985 
bf_¥ev
->
bf_√xt
 = 
bf
;

987 
bf_¥ev
 = 
bf
;

989 
bf
 = 
	`©h_tx_gë_tid_sub‰ame
(
sc
, 
txq
, 
tid
, &
tid_q
);

990 i‡(!
bf
) {

991 
˛o£d
 = 
åue
;

994 } 
	`©h_tid_has_buf„ªd
(
tid
));

996 
bf
 = 
bf_fú°
;

997 
bf
->
bf_œ°bf
 = 
bf_¥ev
;

999 i‡(
bf
 =
bf_¥ev
) {

1000 
Æ
 = 
	`gë_‰ame_öfo
(
bf
->
bf_mpdu
)->
‰amñí
;

1001 
bf
->
bf_°©e
.
bf_ty≥
 = 
BUF_AMPDU
;

1003 
	`TX_STAT_INC
(
txq
->
axq_qnum
, 
a_aggr
);

1006 *
aggr_Àn
 = 
Æ
;

1008  
˛o£d
;

1009 #unde‡
PADBYTES


1010 
	}
}

1018 
u32
 
	$©h_pkt_duøti⁄
(
©h_so·c
 *
sc
, 
u8
 
rix
, 
pkéí
,

1019 
width
, 
hÆf_gi
, 
boﬁ
 
sh‹tPªambÀ
)

1021 
u32
 
nbôs
, 
nsymbôs
, 
duøti⁄
, 
nsymbﬁs
;

1022 
°ªams
;

1025 
°ªams
 = 
	`HT_RC_2_STREAMS
(
rix
);

1026 
nbôs
 = (
pkéí
 << 3Ë+ 
OFDM_PLCP_BITS
;

1027 
nsymbôs
 = 
bôs_≥r_symbﬁ
[
rix
 % 8][
width
] * 
°ªams
;

1028 
nsymbﬁs
 = (
nbôs
 + 
nsymbôs
 - 1) /Çsymbits;

1030 i‡(!
hÆf_gi
)

1031 
duøti⁄
 = 
	`SYMBOL_TIME
(
nsymbﬁs
);

1033 
duøti⁄
 = 
	`SYMBOL_TIME_HALFGI
(
nsymbﬁs
);

1036 
duøti⁄
 +
L_STF
 + 
L_LTF
 + 
L_SIG
 + 
HT_SIG
 + 
HT_STF
 + 
	`HT_LTF
(
°ªams
);

1038  
duøti⁄
;

1039 
	}
}

1041 
	$©h_max_‰amñí
(
u£c
, 
mcs
, 
boﬁ
 
ht40
, boﬁ 
sgi
)

1043 
°ªams
 = 
	`HT_RC_2_STREAMS
(
mcs
);

1044 
symbﬁs
, 
bôs
;

1045 
byãs
 = 0;

1047 
u£c
 -
L_STF
 + 
L_LTF
 + 
L_SIG
 + 
HT_SIG
 + 
HT_STF
 + 
	`HT_LTF
(
°ªams
);

1048 
symbﬁs
 = 
sgi
 ? 
	`TIME_SYMBOLS_HALFGI
(
u£c
Ë: 
	`TIME_SYMBOLS
(usec);

1049 
bôs
 = 
symbﬁs
 * 
bôs_≥r_symbﬁ
[
mcs
 % 8][
ht40
] * 
°ªams
;

1050 
bôs
 -
OFDM_PLCP_BITS
;

1051 
byãs
 = 
bôs
 / 8;

1052 i‡(
byãs
 > 65532)

1053 
byãs
 = 65532;

1055  
byãs
;

1056 
	}
}

1058 
	$©h_upd©e_max_aggr_‰amñí
(
©h_so·c
 *
sc
, 
queue
, 
tx›
)

1060 
u16
 *
cur_ht20
, *
cur_ht20_sgi
, *
cur_ht40
, *
cur_ht40_sgi
;

1061 
mcs
;

1064 i‡(!
tx›
 ||Åxop > 4096)

1065 
tx›
 = 4096;

1067 
cur_ht20
 = 
sc
->
tx
.
max_aggr_‰amñí
[
queue
][
MCS_HT20
];

1068 
cur_ht20_sgi
 = 
sc
->
tx
.
max_aggr_‰amñí
[
queue
][
MCS_HT20_SGI
];

1069 
cur_ht40
 = 
sc
->
tx
.
max_aggr_‰amñí
[
queue
][
MCS_HT40
];

1070 
cur_ht40_sgi
 = 
sc
->
tx
.
max_aggr_‰amñí
[
queue
][
MCS_HT40_SGI
];

1071 
mcs
 = 0; mcs < 32; mcs++) {

1072 
cur_ht20
[
mcs
] = 
	`©h_max_‰amñí
(
tx›
, mcs, 
Ál£
, false);

1073 
cur_ht20_sgi
[
mcs
] = 
	`©h_max_‰amñí
(
tx›
, mcs, 
Ál£
, 
åue
);

1074 
cur_ht40
[
mcs
] = 
	`©h_max_‰amñí
(
tx›
, mcs, 
åue
, 
Ál£
);

1075 
cur_ht40_sgi
[
mcs
] = 
	`©h_max_‰amñí
(
tx›
, mcs, 
åue
,Årue);

1077 
	}
}

1079 
	$©h_buf_£t_øã
(
©h_so·c
 *
sc
, 
©h_buf
 *
bf
,

1080 
©h_tx_öfo
 *
öfo
, 
Àn
, 
boﬁ
 
πs
)

1082 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

1083 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1084 
sk_buff
 *
skb
;

1085 
õì80211_tx_öfo
 *
tx_öfo
;

1086 
õì80211_tx_øã
 *
øãs
;

1087 c⁄° 
õì80211_øã
 *
øã
;

1088 
õì80211_hdr
 *
hdr
;

1089 
©h_‰ame_öfo
 *
fi
 = 
	`gë_‰ame_öfo
(
bf
->
bf_mpdu
);

1090 
u32
 
πs_thªsh
 = 
sc
->
hw
->
wùhy
->
πs_thªshﬁd
;

1091 
i
;

1092 
u8
 
rix
 = 0;

1094 
skb
 = 
bf
->
bf_mpdu
;

1095 
tx_öfo
 = 
	`IEEE80211_SKB_CB
(
skb
);

1096 
øãs
 = 
bf
->rates;

1097 
hdr
 = (
õì80211_hdr
 *)
skb
->
d©a
;

1100 
öfo
->
dur_upd©e
 = !
	`õì80211_is_p•ﬁl
(
hdr
->
‰ame_c⁄åﬁ
);

1101 
öfo
->
πs˘s_øã
 = 
fi
->rtscts_rate;

1103 
i
 = 0; i < 
	`ARRAY_SIZE
(
bf
->
øãs
); i++) {

1104 
boﬁ
 
is_40
, 
is_sgi
, 
is_•
;

1105 
phy
;

1107 i‡(!
øãs
[
i
].
cou¡
 || (øãs[i].
idx
 < 0))

1110 
rix
 = 
øãs
[
i
].
idx
;

1111 
öfo
->
øãs
[
i
].
Trõs
 =Ñ©es[i].
cou¡
;

1116 i‡(
	`bf_ißmpdu
(
bf
Ë&& !
	`bf_ißggr
(bf) &&

1117 (
øãs
[
i
].
Êags
 & 
IEEE80211_TX_RC_MCS
) &&

1118 
	`u∆ikñy
(
πs_thªsh
 !(
u32
) -1)) {

1119 i‡(!
πs_thªsh
 || (
Àn
 >Ñts_thresh))

1120 
πs
 = 
åue
;

1123 i‡(
πs
 || 
øãs
[
i
].
Êags
 & 
IEEE80211_TX_RC_USE_RTS_CTS
) {

1124 
öfo
->
øãs
[
i
].
R©eFœgs
 |
ATH9K_RATESERIES_RTS_CTS
;

1125 
öfo
->
Êags
 |
ATH9K_TXDESC_RTSENA
;

1126 } i‡(
øãs
[
i
].
Êags
 & 
IEEE80211_TX_RC_USE_CTS_PROTECT
) {

1127 
öfo
->
øãs
[
i
].
R©eFœgs
 |
ATH9K_RATESERIES_RTS_CTS
;

1128 
öfo
->
Êags
 |
ATH9K_TXDESC_CTSENA
;

1131 i‡(
øãs
[
i
].
Êags
 & 
IEEE80211_TX_RC_40_MHZ_WIDTH
)

1132 
öfo
->
øãs
[
i
].
R©eFœgs
 |
ATH9K_RATESERIES_2040
;

1133 i‡(
øãs
[
i
].
Êags
 & 
IEEE80211_TX_RC_SHORT_GI
)

1134 
öfo
->
øãs
[
i
].
R©eFœgs
 |
ATH9K_RATESERIES_HALFGI
;

1136 
is_sgi
 = !!(
øãs
[
i
].
Êags
 & 
IEEE80211_TX_RC_SHORT_GI
);

1137 
is_40
 = !!(
øãs
[
i
].
Êags
 & 
IEEE80211_TX_RC_40_MHZ_WIDTH
);

1138 
is_•
 = !!(
øãs
[
i
].
Êags
 & 
IEEE80211_TX_RC_USE_SHORT_PREAMBLE
);

1140 i‡(
øãs
[
i
].
Êags
 & 
IEEE80211_TX_RC_MCS
) {

1142 
öfo
->
øãs
[
i
].
R©e
 = 
rix
 | 0x80;

1143 
öfo
->
øãs
[
i
].
ChSñ
 = 
	`©h_txchaömask_ªdu˘i⁄
(
sc
,

1144 
ah
->
txchaömask
, 
öfo
->
øãs
[
i
].
R©e
);

1145 
öfo
->
øãs
[
i
].
PktDuøti⁄
 = 
	`©h_pkt_duøti⁄
(
sc
, 
rix
, 
Àn
,

1146 
is_40
, 
is_sgi
, 
is_•
);

1147 i‡(
rix
 < 8 && (
tx_öfo
->
Êags
 & 
IEEE80211_TX_CTL_STBC
))

1148 
öfo
->
øãs
[
i
].
R©eFœgs
 |
ATH9K_RATESERIES_STBC
;

1153 
øã
 = &
comm⁄
->
sb™ds
[
tx_öfo
->
b™d
].
bôøãs
[
øãs
[
i
].
idx
];

1154 i‡((
tx_öfo
->
b™d
 =
IEEE80211_BAND_2GHZ
) &&

1155 !(
øã
->
Êags
 & 
IEEE80211_RATE_ERP_G
))

1156 
phy
 = 
WLAN_RC_PHY_CCK
;

1158 
phy
 = 
WLAN_RC_PHY_OFDM
;

1160 
öfo
->
øãs
[
i
].
R©e
 = 
øã
->
hw_vÆue
;

1161 i‡(
øã
->
hw_vÆue_sh‹t
) {

1162 i‡(
øãs
[
i
].
Êags
 & 
IEEE80211_TX_RC_USE_SHORT_PREAMBLE
)

1163 
öfo
->
øãs
[
i
].
R©e
 |
øã
->
hw_vÆue_sh‹t
;

1165 
is_•
 = 
Ál£
;

1168 i‡(
bf
->
bf_°©e
.
bfs_∑¥d
)

1169 
öfo
->
øãs
[
i
].
ChSñ
 = 
ah
->
txchaömask
;

1171 
öfo
->
øãs
[
i
].
ChSñ
 = 
	`©h_txchaömask_ªdu˘i⁄
(
sc
,

1172 
ah
->
txchaömask
, 
öfo
->
øãs
[
i
].
R©e
);

1174 
öfo
->
øãs
[
i
].
PktDuøti⁄
 = 
	`©h9k_hw_compuãtxtime
(
sc
->
sc_ah
,

1175 
phy
, 
øã
->
bôøã
 * 100, 
Àn
, 
rix
, 
is_•
);

1179 i‡(
	`bf_ißggr
(
bf
Ë&& (
Àn
 > 
sc
->
sc_ah
->
ˇps
.
πs_aggr_limô
))

1180 
öfo
->
Êags
 &~
ATH9K_TXDESC_RTSENA
;

1183 i‡(
öfo
->
Êags
 & 
ATH9K_TXDESC_RTSENA
)

1184 
öfo
->
Êags
 &~
ATH9K_TXDESC_CTSENA
;

1185 
	}
}

1187 
©h9k_pkt_ty≥
 
	$gë_hw_∑ckë_ty≥
(
sk_buff
 *
skb
)

1189 
õì80211_hdr
 *
hdr
;

1190 
©h9k_pkt_ty≥
 
hty≥
;

1191 
__À16
 
fc
;

1193 
hdr
 = (
õì80211_hdr
 *)
skb
->
d©a
;

1194 
fc
 = 
hdr
->
‰ame_c⁄åﬁ
;

1196 i‡(
	`õì80211_is_bóc⁄
(
fc
))

1197 
hty≥
 = 
ATH9K_PKT_TYPE_BEACON
;

1198 i‡(
	`õì80211_is_¥obe_ª•
(
fc
))

1199 
hty≥
 = 
ATH9K_PKT_TYPE_PROBE_RESP
;

1200 i‡(
	`õì80211_is_©im
(
fc
))

1201 
hty≥
 = 
ATH9K_PKT_TYPE_ATIM
;

1202 i‡(
	`õì80211_is_p•ﬁl
(
fc
))

1203 
hty≥
 = 
ATH9K_PKT_TYPE_PSPOLL
;

1205 
hty≥
 = 
ATH9K_PKT_TYPE_NORMAL
;

1207  
hty≥
;

1208 
	}
}

1210 
	$©h_tx_fûl_desc
(
©h_so·c
 *
sc
, 
©h_buf
 *
bf
,

1211 
©h_txq
 *
txq
, 
Àn
)

1213 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

1214 
©h_buf
 *
bf_fú°
 = 
NULL
;

1215 
©h_tx_öfo
 
öfo
;

1216 
u32
 
πs_thªsh
 = 
sc
->
hw
->
wùhy
->
πs_thªshﬁd
;

1217 
boﬁ
 
πs
 = 
Ál£
;

1219 
	`mem£t
(&
öfo
, 0, (info));

1220 
öfo
.
is_fú°
 = 
åue
;

1221 
öfo
.
is_œ°
 = 
åue
;

1222 
öfo
.
txpowî
 = 
MAX_RATE_POWER
;

1223 
öfo
.
qcu
 = 
txq
->
axq_qnum
;

1225 
bf
) {

1226 
sk_buff
 *
skb
 = 
bf
->
bf_mpdu
;

1227 
õì80211_tx_öfo
 *
tx_öfo
 = 
	`IEEE80211_SKB_CB
(
skb
);

1228 
©h_‰ame_öfo
 *
fi
 = 
	`gë_‰ame_öfo
(
skb
);

1229 
boﬁ
 
aggr
 = !!(
bf
->
bf_°©e
.
bf_ty≥
 & 
BUF_AGGR
);

1231 
öfo
.
ty≥
 = 
	`gë_hw_∑ckë_ty≥
(
skb
);

1232 i‡(
bf
->
bf_√xt
)

1233 
öfo
.
lök
 = 
bf
->
bf_√xt
->
bf_daddr
;

1235 
öfo
.
lök
 = (
sc
->
tx99_°©e
Ë? 
bf
->
bf_daddr
 : 0;

1237 i‡(!
bf_fú°
) {

1238 
bf_fú°
 = 
bf
;

1240 i‡(!
sc
->
tx99_°©e
)

1241 
öfo
.
Êags
 = 
ATH9K_TXDESC_INTREQ
;

1242 i‡((
tx_öfo
->
Êags
 & 
IEEE80211_TX_CTL_CLEAR_PS_FILT
) ||

1243 
txq
 =
sc
->
tx
.
u≠sdq
)

1244 
öfo
.
Êags
 |
ATH9K_TXDESC_CLRDMASK
;

1246 i‡(
tx_öfo
->
Êags
 & 
IEEE80211_TX_CTL_NO_ACK
)

1247 
öfo
.
Êags
 |
ATH9K_TXDESC_NOACK
;

1248 i‡(
tx_öfo
->
Êags
 & 
IEEE80211_TX_CTL_LDPC
)

1249 
öfo
.
Êags
 |
ATH9K_TXDESC_LDPC
;

1251 i‡(
bf
->
bf_°©e
.
bfs_∑¥d
)

1252 
öfo
.
Êags
 |(
u32
Ë
bf
->
bf_°©e
.
bfs_∑¥d
 <<

1253 
ATH9K_TXDESC_PAPRD_S
;

1262 i‡(
aggr
 && (
bf
 =
bf_fú°
) &&

1263 
	`u∆ikñy
(
πs_thªsh
 !(
u32
) -1)) {

1267 i‡(!
πs_thªsh
 || (
Àn
 >Ñts_thresh))

1268 
πs
 = 
åue
;

1271 i‡(!
aggr
)

1272 
Àn
 = 
fi
->
‰amñí
;

1274 
	`©h_buf_£t_øã
(
sc
, 
bf
, &
öfo
, 
Àn
, 
πs
);

1277 
öfo
.
buf_addr
[0] = 
bf
->
bf_buf_addr
;

1278 
öfo
.
buf_Àn
[0] = 
skb
->
Àn
;

1279 
öfo
.
pkt_Àn
 = 
fi
->
‰amñí
;

1280 
öfo
.
keyix
 = 
fi
->keyix;

1281 
öfo
.
keyty≥
 = 
fi
->keytype;

1283 i‡(
aggr
) {

1284 i‡(
bf
 =
bf_fú°
)

1285 
öfo
.
aggr
 = 
AGGR_BUF_FIRST
;

1286 i‡(
bf
 =
bf_fú°
->
bf_œ°bf
)

1287 
öfo
.
aggr
 = 
AGGR_BUF_LAST
;

1289 
öfo
.
aggr
 = 
AGGR_BUF_MIDDLE
;

1291 
öfo
.
ndñim
 = 
bf
->
bf_°©e
.ndelim;

1292 
öfo
.
aggr_Àn
 = 
Àn
;

1295 i‡(
bf
 =
bf_fú°
->
bf_œ°bf
)

1296 
bf_fú°
 = 
NULL
;

1298 
	`©h9k_hw_£t_txdesc
(
ah
, 
bf
->
bf_desc
, &
öfo
);

1299 
bf
 = bf->
bf_√xt
;

1301 
	}
}

1304 
	$©h_tx_f‹m_bur°
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
,

1305 
©h_©x_tid
 *
tid
, 
li°_hód
 *
bf_q
,

1306 
©h_buf
 *
bf_fú°
, 
sk_buff_hód
 *
tid_q
)

1308 
©h_buf
 *
bf
 = 
bf_fú°
, *
bf_¥ev
 = 
NULL
;

1309 
sk_buff
 *
skb
;

1310 
n‰ames
 = 0;

1313 
õì80211_tx_öfo
 *
tx_öfo
;

1314 
skb
 = 
bf
->
bf_mpdu
;

1316 
n‰ames
++;

1317 
	`__skb_u∆ök
(
skb
, 
tid_q
);

1318 
	`li°_add_èû
(&
bf
->
li°
, 
bf_q
);

1319 i‡(
bf_¥ev
)

1320 
bf_¥ev
->
bf_√xt
 = 
bf
;

1321 
bf_¥ev
 = 
bf
;

1323 i‡(
n‰ames
 >= 2)

1326 
bf
 = 
	`©h_tx_gë_tid_sub‰ame
(
sc
, 
txq
, 
tid
, &
tid_q
);

1327 i‡(!
bf
)

1330 
tx_öfo
 = 
	`IEEE80211_SKB_CB
(
bf
->
bf_mpdu
);

1331 i‡(
tx_öfo
->
Êags
 & 
IEEE80211_TX_CTL_AMPDU
)

1334 
	`©h_£t_øãs
(
tid
->
™
->
vif
,Åid->™->
°a
, 
bf
);

1336 
	}
}

1338 
boﬁ
 
	$©h_tx_sched_aggr
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
,

1339 
©h_©x_tid
 *
tid
, 
boﬁ
 *
°›
)

1341 
©h_buf
 *
bf
;

1342 
õì80211_tx_öfo
 *
tx_öfo
;

1343 
sk_buff_hód
 *
tid_q
;

1344 
li°_hód
 
bf_q
;

1345 
aggr_Àn
 = 0;

1346 
boﬁ
 
aggr
, 
œ°
 = 
åue
;

1348 i‡(!
	`©h_tid_has_buf„ªd
(
tid
))

1349  
Ál£
;

1351 
	`INIT_LIST_HEAD
(&
bf_q
);

1353 
bf
 = 
	`©h_tx_gë_tid_sub‰ame
(
sc
, 
txq
, 
tid
, &
tid_q
);

1354 i‡(!
bf
)

1355  
Ál£
;

1357 
tx_öfo
 = 
	`IEEE80211_SKB_CB
(
bf
->
bf_mpdu
);

1358 
aggr
 = !!(
tx_öfo
->
Êags
 & 
IEEE80211_TX_CTL_AMPDU
);

1359 i‡((
aggr
 && 
txq
->
axq_ampdu_dïth
 >
ATH_AGGR_MIN_QDEPTH
) ||

1360 (!
aggr
 && 
txq
->
axq_dïth
 >
ATH_NON_AGGR_MIN_QDEPTH
)) {

1361 *
°›
 = 
åue
;

1362  
Ál£
;

1365 
	`©h_£t_øãs
(
tid
->
™
->
vif
,Åid->™->
°a
, 
bf
);

1366 i‡(
aggr
)

1367 
œ°
 = 
	`©h_tx_f‹m_aggr
(
sc
, 
txq
, 
tid
, &
bf_q
, 
bf
,

1368 
tid_q
, &
aggr_Àn
);

1370 
	`©h_tx_f‹m_bur°
(
sc
, 
txq
, 
tid
, &
bf_q
, 
bf
, 
tid_q
);

1372 i‡(
	`li°_em±y
(&
bf_q
))

1373  
Ál£
;

1375 i‡(
tid
->
ac
->
˛ór_ps_fûãr
 ||Åid->
™
->
no_ps_fûãr
) {

1376 
tid
->
ac
->
˛ór_ps_fûãr
 = 
Ál£
;

1377 
tx_öfo
->
Êags
 |
IEEE80211_TX_CTL_CLEAR_PS_FILT
;

1380 
	`©h_tx_fûl_desc
(
sc
, 
bf
, 
txq
, 
aggr_Àn
);

1381 
	`©h_tx_txqaddbuf
(
sc
, 
txq
, &
bf_q
, 
Ál£
);

1382  
åue
;

1383 
	}
}

1385 
	$©h_tx_aggr_°¨t
(
©h_so·c
 *
sc
, 
õì80211_°a
 *
°a
,

1386 
u16
 
tid
, u16 *
s¢
)

1388 
©h_©x_tid
 *
txtid
;

1389 
©h_txq
 *
txq
;

1390 
©h_node
 *
™
;

1391 
u8
 
dísôy
;

1393 
™
 = (
©h_node
 *)
°a
->
drv_¥iv
;

1394 
txtid
 = 
	`ATH_AN_2_TID
(
™
, 
tid
);

1395 
txq
 = 
txtid
->
ac
->txq;

1397 
	`©h_txq_lock
(
sc
, 
txq
);

1403 i‡(
°a
->
ht_ˇp
.
ht_suµ‹ãd
) {

1404 
™
->
maxampdu
 = (1 << (
IEEE80211_HT_MAX_AMPDU_FACTOR
 +

1405 
°a
->
ht_ˇp
.
ampdu_Á˘‹
)) - 1;

1406 
dísôy
 = 
	`©h9k_∑r£_mpdudísôy
(
°a
->
ht_ˇp
.
ampdu_dísôy
);

1407 
™
->
mpdudísôy
 = 
dísôy
;

1411 
	`©h_tx_tid_ch™ge_°©e
(
sc
, 
txtid
);

1413 
txtid
->
a˘ive
 = 
åue
;

1414 *
s¢
 = 
txtid
->
£q_°¨t
 =Åxtid->
£q_√xt
;

1415 
txtid
->
b¨_ödex
 = -1;

1417 
	`mem£t
(
txtid
->
tx_buf
, 0, (txtid->tx_buf));

1418 
txtid
->
baw_hód
 =Åxtid->
baw_èû
 = 0;

1420 
	`©h_txq_u∆ock_com∂ëe
(
sc
, 
txq
);

1423 
	}
}

1425 
	$©h_tx_aggr_°›
(
©h_so·c
 *
sc
, 
õì80211_°a
 *
°a
, 
u16
 
tid
)

1427 
©h_node
 *
™
 = (©h_nodê*)
°a
->
drv_¥iv
;

1428 
©h_©x_tid
 *
txtid
 = 
	`ATH_AN_2_TID
(
™
, 
tid
);

1429 
©h_txq
 *
txq
 = 
txtid
->
ac
->txq;

1431 
	`©h_txq_lock
(
sc
, 
txq
);

1432 
txtid
->
a˘ive
 = 
Ál£
;

1433 
	`©h_tx_Êush_tid
(
sc
, 
txtid
);

1434 
	`©h_tx_tid_ch™ge_°©e
(
sc
, 
txtid
);

1435 
	`©h_txq_u∆ock_com∂ëe
(
sc
, 
txq
);

1436 
	}
}

1438 
	$©h_tx_aggr_¶ìp
(
õì80211_°a
 *
°a
, 
©h_so·c
 *
sc
,

1439 
©h_node
 *
™
)

1441 
©h_©x_tid
 *
tid
;

1442 
©h_©x_ac
 *
ac
;

1443 
©h_txq
 *
txq
;

1444 
boﬁ
 
buf„ªd
;

1445 
tidno
;

1447 
tidno
 = 0, 
tid
 = &
™
->tid[tidno];

1448 
tidno
 < 
IEEE80211_NUM_TIDS
;Åidno++, 
tid
++) {

1450 
ac
 = 
tid
->ac;

1451 
txq
 = 
ac
->txq;

1453 
	`©h_txq_lock
(
sc
, 
txq
);

1455 i‡(!
tid
->
sched
) {

1456 
	`©h_txq_u∆ock
(
sc
, 
txq
);

1460 
buf„ªd
 = 
	`©h_tid_has_buf„ªd
(
tid
);

1462 
tid
->
sched
 = 
Ál£
;

1463 
	`li°_dñ
(&
tid
->
li°
);

1465 i‡(
ac
->
sched
) {

1466 
ac
->
sched
 = 
Ál£
;

1467 
	`li°_dñ
(&
ac
->
li°
);

1470 
	`©h_txq_u∆ock
(
sc
, 
txq
);

1472 
	`õì80211_°a_£t_buf„ªd
(
°a
, 
tidno
, 
buf„ªd
);

1474 
	}
}

1476 
	$©h_tx_aggr_wakeup
(
©h_so·c
 *
sc
, 
©h_node
 *
™
)

1478 
©h_©x_tid
 *
tid
;

1479 
©h_©x_ac
 *
ac
;

1480 
©h_txq
 *
txq
;

1481 
tidno
;

1483 
tidno
 = 0, 
tid
 = &
™
->tid[tidno];

1484 
tidno
 < 
IEEE80211_NUM_TIDS
;Åidno++, 
tid
++) {

1486 
ac
 = 
tid
->ac;

1487 
txq
 = 
ac
->txq;

1489 
	`©h_txq_lock
(
sc
, 
txq
);

1490 
ac
->
˛ór_ps_fûãr
 = 
åue
;

1492 i‡(
	`©h_tid_has_buf„ªd
(
tid
)) {

1493 
	`©h_tx_queue_tid
(
txq
, 
tid
);

1494 
	`©h_txq_scheduÀ
(
sc
, 
txq
);

1497 
	`©h_txq_u∆ock_com∂ëe
(
sc
, 
txq
);

1499 
	}
}

1501 
	$©h_tx_aggr_ªsume
(
©h_so·c
 *
sc
, 
õì80211_°a
 *
°a
,

1502 
u16
 
tidno
)

1504 
©h_©x_tid
 *
tid
;

1505 
©h_node
 *
™
;

1506 
©h_txq
 *
txq
;

1508 
™
 = (
©h_node
 *)
°a
->
drv_¥iv
;

1509 
tid
 = 
	`ATH_AN_2_TID
(
™
, 
tidno
);

1510 
txq
 = 
tid
->
ac
->txq;

1512 
	`©h_txq_lock
(
sc
, 
txq
);

1514 
tid
->
baw_size
 = 
IEEE80211_MIN_AMPDU_BUF
 << 
°a
->
ht_ˇp
.
ampdu_Á˘‹
;

1516 i‡(
	`©h_tid_has_buf„ªd
(
tid
)) {

1517 
	`©h_tx_queue_tid
(
txq
, 
tid
);

1518 
	`©h_txq_scheduÀ
(
sc
, 
txq
);

1521 
	`©h_txq_u∆ock_com∂ëe
(
sc
, 
txq
);

1522 
	}
}

1524 
	$©h9k_ªÀa£_buf„ªd_‰ames
(
õì80211_hw
 *
hw
,

1525 
õì80211_°a
 *
°a
,

1526 
u16
 
tids
, 
n‰ames
,

1527 
õì80211_‰ame_ªÀa£_ty≥
 
ªas⁄
,

1528 
boﬁ
 
m‹e_d©a
)

1530 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

1531 
©h_node
 *
™
 = (©h_nodê*)
°a
->
drv_¥iv
;

1532 
©h_txq
 *
txq
 = 
sc
->
tx
.
u≠sdq
;

1533 
õì80211_tx_öfo
 *
öfo
;

1534 
li°_hód
 
bf_q
;

1535 
©h_buf
 *
bf_èû
 = 
NULL
, *
bf
;

1536 
sk_buff_hód
 *
tid_q
;

1537 
£¡
 = 0;

1538 
i
;

1540 
	`INIT_LIST_HEAD
(&
bf_q
);

1541 
i
 = 0; 
tids
 && 
n‰ames
; i++,Åids >>= 1) {

1542 
©h_©x_tid
 *
tid
;

1544 i‡(!(
tids
 & 1))

1547 
tid
 = 
	`ATH_AN_2_TID
(
™
, 
i
);

1549 
	`©h_txq_lock
(
sc
, 
tid
->
ac
->
txq
);

1550 
n‰ames
 > 0) {

1551 
bf
 = 
	`©h_tx_gë_tid_sub‰ame
(
sc
, sc->
tx
.
u≠sdq
, 
tid
, &
tid_q
);

1552 i‡(!
bf
)

1555 
	`__skb_u∆ök
(
bf
->
bf_mpdu
, 
tid_q
);

1556 
	`li°_add_èû
(&
bf
->
li°
, &
bf_q
);

1557 
	`©h_£t_øãs
(
tid
->
™
->
vif
,Åid->™->
°a
, 
bf
);

1558 i‡(
	`bf_ißmpdu
(
bf
)) {

1559 
	`©h_tx_addto_baw
(
sc
, 
tid
, 
bf
);

1560 
bf
->
bf_°©e
.
bf_ty≥
 &~
BUF_AGGR
;

1562 i‡(
bf_èû
)

1563 
bf_èû
->
bf_√xt
 = 
bf
;

1565 
bf_èû
 = 
bf
;

1566 
n‰ames
--;

1567 
£¡
++;

1568 
	`TX_STAT_INC
(
txq
->
axq_qnum
, 
a_queued_hw
);

1570 i‡(
™
->
°a
 && !
	`©h_tid_has_buf„ªd
(
tid
))

1571 
	`õì80211_°a_£t_buf„ªd
(
™
->
°a
, 
i
, 
Ál£
);

1573 
	`©h_txq_u∆ock_com∂ëe
(
sc
, 
tid
->
ac
->
txq
);

1576 i‡(
	`li°_em±y
(&
bf_q
))

1579 
öfo
 = 
	`IEEE80211_SKB_CB
(
bf_èû
->
bf_mpdu
);

1580 
öfo
->
Êags
 |
IEEE80211_TX_STATUS_EOSP
;

1582 
bf
 = 
	`li°_fú°_íåy
(&
bf_q
, 
©h_buf
, 
li°
);

1583 
	`©h_txq_lock
(
sc
, 
txq
);

1584 
	`©h_tx_fûl_desc
(
sc
, 
bf
, 
txq
, 0);

1585 
	`©h_tx_txqaddbuf
(
sc
, 
txq
, &
bf_q
, 
Ál£
);

1586 
	`©h_txq_u∆ock
(
sc
, 
txq
);

1587 
	}
}

1593 
©h_txq
 *
	$©h_txq_£tup
(
©h_so·c
 *
sc
, 
qty≥
, 
subty≥
)

1595 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

1596 
©h9k_tx_queue_öfo
 
qi
;

1597 c⁄° 
subty≥_txq_to_hwq
[] = {

1598 [
IEEE80211_AC_BE
] = 
ATH_TXQ_AC_BE
,

1599 [
IEEE80211_AC_BK
] = 
ATH_TXQ_AC_BK
,

1600 [
IEEE80211_AC_VI
] = 
ATH_TXQ_AC_VI
,

1601 [
IEEE80211_AC_VO
] = 
ATH_TXQ_AC_VO
,

1603 
axq_qnum
, 
i
;

1605 
	`mem£t
(&
qi
, 0, (qi));

1606 
qi
.
tqi_subty≥
 = 
subty≥_txq_to_hwq
[
subty≥
];

1607 
qi
.
tqi_aifs
 = 
ATH9K_TXQ_USEDEFAULT
;

1608 
qi
.
tqi_cwmö
 = 
ATH9K_TXQ_USEDEFAULT
;

1609 
qi
.
tqi_cwmax
 = 
ATH9K_TXQ_USEDEFAULT
;

1610 
qi
.
tqi_physCompBuf
 = 0;

1627 i‡(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_EDMA
) {

1628 
qi
.
tqi_qÊags
 = 
TXQ_FLAG_TXINT_ENABLE
;

1630 i‡(
qty≥
 =
ATH9K_TX_QUEUE_UAPSD
)

1631 
qi
.
tqi_qÊags
 = 
TXQ_FLAG_TXDESCINT_ENABLE
;

1633 
qi
.
tqi_qÊags
 = 
TXQ_FLAG_TXEOLINT_ENABLE
 |

1634 
TXQ_FLAG_TXDESCINT_ENABLE
;

1636 
axq_qnum
 = 
	`©h9k_hw_£tu±xqueue
(
ah
, 
qty≥
, &
qi
);

1637 i‡(
axq_qnum
 == -1) {

1642  
NULL
;

1644 i‡(!
	`ATH_TXQ_SETUP
(
sc
, 
axq_qnum
)) {

1645 
©h_txq
 *
txq
 = &
sc
->
tx
.txq[
axq_qnum
];

1647 
txq
->
axq_qnum
 =áxq_qnum;

1648 
txq
->
mac80211_qnum
 = -1;

1649 
txq
->
axq_lök
 = 
NULL
;

1650 
	`__skb_queue_hód_öô
(&
txq
->
com∂ëe_q
);

1651 
	`INIT_LIST_HEAD
(&
txq
->
axq_q
);

1652 
	`INIT_LIST_HEAD
(&
txq
->
axq_acq
);

1653 
	`•ö_lock_öô
(&
txq
->
axq_lock
);

1654 
txq
->
axq_dïth
 = 0;

1655 
txq
->
axq_ampdu_dïth
 = 0;

1656 
txq
->
axq_tx_ö¥ogªss
 = 
Ál£
;

1657 
sc
->
tx
.
txq£tup
 |1<<
axq_qnum
;

1659 
txq
->
txq_hódidx
 =Åxq->
txq_èûidx
 = 0;

1660 
i
 = 0; i < 
ATH_TXFIFO_DEPTH
; i++)

1661 
	`INIT_LIST_HEAD
(&
txq
->
txq_fifo
[
i
]);

1663  &
sc
->
tx
.
txq
[
axq_qnum
];

1664 
	}
}

1666 
	$©h_txq_upd©e
(
©h_so·c
 *
sc
, 
qnum
,

1667 
©h9k_tx_queue_öfo
 *
qöfo
)

1669 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

1670 
îr‹
 = 0;

1671 
©h9k_tx_queue_öfo
 
qi
;

1673 
	`BUG_ON
(
sc
->
tx
.
txq
[
qnum
].
axq_qnum
 != qnum);

1675 
	`©h9k_hw_gë_txq_¥›s
(
ah
, 
qnum
, &
qi
);

1676 
qi
.
tqi_aifs
 = 
qöfo
->tqi_aifs;

1677 
qi
.
tqi_cwmö
 = 
qöfo
->tqi_cwmin;

1678 
qi
.
tqi_cwmax
 = 
qöfo
->tqi_cwmax;

1679 
qi
.
tqi_bur°Time
 = 
qöfo
->tqi_burstTime;

1680 
qi
.
tqi_ªadyTime
 = 
qöfo
->tqi_readyTime;

1682 i‡(!
	`©h9k_hw_£t_txq_¥›s
(
ah
, 
qnum
, &
qi
)) {

1683 
	`©h_îr
(
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
),

1684 "U«bÀÅÿupd©êh¨dw¨êqueuê%u!\n", 
qnum
);

1685 
îr‹
 = -
EIO
;

1687 
	`©h9k_hw_ª£âxqueue
(
ah
, 
qnum
);

1690  
îr‹
;

1691 
	}
}

1693 
	$©h_ˇbq_upd©e
(
©h_so·c
 *
sc
)

1695 
©h9k_tx_queue_öfo
 
qi
;

1696 
©h_bóc⁄_c⁄fig
 *
cur_c⁄f
 = &
sc
->
cur_bóc⁄_c⁄f
;

1697 
qnum
 = 
sc
->
bóc⁄
.
ˇbq
->
axq_qnum
;

1699 
	`©h9k_hw_gë_txq_¥›s
(
sc
->
sc_ah
, 
qnum
, &
qi
);

1701 
qi
.
tqi_ªadyTime
 = (
	`TU_TO_USEC
(
cur_c⁄f
->
bóc⁄_öãrvÆ
) *

1702 
ATH_CABQ_READY_TIME
) / 100;

1703 
	`©h_txq_upd©e
(
sc
, 
qnum
, &
qi
);

1706 
	}
}

1708 
	$©h_døö_txq_li°
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
,

1709 
li°_hód
 *
li°
)

1711 
©h_buf
 *
bf
, *
œ°bf
;

1712 
li°_hód
 
bf_hód
;

1713 
©h_tx_°©us
 
ts
;

1715 
	`mem£t
(&
ts
, 0, (ts));

1716 
ts
.
ts_°©us
 = 
ATH9K_TX_FLUSH
;

1717 
	`INIT_LIST_HEAD
(&
bf_hód
);

1719 !
	`li°_em±y
(
li°
)) {

1720 
bf
 = 
	`li°_fú°_íåy
(
li°
, 
©h_buf
,Üist);

1722 i‡(
bf
->
bf_°©e
.
°Æe
) {

1723 
	`li°_dñ
(&
bf
->
li°
);

1725 
	`©h_tx_ªtu∫_buf„r
(
sc
, 
bf
);

1729 
œ°bf
 = 
bf
->
bf_œ°bf
;

1730 
	`li°_cut_posôi⁄
(&
bf_hód
, 
li°
, &
œ°bf
->list);

1731 
	`©h_tx_¥o˚ss_buf„r
(
sc
, 
txq
, &
ts
, 
bf
, &
bf_hód
);

1733 
	}
}

1741 
	$©h_døötxq
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
)

1743 
	`©h_txq_lock
(
sc
, 
txq
);

1745 i‡(
sc
->
sc_ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_EDMA
) {

1746 
idx
 = 
txq
->
txq_èûidx
;

1748 !
	`li°_em±y
(&
txq
->
txq_fifo
[
idx
])) {

1749 
	`©h_døö_txq_li°
(
sc
, 
txq
, &txq->
txq_fifo
[
idx
]);

1751 
	`INCR
(
idx
, 
ATH_TXFIFO_DEPTH
);

1753 
txq
->
txq_èûidx
 = 
idx
;

1756 
txq
->
axq_lök
 = 
NULL
;

1757 
txq
->
axq_tx_ö¥ogªss
 = 
Ál£
;

1758 
	`©h_døö_txq_li°
(
sc
, 
txq
, &txq->
axq_q
);

1760 
	`©h_txq_u∆ock_com∂ëe
(
sc
, 
txq
);

1761 
	}
}

1763 
boﬁ
 
	$©h_døö_Æl_txq
(
©h_so·c
 *
sc
)

1765 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

1766 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

1767 
©h_txq
 *
txq
;

1768 
i
;

1769 
u32
 
≈íd
 = 0;

1771 i‡(
	`ã°_bô
(
ATH_OP_INVALID
, &
comm⁄
->
›_Êags
))

1772  
åue
;

1774 
	`©h9k_hw_ab‹t_tx_dma
(
ah
);

1777 
i
 = 0; i < 
ATH9K_NUM_TX_QUEUES
; i++) {

1778 i‡(!
	`ATH_TXQ_SETUP
(
sc
, 
i
))

1781 i‡(!
sc
->
tx
.
txq
[
i
].
axq_dïth
)

1784 i‡(
	`©h9k_hw_numtx≥ndög
(
ah
, 
sc
->
tx
.
txq
[
i
].
axq_qnum
))

1785 
≈íd
 |
	`BIT
(
i
);

1788 i‡(
≈íd
)

1789 
	`©h_îr
(
comm⁄
, "FaûedÅÿ°› TX DMA, queues=0x%03x!\n", 
≈íd
);

1791 
i
 = 0; i < 
ATH9K_NUM_TX_QUEUES
; i++) {

1792 i‡(!
	`ATH_TXQ_SETUP
(
sc
, 
i
))

1800 
txq
 = &
sc
->
tx
.txq[
i
];

1801 
txq
->
°›≥d
 = 
Ál£
;

1802 
	`©h_døötxq
(
sc
, 
txq
);

1805  !
≈íd
;

1806 
	}
}

1808 
	$©h_tx_˛ónupq
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
)

1810 
	`©h9k_hw_ªÀa£txqueue
(
sc
->
sc_ah
, 
txq
->
axq_qnum
);

1811 
sc
->
tx
.
txq£tup
 &~(1<<
txq
->
axq_qnum
);

1812 
	}
}

1817 
	$©h_txq_scheduÀ
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
)

1819 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

1820 
©h_©x_ac
 *
ac
, *
œ°_ac
;

1821 
©h_©x_tid
 *
tid
, *
œ°_tid
;

1822 
boﬁ
 
£¡
 = 
Ál£
;

1824 i‡(
	`ã°_bô
(
ATH_OP_HW_RESET
, &
comm⁄
->
›_Êags
) ||

1825 
	`li°_em±y
(&
txq
->
axq_acq
))

1828 
	`rcu_ªad_lock
();

1830 
œ°_ac
 = 
	`li°_íåy
(
txq
->
axq_acq
.
¥ev
, 
©h_©x_ac
, 
li°
);

1831 !
	`li°_em±y
(&
txq
->
axq_acq
)) {

1832 
boﬁ
 
°›
 = 
Ál£
;

1834 
ac
 = 
	`li°_fú°_íåy
(&
txq
->
axq_acq
, 
©h_©x_ac
, 
li°
);

1835 
œ°_tid
 = 
	`li°_íåy
(
ac
->
tid_q
.
¥ev
, 
©h_©x_tid
, 
li°
);

1836 
	`li°_dñ
(&
ac
->
li°
);

1837 
ac
->
sched
 = 
Ál£
;

1839 !
	`li°_em±y
(&
ac
->
tid_q
)) {

1841 
tid
 = 
	`li°_fú°_íåy
(&
ac
->
tid_q
, 
©h_©x_tid
,

1842 
li°
);

1843 
	`li°_dñ
(&
tid
->
li°
);

1844 
tid
->
sched
 = 
Ál£
;

1846 i‡(
	`©h_tx_sched_aggr
(
sc
, 
txq
, 
tid
, &
°›
))

1847 
£¡
 = 
åue
;

1853 i‡(
	`©h_tid_has_buf„ªd
(
tid
))

1854 
	`©h_tx_queue_tid
(
txq
, 
tid
);

1856 i‡(
°›
 || 
tid
 =
œ°_tid
)

1860 i‡(!
	`li°_em±y
(&
ac
->
tid_q
Ë&& !ac->
sched
) {

1861 
ac
->
sched
 = 
åue
;

1862 
	`li°_add_èû
(&
ac
->
li°
, &
txq
->
axq_acq
);

1865 i‡(
°›
)

1868 i‡(
ac
 =
œ°_ac
) {

1869 i‡(!
£¡
)

1872 
£¡
 = 
Ál£
;

1873 
œ°_ac
 = 
	`li°_íåy
(
txq
->
axq_acq
.
¥ev
,

1874 
©h_©x_ac
, 
li°
);

1878 
	`rcu_ªad_u∆ock
();

1879 
	}
}

1889 
	$©h_tx_txqaddbuf
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
,

1890 
li°_hód
 *
hód
, 
boﬁ
 
öã∫Æ
)

1892 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

1893 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

1894 
©h_buf
 *
bf
, *
bf_œ°
;

1895 
boﬁ
 
puâxbuf
 = 
Ál£
;

1896 
boﬁ
 
edma
;

1903 i‡(
	`li°_em±y
(
hód
))

1906 
edma
 = !!(
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_EDMA
);

1907 
bf
 = 
	`li°_fú°_íåy
(
hód
, 
©h_buf
, 
li°
);

1908 
bf_œ°
 = 
	`li°_íåy
(
hód
->
¥ev
, 
©h_buf
, 
li°
);

1910 
	`©h_dbg
(
comm⁄
, 
QUEUE
, "qnum: %d,Åxq depth: %d\n",

1911 
txq
->
axq_qnum
,Åxq->
axq_dïth
);

1913 i‡(
edma
 && 
	`li°_em±y
(&
txq
->
txq_fifo
[txq->
txq_hódidx
])) {

1914 
	`li°_•li˚_èû_öô
(
hód
, &
txq
->
txq_fifo
[txq->
txq_hódidx
]);

1915 
	`INCR
(
txq
->
txq_hódidx
, 
ATH_TXFIFO_DEPTH
);

1916 
puâxbuf
 = 
åue
;

1918 
	`li°_•li˚_èû_öô
(
hód
, &
txq
->
axq_q
);

1920 i‡(
txq
->
axq_lök
) {

1921 
	`©h9k_hw_£t_desc_lök
(
ah
, 
txq
->
axq_lök
, 
bf
->
bf_daddr
);

1922 
	`©h_dbg
(
comm⁄
, 
XMIT
, "link[%u] (%p)=%llx (%p)\n",

1923 
txq
->
axq_qnum
,Åxq->
axq_lök
,

1924 
	`ôo64
(
bf
->
bf_daddr
), bf->
bf_desc
);

1925 } i‡(!
edma
)

1926 
puâxbuf
 = 
åue
;

1928 
txq
->
axq_lök
 = 
bf_œ°
->
bf_desc
;

1931 i‡(
puâxbuf
) {

1932 
	`TX_STAT_INC
(
txq
->
axq_qnum
, 
puâxbuf
);

1933 
	`©h9k_hw_puâxbuf
(
ah
, 
txq
->
axq_qnum
, 
bf
->
bf_daddr
);

1934 
	`©h_dbg
(
comm⁄
, 
XMIT
, "TXDP[%u] = %llx (%p)\n",

1935 
txq
->
axq_qnum
, 
	`ôo64
(
bf
->
bf_daddr
), bf->
bf_desc
);

1938 i‡(!
edma
 || 
sc
->
tx99_°©e
) {

1939 
	`TX_STAT_INC
(
txq
->
axq_qnum
, 
tx°¨t
);

1940 
	`©h9k_hw_tx°¨t
(
ah
, 
txq
->
axq_qnum
);

1943 i‡(!
öã∫Æ
) {

1944 
bf
) {

1945 
txq
->
axq_dïth
++;

1946 i‡(
	`bf_is_ampdu_nŸ_¥obög
(
bf
))

1947 
txq
->
axq_ampdu_dïth
++;

1949 
bf_œ°
 = 
bf
->
bf_œ°bf
;

1950 
bf
 = 
bf_œ°
->
bf_√xt
;

1951 
bf_œ°
->
bf_√xt
 = 
NULL
;

1954 
	}
}

1956 
	$©h_tx_£nd_n‹mÆ
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
,

1957 
©h_©x_tid
 *
tid
, 
sk_buff
 *
skb
)

1959 
õì80211_tx_öfo
 *
tx_öfo
 = 
	`IEEE80211_SKB_CB
(
skb
);

1960 
©h_‰ame_öfo
 *
fi
 = 
	`gë_‰ame_öfo
(
skb
);

1961 
li°_hód
 
bf_hód
;

1962 
©h_buf
 *
bf
 = 
fi
->bf;

1964 
	`INIT_LIST_HEAD
(&
bf_hód
);

1965 
	`li°_add_èû
(&
bf
->
li°
, &
bf_hód
);

1966 
bf
->
bf_°©e
.
bf_ty≥
 = 0;

1967 i‡(
tid
 && (
tx_öfo
->
Êags
 & 
IEEE80211_TX_CTL_AMPDU
)) {

1968 
bf
->
bf_°©e
.
bf_ty≥
 = 
BUF_AMPDU
;

1969 
	`©h_tx_addto_baw
(
sc
, 
tid
, 
bf
);

1972 
bf
->
bf_√xt
 = 
NULL
;

1973 
bf
->
bf_œ°bf
 = bf;

1974 
	`©h_tx_fûl_desc
(
sc
, 
bf
, 
txq
, 
fi
->
‰amñí
);

1975 
	`©h_tx_txqaddbuf
(
sc
, 
txq
, &
bf_hód
, 
Ál£
);

1976 
	`TX_STAT_INC
(
txq
->
axq_qnum
, 
queued
);

1977 
	}
}

1979 
	$£tup_‰ame_öfo
(
õì80211_hw
 *
hw
,

1980 
õì80211_°a
 *
°a
,

1981 
sk_buff
 *
skb
,

1982 
‰amñí
)

1984 
õì80211_tx_öfo
 *
tx_öfo
 = 
	`IEEE80211_SKB_CB
(
skb
);

1985 
õì80211_key_c⁄f
 *
hw_key
 = 
tx_öfo
->
c⁄åﬁ
.hw_key;

1986 
õì80211_hdr
 *
hdr
 = (õì80211_hd∏*)
skb
->
d©a
;

1987 c⁄° 
õì80211_øã
 *
øã
;

1988 
©h_‰ame_öfo
 *
fi
 = 
	`gë_‰ame_öfo
(
skb
);

1989 
©h_node
 *
™
 = 
NULL
;

1990 
©h9k_key_ty≥
 
keyty≥
;

1991 
boﬁ
 
sh‹t_¥ómbÀ
 = 
Ál£
;

1998 i‡(
tx_öfo
->
c⁄åﬁ
.
vif
 &&

1999 
tx_öfo
->
c⁄åﬁ
.
vif
->
bss_c⁄f
.
u£_sh‹t_¥ómbÀ
)

2000 
sh‹t_¥ómbÀ
 = 
åue
;

2002 
øã
 = 
	`õì80211_gë_πs_˘s_øã
(
hw
, 
tx_öfo
);

2003 
keyty≥
 = 
	`©h9k_cmn_gë_hw_¸y±o_keyty≥
(
skb
);

2005 i‡(
°a
)

2006 
™
 = (
©h_node
 *Ë
°a
->
drv_¥iv
;

2008 
	`mem£t
(
fi
, 0, (*fi));

2009 
fi
->
txq
 = -1;

2010 i‡(
hw_key
)

2011 
fi
->
keyix
 = 
hw_key
->
hw_key_idx
;

2012 i‡(
™
 && 
	`õì80211_is_d©a
(
hdr
->
‰ame_c⁄åﬁ
Ë&&án->
ps_key
 > 0)

2013 
fi
->
keyix
 = 
™
->
ps_key
;

2015 
fi
->
keyix
 = 
ATH9K_TXKEYIX_INVALID
;

2016 
fi
->
keyty≥
 = keytype;

2017 
fi
->
‰amñí
 = framelen;

2019 i‡(!
øã
)

2021 
fi
->
πs˘s_øã
 = 
øã
->
hw_vÆue
;

2022 i‡(
sh‹t_¥ómbÀ
)

2023 
fi
->
πs˘s_øã
 |
øã
->
hw_vÆue_sh‹t
;

2024 
	}
}

2026 
u8
 
	$©h_txchaömask_ªdu˘i⁄
(
©h_so·c
 *
sc
, 
u8
 
chaömask
, 
u32
 
øã
)

2028 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

2029 
©h9k_ch™√l
 *
curch™
 = 
ah
->curchan;

2031 i‡((
ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_APM
Ë&& 
	`IS_CHAN_5GHZ
(
curch™
) &&

2032 (
chaömask
 =0x7Ë&& (
øã
 < 0x90))

2034 i‡(
	`AR_SREV_9462
(
ah
Ë&& 
	`©h9k_hw_btc€x_is_íabÀd
(ah) &&

2035 
	`IS_CCK_RATE
(
øã
))

2038  
chaömask
;

2039 
	}
}

2045 
©h_buf
 *
	$©h_tx_£tup_buf„r
(
©h_so·c
 *
sc
,

2046 
©h_txq
 *
txq
,

2047 
©h_©x_tid
 *
tid
,

2048 
sk_buff
 *
skb
)

2050 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

2051 
©h_‰ame_öfo
 *
fi
 = 
	`gë_‰ame_öfo
(
skb
);

2052 
õì80211_hdr
 *
hdr
 = (õì80211_hd∏*)
skb
->
d©a
;

2053 
©h_buf
 *
bf
;

2054 
‰agno
;

2055 
u16
 
£qno
;

2057 
bf
 = 
	`©h_tx_gë_buf„r
(
sc
);

2058 i‡(!
bf
) {

2059 
	`©h_dbg
(
comm⁄
, 
XMIT
, "TX buffersáre full\n");

2060  
NULL
;

2063 
	`ATH_TXBUF_RESET
(
bf
);

2065 i‡(
tid
 && 
	`õì80211_is_d©a_¥e£¡
(
hdr
->
‰ame_c⁄åﬁ
)) {

2066 
‰agno
 = 
	`À16_to_˝u
(
hdr
->
£q_˘æ
Ë& 
IEEE80211_SCTL_FRAG
;

2067 
£qno
 = 
tid
->
£q_√xt
;

2068 
hdr
->
£q_˘æ
 = 
	`˝u_to_À16
(
tid
->
£q_√xt
 << 
IEEE80211_SEQ_SEQ_SHIFT
);

2070 i‡(
‰agno
)

2071 
hdr
->
£q_˘æ
 |
	`˝u_to_À16
(
‰agno
);

2073 i‡(!
	`õì80211_has_m‹e‰ags
(
hdr
->
‰ame_c⁄åﬁ
))

2074 
	`INCR
(
tid
->
£q_√xt
, 
IEEE80211_SEQ_MAX
);

2076 
bf
->
bf_°©e
.
£qno
 = seqno;

2079 
bf
->
bf_mpdu
 = 
skb
;

2081 
bf
->
bf_buf_addr
 = 
	`dma_m≠_sögÀ
(
sc
->
dev
, 
skb
->
d©a
,

2082 
skb
->
Àn
, 
DMA_TO_DEVICE
);

2083 i‡(
	`u∆ikñy
(
	`dma_m≠pög_îr‹
(
sc
->
dev
, 
bf
->
bf_buf_addr
))) {

2084 
bf
->
bf_mpdu
 = 
NULL
;

2085 
bf
->
bf_buf_addr
 = 0;

2086 
	`©h_îr
(
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
),

2088 
	`©h_tx_ªtu∫_buf„r
(
sc
, 
bf
);

2089  
NULL
;

2092 
fi
->
bf
 = bf;

2094  
bf
;

2095 
	}
}

2097 
	$©h_tx_¥ï¨e
(
õì80211_hw
 *
hw
, 
sk_buff
 *
skb
,

2098 
©h_tx_c⁄åﬁ
 *
tx˘l
)

2100 
õì80211_hdr
 *
hdr
 = (õì80211_hd∏*Ë
skb
->
d©a
;

2101 
õì80211_tx_öfo
 *
öfo
 = 
	`IEEE80211_SKB_CB
(
skb
);

2102 
õì80211_°a
 *
°a
 = 
tx˘l
->sta;

2103 
õì80211_vif
 *
vif
 = 
öfo
->
c⁄åﬁ
.vif;

2104 
©h_vif
 *
avp
;

2105 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

2106 
‰mÀn
 = 
skb
->
Àn
 + 
FCS_LEN
;

2107 
∑dpos
, 
∑dsize
;

2110 i‡(
°a
)

2111 
tx˘l
->
™
 = (
©h_node
 *)
°a
->
drv_¥iv
;

2112 i‡(
vif
 && 
	`õì80211_is_d©a
(
hdr
->
‰ame_c⁄åﬁ
)) {

2113 
avp
 = (*)
vif
->
drv_¥iv
;

2114 
tx˘l
->
™
 = &
avp
->
mˇ°_node
;

2117 i‡(
öfo
->
c⁄åﬁ
.
hw_key
)

2118 
‰mÀn
 +
öfo
->
c⁄åﬁ
.
hw_key
->
icv_Àn
;

2125 i‡(
öfo
->
Êags
 & 
IEEE80211_TX_CTL_ASSIGN_SEQ
) {

2126 i‡(
öfo
->
Êags
 & 
IEEE80211_TX_CTL_FIRST_FRAGMENT
)

2127 
sc
->
tx
.
£q_no
 += 0x10;

2128 
hdr
->
£q_˘æ
 &
	`˝u_to_À16
(
IEEE80211_SCTL_FRAG
);

2129 
hdr
->
£q_˘æ
 |
	`˝u_to_À16
(
sc
->
tx
.
£q_no
);

2132 i‡((
vif
 && vif->
ty≥
 !
NL80211_IFTYPE_AP
 &&

2133 
vif
->
ty≥
 !
NL80211_IFTYPE_AP_VLAN
) ||

2134 !
	`õì80211_is_d©a
(
hdr
->
‰ame_c⁄åﬁ
))

2135 
öfo
->
Êags
 |
IEEE80211_TX_CTL_CLEAR_PS_FILT
;

2138 
∑dpos
 = 
	`õì80211_hdæí
(
hdr
->
‰ame_c⁄åﬁ
);

2139 
∑dsize
 = 
∑dpos
 & 3;

2140 i‡(
∑dsize
 && 
skb
->
Àn
 > 
∑dpos
) {

2141 i‡(
	`skb_hódroom
(
skb
Ë< 
∑dsize
)

2142  -
ENOMEM
;

2144 
	`skb_push
(
skb
, 
∑dsize
);

2145 
	`memmove
(
skb
->
d©a
, skb->d©®+ 
∑dsize
, 
∑dpos
);

2148 
	`£tup_‰ame_öfo
(
hw
, 
°a
, 
skb
, 
‰mÀn
);

2150 
	}
}

2154 
	$©h_tx_°¨t
(
õì80211_hw
 *
hw
, 
sk_buff
 *
skb
,

2155 
©h_tx_c⁄åﬁ
 *
tx˘l
)

2157 
õì80211_hdr
 *
hdr
;

2158 
õì80211_tx_öfo
 *
öfo
 = 
	`IEEE80211_SKB_CB
(
skb
);

2159 
õì80211_°a
 *
°a
 = 
tx˘l
->sta;

2160 
õì80211_vif
 *
vif
 = 
öfo
->
c⁄åﬁ
.vif;

2161 
©h_‰ame_öfo
 *
fi
 = 
	`gë_‰ame_öfo
(
skb
);

2162 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

2163 
©h_txq
 *
txq
 = 
tx˘l
->txq;

2164 
©h_©x_tid
 *
tid
 = 
NULL
;

2165 
©h_buf
 *
bf
;

2166 
q
;

2167 
ªt
;

2169 
ªt
 = 
	`©h_tx_¥ï¨e
(
hw
, 
skb
, 
tx˘l
);

2170 i‡(
ªt
)

2171  
ªt
;

2173 
hdr
 = (
õì80211_hdr
 *Ë
skb
->
d©a
;

2179 
q
 = 
	`skb_gë_queue_m≠pög
(
skb
);

2181 
	`©h_txq_lock
(
sc
, 
txq
);

2182 i‡(
txq
 =
sc
->
tx
.
txq_m≠
[
q
]) {

2183 
fi
->
txq
 = 
q
;

2184 i‡(++
txq
->
≥ndög_‰ames
 > 
sc
->
tx
.
txq_max_≥ndög
[
q
] &&

2185 !
txq
->
°›≥d
) {

2186 
	`õì80211_°›_queue
(
sc
->
hw
, 
q
);

2187 
txq
->
°›≥d
 = 
åue
;

2191 i‡(
tx˘l
->
™
 && 
	`õì80211_is_d©a_¥e£¡
(
hdr
->
‰ame_c⁄åﬁ
))

2192 
tid
 = 
	`©h_gë_skb_tid
(
sc
, 
tx˘l
->
™
, 
skb
);

2194 i‡(
öfo
->
Êags
 & 
IEEE80211_TX_CTL_PS_RESPONSE
) {

2195 
	`©h_txq_u∆ock
(
sc
, 
txq
);

2196 
txq
 = 
sc
->
tx
.
u≠sdq
;

2197 
	`©h_txq_lock
(
sc
, 
txq
);

2198 } i‡(
tx˘l
->
™
 &&

2199 
	`õì80211_is_d©a_¥e£¡
(
hdr
->
‰ame_c⁄åﬁ
)) {

2200 
	`WARN_ON
(
tid
->
ac
->
txq
 !
tx˘l
->txq);

2202 i‡(
öfo
->
Êags
 & 
IEEE80211_TX_CTL_CLEAR_PS_FILT
)

2203 
tid
->
ac
->
˛ór_ps_fûãr
 = 
åue
;

2209 
	`TX_STAT_INC
(
txq
->
axq_qnum
, 
a_queued_sw
);

2210 
	`__skb_queue_èû
(&
tid
->
buf_q
, 
skb
);

2211 i‡(!
tx˘l
->
™
->
¶ìpög
)

2212 
	`©h_tx_queue_tid
(
txq
, 
tid
);

2214 
	`©h_txq_scheduÀ
(
sc
, 
txq
);

2215 
out
;

2218 
bf
 = 
	`©h_tx_£tup_buf„r
(
sc
, 
txq
, 
tid
, 
skb
);

2219 i‡(!
bf
) {

2220 
	`©h_txq_skb_d⁄e
(
sc
, 
txq
, 
skb
);

2221 i‡(
tx˘l
->
∑¥d
)

2222 
	`dev_k‰ì_skb_™y
(
skb
);

2224 
	`õì80211_‰ì_txskb
(
sc
->
hw
, 
skb
);

2225 
out
;

2228 
bf
->
bf_°©e
.
bfs_∑¥d
 = 
tx˘l
->
∑¥d
;

2230 i‡(
tx˘l
->
∑¥d
)

2231 
bf
->
bf_°©e
.
bfs_∑¥d_time°amp
 = 
jiffõs
;

2233 
	`©h_£t_øãs
(
vif
, 
°a
, 
bf
);

2234 
	`©h_tx_£nd_n‹mÆ
(
sc
, 
txq
, 
tid
, 
skb
);

2236 
out
:

2237 
	`©h_txq_u∆ock
(
sc
, 
txq
);

2240 
	}
}

2242 
	$©h_tx_ˇbq
(
õì80211_hw
 *
hw
, 
õì80211_vif
 *
vif
,

2243 
sk_buff
 *
skb
)

2245 
©h_so·c
 *
sc
 = 
hw
->
¥iv
;

2246 
©h_tx_c⁄åﬁ
 
tx˘l
 = {

2247 .
txq
 = 
sc
->
bóc⁄
.
ˇbq


2249 
©h_tx_öfo
 
öfo
 = {};

2250 
õì80211_hdr
 *
hdr
;

2251 
©h_buf
 *
bf_èû
 = 
NULL
;

2252 
©h_buf
 *
bf
;

2253 
	`LIST_HEAD
(
bf_q
);

2254 
duøti⁄
 = 0;

2255 
max_duøti⁄
;

2257 
max_duøti⁄
 =

2258 
sc
->
cur_bóc⁄_c⁄f
.
bóc⁄_öãrvÆ
 * 1000 *

2259 
sc
->
cur_bóc⁄_c⁄f
.
dtim_≥riod
 / 
ATH_BCBUF
;

2262 
©h_‰ame_öfo
 *
fi
 = 
	`gë_‰ame_öfo
(
skb
);

2264 i‡(
	`©h_tx_¥ï¨e
(
hw
, 
skb
, &
tx˘l
))

2267 
bf
 = 
	`©h_tx_£tup_buf„r
(
sc
, 
tx˘l
.
txq
, 
NULL
, 
skb
);

2268 i‡(!
bf
)

2271 
bf
->
bf_œ°bf
 = bf;

2272 
	`©h_£t_øãs
(
vif
, 
NULL
, 
bf
);

2273 
	`©h_buf_£t_øã
(
sc
, 
bf
, &
öfo
, 
fi
->
‰amñí
, 
Ál£
);

2274 
duøti⁄
 +
öfo
.
øãs
[0].
PktDuøti⁄
;

2275 i‡(
bf_èû
)

2276 
bf_èû
->
bf_√xt
 = 
bf
;

2278 
	`li°_add_èû
(&
bf
->
li°
, &
bf_q
);

2279 
bf_èû
 = 
bf
;

2280 
skb
 = 
NULL
;

2282 i‡(
duøti⁄
 > 
max_duøti⁄
)

2285 
skb
 = 
	`õì80211_gë_buf„ªd_bc
(
hw
, 
vif
);

2286 } 
skb
);

2288 i‡(
skb
)

2289 
	`õì80211_‰ì_txskb
(
hw
, 
skb
);

2291 i‡(
	`li°_em±y
(&
bf_q
))

2294 
bf
 = 
	`li°_fú°_íåy
(&
bf_q
, 
©h_buf
, 
li°
);

2295 
hdr
 = (
õì80211_hdr
 *Ë
bf
->
bf_mpdu
->
d©a
;

2297 i‡(
hdr
->
‰ame_c⁄åﬁ
 & 
IEEE80211_FCTL_MOREDATA
) {

2298 
hdr
->
‰ame_c⁄åﬁ
 &~
IEEE80211_FCTL_MOREDATA
;

2299 
	`dma_sync_sögÀ_f‹_devi˚
(
sc
->
dev
, 
bf
->
bf_buf_addr
,

2300 (*
hdr
), 
DMA_TO_DEVICE
);

2303 
	`©h_txq_lock
(
sc
, 
tx˘l
.
txq
);

2304 
	`©h_tx_fûl_desc
(
sc
, 
bf
, 
tx˘l
.
txq
, 0);

2305 
	`©h_tx_txqaddbuf
(
sc
, 
tx˘l
.
txq
, &
bf_q
, 
Ál£
);

2306 
	`TX_STAT_INC
(
tx˘l
.
txq
->
axq_qnum
, 
queued
);

2307 
	`©h_txq_u∆ock
(
sc
, 
tx˘l
.
txq
);

2308 
	}
}

2314 
	$©h_tx_com∂ëe
(
©h_so·c
 *
sc
, 
sk_buff
 *
skb
,

2315 
tx_Êags
, 
©h_txq
 *
txq
)

2317 
õì80211_tx_öfo
 *
tx_öfo
 = 
	`IEEE80211_SKB_CB
(
skb
);

2318 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

2319 
õì80211_hdr
 * 
hdr
 = (õì80211_hd∏*)
skb
->
d©a
;

2320 
∑dpos
, 
∑dsize
;

2321 
Êags
;

2323 
	`©h_dbg
(
comm⁄
, 
XMIT
, "TX com∂ëe: skb: %p\n", 
skb
);

2325 i‡(
sc
->
sc_ah
->
ˇld©a
)

2326 
	`£t_bô
(
PAPRD_PACKET_SENT
, &
sc
->
sc_ah
->
ˇld©a
->
ˇl_Êags
);

2328 i‡(!(
tx_Êags
 & 
ATH_TX_ERROR
))

2330 
tx_öfo
->
Êags
 |
IEEE80211_TX_STAT_ACK
;

2332 
∑dpos
 = 
	`õì80211_hdæí
(
hdr
->
‰ame_c⁄åﬁ
);

2333 
∑dsize
 = 
∑dpos
 & 3;

2334 i‡(
∑dsize
 && 
skb
->
Àn
>
∑dpos
+padsize) {

2339 
	`memmove
(
skb
->
d©a
 + 
∑dsize
, skb->d©a, 
∑dpos
);

2340 
	`skb_puŒ
(
skb
, 
∑dsize
);

2343 
	`•ö_lock_úqßve
(&
sc
->
sc_pm_lock
, 
Êags
);

2344 i‡((
sc
->
ps_Êags
 & 
PS_WAIT_FOR_TX_ACK
Ë&& !
txq
->
axq_dïth
) {

2345 
sc
->
ps_Êags
 &~
PS_WAIT_FOR_TX_ACK
;

2346 
	`©h_dbg
(
comm⁄
, 
PS
,

2348 
sc
->
ps_Êags
 & (
PS_WAIT_FOR_BEACON
 |

2349 
PS_WAIT_FOR_CAB
 |

2350 
PS_WAIT_FOR_PSPOLL_DATA
 |

2351 
PS_WAIT_FOR_TX_ACK
));

2353 
	`•ö_u∆ock_úqª°‹e
(&
sc
->
sc_pm_lock
, 
Êags
);

2355 
	`__skb_queue_èû
(&
txq
->
com∂ëe_q
, 
skb
);

2356 
	`©h_txq_skb_d⁄e
(
sc
, 
txq
, 
skb
);

2357 
	}
}

2359 
	$©h_tx_com∂ëe_buf
(
©h_so·c
 *
sc
, 
©h_buf
 *
bf
,

2360 
©h_txq
 *
txq
, 
li°_hód
 *
bf_q
,

2361 
©h_tx_°©us
 *
ts
, 
txok
)

2363 
sk_buff
 *
skb
 = 
bf
->
bf_mpdu
;

2364 
õì80211_tx_öfo
 *
tx_öfo
 = 
	`IEEE80211_SKB_CB
(
skb
);

2365 
Êags
;

2366 
tx_Êags
 = 0;

2368 i‡(!
txok
)

2369 
tx_Êags
 |
ATH_TX_ERROR
;

2371 i‡(
ts
->
ts_°©us
 & 
ATH9K_TXERR_FILT
)

2372 
tx_öfo
->
Êags
 |
IEEE80211_TX_STAT_TX_FILTERED
;

2374 
	`dma_unm≠_sögÀ
(
sc
->
dev
, 
bf
->
bf_buf_addr
, 
skb
->
Àn
, 
DMA_TO_DEVICE
);

2375 
bf
->
bf_buf_addr
 = 0;

2376 i‡(
sc
->
tx99_°©e
)

2377 
skù_tx_com∂ëe
;

2379 i‡(
bf
->
bf_°©e
.
bfs_∑¥d
) {

2380 i‡(
	`time_a·î
(
jiffõs
,

2381 
bf
->
bf_°©e
.
bfs_∑¥d_time°amp
 +

2382 
	`m£cs_to_jiffõs
(
ATH_PAPRD_TIMEOUT
)))

2383 
	`dev_k‰ì_skb_™y
(
skb
);

2385 
	`com∂ëe
(&
sc
->
∑¥d_com∂ëe
);

2387 
	`©h_debug_°©_tx
(
sc
, 
bf
, 
ts
, 
txq
, 
tx_Êags
);

2388 
	`©h_tx_com∂ëe
(
sc
, 
skb
, 
tx_Êags
, 
txq
);

2390 
skù_tx_com∂ëe
:

2394 
bf
->
bf_mpdu
 = 
NULL
;

2399 
	`•ö_lock_úqßve
(&
sc
->
tx
.
txbuÊock
, 
Êags
);

2400 
	`li°_•li˚_èû_öô
(
bf_q
, &
sc
->
tx
.
txbuf
);

2401 
	`•ö_u∆ock_úqª°‹e
(&
sc
->
tx
.
txbuÊock
, 
Êags
);

2402 
	}
}

2404 
	$©h_tx_rc_°©us
(
©h_so·c
 *
sc
, 
©h_buf
 *
bf
,

2405 
©h_tx_°©us
 *
ts
, 
n‰ames
, 
nbad
,

2406 
txok
)

2408 
sk_buff
 *
skb
 = 
bf
->
bf_mpdu
;

2409 
õì80211_hdr
 *
hdr
 = (õì80211_hd∏*)
skb
->
d©a
;

2410 
õì80211_tx_öfo
 *
tx_öfo
 = 
	`IEEE80211_SKB_CB
(
skb
);

2411 
õì80211_hw
 *
hw
 = 
sc
->hw;

2412 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

2413 
u8
 
i
, 
tx_øãödex
;

2415 i‡(
txok
)

2416 
tx_öfo
->
°©us
.
ack_sig«l
 = 
ts
->
ts_rssi
;

2418 
tx_øãödex
 = 
ts
->
ts_øãödex
;

2419 
	`WARN_ON
(
tx_øãödex
 >
hw
->
max_øãs
);

2421 i‡(
tx_öfo
->
Êags
 & 
IEEE80211_TX_CTL_AMPDU
) {

2422 
tx_öfo
->
Êags
 |
IEEE80211_TX_STAT_AMPDU
;

2424 
	`BUG_ON
(
nbad
 > 
n‰ames
);

2426 
tx_öfo
->
°©us
.
ampdu_Àn
 = 
n‰ames
;

2427 
tx_öfo
->
°©us
.
ampdu_ack_Àn
 = 
n‰ames
 - 
nbad
;

2429 i‡((
ts
->
ts_°©us
 & 
ATH9K_TXERR_FILT
) == 0 &&

2430 (
tx_öfo
->
Êags
 & 
IEEE80211_TX_CTL_NO_ACK
) == 0) {

2443 i‡(
	`u∆ikñy
(
ts
->
ts_Êags
 & (
ATH9K_TX_DATA_UNDERRUN
 |

2444 
ATH9K_TX_DELIM_UNDERRUN
)) &&

2445 
	`õì80211_is_d©a
(
hdr
->
‰ame_c⁄åﬁ
) &&

2446 
ah
->
tx_åig_Àvñ
 >
sc
->
sc_ah
->
c⁄fig
.
max_txåig_Àvñ
)

2447 
tx_öfo
->
°©us
.
øãs
[
tx_øãödex
].
cou¡
 =

2448 
hw
->
max_øã_åõs
;

2451 
i
 = 
tx_øãödex
 + 1; i < 
hw
->
max_øãs
; i++) {

2452 
tx_öfo
->
°©us
.
øãs
[
i
].
cou¡
 = 0;

2453 
tx_öfo
->
°©us
.
øãs
[
i
].
idx
 = -1;

2456 
tx_öfo
->
°©us
.
øãs
[
tx_øãödex
].
cou¡
 = 
ts
->
ts_l⁄gªåy
 + 1;

2457 
	}
}

2459 
	$©h_tx_¥o˚ssq
(
©h_so·c
 *
sc
, 
©h_txq
 *
txq
)

2461 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

2462 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
ah
);

2463 
©h_buf
 *
bf
, *
œ°bf
, *
bf_hñd
 = 
NULL
;

2464 
li°_hód
 
bf_hód
;

2465 
©h_desc
 *
ds
;

2466 
©h_tx_°©us
 
ts
;

2467 
°©us
;

2469 
	`©h_dbg
(
comm⁄
, 
QUEUE
, "tx queue %d (%x),Üink %p\n",

2470 
txq
->
axq_qnum
, 
	`©h9k_hw_gëtxbuf
(
sc
->
sc_ah
,Åxq->axq_qnum),

2471 
txq
->
axq_lök
);

2473 
	`©h_txq_lock
(
sc
, 
txq
);

2475 i‡(
	`ã°_bô
(
ATH_OP_HW_RESET
, &
comm⁄
->
›_Êags
))

2478 i‡(
	`li°_em±y
(&
txq
->
axq_q
)) {

2479 
txq
->
axq_lök
 = 
NULL
;

2480 
	`©h_txq_scheduÀ
(
sc
, 
txq
);

2483 
bf
 = 
	`li°_fú°_íåy
(&
txq
->
axq_q
, 
©h_buf
, 
li°
);

2493 
bf_hñd
 = 
NULL
;

2494 i‡(
bf
->
bf_°©e
.
°Æe
) {

2495 
bf_hñd
 = 
bf
;

2496 i‡(
	`li°_is_œ°
(&
bf_hñd
->
li°
, &
txq
->
axq_q
))

2499 
bf
 = 
	`li°_íåy
(
bf_hñd
->
li°
.
√xt
, 
©h_buf
,

2500 
li°
);

2503 
œ°bf
 = 
bf
->
bf_œ°bf
;

2504 
ds
 = 
œ°bf
->
bf_desc
;

2506 
	`mem£t
(&
ts
, 0, (ts));

2507 
°©us
 = 
	`©h9k_hw_tx¥ocdesc
(
ah
, 
ds
, &
ts
);

2508 i‡(
°©us
 =-
EINPROGRESS
)

2511 
	`TX_STAT_INC
(
txq
->
axq_qnum
, 
tx¥ocdesc
);

2518 
œ°bf
->
bf_°©e
.
°Æe
 = 
åue
;

2519 
	`INIT_LIST_HEAD
(&
bf_hód
);

2520 i‡(!
	`li°_is_söguœr
(&
œ°bf
->
li°
))

2521 
	`li°_cut_posôi⁄
(&
bf_hód
,

2522 &
txq
->
axq_q
, 
œ°bf
->
li°
.
¥ev
);

2524 i‡(
bf_hñd
) {

2525 
	`li°_dñ
(&
bf_hñd
->
li°
);

2526 
	`©h_tx_ªtu∫_buf„r
(
sc
, 
bf_hñd
);

2529 
	`©h_tx_¥o˚ss_buf„r
(
sc
, 
txq
, &
ts
, 
bf
, &
bf_hód
);

2531 
	`©h_txq_u∆ock_com∂ëe
(
sc
, 
txq
);

2532 
	}
}

2534 
	$©h_tx_èskÀt
(
©h_so·c
 *
sc
)

2536 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

2537 
u32
 
qcumask
 = ((1 << 
ATH9K_NUM_TX_QUEUES
Ë- 1Ë& 
ah
->
öå_txqs
;

2538 
i
;

2540 
i
 = 0; i < 
ATH9K_NUM_TX_QUEUES
; i++) {

2541 i‡(
	`ATH_TXQ_SETUP
(
sc
, 
i
Ë&& (
qcumask
 & (1 << i)))

2542 
	`©h_tx_¥o˚ssq
(
sc
, &sc->
tx
.
txq
[
i
]);

2544 
	}
}

2546 
	$©h_tx_edma_èskÀt
(
©h_so·c
 *
sc
)

2548 
©h_tx_°©us
 
ts
;

2549 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

2550 
©h_hw
 *
ah
 = 
sc
->
sc_ah
;

2551 
©h_txq
 *
txq
;

2552 
©h_buf
 *
bf
, *
œ°bf
;

2553 
li°_hód
 
bf_hód
;

2554 
li°_hód
 *
fifo_li°
;

2555 
°©us
;

2558 i‡(
	`ã°_bô
(
ATH_OP_HW_RESET
, &
comm⁄
->
›_Êags
))

2561 
°©us
 = 
	`©h9k_hw_tx¥ocdesc
(
ah
, 
NULL
, (*)&
ts
);

2562 i‡(
°©us
 =-
EINPROGRESS
)

2564 i‡(
°©us
 =-
EIO
) {

2565 
	`©h_dbg
(
comm⁄
, 
XMIT
, "ErrorÖrocessingÅx status\n");

2570 i‡(
ts
.
qid
 =
sc
->
bóc⁄
.
bóc⁄q
) {

2571 
sc
->
bóc⁄
.
tx_¥o˚s£d
 = 
åue
;

2572 
sc
->
bóc⁄
.
tx_œ°
 = !(
ts
.
ts_°©us
 & 
ATH9K_TXERR_MASK
);

2574 
	`©h9k_cß_upd©e
(
sc
);

2578 
txq
 = &
sc
->
tx
.txq[
ts
.
qid
];

2580 
	`©h_txq_lock
(
sc
, 
txq
);

2582 
	`TX_STAT_INC
(
txq
->
axq_qnum
, 
tx¥ocdesc
);

2584 
fifo_li°
 = &
txq
->
txq_fifo
[txq->
txq_èûidx
];

2585 i‡(
	`li°_em±y
(
fifo_li°
)) {

2586 
	`©h_txq_u∆ock
(
sc
, 
txq
);

2590 
bf
 = 
	`li°_fú°_íåy
(
fifo_li°
, 
©h_buf
, 
li°
);

2591 i‡(
bf
->
bf_°©e
.
°Æe
) {

2592 
	`li°_dñ
(&
bf
->
li°
);

2593 
	`©h_tx_ªtu∫_buf„r
(
sc
, 
bf
);

2594 
bf
 = 
	`li°_fú°_íåy
(
fifo_li°
, 
©h_buf
, 
li°
);

2597 
œ°bf
 = 
bf
->
bf_œ°bf
;

2599 
	`INIT_LIST_HEAD
(&
bf_hód
);

2600 i‡(
	`li°_is_œ°
(&
œ°bf
->
li°
, 
fifo_li°
)) {

2601 
	`li°_•li˚_èû_öô
(
fifo_li°
, &
bf_hód
);

2602 
	`INCR
(
txq
->
txq_èûidx
, 
ATH_TXFIFO_DEPTH
);

2604 i‡(!
	`li°_em±y
(&
txq
->
axq_q
)) {

2605 
li°_hód
 
bf_q
;

2607 
	`INIT_LIST_HEAD
(&
bf_q
);

2608 
txq
->
axq_lök
 = 
NULL
;

2609 
	`li°_•li˚_èû_öô
(&
txq
->
axq_q
, &
bf_q
);

2610 
	`©h_tx_txqaddbuf
(
sc
, 
txq
, &
bf_q
, 
åue
);

2613 
œ°bf
->
bf_°©e
.
°Æe
 = 
åue
;

2614 i‡(
bf
 !
œ°bf
)

2615 
	`li°_cut_posôi⁄
(&
bf_hód
, 
fifo_li°
,

2616 
œ°bf
->
li°
.
¥ev
);

2619 
	`©h_tx_¥o˚ss_buf„r
(
sc
, 
txq
, &
ts
, 
bf
, &
bf_hód
);

2620 
	`©h_txq_u∆ock_com∂ëe
(
sc
, 
txq
);

2622 
	}
}

2628 
	$©h_tx°©us_£tup
(
©h_so·c
 *
sc
, 
size
)

2630 
©h_descdma
 *
dd
 = &
sc
->
txsdma
;

2631 
u8
 
txs_Àn
 = 
sc
->
sc_ah
->
ˇps
.txs_len;

2633 
dd
->
dd_desc_Àn
 = 
size
 * 
txs_Àn
;

2634 
dd
->
dd_desc
 = 
	`dmam_Æloc_cohîít
(
sc
->
dev
, dd->
dd_desc_Àn
,

2635 &
dd
->
dd_desc_∑ddr
, 
GFP_KERNEL
);

2636 i‡(!
dd
->
dd_desc
)

2637  -
ENOMEM
;

2640 
	}
}

2642 
	$©h_tx_edma_öô
(
©h_so·c
 *
sc
)

2644 
îr
;

2646 
îr
 = 
	`©h_tx°©us_£tup
(
sc
, 
ATH_TXSTATUS_RING_SIZE
);

2647 i‡(!
îr
)

2648 
	`©h9k_hw_£tup_°©u§ög
(
sc
->
sc_ah
, sc->
txsdma
.
dd_desc
,

2649 
sc
->
txsdma
.
dd_desc_∑ddr
,

2650 
ATH_TXSTATUS_RING_SIZE
);

2652  
îr
;

2653 
	}
}

2655 
	$©h_tx_öô
(
©h_so·c
 *
sc
, 
nbufs
)

2657 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

2658 
îr‹
 = 0;

2660 
	`•ö_lock_öô
(&
sc
->
tx
.
txbuÊock
);

2662 
îr‹
 = 
	`©h_descdma_£tup
(
sc
, &sc->
tx
.
txdma
, &sc->tx.
txbuf
,

2663 "tx", 
nbufs
, 1, 1);

2664 i‡(
îr‹
 != 0) {

2665 
	`©h_îr
(
comm⁄
,

2666 "FaûedÅÿÆloˇãÅx des¸ùt‹s: %d\n", 
îr‹
);

2667  
îr‹
;

2670 
îr‹
 = 
	`©h_descdma_£tup
(
sc
, &sc->
bóc⁄
.
bdma
, &sc->bóc⁄.
bbuf
,

2671 "bóc⁄", 
ATH_BCBUF
, 1, 1);

2672 i‡(
îr‹
 != 0) {

2673 
	`©h_îr
(
comm⁄
,

2674 "FaûedÅÿÆloˇã bóc⁄ des¸ùt‹s: %d\n", 
îr‹
);

2675  
îr‹
;

2678 
	`INIT_DELAYED_WORK
(&
sc
->
tx_com∂ëe_w‹k
, 
©h_tx_com∂ëe_pﬁl_w‹k
);

2680 i‡(
sc
->
sc_ah
->
ˇps
.
hw_ˇps
 & 
ATH9K_HW_CAP_EDMA
)

2681 
îr‹
 = 
	`©h_tx_edma_öô
(
sc
);

2683  
îr‹
;

2684 
	}
}

2686 
	$©h_tx_node_öô
(
©h_so·c
 *
sc
, 
©h_node
 *
™
)

2688 
©h_©x_tid
 *
tid
;

2689 
©h_©x_ac
 *
ac
;

2690 
tidno
, 
a˙o
;

2692 
tidno
 = 0, 
tid
 = &
™
->tid[tidno];

2693 
tidno
 < 
IEEE80211_NUM_TIDS
;

2694 
tidno
++, 
tid
++) {

2695 
tid
->
™
 =án;

2696 
tid
->
tidno
 =Åidno;

2697 
tid
->
£q_°¨t
 =Åid->
£q_√xt
 = 0;

2698 
tid
->
baw_size
 = 
WME_MAX_BA
;

2699 
tid
->
baw_hód
 =Åid->
baw_èû
 = 0;

2700 
tid
->
sched
 = 
Ál£
;

2701 
tid
->
a˘ive
 = 
Ál£
;

2702 
	`__skb_queue_hód_öô
(&
tid
->
buf_q
);

2703 
	`__skb_queue_hód_öô
(&
tid
->
ªåy_q
);

2704 
a˙o
 = 
	`TID_TO_WME_AC
(
tidno
);

2705 
tid
->
ac
 = &
™
->ac[
a˙o
];

2708 
a˙o
 = 0, 
ac
 = &
™
->ac[acno];

2709 
a˙o
 < 
IEEE80211_NUM_ACS
;á˙o++, 
ac
++) {

2710 
ac
->
sched
 = 
Ál£
;

2711 
ac
->
˛ór_ps_fûãr
 = 
åue
;

2712 
ac
->
txq
 = 
sc
->
tx
.
txq_m≠
[
a˙o
];

2713 
	`INIT_LIST_HEAD
(&
ac
->
tid_q
);

2715 
	}
}

2717 
	$©h_tx_node_˛ónup
(
©h_so·c
 *
sc
, 
©h_node
 *
™
)

2719 
©h_©x_ac
 *
ac
;

2720 
©h_©x_tid
 *
tid
;

2721 
©h_txq
 *
txq
;

2722 
tidno
;

2724 
tidno
 = 0, 
tid
 = &
™
->tid[tidno];

2725 
tidno
 < 
IEEE80211_NUM_TIDS
;Åidno++, 
tid
++) {

2727 
ac
 = 
tid
->ac;

2728 
txq
 = 
ac
->txq;

2730 
	`©h_txq_lock
(
sc
, 
txq
);

2732 i‡(
tid
->
sched
) {

2733 
	`li°_dñ
(&
tid
->
li°
);

2734 
tid
->
sched
 = 
Ál£
;

2737 i‡(
ac
->
sched
) {

2738 
	`li°_dñ
(&
ac
->
li°
);

2739 
tid
->
ac
->
sched
 = 
Ál£
;

2742 
	`©h_tid_døö
(
sc
, 
txq
, 
tid
);

2743 
tid
->
a˘ive
 = 
Ál£
;

2745 
	`©h_txq_u∆ock
(
sc
, 
txq
);

2747 
	}
}

2749 #ifde‡
CPTCFG_ATH9K_TX99


2751 
	$©h9k_tx99_£nd
(
©h_so·c
 *
sc
, 
sk_buff
 *
skb
,

2752 
©h_tx_c⁄åﬁ
 *
tx˘l
)

2754 
õì80211_hdr
 *
hdr
 = (õì80211_hd∏*Ë
skb
->
d©a
;

2755 
©h_‰ame_öfo
 *
fi
 = 
	`gë_‰ame_öfo
(
skb
);

2756 
©h_comm⁄
 *
comm⁄
 = 
	`©h9k_hw_comm⁄
(
sc
->
sc_ah
);

2757 
©h_buf
 *
bf
;

2758 
∑dpos
, 
∑dsize
;

2760 
∑dpos
 = 
	`õì80211_hdæí
(
hdr
->
‰ame_c⁄åﬁ
);

2761 
∑dsize
 = 
∑dpos
 & 3;

2763 i‡(
∑dsize
 && 
skb
->
Àn
 > 
∑dpos
) {

2764 i‡(
	`skb_hódroom
(
skb
Ë< 
∑dsize
) {

2765 
	`©h_dbg
(
comm⁄
, 
XMIT
,

2767  -
EINVAL
;

2770 
	`skb_push
(
skb
, 
∑dsize
);

2771 
	`memmove
(
skb
->
d©a
, skb->d©®+ 
∑dsize
, 
∑dpos
);

2774 
fi
->
keyix
 = 
ATH9K_TXKEYIX_INVALID
;

2775 
fi
->
‰amñí
 = 
skb
->
Àn
 + 
FCS_LEN
;

2776 
fi
->
keyty≥
 = 
ATH9K_KEY_TYPE_CLEAR
;

2778 
bf
 = 
	`©h_tx_£tup_buf„r
(
sc
, 
tx˘l
->
txq
, 
NULL
, 
skb
);

2779 i‡(!
bf
) {

2780 
	`©h_dbg
(
comm⁄
, 
XMIT
, "tx99 buffer setup failed\n");

2781  -
EINVAL
;

2784 
	`©h_£t_øãs
(
sc
->
tx99_vif
, 
NULL
, 
bf
);

2786 
	`©h9k_hw_£t_desc_lök
(
sc
->
sc_ah
, 
bf
->
bf_desc
, bf->
bf_daddr
);

2787 
	`©h9k_hw_tx99_°¨t
(
sc
->
sc_ah
, 
tx˘l
->
txq
->
axq_qnum
);

2789 
	`©h_tx_£nd_n‹mÆ
(
sc
, 
tx˘l
->
txq
, 
NULL
, 
skb
);

2792 
	}
}

	@../ath.h

17 #i‚de‡
ATH_H


18 
	#ATH_H


	)

20 
	~<löux/ëhîdevi˚.h
>

21 
	~<löux/skbuff.h
>

22 
	~<löux/if_ëhî.h
>

23 
	~<löux/•ölock.h
>

24 
	~<√t/mac80211.h
>

34 
	#ATH_KEYMAX
 128

	)

36 c⁄° 
u8
 
	g©h_bˇ°_mac
[
ETH_ALEN
] = {0xff, 0xff, 0xff, 0xff, 0xff, 0xff};

38 
	s©h_™i
 {

39 
boﬁ
 
	mˇld⁄e
;

40 
	ml⁄gˇl_timî
;

41 
	msh‹tˇl_timî
;

42 
	mª£tˇl_timî
;

43 
	mcheck™i_timî
;

44 
timî_li°
 
	mtimî
;

47 
	s©h_cy˛e_cou¡îs
 {

48 
u32
 
	mcy˛es
;

49 
u32
 
	mrx_busy
;

50 
u32
 
	mrx_‰ame
;

51 
u32
 
	mtx_‰ame
;

54 
	e©h_devi˚_°©e
 {

55 
	mATH_HW_UNAVAILABLE
,

56 
	mATH_HW_INITIALIZED
,

59 
	e©h_›_Êags
 {

60 
	mATH_OP_INVALID
,

61 
	mATH_OP_BEACONS
,

62 
	mATH_OP_ANI_RUN
,

63 
	mATH_OP_PRIM_STA_VIF
,

64 
	mATH_OP_HW_RESET
,

65 
	mATH_OP_SCANNING
,

68 
	e©h_bus_ty≥
 {

69 
	mATH_PCI
,

70 
	mATH_AHB
,

71 
	mATH_USB
,

74 
	sªg_dmn_∑ú_m≠pög
 {

75 
u16
 
	mªg_domaö
;

76 
u16
 
	mªg_5ghz_˘l
;

77 
u16
 
	mªg_2ghz_˘l
;

80 
	s©h_ªguœt‹y
 {

81 
	mÆpha2
[2];

82 
u16
 
	mcou¡ry_code
;

83 
u16
 
	mmax_powî_Àvñ
;

84 
u16
 
	mcuºít_rd
;

85 
öt16_t
 
	mpowî_limô
;

86 
öt16_t
 
	mmax_™ã¬a_gaö
;

87 
ªg_dmn_∑ú_m≠pög
 *
	mªg∑ú
;

90 
	e©h_¸y±_ˇps
 {

91 
	mATH_CRYPT_CAP_CIPHER_AESCCM
 = 
BIT
(0),

92 
	mATH_CRYPT_CAP_MIC_COMBINED
 = 
BIT
(1),

95 
	s©h_keyvÆ
 {

96 
u8
 
	mkv_ty≥
;

97 
u8
 
	mkv_∑d
;

98 
u16
 
	mkv_Àn
;

99 
u8
 
	mkv_vÆ
[16];

100 
u8
 
	mkv_mic
[8];

101 
u8
 
	mkv_txmic
[8];

106 
	e©h_cùhî
 {

107 
	mATH_CIPHER_WEP
 = 0,

108 
	mATH_CIPHER_AES_OCB
 = 1,

109 
	mATH_CIPHER_AES_CCM
 = 2,

110 
	mATH_CIPHER_CKIP
 = 3,

111 
	mATH_CIPHER_TKIP
 = 4,

112 
	mATH_CIPHER_CLR
 = 5,

113 
	mATH_CIPHER_MIC
 = 127

125 
	s©h_›s
 {

126 (*
	mªad
)(*, 
u32
 
	mªg_off£t
);

127 (*
	mmu…i_ªad
)(*, 
u32
 *
	maddr
, u32 *
	mvÆ
, 
u16
 
	mcou¡
);

128 (*
	mwrôe
)(*, 
u32
 
	mvÆ
, u32 
	mªg_off£t
);

129 (*
	míabÀ_wrôe_buf„r
)(*);

130 (*
	mwrôe_Êush
) (*);

131 
u32
 (*
rmw
)(*, u32 
	mªg_off£t
, u32 
	m£t
, u32 
	m˛r
);

134 
	g©h_comm⁄
;

135 
	g©h_bus_›s
;

137 
	s©h_comm⁄
 {

138 *
	mah
;

139 *
	m¥iv
;

140 
õì80211_hw
 *
	mhw
;

141 
	mdebug_mask
;

142 
©h_devi˚_°©e
 
	m°©e
;

143 
	m›_Êags
;

144 
u32
 
	mch™_bw
;

146 
©h_™i
 
	m™i
;

148 
u16
 
	mˇchñsz
;

149 
u16
 
	mcuøid
;

150 
u8
 
	mmaˇddr
[
ETH_ALEN
];

151 
u8
 
	mcurbssid
[
ETH_ALEN
];

152 
u8
 
	mbssidmask
[
ETH_ALEN
];

154 
u32
 
	mrx_bufsize
;

156 
u32
 
	mkeymax
;

157 
DECLARE_BITMAP
(
keym≠
, 
ATH_KEYMAX
);

158 
DECLARE_BITMAP
(
tkù_keym≠
, 
ATH_KEYMAX
);

159 
DECLARE_BITMAP
(
ccmp_keym≠
, 
ATH_KEYMAX
);

160 
©h_¸y±_ˇps
 
	m¸y±_ˇps
;

162 
	m˛ockøã
;

164 
•ölock_t
 
	mcc_lock
;

165 
©h_cy˛e_cou¡îs
 
	mcc_™i
;

166 
©h_cy˛e_cou¡îs
 
	mcc_survey
;

168 
©h_ªguœt‹y
 
	mªguœt‹y
;

169 
©h_ªguœt‹y
 
	mªg_w‹ld_c›y
;

170 c⁄° 
©h_›s
 *
	m›s
;

171 c⁄° 
©h_bus_›s
 *
	mbus_›s
;

173 
boﬁ
 
	mbtc€x_íabÀd
;

174 
boﬁ
 
	mdißbÀ_™i
;

175 
boﬁ
 
	mbt_™t_divîsôy
;

177 
	mœ°_rssi
;

178 
õì80211_suµ‹ãd_b™d
 
	msb™ds
[
IEEE80211_NUM_BANDS
];

181 
sk_buff
 *
©h_rxbuf_Æloc
(
©h_comm⁄
 *
comm⁄
,

182 
u32
 
Àn
,

183 
gÂ_t
 
gÂ_mask
);

184 
boﬁ
 
©h_is_mybóc⁄
(
©h_comm⁄
 *
comm⁄
, 
õì80211_hdr
 *
hdr
);

186 
©h_hw_£tbssidmask
(
©h_comm⁄
 *
comm⁄
);

187 
©h_key_dñëe
(
©h_comm⁄
 *
comm⁄
, 
õì80211_key_c⁄f
 *
key
);

188 
©h_key_c⁄fig
(
©h_comm⁄
 *
comm⁄
,

189 
õì80211_vif
 *
vif
,

190 
õì80211_°a
 *
°a
,

191 
õì80211_key_c⁄f
 *
key
);

192 
boﬁ
 
©h_hw_keyª£t
(
©h_comm⁄
 *
comm⁄
, 
u16
 
íåy
);

193 
©h_hw_cy˛e_cou¡îs_upd©e
(
©h_comm⁄
 *
comm⁄
);

194 
öt32_t
 
©h_hw_gë_li°í_time
(
©h_comm⁄
 *
comm⁄
);

196 
	$__¥ötf
(3, 4)

197 
	`©h_¥ötk
(c⁄° *
Àvñ
, c⁄° 
©h_comm⁄
 *
comm⁄
,

198 c⁄° *
fmt
, ...);

200 
	#©h_emîg
(
comm⁄
, 
fmt
, ...) \

201 
	`©h_¥ötk
(
KERN_EMERG
, 
comm⁄
, 
fmt
, ##
__VA_ARGS__
)

	)

202 
	#©h_Æît
(
comm⁄
, 
fmt
, ...) \

203 
	`©h_¥ötk
(
KERN_ALERT
, 
comm⁄
, 
fmt
, ##
__VA_ARGS__
)

	)

204 
	#©h_¸ô
(
comm⁄
, 
fmt
, ...) \

205 
	`©h_¥ötk
(
KERN_CRIT
, 
comm⁄
, 
fmt
, ##
__VA_ARGS__
)

	)

206 
	#©h_îr
(
comm⁄
, 
fmt
, ...) \

207 
	`©h_¥ötk
(
KERN_ERR
, 
comm⁄
, 
fmt
, ##
__VA_ARGS__
)

	)

208 
	#©h_w¨n
(
comm⁄
, 
fmt
, ...) \

209 
	`©h_¥ötk
(
KERN_WARNING
, 
comm⁄
, 
fmt
, ##
__VA_ARGS__
)

	)

210 
	#©h_nŸi˚
(
comm⁄
, 
fmt
, ...) \

211 
	`©h_¥ötk
(
KERN_NOTICE
, 
comm⁄
, 
fmt
, ##
__VA_ARGS__
)

	)

212 
	#©h_öfo
(
comm⁄
, 
fmt
, ...) \

213 
	`©h_¥ötk
(
KERN_INFO
, 
comm⁄
, 
fmt
, ##
__VA_ARGS__
)

	)

246 
	eATH_DEBUG
 {

247 
ATH_DBG_RESET
 = 0x00000001,

248 
ATH_DBG_QUEUE
 = 0x00000002,

249 
ATH_DBG_EEPROM
 = 0x00000004,

250 
ATH_DBG_CALIBRATE
 = 0x00000008,

251 
ATH_DBG_INTERRUPT
 = 0x00000010,

252 
ATH_DBG_REGULATORY
 = 0x00000020,

253 
ATH_DBG_ANI
 = 0x00000040,

254 
ATH_DBG_XMIT
 = 0x00000080,

255 
ATH_DBG_BEACON
 = 0x00000100,

256 
ATH_DBG_CONFIG
 = 0x00000200,

257 
ATH_DBG_FATAL
 = 0x00000400,

258 
ATH_DBG_PS
 = 0x00000800,

259 
ATH_DBG_BTCOEX
 = 0x00001000,

260 
ATH_DBG_WMI
 = 0x00002000,

261 
ATH_DBG_BSTUCK
 = 0x00004000,

262 
ATH_DBG_MCI
 = 0x00008000,

263 
ATH_DBG_DFS
 = 0x00010000,

264 
ATH_DBG_WOW
 = 0x00020000,

265 
ATH_DBG_ANY
 = 0xffffffff

268 
	#ATH_DBG_DEFAULT
 (
ATH_DBG_FATAL
)

	)

270 #ifde‡
CPTCFG_ATH_DEBUG


272 
	#©h_dbg
(
comm⁄
, 
dbg_mask
, 
fmt
, ...) \

274 i‡((
comm⁄
)->
debug_mask
 & 
ATH_DBG_
##
dbg_mask
) \

275 
	`©h_¥ötk
(
KERN_DEBUG
, 
comm⁄
, 
fmt
, ##
__VA_ARGS__
); \

276 
	}
} 0)

	)

278 
	#ATH_DBG_WARN
(
foo
, 
¨g
...Ë
	`WARN
(foo,árg)

	)

279 
	#ATH_DBG_WARN_ON_ONCE
(
foo
Ë
	`WARN_ON_ONCE
(foo)

	)

283 
ölöe
 
__©åibuã__
 ((
	$f‹m©
 (
¥ötf
, 3, 4)))

284 
	$_©h_dbg
(
©h_comm⁄
 *
comm⁄
, 
ATH_DEBUG
 
dbg_mask
,

285 c⁄° *
fmt
, ...)

287 
	}
}

288 
	#©h_dbg
(
comm⁄
, 
dbg_mask
, 
fmt
, ...) \

289 
	`_©h_dbg
(
comm⁄
, 
ATH_DBG_
##
dbg_mask
, 
fmt
, ##
__VA_ARGS__
)

	)

291 
	#ATH_DBG_WARN
(
foo
, 
¨g
...Ëdÿ{} 0)

	)

292 
	#ATH_DBG_WARN_ON_ONCE
(
foo
) ({ \

293 
__ªt_w¨n_⁄˚
 = !!(
foo
); \

294 
	`u∆ikñy
(
__ªt_w¨n_⁄˚
); \

295 })

	)

300 c⁄° *
©h_›mode_to_°rög
(
∆80211_i·y≥
 
›mode
);

	@../dfs_pattern_detector.h

17 #i‚de‡
DFS_PATTERN_DETECTOR_H


18 
	#DFS_PATTERN_DETECTOR_H


	)

20 
	~<löux/ty≥s.h
>

21 
	~<löux/li°.h
>

22 
	~<löux/∆80211.h
>

27 
	s©h_dfs_poﬁ_°©s
 {

28 
u32
 
	mpoﬁ_ª„ªn˚
;

29 
u32
 
	mpul£_Æloˇãd
;

30 
u32
 
	mpul£_Æloc_îr‹
;

31 
u32
 
	mpul£_u£d
;

32 
u32
 
	mp£q_Æloˇãd
;

33 
u32
 
	mp£q_Æloc_îr‹
;

34 
u32
 
	mp£q_u£d
;

44 
	spul£_evít
 {

45 
u64
 
	mts
;

46 
u16
 
	m‰eq
;

47 
u8
 
	mwidth
;

48 
u8
 
	mrssi
;

63 
	sød¨_dëe˘‹_•ecs
 {

64 
u8
 
	mty≥_id
;

65 
u8
 
	mwidth_mö
;

66 
u8
 
	mwidth_max
;

67 
u16
 
	m¥i_mö
;

68 
u16
 
	m¥i_max
;

69 
u8
 
	mnum_¥i
;

70 
u8
 
	mµb
;

71 
u8
 
	mµb_thªsh
;

72 
u8
 
	mmax_¥i_tﬁî™˚
;

86 
	sdfs_∑âîn_dëe˘‹
 {

87 (*
	mexô
)(
dfs_∑âîn_dëe˘‹
 *
	mdpd
);

88 
boﬁ
 (*
£t_dfs_domaö
)(
dfs_∑âîn_dëe˘‹
 *
	mdpd
,

89 
∆80211_dfs_ªgi⁄s
 
	mªgi⁄
);

90 
boﬁ
 (*
add_pul£
)(
dfs_∑âîn_dëe˘‹
 *
	mdpd
,

91 
pul£_evít
 *
	m≥
);

93 
©h_dfs_poﬁ_°©s
 (*
gë_°©s
)(
dfs_∑âîn_dëe˘‹
 *
	mdpd
);

94 
∆80211_dfs_ªgi⁄s
 
	mªgi⁄
;

95 
u8
 
	mnum_ød¨_ty≥s
;

96 
u64
 
	mœ°_pul£_ts
;

98 
©h_comm⁄
 *
	mcomm⁄
;

100 c⁄° 
ød¨_dëe˘‹_•ecs
 *
	mød¨_•ec
;

101 
li°_hód
 
	mch™√l_dëe˘‹s
;

109 
dfs_∑âîn_dëe˘‹
 *

110 
dfs_∑âîn_dëe˘‹_öô
(
©h_comm⁄
 *
comm⁄
,

111 
∆80211_dfs_ªgi⁄s
 
ªgi⁄
);

	@../reg.h

17 #i‚de‡
ATH_REGISTERS_H


18 
	#ATH_REGISTERS_H


	)

20 
	#AR_MIBC
 0x0040

	)

21 
	#AR_MIBC_COW
 0x00000001

	)

22 
	#AR_MIBC_FMC
 0x00000002

	)

23 
	#AR_MIBC_CMC
 0x00000004

	)

24 
	#AR_MIBC_MCS
 0x00000008

	)

26 
	#AR_STA_ID0
 0x8000

	)

27 
	#AR_STA_ID1
 0x8004

	)

28 
	#AR_STA_ID1_SADH_MASK
 0x0000ffff

	)

34 
	#AR_BSSMSKL
 0x80e0

	)

35 
	#AR_BSSMSKU
 0x80e4

	)

37 
	#AR_TFCNT
 0x80ec

	)

38 
	#AR_RFCNT
 0x80f0

	)

39 
	#AR_RCCNT
 0x80f4

	)

40 
	#AR_CCCNT
 0x80f8

	)

42 
	#AR_KEYTABLE_0
 0x8800

	)

43 
	#AR_KEYTABLE
(
_n
Ë(
AR_KEYTABLE_0
 + ((_n)*32))

	)

44 
	#AR_KEY_CACHE_SIZE
 128

	)

45 
	#AR_RSVD_KEYTABLE_ENTRIES
 4

	)

46 
	#AR_KEY_TYPE
 0x00000007

	)

47 
	#AR_KEYTABLE_TYPE_40
 0x00000000

	)

48 
	#AR_KEYTABLE_TYPE_104
 0x00000001

	)

49 
	#AR_KEYTABLE_TYPE_128
 0x00000003

	)

50 
	#AR_KEYTABLE_TYPE_TKIP
 0x00000004

	)

51 
	#AR_KEYTABLE_TYPE_AES
 0x00000005

	)

52 
	#AR_KEYTABLE_TYPE_CCM
 0x00000006

	)

53 
	#AR_KEYTABLE_TYPE_CLR
 0x00000007

	)

54 
	#AR_KEYTABLE_ANT
 0x00000008

	)

55 
	#AR_KEYTABLE_VALID
 0x00008000

	)

56 
	#AR_KEYTABLE_KEY0
(
_n
Ë(
	`AR_KEYTABLE
(_nË+ 0)

	)

57 
	#AR_KEYTABLE_KEY1
(
_n
Ë(
	`AR_KEYTABLE
(_nË+ 4)

	)

58 
	#AR_KEYTABLE_KEY2
(
_n
Ë(
	`AR_KEYTABLE
(_nË+ 8)

	)

59 
	#AR_KEYTABLE_KEY3
(
_n
Ë(
	`AR_KEYTABLE
(_nË+ 12)

	)

60 
	#AR_KEYTABLE_KEY4
(
_n
Ë(
	`AR_KEYTABLE
(_nË+ 16)

	)

61 
	#AR_KEYTABLE_TYPE
(
_n
Ë(
	`AR_KEYTABLE
(_nË+ 20)

	)

62 
	#AR_KEYTABLE_MAC0
(
_n
Ë(
	`AR_KEYTABLE
(_nË+ 24)

	)

63 
	#AR_KEYTABLE_MAC1
(
_n
Ë(
	`AR_KEYTABLE
(_nË+ 28)

	)

	@../regd.h

17 #i‚de‡
REGD_H


18 
	#REGD_H


	)

20 
	~<löux/∆80211.h
>

21 
	~<√t/cfg80211.h
>

23 
	~"©h.h
"

25 
	e˘l_group
 {

26 
	mCTL_FCC
 = 0x10,

27 
	mCTL_MKK
 = 0x40,

28 
	mCTL_ETSI
 = 0x30,

31 
	#NO_CTL
 0xff

	)

32 
	#SD_NO_CTL
 0xE0

	)

33 
	#NO_CTL
 0xff

	)

34 
	#CTL_11A
 0

	)

35 
	#CTL_11B
 1

	)

36 
	#CTL_11G
 2

	)

37 
	#CTL_2GHT20
 5

	)

38 
	#CTL_5GHT20
 6

	)

39 
	#CTL_2GHT40
 7

	)

40 
	#CTL_5GHT40
 8

	)

42 
	#CTRY_DEBUG
 0x1ff

	)

43 
	#CTRY_DEFAULT
 0

	)

45 
	#COUNTRY_ERD_FLAG
 0x8000

	)

46 
	#WORLDWIDE_ROAMING_FLAG
 0x4000

	)

48 
	#MULTI_DOMAIN_MASK
 0xFF00

	)

50 
	#WORLD_SKU_MASK
 0x00F0

	)

51 
	#WORLD_SKU_PREFIX
 0x0060

	)

53 
	#CHANNEL_HALF_BW
 10

	)

54 
	#CHANNEL_QUARTER_BW
 5

	)

56 
	scou¡ry_code_to_íum_rd
 {

57 
u16
 
	mcou¡ryCode
;

58 
u16
 
	mªgDmnEnum
;

59 c⁄° *
	misoName
;

62 
	eCou¡ryCode
 {

63 
	mCTRY_ALBANIA
 = 8,

64 
	mCTRY_ALGERIA
 = 12,

65 
	mCTRY_ARGENTINA
 = 32,

66 
	mCTRY_ARMENIA
 = 51,

67 
	mCTRY_ARUBA
 = 533,

68 
	mCTRY_AUSTRALIA
 = 36,

69 
	mCTRY_AUSTRIA
 = 40,

70 
	mCTRY_AZERBAIJAN
 = 31,

71 
	mCTRY_BAHRAIN
 = 48,

72 
	mCTRY_BANGLADESH
 = 50,

73 
	mCTRY_BARBADOS
 = 52,

74 
	mCTRY_BELARUS
 = 112,

75 
	mCTRY_BELGIUM
 = 56,

76 
	mCTRY_BELIZE
 = 84,

77 
	mCTRY_BOLIVIA
 = 68,

78 
	mCTRY_BOSNIA_HERZ
 = 70,

79 
	mCTRY_BRAZIL
 = 76,

80 
	mCTRY_BRUNEI_DARUSSALAM
 = 96,

81 
	mCTRY_BULGARIA
 = 100,

82 
	mCTRY_CAMBODIA
 = 116,

83 
	mCTRY_CANADA
 = 124,

84 
	mCTRY_CHILE
 = 152,

85 
	mCTRY_CHINA
 = 156,

86 
	mCTRY_COLOMBIA
 = 170,

87 
	mCTRY_COSTA_RICA
 = 188,

88 
	mCTRY_CROATIA
 = 191,

89 
	mCTRY_CYPRUS
 = 196,

90 
	mCTRY_CZECH
 = 203,

91 
	mCTRY_DENMARK
 = 208,

92 
	mCTRY_DOMINICAN_REPUBLIC
 = 214,

93 
	mCTRY_ECUADOR
 = 218,

94 
	mCTRY_EGYPT
 = 818,

95 
	mCTRY_EL_SALVADOR
 = 222,

96 
	mCTRY_ESTONIA
 = 233,

97 
	mCTRY_FAEROE_ISLANDS
 = 234,

98 
	mCTRY_FINLAND
 = 246,

99 
	mCTRY_FRANCE
 = 250,

100 
	mCTRY_GEORGIA
 = 268,

101 
	mCTRY_GERMANY
 = 276,

102 
	mCTRY_GREECE
 = 300,

103 
	mCTRY_GREENLAND
 = 304,

104 
	mCTRY_GRENADA
 = 308,

105 
	mCTRY_GUAM
 = 316,

106 
	mCTRY_GUATEMALA
 = 320,

107 
	mCTRY_HAITI
 = 332,

108 
	mCTRY_HONDURAS
 = 340,

109 
	mCTRY_HONG_KONG
 = 344,

110 
	mCTRY_HUNGARY
 = 348,

111 
	mCTRY_ICELAND
 = 352,

112 
	mCTRY_INDIA
 = 356,

113 
	mCTRY_INDONESIA
 = 360,

114 
	mCTRY_IRAN
 = 364,

115 
	mCTRY_IRAQ
 = 368,

116 
	mCTRY_IRELAND
 = 372,

117 
	mCTRY_ISRAEL
 = 376,

118 
	mCTRY_ITALY
 = 380,

119 
	mCTRY_JAMAICA
 = 388,

120 
	mCTRY_JAPAN
 = 392,

121 
	mCTRY_JORDAN
 = 400,

122 
	mCTRY_KAZAKHSTAN
 = 398,

123 
	mCTRY_KENYA
 = 404,

124 
	mCTRY_KOREA_NORTH
 = 408,

125 
	mCTRY_KOREA_ROC
 = 410,

126 
	mCTRY_KOREA_ROC2
 = 411,

127 
	mCTRY_KOREA_ROC3
 = 412,

128 
	mCTRY_KUWAIT
 = 414,

129 
	mCTRY_LATVIA
 = 428,

130 
	mCTRY_LEBANON
 = 422,

131 
	mCTRY_LIBYA
 = 434,

132 
	mCTRY_LIECHTENSTEIN
 = 438,

133 
	mCTRY_LITHUANIA
 = 440,

134 
	mCTRY_LUXEMBOURG
 = 442,

135 
	mCTRY_MACAU
 = 446,

136 
	mCTRY_MACEDONIA
 = 807,

137 
	mCTRY_MALAYSIA
 = 458,

138 
	mCTRY_MALTA
 = 470,

139 
	mCTRY_MEXICO
 = 484,

140 
	mCTRY_MONACO
 = 492,

141 
	mCTRY_MOROCCO
 = 504,

142 
	mCTRY_NEPAL
 = 524,

143 
	mCTRY_NETHERLANDS
 = 528,

144 
	mCTRY_NETHERLANDS_ANTILLES
 = 530,

145 
	mCTRY_NEW_ZEALAND
 = 554,

146 
	mCTRY_NICARAGUA
 = 558,

147 
	mCTRY_NORWAY
 = 578,

148 
	mCTRY_OMAN
 = 512,

149 
	mCTRY_PAKISTAN
 = 586,

150 
	mCTRY_PANAMA
 = 591,

151 
	mCTRY_PAPUA_NEW_GUINEA
 = 598,

152 
	mCTRY_PARAGUAY
 = 600,

153 
	mCTRY_PERU
 = 604,

154 
	mCTRY_PHILIPPINES
 = 608,

155 
	mCTRY_POLAND
 = 616,

156 
	mCTRY_PORTUGAL
 = 620,

157 
	mCTRY_PUERTO_RICO
 = 630,

158 
	mCTRY_QATAR
 = 634,

159 
	mCTRY_ROMANIA
 = 642,

160 
	mCTRY_RUSSIA
 = 643,

161 
	mCTRY_SAUDI_ARABIA
 = 682,

162 
	mCTRY_SERBIA_MONTENEGRO
 = 891,

163 
	mCTRY_SINGAPORE
 = 702,

164 
	mCTRY_SLOVAKIA
 = 703,

165 
	mCTRY_SLOVENIA
 = 705,

166 
	mCTRY_SOUTH_AFRICA
 = 710,

167 
	mCTRY_SPAIN
 = 724,

168 
	mCTRY_SRI_LANKA
 = 144,

169 
	mCTRY_SWEDEN
 = 752,

170 
	mCTRY_SWITZERLAND
 = 756,

171 
	mCTRY_SYRIA
 = 760,

172 
	mCTRY_TAIWAN
 = 158,

173 
	mCTRY_THAILAND
 = 764,

174 
	mCTRY_TRINIDAD_Y_TOBAGO
 = 780,

175 
	mCTRY_TUNISIA
 = 788,

176 
	mCTRY_TURKEY
 = 792,

177 
	mCTRY_UAE
 = 784,

178 
	mCTRY_UKRAINE
 = 804,

179 
	mCTRY_UNITED_KINGDOM
 = 826,

180 
	mCTRY_UNITED_STATES
 = 840,

181 
	mCTRY_UNITED_STATES_FCC49
 = 842,

182 
	mCTRY_URUGUAY
 = 858,

183 
	mCTRY_UZBEKISTAN
 = 860,

184 
	mCTRY_VENEZUELA
 = 862,

185 
	mCTRY_VIET_NAM
 = 704,

186 
	mCTRY_YEMEN
 = 887,

187 
	mCTRY_ZIMBABWE
 = 716,

188 
	mCTRY_JAPAN1
 = 393,

189 
	mCTRY_JAPAN2
 = 394,

190 
	mCTRY_JAPAN3
 = 395,

191 
	mCTRY_JAPAN4
 = 396,

192 
	mCTRY_JAPAN5
 = 397,

193 
	mCTRY_JAPAN6
 = 4006,

194 
	mCTRY_JAPAN7
 = 4007,

195 
	mCTRY_JAPAN8
 = 4008,

196 
	mCTRY_JAPAN9
 = 4009,

197 
	mCTRY_JAPAN10
 = 4010,

198 
	mCTRY_JAPAN11
 = 4011,

199 
	mCTRY_JAPAN12
 = 4012,

200 
	mCTRY_JAPAN13
 = 4013,

201 
	mCTRY_JAPAN14
 = 4014,

202 
	mCTRY_JAPAN15
 = 4015,

203 
	mCTRY_JAPAN16
 = 4016,

204 
	mCTRY_JAPAN17
 = 4017,

205 
	mCTRY_JAPAN18
 = 4018,

206 
	mCTRY_JAPAN19
 = 4019,

207 
	mCTRY_JAPAN20
 = 4020,

208 
	mCTRY_JAPAN21
 = 4021,

209 
	mCTRY_JAPAN22
 = 4022,

210 
	mCTRY_JAPAN23
 = 4023,

211 
	mCTRY_JAPAN24
 = 4024,

212 
	mCTRY_JAPAN25
 = 4025,

213 
	mCTRY_JAPAN26
 = 4026,

214 
	mCTRY_JAPAN27
 = 4027,

215 
	mCTRY_JAPAN28
 = 4028,

216 
	mCTRY_JAPAN29
 = 4029,

217 
	mCTRY_JAPAN30
 = 4030,

218 
	mCTRY_JAPAN31
 = 4031,

219 
	mCTRY_JAPAN32
 = 4032,

220 
	mCTRY_JAPAN33
 = 4033,

221 
	mCTRY_JAPAN34
 = 4034,

222 
	mCTRY_JAPAN35
 = 4035,

223 
	mCTRY_JAPAN36
 = 4036,

224 
	mCTRY_JAPAN37
 = 4037,

225 
	mCTRY_JAPAN38
 = 4038,

226 
	mCTRY_JAPAN39
 = 4039,

227 
	mCTRY_JAPAN40
 = 4040,

228 
	mCTRY_JAPAN41
 = 4041,

229 
	mCTRY_JAPAN42
 = 4042,

230 
	mCTRY_JAPAN43
 = 4043,

231 
	mCTRY_JAPAN44
 = 4044,

232 
	mCTRY_JAPAN45
 = 4045,

233 
	mCTRY_JAPAN46
 = 4046,

234 
	mCTRY_JAPAN47
 = 4047,

235 
	mCTRY_JAPAN48
 = 4048,

236 
	mCTRY_JAPAN49
 = 4049,

237 
	mCTRY_JAPAN50
 = 4050,

238 
	mCTRY_JAPAN51
 = 4051,

239 
	mCTRY_JAPAN52
 = 4052,

240 
	mCTRY_JAPAN53
 = 4053,

241 
	mCTRY_JAPAN54
 = 4054,

242 
	mCTRY_JAPAN55
 = 4055,

243 
	mCTRY_JAPAN56
 = 4056,

244 
	mCTRY_JAPAN57
 = 4057,

245 
	mCTRY_JAPAN58
 = 4058,

246 
	mCTRY_JAPAN59
 = 4059,

247 
	mCTRY_AUSTRALIA2
 = 5000,

248 
	mCTRY_CANADA2
 = 5001,

249 
	mCTRY_BELGIUM2
 = 5002

252 
boﬁ
 
©h_is_w‹ld_ªgd
(
©h_ªguœt‹y
 *
ªg
);

253 
boﬁ
 
©h_is_49ghz_Ælowed
(
u16
 
ªdomaö
);

254 
©h_ªgd_öô
(
©h_ªguœt‹y
 *
ªg
, 
wùhy
 *wiphy,

255 (*
ªg_nŸifõr
)(
wùhy
 *wiphy,

256 
ªguœt‹y_ªque°
 *
ªque°
));

257 
u32
 
	`©h_ªgd_gë_b™d_˘l
(
©h_ªguœt‹y
 *
ªg
,

258 
õì80211_b™d
 
b™d
);

259 
	`©h_ªg_nŸifõr_≠∂y
(
wùhy
 *wiphy,

260 
ªguœt‹y_ªque°
 *
ªque°
,

261 
©h_ªguœt‹y
 *
ªg
);

	@
1
.
1
/usr/include
106
1299
ahb.c
ani.c
ani.h
antenna.c
ar5008_initvals.h
ar5008_phy.c
ar9001_initvals.h
ar9002_calib.c
ar9002_hw.c
ar9002_initvals.h
ar9002_mac.c
ar9002_phy.c
ar9002_phy.h
ar9003_2p2_initvals.h
ar9003_buffalo_initvals.h
ar9003_calib.c
ar9003_eeprom.c
ar9003_eeprom.h
ar9003_hw.c
ar9003_mac.c
ar9003_mac.h
ar9003_mci.c
ar9003_mci.h
ar9003_paprd.c
ar9003_phy.c
ar9003_phy.h
ar9003_rtt.c
ar9003_rtt.h
ar9003_wow.c
ar9330_1p1_initvals.h
ar9330_1p2_initvals.h
ar9340_initvals.h
ar9462_2p0_initvals.h
ar9462_2p1_initvals.h
ar9485_initvals.h
ar953x_initvals.h
ar955x_1p0_initvals.h
ar9565_1p0_initvals.h
ar9565_1p1_initvals.h
ar9580_1p0_initvals.h
ath9k.h
ath9k.mod.c
ath9k_common.mod.c
ath9k_hw.mod.c
beacon.c
btcoex.c
btcoex.h
calib.c
calib.h
common-beacon.c
common-beacon.h
common-debug.c
common-debug.h
common-init.c
common-init.h
common.c
common.h
debug.c
debug.h
debug_sta.c
dfs.c
dfs.h
dfs_debug.c
dfs_debug.h
eeprom.c
eeprom.h
eeprom_4k.c
eeprom_9287.c
eeprom_def.c
gpio.c
hif_usb.c
hif_usb.h
htc.h
htc_drv_beacon.c
htc_drv_debug.c
htc_drv_gpio.c
htc_drv_init.c
htc_drv_main.c
htc_drv_txrx.c
htc_hst.c
htc_hst.h
hw-ops.h
hw.c
hw.h
init.c
link.c
mac.c
mac.h
main.c
mci.c
mci.h
pci.c
phy.h
recv.c
reg.h
spectral.c
spectral.h
tx99.c
wmi.c
wmi.h
wow.c
xmit.c
../ath.h
../dfs_pattern_detector.h
../reg.h
../regd.h
